
RotorControlSTM32_CAN_Home_RTC_GoToNextPassStartingPoint_Pass_Semihosting.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c084  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001a0c  0800c148  0800c148  0001c148  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800db54  0800db54  00020260  2**0
                  CONTENTS
  4 .ARM          00000008  0800db54  0800db54  0001db54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800db5c  0800db5c  00020260  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800db5c  0800db5c  0001db5c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800db60  0800db60  0001db60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000260  20000000  0800db64  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000310  20000260  0800ddc4  00020260  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000570  0800ddc4  00020570  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020260  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000261c  00000000  00000000  00020288  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000004f7  00000000  00000000  000228a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000001c8  00000000  00000000  00022da0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000001a0  00000000  00000000  00022f68  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000e437  00000000  00000000  00023108  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001599  00000000  00000000  0003153f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000477ff  00000000  00000000  00032ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0007a2d7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002388  00000000  00000000  0007a354  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000260 	.word	0x20000260
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800c12c 	.word	0x0800c12c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000264 	.word	0x20000264
 8000104:	0800c12c 	.word	0x0800c12c

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr

08000116 <strcmp>:
 8000116:	7802      	ldrb	r2, [r0, #0]
 8000118:	780b      	ldrb	r3, [r1, #0]
 800011a:	2a00      	cmp	r2, #0
 800011c:	d003      	beq.n	8000126 <strcmp+0x10>
 800011e:	3001      	adds	r0, #1
 8000120:	3101      	adds	r1, #1
 8000122:	429a      	cmp	r2, r3
 8000124:	d0f7      	beq.n	8000116 <strcmp>
 8000126:	1ad0      	subs	r0, r2, r3
 8000128:	4770      	bx	lr
	...

0800012c <__gnu_thumb1_case_uqi>:
 800012c:	b402      	push	{r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0049      	lsls	r1, r1, #1
 8000134:	5c09      	ldrb	r1, [r1, r0]
 8000136:	0049      	lsls	r1, r1, #1
 8000138:	448e      	add	lr, r1
 800013a:	bc02      	pop	{r1}
 800013c:	4770      	bx	lr
 800013e:	46c0      	nop			; (mov r8, r8)

08000140 <__gnu_thumb1_case_uhi>:
 8000140:	b403      	push	{r0, r1}
 8000142:	4671      	mov	r1, lr
 8000144:	0849      	lsrs	r1, r1, #1
 8000146:	0040      	lsls	r0, r0, #1
 8000148:	0049      	lsls	r1, r1, #1
 800014a:	5a09      	ldrh	r1, [r1, r0]
 800014c:	0049      	lsls	r1, r1, #1
 800014e:	448e      	add	lr, r1
 8000150:	bc03      	pop	{r0, r1}
 8000152:	4770      	bx	lr

08000154 <__udivsi3>:
 8000154:	2200      	movs	r2, #0
 8000156:	0843      	lsrs	r3, r0, #1
 8000158:	428b      	cmp	r3, r1
 800015a:	d374      	bcc.n	8000246 <__udivsi3+0xf2>
 800015c:	0903      	lsrs	r3, r0, #4
 800015e:	428b      	cmp	r3, r1
 8000160:	d35f      	bcc.n	8000222 <__udivsi3+0xce>
 8000162:	0a03      	lsrs	r3, r0, #8
 8000164:	428b      	cmp	r3, r1
 8000166:	d344      	bcc.n	80001f2 <__udivsi3+0x9e>
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d328      	bcc.n	80001c0 <__udivsi3+0x6c>
 800016e:	0c03      	lsrs	r3, r0, #16
 8000170:	428b      	cmp	r3, r1
 8000172:	d30d      	bcc.n	8000190 <__udivsi3+0x3c>
 8000174:	22ff      	movs	r2, #255	; 0xff
 8000176:	0209      	lsls	r1, r1, #8
 8000178:	ba12      	rev	r2, r2
 800017a:	0c03      	lsrs	r3, r0, #16
 800017c:	428b      	cmp	r3, r1
 800017e:	d302      	bcc.n	8000186 <__udivsi3+0x32>
 8000180:	1212      	asrs	r2, r2, #8
 8000182:	0209      	lsls	r1, r1, #8
 8000184:	d065      	beq.n	8000252 <__udivsi3+0xfe>
 8000186:	0b03      	lsrs	r3, r0, #12
 8000188:	428b      	cmp	r3, r1
 800018a:	d319      	bcc.n	80001c0 <__udivsi3+0x6c>
 800018c:	e000      	b.n	8000190 <__udivsi3+0x3c>
 800018e:	0a09      	lsrs	r1, r1, #8
 8000190:	0bc3      	lsrs	r3, r0, #15
 8000192:	428b      	cmp	r3, r1
 8000194:	d301      	bcc.n	800019a <__udivsi3+0x46>
 8000196:	03cb      	lsls	r3, r1, #15
 8000198:	1ac0      	subs	r0, r0, r3
 800019a:	4152      	adcs	r2, r2
 800019c:	0b83      	lsrs	r3, r0, #14
 800019e:	428b      	cmp	r3, r1
 80001a0:	d301      	bcc.n	80001a6 <__udivsi3+0x52>
 80001a2:	038b      	lsls	r3, r1, #14
 80001a4:	1ac0      	subs	r0, r0, r3
 80001a6:	4152      	adcs	r2, r2
 80001a8:	0b43      	lsrs	r3, r0, #13
 80001aa:	428b      	cmp	r3, r1
 80001ac:	d301      	bcc.n	80001b2 <__udivsi3+0x5e>
 80001ae:	034b      	lsls	r3, r1, #13
 80001b0:	1ac0      	subs	r0, r0, r3
 80001b2:	4152      	adcs	r2, r2
 80001b4:	0b03      	lsrs	r3, r0, #12
 80001b6:	428b      	cmp	r3, r1
 80001b8:	d301      	bcc.n	80001be <__udivsi3+0x6a>
 80001ba:	030b      	lsls	r3, r1, #12
 80001bc:	1ac0      	subs	r0, r0, r3
 80001be:	4152      	adcs	r2, r2
 80001c0:	0ac3      	lsrs	r3, r0, #11
 80001c2:	428b      	cmp	r3, r1
 80001c4:	d301      	bcc.n	80001ca <__udivsi3+0x76>
 80001c6:	02cb      	lsls	r3, r1, #11
 80001c8:	1ac0      	subs	r0, r0, r3
 80001ca:	4152      	adcs	r2, r2
 80001cc:	0a83      	lsrs	r3, r0, #10
 80001ce:	428b      	cmp	r3, r1
 80001d0:	d301      	bcc.n	80001d6 <__udivsi3+0x82>
 80001d2:	028b      	lsls	r3, r1, #10
 80001d4:	1ac0      	subs	r0, r0, r3
 80001d6:	4152      	adcs	r2, r2
 80001d8:	0a43      	lsrs	r3, r0, #9
 80001da:	428b      	cmp	r3, r1
 80001dc:	d301      	bcc.n	80001e2 <__udivsi3+0x8e>
 80001de:	024b      	lsls	r3, r1, #9
 80001e0:	1ac0      	subs	r0, r0, r3
 80001e2:	4152      	adcs	r2, r2
 80001e4:	0a03      	lsrs	r3, r0, #8
 80001e6:	428b      	cmp	r3, r1
 80001e8:	d301      	bcc.n	80001ee <__udivsi3+0x9a>
 80001ea:	020b      	lsls	r3, r1, #8
 80001ec:	1ac0      	subs	r0, r0, r3
 80001ee:	4152      	adcs	r2, r2
 80001f0:	d2cd      	bcs.n	800018e <__udivsi3+0x3a>
 80001f2:	09c3      	lsrs	r3, r0, #7
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d301      	bcc.n	80001fc <__udivsi3+0xa8>
 80001f8:	01cb      	lsls	r3, r1, #7
 80001fa:	1ac0      	subs	r0, r0, r3
 80001fc:	4152      	adcs	r2, r2
 80001fe:	0983      	lsrs	r3, r0, #6
 8000200:	428b      	cmp	r3, r1
 8000202:	d301      	bcc.n	8000208 <__udivsi3+0xb4>
 8000204:	018b      	lsls	r3, r1, #6
 8000206:	1ac0      	subs	r0, r0, r3
 8000208:	4152      	adcs	r2, r2
 800020a:	0943      	lsrs	r3, r0, #5
 800020c:	428b      	cmp	r3, r1
 800020e:	d301      	bcc.n	8000214 <__udivsi3+0xc0>
 8000210:	014b      	lsls	r3, r1, #5
 8000212:	1ac0      	subs	r0, r0, r3
 8000214:	4152      	adcs	r2, r2
 8000216:	0903      	lsrs	r3, r0, #4
 8000218:	428b      	cmp	r3, r1
 800021a:	d301      	bcc.n	8000220 <__udivsi3+0xcc>
 800021c:	010b      	lsls	r3, r1, #4
 800021e:	1ac0      	subs	r0, r0, r3
 8000220:	4152      	adcs	r2, r2
 8000222:	08c3      	lsrs	r3, r0, #3
 8000224:	428b      	cmp	r3, r1
 8000226:	d301      	bcc.n	800022c <__udivsi3+0xd8>
 8000228:	00cb      	lsls	r3, r1, #3
 800022a:	1ac0      	subs	r0, r0, r3
 800022c:	4152      	adcs	r2, r2
 800022e:	0883      	lsrs	r3, r0, #2
 8000230:	428b      	cmp	r3, r1
 8000232:	d301      	bcc.n	8000238 <__udivsi3+0xe4>
 8000234:	008b      	lsls	r3, r1, #2
 8000236:	1ac0      	subs	r0, r0, r3
 8000238:	4152      	adcs	r2, r2
 800023a:	0843      	lsrs	r3, r0, #1
 800023c:	428b      	cmp	r3, r1
 800023e:	d301      	bcc.n	8000244 <__udivsi3+0xf0>
 8000240:	004b      	lsls	r3, r1, #1
 8000242:	1ac0      	subs	r0, r0, r3
 8000244:	4152      	adcs	r2, r2
 8000246:	1a41      	subs	r1, r0, r1
 8000248:	d200      	bcs.n	800024c <__udivsi3+0xf8>
 800024a:	4601      	mov	r1, r0
 800024c:	4152      	adcs	r2, r2
 800024e:	4610      	mov	r0, r2
 8000250:	4770      	bx	lr
 8000252:	e7ff      	b.n	8000254 <__udivsi3+0x100>
 8000254:	b501      	push	{r0, lr}
 8000256:	2000      	movs	r0, #0
 8000258:	f000 f8f0 	bl	800043c <__aeabi_idiv0>
 800025c:	bd02      	pop	{r1, pc}
 800025e:	46c0      	nop			; (mov r8, r8)

08000260 <__aeabi_uidivmod>:
 8000260:	2900      	cmp	r1, #0
 8000262:	d0f7      	beq.n	8000254 <__udivsi3+0x100>
 8000264:	e776      	b.n	8000154 <__udivsi3>
 8000266:	4770      	bx	lr

08000268 <__divsi3>:
 8000268:	4603      	mov	r3, r0
 800026a:	430b      	orrs	r3, r1
 800026c:	d47f      	bmi.n	800036e <__divsi3+0x106>
 800026e:	2200      	movs	r2, #0
 8000270:	0843      	lsrs	r3, r0, #1
 8000272:	428b      	cmp	r3, r1
 8000274:	d374      	bcc.n	8000360 <__divsi3+0xf8>
 8000276:	0903      	lsrs	r3, r0, #4
 8000278:	428b      	cmp	r3, r1
 800027a:	d35f      	bcc.n	800033c <__divsi3+0xd4>
 800027c:	0a03      	lsrs	r3, r0, #8
 800027e:	428b      	cmp	r3, r1
 8000280:	d344      	bcc.n	800030c <__divsi3+0xa4>
 8000282:	0b03      	lsrs	r3, r0, #12
 8000284:	428b      	cmp	r3, r1
 8000286:	d328      	bcc.n	80002da <__divsi3+0x72>
 8000288:	0c03      	lsrs	r3, r0, #16
 800028a:	428b      	cmp	r3, r1
 800028c:	d30d      	bcc.n	80002aa <__divsi3+0x42>
 800028e:	22ff      	movs	r2, #255	; 0xff
 8000290:	0209      	lsls	r1, r1, #8
 8000292:	ba12      	rev	r2, r2
 8000294:	0c03      	lsrs	r3, r0, #16
 8000296:	428b      	cmp	r3, r1
 8000298:	d302      	bcc.n	80002a0 <__divsi3+0x38>
 800029a:	1212      	asrs	r2, r2, #8
 800029c:	0209      	lsls	r1, r1, #8
 800029e:	d065      	beq.n	800036c <__divsi3+0x104>
 80002a0:	0b03      	lsrs	r3, r0, #12
 80002a2:	428b      	cmp	r3, r1
 80002a4:	d319      	bcc.n	80002da <__divsi3+0x72>
 80002a6:	e000      	b.n	80002aa <__divsi3+0x42>
 80002a8:	0a09      	lsrs	r1, r1, #8
 80002aa:	0bc3      	lsrs	r3, r0, #15
 80002ac:	428b      	cmp	r3, r1
 80002ae:	d301      	bcc.n	80002b4 <__divsi3+0x4c>
 80002b0:	03cb      	lsls	r3, r1, #15
 80002b2:	1ac0      	subs	r0, r0, r3
 80002b4:	4152      	adcs	r2, r2
 80002b6:	0b83      	lsrs	r3, r0, #14
 80002b8:	428b      	cmp	r3, r1
 80002ba:	d301      	bcc.n	80002c0 <__divsi3+0x58>
 80002bc:	038b      	lsls	r3, r1, #14
 80002be:	1ac0      	subs	r0, r0, r3
 80002c0:	4152      	adcs	r2, r2
 80002c2:	0b43      	lsrs	r3, r0, #13
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d301      	bcc.n	80002cc <__divsi3+0x64>
 80002c8:	034b      	lsls	r3, r1, #13
 80002ca:	1ac0      	subs	r0, r0, r3
 80002cc:	4152      	adcs	r2, r2
 80002ce:	0b03      	lsrs	r3, r0, #12
 80002d0:	428b      	cmp	r3, r1
 80002d2:	d301      	bcc.n	80002d8 <__divsi3+0x70>
 80002d4:	030b      	lsls	r3, r1, #12
 80002d6:	1ac0      	subs	r0, r0, r3
 80002d8:	4152      	adcs	r2, r2
 80002da:	0ac3      	lsrs	r3, r0, #11
 80002dc:	428b      	cmp	r3, r1
 80002de:	d301      	bcc.n	80002e4 <__divsi3+0x7c>
 80002e0:	02cb      	lsls	r3, r1, #11
 80002e2:	1ac0      	subs	r0, r0, r3
 80002e4:	4152      	adcs	r2, r2
 80002e6:	0a83      	lsrs	r3, r0, #10
 80002e8:	428b      	cmp	r3, r1
 80002ea:	d301      	bcc.n	80002f0 <__divsi3+0x88>
 80002ec:	028b      	lsls	r3, r1, #10
 80002ee:	1ac0      	subs	r0, r0, r3
 80002f0:	4152      	adcs	r2, r2
 80002f2:	0a43      	lsrs	r3, r0, #9
 80002f4:	428b      	cmp	r3, r1
 80002f6:	d301      	bcc.n	80002fc <__divsi3+0x94>
 80002f8:	024b      	lsls	r3, r1, #9
 80002fa:	1ac0      	subs	r0, r0, r3
 80002fc:	4152      	adcs	r2, r2
 80002fe:	0a03      	lsrs	r3, r0, #8
 8000300:	428b      	cmp	r3, r1
 8000302:	d301      	bcc.n	8000308 <__divsi3+0xa0>
 8000304:	020b      	lsls	r3, r1, #8
 8000306:	1ac0      	subs	r0, r0, r3
 8000308:	4152      	adcs	r2, r2
 800030a:	d2cd      	bcs.n	80002a8 <__divsi3+0x40>
 800030c:	09c3      	lsrs	r3, r0, #7
 800030e:	428b      	cmp	r3, r1
 8000310:	d301      	bcc.n	8000316 <__divsi3+0xae>
 8000312:	01cb      	lsls	r3, r1, #7
 8000314:	1ac0      	subs	r0, r0, r3
 8000316:	4152      	adcs	r2, r2
 8000318:	0983      	lsrs	r3, r0, #6
 800031a:	428b      	cmp	r3, r1
 800031c:	d301      	bcc.n	8000322 <__divsi3+0xba>
 800031e:	018b      	lsls	r3, r1, #6
 8000320:	1ac0      	subs	r0, r0, r3
 8000322:	4152      	adcs	r2, r2
 8000324:	0943      	lsrs	r3, r0, #5
 8000326:	428b      	cmp	r3, r1
 8000328:	d301      	bcc.n	800032e <__divsi3+0xc6>
 800032a:	014b      	lsls	r3, r1, #5
 800032c:	1ac0      	subs	r0, r0, r3
 800032e:	4152      	adcs	r2, r2
 8000330:	0903      	lsrs	r3, r0, #4
 8000332:	428b      	cmp	r3, r1
 8000334:	d301      	bcc.n	800033a <__divsi3+0xd2>
 8000336:	010b      	lsls	r3, r1, #4
 8000338:	1ac0      	subs	r0, r0, r3
 800033a:	4152      	adcs	r2, r2
 800033c:	08c3      	lsrs	r3, r0, #3
 800033e:	428b      	cmp	r3, r1
 8000340:	d301      	bcc.n	8000346 <__divsi3+0xde>
 8000342:	00cb      	lsls	r3, r1, #3
 8000344:	1ac0      	subs	r0, r0, r3
 8000346:	4152      	adcs	r2, r2
 8000348:	0883      	lsrs	r3, r0, #2
 800034a:	428b      	cmp	r3, r1
 800034c:	d301      	bcc.n	8000352 <__divsi3+0xea>
 800034e:	008b      	lsls	r3, r1, #2
 8000350:	1ac0      	subs	r0, r0, r3
 8000352:	4152      	adcs	r2, r2
 8000354:	0843      	lsrs	r3, r0, #1
 8000356:	428b      	cmp	r3, r1
 8000358:	d301      	bcc.n	800035e <__divsi3+0xf6>
 800035a:	004b      	lsls	r3, r1, #1
 800035c:	1ac0      	subs	r0, r0, r3
 800035e:	4152      	adcs	r2, r2
 8000360:	1a41      	subs	r1, r0, r1
 8000362:	d200      	bcs.n	8000366 <__divsi3+0xfe>
 8000364:	4601      	mov	r1, r0
 8000366:	4152      	adcs	r2, r2
 8000368:	4610      	mov	r0, r2
 800036a:	4770      	bx	lr
 800036c:	e05d      	b.n	800042a <__divsi3+0x1c2>
 800036e:	0fca      	lsrs	r2, r1, #31
 8000370:	d000      	beq.n	8000374 <__divsi3+0x10c>
 8000372:	4249      	negs	r1, r1
 8000374:	1003      	asrs	r3, r0, #32
 8000376:	d300      	bcc.n	800037a <__divsi3+0x112>
 8000378:	4240      	negs	r0, r0
 800037a:	4053      	eors	r3, r2
 800037c:	2200      	movs	r2, #0
 800037e:	469c      	mov	ip, r3
 8000380:	0903      	lsrs	r3, r0, #4
 8000382:	428b      	cmp	r3, r1
 8000384:	d32d      	bcc.n	80003e2 <__divsi3+0x17a>
 8000386:	0a03      	lsrs	r3, r0, #8
 8000388:	428b      	cmp	r3, r1
 800038a:	d312      	bcc.n	80003b2 <__divsi3+0x14a>
 800038c:	22fc      	movs	r2, #252	; 0xfc
 800038e:	0189      	lsls	r1, r1, #6
 8000390:	ba12      	rev	r2, r2
 8000392:	0a03      	lsrs	r3, r0, #8
 8000394:	428b      	cmp	r3, r1
 8000396:	d30c      	bcc.n	80003b2 <__divsi3+0x14a>
 8000398:	0189      	lsls	r1, r1, #6
 800039a:	1192      	asrs	r2, r2, #6
 800039c:	428b      	cmp	r3, r1
 800039e:	d308      	bcc.n	80003b2 <__divsi3+0x14a>
 80003a0:	0189      	lsls	r1, r1, #6
 80003a2:	1192      	asrs	r2, r2, #6
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d304      	bcc.n	80003b2 <__divsi3+0x14a>
 80003a8:	0189      	lsls	r1, r1, #6
 80003aa:	d03a      	beq.n	8000422 <__divsi3+0x1ba>
 80003ac:	1192      	asrs	r2, r2, #6
 80003ae:	e000      	b.n	80003b2 <__divsi3+0x14a>
 80003b0:	0989      	lsrs	r1, r1, #6
 80003b2:	09c3      	lsrs	r3, r0, #7
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d301      	bcc.n	80003bc <__divsi3+0x154>
 80003b8:	01cb      	lsls	r3, r1, #7
 80003ba:	1ac0      	subs	r0, r0, r3
 80003bc:	4152      	adcs	r2, r2
 80003be:	0983      	lsrs	r3, r0, #6
 80003c0:	428b      	cmp	r3, r1
 80003c2:	d301      	bcc.n	80003c8 <__divsi3+0x160>
 80003c4:	018b      	lsls	r3, r1, #6
 80003c6:	1ac0      	subs	r0, r0, r3
 80003c8:	4152      	adcs	r2, r2
 80003ca:	0943      	lsrs	r3, r0, #5
 80003cc:	428b      	cmp	r3, r1
 80003ce:	d301      	bcc.n	80003d4 <__divsi3+0x16c>
 80003d0:	014b      	lsls	r3, r1, #5
 80003d2:	1ac0      	subs	r0, r0, r3
 80003d4:	4152      	adcs	r2, r2
 80003d6:	0903      	lsrs	r3, r0, #4
 80003d8:	428b      	cmp	r3, r1
 80003da:	d301      	bcc.n	80003e0 <__divsi3+0x178>
 80003dc:	010b      	lsls	r3, r1, #4
 80003de:	1ac0      	subs	r0, r0, r3
 80003e0:	4152      	adcs	r2, r2
 80003e2:	08c3      	lsrs	r3, r0, #3
 80003e4:	428b      	cmp	r3, r1
 80003e6:	d301      	bcc.n	80003ec <__divsi3+0x184>
 80003e8:	00cb      	lsls	r3, r1, #3
 80003ea:	1ac0      	subs	r0, r0, r3
 80003ec:	4152      	adcs	r2, r2
 80003ee:	0883      	lsrs	r3, r0, #2
 80003f0:	428b      	cmp	r3, r1
 80003f2:	d301      	bcc.n	80003f8 <__divsi3+0x190>
 80003f4:	008b      	lsls	r3, r1, #2
 80003f6:	1ac0      	subs	r0, r0, r3
 80003f8:	4152      	adcs	r2, r2
 80003fa:	d2d9      	bcs.n	80003b0 <__divsi3+0x148>
 80003fc:	0843      	lsrs	r3, r0, #1
 80003fe:	428b      	cmp	r3, r1
 8000400:	d301      	bcc.n	8000406 <__divsi3+0x19e>
 8000402:	004b      	lsls	r3, r1, #1
 8000404:	1ac0      	subs	r0, r0, r3
 8000406:	4152      	adcs	r2, r2
 8000408:	1a41      	subs	r1, r0, r1
 800040a:	d200      	bcs.n	800040e <__divsi3+0x1a6>
 800040c:	4601      	mov	r1, r0
 800040e:	4663      	mov	r3, ip
 8000410:	4152      	adcs	r2, r2
 8000412:	105b      	asrs	r3, r3, #1
 8000414:	4610      	mov	r0, r2
 8000416:	d301      	bcc.n	800041c <__divsi3+0x1b4>
 8000418:	4240      	negs	r0, r0
 800041a:	2b00      	cmp	r3, #0
 800041c:	d500      	bpl.n	8000420 <__divsi3+0x1b8>
 800041e:	4249      	negs	r1, r1
 8000420:	4770      	bx	lr
 8000422:	4663      	mov	r3, ip
 8000424:	105b      	asrs	r3, r3, #1
 8000426:	d300      	bcc.n	800042a <__divsi3+0x1c2>
 8000428:	4240      	negs	r0, r0
 800042a:	b501      	push	{r0, lr}
 800042c:	2000      	movs	r0, #0
 800042e:	f000 f805 	bl	800043c <__aeabi_idiv0>
 8000432:	bd02      	pop	{r1, pc}

08000434 <__aeabi_idivmod>:
 8000434:	2900      	cmp	r1, #0
 8000436:	d0f8      	beq.n	800042a <__divsi3+0x1c2>
 8000438:	e716      	b.n	8000268 <__divsi3>
 800043a:	4770      	bx	lr

0800043c <__aeabi_idiv0>:
 800043c:	4770      	bx	lr
 800043e:	46c0      	nop			; (mov r8, r8)

08000440 <__aeabi_cdrcmple>:
 8000440:	4684      	mov	ip, r0
 8000442:	1c10      	adds	r0, r2, #0
 8000444:	4662      	mov	r2, ip
 8000446:	468c      	mov	ip, r1
 8000448:	1c19      	adds	r1, r3, #0
 800044a:	4663      	mov	r3, ip
 800044c:	e000      	b.n	8000450 <__aeabi_cdcmpeq>
 800044e:	46c0      	nop			; (mov r8, r8)

08000450 <__aeabi_cdcmpeq>:
 8000450:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000452:	f001 fe93 	bl	800217c <__ledf2>
 8000456:	2800      	cmp	r0, #0
 8000458:	d401      	bmi.n	800045e <__aeabi_cdcmpeq+0xe>
 800045a:	2100      	movs	r1, #0
 800045c:	42c8      	cmn	r0, r1
 800045e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000460 <__aeabi_dcmpeq>:
 8000460:	b510      	push	{r4, lr}
 8000462:	f001 fdeb 	bl	800203c <__eqdf2>
 8000466:	4240      	negs	r0, r0
 8000468:	3001      	adds	r0, #1
 800046a:	bd10      	pop	{r4, pc}

0800046c <__aeabi_dcmplt>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 fe85 	bl	800217c <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	db01      	blt.n	800047a <__aeabi_dcmplt+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmple>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 fe7b 	bl	800217c <__ledf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dd01      	ble.n	800048e <__aeabi_dcmple+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpgt>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 fe0d 	bl	80020b4 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	dc01      	bgt.n	80004a2 <__aeabi_dcmpgt+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_dcmpge>:
 80004a8:	b510      	push	{r4, lr}
 80004aa:	f001 fe03 	bl	80020b4 <__gedf2>
 80004ae:	2800      	cmp	r0, #0
 80004b0:	da01      	bge.n	80004b6 <__aeabi_dcmpge+0xe>
 80004b2:	2000      	movs	r0, #0
 80004b4:	bd10      	pop	{r4, pc}
 80004b6:	2001      	movs	r0, #1
 80004b8:	bd10      	pop	{r4, pc}
 80004ba:	46c0      	nop			; (mov r8, r8)

080004bc <__aeabi_cfrcmple>:
 80004bc:	4684      	mov	ip, r0
 80004be:	1c08      	adds	r0, r1, #0
 80004c0:	4661      	mov	r1, ip
 80004c2:	e7ff      	b.n	80004c4 <__aeabi_cfcmpeq>

080004c4 <__aeabi_cfcmpeq>:
 80004c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80004c6:	f000 fbf5 	bl	8000cb4 <__lesf2>
 80004ca:	2800      	cmp	r0, #0
 80004cc:	d401      	bmi.n	80004d2 <__aeabi_cfcmpeq+0xe>
 80004ce:	2100      	movs	r1, #0
 80004d0:	42c8      	cmn	r0, r1
 80004d2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004d4 <__aeabi_fcmpeq>:
 80004d4:	b510      	push	{r4, lr}
 80004d6:	f000 fb77 	bl	8000bc8 <__eqsf2>
 80004da:	4240      	negs	r0, r0
 80004dc:	3001      	adds	r0, #1
 80004de:	bd10      	pop	{r4, pc}

080004e0 <__aeabi_fcmplt>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	f000 fbe7 	bl	8000cb4 <__lesf2>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	db01      	blt.n	80004ee <__aeabi_fcmplt+0xe>
 80004ea:	2000      	movs	r0, #0
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	2001      	movs	r0, #1
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	46c0      	nop			; (mov r8, r8)

080004f4 <__aeabi_fcmple>:
 80004f4:	b510      	push	{r4, lr}
 80004f6:	f000 fbdd 	bl	8000cb4 <__lesf2>
 80004fa:	2800      	cmp	r0, #0
 80004fc:	dd01      	ble.n	8000502 <__aeabi_fcmple+0xe>
 80004fe:	2000      	movs	r0, #0
 8000500:	bd10      	pop	{r4, pc}
 8000502:	2001      	movs	r0, #1
 8000504:	bd10      	pop	{r4, pc}
 8000506:	46c0      	nop			; (mov r8, r8)

08000508 <__aeabi_fcmpgt>:
 8000508:	b510      	push	{r4, lr}
 800050a:	f000 fb85 	bl	8000c18 <__gesf2>
 800050e:	2800      	cmp	r0, #0
 8000510:	dc01      	bgt.n	8000516 <__aeabi_fcmpgt+0xe>
 8000512:	2000      	movs	r0, #0
 8000514:	bd10      	pop	{r4, pc}
 8000516:	2001      	movs	r0, #1
 8000518:	bd10      	pop	{r4, pc}
 800051a:	46c0      	nop			; (mov r8, r8)

0800051c <__aeabi_fcmpge>:
 800051c:	b510      	push	{r4, lr}
 800051e:	f000 fb7b 	bl	8000c18 <__gesf2>
 8000522:	2800      	cmp	r0, #0
 8000524:	da01      	bge.n	800052a <__aeabi_fcmpge+0xe>
 8000526:	2000      	movs	r0, #0
 8000528:	bd10      	pop	{r4, pc}
 800052a:	2001      	movs	r0, #1
 800052c:	bd10      	pop	{r4, pc}
 800052e:	46c0      	nop			; (mov r8, r8)

08000530 <__aeabi_ldivmod>:
 8000530:	2b00      	cmp	r3, #0
 8000532:	d115      	bne.n	8000560 <__aeabi_ldivmod+0x30>
 8000534:	2a00      	cmp	r2, #0
 8000536:	d113      	bne.n	8000560 <__aeabi_ldivmod+0x30>
 8000538:	2900      	cmp	r1, #0
 800053a:	db06      	blt.n	800054a <__aeabi_ldivmod+0x1a>
 800053c:	dc01      	bgt.n	8000542 <__aeabi_ldivmod+0x12>
 800053e:	2800      	cmp	r0, #0
 8000540:	d006      	beq.n	8000550 <__aeabi_ldivmod+0x20>
 8000542:	2000      	movs	r0, #0
 8000544:	43c0      	mvns	r0, r0
 8000546:	0841      	lsrs	r1, r0, #1
 8000548:	e002      	b.n	8000550 <__aeabi_ldivmod+0x20>
 800054a:	2180      	movs	r1, #128	; 0x80
 800054c:	0609      	lsls	r1, r1, #24
 800054e:	2000      	movs	r0, #0
 8000550:	b407      	push	{r0, r1, r2}
 8000552:	4802      	ldr	r0, [pc, #8]	; (800055c <__aeabi_ldivmod+0x2c>)
 8000554:	a101      	add	r1, pc, #4	; (adr r1, 800055c <__aeabi_ldivmod+0x2c>)
 8000556:	1840      	adds	r0, r0, r1
 8000558:	9002      	str	r0, [sp, #8]
 800055a:	bd03      	pop	{r0, r1, pc}
 800055c:	fffffee1 	.word	0xfffffee1
 8000560:	b403      	push	{r0, r1}
 8000562:	4668      	mov	r0, sp
 8000564:	b501      	push	{r0, lr}
 8000566:	9802      	ldr	r0, [sp, #8]
 8000568:	f000 f866 	bl	8000638 <__gnu_ldivmod_helper>
 800056c:	9b01      	ldr	r3, [sp, #4]
 800056e:	469e      	mov	lr, r3
 8000570:	b002      	add	sp, #8
 8000572:	bc0c      	pop	{r2, r3}
 8000574:	4770      	bx	lr
 8000576:	46c0      	nop			; (mov r8, r8)

08000578 <__aeabi_lmul>:
 8000578:	b5f0      	push	{r4, r5, r6, r7, lr}
 800057a:	46ce      	mov	lr, r9
 800057c:	4647      	mov	r7, r8
 800057e:	0415      	lsls	r5, r2, #16
 8000580:	0c2d      	lsrs	r5, r5, #16
 8000582:	002e      	movs	r6, r5
 8000584:	b580      	push	{r7, lr}
 8000586:	0407      	lsls	r7, r0, #16
 8000588:	0c14      	lsrs	r4, r2, #16
 800058a:	0c3f      	lsrs	r7, r7, #16
 800058c:	4699      	mov	r9, r3
 800058e:	0c03      	lsrs	r3, r0, #16
 8000590:	437e      	muls	r6, r7
 8000592:	435d      	muls	r5, r3
 8000594:	4367      	muls	r7, r4
 8000596:	4363      	muls	r3, r4
 8000598:	197f      	adds	r7, r7, r5
 800059a:	0c34      	lsrs	r4, r6, #16
 800059c:	19e4      	adds	r4, r4, r7
 800059e:	469c      	mov	ip, r3
 80005a0:	42a5      	cmp	r5, r4
 80005a2:	d903      	bls.n	80005ac <__aeabi_lmul+0x34>
 80005a4:	2380      	movs	r3, #128	; 0x80
 80005a6:	025b      	lsls	r3, r3, #9
 80005a8:	4698      	mov	r8, r3
 80005aa:	44c4      	add	ip, r8
 80005ac:	464b      	mov	r3, r9
 80005ae:	4343      	muls	r3, r0
 80005b0:	4351      	muls	r1, r2
 80005b2:	0c25      	lsrs	r5, r4, #16
 80005b4:	0436      	lsls	r6, r6, #16
 80005b6:	4465      	add	r5, ip
 80005b8:	0c36      	lsrs	r6, r6, #16
 80005ba:	0424      	lsls	r4, r4, #16
 80005bc:	19a4      	adds	r4, r4, r6
 80005be:	195b      	adds	r3, r3, r5
 80005c0:	1859      	adds	r1, r3, r1
 80005c2:	0020      	movs	r0, r4
 80005c4:	bc0c      	pop	{r2, r3}
 80005c6:	4690      	mov	r8, r2
 80005c8:	4699      	mov	r9, r3
 80005ca:	bdf0      	pop	{r4, r5, r6, r7, pc}

080005cc <__aeabi_f2uiz>:
 80005cc:	219e      	movs	r1, #158	; 0x9e
 80005ce:	b510      	push	{r4, lr}
 80005d0:	05c9      	lsls	r1, r1, #23
 80005d2:	1c04      	adds	r4, r0, #0
 80005d4:	f7ff ffa2 	bl	800051c <__aeabi_fcmpge>
 80005d8:	2800      	cmp	r0, #0
 80005da:	d103      	bne.n	80005e4 <__aeabi_f2uiz+0x18>
 80005dc:	1c20      	adds	r0, r4, #0
 80005de:	f000 feaf 	bl	8001340 <__aeabi_f2iz>
 80005e2:	bd10      	pop	{r4, pc}
 80005e4:	219e      	movs	r1, #158	; 0x9e
 80005e6:	1c20      	adds	r0, r4, #0
 80005e8:	05c9      	lsls	r1, r1, #23
 80005ea:	f000 fce5 	bl	8000fb8 <__aeabi_fsub>
 80005ee:	f000 fea7 	bl	8001340 <__aeabi_f2iz>
 80005f2:	2380      	movs	r3, #128	; 0x80
 80005f4:	061b      	lsls	r3, r3, #24
 80005f6:	469c      	mov	ip, r3
 80005f8:	4460      	add	r0, ip
 80005fa:	e7f2      	b.n	80005e2 <__aeabi_f2uiz+0x16>

080005fc <__aeabi_d2uiz>:
 80005fc:	b570      	push	{r4, r5, r6, lr}
 80005fe:	2200      	movs	r2, #0
 8000600:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <__aeabi_d2uiz+0x38>)
 8000602:	0004      	movs	r4, r0
 8000604:	000d      	movs	r5, r1
 8000606:	f7ff ff4f 	bl	80004a8 <__aeabi_dcmpge>
 800060a:	2800      	cmp	r0, #0
 800060c:	d104      	bne.n	8000618 <__aeabi_d2uiz+0x1c>
 800060e:	0020      	movs	r0, r4
 8000610:	0029      	movs	r1, r5
 8000612:	f002 fbf1 	bl	8002df8 <__aeabi_d2iz>
 8000616:	bd70      	pop	{r4, r5, r6, pc}
 8000618:	4b06      	ldr	r3, [pc, #24]	; (8000634 <__aeabi_d2uiz+0x38>)
 800061a:	2200      	movs	r2, #0
 800061c:	0020      	movs	r0, r4
 800061e:	0029      	movs	r1, r5
 8000620:	f002 f886 	bl	8002730 <__aeabi_dsub>
 8000624:	f002 fbe8 	bl	8002df8 <__aeabi_d2iz>
 8000628:	2380      	movs	r3, #128	; 0x80
 800062a:	061b      	lsls	r3, r3, #24
 800062c:	469c      	mov	ip, r3
 800062e:	4460      	add	r0, ip
 8000630:	e7f1      	b.n	8000616 <__aeabi_d2uiz+0x1a>
 8000632:	46c0      	nop			; (mov r8, r8)
 8000634:	41e00000 	.word	0x41e00000

08000638 <__gnu_ldivmod_helper>:
 8000638:	b5f0      	push	{r4, r5, r6, r7, lr}
 800063a:	b083      	sub	sp, #12
 800063c:	0016      	movs	r6, r2
 800063e:	001f      	movs	r7, r3
 8000640:	9000      	str	r0, [sp, #0]
 8000642:	9101      	str	r1, [sp, #4]
 8000644:	f002 fd6e 	bl	8003124 <__divdi3>
 8000648:	0004      	movs	r4, r0
 800064a:	000d      	movs	r5, r1
 800064c:	0002      	movs	r2, r0
 800064e:	000b      	movs	r3, r1
 8000650:	0030      	movs	r0, r6
 8000652:	0039      	movs	r1, r7
 8000654:	f7ff ff90 	bl	8000578 <__aeabi_lmul>
 8000658:	9a00      	ldr	r2, [sp, #0]
 800065a:	9b01      	ldr	r3, [sp, #4]
 800065c:	1a12      	subs	r2, r2, r0
 800065e:	418b      	sbcs	r3, r1
 8000660:	9908      	ldr	r1, [sp, #32]
 8000662:	0020      	movs	r0, r4
 8000664:	600a      	str	r2, [r1, #0]
 8000666:	604b      	str	r3, [r1, #4]
 8000668:	0029      	movs	r1, r5
 800066a:	b003      	add	sp, #12
 800066c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800066e:	46c0      	nop			; (mov r8, r8)

08000670 <__aeabi_fadd>:
 8000670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000672:	4647      	mov	r7, r8
 8000674:	46ce      	mov	lr, r9
 8000676:	0243      	lsls	r3, r0, #9
 8000678:	0a5b      	lsrs	r3, r3, #9
 800067a:	0044      	lsls	r4, r0, #1
 800067c:	0fc2      	lsrs	r2, r0, #31
 800067e:	469c      	mov	ip, r3
 8000680:	0048      	lsls	r0, r1, #1
 8000682:	00dd      	lsls	r5, r3, #3
 8000684:	024b      	lsls	r3, r1, #9
 8000686:	0e24      	lsrs	r4, r4, #24
 8000688:	0a5b      	lsrs	r3, r3, #9
 800068a:	0e00      	lsrs	r0, r0, #24
 800068c:	b580      	push	{r7, lr}
 800068e:	4698      	mov	r8, r3
 8000690:	0026      	movs	r6, r4
 8000692:	4691      	mov	r9, r2
 8000694:	0fc9      	lsrs	r1, r1, #31
 8000696:	00db      	lsls	r3, r3, #3
 8000698:	1a27      	subs	r7, r4, r0
 800069a:	428a      	cmp	r2, r1
 800069c:	d029      	beq.n	80006f2 <__aeabi_fadd+0x82>
 800069e:	2f00      	cmp	r7, #0
 80006a0:	dd15      	ble.n	80006ce <__aeabi_fadd+0x5e>
 80006a2:	2800      	cmp	r0, #0
 80006a4:	d14a      	bne.n	800073c <__aeabi_fadd+0xcc>
 80006a6:	2b00      	cmp	r3, #0
 80006a8:	d000      	beq.n	80006ac <__aeabi_fadd+0x3c>
 80006aa:	e095      	b.n	80007d8 <__aeabi_fadd+0x168>
 80006ac:	08ed      	lsrs	r5, r5, #3
 80006ae:	2cff      	cmp	r4, #255	; 0xff
 80006b0:	d100      	bne.n	80006b4 <__aeabi_fadd+0x44>
 80006b2:	e088      	b.n	80007c6 <__aeabi_fadd+0x156>
 80006b4:	026b      	lsls	r3, r5, #9
 80006b6:	0a5b      	lsrs	r3, r3, #9
 80006b8:	b2e6      	uxtb	r6, r4
 80006ba:	025b      	lsls	r3, r3, #9
 80006bc:	05f6      	lsls	r6, r6, #23
 80006be:	0a58      	lsrs	r0, r3, #9
 80006c0:	4330      	orrs	r0, r6
 80006c2:	07d2      	lsls	r2, r2, #31
 80006c4:	4310      	orrs	r0, r2
 80006c6:	bc0c      	pop	{r2, r3}
 80006c8:	4690      	mov	r8, r2
 80006ca:	4699      	mov	r9, r3
 80006cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006ce:	2f00      	cmp	r7, #0
 80006d0:	d000      	beq.n	80006d4 <__aeabi_fadd+0x64>
 80006d2:	e087      	b.n	80007e4 <__aeabi_fadd+0x174>
 80006d4:	1c60      	adds	r0, r4, #1
 80006d6:	b2c0      	uxtb	r0, r0
 80006d8:	2801      	cmp	r0, #1
 80006da:	dc00      	bgt.n	80006de <__aeabi_fadd+0x6e>
 80006dc:	e0b6      	b.n	800084c <__aeabi_fadd+0x1dc>
 80006de:	1aee      	subs	r6, r5, r3
 80006e0:	0172      	lsls	r2, r6, #5
 80006e2:	d500      	bpl.n	80006e6 <__aeabi_fadd+0x76>
 80006e4:	e0c5      	b.n	8000872 <__aeabi_fadd+0x202>
 80006e6:	2e00      	cmp	r6, #0
 80006e8:	d13d      	bne.n	8000766 <__aeabi_fadd+0xf6>
 80006ea:	2200      	movs	r2, #0
 80006ec:	2600      	movs	r6, #0
 80006ee:	2300      	movs	r3, #0
 80006f0:	e7e3      	b.n	80006ba <__aeabi_fadd+0x4a>
 80006f2:	2f00      	cmp	r7, #0
 80006f4:	dc00      	bgt.n	80006f8 <__aeabi_fadd+0x88>
 80006f6:	e096      	b.n	8000826 <__aeabi_fadd+0x1b6>
 80006f8:	2800      	cmp	r0, #0
 80006fa:	d05d      	beq.n	80007b8 <__aeabi_fadd+0x148>
 80006fc:	2cff      	cmp	r4, #255	; 0xff
 80006fe:	d060      	beq.n	80007c2 <__aeabi_fadd+0x152>
 8000700:	2280      	movs	r2, #128	; 0x80
 8000702:	04d2      	lsls	r2, r2, #19
 8000704:	4313      	orrs	r3, r2
 8000706:	2f1b      	cmp	r7, #27
 8000708:	dd00      	ble.n	800070c <__aeabi_fadd+0x9c>
 800070a:	e0ec      	b.n	80008e6 <__aeabi_fadd+0x276>
 800070c:	2220      	movs	r2, #32
 800070e:	1bd2      	subs	r2, r2, r7
 8000710:	0018      	movs	r0, r3
 8000712:	4093      	lsls	r3, r2
 8000714:	40f8      	lsrs	r0, r7
 8000716:	1e5a      	subs	r2, r3, #1
 8000718:	4193      	sbcs	r3, r2
 800071a:	4303      	orrs	r3, r0
 800071c:	18ed      	adds	r5, r5, r3
 800071e:	016b      	lsls	r3, r5, #5
 8000720:	d57b      	bpl.n	800081a <__aeabi_fadd+0x1aa>
 8000722:	3401      	adds	r4, #1
 8000724:	2cff      	cmp	r4, #255	; 0xff
 8000726:	d100      	bne.n	800072a <__aeabi_fadd+0xba>
 8000728:	e0b7      	b.n	800089a <__aeabi_fadd+0x22a>
 800072a:	2201      	movs	r2, #1
 800072c:	2607      	movs	r6, #7
 800072e:	402a      	ands	r2, r5
 8000730:	086b      	lsrs	r3, r5, #1
 8000732:	4d9a      	ldr	r5, [pc, #616]	; (800099c <__aeabi_fadd+0x32c>)
 8000734:	401d      	ands	r5, r3
 8000736:	4315      	orrs	r5, r2
 8000738:	402e      	ands	r6, r5
 800073a:	e029      	b.n	8000790 <__aeabi_fadd+0x120>
 800073c:	2cff      	cmp	r4, #255	; 0xff
 800073e:	d0b5      	beq.n	80006ac <__aeabi_fadd+0x3c>
 8000740:	2280      	movs	r2, #128	; 0x80
 8000742:	04d2      	lsls	r2, r2, #19
 8000744:	4313      	orrs	r3, r2
 8000746:	2f1b      	cmp	r7, #27
 8000748:	dd00      	ble.n	800074c <__aeabi_fadd+0xdc>
 800074a:	e0b2      	b.n	80008b2 <__aeabi_fadd+0x242>
 800074c:	2220      	movs	r2, #32
 800074e:	1bd2      	subs	r2, r2, r7
 8000750:	0019      	movs	r1, r3
 8000752:	4093      	lsls	r3, r2
 8000754:	40f9      	lsrs	r1, r7
 8000756:	1e5a      	subs	r2, r3, #1
 8000758:	4193      	sbcs	r3, r2
 800075a:	430b      	orrs	r3, r1
 800075c:	1aed      	subs	r5, r5, r3
 800075e:	016b      	lsls	r3, r5, #5
 8000760:	d55b      	bpl.n	800081a <__aeabi_fadd+0x1aa>
 8000762:	01ad      	lsls	r5, r5, #6
 8000764:	09ae      	lsrs	r6, r5, #6
 8000766:	0030      	movs	r0, r6
 8000768:	f002 fcbe 	bl	80030e8 <__clzsi2>
 800076c:	3805      	subs	r0, #5
 800076e:	4086      	lsls	r6, r0
 8000770:	4284      	cmp	r4, r0
 8000772:	dc65      	bgt.n	8000840 <__aeabi_fadd+0x1d0>
 8000774:	1b04      	subs	r4, r0, r4
 8000776:	0033      	movs	r3, r6
 8000778:	2020      	movs	r0, #32
 800077a:	3401      	adds	r4, #1
 800077c:	40e3      	lsrs	r3, r4
 800077e:	1b04      	subs	r4, r0, r4
 8000780:	40a6      	lsls	r6, r4
 8000782:	1e75      	subs	r5, r6, #1
 8000784:	41ae      	sbcs	r6, r5
 8000786:	4333      	orrs	r3, r6
 8000788:	2607      	movs	r6, #7
 800078a:	001d      	movs	r5, r3
 800078c:	2400      	movs	r4, #0
 800078e:	401e      	ands	r6, r3
 8000790:	2201      	movs	r2, #1
 8000792:	464b      	mov	r3, r9
 8000794:	401a      	ands	r2, r3
 8000796:	2e00      	cmp	r6, #0
 8000798:	d004      	beq.n	80007a4 <__aeabi_fadd+0x134>
 800079a:	230f      	movs	r3, #15
 800079c:	402b      	ands	r3, r5
 800079e:	2b04      	cmp	r3, #4
 80007a0:	d000      	beq.n	80007a4 <__aeabi_fadd+0x134>
 80007a2:	3504      	adds	r5, #4
 80007a4:	016b      	lsls	r3, r5, #5
 80007a6:	d400      	bmi.n	80007aa <__aeabi_fadd+0x13a>
 80007a8:	e780      	b.n	80006ac <__aeabi_fadd+0x3c>
 80007aa:	3401      	adds	r4, #1
 80007ac:	b2e6      	uxtb	r6, r4
 80007ae:	2cff      	cmp	r4, #255	; 0xff
 80007b0:	d12f      	bne.n	8000812 <__aeabi_fadd+0x1a2>
 80007b2:	26ff      	movs	r6, #255	; 0xff
 80007b4:	2300      	movs	r3, #0
 80007b6:	e780      	b.n	80006ba <__aeabi_fadd+0x4a>
 80007b8:	2b00      	cmp	r3, #0
 80007ba:	d152      	bne.n	8000862 <__aeabi_fadd+0x1f2>
 80007bc:	2cff      	cmp	r4, #255	; 0xff
 80007be:	d000      	beq.n	80007c2 <__aeabi_fadd+0x152>
 80007c0:	e774      	b.n	80006ac <__aeabi_fadd+0x3c>
 80007c2:	000a      	movs	r2, r1
 80007c4:	08ed      	lsrs	r5, r5, #3
 80007c6:	2d00      	cmp	r5, #0
 80007c8:	d0f3      	beq.n	80007b2 <__aeabi_fadd+0x142>
 80007ca:	2380      	movs	r3, #128	; 0x80
 80007cc:	03db      	lsls	r3, r3, #15
 80007ce:	432b      	orrs	r3, r5
 80007d0:	025b      	lsls	r3, r3, #9
 80007d2:	0a5b      	lsrs	r3, r3, #9
 80007d4:	26ff      	movs	r6, #255	; 0xff
 80007d6:	e770      	b.n	80006ba <__aeabi_fadd+0x4a>
 80007d8:	3f01      	subs	r7, #1
 80007da:	2f00      	cmp	r7, #0
 80007dc:	d0be      	beq.n	800075c <__aeabi_fadd+0xec>
 80007de:	2cff      	cmp	r4, #255	; 0xff
 80007e0:	d1b1      	bne.n	8000746 <__aeabi_fadd+0xd6>
 80007e2:	e763      	b.n	80006ac <__aeabi_fadd+0x3c>
 80007e4:	2c00      	cmp	r4, #0
 80007e6:	d047      	beq.n	8000878 <__aeabi_fadd+0x208>
 80007e8:	28ff      	cmp	r0, #255	; 0xff
 80007ea:	d069      	beq.n	80008c0 <__aeabi_fadd+0x250>
 80007ec:	2480      	movs	r4, #128	; 0x80
 80007ee:	04e4      	lsls	r4, r4, #19
 80007f0:	427a      	negs	r2, r7
 80007f2:	4325      	orrs	r5, r4
 80007f4:	2a1b      	cmp	r2, #27
 80007f6:	dd00      	ble.n	80007fa <__aeabi_fadd+0x18a>
 80007f8:	e0c5      	b.n	8000986 <__aeabi_fadd+0x316>
 80007fa:	002c      	movs	r4, r5
 80007fc:	2620      	movs	r6, #32
 80007fe:	40d4      	lsrs	r4, r2
 8000800:	1ab2      	subs	r2, r6, r2
 8000802:	4095      	lsls	r5, r2
 8000804:	1e6a      	subs	r2, r5, #1
 8000806:	4195      	sbcs	r5, r2
 8000808:	4325      	orrs	r5, r4
 800080a:	1b5d      	subs	r5, r3, r5
 800080c:	0004      	movs	r4, r0
 800080e:	4689      	mov	r9, r1
 8000810:	e7a5      	b.n	800075e <__aeabi_fadd+0xee>
 8000812:	01ab      	lsls	r3, r5, #6
 8000814:	0a5b      	lsrs	r3, r3, #9
 8000816:	e750      	b.n	80006ba <__aeabi_fadd+0x4a>
 8000818:	2400      	movs	r4, #0
 800081a:	2201      	movs	r2, #1
 800081c:	464b      	mov	r3, r9
 800081e:	401a      	ands	r2, r3
 8000820:	076b      	lsls	r3, r5, #29
 8000822:	d1ba      	bne.n	800079a <__aeabi_fadd+0x12a>
 8000824:	e742      	b.n	80006ac <__aeabi_fadd+0x3c>
 8000826:	2f00      	cmp	r7, #0
 8000828:	d13b      	bne.n	80008a2 <__aeabi_fadd+0x232>
 800082a:	3401      	adds	r4, #1
 800082c:	b2e0      	uxtb	r0, r4
 800082e:	2801      	cmp	r0, #1
 8000830:	dd4a      	ble.n	80008c8 <__aeabi_fadd+0x258>
 8000832:	2cff      	cmp	r4, #255	; 0xff
 8000834:	d0bd      	beq.n	80007b2 <__aeabi_fadd+0x142>
 8000836:	2607      	movs	r6, #7
 8000838:	18ed      	adds	r5, r5, r3
 800083a:	086d      	lsrs	r5, r5, #1
 800083c:	402e      	ands	r6, r5
 800083e:	e7a7      	b.n	8000790 <__aeabi_fadd+0x120>
 8000840:	2307      	movs	r3, #7
 8000842:	4d57      	ldr	r5, [pc, #348]	; (80009a0 <__aeabi_fadd+0x330>)
 8000844:	1a24      	subs	r4, r4, r0
 8000846:	4035      	ands	r5, r6
 8000848:	401e      	ands	r6, r3
 800084a:	e7a1      	b.n	8000790 <__aeabi_fadd+0x120>
 800084c:	2c00      	cmp	r4, #0
 800084e:	d11b      	bne.n	8000888 <__aeabi_fadd+0x218>
 8000850:	2d00      	cmp	r5, #0
 8000852:	d16e      	bne.n	8000932 <__aeabi_fadd+0x2c2>
 8000854:	2b00      	cmp	r3, #0
 8000856:	d100      	bne.n	800085a <__aeabi_fadd+0x1ea>
 8000858:	e09a      	b.n	8000990 <__aeabi_fadd+0x320>
 800085a:	000a      	movs	r2, r1
 800085c:	001d      	movs	r5, r3
 800085e:	003c      	movs	r4, r7
 8000860:	e724      	b.n	80006ac <__aeabi_fadd+0x3c>
 8000862:	3f01      	subs	r7, #1
 8000864:	2f00      	cmp	r7, #0
 8000866:	d100      	bne.n	800086a <__aeabi_fadd+0x1fa>
 8000868:	e758      	b.n	800071c <__aeabi_fadd+0xac>
 800086a:	2cff      	cmp	r4, #255	; 0xff
 800086c:	d000      	beq.n	8000870 <__aeabi_fadd+0x200>
 800086e:	e74a      	b.n	8000706 <__aeabi_fadd+0x96>
 8000870:	e7a7      	b.n	80007c2 <__aeabi_fadd+0x152>
 8000872:	1b5e      	subs	r6, r3, r5
 8000874:	4689      	mov	r9, r1
 8000876:	e776      	b.n	8000766 <__aeabi_fadd+0xf6>
 8000878:	2d00      	cmp	r5, #0
 800087a:	d11c      	bne.n	80008b6 <__aeabi_fadd+0x246>
 800087c:	000a      	movs	r2, r1
 800087e:	28ff      	cmp	r0, #255	; 0xff
 8000880:	d01f      	beq.n	80008c2 <__aeabi_fadd+0x252>
 8000882:	0004      	movs	r4, r0
 8000884:	001d      	movs	r5, r3
 8000886:	e711      	b.n	80006ac <__aeabi_fadd+0x3c>
 8000888:	2d00      	cmp	r5, #0
 800088a:	d15d      	bne.n	8000948 <__aeabi_fadd+0x2d8>
 800088c:	2b00      	cmp	r3, #0
 800088e:	d117      	bne.n	80008c0 <__aeabi_fadd+0x250>
 8000890:	2380      	movs	r3, #128	; 0x80
 8000892:	2200      	movs	r2, #0
 8000894:	03db      	lsls	r3, r3, #15
 8000896:	26ff      	movs	r6, #255	; 0xff
 8000898:	e70f      	b.n	80006ba <__aeabi_fadd+0x4a>
 800089a:	000a      	movs	r2, r1
 800089c:	26ff      	movs	r6, #255	; 0xff
 800089e:	2300      	movs	r3, #0
 80008a0:	e70b      	b.n	80006ba <__aeabi_fadd+0x4a>
 80008a2:	2c00      	cmp	r4, #0
 80008a4:	d121      	bne.n	80008ea <__aeabi_fadd+0x27a>
 80008a6:	2d00      	cmp	r5, #0
 80008a8:	d166      	bne.n	8000978 <__aeabi_fadd+0x308>
 80008aa:	28ff      	cmp	r0, #255	; 0xff
 80008ac:	d1e9      	bne.n	8000882 <__aeabi_fadd+0x212>
 80008ae:	001d      	movs	r5, r3
 80008b0:	e787      	b.n	80007c2 <__aeabi_fadd+0x152>
 80008b2:	2301      	movs	r3, #1
 80008b4:	e752      	b.n	800075c <__aeabi_fadd+0xec>
 80008b6:	1c7a      	adds	r2, r7, #1
 80008b8:	d0a7      	beq.n	800080a <__aeabi_fadd+0x19a>
 80008ba:	43fa      	mvns	r2, r7
 80008bc:	28ff      	cmp	r0, #255	; 0xff
 80008be:	d199      	bne.n	80007f4 <__aeabi_fadd+0x184>
 80008c0:	000a      	movs	r2, r1
 80008c2:	001d      	movs	r5, r3
 80008c4:	24ff      	movs	r4, #255	; 0xff
 80008c6:	e6f1      	b.n	80006ac <__aeabi_fadd+0x3c>
 80008c8:	2e00      	cmp	r6, #0
 80008ca:	d121      	bne.n	8000910 <__aeabi_fadd+0x2a0>
 80008cc:	2d00      	cmp	r5, #0
 80008ce:	d04f      	beq.n	8000970 <__aeabi_fadd+0x300>
 80008d0:	2b00      	cmp	r3, #0
 80008d2:	d04c      	beq.n	800096e <__aeabi_fadd+0x2fe>
 80008d4:	18ed      	adds	r5, r5, r3
 80008d6:	016b      	lsls	r3, r5, #5
 80008d8:	d59e      	bpl.n	8000818 <__aeabi_fadd+0x1a8>
 80008da:	4b31      	ldr	r3, [pc, #196]	; (80009a0 <__aeabi_fadd+0x330>)
 80008dc:	3607      	adds	r6, #7
 80008de:	402e      	ands	r6, r5
 80008e0:	2401      	movs	r4, #1
 80008e2:	401d      	ands	r5, r3
 80008e4:	e754      	b.n	8000790 <__aeabi_fadd+0x120>
 80008e6:	2301      	movs	r3, #1
 80008e8:	e718      	b.n	800071c <__aeabi_fadd+0xac>
 80008ea:	28ff      	cmp	r0, #255	; 0xff
 80008ec:	d0df      	beq.n	80008ae <__aeabi_fadd+0x23e>
 80008ee:	2480      	movs	r4, #128	; 0x80
 80008f0:	04e4      	lsls	r4, r4, #19
 80008f2:	427f      	negs	r7, r7
 80008f4:	4325      	orrs	r5, r4
 80008f6:	2f1b      	cmp	r7, #27
 80008f8:	dc4d      	bgt.n	8000996 <__aeabi_fadd+0x326>
 80008fa:	2620      	movs	r6, #32
 80008fc:	1bf6      	subs	r6, r6, r7
 80008fe:	002c      	movs	r4, r5
 8000900:	40b5      	lsls	r5, r6
 8000902:	40fc      	lsrs	r4, r7
 8000904:	1e6a      	subs	r2, r5, #1
 8000906:	4195      	sbcs	r5, r2
 8000908:	4325      	orrs	r5, r4
 800090a:	18ed      	adds	r5, r5, r3
 800090c:	0004      	movs	r4, r0
 800090e:	e706      	b.n	800071e <__aeabi_fadd+0xae>
 8000910:	2d00      	cmp	r5, #0
 8000912:	d0cc      	beq.n	80008ae <__aeabi_fadd+0x23e>
 8000914:	2b00      	cmp	r3, #0
 8000916:	d100      	bne.n	800091a <__aeabi_fadd+0x2aa>
 8000918:	e753      	b.n	80007c2 <__aeabi_fadd+0x152>
 800091a:	2180      	movs	r1, #128	; 0x80
 800091c:	4660      	mov	r0, ip
 800091e:	03c9      	lsls	r1, r1, #15
 8000920:	4208      	tst	r0, r1
 8000922:	d003      	beq.n	800092c <__aeabi_fadd+0x2bc>
 8000924:	4640      	mov	r0, r8
 8000926:	4208      	tst	r0, r1
 8000928:	d100      	bne.n	800092c <__aeabi_fadd+0x2bc>
 800092a:	001d      	movs	r5, r3
 800092c:	2101      	movs	r1, #1
 800092e:	4011      	ands	r1, r2
 8000930:	e747      	b.n	80007c2 <__aeabi_fadd+0x152>
 8000932:	2b00      	cmp	r3, #0
 8000934:	d100      	bne.n	8000938 <__aeabi_fadd+0x2c8>
 8000936:	e6b9      	b.n	80006ac <__aeabi_fadd+0x3c>
 8000938:	1aea      	subs	r2, r5, r3
 800093a:	0150      	lsls	r0, r2, #5
 800093c:	d525      	bpl.n	800098a <__aeabi_fadd+0x31a>
 800093e:	2607      	movs	r6, #7
 8000940:	1b5d      	subs	r5, r3, r5
 8000942:	402e      	ands	r6, r5
 8000944:	4689      	mov	r9, r1
 8000946:	e723      	b.n	8000790 <__aeabi_fadd+0x120>
 8000948:	24ff      	movs	r4, #255	; 0xff
 800094a:	2b00      	cmp	r3, #0
 800094c:	d100      	bne.n	8000950 <__aeabi_fadd+0x2e0>
 800094e:	e6ad      	b.n	80006ac <__aeabi_fadd+0x3c>
 8000950:	2280      	movs	r2, #128	; 0x80
 8000952:	4660      	mov	r0, ip
 8000954:	03d2      	lsls	r2, r2, #15
 8000956:	4210      	tst	r0, r2
 8000958:	d004      	beq.n	8000964 <__aeabi_fadd+0x2f4>
 800095a:	4640      	mov	r0, r8
 800095c:	4210      	tst	r0, r2
 800095e:	d101      	bne.n	8000964 <__aeabi_fadd+0x2f4>
 8000960:	001d      	movs	r5, r3
 8000962:	4689      	mov	r9, r1
 8000964:	2201      	movs	r2, #1
 8000966:	464b      	mov	r3, r9
 8000968:	24ff      	movs	r4, #255	; 0xff
 800096a:	401a      	ands	r2, r3
 800096c:	e69e      	b.n	80006ac <__aeabi_fadd+0x3c>
 800096e:	002b      	movs	r3, r5
 8000970:	08dd      	lsrs	r5, r3, #3
 8000972:	000a      	movs	r2, r1
 8000974:	2400      	movs	r4, #0
 8000976:	e69d      	b.n	80006b4 <__aeabi_fadd+0x44>
 8000978:	1c7a      	adds	r2, r7, #1
 800097a:	d0c6      	beq.n	800090a <__aeabi_fadd+0x29a>
 800097c:	43ff      	mvns	r7, r7
 800097e:	28ff      	cmp	r0, #255	; 0xff
 8000980:	d1b9      	bne.n	80008f6 <__aeabi_fadd+0x286>
 8000982:	001d      	movs	r5, r3
 8000984:	e71d      	b.n	80007c2 <__aeabi_fadd+0x152>
 8000986:	2501      	movs	r5, #1
 8000988:	e73f      	b.n	800080a <__aeabi_fadd+0x19a>
 800098a:	1e15      	subs	r5, r2, #0
 800098c:	d000      	beq.n	8000990 <__aeabi_fadd+0x320>
 800098e:	e744      	b.n	800081a <__aeabi_fadd+0x1aa>
 8000990:	2200      	movs	r2, #0
 8000992:	2300      	movs	r3, #0
 8000994:	e691      	b.n	80006ba <__aeabi_fadd+0x4a>
 8000996:	2501      	movs	r5, #1
 8000998:	e7b7      	b.n	800090a <__aeabi_fadd+0x29a>
 800099a:	46c0      	nop			; (mov r8, r8)
 800099c:	7dffffff 	.word	0x7dffffff
 80009a0:	fbffffff 	.word	0xfbffffff

080009a4 <__aeabi_fdiv>:
 80009a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009a6:	4657      	mov	r7, sl
 80009a8:	464e      	mov	r6, r9
 80009aa:	4645      	mov	r5, r8
 80009ac:	46de      	mov	lr, fp
 80009ae:	0244      	lsls	r4, r0, #9
 80009b0:	b5e0      	push	{r5, r6, r7, lr}
 80009b2:	0046      	lsls	r6, r0, #1
 80009b4:	4688      	mov	r8, r1
 80009b6:	0a64      	lsrs	r4, r4, #9
 80009b8:	0e36      	lsrs	r6, r6, #24
 80009ba:	0fc7      	lsrs	r7, r0, #31
 80009bc:	2e00      	cmp	r6, #0
 80009be:	d063      	beq.n	8000a88 <__aeabi_fdiv+0xe4>
 80009c0:	2eff      	cmp	r6, #255	; 0xff
 80009c2:	d024      	beq.n	8000a0e <__aeabi_fdiv+0x6a>
 80009c4:	2380      	movs	r3, #128	; 0x80
 80009c6:	00e4      	lsls	r4, r4, #3
 80009c8:	04db      	lsls	r3, r3, #19
 80009ca:	431c      	orrs	r4, r3
 80009cc:	2300      	movs	r3, #0
 80009ce:	4699      	mov	r9, r3
 80009d0:	469b      	mov	fp, r3
 80009d2:	3e7f      	subs	r6, #127	; 0x7f
 80009d4:	4643      	mov	r3, r8
 80009d6:	4642      	mov	r2, r8
 80009d8:	025d      	lsls	r5, r3, #9
 80009da:	0fd2      	lsrs	r2, r2, #31
 80009dc:	005b      	lsls	r3, r3, #1
 80009de:	0a6d      	lsrs	r5, r5, #9
 80009e0:	0e1b      	lsrs	r3, r3, #24
 80009e2:	4690      	mov	r8, r2
 80009e4:	4692      	mov	sl, r2
 80009e6:	d065      	beq.n	8000ab4 <__aeabi_fdiv+0x110>
 80009e8:	2bff      	cmp	r3, #255	; 0xff
 80009ea:	d055      	beq.n	8000a98 <__aeabi_fdiv+0xf4>
 80009ec:	2280      	movs	r2, #128	; 0x80
 80009ee:	2100      	movs	r1, #0
 80009f0:	00ed      	lsls	r5, r5, #3
 80009f2:	04d2      	lsls	r2, r2, #19
 80009f4:	3b7f      	subs	r3, #127	; 0x7f
 80009f6:	4315      	orrs	r5, r2
 80009f8:	1af6      	subs	r6, r6, r3
 80009fa:	4643      	mov	r3, r8
 80009fc:	464a      	mov	r2, r9
 80009fe:	407b      	eors	r3, r7
 8000a00:	2a0f      	cmp	r2, #15
 8000a02:	d900      	bls.n	8000a06 <__aeabi_fdiv+0x62>
 8000a04:	e08d      	b.n	8000b22 <__aeabi_fdiv+0x17e>
 8000a06:	486d      	ldr	r0, [pc, #436]	; (8000bbc <__aeabi_fdiv+0x218>)
 8000a08:	0092      	lsls	r2, r2, #2
 8000a0a:	5882      	ldr	r2, [r0, r2]
 8000a0c:	4697      	mov	pc, r2
 8000a0e:	2c00      	cmp	r4, #0
 8000a10:	d154      	bne.n	8000abc <__aeabi_fdiv+0x118>
 8000a12:	2308      	movs	r3, #8
 8000a14:	4699      	mov	r9, r3
 8000a16:	3b06      	subs	r3, #6
 8000a18:	26ff      	movs	r6, #255	; 0xff
 8000a1a:	469b      	mov	fp, r3
 8000a1c:	e7da      	b.n	80009d4 <__aeabi_fdiv+0x30>
 8000a1e:	2500      	movs	r5, #0
 8000a20:	4653      	mov	r3, sl
 8000a22:	2902      	cmp	r1, #2
 8000a24:	d01b      	beq.n	8000a5e <__aeabi_fdiv+0xba>
 8000a26:	2903      	cmp	r1, #3
 8000a28:	d100      	bne.n	8000a2c <__aeabi_fdiv+0x88>
 8000a2a:	e0bf      	b.n	8000bac <__aeabi_fdiv+0x208>
 8000a2c:	2901      	cmp	r1, #1
 8000a2e:	d028      	beq.n	8000a82 <__aeabi_fdiv+0xde>
 8000a30:	0030      	movs	r0, r6
 8000a32:	307f      	adds	r0, #127	; 0x7f
 8000a34:	2800      	cmp	r0, #0
 8000a36:	dd20      	ble.n	8000a7a <__aeabi_fdiv+0xd6>
 8000a38:	076a      	lsls	r2, r5, #29
 8000a3a:	d004      	beq.n	8000a46 <__aeabi_fdiv+0xa2>
 8000a3c:	220f      	movs	r2, #15
 8000a3e:	402a      	ands	r2, r5
 8000a40:	2a04      	cmp	r2, #4
 8000a42:	d000      	beq.n	8000a46 <__aeabi_fdiv+0xa2>
 8000a44:	3504      	adds	r5, #4
 8000a46:	012a      	lsls	r2, r5, #4
 8000a48:	d503      	bpl.n	8000a52 <__aeabi_fdiv+0xae>
 8000a4a:	0030      	movs	r0, r6
 8000a4c:	4a5c      	ldr	r2, [pc, #368]	; (8000bc0 <__aeabi_fdiv+0x21c>)
 8000a4e:	3080      	adds	r0, #128	; 0x80
 8000a50:	4015      	ands	r5, r2
 8000a52:	28fe      	cmp	r0, #254	; 0xfe
 8000a54:	dc03      	bgt.n	8000a5e <__aeabi_fdiv+0xba>
 8000a56:	01ac      	lsls	r4, r5, #6
 8000a58:	0a64      	lsrs	r4, r4, #9
 8000a5a:	b2c2      	uxtb	r2, r0
 8000a5c:	e001      	b.n	8000a62 <__aeabi_fdiv+0xbe>
 8000a5e:	22ff      	movs	r2, #255	; 0xff
 8000a60:	2400      	movs	r4, #0
 8000a62:	0264      	lsls	r4, r4, #9
 8000a64:	05d2      	lsls	r2, r2, #23
 8000a66:	0a60      	lsrs	r0, r4, #9
 8000a68:	07db      	lsls	r3, r3, #31
 8000a6a:	4310      	orrs	r0, r2
 8000a6c:	4318      	orrs	r0, r3
 8000a6e:	bc3c      	pop	{r2, r3, r4, r5}
 8000a70:	4690      	mov	r8, r2
 8000a72:	4699      	mov	r9, r3
 8000a74:	46a2      	mov	sl, r4
 8000a76:	46ab      	mov	fp, r5
 8000a78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a7a:	2201      	movs	r2, #1
 8000a7c:	1a10      	subs	r0, r2, r0
 8000a7e:	281b      	cmp	r0, #27
 8000a80:	dd7c      	ble.n	8000b7c <__aeabi_fdiv+0x1d8>
 8000a82:	2200      	movs	r2, #0
 8000a84:	2400      	movs	r4, #0
 8000a86:	e7ec      	b.n	8000a62 <__aeabi_fdiv+0xbe>
 8000a88:	2c00      	cmp	r4, #0
 8000a8a:	d11d      	bne.n	8000ac8 <__aeabi_fdiv+0x124>
 8000a8c:	2304      	movs	r3, #4
 8000a8e:	4699      	mov	r9, r3
 8000a90:	3b03      	subs	r3, #3
 8000a92:	2600      	movs	r6, #0
 8000a94:	469b      	mov	fp, r3
 8000a96:	e79d      	b.n	80009d4 <__aeabi_fdiv+0x30>
 8000a98:	3eff      	subs	r6, #255	; 0xff
 8000a9a:	2d00      	cmp	r5, #0
 8000a9c:	d120      	bne.n	8000ae0 <__aeabi_fdiv+0x13c>
 8000a9e:	2102      	movs	r1, #2
 8000aa0:	4643      	mov	r3, r8
 8000aa2:	464a      	mov	r2, r9
 8000aa4:	407b      	eors	r3, r7
 8000aa6:	430a      	orrs	r2, r1
 8000aa8:	2a0f      	cmp	r2, #15
 8000aaa:	d8d8      	bhi.n	8000a5e <__aeabi_fdiv+0xba>
 8000aac:	4845      	ldr	r0, [pc, #276]	; (8000bc4 <__aeabi_fdiv+0x220>)
 8000aae:	0092      	lsls	r2, r2, #2
 8000ab0:	5882      	ldr	r2, [r0, r2]
 8000ab2:	4697      	mov	pc, r2
 8000ab4:	2d00      	cmp	r5, #0
 8000ab6:	d119      	bne.n	8000aec <__aeabi_fdiv+0x148>
 8000ab8:	2101      	movs	r1, #1
 8000aba:	e7f1      	b.n	8000aa0 <__aeabi_fdiv+0xfc>
 8000abc:	230c      	movs	r3, #12
 8000abe:	4699      	mov	r9, r3
 8000ac0:	3b09      	subs	r3, #9
 8000ac2:	26ff      	movs	r6, #255	; 0xff
 8000ac4:	469b      	mov	fp, r3
 8000ac6:	e785      	b.n	80009d4 <__aeabi_fdiv+0x30>
 8000ac8:	0020      	movs	r0, r4
 8000aca:	f002 fb0d 	bl	80030e8 <__clzsi2>
 8000ace:	2676      	movs	r6, #118	; 0x76
 8000ad0:	1f43      	subs	r3, r0, #5
 8000ad2:	409c      	lsls	r4, r3
 8000ad4:	2300      	movs	r3, #0
 8000ad6:	4276      	negs	r6, r6
 8000ad8:	1a36      	subs	r6, r6, r0
 8000ada:	4699      	mov	r9, r3
 8000adc:	469b      	mov	fp, r3
 8000ade:	e779      	b.n	80009d4 <__aeabi_fdiv+0x30>
 8000ae0:	464a      	mov	r2, r9
 8000ae2:	2303      	movs	r3, #3
 8000ae4:	431a      	orrs	r2, r3
 8000ae6:	4691      	mov	r9, r2
 8000ae8:	2103      	movs	r1, #3
 8000aea:	e786      	b.n	80009fa <__aeabi_fdiv+0x56>
 8000aec:	0028      	movs	r0, r5
 8000aee:	f002 fafb 	bl	80030e8 <__clzsi2>
 8000af2:	1f43      	subs	r3, r0, #5
 8000af4:	1836      	adds	r6, r6, r0
 8000af6:	409d      	lsls	r5, r3
 8000af8:	3676      	adds	r6, #118	; 0x76
 8000afa:	2100      	movs	r1, #0
 8000afc:	e77d      	b.n	80009fa <__aeabi_fdiv+0x56>
 8000afe:	2480      	movs	r4, #128	; 0x80
 8000b00:	2300      	movs	r3, #0
 8000b02:	03e4      	lsls	r4, r4, #15
 8000b04:	22ff      	movs	r2, #255	; 0xff
 8000b06:	e7ac      	b.n	8000a62 <__aeabi_fdiv+0xbe>
 8000b08:	2500      	movs	r5, #0
 8000b0a:	2380      	movs	r3, #128	; 0x80
 8000b0c:	03db      	lsls	r3, r3, #15
 8000b0e:	421c      	tst	r4, r3
 8000b10:	d028      	beq.n	8000b64 <__aeabi_fdiv+0x1c0>
 8000b12:	421d      	tst	r5, r3
 8000b14:	d126      	bne.n	8000b64 <__aeabi_fdiv+0x1c0>
 8000b16:	432b      	orrs	r3, r5
 8000b18:	025c      	lsls	r4, r3, #9
 8000b1a:	0a64      	lsrs	r4, r4, #9
 8000b1c:	4643      	mov	r3, r8
 8000b1e:	22ff      	movs	r2, #255	; 0xff
 8000b20:	e79f      	b.n	8000a62 <__aeabi_fdiv+0xbe>
 8000b22:	0162      	lsls	r2, r4, #5
 8000b24:	016c      	lsls	r4, r5, #5
 8000b26:	42a2      	cmp	r2, r4
 8000b28:	d224      	bcs.n	8000b74 <__aeabi_fdiv+0x1d0>
 8000b2a:	211b      	movs	r1, #27
 8000b2c:	2500      	movs	r5, #0
 8000b2e:	3e01      	subs	r6, #1
 8000b30:	2701      	movs	r7, #1
 8000b32:	0010      	movs	r0, r2
 8000b34:	006d      	lsls	r5, r5, #1
 8000b36:	0052      	lsls	r2, r2, #1
 8000b38:	2800      	cmp	r0, #0
 8000b3a:	db01      	blt.n	8000b40 <__aeabi_fdiv+0x19c>
 8000b3c:	4294      	cmp	r4, r2
 8000b3e:	d801      	bhi.n	8000b44 <__aeabi_fdiv+0x1a0>
 8000b40:	1b12      	subs	r2, r2, r4
 8000b42:	433d      	orrs	r5, r7
 8000b44:	3901      	subs	r1, #1
 8000b46:	2900      	cmp	r1, #0
 8000b48:	d1f3      	bne.n	8000b32 <__aeabi_fdiv+0x18e>
 8000b4a:	0014      	movs	r4, r2
 8000b4c:	1e62      	subs	r2, r4, #1
 8000b4e:	4194      	sbcs	r4, r2
 8000b50:	4325      	orrs	r5, r4
 8000b52:	e76d      	b.n	8000a30 <__aeabi_fdiv+0x8c>
 8000b54:	46ba      	mov	sl, r7
 8000b56:	4659      	mov	r1, fp
 8000b58:	0025      	movs	r5, r4
 8000b5a:	4653      	mov	r3, sl
 8000b5c:	2902      	cmp	r1, #2
 8000b5e:	d000      	beq.n	8000b62 <__aeabi_fdiv+0x1be>
 8000b60:	e761      	b.n	8000a26 <__aeabi_fdiv+0x82>
 8000b62:	e77c      	b.n	8000a5e <__aeabi_fdiv+0xba>
 8000b64:	2380      	movs	r3, #128	; 0x80
 8000b66:	03db      	lsls	r3, r3, #15
 8000b68:	431c      	orrs	r4, r3
 8000b6a:	0264      	lsls	r4, r4, #9
 8000b6c:	0a64      	lsrs	r4, r4, #9
 8000b6e:	003b      	movs	r3, r7
 8000b70:	22ff      	movs	r2, #255	; 0xff
 8000b72:	e776      	b.n	8000a62 <__aeabi_fdiv+0xbe>
 8000b74:	1b12      	subs	r2, r2, r4
 8000b76:	211a      	movs	r1, #26
 8000b78:	2501      	movs	r5, #1
 8000b7a:	e7d9      	b.n	8000b30 <__aeabi_fdiv+0x18c>
 8000b7c:	369e      	adds	r6, #158	; 0x9e
 8000b7e:	002a      	movs	r2, r5
 8000b80:	40b5      	lsls	r5, r6
 8000b82:	002c      	movs	r4, r5
 8000b84:	40c2      	lsrs	r2, r0
 8000b86:	1e65      	subs	r5, r4, #1
 8000b88:	41ac      	sbcs	r4, r5
 8000b8a:	4314      	orrs	r4, r2
 8000b8c:	0762      	lsls	r2, r4, #29
 8000b8e:	d004      	beq.n	8000b9a <__aeabi_fdiv+0x1f6>
 8000b90:	220f      	movs	r2, #15
 8000b92:	4022      	ands	r2, r4
 8000b94:	2a04      	cmp	r2, #4
 8000b96:	d000      	beq.n	8000b9a <__aeabi_fdiv+0x1f6>
 8000b98:	3404      	adds	r4, #4
 8000b9a:	0162      	lsls	r2, r4, #5
 8000b9c:	d403      	bmi.n	8000ba6 <__aeabi_fdiv+0x202>
 8000b9e:	01a4      	lsls	r4, r4, #6
 8000ba0:	0a64      	lsrs	r4, r4, #9
 8000ba2:	2200      	movs	r2, #0
 8000ba4:	e75d      	b.n	8000a62 <__aeabi_fdiv+0xbe>
 8000ba6:	2201      	movs	r2, #1
 8000ba8:	2400      	movs	r4, #0
 8000baa:	e75a      	b.n	8000a62 <__aeabi_fdiv+0xbe>
 8000bac:	2480      	movs	r4, #128	; 0x80
 8000bae:	03e4      	lsls	r4, r4, #15
 8000bb0:	432c      	orrs	r4, r5
 8000bb2:	0264      	lsls	r4, r4, #9
 8000bb4:	0a64      	lsrs	r4, r4, #9
 8000bb6:	22ff      	movs	r2, #255	; 0xff
 8000bb8:	e753      	b.n	8000a62 <__aeabi_fdiv+0xbe>
 8000bba:	46c0      	nop			; (mov r8, r8)
 8000bbc:	0800d3e4 	.word	0x0800d3e4
 8000bc0:	f7ffffff 	.word	0xf7ffffff
 8000bc4:	0800d424 	.word	0x0800d424

08000bc8 <__eqsf2>:
 8000bc8:	b570      	push	{r4, r5, r6, lr}
 8000bca:	0042      	lsls	r2, r0, #1
 8000bcc:	024e      	lsls	r6, r1, #9
 8000bce:	004c      	lsls	r4, r1, #1
 8000bd0:	0245      	lsls	r5, r0, #9
 8000bd2:	0a6d      	lsrs	r5, r5, #9
 8000bd4:	0e12      	lsrs	r2, r2, #24
 8000bd6:	0fc3      	lsrs	r3, r0, #31
 8000bd8:	0a76      	lsrs	r6, r6, #9
 8000bda:	0e24      	lsrs	r4, r4, #24
 8000bdc:	0fc9      	lsrs	r1, r1, #31
 8000bde:	2aff      	cmp	r2, #255	; 0xff
 8000be0:	d00f      	beq.n	8000c02 <__eqsf2+0x3a>
 8000be2:	2cff      	cmp	r4, #255	; 0xff
 8000be4:	d011      	beq.n	8000c0a <__eqsf2+0x42>
 8000be6:	2001      	movs	r0, #1
 8000be8:	42a2      	cmp	r2, r4
 8000bea:	d000      	beq.n	8000bee <__eqsf2+0x26>
 8000bec:	bd70      	pop	{r4, r5, r6, pc}
 8000bee:	42b5      	cmp	r5, r6
 8000bf0:	d1fc      	bne.n	8000bec <__eqsf2+0x24>
 8000bf2:	428b      	cmp	r3, r1
 8000bf4:	d00d      	beq.n	8000c12 <__eqsf2+0x4a>
 8000bf6:	2a00      	cmp	r2, #0
 8000bf8:	d1f8      	bne.n	8000bec <__eqsf2+0x24>
 8000bfa:	0028      	movs	r0, r5
 8000bfc:	1e45      	subs	r5, r0, #1
 8000bfe:	41a8      	sbcs	r0, r5
 8000c00:	e7f4      	b.n	8000bec <__eqsf2+0x24>
 8000c02:	2001      	movs	r0, #1
 8000c04:	2d00      	cmp	r5, #0
 8000c06:	d1f1      	bne.n	8000bec <__eqsf2+0x24>
 8000c08:	e7eb      	b.n	8000be2 <__eqsf2+0x1a>
 8000c0a:	2001      	movs	r0, #1
 8000c0c:	2e00      	cmp	r6, #0
 8000c0e:	d1ed      	bne.n	8000bec <__eqsf2+0x24>
 8000c10:	e7e9      	b.n	8000be6 <__eqsf2+0x1e>
 8000c12:	2000      	movs	r0, #0
 8000c14:	e7ea      	b.n	8000bec <__eqsf2+0x24>
 8000c16:	46c0      	nop			; (mov r8, r8)

08000c18 <__gesf2>:
 8000c18:	b570      	push	{r4, r5, r6, lr}
 8000c1a:	004a      	lsls	r2, r1, #1
 8000c1c:	024e      	lsls	r6, r1, #9
 8000c1e:	0245      	lsls	r5, r0, #9
 8000c20:	0044      	lsls	r4, r0, #1
 8000c22:	0a6d      	lsrs	r5, r5, #9
 8000c24:	0e24      	lsrs	r4, r4, #24
 8000c26:	0fc3      	lsrs	r3, r0, #31
 8000c28:	0a76      	lsrs	r6, r6, #9
 8000c2a:	0e12      	lsrs	r2, r2, #24
 8000c2c:	0fc9      	lsrs	r1, r1, #31
 8000c2e:	2cff      	cmp	r4, #255	; 0xff
 8000c30:	d015      	beq.n	8000c5e <__gesf2+0x46>
 8000c32:	2aff      	cmp	r2, #255	; 0xff
 8000c34:	d00e      	beq.n	8000c54 <__gesf2+0x3c>
 8000c36:	2c00      	cmp	r4, #0
 8000c38:	d115      	bne.n	8000c66 <__gesf2+0x4e>
 8000c3a:	2a00      	cmp	r2, #0
 8000c3c:	d101      	bne.n	8000c42 <__gesf2+0x2a>
 8000c3e:	2e00      	cmp	r6, #0
 8000c40:	d01c      	beq.n	8000c7c <__gesf2+0x64>
 8000c42:	2d00      	cmp	r5, #0
 8000c44:	d014      	beq.n	8000c70 <__gesf2+0x58>
 8000c46:	428b      	cmp	r3, r1
 8000c48:	d027      	beq.n	8000c9a <__gesf2+0x82>
 8000c4a:	2002      	movs	r0, #2
 8000c4c:	3b01      	subs	r3, #1
 8000c4e:	4018      	ands	r0, r3
 8000c50:	3801      	subs	r0, #1
 8000c52:	bd70      	pop	{r4, r5, r6, pc}
 8000c54:	2e00      	cmp	r6, #0
 8000c56:	d0ee      	beq.n	8000c36 <__gesf2+0x1e>
 8000c58:	2002      	movs	r0, #2
 8000c5a:	4240      	negs	r0, r0
 8000c5c:	e7f9      	b.n	8000c52 <__gesf2+0x3a>
 8000c5e:	2d00      	cmp	r5, #0
 8000c60:	d1fa      	bne.n	8000c58 <__gesf2+0x40>
 8000c62:	2aff      	cmp	r2, #255	; 0xff
 8000c64:	d00e      	beq.n	8000c84 <__gesf2+0x6c>
 8000c66:	2a00      	cmp	r2, #0
 8000c68:	d10e      	bne.n	8000c88 <__gesf2+0x70>
 8000c6a:	2e00      	cmp	r6, #0
 8000c6c:	d0ed      	beq.n	8000c4a <__gesf2+0x32>
 8000c6e:	e00b      	b.n	8000c88 <__gesf2+0x70>
 8000c70:	2301      	movs	r3, #1
 8000c72:	3901      	subs	r1, #1
 8000c74:	4399      	bics	r1, r3
 8000c76:	0008      	movs	r0, r1
 8000c78:	3001      	adds	r0, #1
 8000c7a:	e7ea      	b.n	8000c52 <__gesf2+0x3a>
 8000c7c:	2000      	movs	r0, #0
 8000c7e:	2d00      	cmp	r5, #0
 8000c80:	d0e7      	beq.n	8000c52 <__gesf2+0x3a>
 8000c82:	e7e2      	b.n	8000c4a <__gesf2+0x32>
 8000c84:	2e00      	cmp	r6, #0
 8000c86:	d1e7      	bne.n	8000c58 <__gesf2+0x40>
 8000c88:	428b      	cmp	r3, r1
 8000c8a:	d1de      	bne.n	8000c4a <__gesf2+0x32>
 8000c8c:	4294      	cmp	r4, r2
 8000c8e:	dd05      	ble.n	8000c9c <__gesf2+0x84>
 8000c90:	2102      	movs	r1, #2
 8000c92:	1e58      	subs	r0, r3, #1
 8000c94:	4008      	ands	r0, r1
 8000c96:	3801      	subs	r0, #1
 8000c98:	e7db      	b.n	8000c52 <__gesf2+0x3a>
 8000c9a:	2400      	movs	r4, #0
 8000c9c:	42a2      	cmp	r2, r4
 8000c9e:	dc04      	bgt.n	8000caa <__gesf2+0x92>
 8000ca0:	42b5      	cmp	r5, r6
 8000ca2:	d8d2      	bhi.n	8000c4a <__gesf2+0x32>
 8000ca4:	2000      	movs	r0, #0
 8000ca6:	42b5      	cmp	r5, r6
 8000ca8:	d2d3      	bcs.n	8000c52 <__gesf2+0x3a>
 8000caa:	1e58      	subs	r0, r3, #1
 8000cac:	2301      	movs	r3, #1
 8000cae:	4398      	bics	r0, r3
 8000cb0:	3001      	adds	r0, #1
 8000cb2:	e7ce      	b.n	8000c52 <__gesf2+0x3a>

08000cb4 <__lesf2>:
 8000cb4:	b530      	push	{r4, r5, lr}
 8000cb6:	0042      	lsls	r2, r0, #1
 8000cb8:	0244      	lsls	r4, r0, #9
 8000cba:	024d      	lsls	r5, r1, #9
 8000cbc:	0fc3      	lsrs	r3, r0, #31
 8000cbe:	0048      	lsls	r0, r1, #1
 8000cc0:	0a64      	lsrs	r4, r4, #9
 8000cc2:	0e12      	lsrs	r2, r2, #24
 8000cc4:	0a6d      	lsrs	r5, r5, #9
 8000cc6:	0e00      	lsrs	r0, r0, #24
 8000cc8:	0fc9      	lsrs	r1, r1, #31
 8000cca:	2aff      	cmp	r2, #255	; 0xff
 8000ccc:	d012      	beq.n	8000cf4 <__lesf2+0x40>
 8000cce:	28ff      	cmp	r0, #255	; 0xff
 8000cd0:	d00c      	beq.n	8000cec <__lesf2+0x38>
 8000cd2:	2a00      	cmp	r2, #0
 8000cd4:	d112      	bne.n	8000cfc <__lesf2+0x48>
 8000cd6:	2800      	cmp	r0, #0
 8000cd8:	d119      	bne.n	8000d0e <__lesf2+0x5a>
 8000cda:	2d00      	cmp	r5, #0
 8000cdc:	d117      	bne.n	8000d0e <__lesf2+0x5a>
 8000cde:	2c00      	cmp	r4, #0
 8000ce0:	d02b      	beq.n	8000d3a <__lesf2+0x86>
 8000ce2:	2002      	movs	r0, #2
 8000ce4:	3b01      	subs	r3, #1
 8000ce6:	4018      	ands	r0, r3
 8000ce8:	3801      	subs	r0, #1
 8000cea:	e026      	b.n	8000d3a <__lesf2+0x86>
 8000cec:	2d00      	cmp	r5, #0
 8000cee:	d0f0      	beq.n	8000cd2 <__lesf2+0x1e>
 8000cf0:	2002      	movs	r0, #2
 8000cf2:	e022      	b.n	8000d3a <__lesf2+0x86>
 8000cf4:	2c00      	cmp	r4, #0
 8000cf6:	d1fb      	bne.n	8000cf0 <__lesf2+0x3c>
 8000cf8:	28ff      	cmp	r0, #255	; 0xff
 8000cfa:	d01f      	beq.n	8000d3c <__lesf2+0x88>
 8000cfc:	2800      	cmp	r0, #0
 8000cfe:	d11f      	bne.n	8000d40 <__lesf2+0x8c>
 8000d00:	2d00      	cmp	r5, #0
 8000d02:	d11d      	bne.n	8000d40 <__lesf2+0x8c>
 8000d04:	2002      	movs	r0, #2
 8000d06:	3b01      	subs	r3, #1
 8000d08:	4018      	ands	r0, r3
 8000d0a:	3801      	subs	r0, #1
 8000d0c:	e015      	b.n	8000d3a <__lesf2+0x86>
 8000d0e:	2c00      	cmp	r4, #0
 8000d10:	d00e      	beq.n	8000d30 <__lesf2+0x7c>
 8000d12:	428b      	cmp	r3, r1
 8000d14:	d1e5      	bne.n	8000ce2 <__lesf2+0x2e>
 8000d16:	2200      	movs	r2, #0
 8000d18:	4290      	cmp	r0, r2
 8000d1a:	dc04      	bgt.n	8000d26 <__lesf2+0x72>
 8000d1c:	42ac      	cmp	r4, r5
 8000d1e:	d8e0      	bhi.n	8000ce2 <__lesf2+0x2e>
 8000d20:	2000      	movs	r0, #0
 8000d22:	42ac      	cmp	r4, r5
 8000d24:	d209      	bcs.n	8000d3a <__lesf2+0x86>
 8000d26:	1e58      	subs	r0, r3, #1
 8000d28:	2301      	movs	r3, #1
 8000d2a:	4398      	bics	r0, r3
 8000d2c:	3001      	adds	r0, #1
 8000d2e:	e004      	b.n	8000d3a <__lesf2+0x86>
 8000d30:	2301      	movs	r3, #1
 8000d32:	3901      	subs	r1, #1
 8000d34:	4399      	bics	r1, r3
 8000d36:	0008      	movs	r0, r1
 8000d38:	3001      	adds	r0, #1
 8000d3a:	bd30      	pop	{r4, r5, pc}
 8000d3c:	2d00      	cmp	r5, #0
 8000d3e:	d1d7      	bne.n	8000cf0 <__lesf2+0x3c>
 8000d40:	428b      	cmp	r3, r1
 8000d42:	d1ce      	bne.n	8000ce2 <__lesf2+0x2e>
 8000d44:	4282      	cmp	r2, r0
 8000d46:	dde7      	ble.n	8000d18 <__lesf2+0x64>
 8000d48:	2102      	movs	r1, #2
 8000d4a:	1e58      	subs	r0, r3, #1
 8000d4c:	4008      	ands	r0, r1
 8000d4e:	3801      	subs	r0, #1
 8000d50:	e7f3      	b.n	8000d3a <__lesf2+0x86>
 8000d52:	46c0      	nop			; (mov r8, r8)

08000d54 <__aeabi_fmul>:
 8000d54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d56:	464e      	mov	r6, r9
 8000d58:	4657      	mov	r7, sl
 8000d5a:	4645      	mov	r5, r8
 8000d5c:	46de      	mov	lr, fp
 8000d5e:	b5e0      	push	{r5, r6, r7, lr}
 8000d60:	0243      	lsls	r3, r0, #9
 8000d62:	0a5b      	lsrs	r3, r3, #9
 8000d64:	0045      	lsls	r5, r0, #1
 8000d66:	b083      	sub	sp, #12
 8000d68:	1c0f      	adds	r7, r1, #0
 8000d6a:	4699      	mov	r9, r3
 8000d6c:	0e2d      	lsrs	r5, r5, #24
 8000d6e:	0fc6      	lsrs	r6, r0, #31
 8000d70:	2d00      	cmp	r5, #0
 8000d72:	d057      	beq.n	8000e24 <__aeabi_fmul+0xd0>
 8000d74:	2dff      	cmp	r5, #255	; 0xff
 8000d76:	d024      	beq.n	8000dc2 <__aeabi_fmul+0x6e>
 8000d78:	2080      	movs	r0, #128	; 0x80
 8000d7a:	00db      	lsls	r3, r3, #3
 8000d7c:	04c0      	lsls	r0, r0, #19
 8000d7e:	4318      	orrs	r0, r3
 8000d80:	2300      	movs	r3, #0
 8000d82:	4681      	mov	r9, r0
 8000d84:	469a      	mov	sl, r3
 8000d86:	469b      	mov	fp, r3
 8000d88:	3d7f      	subs	r5, #127	; 0x7f
 8000d8a:	027c      	lsls	r4, r7, #9
 8000d8c:	007a      	lsls	r2, r7, #1
 8000d8e:	0ffb      	lsrs	r3, r7, #31
 8000d90:	0a64      	lsrs	r4, r4, #9
 8000d92:	0e12      	lsrs	r2, r2, #24
 8000d94:	4698      	mov	r8, r3
 8000d96:	d023      	beq.n	8000de0 <__aeabi_fmul+0x8c>
 8000d98:	2aff      	cmp	r2, #255	; 0xff
 8000d9a:	d04b      	beq.n	8000e34 <__aeabi_fmul+0xe0>
 8000d9c:	00e3      	lsls	r3, r4, #3
 8000d9e:	2480      	movs	r4, #128	; 0x80
 8000da0:	2000      	movs	r0, #0
 8000da2:	04e4      	lsls	r4, r4, #19
 8000da4:	3a7f      	subs	r2, #127	; 0x7f
 8000da6:	431c      	orrs	r4, r3
 8000da8:	18ad      	adds	r5, r5, r2
 8000daa:	1c6b      	adds	r3, r5, #1
 8000dac:	4647      	mov	r7, r8
 8000dae:	9301      	str	r3, [sp, #4]
 8000db0:	4653      	mov	r3, sl
 8000db2:	4077      	eors	r7, r6
 8000db4:	003a      	movs	r2, r7
 8000db6:	2b0f      	cmp	r3, #15
 8000db8:	d848      	bhi.n	8000e4c <__aeabi_fmul+0xf8>
 8000dba:	497d      	ldr	r1, [pc, #500]	; (8000fb0 <__aeabi_fmul+0x25c>)
 8000dbc:	009b      	lsls	r3, r3, #2
 8000dbe:	58cb      	ldr	r3, [r1, r3]
 8000dc0:	469f      	mov	pc, r3
 8000dc2:	2b00      	cmp	r3, #0
 8000dc4:	d000      	beq.n	8000dc8 <__aeabi_fmul+0x74>
 8000dc6:	e085      	b.n	8000ed4 <__aeabi_fmul+0x180>
 8000dc8:	3308      	adds	r3, #8
 8000dca:	469a      	mov	sl, r3
 8000dcc:	3b06      	subs	r3, #6
 8000dce:	469b      	mov	fp, r3
 8000dd0:	027c      	lsls	r4, r7, #9
 8000dd2:	007a      	lsls	r2, r7, #1
 8000dd4:	0ffb      	lsrs	r3, r7, #31
 8000dd6:	25ff      	movs	r5, #255	; 0xff
 8000dd8:	0a64      	lsrs	r4, r4, #9
 8000dda:	0e12      	lsrs	r2, r2, #24
 8000ddc:	4698      	mov	r8, r3
 8000dde:	d1db      	bne.n	8000d98 <__aeabi_fmul+0x44>
 8000de0:	2c00      	cmp	r4, #0
 8000de2:	d000      	beq.n	8000de6 <__aeabi_fmul+0x92>
 8000de4:	e090      	b.n	8000f08 <__aeabi_fmul+0x1b4>
 8000de6:	4652      	mov	r2, sl
 8000de8:	2301      	movs	r3, #1
 8000dea:	431a      	orrs	r2, r3
 8000dec:	4692      	mov	sl, r2
 8000dee:	2001      	movs	r0, #1
 8000df0:	e7db      	b.n	8000daa <__aeabi_fmul+0x56>
 8000df2:	464c      	mov	r4, r9
 8000df4:	4658      	mov	r0, fp
 8000df6:	0017      	movs	r7, r2
 8000df8:	2802      	cmp	r0, #2
 8000dfa:	d024      	beq.n	8000e46 <__aeabi_fmul+0xf2>
 8000dfc:	2803      	cmp	r0, #3
 8000dfe:	d100      	bne.n	8000e02 <__aeabi_fmul+0xae>
 8000e00:	e0cf      	b.n	8000fa2 <__aeabi_fmul+0x24e>
 8000e02:	2200      	movs	r2, #0
 8000e04:	2300      	movs	r3, #0
 8000e06:	2801      	cmp	r0, #1
 8000e08:	d14d      	bne.n	8000ea6 <__aeabi_fmul+0x152>
 8000e0a:	0258      	lsls	r0, r3, #9
 8000e0c:	05d2      	lsls	r2, r2, #23
 8000e0e:	0a40      	lsrs	r0, r0, #9
 8000e10:	07ff      	lsls	r7, r7, #31
 8000e12:	4310      	orrs	r0, r2
 8000e14:	4338      	orrs	r0, r7
 8000e16:	b003      	add	sp, #12
 8000e18:	bc3c      	pop	{r2, r3, r4, r5}
 8000e1a:	4690      	mov	r8, r2
 8000e1c:	4699      	mov	r9, r3
 8000e1e:	46a2      	mov	sl, r4
 8000e20:	46ab      	mov	fp, r5
 8000e22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e24:	2b00      	cmp	r3, #0
 8000e26:	d15b      	bne.n	8000ee0 <__aeabi_fmul+0x18c>
 8000e28:	2304      	movs	r3, #4
 8000e2a:	469a      	mov	sl, r3
 8000e2c:	3b03      	subs	r3, #3
 8000e2e:	2500      	movs	r5, #0
 8000e30:	469b      	mov	fp, r3
 8000e32:	e7aa      	b.n	8000d8a <__aeabi_fmul+0x36>
 8000e34:	35ff      	adds	r5, #255	; 0xff
 8000e36:	2c00      	cmp	r4, #0
 8000e38:	d160      	bne.n	8000efc <__aeabi_fmul+0x1a8>
 8000e3a:	4652      	mov	r2, sl
 8000e3c:	2302      	movs	r3, #2
 8000e3e:	431a      	orrs	r2, r3
 8000e40:	4692      	mov	sl, r2
 8000e42:	2002      	movs	r0, #2
 8000e44:	e7b1      	b.n	8000daa <__aeabi_fmul+0x56>
 8000e46:	22ff      	movs	r2, #255	; 0xff
 8000e48:	2300      	movs	r3, #0
 8000e4a:	e7de      	b.n	8000e0a <__aeabi_fmul+0xb6>
 8000e4c:	464b      	mov	r3, r9
 8000e4e:	0c1b      	lsrs	r3, r3, #16
 8000e50:	469c      	mov	ip, r3
 8000e52:	464b      	mov	r3, r9
 8000e54:	0426      	lsls	r6, r4, #16
 8000e56:	0c36      	lsrs	r6, r6, #16
 8000e58:	0418      	lsls	r0, r3, #16
 8000e5a:	4661      	mov	r1, ip
 8000e5c:	0033      	movs	r3, r6
 8000e5e:	0c22      	lsrs	r2, r4, #16
 8000e60:	4664      	mov	r4, ip
 8000e62:	0c00      	lsrs	r0, r0, #16
 8000e64:	4343      	muls	r3, r0
 8000e66:	434e      	muls	r6, r1
 8000e68:	4350      	muls	r0, r2
 8000e6a:	4354      	muls	r4, r2
 8000e6c:	1980      	adds	r0, r0, r6
 8000e6e:	0c1a      	lsrs	r2, r3, #16
 8000e70:	1812      	adds	r2, r2, r0
 8000e72:	4296      	cmp	r6, r2
 8000e74:	d903      	bls.n	8000e7e <__aeabi_fmul+0x12a>
 8000e76:	2180      	movs	r1, #128	; 0x80
 8000e78:	0249      	lsls	r1, r1, #9
 8000e7a:	468c      	mov	ip, r1
 8000e7c:	4464      	add	r4, ip
 8000e7e:	041b      	lsls	r3, r3, #16
 8000e80:	0c1b      	lsrs	r3, r3, #16
 8000e82:	0410      	lsls	r0, r2, #16
 8000e84:	18c0      	adds	r0, r0, r3
 8000e86:	0183      	lsls	r3, r0, #6
 8000e88:	1e5e      	subs	r6, r3, #1
 8000e8a:	41b3      	sbcs	r3, r6
 8000e8c:	0e80      	lsrs	r0, r0, #26
 8000e8e:	4318      	orrs	r0, r3
 8000e90:	0c13      	lsrs	r3, r2, #16
 8000e92:	191b      	adds	r3, r3, r4
 8000e94:	019b      	lsls	r3, r3, #6
 8000e96:	4303      	orrs	r3, r0
 8000e98:	001c      	movs	r4, r3
 8000e9a:	0123      	lsls	r3, r4, #4
 8000e9c:	d579      	bpl.n	8000f92 <__aeabi_fmul+0x23e>
 8000e9e:	2301      	movs	r3, #1
 8000ea0:	0862      	lsrs	r2, r4, #1
 8000ea2:	401c      	ands	r4, r3
 8000ea4:	4314      	orrs	r4, r2
 8000ea6:	9a01      	ldr	r2, [sp, #4]
 8000ea8:	327f      	adds	r2, #127	; 0x7f
 8000eaa:	2a00      	cmp	r2, #0
 8000eac:	dd4d      	ble.n	8000f4a <__aeabi_fmul+0x1f6>
 8000eae:	0763      	lsls	r3, r4, #29
 8000eb0:	d004      	beq.n	8000ebc <__aeabi_fmul+0x168>
 8000eb2:	230f      	movs	r3, #15
 8000eb4:	4023      	ands	r3, r4
 8000eb6:	2b04      	cmp	r3, #4
 8000eb8:	d000      	beq.n	8000ebc <__aeabi_fmul+0x168>
 8000eba:	3404      	adds	r4, #4
 8000ebc:	0123      	lsls	r3, r4, #4
 8000ebe:	d503      	bpl.n	8000ec8 <__aeabi_fmul+0x174>
 8000ec0:	4b3c      	ldr	r3, [pc, #240]	; (8000fb4 <__aeabi_fmul+0x260>)
 8000ec2:	9a01      	ldr	r2, [sp, #4]
 8000ec4:	401c      	ands	r4, r3
 8000ec6:	3280      	adds	r2, #128	; 0x80
 8000ec8:	2afe      	cmp	r2, #254	; 0xfe
 8000eca:	dcbc      	bgt.n	8000e46 <__aeabi_fmul+0xf2>
 8000ecc:	01a3      	lsls	r3, r4, #6
 8000ece:	0a5b      	lsrs	r3, r3, #9
 8000ed0:	b2d2      	uxtb	r2, r2
 8000ed2:	e79a      	b.n	8000e0a <__aeabi_fmul+0xb6>
 8000ed4:	230c      	movs	r3, #12
 8000ed6:	469a      	mov	sl, r3
 8000ed8:	3b09      	subs	r3, #9
 8000eda:	25ff      	movs	r5, #255	; 0xff
 8000edc:	469b      	mov	fp, r3
 8000ede:	e754      	b.n	8000d8a <__aeabi_fmul+0x36>
 8000ee0:	0018      	movs	r0, r3
 8000ee2:	f002 f901 	bl	80030e8 <__clzsi2>
 8000ee6:	464a      	mov	r2, r9
 8000ee8:	1f43      	subs	r3, r0, #5
 8000eea:	2576      	movs	r5, #118	; 0x76
 8000eec:	409a      	lsls	r2, r3
 8000eee:	2300      	movs	r3, #0
 8000ef0:	426d      	negs	r5, r5
 8000ef2:	4691      	mov	r9, r2
 8000ef4:	1a2d      	subs	r5, r5, r0
 8000ef6:	469a      	mov	sl, r3
 8000ef8:	469b      	mov	fp, r3
 8000efa:	e746      	b.n	8000d8a <__aeabi_fmul+0x36>
 8000efc:	4652      	mov	r2, sl
 8000efe:	2303      	movs	r3, #3
 8000f00:	431a      	orrs	r2, r3
 8000f02:	4692      	mov	sl, r2
 8000f04:	2003      	movs	r0, #3
 8000f06:	e750      	b.n	8000daa <__aeabi_fmul+0x56>
 8000f08:	0020      	movs	r0, r4
 8000f0a:	f002 f8ed 	bl	80030e8 <__clzsi2>
 8000f0e:	1f43      	subs	r3, r0, #5
 8000f10:	1a2d      	subs	r5, r5, r0
 8000f12:	409c      	lsls	r4, r3
 8000f14:	3d76      	subs	r5, #118	; 0x76
 8000f16:	2000      	movs	r0, #0
 8000f18:	e747      	b.n	8000daa <__aeabi_fmul+0x56>
 8000f1a:	2380      	movs	r3, #128	; 0x80
 8000f1c:	2700      	movs	r7, #0
 8000f1e:	03db      	lsls	r3, r3, #15
 8000f20:	22ff      	movs	r2, #255	; 0xff
 8000f22:	e772      	b.n	8000e0a <__aeabi_fmul+0xb6>
 8000f24:	4642      	mov	r2, r8
 8000f26:	e766      	b.n	8000df6 <__aeabi_fmul+0xa2>
 8000f28:	464c      	mov	r4, r9
 8000f2a:	0032      	movs	r2, r6
 8000f2c:	4658      	mov	r0, fp
 8000f2e:	e762      	b.n	8000df6 <__aeabi_fmul+0xa2>
 8000f30:	2380      	movs	r3, #128	; 0x80
 8000f32:	464a      	mov	r2, r9
 8000f34:	03db      	lsls	r3, r3, #15
 8000f36:	421a      	tst	r2, r3
 8000f38:	d022      	beq.n	8000f80 <__aeabi_fmul+0x22c>
 8000f3a:	421c      	tst	r4, r3
 8000f3c:	d120      	bne.n	8000f80 <__aeabi_fmul+0x22c>
 8000f3e:	4323      	orrs	r3, r4
 8000f40:	025b      	lsls	r3, r3, #9
 8000f42:	0a5b      	lsrs	r3, r3, #9
 8000f44:	4647      	mov	r7, r8
 8000f46:	22ff      	movs	r2, #255	; 0xff
 8000f48:	e75f      	b.n	8000e0a <__aeabi_fmul+0xb6>
 8000f4a:	2301      	movs	r3, #1
 8000f4c:	1a9a      	subs	r2, r3, r2
 8000f4e:	2a1b      	cmp	r2, #27
 8000f50:	dc21      	bgt.n	8000f96 <__aeabi_fmul+0x242>
 8000f52:	0023      	movs	r3, r4
 8000f54:	9901      	ldr	r1, [sp, #4]
 8000f56:	40d3      	lsrs	r3, r2
 8000f58:	319e      	adds	r1, #158	; 0x9e
 8000f5a:	408c      	lsls	r4, r1
 8000f5c:	001a      	movs	r2, r3
 8000f5e:	0023      	movs	r3, r4
 8000f60:	1e5c      	subs	r4, r3, #1
 8000f62:	41a3      	sbcs	r3, r4
 8000f64:	4313      	orrs	r3, r2
 8000f66:	075a      	lsls	r2, r3, #29
 8000f68:	d004      	beq.n	8000f74 <__aeabi_fmul+0x220>
 8000f6a:	220f      	movs	r2, #15
 8000f6c:	401a      	ands	r2, r3
 8000f6e:	2a04      	cmp	r2, #4
 8000f70:	d000      	beq.n	8000f74 <__aeabi_fmul+0x220>
 8000f72:	3304      	adds	r3, #4
 8000f74:	015a      	lsls	r2, r3, #5
 8000f76:	d411      	bmi.n	8000f9c <__aeabi_fmul+0x248>
 8000f78:	019b      	lsls	r3, r3, #6
 8000f7a:	0a5b      	lsrs	r3, r3, #9
 8000f7c:	2200      	movs	r2, #0
 8000f7e:	e744      	b.n	8000e0a <__aeabi_fmul+0xb6>
 8000f80:	2380      	movs	r3, #128	; 0x80
 8000f82:	464a      	mov	r2, r9
 8000f84:	03db      	lsls	r3, r3, #15
 8000f86:	4313      	orrs	r3, r2
 8000f88:	025b      	lsls	r3, r3, #9
 8000f8a:	0a5b      	lsrs	r3, r3, #9
 8000f8c:	0037      	movs	r7, r6
 8000f8e:	22ff      	movs	r2, #255	; 0xff
 8000f90:	e73b      	b.n	8000e0a <__aeabi_fmul+0xb6>
 8000f92:	9501      	str	r5, [sp, #4]
 8000f94:	e787      	b.n	8000ea6 <__aeabi_fmul+0x152>
 8000f96:	2200      	movs	r2, #0
 8000f98:	2300      	movs	r3, #0
 8000f9a:	e736      	b.n	8000e0a <__aeabi_fmul+0xb6>
 8000f9c:	2201      	movs	r2, #1
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	e733      	b.n	8000e0a <__aeabi_fmul+0xb6>
 8000fa2:	2380      	movs	r3, #128	; 0x80
 8000fa4:	03db      	lsls	r3, r3, #15
 8000fa6:	4323      	orrs	r3, r4
 8000fa8:	025b      	lsls	r3, r3, #9
 8000faa:	0a5b      	lsrs	r3, r3, #9
 8000fac:	22ff      	movs	r2, #255	; 0xff
 8000fae:	e72c      	b.n	8000e0a <__aeabi_fmul+0xb6>
 8000fb0:	0800d464 	.word	0x0800d464
 8000fb4:	f7ffffff 	.word	0xf7ffffff

08000fb8 <__aeabi_fsub>:
 8000fb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fba:	4647      	mov	r7, r8
 8000fbc:	46ce      	mov	lr, r9
 8000fbe:	0044      	lsls	r4, r0, #1
 8000fc0:	0fc2      	lsrs	r2, r0, #31
 8000fc2:	b580      	push	{r7, lr}
 8000fc4:	0247      	lsls	r7, r0, #9
 8000fc6:	0248      	lsls	r0, r1, #9
 8000fc8:	0a40      	lsrs	r0, r0, #9
 8000fca:	4684      	mov	ip, r0
 8000fcc:	4666      	mov	r6, ip
 8000fce:	0048      	lsls	r0, r1, #1
 8000fd0:	0a7f      	lsrs	r7, r7, #9
 8000fd2:	0e24      	lsrs	r4, r4, #24
 8000fd4:	00f6      	lsls	r6, r6, #3
 8000fd6:	0025      	movs	r5, r4
 8000fd8:	4690      	mov	r8, r2
 8000fda:	00fb      	lsls	r3, r7, #3
 8000fdc:	0e00      	lsrs	r0, r0, #24
 8000fde:	0fc9      	lsrs	r1, r1, #31
 8000fe0:	46b1      	mov	r9, r6
 8000fe2:	28ff      	cmp	r0, #255	; 0xff
 8000fe4:	d100      	bne.n	8000fe8 <__aeabi_fsub+0x30>
 8000fe6:	e085      	b.n	80010f4 <__aeabi_fsub+0x13c>
 8000fe8:	2601      	movs	r6, #1
 8000fea:	4071      	eors	r1, r6
 8000fec:	1a26      	subs	r6, r4, r0
 8000fee:	4291      	cmp	r1, r2
 8000ff0:	d057      	beq.n	80010a2 <__aeabi_fsub+0xea>
 8000ff2:	2e00      	cmp	r6, #0
 8000ff4:	dd43      	ble.n	800107e <__aeabi_fsub+0xc6>
 8000ff6:	2800      	cmp	r0, #0
 8000ff8:	d000      	beq.n	8000ffc <__aeabi_fsub+0x44>
 8000ffa:	e07f      	b.n	80010fc <__aeabi_fsub+0x144>
 8000ffc:	4649      	mov	r1, r9
 8000ffe:	2900      	cmp	r1, #0
 8001000:	d100      	bne.n	8001004 <__aeabi_fsub+0x4c>
 8001002:	e0aa      	b.n	800115a <__aeabi_fsub+0x1a2>
 8001004:	3e01      	subs	r6, #1
 8001006:	2e00      	cmp	r6, #0
 8001008:	d000      	beq.n	800100c <__aeabi_fsub+0x54>
 800100a:	e0f7      	b.n	80011fc <__aeabi_fsub+0x244>
 800100c:	1a5b      	subs	r3, r3, r1
 800100e:	015a      	lsls	r2, r3, #5
 8001010:	d400      	bmi.n	8001014 <__aeabi_fsub+0x5c>
 8001012:	e08b      	b.n	800112c <__aeabi_fsub+0x174>
 8001014:	019b      	lsls	r3, r3, #6
 8001016:	099c      	lsrs	r4, r3, #6
 8001018:	0020      	movs	r0, r4
 800101a:	f002 f865 	bl	80030e8 <__clzsi2>
 800101e:	3805      	subs	r0, #5
 8001020:	4084      	lsls	r4, r0
 8001022:	4285      	cmp	r5, r0
 8001024:	dd00      	ble.n	8001028 <__aeabi_fsub+0x70>
 8001026:	e0d3      	b.n	80011d0 <__aeabi_fsub+0x218>
 8001028:	1b45      	subs	r5, r0, r5
 800102a:	0023      	movs	r3, r4
 800102c:	2020      	movs	r0, #32
 800102e:	3501      	adds	r5, #1
 8001030:	40eb      	lsrs	r3, r5
 8001032:	1b45      	subs	r5, r0, r5
 8001034:	40ac      	lsls	r4, r5
 8001036:	1e62      	subs	r2, r4, #1
 8001038:	4194      	sbcs	r4, r2
 800103a:	4323      	orrs	r3, r4
 800103c:	2407      	movs	r4, #7
 800103e:	2500      	movs	r5, #0
 8001040:	401c      	ands	r4, r3
 8001042:	2201      	movs	r2, #1
 8001044:	4641      	mov	r1, r8
 8001046:	400a      	ands	r2, r1
 8001048:	2c00      	cmp	r4, #0
 800104a:	d004      	beq.n	8001056 <__aeabi_fsub+0x9e>
 800104c:	210f      	movs	r1, #15
 800104e:	4019      	ands	r1, r3
 8001050:	2904      	cmp	r1, #4
 8001052:	d000      	beq.n	8001056 <__aeabi_fsub+0x9e>
 8001054:	3304      	adds	r3, #4
 8001056:	0159      	lsls	r1, r3, #5
 8001058:	d400      	bmi.n	800105c <__aeabi_fsub+0xa4>
 800105a:	e080      	b.n	800115e <__aeabi_fsub+0x1a6>
 800105c:	3501      	adds	r5, #1
 800105e:	b2ec      	uxtb	r4, r5
 8001060:	2dff      	cmp	r5, #255	; 0xff
 8001062:	d000      	beq.n	8001066 <__aeabi_fsub+0xae>
 8001064:	e0a3      	b.n	80011ae <__aeabi_fsub+0x1f6>
 8001066:	24ff      	movs	r4, #255	; 0xff
 8001068:	2300      	movs	r3, #0
 800106a:	025b      	lsls	r3, r3, #9
 800106c:	05e4      	lsls	r4, r4, #23
 800106e:	0a58      	lsrs	r0, r3, #9
 8001070:	07d2      	lsls	r2, r2, #31
 8001072:	4320      	orrs	r0, r4
 8001074:	4310      	orrs	r0, r2
 8001076:	bc0c      	pop	{r2, r3}
 8001078:	4690      	mov	r8, r2
 800107a:	4699      	mov	r9, r3
 800107c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800107e:	2e00      	cmp	r6, #0
 8001080:	d174      	bne.n	800116c <__aeabi_fsub+0x1b4>
 8001082:	1c60      	adds	r0, r4, #1
 8001084:	b2c0      	uxtb	r0, r0
 8001086:	2801      	cmp	r0, #1
 8001088:	dc00      	bgt.n	800108c <__aeabi_fsub+0xd4>
 800108a:	e0a7      	b.n	80011dc <__aeabi_fsub+0x224>
 800108c:	464a      	mov	r2, r9
 800108e:	1a9c      	subs	r4, r3, r2
 8001090:	0162      	lsls	r2, r4, #5
 8001092:	d500      	bpl.n	8001096 <__aeabi_fsub+0xde>
 8001094:	e0b6      	b.n	8001204 <__aeabi_fsub+0x24c>
 8001096:	2c00      	cmp	r4, #0
 8001098:	d1be      	bne.n	8001018 <__aeabi_fsub+0x60>
 800109a:	2200      	movs	r2, #0
 800109c:	2400      	movs	r4, #0
 800109e:	2300      	movs	r3, #0
 80010a0:	e7e3      	b.n	800106a <__aeabi_fsub+0xb2>
 80010a2:	2e00      	cmp	r6, #0
 80010a4:	dc00      	bgt.n	80010a8 <__aeabi_fsub+0xf0>
 80010a6:	e085      	b.n	80011b4 <__aeabi_fsub+0x1fc>
 80010a8:	2800      	cmp	r0, #0
 80010aa:	d046      	beq.n	800113a <__aeabi_fsub+0x182>
 80010ac:	2cff      	cmp	r4, #255	; 0xff
 80010ae:	d049      	beq.n	8001144 <__aeabi_fsub+0x18c>
 80010b0:	2280      	movs	r2, #128	; 0x80
 80010b2:	4648      	mov	r0, r9
 80010b4:	04d2      	lsls	r2, r2, #19
 80010b6:	4310      	orrs	r0, r2
 80010b8:	4681      	mov	r9, r0
 80010ba:	2201      	movs	r2, #1
 80010bc:	2e1b      	cmp	r6, #27
 80010be:	dc09      	bgt.n	80010d4 <__aeabi_fsub+0x11c>
 80010c0:	2020      	movs	r0, #32
 80010c2:	464c      	mov	r4, r9
 80010c4:	1b80      	subs	r0, r0, r6
 80010c6:	4084      	lsls	r4, r0
 80010c8:	464a      	mov	r2, r9
 80010ca:	0020      	movs	r0, r4
 80010cc:	40f2      	lsrs	r2, r6
 80010ce:	1e44      	subs	r4, r0, #1
 80010d0:	41a0      	sbcs	r0, r4
 80010d2:	4302      	orrs	r2, r0
 80010d4:	189b      	adds	r3, r3, r2
 80010d6:	015a      	lsls	r2, r3, #5
 80010d8:	d528      	bpl.n	800112c <__aeabi_fsub+0x174>
 80010da:	3501      	adds	r5, #1
 80010dc:	2dff      	cmp	r5, #255	; 0xff
 80010de:	d100      	bne.n	80010e2 <__aeabi_fsub+0x12a>
 80010e0:	e0a8      	b.n	8001234 <__aeabi_fsub+0x27c>
 80010e2:	2201      	movs	r2, #1
 80010e4:	2407      	movs	r4, #7
 80010e6:	4994      	ldr	r1, [pc, #592]	; (8001338 <__aeabi_fsub+0x380>)
 80010e8:	401a      	ands	r2, r3
 80010ea:	085b      	lsrs	r3, r3, #1
 80010ec:	400b      	ands	r3, r1
 80010ee:	4313      	orrs	r3, r2
 80010f0:	401c      	ands	r4, r3
 80010f2:	e7a6      	b.n	8001042 <__aeabi_fsub+0x8a>
 80010f4:	2e00      	cmp	r6, #0
 80010f6:	d000      	beq.n	80010fa <__aeabi_fsub+0x142>
 80010f8:	e778      	b.n	8000fec <__aeabi_fsub+0x34>
 80010fa:	e775      	b.n	8000fe8 <__aeabi_fsub+0x30>
 80010fc:	2cff      	cmp	r4, #255	; 0xff
 80010fe:	d054      	beq.n	80011aa <__aeabi_fsub+0x1f2>
 8001100:	2280      	movs	r2, #128	; 0x80
 8001102:	4649      	mov	r1, r9
 8001104:	04d2      	lsls	r2, r2, #19
 8001106:	4311      	orrs	r1, r2
 8001108:	4689      	mov	r9, r1
 800110a:	2201      	movs	r2, #1
 800110c:	2e1b      	cmp	r6, #27
 800110e:	dc09      	bgt.n	8001124 <__aeabi_fsub+0x16c>
 8001110:	2120      	movs	r1, #32
 8001112:	4648      	mov	r0, r9
 8001114:	1b89      	subs	r1, r1, r6
 8001116:	4088      	lsls	r0, r1
 8001118:	464a      	mov	r2, r9
 800111a:	0001      	movs	r1, r0
 800111c:	40f2      	lsrs	r2, r6
 800111e:	1e48      	subs	r0, r1, #1
 8001120:	4181      	sbcs	r1, r0
 8001122:	430a      	orrs	r2, r1
 8001124:	1a9b      	subs	r3, r3, r2
 8001126:	015a      	lsls	r2, r3, #5
 8001128:	d500      	bpl.n	800112c <__aeabi_fsub+0x174>
 800112a:	e773      	b.n	8001014 <__aeabi_fsub+0x5c>
 800112c:	2201      	movs	r2, #1
 800112e:	4641      	mov	r1, r8
 8001130:	400a      	ands	r2, r1
 8001132:	0759      	lsls	r1, r3, #29
 8001134:	d000      	beq.n	8001138 <__aeabi_fsub+0x180>
 8001136:	e789      	b.n	800104c <__aeabi_fsub+0x94>
 8001138:	e011      	b.n	800115e <__aeabi_fsub+0x1a6>
 800113a:	4648      	mov	r0, r9
 800113c:	2800      	cmp	r0, #0
 800113e:	d158      	bne.n	80011f2 <__aeabi_fsub+0x23a>
 8001140:	2cff      	cmp	r4, #255	; 0xff
 8001142:	d10c      	bne.n	800115e <__aeabi_fsub+0x1a6>
 8001144:	08db      	lsrs	r3, r3, #3
 8001146:	2b00      	cmp	r3, #0
 8001148:	d100      	bne.n	800114c <__aeabi_fsub+0x194>
 800114a:	e78c      	b.n	8001066 <__aeabi_fsub+0xae>
 800114c:	2080      	movs	r0, #128	; 0x80
 800114e:	03c0      	lsls	r0, r0, #15
 8001150:	4303      	orrs	r3, r0
 8001152:	025b      	lsls	r3, r3, #9
 8001154:	0a5b      	lsrs	r3, r3, #9
 8001156:	24ff      	movs	r4, #255	; 0xff
 8001158:	e787      	b.n	800106a <__aeabi_fsub+0xb2>
 800115a:	2cff      	cmp	r4, #255	; 0xff
 800115c:	d025      	beq.n	80011aa <__aeabi_fsub+0x1f2>
 800115e:	08db      	lsrs	r3, r3, #3
 8001160:	2dff      	cmp	r5, #255	; 0xff
 8001162:	d0f0      	beq.n	8001146 <__aeabi_fsub+0x18e>
 8001164:	025b      	lsls	r3, r3, #9
 8001166:	0a5b      	lsrs	r3, r3, #9
 8001168:	b2ec      	uxtb	r4, r5
 800116a:	e77e      	b.n	800106a <__aeabi_fsub+0xb2>
 800116c:	2c00      	cmp	r4, #0
 800116e:	d04d      	beq.n	800120c <__aeabi_fsub+0x254>
 8001170:	28ff      	cmp	r0, #255	; 0xff
 8001172:	d018      	beq.n	80011a6 <__aeabi_fsub+0x1ee>
 8001174:	2480      	movs	r4, #128	; 0x80
 8001176:	04e4      	lsls	r4, r4, #19
 8001178:	4272      	negs	r2, r6
 800117a:	4323      	orrs	r3, r4
 800117c:	2a1b      	cmp	r2, #27
 800117e:	dd00      	ble.n	8001182 <__aeabi_fsub+0x1ca>
 8001180:	e0c4      	b.n	800130c <__aeabi_fsub+0x354>
 8001182:	001c      	movs	r4, r3
 8001184:	2520      	movs	r5, #32
 8001186:	40d4      	lsrs	r4, r2
 8001188:	1aaa      	subs	r2, r5, r2
 800118a:	4093      	lsls	r3, r2
 800118c:	1e5a      	subs	r2, r3, #1
 800118e:	4193      	sbcs	r3, r2
 8001190:	4323      	orrs	r3, r4
 8001192:	464a      	mov	r2, r9
 8001194:	0005      	movs	r5, r0
 8001196:	1ad3      	subs	r3, r2, r3
 8001198:	4688      	mov	r8, r1
 800119a:	e738      	b.n	800100e <__aeabi_fsub+0x56>
 800119c:	1c72      	adds	r2, r6, #1
 800119e:	d0f8      	beq.n	8001192 <__aeabi_fsub+0x1da>
 80011a0:	43f2      	mvns	r2, r6
 80011a2:	28ff      	cmp	r0, #255	; 0xff
 80011a4:	d1ea      	bne.n	800117c <__aeabi_fsub+0x1c4>
 80011a6:	000a      	movs	r2, r1
 80011a8:	464b      	mov	r3, r9
 80011aa:	25ff      	movs	r5, #255	; 0xff
 80011ac:	e7d7      	b.n	800115e <__aeabi_fsub+0x1a6>
 80011ae:	019b      	lsls	r3, r3, #6
 80011b0:	0a5b      	lsrs	r3, r3, #9
 80011b2:	e75a      	b.n	800106a <__aeabi_fsub+0xb2>
 80011b4:	2e00      	cmp	r6, #0
 80011b6:	d141      	bne.n	800123c <__aeabi_fsub+0x284>
 80011b8:	1c65      	adds	r5, r4, #1
 80011ba:	b2e9      	uxtb	r1, r5
 80011bc:	2901      	cmp	r1, #1
 80011be:	dd45      	ble.n	800124c <__aeabi_fsub+0x294>
 80011c0:	2dff      	cmp	r5, #255	; 0xff
 80011c2:	d100      	bne.n	80011c6 <__aeabi_fsub+0x20e>
 80011c4:	e74f      	b.n	8001066 <__aeabi_fsub+0xae>
 80011c6:	2407      	movs	r4, #7
 80011c8:	444b      	add	r3, r9
 80011ca:	085b      	lsrs	r3, r3, #1
 80011cc:	401c      	ands	r4, r3
 80011ce:	e738      	b.n	8001042 <__aeabi_fsub+0x8a>
 80011d0:	2207      	movs	r2, #7
 80011d2:	4b5a      	ldr	r3, [pc, #360]	; (800133c <__aeabi_fsub+0x384>)
 80011d4:	1a2d      	subs	r5, r5, r0
 80011d6:	4023      	ands	r3, r4
 80011d8:	4014      	ands	r4, r2
 80011da:	e732      	b.n	8001042 <__aeabi_fsub+0x8a>
 80011dc:	2c00      	cmp	r4, #0
 80011de:	d11d      	bne.n	800121c <__aeabi_fsub+0x264>
 80011e0:	2b00      	cmp	r3, #0
 80011e2:	d17a      	bne.n	80012da <__aeabi_fsub+0x322>
 80011e4:	464b      	mov	r3, r9
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	d100      	bne.n	80011ec <__aeabi_fsub+0x234>
 80011ea:	e091      	b.n	8001310 <__aeabi_fsub+0x358>
 80011ec:	000a      	movs	r2, r1
 80011ee:	2500      	movs	r5, #0
 80011f0:	e7b5      	b.n	800115e <__aeabi_fsub+0x1a6>
 80011f2:	3e01      	subs	r6, #1
 80011f4:	2e00      	cmp	r6, #0
 80011f6:	d119      	bne.n	800122c <__aeabi_fsub+0x274>
 80011f8:	444b      	add	r3, r9
 80011fa:	e76c      	b.n	80010d6 <__aeabi_fsub+0x11e>
 80011fc:	2cff      	cmp	r4, #255	; 0xff
 80011fe:	d184      	bne.n	800110a <__aeabi_fsub+0x152>
 8001200:	25ff      	movs	r5, #255	; 0xff
 8001202:	e7ac      	b.n	800115e <__aeabi_fsub+0x1a6>
 8001204:	464a      	mov	r2, r9
 8001206:	4688      	mov	r8, r1
 8001208:	1ad4      	subs	r4, r2, r3
 800120a:	e705      	b.n	8001018 <__aeabi_fsub+0x60>
 800120c:	2b00      	cmp	r3, #0
 800120e:	d1c5      	bne.n	800119c <__aeabi_fsub+0x1e4>
 8001210:	000a      	movs	r2, r1
 8001212:	28ff      	cmp	r0, #255	; 0xff
 8001214:	d0c8      	beq.n	80011a8 <__aeabi_fsub+0x1f0>
 8001216:	0005      	movs	r5, r0
 8001218:	464b      	mov	r3, r9
 800121a:	e7a0      	b.n	800115e <__aeabi_fsub+0x1a6>
 800121c:	2b00      	cmp	r3, #0
 800121e:	d149      	bne.n	80012b4 <__aeabi_fsub+0x2fc>
 8001220:	464b      	mov	r3, r9
 8001222:	2b00      	cmp	r3, #0
 8001224:	d077      	beq.n	8001316 <__aeabi_fsub+0x35e>
 8001226:	000a      	movs	r2, r1
 8001228:	25ff      	movs	r5, #255	; 0xff
 800122a:	e798      	b.n	800115e <__aeabi_fsub+0x1a6>
 800122c:	2cff      	cmp	r4, #255	; 0xff
 800122e:	d000      	beq.n	8001232 <__aeabi_fsub+0x27a>
 8001230:	e743      	b.n	80010ba <__aeabi_fsub+0x102>
 8001232:	e787      	b.n	8001144 <__aeabi_fsub+0x18c>
 8001234:	000a      	movs	r2, r1
 8001236:	24ff      	movs	r4, #255	; 0xff
 8001238:	2300      	movs	r3, #0
 800123a:	e716      	b.n	800106a <__aeabi_fsub+0xb2>
 800123c:	2c00      	cmp	r4, #0
 800123e:	d115      	bne.n	800126c <__aeabi_fsub+0x2b4>
 8001240:	2b00      	cmp	r3, #0
 8001242:	d157      	bne.n	80012f4 <__aeabi_fsub+0x33c>
 8001244:	28ff      	cmp	r0, #255	; 0xff
 8001246:	d1e6      	bne.n	8001216 <__aeabi_fsub+0x25e>
 8001248:	464b      	mov	r3, r9
 800124a:	e77b      	b.n	8001144 <__aeabi_fsub+0x18c>
 800124c:	2c00      	cmp	r4, #0
 800124e:	d120      	bne.n	8001292 <__aeabi_fsub+0x2da>
 8001250:	2b00      	cmp	r3, #0
 8001252:	d057      	beq.n	8001304 <__aeabi_fsub+0x34c>
 8001254:	4649      	mov	r1, r9
 8001256:	2900      	cmp	r1, #0
 8001258:	d053      	beq.n	8001302 <__aeabi_fsub+0x34a>
 800125a:	444b      	add	r3, r9
 800125c:	015a      	lsls	r2, r3, #5
 800125e:	d568      	bpl.n	8001332 <__aeabi_fsub+0x37a>
 8001260:	2407      	movs	r4, #7
 8001262:	4a36      	ldr	r2, [pc, #216]	; (800133c <__aeabi_fsub+0x384>)
 8001264:	401c      	ands	r4, r3
 8001266:	2501      	movs	r5, #1
 8001268:	4013      	ands	r3, r2
 800126a:	e6ea      	b.n	8001042 <__aeabi_fsub+0x8a>
 800126c:	28ff      	cmp	r0, #255	; 0xff
 800126e:	d0eb      	beq.n	8001248 <__aeabi_fsub+0x290>
 8001270:	2280      	movs	r2, #128	; 0x80
 8001272:	04d2      	lsls	r2, r2, #19
 8001274:	4276      	negs	r6, r6
 8001276:	4313      	orrs	r3, r2
 8001278:	2e1b      	cmp	r6, #27
 800127a:	dc53      	bgt.n	8001324 <__aeabi_fsub+0x36c>
 800127c:	2520      	movs	r5, #32
 800127e:	1bad      	subs	r5, r5, r6
 8001280:	001a      	movs	r2, r3
 8001282:	40ab      	lsls	r3, r5
 8001284:	40f2      	lsrs	r2, r6
 8001286:	1e5c      	subs	r4, r3, #1
 8001288:	41a3      	sbcs	r3, r4
 800128a:	4313      	orrs	r3, r2
 800128c:	444b      	add	r3, r9
 800128e:	0005      	movs	r5, r0
 8001290:	e721      	b.n	80010d6 <__aeabi_fsub+0x11e>
 8001292:	2b00      	cmp	r3, #0
 8001294:	d0d8      	beq.n	8001248 <__aeabi_fsub+0x290>
 8001296:	4649      	mov	r1, r9
 8001298:	2900      	cmp	r1, #0
 800129a:	d100      	bne.n	800129e <__aeabi_fsub+0x2e6>
 800129c:	e752      	b.n	8001144 <__aeabi_fsub+0x18c>
 800129e:	2180      	movs	r1, #128	; 0x80
 80012a0:	03c9      	lsls	r1, r1, #15
 80012a2:	420f      	tst	r7, r1
 80012a4:	d100      	bne.n	80012a8 <__aeabi_fsub+0x2f0>
 80012a6:	e74d      	b.n	8001144 <__aeabi_fsub+0x18c>
 80012a8:	4660      	mov	r0, ip
 80012aa:	4208      	tst	r0, r1
 80012ac:	d000      	beq.n	80012b0 <__aeabi_fsub+0x2f8>
 80012ae:	e749      	b.n	8001144 <__aeabi_fsub+0x18c>
 80012b0:	464b      	mov	r3, r9
 80012b2:	e747      	b.n	8001144 <__aeabi_fsub+0x18c>
 80012b4:	4648      	mov	r0, r9
 80012b6:	25ff      	movs	r5, #255	; 0xff
 80012b8:	2800      	cmp	r0, #0
 80012ba:	d100      	bne.n	80012be <__aeabi_fsub+0x306>
 80012bc:	e74f      	b.n	800115e <__aeabi_fsub+0x1a6>
 80012be:	2280      	movs	r2, #128	; 0x80
 80012c0:	03d2      	lsls	r2, r2, #15
 80012c2:	4217      	tst	r7, r2
 80012c4:	d004      	beq.n	80012d0 <__aeabi_fsub+0x318>
 80012c6:	4660      	mov	r0, ip
 80012c8:	4210      	tst	r0, r2
 80012ca:	d101      	bne.n	80012d0 <__aeabi_fsub+0x318>
 80012cc:	464b      	mov	r3, r9
 80012ce:	4688      	mov	r8, r1
 80012d0:	2201      	movs	r2, #1
 80012d2:	4641      	mov	r1, r8
 80012d4:	25ff      	movs	r5, #255	; 0xff
 80012d6:	400a      	ands	r2, r1
 80012d8:	e741      	b.n	800115e <__aeabi_fsub+0x1a6>
 80012da:	4648      	mov	r0, r9
 80012dc:	2800      	cmp	r0, #0
 80012de:	d01f      	beq.n	8001320 <__aeabi_fsub+0x368>
 80012e0:	1a1a      	subs	r2, r3, r0
 80012e2:	0150      	lsls	r0, r2, #5
 80012e4:	d520      	bpl.n	8001328 <__aeabi_fsub+0x370>
 80012e6:	464a      	mov	r2, r9
 80012e8:	2407      	movs	r4, #7
 80012ea:	1ad3      	subs	r3, r2, r3
 80012ec:	401c      	ands	r4, r3
 80012ee:	4688      	mov	r8, r1
 80012f0:	2500      	movs	r5, #0
 80012f2:	e6a6      	b.n	8001042 <__aeabi_fsub+0x8a>
 80012f4:	1c74      	adds	r4, r6, #1
 80012f6:	d0c9      	beq.n	800128c <__aeabi_fsub+0x2d4>
 80012f8:	43f6      	mvns	r6, r6
 80012fa:	28ff      	cmp	r0, #255	; 0xff
 80012fc:	d1bc      	bne.n	8001278 <__aeabi_fsub+0x2c0>
 80012fe:	464b      	mov	r3, r9
 8001300:	e720      	b.n	8001144 <__aeabi_fsub+0x18c>
 8001302:	4699      	mov	r9, r3
 8001304:	464b      	mov	r3, r9
 8001306:	2500      	movs	r5, #0
 8001308:	08db      	lsrs	r3, r3, #3
 800130a:	e72b      	b.n	8001164 <__aeabi_fsub+0x1ac>
 800130c:	2301      	movs	r3, #1
 800130e:	e740      	b.n	8001192 <__aeabi_fsub+0x1da>
 8001310:	2200      	movs	r2, #0
 8001312:	2300      	movs	r3, #0
 8001314:	e6a9      	b.n	800106a <__aeabi_fsub+0xb2>
 8001316:	2380      	movs	r3, #128	; 0x80
 8001318:	2200      	movs	r2, #0
 800131a:	03db      	lsls	r3, r3, #15
 800131c:	24ff      	movs	r4, #255	; 0xff
 800131e:	e6a4      	b.n	800106a <__aeabi_fsub+0xb2>
 8001320:	2500      	movs	r5, #0
 8001322:	e71c      	b.n	800115e <__aeabi_fsub+0x1a6>
 8001324:	2301      	movs	r3, #1
 8001326:	e7b1      	b.n	800128c <__aeabi_fsub+0x2d4>
 8001328:	2a00      	cmp	r2, #0
 800132a:	d0f1      	beq.n	8001310 <__aeabi_fsub+0x358>
 800132c:	0013      	movs	r3, r2
 800132e:	2500      	movs	r5, #0
 8001330:	e6fc      	b.n	800112c <__aeabi_fsub+0x174>
 8001332:	2500      	movs	r5, #0
 8001334:	e6fa      	b.n	800112c <__aeabi_fsub+0x174>
 8001336:	46c0      	nop			; (mov r8, r8)
 8001338:	7dffffff 	.word	0x7dffffff
 800133c:	fbffffff 	.word	0xfbffffff

08001340 <__aeabi_f2iz>:
 8001340:	0241      	lsls	r1, r0, #9
 8001342:	0042      	lsls	r2, r0, #1
 8001344:	0fc3      	lsrs	r3, r0, #31
 8001346:	0a49      	lsrs	r1, r1, #9
 8001348:	0e12      	lsrs	r2, r2, #24
 800134a:	2000      	movs	r0, #0
 800134c:	2a7e      	cmp	r2, #126	; 0x7e
 800134e:	d90d      	bls.n	800136c <__aeabi_f2iz+0x2c>
 8001350:	2a9d      	cmp	r2, #157	; 0x9d
 8001352:	d80c      	bhi.n	800136e <__aeabi_f2iz+0x2e>
 8001354:	2080      	movs	r0, #128	; 0x80
 8001356:	0400      	lsls	r0, r0, #16
 8001358:	4301      	orrs	r1, r0
 800135a:	2a95      	cmp	r2, #149	; 0x95
 800135c:	dc0a      	bgt.n	8001374 <__aeabi_f2iz+0x34>
 800135e:	2096      	movs	r0, #150	; 0x96
 8001360:	1a82      	subs	r2, r0, r2
 8001362:	40d1      	lsrs	r1, r2
 8001364:	4248      	negs	r0, r1
 8001366:	2b00      	cmp	r3, #0
 8001368:	d100      	bne.n	800136c <__aeabi_f2iz+0x2c>
 800136a:	0008      	movs	r0, r1
 800136c:	4770      	bx	lr
 800136e:	4a03      	ldr	r2, [pc, #12]	; (800137c <__aeabi_f2iz+0x3c>)
 8001370:	1898      	adds	r0, r3, r2
 8001372:	e7fb      	b.n	800136c <__aeabi_f2iz+0x2c>
 8001374:	3a96      	subs	r2, #150	; 0x96
 8001376:	4091      	lsls	r1, r2
 8001378:	e7f4      	b.n	8001364 <__aeabi_f2iz+0x24>
 800137a:	46c0      	nop			; (mov r8, r8)
 800137c:	7fffffff 	.word	0x7fffffff

08001380 <__aeabi_ui2f>:
 8001380:	b570      	push	{r4, r5, r6, lr}
 8001382:	1e04      	subs	r4, r0, #0
 8001384:	d034      	beq.n	80013f0 <__aeabi_ui2f+0x70>
 8001386:	f001 feaf 	bl	80030e8 <__clzsi2>
 800138a:	229e      	movs	r2, #158	; 0x9e
 800138c:	1a12      	subs	r2, r2, r0
 800138e:	2a96      	cmp	r2, #150	; 0x96
 8001390:	dc07      	bgt.n	80013a2 <__aeabi_ui2f+0x22>
 8001392:	b2d2      	uxtb	r2, r2
 8001394:	2808      	cmp	r0, #8
 8001396:	dd2e      	ble.n	80013f6 <__aeabi_ui2f+0x76>
 8001398:	3808      	subs	r0, #8
 800139a:	4084      	lsls	r4, r0
 800139c:	0260      	lsls	r0, r4, #9
 800139e:	0a40      	lsrs	r0, r0, #9
 80013a0:	e021      	b.n	80013e6 <__aeabi_ui2f+0x66>
 80013a2:	2a99      	cmp	r2, #153	; 0x99
 80013a4:	dd09      	ble.n	80013ba <__aeabi_ui2f+0x3a>
 80013a6:	0003      	movs	r3, r0
 80013a8:	0021      	movs	r1, r4
 80013aa:	331b      	adds	r3, #27
 80013ac:	4099      	lsls	r1, r3
 80013ae:	1e4b      	subs	r3, r1, #1
 80013b0:	4199      	sbcs	r1, r3
 80013b2:	2305      	movs	r3, #5
 80013b4:	1a1b      	subs	r3, r3, r0
 80013b6:	40dc      	lsrs	r4, r3
 80013b8:	430c      	orrs	r4, r1
 80013ba:	2805      	cmp	r0, #5
 80013bc:	dd01      	ble.n	80013c2 <__aeabi_ui2f+0x42>
 80013be:	1f43      	subs	r3, r0, #5
 80013c0:	409c      	lsls	r4, r3
 80013c2:	0023      	movs	r3, r4
 80013c4:	490d      	ldr	r1, [pc, #52]	; (80013fc <__aeabi_ui2f+0x7c>)
 80013c6:	400b      	ands	r3, r1
 80013c8:	0765      	lsls	r5, r4, #29
 80013ca:	d009      	beq.n	80013e0 <__aeabi_ui2f+0x60>
 80013cc:	250f      	movs	r5, #15
 80013ce:	402c      	ands	r4, r5
 80013d0:	2c04      	cmp	r4, #4
 80013d2:	d005      	beq.n	80013e0 <__aeabi_ui2f+0x60>
 80013d4:	3304      	adds	r3, #4
 80013d6:	015c      	lsls	r4, r3, #5
 80013d8:	d502      	bpl.n	80013e0 <__aeabi_ui2f+0x60>
 80013da:	229f      	movs	r2, #159	; 0x9f
 80013dc:	400b      	ands	r3, r1
 80013de:	1a12      	subs	r2, r2, r0
 80013e0:	019b      	lsls	r3, r3, #6
 80013e2:	0a58      	lsrs	r0, r3, #9
 80013e4:	b2d2      	uxtb	r2, r2
 80013e6:	0240      	lsls	r0, r0, #9
 80013e8:	05d2      	lsls	r2, r2, #23
 80013ea:	0a40      	lsrs	r0, r0, #9
 80013ec:	4310      	orrs	r0, r2
 80013ee:	bd70      	pop	{r4, r5, r6, pc}
 80013f0:	2200      	movs	r2, #0
 80013f2:	2000      	movs	r0, #0
 80013f4:	e7f7      	b.n	80013e6 <__aeabi_ui2f+0x66>
 80013f6:	0260      	lsls	r0, r4, #9
 80013f8:	0a40      	lsrs	r0, r0, #9
 80013fa:	e7f4      	b.n	80013e6 <__aeabi_ui2f+0x66>
 80013fc:	fbffffff 	.word	0xfbffffff

08001400 <__aeabi_dadd>:
 8001400:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001402:	464f      	mov	r7, r9
 8001404:	4646      	mov	r6, r8
 8001406:	46d6      	mov	lr, sl
 8001408:	000c      	movs	r4, r1
 800140a:	0309      	lsls	r1, r1, #12
 800140c:	b5c0      	push	{r6, r7, lr}
 800140e:	0a49      	lsrs	r1, r1, #9
 8001410:	0f47      	lsrs	r7, r0, #29
 8001412:	005e      	lsls	r6, r3, #1
 8001414:	4339      	orrs	r1, r7
 8001416:	031f      	lsls	r7, r3, #12
 8001418:	0fdb      	lsrs	r3, r3, #31
 800141a:	469c      	mov	ip, r3
 800141c:	0065      	lsls	r5, r4, #1
 800141e:	0a7b      	lsrs	r3, r7, #9
 8001420:	0f57      	lsrs	r7, r2, #29
 8001422:	431f      	orrs	r7, r3
 8001424:	0d6d      	lsrs	r5, r5, #21
 8001426:	0fe4      	lsrs	r4, r4, #31
 8001428:	0d76      	lsrs	r6, r6, #21
 800142a:	46a1      	mov	r9, r4
 800142c:	00c0      	lsls	r0, r0, #3
 800142e:	46b8      	mov	r8, r7
 8001430:	00d2      	lsls	r2, r2, #3
 8001432:	1bab      	subs	r3, r5, r6
 8001434:	4564      	cmp	r4, ip
 8001436:	d07b      	beq.n	8001530 <__aeabi_dadd+0x130>
 8001438:	2b00      	cmp	r3, #0
 800143a:	dd5f      	ble.n	80014fc <__aeabi_dadd+0xfc>
 800143c:	2e00      	cmp	r6, #0
 800143e:	d000      	beq.n	8001442 <__aeabi_dadd+0x42>
 8001440:	e0a4      	b.n	800158c <__aeabi_dadd+0x18c>
 8001442:	003e      	movs	r6, r7
 8001444:	4316      	orrs	r6, r2
 8001446:	d100      	bne.n	800144a <__aeabi_dadd+0x4a>
 8001448:	e112      	b.n	8001670 <__aeabi_dadd+0x270>
 800144a:	1e5e      	subs	r6, r3, #1
 800144c:	2e00      	cmp	r6, #0
 800144e:	d000      	beq.n	8001452 <__aeabi_dadd+0x52>
 8001450:	e19e      	b.n	8001790 <__aeabi_dadd+0x390>
 8001452:	1a87      	subs	r7, r0, r2
 8001454:	4643      	mov	r3, r8
 8001456:	42b8      	cmp	r0, r7
 8001458:	4180      	sbcs	r0, r0
 800145a:	2501      	movs	r5, #1
 800145c:	1ac9      	subs	r1, r1, r3
 800145e:	4240      	negs	r0, r0
 8001460:	1a09      	subs	r1, r1, r0
 8001462:	020b      	lsls	r3, r1, #8
 8001464:	d400      	bmi.n	8001468 <__aeabi_dadd+0x68>
 8001466:	e131      	b.n	80016cc <__aeabi_dadd+0x2cc>
 8001468:	0249      	lsls	r1, r1, #9
 800146a:	0a4e      	lsrs	r6, r1, #9
 800146c:	2e00      	cmp	r6, #0
 800146e:	d100      	bne.n	8001472 <__aeabi_dadd+0x72>
 8001470:	e16e      	b.n	8001750 <__aeabi_dadd+0x350>
 8001472:	0030      	movs	r0, r6
 8001474:	f001 fe38 	bl	80030e8 <__clzsi2>
 8001478:	0003      	movs	r3, r0
 800147a:	3b08      	subs	r3, #8
 800147c:	2b1f      	cmp	r3, #31
 800147e:	dd00      	ble.n	8001482 <__aeabi_dadd+0x82>
 8001480:	e161      	b.n	8001746 <__aeabi_dadd+0x346>
 8001482:	2220      	movs	r2, #32
 8001484:	0039      	movs	r1, r7
 8001486:	1ad2      	subs	r2, r2, r3
 8001488:	409e      	lsls	r6, r3
 800148a:	40d1      	lsrs	r1, r2
 800148c:	409f      	lsls	r7, r3
 800148e:	430e      	orrs	r6, r1
 8001490:	429d      	cmp	r5, r3
 8001492:	dd00      	ble.n	8001496 <__aeabi_dadd+0x96>
 8001494:	e151      	b.n	800173a <__aeabi_dadd+0x33a>
 8001496:	1b5d      	subs	r5, r3, r5
 8001498:	1c6b      	adds	r3, r5, #1
 800149a:	2b1f      	cmp	r3, #31
 800149c:	dd00      	ble.n	80014a0 <__aeabi_dadd+0xa0>
 800149e:	e17c      	b.n	800179a <__aeabi_dadd+0x39a>
 80014a0:	2120      	movs	r1, #32
 80014a2:	1ac9      	subs	r1, r1, r3
 80014a4:	003d      	movs	r5, r7
 80014a6:	0030      	movs	r0, r6
 80014a8:	408f      	lsls	r7, r1
 80014aa:	4088      	lsls	r0, r1
 80014ac:	40dd      	lsrs	r5, r3
 80014ae:	1e79      	subs	r1, r7, #1
 80014b0:	418f      	sbcs	r7, r1
 80014b2:	0031      	movs	r1, r6
 80014b4:	2207      	movs	r2, #7
 80014b6:	4328      	orrs	r0, r5
 80014b8:	40d9      	lsrs	r1, r3
 80014ba:	2500      	movs	r5, #0
 80014bc:	4307      	orrs	r7, r0
 80014be:	403a      	ands	r2, r7
 80014c0:	2a00      	cmp	r2, #0
 80014c2:	d009      	beq.n	80014d8 <__aeabi_dadd+0xd8>
 80014c4:	230f      	movs	r3, #15
 80014c6:	403b      	ands	r3, r7
 80014c8:	2b04      	cmp	r3, #4
 80014ca:	d005      	beq.n	80014d8 <__aeabi_dadd+0xd8>
 80014cc:	1d3b      	adds	r3, r7, #4
 80014ce:	42bb      	cmp	r3, r7
 80014d0:	41bf      	sbcs	r7, r7
 80014d2:	427f      	negs	r7, r7
 80014d4:	19c9      	adds	r1, r1, r7
 80014d6:	001f      	movs	r7, r3
 80014d8:	020b      	lsls	r3, r1, #8
 80014da:	d400      	bmi.n	80014de <__aeabi_dadd+0xde>
 80014dc:	e226      	b.n	800192c <__aeabi_dadd+0x52c>
 80014de:	1c6a      	adds	r2, r5, #1
 80014e0:	4bc6      	ldr	r3, [pc, #792]	; (80017fc <__aeabi_dadd+0x3fc>)
 80014e2:	0555      	lsls	r5, r2, #21
 80014e4:	0d6d      	lsrs	r5, r5, #21
 80014e6:	429a      	cmp	r2, r3
 80014e8:	d100      	bne.n	80014ec <__aeabi_dadd+0xec>
 80014ea:	e106      	b.n	80016fa <__aeabi_dadd+0x2fa>
 80014ec:	4ac4      	ldr	r2, [pc, #784]	; (8001800 <__aeabi_dadd+0x400>)
 80014ee:	08ff      	lsrs	r7, r7, #3
 80014f0:	400a      	ands	r2, r1
 80014f2:	0753      	lsls	r3, r2, #29
 80014f4:	0252      	lsls	r2, r2, #9
 80014f6:	433b      	orrs	r3, r7
 80014f8:	0b12      	lsrs	r2, r2, #12
 80014fa:	e08e      	b.n	800161a <__aeabi_dadd+0x21a>
 80014fc:	2b00      	cmp	r3, #0
 80014fe:	d000      	beq.n	8001502 <__aeabi_dadd+0x102>
 8001500:	e0b8      	b.n	8001674 <__aeabi_dadd+0x274>
 8001502:	1c6b      	adds	r3, r5, #1
 8001504:	055b      	lsls	r3, r3, #21
 8001506:	0d5b      	lsrs	r3, r3, #21
 8001508:	2b01      	cmp	r3, #1
 800150a:	dc00      	bgt.n	800150e <__aeabi_dadd+0x10e>
 800150c:	e130      	b.n	8001770 <__aeabi_dadd+0x370>
 800150e:	1a87      	subs	r7, r0, r2
 8001510:	4643      	mov	r3, r8
 8001512:	42b8      	cmp	r0, r7
 8001514:	41b6      	sbcs	r6, r6
 8001516:	1acb      	subs	r3, r1, r3
 8001518:	4276      	negs	r6, r6
 800151a:	1b9e      	subs	r6, r3, r6
 800151c:	0233      	lsls	r3, r6, #8
 800151e:	d500      	bpl.n	8001522 <__aeabi_dadd+0x122>
 8001520:	e14c      	b.n	80017bc <__aeabi_dadd+0x3bc>
 8001522:	003b      	movs	r3, r7
 8001524:	4333      	orrs	r3, r6
 8001526:	d1a1      	bne.n	800146c <__aeabi_dadd+0x6c>
 8001528:	2200      	movs	r2, #0
 800152a:	2400      	movs	r4, #0
 800152c:	2500      	movs	r5, #0
 800152e:	e070      	b.n	8001612 <__aeabi_dadd+0x212>
 8001530:	2b00      	cmp	r3, #0
 8001532:	dc00      	bgt.n	8001536 <__aeabi_dadd+0x136>
 8001534:	e0e5      	b.n	8001702 <__aeabi_dadd+0x302>
 8001536:	2e00      	cmp	r6, #0
 8001538:	d100      	bne.n	800153c <__aeabi_dadd+0x13c>
 800153a:	e083      	b.n	8001644 <__aeabi_dadd+0x244>
 800153c:	4eaf      	ldr	r6, [pc, #700]	; (80017fc <__aeabi_dadd+0x3fc>)
 800153e:	42b5      	cmp	r5, r6
 8001540:	d060      	beq.n	8001604 <__aeabi_dadd+0x204>
 8001542:	2680      	movs	r6, #128	; 0x80
 8001544:	0436      	lsls	r6, r6, #16
 8001546:	4337      	orrs	r7, r6
 8001548:	46b8      	mov	r8, r7
 800154a:	2b38      	cmp	r3, #56	; 0x38
 800154c:	dc00      	bgt.n	8001550 <__aeabi_dadd+0x150>
 800154e:	e13e      	b.n	80017ce <__aeabi_dadd+0x3ce>
 8001550:	4643      	mov	r3, r8
 8001552:	4313      	orrs	r3, r2
 8001554:	001f      	movs	r7, r3
 8001556:	1e7a      	subs	r2, r7, #1
 8001558:	4197      	sbcs	r7, r2
 800155a:	183f      	adds	r7, r7, r0
 800155c:	4287      	cmp	r7, r0
 800155e:	4180      	sbcs	r0, r0
 8001560:	4240      	negs	r0, r0
 8001562:	1809      	adds	r1, r1, r0
 8001564:	020b      	lsls	r3, r1, #8
 8001566:	d400      	bmi.n	800156a <__aeabi_dadd+0x16a>
 8001568:	e0b0      	b.n	80016cc <__aeabi_dadd+0x2cc>
 800156a:	4ba4      	ldr	r3, [pc, #656]	; (80017fc <__aeabi_dadd+0x3fc>)
 800156c:	3501      	adds	r5, #1
 800156e:	429d      	cmp	r5, r3
 8001570:	d100      	bne.n	8001574 <__aeabi_dadd+0x174>
 8001572:	e0c3      	b.n	80016fc <__aeabi_dadd+0x2fc>
 8001574:	4aa2      	ldr	r2, [pc, #648]	; (8001800 <__aeabi_dadd+0x400>)
 8001576:	087b      	lsrs	r3, r7, #1
 8001578:	400a      	ands	r2, r1
 800157a:	2101      	movs	r1, #1
 800157c:	400f      	ands	r7, r1
 800157e:	431f      	orrs	r7, r3
 8001580:	0851      	lsrs	r1, r2, #1
 8001582:	07d3      	lsls	r3, r2, #31
 8001584:	2207      	movs	r2, #7
 8001586:	431f      	orrs	r7, r3
 8001588:	403a      	ands	r2, r7
 800158a:	e799      	b.n	80014c0 <__aeabi_dadd+0xc0>
 800158c:	4e9b      	ldr	r6, [pc, #620]	; (80017fc <__aeabi_dadd+0x3fc>)
 800158e:	42b5      	cmp	r5, r6
 8001590:	d038      	beq.n	8001604 <__aeabi_dadd+0x204>
 8001592:	2680      	movs	r6, #128	; 0x80
 8001594:	0436      	lsls	r6, r6, #16
 8001596:	4337      	orrs	r7, r6
 8001598:	46b8      	mov	r8, r7
 800159a:	2b38      	cmp	r3, #56	; 0x38
 800159c:	dd00      	ble.n	80015a0 <__aeabi_dadd+0x1a0>
 800159e:	e0dc      	b.n	800175a <__aeabi_dadd+0x35a>
 80015a0:	2b1f      	cmp	r3, #31
 80015a2:	dc00      	bgt.n	80015a6 <__aeabi_dadd+0x1a6>
 80015a4:	e130      	b.n	8001808 <__aeabi_dadd+0x408>
 80015a6:	001e      	movs	r6, r3
 80015a8:	4647      	mov	r7, r8
 80015aa:	3e20      	subs	r6, #32
 80015ac:	40f7      	lsrs	r7, r6
 80015ae:	46bc      	mov	ip, r7
 80015b0:	2b20      	cmp	r3, #32
 80015b2:	d004      	beq.n	80015be <__aeabi_dadd+0x1be>
 80015b4:	2640      	movs	r6, #64	; 0x40
 80015b6:	1af3      	subs	r3, r6, r3
 80015b8:	4646      	mov	r6, r8
 80015ba:	409e      	lsls	r6, r3
 80015bc:	4332      	orrs	r2, r6
 80015be:	0017      	movs	r7, r2
 80015c0:	4663      	mov	r3, ip
 80015c2:	1e7a      	subs	r2, r7, #1
 80015c4:	4197      	sbcs	r7, r2
 80015c6:	431f      	orrs	r7, r3
 80015c8:	e0cc      	b.n	8001764 <__aeabi_dadd+0x364>
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	d100      	bne.n	80015d0 <__aeabi_dadd+0x1d0>
 80015ce:	e204      	b.n	80019da <__aeabi_dadd+0x5da>
 80015d0:	4643      	mov	r3, r8
 80015d2:	4313      	orrs	r3, r2
 80015d4:	d100      	bne.n	80015d8 <__aeabi_dadd+0x1d8>
 80015d6:	e159      	b.n	800188c <__aeabi_dadd+0x48c>
 80015d8:	074b      	lsls	r3, r1, #29
 80015da:	08c0      	lsrs	r0, r0, #3
 80015dc:	4318      	orrs	r0, r3
 80015de:	2380      	movs	r3, #128	; 0x80
 80015e0:	08c9      	lsrs	r1, r1, #3
 80015e2:	031b      	lsls	r3, r3, #12
 80015e4:	4219      	tst	r1, r3
 80015e6:	d008      	beq.n	80015fa <__aeabi_dadd+0x1fa>
 80015e8:	4645      	mov	r5, r8
 80015ea:	08ed      	lsrs	r5, r5, #3
 80015ec:	421d      	tst	r5, r3
 80015ee:	d104      	bne.n	80015fa <__aeabi_dadd+0x1fa>
 80015f0:	4643      	mov	r3, r8
 80015f2:	08d0      	lsrs	r0, r2, #3
 80015f4:	0759      	lsls	r1, r3, #29
 80015f6:	4308      	orrs	r0, r1
 80015f8:	0029      	movs	r1, r5
 80015fa:	0f42      	lsrs	r2, r0, #29
 80015fc:	00c9      	lsls	r1, r1, #3
 80015fe:	4d7f      	ldr	r5, [pc, #508]	; (80017fc <__aeabi_dadd+0x3fc>)
 8001600:	4311      	orrs	r1, r2
 8001602:	00c0      	lsls	r0, r0, #3
 8001604:	074b      	lsls	r3, r1, #29
 8001606:	08ca      	lsrs	r2, r1, #3
 8001608:	497c      	ldr	r1, [pc, #496]	; (80017fc <__aeabi_dadd+0x3fc>)
 800160a:	08c0      	lsrs	r0, r0, #3
 800160c:	4303      	orrs	r3, r0
 800160e:	428d      	cmp	r5, r1
 8001610:	d068      	beq.n	80016e4 <__aeabi_dadd+0x2e4>
 8001612:	0312      	lsls	r2, r2, #12
 8001614:	056d      	lsls	r5, r5, #21
 8001616:	0b12      	lsrs	r2, r2, #12
 8001618:	0d6d      	lsrs	r5, r5, #21
 800161a:	2100      	movs	r1, #0
 800161c:	0312      	lsls	r2, r2, #12
 800161e:	0018      	movs	r0, r3
 8001620:	0b13      	lsrs	r3, r2, #12
 8001622:	0d0a      	lsrs	r2, r1, #20
 8001624:	0512      	lsls	r2, r2, #20
 8001626:	431a      	orrs	r2, r3
 8001628:	4b76      	ldr	r3, [pc, #472]	; (8001804 <__aeabi_dadd+0x404>)
 800162a:	052d      	lsls	r5, r5, #20
 800162c:	4013      	ands	r3, r2
 800162e:	432b      	orrs	r3, r5
 8001630:	005b      	lsls	r3, r3, #1
 8001632:	07e4      	lsls	r4, r4, #31
 8001634:	085b      	lsrs	r3, r3, #1
 8001636:	4323      	orrs	r3, r4
 8001638:	0019      	movs	r1, r3
 800163a:	bc1c      	pop	{r2, r3, r4}
 800163c:	4690      	mov	r8, r2
 800163e:	4699      	mov	r9, r3
 8001640:	46a2      	mov	sl, r4
 8001642:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001644:	003e      	movs	r6, r7
 8001646:	4316      	orrs	r6, r2
 8001648:	d012      	beq.n	8001670 <__aeabi_dadd+0x270>
 800164a:	1e5e      	subs	r6, r3, #1
 800164c:	2e00      	cmp	r6, #0
 800164e:	d000      	beq.n	8001652 <__aeabi_dadd+0x252>
 8001650:	e100      	b.n	8001854 <__aeabi_dadd+0x454>
 8001652:	1887      	adds	r7, r0, r2
 8001654:	4287      	cmp	r7, r0
 8001656:	4180      	sbcs	r0, r0
 8001658:	4441      	add	r1, r8
 800165a:	4240      	negs	r0, r0
 800165c:	1809      	adds	r1, r1, r0
 800165e:	2501      	movs	r5, #1
 8001660:	020b      	lsls	r3, r1, #8
 8001662:	d533      	bpl.n	80016cc <__aeabi_dadd+0x2cc>
 8001664:	2502      	movs	r5, #2
 8001666:	e785      	b.n	8001574 <__aeabi_dadd+0x174>
 8001668:	4664      	mov	r4, ip
 800166a:	0033      	movs	r3, r6
 800166c:	4641      	mov	r1, r8
 800166e:	0010      	movs	r0, r2
 8001670:	001d      	movs	r5, r3
 8001672:	e7c7      	b.n	8001604 <__aeabi_dadd+0x204>
 8001674:	2d00      	cmp	r5, #0
 8001676:	d000      	beq.n	800167a <__aeabi_dadd+0x27a>
 8001678:	e0da      	b.n	8001830 <__aeabi_dadd+0x430>
 800167a:	000c      	movs	r4, r1
 800167c:	4304      	orrs	r4, r0
 800167e:	d0f3      	beq.n	8001668 <__aeabi_dadd+0x268>
 8001680:	1c5c      	adds	r4, r3, #1
 8001682:	d100      	bne.n	8001686 <__aeabi_dadd+0x286>
 8001684:	e19f      	b.n	80019c6 <__aeabi_dadd+0x5c6>
 8001686:	4c5d      	ldr	r4, [pc, #372]	; (80017fc <__aeabi_dadd+0x3fc>)
 8001688:	42a6      	cmp	r6, r4
 800168a:	d100      	bne.n	800168e <__aeabi_dadd+0x28e>
 800168c:	e12f      	b.n	80018ee <__aeabi_dadd+0x4ee>
 800168e:	43db      	mvns	r3, r3
 8001690:	2b38      	cmp	r3, #56	; 0x38
 8001692:	dd00      	ble.n	8001696 <__aeabi_dadd+0x296>
 8001694:	e166      	b.n	8001964 <__aeabi_dadd+0x564>
 8001696:	2b1f      	cmp	r3, #31
 8001698:	dd00      	ble.n	800169c <__aeabi_dadd+0x29c>
 800169a:	e183      	b.n	80019a4 <__aeabi_dadd+0x5a4>
 800169c:	2420      	movs	r4, #32
 800169e:	0005      	movs	r5, r0
 80016a0:	1ae4      	subs	r4, r4, r3
 80016a2:	000f      	movs	r7, r1
 80016a4:	40dd      	lsrs	r5, r3
 80016a6:	40d9      	lsrs	r1, r3
 80016a8:	40a0      	lsls	r0, r4
 80016aa:	4643      	mov	r3, r8
 80016ac:	40a7      	lsls	r7, r4
 80016ae:	1a5b      	subs	r3, r3, r1
 80016b0:	1e44      	subs	r4, r0, #1
 80016b2:	41a0      	sbcs	r0, r4
 80016b4:	4698      	mov	r8, r3
 80016b6:	432f      	orrs	r7, r5
 80016b8:	4338      	orrs	r0, r7
 80016ba:	1a17      	subs	r7, r2, r0
 80016bc:	42ba      	cmp	r2, r7
 80016be:	4192      	sbcs	r2, r2
 80016c0:	4643      	mov	r3, r8
 80016c2:	4252      	negs	r2, r2
 80016c4:	1a99      	subs	r1, r3, r2
 80016c6:	4664      	mov	r4, ip
 80016c8:	0035      	movs	r5, r6
 80016ca:	e6ca      	b.n	8001462 <__aeabi_dadd+0x62>
 80016cc:	2207      	movs	r2, #7
 80016ce:	403a      	ands	r2, r7
 80016d0:	2a00      	cmp	r2, #0
 80016d2:	d000      	beq.n	80016d6 <__aeabi_dadd+0x2d6>
 80016d4:	e6f6      	b.n	80014c4 <__aeabi_dadd+0xc4>
 80016d6:	074b      	lsls	r3, r1, #29
 80016d8:	08ca      	lsrs	r2, r1, #3
 80016da:	4948      	ldr	r1, [pc, #288]	; (80017fc <__aeabi_dadd+0x3fc>)
 80016dc:	08ff      	lsrs	r7, r7, #3
 80016de:	433b      	orrs	r3, r7
 80016e0:	428d      	cmp	r5, r1
 80016e2:	d196      	bne.n	8001612 <__aeabi_dadd+0x212>
 80016e4:	0019      	movs	r1, r3
 80016e6:	4311      	orrs	r1, r2
 80016e8:	d100      	bne.n	80016ec <__aeabi_dadd+0x2ec>
 80016ea:	e19e      	b.n	8001a2a <__aeabi_dadd+0x62a>
 80016ec:	2180      	movs	r1, #128	; 0x80
 80016ee:	0309      	lsls	r1, r1, #12
 80016f0:	430a      	orrs	r2, r1
 80016f2:	0312      	lsls	r2, r2, #12
 80016f4:	0b12      	lsrs	r2, r2, #12
 80016f6:	4d41      	ldr	r5, [pc, #260]	; (80017fc <__aeabi_dadd+0x3fc>)
 80016f8:	e78f      	b.n	800161a <__aeabi_dadd+0x21a>
 80016fa:	0015      	movs	r5, r2
 80016fc:	2200      	movs	r2, #0
 80016fe:	2300      	movs	r3, #0
 8001700:	e78b      	b.n	800161a <__aeabi_dadd+0x21a>
 8001702:	2b00      	cmp	r3, #0
 8001704:	d000      	beq.n	8001708 <__aeabi_dadd+0x308>
 8001706:	e0c7      	b.n	8001898 <__aeabi_dadd+0x498>
 8001708:	1c6b      	adds	r3, r5, #1
 800170a:	055f      	lsls	r7, r3, #21
 800170c:	0d7f      	lsrs	r7, r7, #21
 800170e:	2f01      	cmp	r7, #1
 8001710:	dc00      	bgt.n	8001714 <__aeabi_dadd+0x314>
 8001712:	e0f1      	b.n	80018f8 <__aeabi_dadd+0x4f8>
 8001714:	4d39      	ldr	r5, [pc, #228]	; (80017fc <__aeabi_dadd+0x3fc>)
 8001716:	42ab      	cmp	r3, r5
 8001718:	d100      	bne.n	800171c <__aeabi_dadd+0x31c>
 800171a:	e0b9      	b.n	8001890 <__aeabi_dadd+0x490>
 800171c:	1885      	adds	r5, r0, r2
 800171e:	000a      	movs	r2, r1
 8001720:	4285      	cmp	r5, r0
 8001722:	4189      	sbcs	r1, r1
 8001724:	4442      	add	r2, r8
 8001726:	4249      	negs	r1, r1
 8001728:	1851      	adds	r1, r2, r1
 800172a:	2207      	movs	r2, #7
 800172c:	07cf      	lsls	r7, r1, #31
 800172e:	086d      	lsrs	r5, r5, #1
 8001730:	432f      	orrs	r7, r5
 8001732:	0849      	lsrs	r1, r1, #1
 8001734:	403a      	ands	r2, r7
 8001736:	001d      	movs	r5, r3
 8001738:	e6c2      	b.n	80014c0 <__aeabi_dadd+0xc0>
 800173a:	2207      	movs	r2, #7
 800173c:	4930      	ldr	r1, [pc, #192]	; (8001800 <__aeabi_dadd+0x400>)
 800173e:	1aed      	subs	r5, r5, r3
 8001740:	4031      	ands	r1, r6
 8001742:	403a      	ands	r2, r7
 8001744:	e6bc      	b.n	80014c0 <__aeabi_dadd+0xc0>
 8001746:	003e      	movs	r6, r7
 8001748:	3828      	subs	r0, #40	; 0x28
 800174a:	4086      	lsls	r6, r0
 800174c:	2700      	movs	r7, #0
 800174e:	e69f      	b.n	8001490 <__aeabi_dadd+0x90>
 8001750:	0038      	movs	r0, r7
 8001752:	f001 fcc9 	bl	80030e8 <__clzsi2>
 8001756:	3020      	adds	r0, #32
 8001758:	e68e      	b.n	8001478 <__aeabi_dadd+0x78>
 800175a:	4643      	mov	r3, r8
 800175c:	4313      	orrs	r3, r2
 800175e:	001f      	movs	r7, r3
 8001760:	1e7a      	subs	r2, r7, #1
 8001762:	4197      	sbcs	r7, r2
 8001764:	1bc7      	subs	r7, r0, r7
 8001766:	42b8      	cmp	r0, r7
 8001768:	4180      	sbcs	r0, r0
 800176a:	4240      	negs	r0, r0
 800176c:	1a09      	subs	r1, r1, r0
 800176e:	e678      	b.n	8001462 <__aeabi_dadd+0x62>
 8001770:	000e      	movs	r6, r1
 8001772:	003b      	movs	r3, r7
 8001774:	4306      	orrs	r6, r0
 8001776:	4313      	orrs	r3, r2
 8001778:	2d00      	cmp	r5, #0
 800177a:	d161      	bne.n	8001840 <__aeabi_dadd+0x440>
 800177c:	2e00      	cmp	r6, #0
 800177e:	d000      	beq.n	8001782 <__aeabi_dadd+0x382>
 8001780:	e0f4      	b.n	800196c <__aeabi_dadd+0x56c>
 8001782:	2b00      	cmp	r3, #0
 8001784:	d100      	bne.n	8001788 <__aeabi_dadd+0x388>
 8001786:	e11b      	b.n	80019c0 <__aeabi_dadd+0x5c0>
 8001788:	4664      	mov	r4, ip
 800178a:	0039      	movs	r1, r7
 800178c:	0010      	movs	r0, r2
 800178e:	e739      	b.n	8001604 <__aeabi_dadd+0x204>
 8001790:	4f1a      	ldr	r7, [pc, #104]	; (80017fc <__aeabi_dadd+0x3fc>)
 8001792:	42bb      	cmp	r3, r7
 8001794:	d07a      	beq.n	800188c <__aeabi_dadd+0x48c>
 8001796:	0033      	movs	r3, r6
 8001798:	e6ff      	b.n	800159a <__aeabi_dadd+0x19a>
 800179a:	0030      	movs	r0, r6
 800179c:	3d1f      	subs	r5, #31
 800179e:	40e8      	lsrs	r0, r5
 80017a0:	2b20      	cmp	r3, #32
 80017a2:	d003      	beq.n	80017ac <__aeabi_dadd+0x3ac>
 80017a4:	2140      	movs	r1, #64	; 0x40
 80017a6:	1acb      	subs	r3, r1, r3
 80017a8:	409e      	lsls	r6, r3
 80017aa:	4337      	orrs	r7, r6
 80017ac:	1e7b      	subs	r3, r7, #1
 80017ae:	419f      	sbcs	r7, r3
 80017b0:	2207      	movs	r2, #7
 80017b2:	4307      	orrs	r7, r0
 80017b4:	403a      	ands	r2, r7
 80017b6:	2100      	movs	r1, #0
 80017b8:	2500      	movs	r5, #0
 80017ba:	e789      	b.n	80016d0 <__aeabi_dadd+0x2d0>
 80017bc:	1a17      	subs	r7, r2, r0
 80017be:	4643      	mov	r3, r8
 80017c0:	42ba      	cmp	r2, r7
 80017c2:	41b6      	sbcs	r6, r6
 80017c4:	1a59      	subs	r1, r3, r1
 80017c6:	4276      	negs	r6, r6
 80017c8:	1b8e      	subs	r6, r1, r6
 80017ca:	4664      	mov	r4, ip
 80017cc:	e64e      	b.n	800146c <__aeabi_dadd+0x6c>
 80017ce:	2b1f      	cmp	r3, #31
 80017d0:	dd00      	ble.n	80017d4 <__aeabi_dadd+0x3d4>
 80017d2:	e0ad      	b.n	8001930 <__aeabi_dadd+0x530>
 80017d4:	2620      	movs	r6, #32
 80017d6:	4647      	mov	r7, r8
 80017d8:	1af6      	subs	r6, r6, r3
 80017da:	40b7      	lsls	r7, r6
 80017dc:	46b9      	mov	r9, r7
 80017de:	0017      	movs	r7, r2
 80017e0:	46b2      	mov	sl, r6
 80017e2:	40df      	lsrs	r7, r3
 80017e4:	464e      	mov	r6, r9
 80017e6:	433e      	orrs	r6, r7
 80017e8:	0037      	movs	r7, r6
 80017ea:	4656      	mov	r6, sl
 80017ec:	40b2      	lsls	r2, r6
 80017ee:	1e56      	subs	r6, r2, #1
 80017f0:	41b2      	sbcs	r2, r6
 80017f2:	4317      	orrs	r7, r2
 80017f4:	4642      	mov	r2, r8
 80017f6:	40da      	lsrs	r2, r3
 80017f8:	1889      	adds	r1, r1, r2
 80017fa:	e6ae      	b.n	800155a <__aeabi_dadd+0x15a>
 80017fc:	000007ff 	.word	0x000007ff
 8001800:	ff7fffff 	.word	0xff7fffff
 8001804:	800fffff 	.word	0x800fffff
 8001808:	2620      	movs	r6, #32
 800180a:	4647      	mov	r7, r8
 800180c:	1af6      	subs	r6, r6, r3
 800180e:	40b7      	lsls	r7, r6
 8001810:	46b9      	mov	r9, r7
 8001812:	0017      	movs	r7, r2
 8001814:	46b2      	mov	sl, r6
 8001816:	40df      	lsrs	r7, r3
 8001818:	464e      	mov	r6, r9
 800181a:	433e      	orrs	r6, r7
 800181c:	0037      	movs	r7, r6
 800181e:	4656      	mov	r6, sl
 8001820:	40b2      	lsls	r2, r6
 8001822:	1e56      	subs	r6, r2, #1
 8001824:	41b2      	sbcs	r2, r6
 8001826:	4317      	orrs	r7, r2
 8001828:	4642      	mov	r2, r8
 800182a:	40da      	lsrs	r2, r3
 800182c:	1a89      	subs	r1, r1, r2
 800182e:	e799      	b.n	8001764 <__aeabi_dadd+0x364>
 8001830:	4c7f      	ldr	r4, [pc, #508]	; (8001a30 <__aeabi_dadd+0x630>)
 8001832:	42a6      	cmp	r6, r4
 8001834:	d05b      	beq.n	80018ee <__aeabi_dadd+0x4ee>
 8001836:	2480      	movs	r4, #128	; 0x80
 8001838:	0424      	lsls	r4, r4, #16
 800183a:	425b      	negs	r3, r3
 800183c:	4321      	orrs	r1, r4
 800183e:	e727      	b.n	8001690 <__aeabi_dadd+0x290>
 8001840:	2e00      	cmp	r6, #0
 8001842:	d10c      	bne.n	800185e <__aeabi_dadd+0x45e>
 8001844:	2b00      	cmp	r3, #0
 8001846:	d100      	bne.n	800184a <__aeabi_dadd+0x44a>
 8001848:	e0cb      	b.n	80019e2 <__aeabi_dadd+0x5e2>
 800184a:	4664      	mov	r4, ip
 800184c:	0039      	movs	r1, r7
 800184e:	0010      	movs	r0, r2
 8001850:	4d77      	ldr	r5, [pc, #476]	; (8001a30 <__aeabi_dadd+0x630>)
 8001852:	e6d7      	b.n	8001604 <__aeabi_dadd+0x204>
 8001854:	4f76      	ldr	r7, [pc, #472]	; (8001a30 <__aeabi_dadd+0x630>)
 8001856:	42bb      	cmp	r3, r7
 8001858:	d018      	beq.n	800188c <__aeabi_dadd+0x48c>
 800185a:	0033      	movs	r3, r6
 800185c:	e675      	b.n	800154a <__aeabi_dadd+0x14a>
 800185e:	2b00      	cmp	r3, #0
 8001860:	d014      	beq.n	800188c <__aeabi_dadd+0x48c>
 8001862:	074b      	lsls	r3, r1, #29
 8001864:	08c0      	lsrs	r0, r0, #3
 8001866:	4318      	orrs	r0, r3
 8001868:	2380      	movs	r3, #128	; 0x80
 800186a:	08c9      	lsrs	r1, r1, #3
 800186c:	031b      	lsls	r3, r3, #12
 800186e:	4219      	tst	r1, r3
 8001870:	d007      	beq.n	8001882 <__aeabi_dadd+0x482>
 8001872:	08fc      	lsrs	r4, r7, #3
 8001874:	421c      	tst	r4, r3
 8001876:	d104      	bne.n	8001882 <__aeabi_dadd+0x482>
 8001878:	0779      	lsls	r1, r7, #29
 800187a:	08d0      	lsrs	r0, r2, #3
 800187c:	4308      	orrs	r0, r1
 800187e:	46e1      	mov	r9, ip
 8001880:	0021      	movs	r1, r4
 8001882:	464c      	mov	r4, r9
 8001884:	0f42      	lsrs	r2, r0, #29
 8001886:	00c9      	lsls	r1, r1, #3
 8001888:	4311      	orrs	r1, r2
 800188a:	00c0      	lsls	r0, r0, #3
 800188c:	4d68      	ldr	r5, [pc, #416]	; (8001a30 <__aeabi_dadd+0x630>)
 800188e:	e6b9      	b.n	8001604 <__aeabi_dadd+0x204>
 8001890:	001d      	movs	r5, r3
 8001892:	2200      	movs	r2, #0
 8001894:	2300      	movs	r3, #0
 8001896:	e6c0      	b.n	800161a <__aeabi_dadd+0x21a>
 8001898:	2d00      	cmp	r5, #0
 800189a:	d15b      	bne.n	8001954 <__aeabi_dadd+0x554>
 800189c:	000d      	movs	r5, r1
 800189e:	4305      	orrs	r5, r0
 80018a0:	d100      	bne.n	80018a4 <__aeabi_dadd+0x4a4>
 80018a2:	e6e2      	b.n	800166a <__aeabi_dadd+0x26a>
 80018a4:	1c5d      	adds	r5, r3, #1
 80018a6:	d100      	bne.n	80018aa <__aeabi_dadd+0x4aa>
 80018a8:	e0b0      	b.n	8001a0c <__aeabi_dadd+0x60c>
 80018aa:	4d61      	ldr	r5, [pc, #388]	; (8001a30 <__aeabi_dadd+0x630>)
 80018ac:	42ae      	cmp	r6, r5
 80018ae:	d01f      	beq.n	80018f0 <__aeabi_dadd+0x4f0>
 80018b0:	43db      	mvns	r3, r3
 80018b2:	2b38      	cmp	r3, #56	; 0x38
 80018b4:	dc71      	bgt.n	800199a <__aeabi_dadd+0x59a>
 80018b6:	2b1f      	cmp	r3, #31
 80018b8:	dd00      	ble.n	80018bc <__aeabi_dadd+0x4bc>
 80018ba:	e096      	b.n	80019ea <__aeabi_dadd+0x5ea>
 80018bc:	2520      	movs	r5, #32
 80018be:	000f      	movs	r7, r1
 80018c0:	1aed      	subs	r5, r5, r3
 80018c2:	40af      	lsls	r7, r5
 80018c4:	46b9      	mov	r9, r7
 80018c6:	0007      	movs	r7, r0
 80018c8:	46aa      	mov	sl, r5
 80018ca:	40df      	lsrs	r7, r3
 80018cc:	464d      	mov	r5, r9
 80018ce:	433d      	orrs	r5, r7
 80018d0:	002f      	movs	r7, r5
 80018d2:	4655      	mov	r5, sl
 80018d4:	40a8      	lsls	r0, r5
 80018d6:	40d9      	lsrs	r1, r3
 80018d8:	1e45      	subs	r5, r0, #1
 80018da:	41a8      	sbcs	r0, r5
 80018dc:	4488      	add	r8, r1
 80018de:	4307      	orrs	r7, r0
 80018e0:	18bf      	adds	r7, r7, r2
 80018e2:	4297      	cmp	r7, r2
 80018e4:	4192      	sbcs	r2, r2
 80018e6:	4251      	negs	r1, r2
 80018e8:	4441      	add	r1, r8
 80018ea:	0035      	movs	r5, r6
 80018ec:	e63a      	b.n	8001564 <__aeabi_dadd+0x164>
 80018ee:	4664      	mov	r4, ip
 80018f0:	0035      	movs	r5, r6
 80018f2:	4641      	mov	r1, r8
 80018f4:	0010      	movs	r0, r2
 80018f6:	e685      	b.n	8001604 <__aeabi_dadd+0x204>
 80018f8:	000b      	movs	r3, r1
 80018fa:	4303      	orrs	r3, r0
 80018fc:	2d00      	cmp	r5, #0
 80018fe:	d000      	beq.n	8001902 <__aeabi_dadd+0x502>
 8001900:	e663      	b.n	80015ca <__aeabi_dadd+0x1ca>
 8001902:	2b00      	cmp	r3, #0
 8001904:	d0f5      	beq.n	80018f2 <__aeabi_dadd+0x4f2>
 8001906:	4643      	mov	r3, r8
 8001908:	4313      	orrs	r3, r2
 800190a:	d100      	bne.n	800190e <__aeabi_dadd+0x50e>
 800190c:	e67a      	b.n	8001604 <__aeabi_dadd+0x204>
 800190e:	1887      	adds	r7, r0, r2
 8001910:	4287      	cmp	r7, r0
 8001912:	4180      	sbcs	r0, r0
 8001914:	2207      	movs	r2, #7
 8001916:	4441      	add	r1, r8
 8001918:	4240      	negs	r0, r0
 800191a:	1809      	adds	r1, r1, r0
 800191c:	403a      	ands	r2, r7
 800191e:	020b      	lsls	r3, r1, #8
 8001920:	d400      	bmi.n	8001924 <__aeabi_dadd+0x524>
 8001922:	e6d5      	b.n	80016d0 <__aeabi_dadd+0x2d0>
 8001924:	4b43      	ldr	r3, [pc, #268]	; (8001a34 <__aeabi_dadd+0x634>)
 8001926:	3501      	adds	r5, #1
 8001928:	4019      	ands	r1, r3
 800192a:	e5c9      	b.n	80014c0 <__aeabi_dadd+0xc0>
 800192c:	0038      	movs	r0, r7
 800192e:	e669      	b.n	8001604 <__aeabi_dadd+0x204>
 8001930:	001e      	movs	r6, r3
 8001932:	4647      	mov	r7, r8
 8001934:	3e20      	subs	r6, #32
 8001936:	40f7      	lsrs	r7, r6
 8001938:	46bc      	mov	ip, r7
 800193a:	2b20      	cmp	r3, #32
 800193c:	d004      	beq.n	8001948 <__aeabi_dadd+0x548>
 800193e:	2640      	movs	r6, #64	; 0x40
 8001940:	1af3      	subs	r3, r6, r3
 8001942:	4646      	mov	r6, r8
 8001944:	409e      	lsls	r6, r3
 8001946:	4332      	orrs	r2, r6
 8001948:	0017      	movs	r7, r2
 800194a:	4663      	mov	r3, ip
 800194c:	1e7a      	subs	r2, r7, #1
 800194e:	4197      	sbcs	r7, r2
 8001950:	431f      	orrs	r7, r3
 8001952:	e602      	b.n	800155a <__aeabi_dadd+0x15a>
 8001954:	4d36      	ldr	r5, [pc, #216]	; (8001a30 <__aeabi_dadd+0x630>)
 8001956:	42ae      	cmp	r6, r5
 8001958:	d0ca      	beq.n	80018f0 <__aeabi_dadd+0x4f0>
 800195a:	2580      	movs	r5, #128	; 0x80
 800195c:	042d      	lsls	r5, r5, #16
 800195e:	425b      	negs	r3, r3
 8001960:	4329      	orrs	r1, r5
 8001962:	e7a6      	b.n	80018b2 <__aeabi_dadd+0x4b2>
 8001964:	4308      	orrs	r0, r1
 8001966:	1e41      	subs	r1, r0, #1
 8001968:	4188      	sbcs	r0, r1
 800196a:	e6a6      	b.n	80016ba <__aeabi_dadd+0x2ba>
 800196c:	2b00      	cmp	r3, #0
 800196e:	d100      	bne.n	8001972 <__aeabi_dadd+0x572>
 8001970:	e648      	b.n	8001604 <__aeabi_dadd+0x204>
 8001972:	1a87      	subs	r7, r0, r2
 8001974:	4643      	mov	r3, r8
 8001976:	42b8      	cmp	r0, r7
 8001978:	41b6      	sbcs	r6, r6
 800197a:	1acb      	subs	r3, r1, r3
 800197c:	4276      	negs	r6, r6
 800197e:	1b9e      	subs	r6, r3, r6
 8001980:	0233      	lsls	r3, r6, #8
 8001982:	d54b      	bpl.n	8001a1c <__aeabi_dadd+0x61c>
 8001984:	1a17      	subs	r7, r2, r0
 8001986:	4643      	mov	r3, r8
 8001988:	42ba      	cmp	r2, r7
 800198a:	4192      	sbcs	r2, r2
 800198c:	1a59      	subs	r1, r3, r1
 800198e:	4252      	negs	r2, r2
 8001990:	1a89      	subs	r1, r1, r2
 8001992:	2207      	movs	r2, #7
 8001994:	4664      	mov	r4, ip
 8001996:	403a      	ands	r2, r7
 8001998:	e592      	b.n	80014c0 <__aeabi_dadd+0xc0>
 800199a:	4301      	orrs	r1, r0
 800199c:	000f      	movs	r7, r1
 800199e:	1e79      	subs	r1, r7, #1
 80019a0:	418f      	sbcs	r7, r1
 80019a2:	e79d      	b.n	80018e0 <__aeabi_dadd+0x4e0>
 80019a4:	001c      	movs	r4, r3
 80019a6:	000f      	movs	r7, r1
 80019a8:	3c20      	subs	r4, #32
 80019aa:	40e7      	lsrs	r7, r4
 80019ac:	2b20      	cmp	r3, #32
 80019ae:	d003      	beq.n	80019b8 <__aeabi_dadd+0x5b8>
 80019b0:	2440      	movs	r4, #64	; 0x40
 80019b2:	1ae3      	subs	r3, r4, r3
 80019b4:	4099      	lsls	r1, r3
 80019b6:	4308      	orrs	r0, r1
 80019b8:	1e41      	subs	r1, r0, #1
 80019ba:	4188      	sbcs	r0, r1
 80019bc:	4338      	orrs	r0, r7
 80019be:	e67c      	b.n	80016ba <__aeabi_dadd+0x2ba>
 80019c0:	2200      	movs	r2, #0
 80019c2:	2400      	movs	r4, #0
 80019c4:	e625      	b.n	8001612 <__aeabi_dadd+0x212>
 80019c6:	1a17      	subs	r7, r2, r0
 80019c8:	4643      	mov	r3, r8
 80019ca:	42ba      	cmp	r2, r7
 80019cc:	4192      	sbcs	r2, r2
 80019ce:	1a59      	subs	r1, r3, r1
 80019d0:	4252      	negs	r2, r2
 80019d2:	1a89      	subs	r1, r1, r2
 80019d4:	4664      	mov	r4, ip
 80019d6:	0035      	movs	r5, r6
 80019d8:	e543      	b.n	8001462 <__aeabi_dadd+0x62>
 80019da:	4641      	mov	r1, r8
 80019dc:	0010      	movs	r0, r2
 80019de:	4d14      	ldr	r5, [pc, #80]	; (8001a30 <__aeabi_dadd+0x630>)
 80019e0:	e610      	b.n	8001604 <__aeabi_dadd+0x204>
 80019e2:	2280      	movs	r2, #128	; 0x80
 80019e4:	2400      	movs	r4, #0
 80019e6:	0312      	lsls	r2, r2, #12
 80019e8:	e680      	b.n	80016ec <__aeabi_dadd+0x2ec>
 80019ea:	001d      	movs	r5, r3
 80019ec:	000f      	movs	r7, r1
 80019ee:	3d20      	subs	r5, #32
 80019f0:	40ef      	lsrs	r7, r5
 80019f2:	46bc      	mov	ip, r7
 80019f4:	2b20      	cmp	r3, #32
 80019f6:	d003      	beq.n	8001a00 <__aeabi_dadd+0x600>
 80019f8:	2540      	movs	r5, #64	; 0x40
 80019fa:	1aeb      	subs	r3, r5, r3
 80019fc:	4099      	lsls	r1, r3
 80019fe:	4308      	orrs	r0, r1
 8001a00:	0007      	movs	r7, r0
 8001a02:	4663      	mov	r3, ip
 8001a04:	1e78      	subs	r0, r7, #1
 8001a06:	4187      	sbcs	r7, r0
 8001a08:	431f      	orrs	r7, r3
 8001a0a:	e769      	b.n	80018e0 <__aeabi_dadd+0x4e0>
 8001a0c:	1887      	adds	r7, r0, r2
 8001a0e:	4297      	cmp	r7, r2
 8001a10:	419b      	sbcs	r3, r3
 8001a12:	4441      	add	r1, r8
 8001a14:	425b      	negs	r3, r3
 8001a16:	18c9      	adds	r1, r1, r3
 8001a18:	0035      	movs	r5, r6
 8001a1a:	e5a3      	b.n	8001564 <__aeabi_dadd+0x164>
 8001a1c:	003b      	movs	r3, r7
 8001a1e:	4333      	orrs	r3, r6
 8001a20:	d0ce      	beq.n	80019c0 <__aeabi_dadd+0x5c0>
 8001a22:	2207      	movs	r2, #7
 8001a24:	0031      	movs	r1, r6
 8001a26:	403a      	ands	r2, r7
 8001a28:	e652      	b.n	80016d0 <__aeabi_dadd+0x2d0>
 8001a2a:	2300      	movs	r3, #0
 8001a2c:	001a      	movs	r2, r3
 8001a2e:	e5f4      	b.n	800161a <__aeabi_dadd+0x21a>
 8001a30:	000007ff 	.word	0x000007ff
 8001a34:	ff7fffff 	.word	0xff7fffff

08001a38 <__aeabi_ddiv>:
 8001a38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a3a:	4657      	mov	r7, sl
 8001a3c:	46de      	mov	lr, fp
 8001a3e:	464e      	mov	r6, r9
 8001a40:	4645      	mov	r5, r8
 8001a42:	b5e0      	push	{r5, r6, r7, lr}
 8001a44:	4683      	mov	fp, r0
 8001a46:	0007      	movs	r7, r0
 8001a48:	030e      	lsls	r6, r1, #12
 8001a4a:	0048      	lsls	r0, r1, #1
 8001a4c:	b085      	sub	sp, #20
 8001a4e:	4692      	mov	sl, r2
 8001a50:	001c      	movs	r4, r3
 8001a52:	0b36      	lsrs	r6, r6, #12
 8001a54:	0d40      	lsrs	r0, r0, #21
 8001a56:	0fcd      	lsrs	r5, r1, #31
 8001a58:	2800      	cmp	r0, #0
 8001a5a:	d100      	bne.n	8001a5e <__aeabi_ddiv+0x26>
 8001a5c:	e09d      	b.n	8001b9a <__aeabi_ddiv+0x162>
 8001a5e:	4b95      	ldr	r3, [pc, #596]	; (8001cb4 <__aeabi_ddiv+0x27c>)
 8001a60:	4298      	cmp	r0, r3
 8001a62:	d039      	beq.n	8001ad8 <__aeabi_ddiv+0xa0>
 8001a64:	2380      	movs	r3, #128	; 0x80
 8001a66:	00f6      	lsls	r6, r6, #3
 8001a68:	041b      	lsls	r3, r3, #16
 8001a6a:	431e      	orrs	r6, r3
 8001a6c:	4a92      	ldr	r2, [pc, #584]	; (8001cb8 <__aeabi_ddiv+0x280>)
 8001a6e:	0f7b      	lsrs	r3, r7, #29
 8001a70:	4333      	orrs	r3, r6
 8001a72:	4699      	mov	r9, r3
 8001a74:	4694      	mov	ip, r2
 8001a76:	0003      	movs	r3, r0
 8001a78:	4463      	add	r3, ip
 8001a7a:	9300      	str	r3, [sp, #0]
 8001a7c:	2300      	movs	r3, #0
 8001a7e:	2600      	movs	r6, #0
 8001a80:	00ff      	lsls	r7, r7, #3
 8001a82:	9302      	str	r3, [sp, #8]
 8001a84:	0323      	lsls	r3, r4, #12
 8001a86:	0b1b      	lsrs	r3, r3, #12
 8001a88:	4698      	mov	r8, r3
 8001a8a:	0063      	lsls	r3, r4, #1
 8001a8c:	0fe4      	lsrs	r4, r4, #31
 8001a8e:	4652      	mov	r2, sl
 8001a90:	0d5b      	lsrs	r3, r3, #21
 8001a92:	9401      	str	r4, [sp, #4]
 8001a94:	d100      	bne.n	8001a98 <__aeabi_ddiv+0x60>
 8001a96:	e0b3      	b.n	8001c00 <__aeabi_ddiv+0x1c8>
 8001a98:	4986      	ldr	r1, [pc, #536]	; (8001cb4 <__aeabi_ddiv+0x27c>)
 8001a9a:	428b      	cmp	r3, r1
 8001a9c:	d100      	bne.n	8001aa0 <__aeabi_ddiv+0x68>
 8001a9e:	e09e      	b.n	8001bde <__aeabi_ddiv+0x1a6>
 8001aa0:	4642      	mov	r2, r8
 8001aa2:	00d1      	lsls	r1, r2, #3
 8001aa4:	2280      	movs	r2, #128	; 0x80
 8001aa6:	0412      	lsls	r2, r2, #16
 8001aa8:	430a      	orrs	r2, r1
 8001aaa:	4651      	mov	r1, sl
 8001aac:	0f49      	lsrs	r1, r1, #29
 8001aae:	4311      	orrs	r1, r2
 8001ab0:	468b      	mov	fp, r1
 8001ab2:	4981      	ldr	r1, [pc, #516]	; (8001cb8 <__aeabi_ddiv+0x280>)
 8001ab4:	4652      	mov	r2, sl
 8001ab6:	468c      	mov	ip, r1
 8001ab8:	9900      	ldr	r1, [sp, #0]
 8001aba:	4463      	add	r3, ip
 8001abc:	1acb      	subs	r3, r1, r3
 8001abe:	2100      	movs	r1, #0
 8001ac0:	00d2      	lsls	r2, r2, #3
 8001ac2:	9300      	str	r3, [sp, #0]
 8001ac4:	002b      	movs	r3, r5
 8001ac6:	4063      	eors	r3, r4
 8001ac8:	469a      	mov	sl, r3
 8001aca:	2e0f      	cmp	r6, #15
 8001acc:	d900      	bls.n	8001ad0 <__aeabi_ddiv+0x98>
 8001ace:	e105      	b.n	8001cdc <__aeabi_ddiv+0x2a4>
 8001ad0:	4b7a      	ldr	r3, [pc, #488]	; (8001cbc <__aeabi_ddiv+0x284>)
 8001ad2:	00b6      	lsls	r6, r6, #2
 8001ad4:	599b      	ldr	r3, [r3, r6]
 8001ad6:	469f      	mov	pc, r3
 8001ad8:	465b      	mov	r3, fp
 8001ada:	4333      	orrs	r3, r6
 8001adc:	4699      	mov	r9, r3
 8001ade:	d000      	beq.n	8001ae2 <__aeabi_ddiv+0xaa>
 8001ae0:	e0b8      	b.n	8001c54 <__aeabi_ddiv+0x21c>
 8001ae2:	2302      	movs	r3, #2
 8001ae4:	2608      	movs	r6, #8
 8001ae6:	2700      	movs	r7, #0
 8001ae8:	9000      	str	r0, [sp, #0]
 8001aea:	9302      	str	r3, [sp, #8]
 8001aec:	e7ca      	b.n	8001a84 <__aeabi_ddiv+0x4c>
 8001aee:	46cb      	mov	fp, r9
 8001af0:	003a      	movs	r2, r7
 8001af2:	9902      	ldr	r1, [sp, #8]
 8001af4:	9501      	str	r5, [sp, #4]
 8001af6:	9b01      	ldr	r3, [sp, #4]
 8001af8:	469a      	mov	sl, r3
 8001afa:	2902      	cmp	r1, #2
 8001afc:	d027      	beq.n	8001b4e <__aeabi_ddiv+0x116>
 8001afe:	2903      	cmp	r1, #3
 8001b00:	d100      	bne.n	8001b04 <__aeabi_ddiv+0xcc>
 8001b02:	e280      	b.n	8002006 <__aeabi_ddiv+0x5ce>
 8001b04:	2901      	cmp	r1, #1
 8001b06:	d044      	beq.n	8001b92 <__aeabi_ddiv+0x15a>
 8001b08:	496d      	ldr	r1, [pc, #436]	; (8001cc0 <__aeabi_ddiv+0x288>)
 8001b0a:	9b00      	ldr	r3, [sp, #0]
 8001b0c:	468c      	mov	ip, r1
 8001b0e:	4463      	add	r3, ip
 8001b10:	001c      	movs	r4, r3
 8001b12:	2c00      	cmp	r4, #0
 8001b14:	dd38      	ble.n	8001b88 <__aeabi_ddiv+0x150>
 8001b16:	0753      	lsls	r3, r2, #29
 8001b18:	d000      	beq.n	8001b1c <__aeabi_ddiv+0xe4>
 8001b1a:	e213      	b.n	8001f44 <__aeabi_ddiv+0x50c>
 8001b1c:	08d2      	lsrs	r2, r2, #3
 8001b1e:	465b      	mov	r3, fp
 8001b20:	01db      	lsls	r3, r3, #7
 8001b22:	d509      	bpl.n	8001b38 <__aeabi_ddiv+0x100>
 8001b24:	4659      	mov	r1, fp
 8001b26:	4b67      	ldr	r3, [pc, #412]	; (8001cc4 <__aeabi_ddiv+0x28c>)
 8001b28:	4019      	ands	r1, r3
 8001b2a:	468b      	mov	fp, r1
 8001b2c:	2180      	movs	r1, #128	; 0x80
 8001b2e:	00c9      	lsls	r1, r1, #3
 8001b30:	468c      	mov	ip, r1
 8001b32:	9b00      	ldr	r3, [sp, #0]
 8001b34:	4463      	add	r3, ip
 8001b36:	001c      	movs	r4, r3
 8001b38:	4b63      	ldr	r3, [pc, #396]	; (8001cc8 <__aeabi_ddiv+0x290>)
 8001b3a:	429c      	cmp	r4, r3
 8001b3c:	dc07      	bgt.n	8001b4e <__aeabi_ddiv+0x116>
 8001b3e:	465b      	mov	r3, fp
 8001b40:	0564      	lsls	r4, r4, #21
 8001b42:	075f      	lsls	r7, r3, #29
 8001b44:	025b      	lsls	r3, r3, #9
 8001b46:	4317      	orrs	r7, r2
 8001b48:	0b1b      	lsrs	r3, r3, #12
 8001b4a:	0d62      	lsrs	r2, r4, #21
 8001b4c:	e002      	b.n	8001b54 <__aeabi_ddiv+0x11c>
 8001b4e:	2300      	movs	r3, #0
 8001b50:	2700      	movs	r7, #0
 8001b52:	4a58      	ldr	r2, [pc, #352]	; (8001cb4 <__aeabi_ddiv+0x27c>)
 8001b54:	2100      	movs	r1, #0
 8001b56:	031b      	lsls	r3, r3, #12
 8001b58:	0b1c      	lsrs	r4, r3, #12
 8001b5a:	0d0b      	lsrs	r3, r1, #20
 8001b5c:	051b      	lsls	r3, r3, #20
 8001b5e:	4323      	orrs	r3, r4
 8001b60:	0514      	lsls	r4, r2, #20
 8001b62:	4a5a      	ldr	r2, [pc, #360]	; (8001ccc <__aeabi_ddiv+0x294>)
 8001b64:	0038      	movs	r0, r7
 8001b66:	4013      	ands	r3, r2
 8001b68:	431c      	orrs	r4, r3
 8001b6a:	4653      	mov	r3, sl
 8001b6c:	0064      	lsls	r4, r4, #1
 8001b6e:	07db      	lsls	r3, r3, #31
 8001b70:	0864      	lsrs	r4, r4, #1
 8001b72:	431c      	orrs	r4, r3
 8001b74:	0021      	movs	r1, r4
 8001b76:	b005      	add	sp, #20
 8001b78:	bc3c      	pop	{r2, r3, r4, r5}
 8001b7a:	4690      	mov	r8, r2
 8001b7c:	4699      	mov	r9, r3
 8001b7e:	46a2      	mov	sl, r4
 8001b80:	46ab      	mov	fp, r5
 8001b82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b84:	2201      	movs	r2, #1
 8001b86:	4252      	negs	r2, r2
 8001b88:	2301      	movs	r3, #1
 8001b8a:	1b1b      	subs	r3, r3, r4
 8001b8c:	2b38      	cmp	r3, #56	; 0x38
 8001b8e:	dc00      	bgt.n	8001b92 <__aeabi_ddiv+0x15a>
 8001b90:	e1ad      	b.n	8001eee <__aeabi_ddiv+0x4b6>
 8001b92:	2200      	movs	r2, #0
 8001b94:	2300      	movs	r3, #0
 8001b96:	2700      	movs	r7, #0
 8001b98:	e7dc      	b.n	8001b54 <__aeabi_ddiv+0x11c>
 8001b9a:	465b      	mov	r3, fp
 8001b9c:	4333      	orrs	r3, r6
 8001b9e:	4699      	mov	r9, r3
 8001ba0:	d05e      	beq.n	8001c60 <__aeabi_ddiv+0x228>
 8001ba2:	2e00      	cmp	r6, #0
 8001ba4:	d100      	bne.n	8001ba8 <__aeabi_ddiv+0x170>
 8001ba6:	e18a      	b.n	8001ebe <__aeabi_ddiv+0x486>
 8001ba8:	0030      	movs	r0, r6
 8001baa:	f001 fa9d 	bl	80030e8 <__clzsi2>
 8001bae:	0003      	movs	r3, r0
 8001bb0:	3b0b      	subs	r3, #11
 8001bb2:	2b1c      	cmp	r3, #28
 8001bb4:	dd00      	ble.n	8001bb8 <__aeabi_ddiv+0x180>
 8001bb6:	e17b      	b.n	8001eb0 <__aeabi_ddiv+0x478>
 8001bb8:	221d      	movs	r2, #29
 8001bba:	1ad3      	subs	r3, r2, r3
 8001bbc:	465a      	mov	r2, fp
 8001bbe:	0001      	movs	r1, r0
 8001bc0:	40da      	lsrs	r2, r3
 8001bc2:	3908      	subs	r1, #8
 8001bc4:	408e      	lsls	r6, r1
 8001bc6:	0013      	movs	r3, r2
 8001bc8:	465f      	mov	r7, fp
 8001bca:	4333      	orrs	r3, r6
 8001bcc:	4699      	mov	r9, r3
 8001bce:	408f      	lsls	r7, r1
 8001bd0:	4b3f      	ldr	r3, [pc, #252]	; (8001cd0 <__aeabi_ddiv+0x298>)
 8001bd2:	2600      	movs	r6, #0
 8001bd4:	1a1b      	subs	r3, r3, r0
 8001bd6:	9300      	str	r3, [sp, #0]
 8001bd8:	2300      	movs	r3, #0
 8001bda:	9302      	str	r3, [sp, #8]
 8001bdc:	e752      	b.n	8001a84 <__aeabi_ddiv+0x4c>
 8001bde:	4641      	mov	r1, r8
 8001be0:	4653      	mov	r3, sl
 8001be2:	430b      	orrs	r3, r1
 8001be4:	493b      	ldr	r1, [pc, #236]	; (8001cd4 <__aeabi_ddiv+0x29c>)
 8001be6:	469b      	mov	fp, r3
 8001be8:	468c      	mov	ip, r1
 8001bea:	9b00      	ldr	r3, [sp, #0]
 8001bec:	4463      	add	r3, ip
 8001bee:	9300      	str	r3, [sp, #0]
 8001bf0:	465b      	mov	r3, fp
 8001bf2:	2b00      	cmp	r3, #0
 8001bf4:	d13b      	bne.n	8001c6e <__aeabi_ddiv+0x236>
 8001bf6:	2302      	movs	r3, #2
 8001bf8:	2200      	movs	r2, #0
 8001bfa:	431e      	orrs	r6, r3
 8001bfc:	2102      	movs	r1, #2
 8001bfe:	e761      	b.n	8001ac4 <__aeabi_ddiv+0x8c>
 8001c00:	4643      	mov	r3, r8
 8001c02:	4313      	orrs	r3, r2
 8001c04:	469b      	mov	fp, r3
 8001c06:	d037      	beq.n	8001c78 <__aeabi_ddiv+0x240>
 8001c08:	4643      	mov	r3, r8
 8001c0a:	2b00      	cmp	r3, #0
 8001c0c:	d100      	bne.n	8001c10 <__aeabi_ddiv+0x1d8>
 8001c0e:	e162      	b.n	8001ed6 <__aeabi_ddiv+0x49e>
 8001c10:	4640      	mov	r0, r8
 8001c12:	f001 fa69 	bl	80030e8 <__clzsi2>
 8001c16:	0003      	movs	r3, r0
 8001c18:	3b0b      	subs	r3, #11
 8001c1a:	2b1c      	cmp	r3, #28
 8001c1c:	dd00      	ble.n	8001c20 <__aeabi_ddiv+0x1e8>
 8001c1e:	e153      	b.n	8001ec8 <__aeabi_ddiv+0x490>
 8001c20:	0002      	movs	r2, r0
 8001c22:	4641      	mov	r1, r8
 8001c24:	3a08      	subs	r2, #8
 8001c26:	4091      	lsls	r1, r2
 8001c28:	4688      	mov	r8, r1
 8001c2a:	211d      	movs	r1, #29
 8001c2c:	1acb      	subs	r3, r1, r3
 8001c2e:	4651      	mov	r1, sl
 8001c30:	40d9      	lsrs	r1, r3
 8001c32:	000b      	movs	r3, r1
 8001c34:	4641      	mov	r1, r8
 8001c36:	430b      	orrs	r3, r1
 8001c38:	469b      	mov	fp, r3
 8001c3a:	4653      	mov	r3, sl
 8001c3c:	4093      	lsls	r3, r2
 8001c3e:	001a      	movs	r2, r3
 8001c40:	9b00      	ldr	r3, [sp, #0]
 8001c42:	4925      	ldr	r1, [pc, #148]	; (8001cd8 <__aeabi_ddiv+0x2a0>)
 8001c44:	469c      	mov	ip, r3
 8001c46:	4460      	add	r0, ip
 8001c48:	0003      	movs	r3, r0
 8001c4a:	468c      	mov	ip, r1
 8001c4c:	4463      	add	r3, ip
 8001c4e:	9300      	str	r3, [sp, #0]
 8001c50:	2100      	movs	r1, #0
 8001c52:	e737      	b.n	8001ac4 <__aeabi_ddiv+0x8c>
 8001c54:	2303      	movs	r3, #3
 8001c56:	46b1      	mov	r9, r6
 8001c58:	9000      	str	r0, [sp, #0]
 8001c5a:	260c      	movs	r6, #12
 8001c5c:	9302      	str	r3, [sp, #8]
 8001c5e:	e711      	b.n	8001a84 <__aeabi_ddiv+0x4c>
 8001c60:	2300      	movs	r3, #0
 8001c62:	9300      	str	r3, [sp, #0]
 8001c64:	3301      	adds	r3, #1
 8001c66:	2604      	movs	r6, #4
 8001c68:	2700      	movs	r7, #0
 8001c6a:	9302      	str	r3, [sp, #8]
 8001c6c:	e70a      	b.n	8001a84 <__aeabi_ddiv+0x4c>
 8001c6e:	2303      	movs	r3, #3
 8001c70:	46c3      	mov	fp, r8
 8001c72:	431e      	orrs	r6, r3
 8001c74:	2103      	movs	r1, #3
 8001c76:	e725      	b.n	8001ac4 <__aeabi_ddiv+0x8c>
 8001c78:	3301      	adds	r3, #1
 8001c7a:	431e      	orrs	r6, r3
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	2101      	movs	r1, #1
 8001c80:	e720      	b.n	8001ac4 <__aeabi_ddiv+0x8c>
 8001c82:	2300      	movs	r3, #0
 8001c84:	469a      	mov	sl, r3
 8001c86:	2380      	movs	r3, #128	; 0x80
 8001c88:	2700      	movs	r7, #0
 8001c8a:	031b      	lsls	r3, r3, #12
 8001c8c:	4a09      	ldr	r2, [pc, #36]	; (8001cb4 <__aeabi_ddiv+0x27c>)
 8001c8e:	e761      	b.n	8001b54 <__aeabi_ddiv+0x11c>
 8001c90:	2380      	movs	r3, #128	; 0x80
 8001c92:	4649      	mov	r1, r9
 8001c94:	031b      	lsls	r3, r3, #12
 8001c96:	4219      	tst	r1, r3
 8001c98:	d100      	bne.n	8001c9c <__aeabi_ddiv+0x264>
 8001c9a:	e0e2      	b.n	8001e62 <__aeabi_ddiv+0x42a>
 8001c9c:	4659      	mov	r1, fp
 8001c9e:	4219      	tst	r1, r3
 8001ca0:	d000      	beq.n	8001ca4 <__aeabi_ddiv+0x26c>
 8001ca2:	e0de      	b.n	8001e62 <__aeabi_ddiv+0x42a>
 8001ca4:	430b      	orrs	r3, r1
 8001ca6:	031b      	lsls	r3, r3, #12
 8001ca8:	0017      	movs	r7, r2
 8001caa:	0b1b      	lsrs	r3, r3, #12
 8001cac:	46a2      	mov	sl, r4
 8001cae:	4a01      	ldr	r2, [pc, #4]	; (8001cb4 <__aeabi_ddiv+0x27c>)
 8001cb0:	e750      	b.n	8001b54 <__aeabi_ddiv+0x11c>
 8001cb2:	46c0      	nop			; (mov r8, r8)
 8001cb4:	000007ff 	.word	0x000007ff
 8001cb8:	fffffc01 	.word	0xfffffc01
 8001cbc:	0800d4a4 	.word	0x0800d4a4
 8001cc0:	000003ff 	.word	0x000003ff
 8001cc4:	feffffff 	.word	0xfeffffff
 8001cc8:	000007fe 	.word	0x000007fe
 8001ccc:	800fffff 	.word	0x800fffff
 8001cd0:	fffffc0d 	.word	0xfffffc0d
 8001cd4:	fffff801 	.word	0xfffff801
 8001cd8:	000003f3 	.word	0x000003f3
 8001cdc:	45d9      	cmp	r9, fp
 8001cde:	d900      	bls.n	8001ce2 <__aeabi_ddiv+0x2aa>
 8001ce0:	e0cb      	b.n	8001e7a <__aeabi_ddiv+0x442>
 8001ce2:	d100      	bne.n	8001ce6 <__aeabi_ddiv+0x2ae>
 8001ce4:	e0c6      	b.n	8001e74 <__aeabi_ddiv+0x43c>
 8001ce6:	003c      	movs	r4, r7
 8001ce8:	4648      	mov	r0, r9
 8001cea:	2700      	movs	r7, #0
 8001cec:	9b00      	ldr	r3, [sp, #0]
 8001cee:	3b01      	subs	r3, #1
 8001cf0:	9300      	str	r3, [sp, #0]
 8001cf2:	465b      	mov	r3, fp
 8001cf4:	0e16      	lsrs	r6, r2, #24
 8001cf6:	021b      	lsls	r3, r3, #8
 8001cf8:	431e      	orrs	r6, r3
 8001cfa:	0213      	lsls	r3, r2, #8
 8001cfc:	4698      	mov	r8, r3
 8001cfe:	0433      	lsls	r3, r6, #16
 8001d00:	0c1b      	lsrs	r3, r3, #16
 8001d02:	4699      	mov	r9, r3
 8001d04:	0c31      	lsrs	r1, r6, #16
 8001d06:	9101      	str	r1, [sp, #4]
 8001d08:	f7fe faaa 	bl	8000260 <__aeabi_uidivmod>
 8001d0c:	464a      	mov	r2, r9
 8001d0e:	4342      	muls	r2, r0
 8001d10:	040b      	lsls	r3, r1, #16
 8001d12:	0c21      	lsrs	r1, r4, #16
 8001d14:	0005      	movs	r5, r0
 8001d16:	4319      	orrs	r1, r3
 8001d18:	428a      	cmp	r2, r1
 8001d1a:	d907      	bls.n	8001d2c <__aeabi_ddiv+0x2f4>
 8001d1c:	1989      	adds	r1, r1, r6
 8001d1e:	3d01      	subs	r5, #1
 8001d20:	428e      	cmp	r6, r1
 8001d22:	d803      	bhi.n	8001d2c <__aeabi_ddiv+0x2f4>
 8001d24:	428a      	cmp	r2, r1
 8001d26:	d901      	bls.n	8001d2c <__aeabi_ddiv+0x2f4>
 8001d28:	1e85      	subs	r5, r0, #2
 8001d2a:	1989      	adds	r1, r1, r6
 8001d2c:	1a88      	subs	r0, r1, r2
 8001d2e:	9901      	ldr	r1, [sp, #4]
 8001d30:	f7fe fa96 	bl	8000260 <__aeabi_uidivmod>
 8001d34:	0409      	lsls	r1, r1, #16
 8001d36:	468c      	mov	ip, r1
 8001d38:	464a      	mov	r2, r9
 8001d3a:	0421      	lsls	r1, r4, #16
 8001d3c:	4664      	mov	r4, ip
 8001d3e:	4342      	muls	r2, r0
 8001d40:	0c09      	lsrs	r1, r1, #16
 8001d42:	0003      	movs	r3, r0
 8001d44:	4321      	orrs	r1, r4
 8001d46:	428a      	cmp	r2, r1
 8001d48:	d904      	bls.n	8001d54 <__aeabi_ddiv+0x31c>
 8001d4a:	1989      	adds	r1, r1, r6
 8001d4c:	3b01      	subs	r3, #1
 8001d4e:	428e      	cmp	r6, r1
 8001d50:	d800      	bhi.n	8001d54 <__aeabi_ddiv+0x31c>
 8001d52:	e0f1      	b.n	8001f38 <__aeabi_ddiv+0x500>
 8001d54:	042d      	lsls	r5, r5, #16
 8001d56:	431d      	orrs	r5, r3
 8001d58:	46ab      	mov	fp, r5
 8001d5a:	4643      	mov	r3, r8
 8001d5c:	1a89      	subs	r1, r1, r2
 8001d5e:	4642      	mov	r2, r8
 8001d60:	0c28      	lsrs	r0, r5, #16
 8001d62:	0412      	lsls	r2, r2, #16
 8001d64:	0c1d      	lsrs	r5, r3, #16
 8001d66:	465b      	mov	r3, fp
 8001d68:	0c14      	lsrs	r4, r2, #16
 8001d6a:	0022      	movs	r2, r4
 8001d6c:	041b      	lsls	r3, r3, #16
 8001d6e:	0c1b      	lsrs	r3, r3, #16
 8001d70:	435a      	muls	r2, r3
 8001d72:	9403      	str	r4, [sp, #12]
 8001d74:	436b      	muls	r3, r5
 8001d76:	4344      	muls	r4, r0
 8001d78:	9502      	str	r5, [sp, #8]
 8001d7a:	4368      	muls	r0, r5
 8001d7c:	191b      	adds	r3, r3, r4
 8001d7e:	0c15      	lsrs	r5, r2, #16
 8001d80:	18eb      	adds	r3, r5, r3
 8001d82:	429c      	cmp	r4, r3
 8001d84:	d903      	bls.n	8001d8e <__aeabi_ddiv+0x356>
 8001d86:	2480      	movs	r4, #128	; 0x80
 8001d88:	0264      	lsls	r4, r4, #9
 8001d8a:	46a4      	mov	ip, r4
 8001d8c:	4460      	add	r0, ip
 8001d8e:	0c1c      	lsrs	r4, r3, #16
 8001d90:	0415      	lsls	r5, r2, #16
 8001d92:	041b      	lsls	r3, r3, #16
 8001d94:	0c2d      	lsrs	r5, r5, #16
 8001d96:	1820      	adds	r0, r4, r0
 8001d98:	195d      	adds	r5, r3, r5
 8001d9a:	4281      	cmp	r1, r0
 8001d9c:	d377      	bcc.n	8001e8e <__aeabi_ddiv+0x456>
 8001d9e:	d073      	beq.n	8001e88 <__aeabi_ddiv+0x450>
 8001da0:	1a0c      	subs	r4, r1, r0
 8001da2:	4aa2      	ldr	r2, [pc, #648]	; (800202c <__aeabi_ddiv+0x5f4>)
 8001da4:	1b7d      	subs	r5, r7, r5
 8001da6:	42af      	cmp	r7, r5
 8001da8:	41bf      	sbcs	r7, r7
 8001daa:	4694      	mov	ip, r2
 8001dac:	9b00      	ldr	r3, [sp, #0]
 8001dae:	427f      	negs	r7, r7
 8001db0:	4463      	add	r3, ip
 8001db2:	1be0      	subs	r0, r4, r7
 8001db4:	001c      	movs	r4, r3
 8001db6:	4286      	cmp	r6, r0
 8001db8:	d100      	bne.n	8001dbc <__aeabi_ddiv+0x384>
 8001dba:	e0db      	b.n	8001f74 <__aeabi_ddiv+0x53c>
 8001dbc:	9901      	ldr	r1, [sp, #4]
 8001dbe:	f7fe fa4f 	bl	8000260 <__aeabi_uidivmod>
 8001dc2:	464a      	mov	r2, r9
 8001dc4:	4342      	muls	r2, r0
 8001dc6:	040b      	lsls	r3, r1, #16
 8001dc8:	0c29      	lsrs	r1, r5, #16
 8001dca:	0007      	movs	r7, r0
 8001dcc:	4319      	orrs	r1, r3
 8001dce:	428a      	cmp	r2, r1
 8001dd0:	d907      	bls.n	8001de2 <__aeabi_ddiv+0x3aa>
 8001dd2:	1989      	adds	r1, r1, r6
 8001dd4:	3f01      	subs	r7, #1
 8001dd6:	428e      	cmp	r6, r1
 8001dd8:	d803      	bhi.n	8001de2 <__aeabi_ddiv+0x3aa>
 8001dda:	428a      	cmp	r2, r1
 8001ddc:	d901      	bls.n	8001de2 <__aeabi_ddiv+0x3aa>
 8001dde:	1e87      	subs	r7, r0, #2
 8001de0:	1989      	adds	r1, r1, r6
 8001de2:	1a88      	subs	r0, r1, r2
 8001de4:	9901      	ldr	r1, [sp, #4]
 8001de6:	f7fe fa3b 	bl	8000260 <__aeabi_uidivmod>
 8001dea:	0409      	lsls	r1, r1, #16
 8001dec:	464a      	mov	r2, r9
 8001dee:	4689      	mov	r9, r1
 8001df0:	0429      	lsls	r1, r5, #16
 8001df2:	464d      	mov	r5, r9
 8001df4:	4342      	muls	r2, r0
 8001df6:	0c09      	lsrs	r1, r1, #16
 8001df8:	0003      	movs	r3, r0
 8001dfa:	4329      	orrs	r1, r5
 8001dfc:	428a      	cmp	r2, r1
 8001dfe:	d907      	bls.n	8001e10 <__aeabi_ddiv+0x3d8>
 8001e00:	1989      	adds	r1, r1, r6
 8001e02:	3b01      	subs	r3, #1
 8001e04:	428e      	cmp	r6, r1
 8001e06:	d803      	bhi.n	8001e10 <__aeabi_ddiv+0x3d8>
 8001e08:	428a      	cmp	r2, r1
 8001e0a:	d901      	bls.n	8001e10 <__aeabi_ddiv+0x3d8>
 8001e0c:	1e83      	subs	r3, r0, #2
 8001e0e:	1989      	adds	r1, r1, r6
 8001e10:	043f      	lsls	r7, r7, #16
 8001e12:	1a89      	subs	r1, r1, r2
 8001e14:	003a      	movs	r2, r7
 8001e16:	9f03      	ldr	r7, [sp, #12]
 8001e18:	431a      	orrs	r2, r3
 8001e1a:	0038      	movs	r0, r7
 8001e1c:	0413      	lsls	r3, r2, #16
 8001e1e:	0c1b      	lsrs	r3, r3, #16
 8001e20:	4358      	muls	r0, r3
 8001e22:	4681      	mov	r9, r0
 8001e24:	9802      	ldr	r0, [sp, #8]
 8001e26:	0c15      	lsrs	r5, r2, #16
 8001e28:	436f      	muls	r7, r5
 8001e2a:	4343      	muls	r3, r0
 8001e2c:	4345      	muls	r5, r0
 8001e2e:	4648      	mov	r0, r9
 8001e30:	0c00      	lsrs	r0, r0, #16
 8001e32:	4684      	mov	ip, r0
 8001e34:	19db      	adds	r3, r3, r7
 8001e36:	4463      	add	r3, ip
 8001e38:	429f      	cmp	r7, r3
 8001e3a:	d903      	bls.n	8001e44 <__aeabi_ddiv+0x40c>
 8001e3c:	2080      	movs	r0, #128	; 0x80
 8001e3e:	0240      	lsls	r0, r0, #9
 8001e40:	4684      	mov	ip, r0
 8001e42:	4465      	add	r5, ip
 8001e44:	4648      	mov	r0, r9
 8001e46:	0c1f      	lsrs	r7, r3, #16
 8001e48:	0400      	lsls	r0, r0, #16
 8001e4a:	041b      	lsls	r3, r3, #16
 8001e4c:	0c00      	lsrs	r0, r0, #16
 8001e4e:	197d      	adds	r5, r7, r5
 8001e50:	1818      	adds	r0, r3, r0
 8001e52:	42a9      	cmp	r1, r5
 8001e54:	d200      	bcs.n	8001e58 <__aeabi_ddiv+0x420>
 8001e56:	e084      	b.n	8001f62 <__aeabi_ddiv+0x52a>
 8001e58:	d100      	bne.n	8001e5c <__aeabi_ddiv+0x424>
 8001e5a:	e07f      	b.n	8001f5c <__aeabi_ddiv+0x524>
 8001e5c:	2301      	movs	r3, #1
 8001e5e:	431a      	orrs	r2, r3
 8001e60:	e657      	b.n	8001b12 <__aeabi_ddiv+0xda>
 8001e62:	2380      	movs	r3, #128	; 0x80
 8001e64:	464a      	mov	r2, r9
 8001e66:	031b      	lsls	r3, r3, #12
 8001e68:	4313      	orrs	r3, r2
 8001e6a:	031b      	lsls	r3, r3, #12
 8001e6c:	0b1b      	lsrs	r3, r3, #12
 8001e6e:	46aa      	mov	sl, r5
 8001e70:	4a6f      	ldr	r2, [pc, #444]	; (8002030 <__aeabi_ddiv+0x5f8>)
 8001e72:	e66f      	b.n	8001b54 <__aeabi_ddiv+0x11c>
 8001e74:	42ba      	cmp	r2, r7
 8001e76:	d900      	bls.n	8001e7a <__aeabi_ddiv+0x442>
 8001e78:	e735      	b.n	8001ce6 <__aeabi_ddiv+0x2ae>
 8001e7a:	464b      	mov	r3, r9
 8001e7c:	07dc      	lsls	r4, r3, #31
 8001e7e:	0858      	lsrs	r0, r3, #1
 8001e80:	087b      	lsrs	r3, r7, #1
 8001e82:	431c      	orrs	r4, r3
 8001e84:	07ff      	lsls	r7, r7, #31
 8001e86:	e734      	b.n	8001cf2 <__aeabi_ddiv+0x2ba>
 8001e88:	2400      	movs	r4, #0
 8001e8a:	42af      	cmp	r7, r5
 8001e8c:	d289      	bcs.n	8001da2 <__aeabi_ddiv+0x36a>
 8001e8e:	4447      	add	r7, r8
 8001e90:	4547      	cmp	r7, r8
 8001e92:	41a4      	sbcs	r4, r4
 8001e94:	465b      	mov	r3, fp
 8001e96:	4264      	negs	r4, r4
 8001e98:	19a4      	adds	r4, r4, r6
 8001e9a:	1864      	adds	r4, r4, r1
 8001e9c:	3b01      	subs	r3, #1
 8001e9e:	42a6      	cmp	r6, r4
 8001ea0:	d21e      	bcs.n	8001ee0 <__aeabi_ddiv+0x4a8>
 8001ea2:	42a0      	cmp	r0, r4
 8001ea4:	d86d      	bhi.n	8001f82 <__aeabi_ddiv+0x54a>
 8001ea6:	d100      	bne.n	8001eaa <__aeabi_ddiv+0x472>
 8001ea8:	e0b6      	b.n	8002018 <__aeabi_ddiv+0x5e0>
 8001eaa:	1a24      	subs	r4, r4, r0
 8001eac:	469b      	mov	fp, r3
 8001eae:	e778      	b.n	8001da2 <__aeabi_ddiv+0x36a>
 8001eb0:	0003      	movs	r3, r0
 8001eb2:	465a      	mov	r2, fp
 8001eb4:	3b28      	subs	r3, #40	; 0x28
 8001eb6:	409a      	lsls	r2, r3
 8001eb8:	2700      	movs	r7, #0
 8001eba:	4691      	mov	r9, r2
 8001ebc:	e688      	b.n	8001bd0 <__aeabi_ddiv+0x198>
 8001ebe:	4658      	mov	r0, fp
 8001ec0:	f001 f912 	bl	80030e8 <__clzsi2>
 8001ec4:	3020      	adds	r0, #32
 8001ec6:	e672      	b.n	8001bae <__aeabi_ddiv+0x176>
 8001ec8:	0003      	movs	r3, r0
 8001eca:	4652      	mov	r2, sl
 8001ecc:	3b28      	subs	r3, #40	; 0x28
 8001ece:	409a      	lsls	r2, r3
 8001ed0:	4693      	mov	fp, r2
 8001ed2:	2200      	movs	r2, #0
 8001ed4:	e6b4      	b.n	8001c40 <__aeabi_ddiv+0x208>
 8001ed6:	4650      	mov	r0, sl
 8001ed8:	f001 f906 	bl	80030e8 <__clzsi2>
 8001edc:	3020      	adds	r0, #32
 8001ede:	e69a      	b.n	8001c16 <__aeabi_ddiv+0x1de>
 8001ee0:	42a6      	cmp	r6, r4
 8001ee2:	d1e2      	bne.n	8001eaa <__aeabi_ddiv+0x472>
 8001ee4:	45b8      	cmp	r8, r7
 8001ee6:	d9dc      	bls.n	8001ea2 <__aeabi_ddiv+0x46a>
 8001ee8:	1a34      	subs	r4, r6, r0
 8001eea:	469b      	mov	fp, r3
 8001eec:	e759      	b.n	8001da2 <__aeabi_ddiv+0x36a>
 8001eee:	2b1f      	cmp	r3, #31
 8001ef0:	dc65      	bgt.n	8001fbe <__aeabi_ddiv+0x586>
 8001ef2:	4c50      	ldr	r4, [pc, #320]	; (8002034 <__aeabi_ddiv+0x5fc>)
 8001ef4:	9900      	ldr	r1, [sp, #0]
 8001ef6:	46a4      	mov	ip, r4
 8001ef8:	465c      	mov	r4, fp
 8001efa:	4461      	add	r1, ip
 8001efc:	0008      	movs	r0, r1
 8001efe:	408c      	lsls	r4, r1
 8001f00:	0011      	movs	r1, r2
 8001f02:	4082      	lsls	r2, r0
 8001f04:	40d9      	lsrs	r1, r3
 8001f06:	1e50      	subs	r0, r2, #1
 8001f08:	4182      	sbcs	r2, r0
 8001f0a:	430c      	orrs	r4, r1
 8001f0c:	4314      	orrs	r4, r2
 8001f0e:	465a      	mov	r2, fp
 8001f10:	40da      	lsrs	r2, r3
 8001f12:	0013      	movs	r3, r2
 8001f14:	0762      	lsls	r2, r4, #29
 8001f16:	d009      	beq.n	8001f2c <__aeabi_ddiv+0x4f4>
 8001f18:	220f      	movs	r2, #15
 8001f1a:	4022      	ands	r2, r4
 8001f1c:	2a04      	cmp	r2, #4
 8001f1e:	d005      	beq.n	8001f2c <__aeabi_ddiv+0x4f4>
 8001f20:	0022      	movs	r2, r4
 8001f22:	1d14      	adds	r4, r2, #4
 8001f24:	4294      	cmp	r4, r2
 8001f26:	4189      	sbcs	r1, r1
 8001f28:	4249      	negs	r1, r1
 8001f2a:	185b      	adds	r3, r3, r1
 8001f2c:	021a      	lsls	r2, r3, #8
 8001f2e:	d562      	bpl.n	8001ff6 <__aeabi_ddiv+0x5be>
 8001f30:	2201      	movs	r2, #1
 8001f32:	2300      	movs	r3, #0
 8001f34:	2700      	movs	r7, #0
 8001f36:	e60d      	b.n	8001b54 <__aeabi_ddiv+0x11c>
 8001f38:	428a      	cmp	r2, r1
 8001f3a:	d800      	bhi.n	8001f3e <__aeabi_ddiv+0x506>
 8001f3c:	e70a      	b.n	8001d54 <__aeabi_ddiv+0x31c>
 8001f3e:	1e83      	subs	r3, r0, #2
 8001f40:	1989      	adds	r1, r1, r6
 8001f42:	e707      	b.n	8001d54 <__aeabi_ddiv+0x31c>
 8001f44:	230f      	movs	r3, #15
 8001f46:	4013      	ands	r3, r2
 8001f48:	2b04      	cmp	r3, #4
 8001f4a:	d100      	bne.n	8001f4e <__aeabi_ddiv+0x516>
 8001f4c:	e5e6      	b.n	8001b1c <__aeabi_ddiv+0xe4>
 8001f4e:	1d17      	adds	r7, r2, #4
 8001f50:	4297      	cmp	r7, r2
 8001f52:	4192      	sbcs	r2, r2
 8001f54:	4253      	negs	r3, r2
 8001f56:	449b      	add	fp, r3
 8001f58:	08fa      	lsrs	r2, r7, #3
 8001f5a:	e5e0      	b.n	8001b1e <__aeabi_ddiv+0xe6>
 8001f5c:	2800      	cmp	r0, #0
 8001f5e:	d100      	bne.n	8001f62 <__aeabi_ddiv+0x52a>
 8001f60:	e5d7      	b.n	8001b12 <__aeabi_ddiv+0xda>
 8001f62:	1871      	adds	r1, r6, r1
 8001f64:	1e53      	subs	r3, r2, #1
 8001f66:	42b1      	cmp	r1, r6
 8001f68:	d327      	bcc.n	8001fba <__aeabi_ddiv+0x582>
 8001f6a:	42a9      	cmp	r1, r5
 8001f6c:	d315      	bcc.n	8001f9a <__aeabi_ddiv+0x562>
 8001f6e:	d058      	beq.n	8002022 <__aeabi_ddiv+0x5ea>
 8001f70:	001a      	movs	r2, r3
 8001f72:	e773      	b.n	8001e5c <__aeabi_ddiv+0x424>
 8001f74:	2b00      	cmp	r3, #0
 8001f76:	dc00      	bgt.n	8001f7a <__aeabi_ddiv+0x542>
 8001f78:	e604      	b.n	8001b84 <__aeabi_ddiv+0x14c>
 8001f7a:	2301      	movs	r3, #1
 8001f7c:	2200      	movs	r2, #0
 8001f7e:	449b      	add	fp, r3
 8001f80:	e5cd      	b.n	8001b1e <__aeabi_ddiv+0xe6>
 8001f82:	2302      	movs	r3, #2
 8001f84:	4447      	add	r7, r8
 8001f86:	4547      	cmp	r7, r8
 8001f88:	4189      	sbcs	r1, r1
 8001f8a:	425b      	negs	r3, r3
 8001f8c:	469c      	mov	ip, r3
 8001f8e:	4249      	negs	r1, r1
 8001f90:	1989      	adds	r1, r1, r6
 8001f92:	190c      	adds	r4, r1, r4
 8001f94:	44e3      	add	fp, ip
 8001f96:	1a24      	subs	r4, r4, r0
 8001f98:	e703      	b.n	8001da2 <__aeabi_ddiv+0x36a>
 8001f9a:	4643      	mov	r3, r8
 8001f9c:	005f      	lsls	r7, r3, #1
 8001f9e:	4547      	cmp	r7, r8
 8001fa0:	419b      	sbcs	r3, r3
 8001fa2:	46b8      	mov	r8, r7
 8001fa4:	425b      	negs	r3, r3
 8001fa6:	199e      	adds	r6, r3, r6
 8001fa8:	3a02      	subs	r2, #2
 8001faa:	1989      	adds	r1, r1, r6
 8001fac:	42a9      	cmp	r1, r5
 8001fae:	d000      	beq.n	8001fb2 <__aeabi_ddiv+0x57a>
 8001fb0:	e754      	b.n	8001e5c <__aeabi_ddiv+0x424>
 8001fb2:	4540      	cmp	r0, r8
 8001fb4:	d000      	beq.n	8001fb8 <__aeabi_ddiv+0x580>
 8001fb6:	e751      	b.n	8001e5c <__aeabi_ddiv+0x424>
 8001fb8:	e5ab      	b.n	8001b12 <__aeabi_ddiv+0xda>
 8001fba:	001a      	movs	r2, r3
 8001fbc:	e7f6      	b.n	8001fac <__aeabi_ddiv+0x574>
 8001fbe:	211f      	movs	r1, #31
 8001fc0:	465f      	mov	r7, fp
 8001fc2:	4249      	negs	r1, r1
 8001fc4:	1b0c      	subs	r4, r1, r4
 8001fc6:	40e7      	lsrs	r7, r4
 8001fc8:	2b20      	cmp	r3, #32
 8001fca:	d007      	beq.n	8001fdc <__aeabi_ddiv+0x5a4>
 8001fcc:	491a      	ldr	r1, [pc, #104]	; (8002038 <__aeabi_ddiv+0x600>)
 8001fce:	9b00      	ldr	r3, [sp, #0]
 8001fd0:	468c      	mov	ip, r1
 8001fd2:	4463      	add	r3, ip
 8001fd4:	0018      	movs	r0, r3
 8001fd6:	465b      	mov	r3, fp
 8001fd8:	4083      	lsls	r3, r0
 8001fda:	431a      	orrs	r2, r3
 8001fdc:	1e50      	subs	r0, r2, #1
 8001fde:	4182      	sbcs	r2, r0
 8001fe0:	433a      	orrs	r2, r7
 8001fe2:	2707      	movs	r7, #7
 8001fe4:	2300      	movs	r3, #0
 8001fe6:	4017      	ands	r7, r2
 8001fe8:	d009      	beq.n	8001ffe <__aeabi_ddiv+0x5c6>
 8001fea:	210f      	movs	r1, #15
 8001fec:	2300      	movs	r3, #0
 8001fee:	4011      	ands	r1, r2
 8001ff0:	0014      	movs	r4, r2
 8001ff2:	2904      	cmp	r1, #4
 8001ff4:	d195      	bne.n	8001f22 <__aeabi_ddiv+0x4ea>
 8001ff6:	0022      	movs	r2, r4
 8001ff8:	075f      	lsls	r7, r3, #29
 8001ffa:	025b      	lsls	r3, r3, #9
 8001ffc:	0b1b      	lsrs	r3, r3, #12
 8001ffe:	08d2      	lsrs	r2, r2, #3
 8002000:	4317      	orrs	r7, r2
 8002002:	2200      	movs	r2, #0
 8002004:	e5a6      	b.n	8001b54 <__aeabi_ddiv+0x11c>
 8002006:	2380      	movs	r3, #128	; 0x80
 8002008:	4659      	mov	r1, fp
 800200a:	031b      	lsls	r3, r3, #12
 800200c:	430b      	orrs	r3, r1
 800200e:	031b      	lsls	r3, r3, #12
 8002010:	0017      	movs	r7, r2
 8002012:	0b1b      	lsrs	r3, r3, #12
 8002014:	4a06      	ldr	r2, [pc, #24]	; (8002030 <__aeabi_ddiv+0x5f8>)
 8002016:	e59d      	b.n	8001b54 <__aeabi_ddiv+0x11c>
 8002018:	42bd      	cmp	r5, r7
 800201a:	d8b2      	bhi.n	8001f82 <__aeabi_ddiv+0x54a>
 800201c:	469b      	mov	fp, r3
 800201e:	2400      	movs	r4, #0
 8002020:	e6bf      	b.n	8001da2 <__aeabi_ddiv+0x36a>
 8002022:	4580      	cmp	r8, r0
 8002024:	d3b9      	bcc.n	8001f9a <__aeabi_ddiv+0x562>
 8002026:	001a      	movs	r2, r3
 8002028:	e7c3      	b.n	8001fb2 <__aeabi_ddiv+0x57a>
 800202a:	46c0      	nop			; (mov r8, r8)
 800202c:	000003ff 	.word	0x000003ff
 8002030:	000007ff 	.word	0x000007ff
 8002034:	0000041e 	.word	0x0000041e
 8002038:	0000043e 	.word	0x0000043e

0800203c <__eqdf2>:
 800203c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800203e:	464f      	mov	r7, r9
 8002040:	4646      	mov	r6, r8
 8002042:	46d6      	mov	lr, sl
 8002044:	4684      	mov	ip, r0
 8002046:	b5c0      	push	{r6, r7, lr}
 8002048:	4680      	mov	r8, r0
 800204a:	4e19      	ldr	r6, [pc, #100]	; (80020b0 <__eqdf2+0x74>)
 800204c:	0318      	lsls	r0, r3, #12
 800204e:	030f      	lsls	r7, r1, #12
 8002050:	004d      	lsls	r5, r1, #1
 8002052:	0b00      	lsrs	r0, r0, #12
 8002054:	005c      	lsls	r4, r3, #1
 8002056:	4682      	mov	sl, r0
 8002058:	0b3f      	lsrs	r7, r7, #12
 800205a:	0d6d      	lsrs	r5, r5, #21
 800205c:	0fc9      	lsrs	r1, r1, #31
 800205e:	4691      	mov	r9, r2
 8002060:	0d64      	lsrs	r4, r4, #21
 8002062:	0fdb      	lsrs	r3, r3, #31
 8002064:	2001      	movs	r0, #1
 8002066:	42b5      	cmp	r5, r6
 8002068:	d00a      	beq.n	8002080 <__eqdf2+0x44>
 800206a:	42b4      	cmp	r4, r6
 800206c:	d003      	beq.n	8002076 <__eqdf2+0x3a>
 800206e:	42a5      	cmp	r5, r4
 8002070:	d101      	bne.n	8002076 <__eqdf2+0x3a>
 8002072:	4557      	cmp	r7, sl
 8002074:	d00c      	beq.n	8002090 <__eqdf2+0x54>
 8002076:	bc1c      	pop	{r2, r3, r4}
 8002078:	4690      	mov	r8, r2
 800207a:	4699      	mov	r9, r3
 800207c:	46a2      	mov	sl, r4
 800207e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002080:	4666      	mov	r6, ip
 8002082:	433e      	orrs	r6, r7
 8002084:	d1f7      	bne.n	8002076 <__eqdf2+0x3a>
 8002086:	42ac      	cmp	r4, r5
 8002088:	d1f5      	bne.n	8002076 <__eqdf2+0x3a>
 800208a:	4654      	mov	r4, sl
 800208c:	4314      	orrs	r4, r2
 800208e:	d1f2      	bne.n	8002076 <__eqdf2+0x3a>
 8002090:	2001      	movs	r0, #1
 8002092:	45c8      	cmp	r8, r9
 8002094:	d1ef      	bne.n	8002076 <__eqdf2+0x3a>
 8002096:	4299      	cmp	r1, r3
 8002098:	d007      	beq.n	80020aa <__eqdf2+0x6e>
 800209a:	2d00      	cmp	r5, #0
 800209c:	d1eb      	bne.n	8002076 <__eqdf2+0x3a>
 800209e:	4663      	mov	r3, ip
 80020a0:	431f      	orrs	r7, r3
 80020a2:	0038      	movs	r0, r7
 80020a4:	1e47      	subs	r7, r0, #1
 80020a6:	41b8      	sbcs	r0, r7
 80020a8:	e7e5      	b.n	8002076 <__eqdf2+0x3a>
 80020aa:	2000      	movs	r0, #0
 80020ac:	e7e3      	b.n	8002076 <__eqdf2+0x3a>
 80020ae:	46c0      	nop			; (mov r8, r8)
 80020b0:	000007ff 	.word	0x000007ff

080020b4 <__gedf2>:
 80020b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020b6:	464f      	mov	r7, r9
 80020b8:	4646      	mov	r6, r8
 80020ba:	46d6      	mov	lr, sl
 80020bc:	004d      	lsls	r5, r1, #1
 80020be:	b5c0      	push	{r6, r7, lr}
 80020c0:	030e      	lsls	r6, r1, #12
 80020c2:	0fc9      	lsrs	r1, r1, #31
 80020c4:	468a      	mov	sl, r1
 80020c6:	492c      	ldr	r1, [pc, #176]	; (8002178 <__gedf2+0xc4>)
 80020c8:	031f      	lsls	r7, r3, #12
 80020ca:	005c      	lsls	r4, r3, #1
 80020cc:	4680      	mov	r8, r0
 80020ce:	0b36      	lsrs	r6, r6, #12
 80020d0:	0d6d      	lsrs	r5, r5, #21
 80020d2:	4691      	mov	r9, r2
 80020d4:	0b3f      	lsrs	r7, r7, #12
 80020d6:	0d64      	lsrs	r4, r4, #21
 80020d8:	0fdb      	lsrs	r3, r3, #31
 80020da:	428d      	cmp	r5, r1
 80020dc:	d01e      	beq.n	800211c <__gedf2+0x68>
 80020de:	428c      	cmp	r4, r1
 80020e0:	d016      	beq.n	8002110 <__gedf2+0x5c>
 80020e2:	2d00      	cmp	r5, #0
 80020e4:	d11e      	bne.n	8002124 <__gedf2+0x70>
 80020e6:	4330      	orrs	r0, r6
 80020e8:	4684      	mov	ip, r0
 80020ea:	2c00      	cmp	r4, #0
 80020ec:	d101      	bne.n	80020f2 <__gedf2+0x3e>
 80020ee:	433a      	orrs	r2, r7
 80020f0:	d023      	beq.n	800213a <__gedf2+0x86>
 80020f2:	4662      	mov	r2, ip
 80020f4:	2a00      	cmp	r2, #0
 80020f6:	d01a      	beq.n	800212e <__gedf2+0x7a>
 80020f8:	459a      	cmp	sl, r3
 80020fa:	d029      	beq.n	8002150 <__gedf2+0x9c>
 80020fc:	4651      	mov	r1, sl
 80020fe:	2002      	movs	r0, #2
 8002100:	3901      	subs	r1, #1
 8002102:	4008      	ands	r0, r1
 8002104:	3801      	subs	r0, #1
 8002106:	bc1c      	pop	{r2, r3, r4}
 8002108:	4690      	mov	r8, r2
 800210a:	4699      	mov	r9, r3
 800210c:	46a2      	mov	sl, r4
 800210e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002110:	0039      	movs	r1, r7
 8002112:	4311      	orrs	r1, r2
 8002114:	d0e5      	beq.n	80020e2 <__gedf2+0x2e>
 8002116:	2002      	movs	r0, #2
 8002118:	4240      	negs	r0, r0
 800211a:	e7f4      	b.n	8002106 <__gedf2+0x52>
 800211c:	4330      	orrs	r0, r6
 800211e:	d1fa      	bne.n	8002116 <__gedf2+0x62>
 8002120:	42ac      	cmp	r4, r5
 8002122:	d00f      	beq.n	8002144 <__gedf2+0x90>
 8002124:	2c00      	cmp	r4, #0
 8002126:	d10f      	bne.n	8002148 <__gedf2+0x94>
 8002128:	433a      	orrs	r2, r7
 800212a:	d0e7      	beq.n	80020fc <__gedf2+0x48>
 800212c:	e00c      	b.n	8002148 <__gedf2+0x94>
 800212e:	2201      	movs	r2, #1
 8002130:	3b01      	subs	r3, #1
 8002132:	4393      	bics	r3, r2
 8002134:	0018      	movs	r0, r3
 8002136:	3001      	adds	r0, #1
 8002138:	e7e5      	b.n	8002106 <__gedf2+0x52>
 800213a:	4663      	mov	r3, ip
 800213c:	2000      	movs	r0, #0
 800213e:	2b00      	cmp	r3, #0
 8002140:	d0e1      	beq.n	8002106 <__gedf2+0x52>
 8002142:	e7db      	b.n	80020fc <__gedf2+0x48>
 8002144:	433a      	orrs	r2, r7
 8002146:	d1e6      	bne.n	8002116 <__gedf2+0x62>
 8002148:	459a      	cmp	sl, r3
 800214a:	d1d7      	bne.n	80020fc <__gedf2+0x48>
 800214c:	42a5      	cmp	r5, r4
 800214e:	dcd5      	bgt.n	80020fc <__gedf2+0x48>
 8002150:	42a5      	cmp	r5, r4
 8002152:	db05      	blt.n	8002160 <__gedf2+0xac>
 8002154:	42be      	cmp	r6, r7
 8002156:	d8d1      	bhi.n	80020fc <__gedf2+0x48>
 8002158:	d008      	beq.n	800216c <__gedf2+0xb8>
 800215a:	2000      	movs	r0, #0
 800215c:	42be      	cmp	r6, r7
 800215e:	d2d2      	bcs.n	8002106 <__gedf2+0x52>
 8002160:	4650      	mov	r0, sl
 8002162:	2301      	movs	r3, #1
 8002164:	3801      	subs	r0, #1
 8002166:	4398      	bics	r0, r3
 8002168:	3001      	adds	r0, #1
 800216a:	e7cc      	b.n	8002106 <__gedf2+0x52>
 800216c:	45c8      	cmp	r8, r9
 800216e:	d8c5      	bhi.n	80020fc <__gedf2+0x48>
 8002170:	2000      	movs	r0, #0
 8002172:	45c8      	cmp	r8, r9
 8002174:	d3f4      	bcc.n	8002160 <__gedf2+0xac>
 8002176:	e7c6      	b.n	8002106 <__gedf2+0x52>
 8002178:	000007ff 	.word	0x000007ff

0800217c <__ledf2>:
 800217c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800217e:	464f      	mov	r7, r9
 8002180:	4646      	mov	r6, r8
 8002182:	46d6      	mov	lr, sl
 8002184:	004d      	lsls	r5, r1, #1
 8002186:	b5c0      	push	{r6, r7, lr}
 8002188:	030e      	lsls	r6, r1, #12
 800218a:	0fc9      	lsrs	r1, r1, #31
 800218c:	468a      	mov	sl, r1
 800218e:	492e      	ldr	r1, [pc, #184]	; (8002248 <__ledf2+0xcc>)
 8002190:	031f      	lsls	r7, r3, #12
 8002192:	005c      	lsls	r4, r3, #1
 8002194:	4680      	mov	r8, r0
 8002196:	0b36      	lsrs	r6, r6, #12
 8002198:	0d6d      	lsrs	r5, r5, #21
 800219a:	4691      	mov	r9, r2
 800219c:	0b3f      	lsrs	r7, r7, #12
 800219e:	0d64      	lsrs	r4, r4, #21
 80021a0:	0fdb      	lsrs	r3, r3, #31
 80021a2:	428d      	cmp	r5, r1
 80021a4:	d018      	beq.n	80021d8 <__ledf2+0x5c>
 80021a6:	428c      	cmp	r4, r1
 80021a8:	d011      	beq.n	80021ce <__ledf2+0x52>
 80021aa:	2d00      	cmp	r5, #0
 80021ac:	d118      	bne.n	80021e0 <__ledf2+0x64>
 80021ae:	4330      	orrs	r0, r6
 80021b0:	4684      	mov	ip, r0
 80021b2:	2c00      	cmp	r4, #0
 80021b4:	d11e      	bne.n	80021f4 <__ledf2+0x78>
 80021b6:	433a      	orrs	r2, r7
 80021b8:	d11c      	bne.n	80021f4 <__ledf2+0x78>
 80021ba:	4663      	mov	r3, ip
 80021bc:	2000      	movs	r0, #0
 80021be:	2b00      	cmp	r3, #0
 80021c0:	d030      	beq.n	8002224 <__ledf2+0xa8>
 80021c2:	4651      	mov	r1, sl
 80021c4:	2002      	movs	r0, #2
 80021c6:	3901      	subs	r1, #1
 80021c8:	4008      	ands	r0, r1
 80021ca:	3801      	subs	r0, #1
 80021cc:	e02a      	b.n	8002224 <__ledf2+0xa8>
 80021ce:	0039      	movs	r1, r7
 80021d0:	4311      	orrs	r1, r2
 80021d2:	d0ea      	beq.n	80021aa <__ledf2+0x2e>
 80021d4:	2002      	movs	r0, #2
 80021d6:	e025      	b.n	8002224 <__ledf2+0xa8>
 80021d8:	4330      	orrs	r0, r6
 80021da:	d1fb      	bne.n	80021d4 <__ledf2+0x58>
 80021dc:	42ac      	cmp	r4, r5
 80021de:	d026      	beq.n	800222e <__ledf2+0xb2>
 80021e0:	2c00      	cmp	r4, #0
 80021e2:	d126      	bne.n	8002232 <__ledf2+0xb6>
 80021e4:	433a      	orrs	r2, r7
 80021e6:	d124      	bne.n	8002232 <__ledf2+0xb6>
 80021e8:	4651      	mov	r1, sl
 80021ea:	2002      	movs	r0, #2
 80021ec:	3901      	subs	r1, #1
 80021ee:	4008      	ands	r0, r1
 80021f0:	3801      	subs	r0, #1
 80021f2:	e017      	b.n	8002224 <__ledf2+0xa8>
 80021f4:	4662      	mov	r2, ip
 80021f6:	2a00      	cmp	r2, #0
 80021f8:	d00f      	beq.n	800221a <__ledf2+0x9e>
 80021fa:	459a      	cmp	sl, r3
 80021fc:	d1e1      	bne.n	80021c2 <__ledf2+0x46>
 80021fe:	42a5      	cmp	r5, r4
 8002200:	db05      	blt.n	800220e <__ledf2+0x92>
 8002202:	42be      	cmp	r6, r7
 8002204:	d8dd      	bhi.n	80021c2 <__ledf2+0x46>
 8002206:	d019      	beq.n	800223c <__ledf2+0xc0>
 8002208:	2000      	movs	r0, #0
 800220a:	42be      	cmp	r6, r7
 800220c:	d20a      	bcs.n	8002224 <__ledf2+0xa8>
 800220e:	4650      	mov	r0, sl
 8002210:	2301      	movs	r3, #1
 8002212:	3801      	subs	r0, #1
 8002214:	4398      	bics	r0, r3
 8002216:	3001      	adds	r0, #1
 8002218:	e004      	b.n	8002224 <__ledf2+0xa8>
 800221a:	2201      	movs	r2, #1
 800221c:	3b01      	subs	r3, #1
 800221e:	4393      	bics	r3, r2
 8002220:	0018      	movs	r0, r3
 8002222:	3001      	adds	r0, #1
 8002224:	bc1c      	pop	{r2, r3, r4}
 8002226:	4690      	mov	r8, r2
 8002228:	4699      	mov	r9, r3
 800222a:	46a2      	mov	sl, r4
 800222c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800222e:	433a      	orrs	r2, r7
 8002230:	d1d0      	bne.n	80021d4 <__ledf2+0x58>
 8002232:	459a      	cmp	sl, r3
 8002234:	d1c5      	bne.n	80021c2 <__ledf2+0x46>
 8002236:	42a5      	cmp	r5, r4
 8002238:	dcc3      	bgt.n	80021c2 <__ledf2+0x46>
 800223a:	e7e0      	b.n	80021fe <__ledf2+0x82>
 800223c:	45c8      	cmp	r8, r9
 800223e:	d8c0      	bhi.n	80021c2 <__ledf2+0x46>
 8002240:	2000      	movs	r0, #0
 8002242:	45c8      	cmp	r8, r9
 8002244:	d3e3      	bcc.n	800220e <__ledf2+0x92>
 8002246:	e7ed      	b.n	8002224 <__ledf2+0xa8>
 8002248:	000007ff 	.word	0x000007ff

0800224c <__aeabi_dmul>:
 800224c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800224e:	4657      	mov	r7, sl
 8002250:	46de      	mov	lr, fp
 8002252:	464e      	mov	r6, r9
 8002254:	4645      	mov	r5, r8
 8002256:	b5e0      	push	{r5, r6, r7, lr}
 8002258:	4683      	mov	fp, r0
 800225a:	0006      	movs	r6, r0
 800225c:	030f      	lsls	r7, r1, #12
 800225e:	0048      	lsls	r0, r1, #1
 8002260:	b087      	sub	sp, #28
 8002262:	4692      	mov	sl, r2
 8002264:	001d      	movs	r5, r3
 8002266:	0b3f      	lsrs	r7, r7, #12
 8002268:	0d40      	lsrs	r0, r0, #21
 800226a:	0fcc      	lsrs	r4, r1, #31
 800226c:	2800      	cmp	r0, #0
 800226e:	d100      	bne.n	8002272 <__aeabi_dmul+0x26>
 8002270:	e06f      	b.n	8002352 <__aeabi_dmul+0x106>
 8002272:	4bde      	ldr	r3, [pc, #888]	; (80025ec <__aeabi_dmul+0x3a0>)
 8002274:	4298      	cmp	r0, r3
 8002276:	d038      	beq.n	80022ea <__aeabi_dmul+0x9e>
 8002278:	2380      	movs	r3, #128	; 0x80
 800227a:	00ff      	lsls	r7, r7, #3
 800227c:	041b      	lsls	r3, r3, #16
 800227e:	431f      	orrs	r7, r3
 8002280:	0f73      	lsrs	r3, r6, #29
 8002282:	433b      	orrs	r3, r7
 8002284:	9301      	str	r3, [sp, #4]
 8002286:	4bda      	ldr	r3, [pc, #872]	; (80025f0 <__aeabi_dmul+0x3a4>)
 8002288:	2700      	movs	r7, #0
 800228a:	4699      	mov	r9, r3
 800228c:	2300      	movs	r3, #0
 800228e:	469b      	mov	fp, r3
 8002290:	00f6      	lsls	r6, r6, #3
 8002292:	4481      	add	r9, r0
 8002294:	032b      	lsls	r3, r5, #12
 8002296:	0069      	lsls	r1, r5, #1
 8002298:	0b1b      	lsrs	r3, r3, #12
 800229a:	4652      	mov	r2, sl
 800229c:	4698      	mov	r8, r3
 800229e:	0d49      	lsrs	r1, r1, #21
 80022a0:	0fed      	lsrs	r5, r5, #31
 80022a2:	2900      	cmp	r1, #0
 80022a4:	d100      	bne.n	80022a8 <__aeabi_dmul+0x5c>
 80022a6:	e085      	b.n	80023b4 <__aeabi_dmul+0x168>
 80022a8:	4bd0      	ldr	r3, [pc, #832]	; (80025ec <__aeabi_dmul+0x3a0>)
 80022aa:	4299      	cmp	r1, r3
 80022ac:	d100      	bne.n	80022b0 <__aeabi_dmul+0x64>
 80022ae:	e073      	b.n	8002398 <__aeabi_dmul+0x14c>
 80022b0:	4643      	mov	r3, r8
 80022b2:	00da      	lsls	r2, r3, #3
 80022b4:	2380      	movs	r3, #128	; 0x80
 80022b6:	041b      	lsls	r3, r3, #16
 80022b8:	4313      	orrs	r3, r2
 80022ba:	4652      	mov	r2, sl
 80022bc:	48cc      	ldr	r0, [pc, #816]	; (80025f0 <__aeabi_dmul+0x3a4>)
 80022be:	0f52      	lsrs	r2, r2, #29
 80022c0:	4684      	mov	ip, r0
 80022c2:	4313      	orrs	r3, r2
 80022c4:	4652      	mov	r2, sl
 80022c6:	2000      	movs	r0, #0
 80022c8:	4461      	add	r1, ip
 80022ca:	00d2      	lsls	r2, r2, #3
 80022cc:	4489      	add	r9, r1
 80022ce:	0021      	movs	r1, r4
 80022d0:	4069      	eors	r1, r5
 80022d2:	9100      	str	r1, [sp, #0]
 80022d4:	468c      	mov	ip, r1
 80022d6:	2101      	movs	r1, #1
 80022d8:	4449      	add	r1, r9
 80022da:	468a      	mov	sl, r1
 80022dc:	2f0f      	cmp	r7, #15
 80022de:	d900      	bls.n	80022e2 <__aeabi_dmul+0x96>
 80022e0:	e090      	b.n	8002404 <__aeabi_dmul+0x1b8>
 80022e2:	49c4      	ldr	r1, [pc, #784]	; (80025f4 <__aeabi_dmul+0x3a8>)
 80022e4:	00bf      	lsls	r7, r7, #2
 80022e6:	59cf      	ldr	r7, [r1, r7]
 80022e8:	46bf      	mov	pc, r7
 80022ea:	465b      	mov	r3, fp
 80022ec:	433b      	orrs	r3, r7
 80022ee:	9301      	str	r3, [sp, #4]
 80022f0:	d000      	beq.n	80022f4 <__aeabi_dmul+0xa8>
 80022f2:	e16a      	b.n	80025ca <__aeabi_dmul+0x37e>
 80022f4:	2302      	movs	r3, #2
 80022f6:	2708      	movs	r7, #8
 80022f8:	2600      	movs	r6, #0
 80022fa:	4681      	mov	r9, r0
 80022fc:	469b      	mov	fp, r3
 80022fe:	e7c9      	b.n	8002294 <__aeabi_dmul+0x48>
 8002300:	0032      	movs	r2, r6
 8002302:	4658      	mov	r0, fp
 8002304:	9b01      	ldr	r3, [sp, #4]
 8002306:	4661      	mov	r1, ip
 8002308:	9100      	str	r1, [sp, #0]
 800230a:	2802      	cmp	r0, #2
 800230c:	d100      	bne.n	8002310 <__aeabi_dmul+0xc4>
 800230e:	e075      	b.n	80023fc <__aeabi_dmul+0x1b0>
 8002310:	2803      	cmp	r0, #3
 8002312:	d100      	bne.n	8002316 <__aeabi_dmul+0xca>
 8002314:	e1fe      	b.n	8002714 <__aeabi_dmul+0x4c8>
 8002316:	2801      	cmp	r0, #1
 8002318:	d000      	beq.n	800231c <__aeabi_dmul+0xd0>
 800231a:	e12c      	b.n	8002576 <__aeabi_dmul+0x32a>
 800231c:	2300      	movs	r3, #0
 800231e:	2700      	movs	r7, #0
 8002320:	2600      	movs	r6, #0
 8002322:	2500      	movs	r5, #0
 8002324:	033f      	lsls	r7, r7, #12
 8002326:	0d2a      	lsrs	r2, r5, #20
 8002328:	0b3f      	lsrs	r7, r7, #12
 800232a:	48b3      	ldr	r0, [pc, #716]	; (80025f8 <__aeabi_dmul+0x3ac>)
 800232c:	0512      	lsls	r2, r2, #20
 800232e:	433a      	orrs	r2, r7
 8002330:	4002      	ands	r2, r0
 8002332:	051b      	lsls	r3, r3, #20
 8002334:	4313      	orrs	r3, r2
 8002336:	9a00      	ldr	r2, [sp, #0]
 8002338:	005b      	lsls	r3, r3, #1
 800233a:	07d1      	lsls	r1, r2, #31
 800233c:	085b      	lsrs	r3, r3, #1
 800233e:	430b      	orrs	r3, r1
 8002340:	0030      	movs	r0, r6
 8002342:	0019      	movs	r1, r3
 8002344:	b007      	add	sp, #28
 8002346:	bc3c      	pop	{r2, r3, r4, r5}
 8002348:	4690      	mov	r8, r2
 800234a:	4699      	mov	r9, r3
 800234c:	46a2      	mov	sl, r4
 800234e:	46ab      	mov	fp, r5
 8002350:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002352:	465b      	mov	r3, fp
 8002354:	433b      	orrs	r3, r7
 8002356:	9301      	str	r3, [sp, #4]
 8002358:	d100      	bne.n	800235c <__aeabi_dmul+0x110>
 800235a:	e12f      	b.n	80025bc <__aeabi_dmul+0x370>
 800235c:	2f00      	cmp	r7, #0
 800235e:	d100      	bne.n	8002362 <__aeabi_dmul+0x116>
 8002360:	e1a5      	b.n	80026ae <__aeabi_dmul+0x462>
 8002362:	0038      	movs	r0, r7
 8002364:	f000 fec0 	bl	80030e8 <__clzsi2>
 8002368:	0003      	movs	r3, r0
 800236a:	3b0b      	subs	r3, #11
 800236c:	2b1c      	cmp	r3, #28
 800236e:	dd00      	ble.n	8002372 <__aeabi_dmul+0x126>
 8002370:	e196      	b.n	80026a0 <__aeabi_dmul+0x454>
 8002372:	221d      	movs	r2, #29
 8002374:	1ad3      	subs	r3, r2, r3
 8002376:	465a      	mov	r2, fp
 8002378:	0001      	movs	r1, r0
 800237a:	40da      	lsrs	r2, r3
 800237c:	465e      	mov	r6, fp
 800237e:	3908      	subs	r1, #8
 8002380:	408f      	lsls	r7, r1
 8002382:	0013      	movs	r3, r2
 8002384:	408e      	lsls	r6, r1
 8002386:	433b      	orrs	r3, r7
 8002388:	9301      	str	r3, [sp, #4]
 800238a:	4b9c      	ldr	r3, [pc, #624]	; (80025fc <__aeabi_dmul+0x3b0>)
 800238c:	2700      	movs	r7, #0
 800238e:	1a1b      	subs	r3, r3, r0
 8002390:	4699      	mov	r9, r3
 8002392:	2300      	movs	r3, #0
 8002394:	469b      	mov	fp, r3
 8002396:	e77d      	b.n	8002294 <__aeabi_dmul+0x48>
 8002398:	4641      	mov	r1, r8
 800239a:	4653      	mov	r3, sl
 800239c:	430b      	orrs	r3, r1
 800239e:	4993      	ldr	r1, [pc, #588]	; (80025ec <__aeabi_dmul+0x3a0>)
 80023a0:	468c      	mov	ip, r1
 80023a2:	44e1      	add	r9, ip
 80023a4:	2b00      	cmp	r3, #0
 80023a6:	d000      	beq.n	80023aa <__aeabi_dmul+0x15e>
 80023a8:	e11a      	b.n	80025e0 <__aeabi_dmul+0x394>
 80023aa:	2202      	movs	r2, #2
 80023ac:	2002      	movs	r0, #2
 80023ae:	4317      	orrs	r7, r2
 80023b0:	2200      	movs	r2, #0
 80023b2:	e78c      	b.n	80022ce <__aeabi_dmul+0x82>
 80023b4:	4313      	orrs	r3, r2
 80023b6:	d100      	bne.n	80023ba <__aeabi_dmul+0x16e>
 80023b8:	e10d      	b.n	80025d6 <__aeabi_dmul+0x38a>
 80023ba:	4643      	mov	r3, r8
 80023bc:	2b00      	cmp	r3, #0
 80023be:	d100      	bne.n	80023c2 <__aeabi_dmul+0x176>
 80023c0:	e181      	b.n	80026c6 <__aeabi_dmul+0x47a>
 80023c2:	4640      	mov	r0, r8
 80023c4:	f000 fe90 	bl	80030e8 <__clzsi2>
 80023c8:	0002      	movs	r2, r0
 80023ca:	3a0b      	subs	r2, #11
 80023cc:	2a1c      	cmp	r2, #28
 80023ce:	dd00      	ble.n	80023d2 <__aeabi_dmul+0x186>
 80023d0:	e172      	b.n	80026b8 <__aeabi_dmul+0x46c>
 80023d2:	0001      	movs	r1, r0
 80023d4:	4643      	mov	r3, r8
 80023d6:	3908      	subs	r1, #8
 80023d8:	408b      	lsls	r3, r1
 80023da:	4698      	mov	r8, r3
 80023dc:	231d      	movs	r3, #29
 80023de:	1a9a      	subs	r2, r3, r2
 80023e0:	4653      	mov	r3, sl
 80023e2:	40d3      	lsrs	r3, r2
 80023e4:	001a      	movs	r2, r3
 80023e6:	4643      	mov	r3, r8
 80023e8:	4313      	orrs	r3, r2
 80023ea:	4652      	mov	r2, sl
 80023ec:	408a      	lsls	r2, r1
 80023ee:	4649      	mov	r1, r9
 80023f0:	1a08      	subs	r0, r1, r0
 80023f2:	4982      	ldr	r1, [pc, #520]	; (80025fc <__aeabi_dmul+0x3b0>)
 80023f4:	4689      	mov	r9, r1
 80023f6:	4481      	add	r9, r0
 80023f8:	2000      	movs	r0, #0
 80023fa:	e768      	b.n	80022ce <__aeabi_dmul+0x82>
 80023fc:	4b7b      	ldr	r3, [pc, #492]	; (80025ec <__aeabi_dmul+0x3a0>)
 80023fe:	2700      	movs	r7, #0
 8002400:	2600      	movs	r6, #0
 8002402:	e78e      	b.n	8002322 <__aeabi_dmul+0xd6>
 8002404:	0c14      	lsrs	r4, r2, #16
 8002406:	0412      	lsls	r2, r2, #16
 8002408:	0c12      	lsrs	r2, r2, #16
 800240a:	0011      	movs	r1, r2
 800240c:	0c37      	lsrs	r7, r6, #16
 800240e:	0436      	lsls	r6, r6, #16
 8002410:	0c35      	lsrs	r5, r6, #16
 8002412:	4379      	muls	r1, r7
 8002414:	0028      	movs	r0, r5
 8002416:	468c      	mov	ip, r1
 8002418:	002e      	movs	r6, r5
 800241a:	4360      	muls	r0, r4
 800241c:	4460      	add	r0, ip
 800241e:	4683      	mov	fp, r0
 8002420:	4356      	muls	r6, r2
 8002422:	0021      	movs	r1, r4
 8002424:	0c30      	lsrs	r0, r6, #16
 8002426:	4680      	mov	r8, r0
 8002428:	4658      	mov	r0, fp
 800242a:	4379      	muls	r1, r7
 800242c:	4440      	add	r0, r8
 800242e:	9102      	str	r1, [sp, #8]
 8002430:	4584      	cmp	ip, r0
 8002432:	d906      	bls.n	8002442 <__aeabi_dmul+0x1f6>
 8002434:	4688      	mov	r8, r1
 8002436:	2180      	movs	r1, #128	; 0x80
 8002438:	0249      	lsls	r1, r1, #9
 800243a:	468c      	mov	ip, r1
 800243c:	44e0      	add	r8, ip
 800243e:	4641      	mov	r1, r8
 8002440:	9102      	str	r1, [sp, #8]
 8002442:	0436      	lsls	r6, r6, #16
 8002444:	0c01      	lsrs	r1, r0, #16
 8002446:	0c36      	lsrs	r6, r6, #16
 8002448:	0400      	lsls	r0, r0, #16
 800244a:	468b      	mov	fp, r1
 800244c:	1981      	adds	r1, r0, r6
 800244e:	0c1e      	lsrs	r6, r3, #16
 8002450:	041b      	lsls	r3, r3, #16
 8002452:	0c1b      	lsrs	r3, r3, #16
 8002454:	9103      	str	r1, [sp, #12]
 8002456:	0019      	movs	r1, r3
 8002458:	4379      	muls	r1, r7
 800245a:	468c      	mov	ip, r1
 800245c:	0028      	movs	r0, r5
 800245e:	4375      	muls	r5, r6
 8002460:	4465      	add	r5, ip
 8002462:	46a8      	mov	r8, r5
 8002464:	4358      	muls	r0, r3
 8002466:	0c05      	lsrs	r5, r0, #16
 8002468:	4445      	add	r5, r8
 800246a:	4377      	muls	r7, r6
 800246c:	42a9      	cmp	r1, r5
 800246e:	d903      	bls.n	8002478 <__aeabi_dmul+0x22c>
 8002470:	2180      	movs	r1, #128	; 0x80
 8002472:	0249      	lsls	r1, r1, #9
 8002474:	468c      	mov	ip, r1
 8002476:	4467      	add	r7, ip
 8002478:	0c29      	lsrs	r1, r5, #16
 800247a:	468c      	mov	ip, r1
 800247c:	0039      	movs	r1, r7
 800247e:	0400      	lsls	r0, r0, #16
 8002480:	0c00      	lsrs	r0, r0, #16
 8002482:	042d      	lsls	r5, r5, #16
 8002484:	182d      	adds	r5, r5, r0
 8002486:	4461      	add	r1, ip
 8002488:	44ab      	add	fp, r5
 800248a:	9105      	str	r1, [sp, #20]
 800248c:	4659      	mov	r1, fp
 800248e:	9104      	str	r1, [sp, #16]
 8002490:	9901      	ldr	r1, [sp, #4]
 8002492:	040f      	lsls	r7, r1, #16
 8002494:	0c3f      	lsrs	r7, r7, #16
 8002496:	0c08      	lsrs	r0, r1, #16
 8002498:	0039      	movs	r1, r7
 800249a:	4351      	muls	r1, r2
 800249c:	4342      	muls	r2, r0
 800249e:	4690      	mov	r8, r2
 80024a0:	0002      	movs	r2, r0
 80024a2:	468c      	mov	ip, r1
 80024a4:	0c09      	lsrs	r1, r1, #16
 80024a6:	468b      	mov	fp, r1
 80024a8:	4362      	muls	r2, r4
 80024aa:	437c      	muls	r4, r7
 80024ac:	4444      	add	r4, r8
 80024ae:	445c      	add	r4, fp
 80024b0:	45a0      	cmp	r8, r4
 80024b2:	d903      	bls.n	80024bc <__aeabi_dmul+0x270>
 80024b4:	2180      	movs	r1, #128	; 0x80
 80024b6:	0249      	lsls	r1, r1, #9
 80024b8:	4688      	mov	r8, r1
 80024ba:	4442      	add	r2, r8
 80024bc:	0c21      	lsrs	r1, r4, #16
 80024be:	4688      	mov	r8, r1
 80024c0:	4661      	mov	r1, ip
 80024c2:	0409      	lsls	r1, r1, #16
 80024c4:	0c09      	lsrs	r1, r1, #16
 80024c6:	468c      	mov	ip, r1
 80024c8:	0039      	movs	r1, r7
 80024ca:	4359      	muls	r1, r3
 80024cc:	4343      	muls	r3, r0
 80024ce:	4370      	muls	r0, r6
 80024d0:	437e      	muls	r6, r7
 80024d2:	0c0f      	lsrs	r7, r1, #16
 80024d4:	18f6      	adds	r6, r6, r3
 80024d6:	0424      	lsls	r4, r4, #16
 80024d8:	19be      	adds	r6, r7, r6
 80024da:	4464      	add	r4, ip
 80024dc:	4442      	add	r2, r8
 80024de:	468c      	mov	ip, r1
 80024e0:	42b3      	cmp	r3, r6
 80024e2:	d903      	bls.n	80024ec <__aeabi_dmul+0x2a0>
 80024e4:	2380      	movs	r3, #128	; 0x80
 80024e6:	025b      	lsls	r3, r3, #9
 80024e8:	4698      	mov	r8, r3
 80024ea:	4440      	add	r0, r8
 80024ec:	9b02      	ldr	r3, [sp, #8]
 80024ee:	4661      	mov	r1, ip
 80024f0:	4698      	mov	r8, r3
 80024f2:	9b04      	ldr	r3, [sp, #16]
 80024f4:	0437      	lsls	r7, r6, #16
 80024f6:	4443      	add	r3, r8
 80024f8:	469b      	mov	fp, r3
 80024fa:	45ab      	cmp	fp, r5
 80024fc:	41ad      	sbcs	r5, r5
 80024fe:	426b      	negs	r3, r5
 8002500:	040d      	lsls	r5, r1, #16
 8002502:	9905      	ldr	r1, [sp, #20]
 8002504:	0c2d      	lsrs	r5, r5, #16
 8002506:	468c      	mov	ip, r1
 8002508:	197f      	adds	r7, r7, r5
 800250a:	4467      	add	r7, ip
 800250c:	18fd      	adds	r5, r7, r3
 800250e:	46a8      	mov	r8, r5
 8002510:	465d      	mov	r5, fp
 8002512:	192d      	adds	r5, r5, r4
 8002514:	42a5      	cmp	r5, r4
 8002516:	41a4      	sbcs	r4, r4
 8002518:	4693      	mov	fp, r2
 800251a:	4264      	negs	r4, r4
 800251c:	46a4      	mov	ip, r4
 800251e:	44c3      	add	fp, r8
 8002520:	44dc      	add	ip, fp
 8002522:	428f      	cmp	r7, r1
 8002524:	41bf      	sbcs	r7, r7
 8002526:	4598      	cmp	r8, r3
 8002528:	419b      	sbcs	r3, r3
 800252a:	4593      	cmp	fp, r2
 800252c:	4192      	sbcs	r2, r2
 800252e:	45a4      	cmp	ip, r4
 8002530:	41a4      	sbcs	r4, r4
 8002532:	425b      	negs	r3, r3
 8002534:	427f      	negs	r7, r7
 8002536:	431f      	orrs	r7, r3
 8002538:	0c36      	lsrs	r6, r6, #16
 800253a:	4252      	negs	r2, r2
 800253c:	4264      	negs	r4, r4
 800253e:	19bf      	adds	r7, r7, r6
 8002540:	4322      	orrs	r2, r4
 8002542:	18bf      	adds	r7, r7, r2
 8002544:	4662      	mov	r2, ip
 8002546:	1838      	adds	r0, r7, r0
 8002548:	0243      	lsls	r3, r0, #9
 800254a:	0dd2      	lsrs	r2, r2, #23
 800254c:	9903      	ldr	r1, [sp, #12]
 800254e:	4313      	orrs	r3, r2
 8002550:	026a      	lsls	r2, r5, #9
 8002552:	430a      	orrs	r2, r1
 8002554:	1e50      	subs	r0, r2, #1
 8002556:	4182      	sbcs	r2, r0
 8002558:	4661      	mov	r1, ip
 800255a:	0ded      	lsrs	r5, r5, #23
 800255c:	432a      	orrs	r2, r5
 800255e:	024e      	lsls	r6, r1, #9
 8002560:	4332      	orrs	r2, r6
 8002562:	01d9      	lsls	r1, r3, #7
 8002564:	d400      	bmi.n	8002568 <__aeabi_dmul+0x31c>
 8002566:	e0b3      	b.n	80026d0 <__aeabi_dmul+0x484>
 8002568:	2601      	movs	r6, #1
 800256a:	0850      	lsrs	r0, r2, #1
 800256c:	4032      	ands	r2, r6
 800256e:	4302      	orrs	r2, r0
 8002570:	07de      	lsls	r6, r3, #31
 8002572:	4332      	orrs	r2, r6
 8002574:	085b      	lsrs	r3, r3, #1
 8002576:	4c22      	ldr	r4, [pc, #136]	; (8002600 <__aeabi_dmul+0x3b4>)
 8002578:	4454      	add	r4, sl
 800257a:	2c00      	cmp	r4, #0
 800257c:	dd62      	ble.n	8002644 <__aeabi_dmul+0x3f8>
 800257e:	0751      	lsls	r1, r2, #29
 8002580:	d009      	beq.n	8002596 <__aeabi_dmul+0x34a>
 8002582:	200f      	movs	r0, #15
 8002584:	4010      	ands	r0, r2
 8002586:	2804      	cmp	r0, #4
 8002588:	d005      	beq.n	8002596 <__aeabi_dmul+0x34a>
 800258a:	1d10      	adds	r0, r2, #4
 800258c:	4290      	cmp	r0, r2
 800258e:	4192      	sbcs	r2, r2
 8002590:	4252      	negs	r2, r2
 8002592:	189b      	adds	r3, r3, r2
 8002594:	0002      	movs	r2, r0
 8002596:	01d9      	lsls	r1, r3, #7
 8002598:	d504      	bpl.n	80025a4 <__aeabi_dmul+0x358>
 800259a:	2480      	movs	r4, #128	; 0x80
 800259c:	4819      	ldr	r0, [pc, #100]	; (8002604 <__aeabi_dmul+0x3b8>)
 800259e:	00e4      	lsls	r4, r4, #3
 80025a0:	4003      	ands	r3, r0
 80025a2:	4454      	add	r4, sl
 80025a4:	4818      	ldr	r0, [pc, #96]	; (8002608 <__aeabi_dmul+0x3bc>)
 80025a6:	4284      	cmp	r4, r0
 80025a8:	dd00      	ble.n	80025ac <__aeabi_dmul+0x360>
 80025aa:	e727      	b.n	80023fc <__aeabi_dmul+0x1b0>
 80025ac:	075e      	lsls	r6, r3, #29
 80025ae:	025b      	lsls	r3, r3, #9
 80025b0:	08d2      	lsrs	r2, r2, #3
 80025b2:	0b1f      	lsrs	r7, r3, #12
 80025b4:	0563      	lsls	r3, r4, #21
 80025b6:	4316      	orrs	r6, r2
 80025b8:	0d5b      	lsrs	r3, r3, #21
 80025ba:	e6b2      	b.n	8002322 <__aeabi_dmul+0xd6>
 80025bc:	2300      	movs	r3, #0
 80025be:	4699      	mov	r9, r3
 80025c0:	3301      	adds	r3, #1
 80025c2:	2704      	movs	r7, #4
 80025c4:	2600      	movs	r6, #0
 80025c6:	469b      	mov	fp, r3
 80025c8:	e664      	b.n	8002294 <__aeabi_dmul+0x48>
 80025ca:	2303      	movs	r3, #3
 80025cc:	9701      	str	r7, [sp, #4]
 80025ce:	4681      	mov	r9, r0
 80025d0:	270c      	movs	r7, #12
 80025d2:	469b      	mov	fp, r3
 80025d4:	e65e      	b.n	8002294 <__aeabi_dmul+0x48>
 80025d6:	2201      	movs	r2, #1
 80025d8:	2001      	movs	r0, #1
 80025da:	4317      	orrs	r7, r2
 80025dc:	2200      	movs	r2, #0
 80025de:	e676      	b.n	80022ce <__aeabi_dmul+0x82>
 80025e0:	2303      	movs	r3, #3
 80025e2:	2003      	movs	r0, #3
 80025e4:	431f      	orrs	r7, r3
 80025e6:	4643      	mov	r3, r8
 80025e8:	e671      	b.n	80022ce <__aeabi_dmul+0x82>
 80025ea:	46c0      	nop			; (mov r8, r8)
 80025ec:	000007ff 	.word	0x000007ff
 80025f0:	fffffc01 	.word	0xfffffc01
 80025f4:	0800d4e4 	.word	0x0800d4e4
 80025f8:	800fffff 	.word	0x800fffff
 80025fc:	fffffc0d 	.word	0xfffffc0d
 8002600:	000003ff 	.word	0x000003ff
 8002604:	feffffff 	.word	0xfeffffff
 8002608:	000007fe 	.word	0x000007fe
 800260c:	2300      	movs	r3, #0
 800260e:	2780      	movs	r7, #128	; 0x80
 8002610:	9300      	str	r3, [sp, #0]
 8002612:	033f      	lsls	r7, r7, #12
 8002614:	2600      	movs	r6, #0
 8002616:	4b43      	ldr	r3, [pc, #268]	; (8002724 <__aeabi_dmul+0x4d8>)
 8002618:	e683      	b.n	8002322 <__aeabi_dmul+0xd6>
 800261a:	9b01      	ldr	r3, [sp, #4]
 800261c:	0032      	movs	r2, r6
 800261e:	46a4      	mov	ip, r4
 8002620:	4658      	mov	r0, fp
 8002622:	e670      	b.n	8002306 <__aeabi_dmul+0xba>
 8002624:	46ac      	mov	ip, r5
 8002626:	e66e      	b.n	8002306 <__aeabi_dmul+0xba>
 8002628:	2780      	movs	r7, #128	; 0x80
 800262a:	9901      	ldr	r1, [sp, #4]
 800262c:	033f      	lsls	r7, r7, #12
 800262e:	4239      	tst	r1, r7
 8002630:	d02d      	beq.n	800268e <__aeabi_dmul+0x442>
 8002632:	423b      	tst	r3, r7
 8002634:	d12b      	bne.n	800268e <__aeabi_dmul+0x442>
 8002636:	431f      	orrs	r7, r3
 8002638:	033f      	lsls	r7, r7, #12
 800263a:	0b3f      	lsrs	r7, r7, #12
 800263c:	9500      	str	r5, [sp, #0]
 800263e:	0016      	movs	r6, r2
 8002640:	4b38      	ldr	r3, [pc, #224]	; (8002724 <__aeabi_dmul+0x4d8>)
 8002642:	e66e      	b.n	8002322 <__aeabi_dmul+0xd6>
 8002644:	2501      	movs	r5, #1
 8002646:	1b2d      	subs	r5, r5, r4
 8002648:	2d38      	cmp	r5, #56	; 0x38
 800264a:	dd00      	ble.n	800264e <__aeabi_dmul+0x402>
 800264c:	e666      	b.n	800231c <__aeabi_dmul+0xd0>
 800264e:	2d1f      	cmp	r5, #31
 8002650:	dc40      	bgt.n	80026d4 <__aeabi_dmul+0x488>
 8002652:	4835      	ldr	r0, [pc, #212]	; (8002728 <__aeabi_dmul+0x4dc>)
 8002654:	001c      	movs	r4, r3
 8002656:	4450      	add	r0, sl
 8002658:	0016      	movs	r6, r2
 800265a:	4082      	lsls	r2, r0
 800265c:	4084      	lsls	r4, r0
 800265e:	40ee      	lsrs	r6, r5
 8002660:	1e50      	subs	r0, r2, #1
 8002662:	4182      	sbcs	r2, r0
 8002664:	4334      	orrs	r4, r6
 8002666:	4314      	orrs	r4, r2
 8002668:	40eb      	lsrs	r3, r5
 800266a:	0762      	lsls	r2, r4, #29
 800266c:	d009      	beq.n	8002682 <__aeabi_dmul+0x436>
 800266e:	220f      	movs	r2, #15
 8002670:	4022      	ands	r2, r4
 8002672:	2a04      	cmp	r2, #4
 8002674:	d005      	beq.n	8002682 <__aeabi_dmul+0x436>
 8002676:	0022      	movs	r2, r4
 8002678:	1d14      	adds	r4, r2, #4
 800267a:	4294      	cmp	r4, r2
 800267c:	4180      	sbcs	r0, r0
 800267e:	4240      	negs	r0, r0
 8002680:	181b      	adds	r3, r3, r0
 8002682:	021a      	lsls	r2, r3, #8
 8002684:	d53e      	bpl.n	8002704 <__aeabi_dmul+0x4b8>
 8002686:	2301      	movs	r3, #1
 8002688:	2700      	movs	r7, #0
 800268a:	2600      	movs	r6, #0
 800268c:	e649      	b.n	8002322 <__aeabi_dmul+0xd6>
 800268e:	2780      	movs	r7, #128	; 0x80
 8002690:	9b01      	ldr	r3, [sp, #4]
 8002692:	033f      	lsls	r7, r7, #12
 8002694:	431f      	orrs	r7, r3
 8002696:	033f      	lsls	r7, r7, #12
 8002698:	0b3f      	lsrs	r7, r7, #12
 800269a:	9400      	str	r4, [sp, #0]
 800269c:	4b21      	ldr	r3, [pc, #132]	; (8002724 <__aeabi_dmul+0x4d8>)
 800269e:	e640      	b.n	8002322 <__aeabi_dmul+0xd6>
 80026a0:	0003      	movs	r3, r0
 80026a2:	465a      	mov	r2, fp
 80026a4:	3b28      	subs	r3, #40	; 0x28
 80026a6:	409a      	lsls	r2, r3
 80026a8:	2600      	movs	r6, #0
 80026aa:	9201      	str	r2, [sp, #4]
 80026ac:	e66d      	b.n	800238a <__aeabi_dmul+0x13e>
 80026ae:	4658      	mov	r0, fp
 80026b0:	f000 fd1a 	bl	80030e8 <__clzsi2>
 80026b4:	3020      	adds	r0, #32
 80026b6:	e657      	b.n	8002368 <__aeabi_dmul+0x11c>
 80026b8:	0003      	movs	r3, r0
 80026ba:	4652      	mov	r2, sl
 80026bc:	3b28      	subs	r3, #40	; 0x28
 80026be:	409a      	lsls	r2, r3
 80026c0:	0013      	movs	r3, r2
 80026c2:	2200      	movs	r2, #0
 80026c4:	e693      	b.n	80023ee <__aeabi_dmul+0x1a2>
 80026c6:	4650      	mov	r0, sl
 80026c8:	f000 fd0e 	bl	80030e8 <__clzsi2>
 80026cc:	3020      	adds	r0, #32
 80026ce:	e67b      	b.n	80023c8 <__aeabi_dmul+0x17c>
 80026d0:	46ca      	mov	sl, r9
 80026d2:	e750      	b.n	8002576 <__aeabi_dmul+0x32a>
 80026d4:	201f      	movs	r0, #31
 80026d6:	001e      	movs	r6, r3
 80026d8:	4240      	negs	r0, r0
 80026da:	1b04      	subs	r4, r0, r4
 80026dc:	40e6      	lsrs	r6, r4
 80026de:	2d20      	cmp	r5, #32
 80026e0:	d003      	beq.n	80026ea <__aeabi_dmul+0x49e>
 80026e2:	4c12      	ldr	r4, [pc, #72]	; (800272c <__aeabi_dmul+0x4e0>)
 80026e4:	4454      	add	r4, sl
 80026e6:	40a3      	lsls	r3, r4
 80026e8:	431a      	orrs	r2, r3
 80026ea:	1e50      	subs	r0, r2, #1
 80026ec:	4182      	sbcs	r2, r0
 80026ee:	4332      	orrs	r2, r6
 80026f0:	2607      	movs	r6, #7
 80026f2:	2700      	movs	r7, #0
 80026f4:	4016      	ands	r6, r2
 80026f6:	d009      	beq.n	800270c <__aeabi_dmul+0x4c0>
 80026f8:	200f      	movs	r0, #15
 80026fa:	2300      	movs	r3, #0
 80026fc:	4010      	ands	r0, r2
 80026fe:	0014      	movs	r4, r2
 8002700:	2804      	cmp	r0, #4
 8002702:	d1b9      	bne.n	8002678 <__aeabi_dmul+0x42c>
 8002704:	0022      	movs	r2, r4
 8002706:	075e      	lsls	r6, r3, #29
 8002708:	025b      	lsls	r3, r3, #9
 800270a:	0b1f      	lsrs	r7, r3, #12
 800270c:	08d2      	lsrs	r2, r2, #3
 800270e:	4316      	orrs	r6, r2
 8002710:	2300      	movs	r3, #0
 8002712:	e606      	b.n	8002322 <__aeabi_dmul+0xd6>
 8002714:	2780      	movs	r7, #128	; 0x80
 8002716:	033f      	lsls	r7, r7, #12
 8002718:	431f      	orrs	r7, r3
 800271a:	033f      	lsls	r7, r7, #12
 800271c:	0b3f      	lsrs	r7, r7, #12
 800271e:	0016      	movs	r6, r2
 8002720:	4b00      	ldr	r3, [pc, #0]	; (8002724 <__aeabi_dmul+0x4d8>)
 8002722:	e5fe      	b.n	8002322 <__aeabi_dmul+0xd6>
 8002724:	000007ff 	.word	0x000007ff
 8002728:	0000041e 	.word	0x0000041e
 800272c:	0000043e 	.word	0x0000043e

08002730 <__aeabi_dsub>:
 8002730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002732:	4657      	mov	r7, sl
 8002734:	464e      	mov	r6, r9
 8002736:	4645      	mov	r5, r8
 8002738:	46de      	mov	lr, fp
 800273a:	000c      	movs	r4, r1
 800273c:	0309      	lsls	r1, r1, #12
 800273e:	b5e0      	push	{r5, r6, r7, lr}
 8002740:	0a49      	lsrs	r1, r1, #9
 8002742:	0f46      	lsrs	r6, r0, #29
 8002744:	005f      	lsls	r7, r3, #1
 8002746:	4331      	orrs	r1, r6
 8002748:	031e      	lsls	r6, r3, #12
 800274a:	0fdb      	lsrs	r3, r3, #31
 800274c:	0a76      	lsrs	r6, r6, #9
 800274e:	469b      	mov	fp, r3
 8002750:	0f53      	lsrs	r3, r2, #29
 8002752:	4333      	orrs	r3, r6
 8002754:	4ec8      	ldr	r6, [pc, #800]	; (8002a78 <__aeabi_dsub+0x348>)
 8002756:	0065      	lsls	r5, r4, #1
 8002758:	00c0      	lsls	r0, r0, #3
 800275a:	0fe4      	lsrs	r4, r4, #31
 800275c:	00d2      	lsls	r2, r2, #3
 800275e:	0d6d      	lsrs	r5, r5, #21
 8002760:	46a2      	mov	sl, r4
 8002762:	4681      	mov	r9, r0
 8002764:	0d7f      	lsrs	r7, r7, #21
 8002766:	469c      	mov	ip, r3
 8002768:	4690      	mov	r8, r2
 800276a:	42b7      	cmp	r7, r6
 800276c:	d100      	bne.n	8002770 <__aeabi_dsub+0x40>
 800276e:	e0b9      	b.n	80028e4 <__aeabi_dsub+0x1b4>
 8002770:	465b      	mov	r3, fp
 8002772:	2601      	movs	r6, #1
 8002774:	4073      	eors	r3, r6
 8002776:	469b      	mov	fp, r3
 8002778:	1bee      	subs	r6, r5, r7
 800277a:	45a3      	cmp	fp, r4
 800277c:	d100      	bne.n	8002780 <__aeabi_dsub+0x50>
 800277e:	e083      	b.n	8002888 <__aeabi_dsub+0x158>
 8002780:	2e00      	cmp	r6, #0
 8002782:	dd63      	ble.n	800284c <__aeabi_dsub+0x11c>
 8002784:	2f00      	cmp	r7, #0
 8002786:	d000      	beq.n	800278a <__aeabi_dsub+0x5a>
 8002788:	e0b1      	b.n	80028ee <__aeabi_dsub+0x1be>
 800278a:	4663      	mov	r3, ip
 800278c:	4313      	orrs	r3, r2
 800278e:	d100      	bne.n	8002792 <__aeabi_dsub+0x62>
 8002790:	e123      	b.n	80029da <__aeabi_dsub+0x2aa>
 8002792:	1e73      	subs	r3, r6, #1
 8002794:	2b00      	cmp	r3, #0
 8002796:	d000      	beq.n	800279a <__aeabi_dsub+0x6a>
 8002798:	e1ba      	b.n	8002b10 <__aeabi_dsub+0x3e0>
 800279a:	1a86      	subs	r6, r0, r2
 800279c:	4663      	mov	r3, ip
 800279e:	42b0      	cmp	r0, r6
 80027a0:	4180      	sbcs	r0, r0
 80027a2:	2501      	movs	r5, #1
 80027a4:	1ac9      	subs	r1, r1, r3
 80027a6:	4240      	negs	r0, r0
 80027a8:	1a09      	subs	r1, r1, r0
 80027aa:	020b      	lsls	r3, r1, #8
 80027ac:	d400      	bmi.n	80027b0 <__aeabi_dsub+0x80>
 80027ae:	e147      	b.n	8002a40 <__aeabi_dsub+0x310>
 80027b0:	0249      	lsls	r1, r1, #9
 80027b2:	0a4b      	lsrs	r3, r1, #9
 80027b4:	4698      	mov	r8, r3
 80027b6:	4643      	mov	r3, r8
 80027b8:	2b00      	cmp	r3, #0
 80027ba:	d100      	bne.n	80027be <__aeabi_dsub+0x8e>
 80027bc:	e189      	b.n	8002ad2 <__aeabi_dsub+0x3a2>
 80027be:	4640      	mov	r0, r8
 80027c0:	f000 fc92 	bl	80030e8 <__clzsi2>
 80027c4:	0003      	movs	r3, r0
 80027c6:	3b08      	subs	r3, #8
 80027c8:	2b1f      	cmp	r3, #31
 80027ca:	dd00      	ble.n	80027ce <__aeabi_dsub+0x9e>
 80027cc:	e17c      	b.n	8002ac8 <__aeabi_dsub+0x398>
 80027ce:	2220      	movs	r2, #32
 80027d0:	0030      	movs	r0, r6
 80027d2:	1ad2      	subs	r2, r2, r3
 80027d4:	4641      	mov	r1, r8
 80027d6:	40d0      	lsrs	r0, r2
 80027d8:	4099      	lsls	r1, r3
 80027da:	0002      	movs	r2, r0
 80027dc:	409e      	lsls	r6, r3
 80027de:	430a      	orrs	r2, r1
 80027e0:	429d      	cmp	r5, r3
 80027e2:	dd00      	ble.n	80027e6 <__aeabi_dsub+0xb6>
 80027e4:	e16a      	b.n	8002abc <__aeabi_dsub+0x38c>
 80027e6:	1b5d      	subs	r5, r3, r5
 80027e8:	1c6b      	adds	r3, r5, #1
 80027ea:	2b1f      	cmp	r3, #31
 80027ec:	dd00      	ble.n	80027f0 <__aeabi_dsub+0xc0>
 80027ee:	e194      	b.n	8002b1a <__aeabi_dsub+0x3ea>
 80027f0:	2120      	movs	r1, #32
 80027f2:	0010      	movs	r0, r2
 80027f4:	0035      	movs	r5, r6
 80027f6:	1ac9      	subs	r1, r1, r3
 80027f8:	408e      	lsls	r6, r1
 80027fa:	40da      	lsrs	r2, r3
 80027fc:	4088      	lsls	r0, r1
 80027fe:	40dd      	lsrs	r5, r3
 8002800:	1e71      	subs	r1, r6, #1
 8002802:	418e      	sbcs	r6, r1
 8002804:	0011      	movs	r1, r2
 8002806:	2207      	movs	r2, #7
 8002808:	4328      	orrs	r0, r5
 800280a:	2500      	movs	r5, #0
 800280c:	4306      	orrs	r6, r0
 800280e:	4032      	ands	r2, r6
 8002810:	2a00      	cmp	r2, #0
 8002812:	d009      	beq.n	8002828 <__aeabi_dsub+0xf8>
 8002814:	230f      	movs	r3, #15
 8002816:	4033      	ands	r3, r6
 8002818:	2b04      	cmp	r3, #4
 800281a:	d005      	beq.n	8002828 <__aeabi_dsub+0xf8>
 800281c:	1d33      	adds	r3, r6, #4
 800281e:	42b3      	cmp	r3, r6
 8002820:	41b6      	sbcs	r6, r6
 8002822:	4276      	negs	r6, r6
 8002824:	1989      	adds	r1, r1, r6
 8002826:	001e      	movs	r6, r3
 8002828:	020b      	lsls	r3, r1, #8
 800282a:	d400      	bmi.n	800282e <__aeabi_dsub+0xfe>
 800282c:	e23d      	b.n	8002caa <__aeabi_dsub+0x57a>
 800282e:	1c6a      	adds	r2, r5, #1
 8002830:	4b91      	ldr	r3, [pc, #580]	; (8002a78 <__aeabi_dsub+0x348>)
 8002832:	0555      	lsls	r5, r2, #21
 8002834:	0d6d      	lsrs	r5, r5, #21
 8002836:	429a      	cmp	r2, r3
 8002838:	d100      	bne.n	800283c <__aeabi_dsub+0x10c>
 800283a:	e119      	b.n	8002a70 <__aeabi_dsub+0x340>
 800283c:	4a8f      	ldr	r2, [pc, #572]	; (8002a7c <__aeabi_dsub+0x34c>)
 800283e:	08f6      	lsrs	r6, r6, #3
 8002840:	400a      	ands	r2, r1
 8002842:	0757      	lsls	r7, r2, #29
 8002844:	0252      	lsls	r2, r2, #9
 8002846:	4337      	orrs	r7, r6
 8002848:	0b12      	lsrs	r2, r2, #12
 800284a:	e09b      	b.n	8002984 <__aeabi_dsub+0x254>
 800284c:	2e00      	cmp	r6, #0
 800284e:	d000      	beq.n	8002852 <__aeabi_dsub+0x122>
 8002850:	e0c5      	b.n	80029de <__aeabi_dsub+0x2ae>
 8002852:	1c6e      	adds	r6, r5, #1
 8002854:	0576      	lsls	r6, r6, #21
 8002856:	0d76      	lsrs	r6, r6, #21
 8002858:	2e01      	cmp	r6, #1
 800285a:	dc00      	bgt.n	800285e <__aeabi_dsub+0x12e>
 800285c:	e148      	b.n	8002af0 <__aeabi_dsub+0x3c0>
 800285e:	4667      	mov	r7, ip
 8002860:	1a86      	subs	r6, r0, r2
 8002862:	1bcb      	subs	r3, r1, r7
 8002864:	42b0      	cmp	r0, r6
 8002866:	41bf      	sbcs	r7, r7
 8002868:	427f      	negs	r7, r7
 800286a:	46b8      	mov	r8, r7
 800286c:	001f      	movs	r7, r3
 800286e:	4643      	mov	r3, r8
 8002870:	1aff      	subs	r7, r7, r3
 8002872:	003b      	movs	r3, r7
 8002874:	46b8      	mov	r8, r7
 8002876:	021b      	lsls	r3, r3, #8
 8002878:	d500      	bpl.n	800287c <__aeabi_dsub+0x14c>
 800287a:	e15f      	b.n	8002b3c <__aeabi_dsub+0x40c>
 800287c:	4337      	orrs	r7, r6
 800287e:	d19a      	bne.n	80027b6 <__aeabi_dsub+0x86>
 8002880:	2200      	movs	r2, #0
 8002882:	2400      	movs	r4, #0
 8002884:	2500      	movs	r5, #0
 8002886:	e079      	b.n	800297c <__aeabi_dsub+0x24c>
 8002888:	2e00      	cmp	r6, #0
 800288a:	dc00      	bgt.n	800288e <__aeabi_dsub+0x15e>
 800288c:	e0fa      	b.n	8002a84 <__aeabi_dsub+0x354>
 800288e:	2f00      	cmp	r7, #0
 8002890:	d100      	bne.n	8002894 <__aeabi_dsub+0x164>
 8002892:	e08d      	b.n	80029b0 <__aeabi_dsub+0x280>
 8002894:	4b78      	ldr	r3, [pc, #480]	; (8002a78 <__aeabi_dsub+0x348>)
 8002896:	429d      	cmp	r5, r3
 8002898:	d067      	beq.n	800296a <__aeabi_dsub+0x23a>
 800289a:	2380      	movs	r3, #128	; 0x80
 800289c:	4667      	mov	r7, ip
 800289e:	041b      	lsls	r3, r3, #16
 80028a0:	431f      	orrs	r7, r3
 80028a2:	46bc      	mov	ip, r7
 80028a4:	2e38      	cmp	r6, #56	; 0x38
 80028a6:	dc00      	bgt.n	80028aa <__aeabi_dsub+0x17a>
 80028a8:	e152      	b.n	8002b50 <__aeabi_dsub+0x420>
 80028aa:	4663      	mov	r3, ip
 80028ac:	4313      	orrs	r3, r2
 80028ae:	1e5a      	subs	r2, r3, #1
 80028b0:	4193      	sbcs	r3, r2
 80028b2:	181e      	adds	r6, r3, r0
 80028b4:	4286      	cmp	r6, r0
 80028b6:	4180      	sbcs	r0, r0
 80028b8:	4240      	negs	r0, r0
 80028ba:	1809      	adds	r1, r1, r0
 80028bc:	020b      	lsls	r3, r1, #8
 80028be:	d400      	bmi.n	80028c2 <__aeabi_dsub+0x192>
 80028c0:	e0be      	b.n	8002a40 <__aeabi_dsub+0x310>
 80028c2:	4b6d      	ldr	r3, [pc, #436]	; (8002a78 <__aeabi_dsub+0x348>)
 80028c4:	3501      	adds	r5, #1
 80028c6:	429d      	cmp	r5, r3
 80028c8:	d100      	bne.n	80028cc <__aeabi_dsub+0x19c>
 80028ca:	e0d2      	b.n	8002a72 <__aeabi_dsub+0x342>
 80028cc:	4a6b      	ldr	r2, [pc, #428]	; (8002a7c <__aeabi_dsub+0x34c>)
 80028ce:	0873      	lsrs	r3, r6, #1
 80028d0:	400a      	ands	r2, r1
 80028d2:	2101      	movs	r1, #1
 80028d4:	400e      	ands	r6, r1
 80028d6:	431e      	orrs	r6, r3
 80028d8:	0851      	lsrs	r1, r2, #1
 80028da:	07d3      	lsls	r3, r2, #31
 80028dc:	2207      	movs	r2, #7
 80028de:	431e      	orrs	r6, r3
 80028e0:	4032      	ands	r2, r6
 80028e2:	e795      	b.n	8002810 <__aeabi_dsub+0xe0>
 80028e4:	001e      	movs	r6, r3
 80028e6:	4316      	orrs	r6, r2
 80028e8:	d000      	beq.n	80028ec <__aeabi_dsub+0x1bc>
 80028ea:	e745      	b.n	8002778 <__aeabi_dsub+0x48>
 80028ec:	e740      	b.n	8002770 <__aeabi_dsub+0x40>
 80028ee:	4b62      	ldr	r3, [pc, #392]	; (8002a78 <__aeabi_dsub+0x348>)
 80028f0:	429d      	cmp	r5, r3
 80028f2:	d03a      	beq.n	800296a <__aeabi_dsub+0x23a>
 80028f4:	2380      	movs	r3, #128	; 0x80
 80028f6:	4667      	mov	r7, ip
 80028f8:	041b      	lsls	r3, r3, #16
 80028fa:	431f      	orrs	r7, r3
 80028fc:	46bc      	mov	ip, r7
 80028fe:	2e38      	cmp	r6, #56	; 0x38
 8002900:	dd00      	ble.n	8002904 <__aeabi_dsub+0x1d4>
 8002902:	e0eb      	b.n	8002adc <__aeabi_dsub+0x3ac>
 8002904:	2e1f      	cmp	r6, #31
 8002906:	dc00      	bgt.n	800290a <__aeabi_dsub+0x1da>
 8002908:	e13a      	b.n	8002b80 <__aeabi_dsub+0x450>
 800290a:	0033      	movs	r3, r6
 800290c:	4667      	mov	r7, ip
 800290e:	3b20      	subs	r3, #32
 8002910:	40df      	lsrs	r7, r3
 8002912:	003b      	movs	r3, r7
 8002914:	2e20      	cmp	r6, #32
 8002916:	d005      	beq.n	8002924 <__aeabi_dsub+0x1f4>
 8002918:	2740      	movs	r7, #64	; 0x40
 800291a:	1bbf      	subs	r7, r7, r6
 800291c:	4666      	mov	r6, ip
 800291e:	40be      	lsls	r6, r7
 8002920:	4332      	orrs	r2, r6
 8002922:	4690      	mov	r8, r2
 8002924:	4646      	mov	r6, r8
 8002926:	1e72      	subs	r2, r6, #1
 8002928:	4196      	sbcs	r6, r2
 800292a:	4333      	orrs	r3, r6
 800292c:	e0da      	b.n	8002ae4 <__aeabi_dsub+0x3b4>
 800292e:	2b00      	cmp	r3, #0
 8002930:	d100      	bne.n	8002934 <__aeabi_dsub+0x204>
 8002932:	e214      	b.n	8002d5e <__aeabi_dsub+0x62e>
 8002934:	4663      	mov	r3, ip
 8002936:	4313      	orrs	r3, r2
 8002938:	d100      	bne.n	800293c <__aeabi_dsub+0x20c>
 800293a:	e168      	b.n	8002c0e <__aeabi_dsub+0x4de>
 800293c:	2380      	movs	r3, #128	; 0x80
 800293e:	074e      	lsls	r6, r1, #29
 8002940:	08c0      	lsrs	r0, r0, #3
 8002942:	08c9      	lsrs	r1, r1, #3
 8002944:	031b      	lsls	r3, r3, #12
 8002946:	4306      	orrs	r6, r0
 8002948:	4219      	tst	r1, r3
 800294a:	d008      	beq.n	800295e <__aeabi_dsub+0x22e>
 800294c:	4660      	mov	r0, ip
 800294e:	08c0      	lsrs	r0, r0, #3
 8002950:	4218      	tst	r0, r3
 8002952:	d104      	bne.n	800295e <__aeabi_dsub+0x22e>
 8002954:	4663      	mov	r3, ip
 8002956:	0001      	movs	r1, r0
 8002958:	08d2      	lsrs	r2, r2, #3
 800295a:	075e      	lsls	r6, r3, #29
 800295c:	4316      	orrs	r6, r2
 800295e:	00f3      	lsls	r3, r6, #3
 8002960:	4699      	mov	r9, r3
 8002962:	00c9      	lsls	r1, r1, #3
 8002964:	0f72      	lsrs	r2, r6, #29
 8002966:	4d44      	ldr	r5, [pc, #272]	; (8002a78 <__aeabi_dsub+0x348>)
 8002968:	4311      	orrs	r1, r2
 800296a:	464b      	mov	r3, r9
 800296c:	08de      	lsrs	r6, r3, #3
 800296e:	4b42      	ldr	r3, [pc, #264]	; (8002a78 <__aeabi_dsub+0x348>)
 8002970:	074f      	lsls	r7, r1, #29
 8002972:	4337      	orrs	r7, r6
 8002974:	08ca      	lsrs	r2, r1, #3
 8002976:	429d      	cmp	r5, r3
 8002978:	d100      	bne.n	800297c <__aeabi_dsub+0x24c>
 800297a:	e06e      	b.n	8002a5a <__aeabi_dsub+0x32a>
 800297c:	0312      	lsls	r2, r2, #12
 800297e:	056d      	lsls	r5, r5, #21
 8002980:	0b12      	lsrs	r2, r2, #12
 8002982:	0d6d      	lsrs	r5, r5, #21
 8002984:	2100      	movs	r1, #0
 8002986:	0312      	lsls	r2, r2, #12
 8002988:	0b13      	lsrs	r3, r2, #12
 800298a:	0d0a      	lsrs	r2, r1, #20
 800298c:	0512      	lsls	r2, r2, #20
 800298e:	431a      	orrs	r2, r3
 8002990:	4b3b      	ldr	r3, [pc, #236]	; (8002a80 <__aeabi_dsub+0x350>)
 8002992:	052d      	lsls	r5, r5, #20
 8002994:	4013      	ands	r3, r2
 8002996:	432b      	orrs	r3, r5
 8002998:	005b      	lsls	r3, r3, #1
 800299a:	07e4      	lsls	r4, r4, #31
 800299c:	085b      	lsrs	r3, r3, #1
 800299e:	4323      	orrs	r3, r4
 80029a0:	0038      	movs	r0, r7
 80029a2:	0019      	movs	r1, r3
 80029a4:	bc3c      	pop	{r2, r3, r4, r5}
 80029a6:	4690      	mov	r8, r2
 80029a8:	4699      	mov	r9, r3
 80029aa:	46a2      	mov	sl, r4
 80029ac:	46ab      	mov	fp, r5
 80029ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80029b0:	4663      	mov	r3, ip
 80029b2:	4313      	orrs	r3, r2
 80029b4:	d011      	beq.n	80029da <__aeabi_dsub+0x2aa>
 80029b6:	1e73      	subs	r3, r6, #1
 80029b8:	2b00      	cmp	r3, #0
 80029ba:	d000      	beq.n	80029be <__aeabi_dsub+0x28e>
 80029bc:	e107      	b.n	8002bce <__aeabi_dsub+0x49e>
 80029be:	1886      	adds	r6, r0, r2
 80029c0:	4286      	cmp	r6, r0
 80029c2:	4180      	sbcs	r0, r0
 80029c4:	4461      	add	r1, ip
 80029c6:	4240      	negs	r0, r0
 80029c8:	1809      	adds	r1, r1, r0
 80029ca:	2501      	movs	r5, #1
 80029cc:	020b      	lsls	r3, r1, #8
 80029ce:	d537      	bpl.n	8002a40 <__aeabi_dsub+0x310>
 80029d0:	2502      	movs	r5, #2
 80029d2:	e77b      	b.n	80028cc <__aeabi_dsub+0x19c>
 80029d4:	003e      	movs	r6, r7
 80029d6:	4661      	mov	r1, ip
 80029d8:	4691      	mov	r9, r2
 80029da:	0035      	movs	r5, r6
 80029dc:	e7c5      	b.n	800296a <__aeabi_dsub+0x23a>
 80029de:	465c      	mov	r4, fp
 80029e0:	2d00      	cmp	r5, #0
 80029e2:	d000      	beq.n	80029e6 <__aeabi_dsub+0x2b6>
 80029e4:	e0e1      	b.n	8002baa <__aeabi_dsub+0x47a>
 80029e6:	000b      	movs	r3, r1
 80029e8:	4303      	orrs	r3, r0
 80029ea:	d0f3      	beq.n	80029d4 <__aeabi_dsub+0x2a4>
 80029ec:	1c73      	adds	r3, r6, #1
 80029ee:	d100      	bne.n	80029f2 <__aeabi_dsub+0x2c2>
 80029f0:	e1ac      	b.n	8002d4c <__aeabi_dsub+0x61c>
 80029f2:	4b21      	ldr	r3, [pc, #132]	; (8002a78 <__aeabi_dsub+0x348>)
 80029f4:	429f      	cmp	r7, r3
 80029f6:	d100      	bne.n	80029fa <__aeabi_dsub+0x2ca>
 80029f8:	e13a      	b.n	8002c70 <__aeabi_dsub+0x540>
 80029fa:	43f3      	mvns	r3, r6
 80029fc:	2b38      	cmp	r3, #56	; 0x38
 80029fe:	dd00      	ble.n	8002a02 <__aeabi_dsub+0x2d2>
 8002a00:	e16f      	b.n	8002ce2 <__aeabi_dsub+0x5b2>
 8002a02:	2b1f      	cmp	r3, #31
 8002a04:	dd00      	ble.n	8002a08 <__aeabi_dsub+0x2d8>
 8002a06:	e18c      	b.n	8002d22 <__aeabi_dsub+0x5f2>
 8002a08:	2520      	movs	r5, #32
 8002a0a:	000e      	movs	r6, r1
 8002a0c:	1aed      	subs	r5, r5, r3
 8002a0e:	40ae      	lsls	r6, r5
 8002a10:	46b0      	mov	r8, r6
 8002a12:	0006      	movs	r6, r0
 8002a14:	46aa      	mov	sl, r5
 8002a16:	40de      	lsrs	r6, r3
 8002a18:	4645      	mov	r5, r8
 8002a1a:	4335      	orrs	r5, r6
 8002a1c:	002e      	movs	r6, r5
 8002a1e:	4655      	mov	r5, sl
 8002a20:	40d9      	lsrs	r1, r3
 8002a22:	40a8      	lsls	r0, r5
 8002a24:	4663      	mov	r3, ip
 8002a26:	1e45      	subs	r5, r0, #1
 8002a28:	41a8      	sbcs	r0, r5
 8002a2a:	1a5b      	subs	r3, r3, r1
 8002a2c:	469c      	mov	ip, r3
 8002a2e:	4330      	orrs	r0, r6
 8002a30:	1a16      	subs	r6, r2, r0
 8002a32:	42b2      	cmp	r2, r6
 8002a34:	4192      	sbcs	r2, r2
 8002a36:	4663      	mov	r3, ip
 8002a38:	4252      	negs	r2, r2
 8002a3a:	1a99      	subs	r1, r3, r2
 8002a3c:	003d      	movs	r5, r7
 8002a3e:	e6b4      	b.n	80027aa <__aeabi_dsub+0x7a>
 8002a40:	2207      	movs	r2, #7
 8002a42:	4032      	ands	r2, r6
 8002a44:	2a00      	cmp	r2, #0
 8002a46:	d000      	beq.n	8002a4a <__aeabi_dsub+0x31a>
 8002a48:	e6e4      	b.n	8002814 <__aeabi_dsub+0xe4>
 8002a4a:	4b0b      	ldr	r3, [pc, #44]	; (8002a78 <__aeabi_dsub+0x348>)
 8002a4c:	08f6      	lsrs	r6, r6, #3
 8002a4e:	074f      	lsls	r7, r1, #29
 8002a50:	4337      	orrs	r7, r6
 8002a52:	08ca      	lsrs	r2, r1, #3
 8002a54:	429d      	cmp	r5, r3
 8002a56:	d000      	beq.n	8002a5a <__aeabi_dsub+0x32a>
 8002a58:	e790      	b.n	800297c <__aeabi_dsub+0x24c>
 8002a5a:	003b      	movs	r3, r7
 8002a5c:	4313      	orrs	r3, r2
 8002a5e:	d100      	bne.n	8002a62 <__aeabi_dsub+0x332>
 8002a60:	e1a6      	b.n	8002db0 <__aeabi_dsub+0x680>
 8002a62:	2380      	movs	r3, #128	; 0x80
 8002a64:	031b      	lsls	r3, r3, #12
 8002a66:	431a      	orrs	r2, r3
 8002a68:	0312      	lsls	r2, r2, #12
 8002a6a:	0b12      	lsrs	r2, r2, #12
 8002a6c:	4d02      	ldr	r5, [pc, #8]	; (8002a78 <__aeabi_dsub+0x348>)
 8002a6e:	e789      	b.n	8002984 <__aeabi_dsub+0x254>
 8002a70:	0015      	movs	r5, r2
 8002a72:	2200      	movs	r2, #0
 8002a74:	2700      	movs	r7, #0
 8002a76:	e785      	b.n	8002984 <__aeabi_dsub+0x254>
 8002a78:	000007ff 	.word	0x000007ff
 8002a7c:	ff7fffff 	.word	0xff7fffff
 8002a80:	800fffff 	.word	0x800fffff
 8002a84:	2e00      	cmp	r6, #0
 8002a86:	d000      	beq.n	8002a8a <__aeabi_dsub+0x35a>
 8002a88:	e0c7      	b.n	8002c1a <__aeabi_dsub+0x4ea>
 8002a8a:	1c6b      	adds	r3, r5, #1
 8002a8c:	055e      	lsls	r6, r3, #21
 8002a8e:	0d76      	lsrs	r6, r6, #21
 8002a90:	2e01      	cmp	r6, #1
 8002a92:	dc00      	bgt.n	8002a96 <__aeabi_dsub+0x366>
 8002a94:	e0f0      	b.n	8002c78 <__aeabi_dsub+0x548>
 8002a96:	4dc8      	ldr	r5, [pc, #800]	; (8002db8 <__aeabi_dsub+0x688>)
 8002a98:	42ab      	cmp	r3, r5
 8002a9a:	d100      	bne.n	8002a9e <__aeabi_dsub+0x36e>
 8002a9c:	e0b9      	b.n	8002c12 <__aeabi_dsub+0x4e2>
 8002a9e:	1885      	adds	r5, r0, r2
 8002aa0:	000a      	movs	r2, r1
 8002aa2:	4285      	cmp	r5, r0
 8002aa4:	4189      	sbcs	r1, r1
 8002aa6:	4462      	add	r2, ip
 8002aa8:	4249      	negs	r1, r1
 8002aaa:	1851      	adds	r1, r2, r1
 8002aac:	2207      	movs	r2, #7
 8002aae:	07ce      	lsls	r6, r1, #31
 8002ab0:	086d      	lsrs	r5, r5, #1
 8002ab2:	432e      	orrs	r6, r5
 8002ab4:	0849      	lsrs	r1, r1, #1
 8002ab6:	4032      	ands	r2, r6
 8002ab8:	001d      	movs	r5, r3
 8002aba:	e6a9      	b.n	8002810 <__aeabi_dsub+0xe0>
 8002abc:	49bf      	ldr	r1, [pc, #764]	; (8002dbc <__aeabi_dsub+0x68c>)
 8002abe:	1aed      	subs	r5, r5, r3
 8002ac0:	4011      	ands	r1, r2
 8002ac2:	2207      	movs	r2, #7
 8002ac4:	4032      	ands	r2, r6
 8002ac6:	e6a3      	b.n	8002810 <__aeabi_dsub+0xe0>
 8002ac8:	0032      	movs	r2, r6
 8002aca:	3828      	subs	r0, #40	; 0x28
 8002acc:	4082      	lsls	r2, r0
 8002ace:	2600      	movs	r6, #0
 8002ad0:	e686      	b.n	80027e0 <__aeabi_dsub+0xb0>
 8002ad2:	0030      	movs	r0, r6
 8002ad4:	f000 fb08 	bl	80030e8 <__clzsi2>
 8002ad8:	3020      	adds	r0, #32
 8002ada:	e673      	b.n	80027c4 <__aeabi_dsub+0x94>
 8002adc:	4663      	mov	r3, ip
 8002ade:	4313      	orrs	r3, r2
 8002ae0:	1e5a      	subs	r2, r3, #1
 8002ae2:	4193      	sbcs	r3, r2
 8002ae4:	1ac6      	subs	r6, r0, r3
 8002ae6:	42b0      	cmp	r0, r6
 8002ae8:	4180      	sbcs	r0, r0
 8002aea:	4240      	negs	r0, r0
 8002aec:	1a09      	subs	r1, r1, r0
 8002aee:	e65c      	b.n	80027aa <__aeabi_dsub+0x7a>
 8002af0:	000e      	movs	r6, r1
 8002af2:	4667      	mov	r7, ip
 8002af4:	4306      	orrs	r6, r0
 8002af6:	4317      	orrs	r7, r2
 8002af8:	2d00      	cmp	r5, #0
 8002afa:	d15e      	bne.n	8002bba <__aeabi_dsub+0x48a>
 8002afc:	2e00      	cmp	r6, #0
 8002afe:	d000      	beq.n	8002b02 <__aeabi_dsub+0x3d2>
 8002b00:	e0f3      	b.n	8002cea <__aeabi_dsub+0x5ba>
 8002b02:	2f00      	cmp	r7, #0
 8002b04:	d100      	bne.n	8002b08 <__aeabi_dsub+0x3d8>
 8002b06:	e11e      	b.n	8002d46 <__aeabi_dsub+0x616>
 8002b08:	465c      	mov	r4, fp
 8002b0a:	4661      	mov	r1, ip
 8002b0c:	4691      	mov	r9, r2
 8002b0e:	e72c      	b.n	800296a <__aeabi_dsub+0x23a>
 8002b10:	4fa9      	ldr	r7, [pc, #676]	; (8002db8 <__aeabi_dsub+0x688>)
 8002b12:	42be      	cmp	r6, r7
 8002b14:	d07b      	beq.n	8002c0e <__aeabi_dsub+0x4de>
 8002b16:	001e      	movs	r6, r3
 8002b18:	e6f1      	b.n	80028fe <__aeabi_dsub+0x1ce>
 8002b1a:	0010      	movs	r0, r2
 8002b1c:	3d1f      	subs	r5, #31
 8002b1e:	40e8      	lsrs	r0, r5
 8002b20:	2b20      	cmp	r3, #32
 8002b22:	d003      	beq.n	8002b2c <__aeabi_dsub+0x3fc>
 8002b24:	2140      	movs	r1, #64	; 0x40
 8002b26:	1acb      	subs	r3, r1, r3
 8002b28:	409a      	lsls	r2, r3
 8002b2a:	4316      	orrs	r6, r2
 8002b2c:	1e73      	subs	r3, r6, #1
 8002b2e:	419e      	sbcs	r6, r3
 8002b30:	2207      	movs	r2, #7
 8002b32:	4306      	orrs	r6, r0
 8002b34:	4032      	ands	r2, r6
 8002b36:	2100      	movs	r1, #0
 8002b38:	2500      	movs	r5, #0
 8002b3a:	e783      	b.n	8002a44 <__aeabi_dsub+0x314>
 8002b3c:	1a16      	subs	r6, r2, r0
 8002b3e:	4663      	mov	r3, ip
 8002b40:	42b2      	cmp	r2, r6
 8002b42:	4180      	sbcs	r0, r0
 8002b44:	1a59      	subs	r1, r3, r1
 8002b46:	4240      	negs	r0, r0
 8002b48:	1a0b      	subs	r3, r1, r0
 8002b4a:	4698      	mov	r8, r3
 8002b4c:	465c      	mov	r4, fp
 8002b4e:	e632      	b.n	80027b6 <__aeabi_dsub+0x86>
 8002b50:	2e1f      	cmp	r6, #31
 8002b52:	dd00      	ble.n	8002b56 <__aeabi_dsub+0x426>
 8002b54:	e0ab      	b.n	8002cae <__aeabi_dsub+0x57e>
 8002b56:	2720      	movs	r7, #32
 8002b58:	1bbb      	subs	r3, r7, r6
 8002b5a:	469a      	mov	sl, r3
 8002b5c:	4663      	mov	r3, ip
 8002b5e:	4657      	mov	r7, sl
 8002b60:	40bb      	lsls	r3, r7
 8002b62:	4699      	mov	r9, r3
 8002b64:	0013      	movs	r3, r2
 8002b66:	464f      	mov	r7, r9
 8002b68:	40f3      	lsrs	r3, r6
 8002b6a:	431f      	orrs	r7, r3
 8002b6c:	003b      	movs	r3, r7
 8002b6e:	4657      	mov	r7, sl
 8002b70:	40ba      	lsls	r2, r7
 8002b72:	1e57      	subs	r7, r2, #1
 8002b74:	41ba      	sbcs	r2, r7
 8002b76:	4313      	orrs	r3, r2
 8002b78:	4662      	mov	r2, ip
 8002b7a:	40f2      	lsrs	r2, r6
 8002b7c:	1889      	adds	r1, r1, r2
 8002b7e:	e698      	b.n	80028b2 <__aeabi_dsub+0x182>
 8002b80:	2720      	movs	r7, #32
 8002b82:	1bbb      	subs	r3, r7, r6
 8002b84:	469a      	mov	sl, r3
 8002b86:	4663      	mov	r3, ip
 8002b88:	4657      	mov	r7, sl
 8002b8a:	40bb      	lsls	r3, r7
 8002b8c:	4699      	mov	r9, r3
 8002b8e:	0013      	movs	r3, r2
 8002b90:	464f      	mov	r7, r9
 8002b92:	40f3      	lsrs	r3, r6
 8002b94:	431f      	orrs	r7, r3
 8002b96:	003b      	movs	r3, r7
 8002b98:	4657      	mov	r7, sl
 8002b9a:	40ba      	lsls	r2, r7
 8002b9c:	1e57      	subs	r7, r2, #1
 8002b9e:	41ba      	sbcs	r2, r7
 8002ba0:	4313      	orrs	r3, r2
 8002ba2:	4662      	mov	r2, ip
 8002ba4:	40f2      	lsrs	r2, r6
 8002ba6:	1a89      	subs	r1, r1, r2
 8002ba8:	e79c      	b.n	8002ae4 <__aeabi_dsub+0x3b4>
 8002baa:	4b83      	ldr	r3, [pc, #524]	; (8002db8 <__aeabi_dsub+0x688>)
 8002bac:	429f      	cmp	r7, r3
 8002bae:	d05f      	beq.n	8002c70 <__aeabi_dsub+0x540>
 8002bb0:	2580      	movs	r5, #128	; 0x80
 8002bb2:	042d      	lsls	r5, r5, #16
 8002bb4:	4273      	negs	r3, r6
 8002bb6:	4329      	orrs	r1, r5
 8002bb8:	e720      	b.n	80029fc <__aeabi_dsub+0x2cc>
 8002bba:	2e00      	cmp	r6, #0
 8002bbc:	d10c      	bne.n	8002bd8 <__aeabi_dsub+0x4a8>
 8002bbe:	2f00      	cmp	r7, #0
 8002bc0:	d100      	bne.n	8002bc4 <__aeabi_dsub+0x494>
 8002bc2:	e0d0      	b.n	8002d66 <__aeabi_dsub+0x636>
 8002bc4:	465c      	mov	r4, fp
 8002bc6:	4661      	mov	r1, ip
 8002bc8:	4691      	mov	r9, r2
 8002bca:	4d7b      	ldr	r5, [pc, #492]	; (8002db8 <__aeabi_dsub+0x688>)
 8002bcc:	e6cd      	b.n	800296a <__aeabi_dsub+0x23a>
 8002bce:	4f7a      	ldr	r7, [pc, #488]	; (8002db8 <__aeabi_dsub+0x688>)
 8002bd0:	42be      	cmp	r6, r7
 8002bd2:	d01c      	beq.n	8002c0e <__aeabi_dsub+0x4de>
 8002bd4:	001e      	movs	r6, r3
 8002bd6:	e665      	b.n	80028a4 <__aeabi_dsub+0x174>
 8002bd8:	2f00      	cmp	r7, #0
 8002bda:	d018      	beq.n	8002c0e <__aeabi_dsub+0x4de>
 8002bdc:	08c0      	lsrs	r0, r0, #3
 8002bde:	074e      	lsls	r6, r1, #29
 8002be0:	4306      	orrs	r6, r0
 8002be2:	2080      	movs	r0, #128	; 0x80
 8002be4:	08c9      	lsrs	r1, r1, #3
 8002be6:	0300      	lsls	r0, r0, #12
 8002be8:	4201      	tst	r1, r0
 8002bea:	d008      	beq.n	8002bfe <__aeabi_dsub+0x4ce>
 8002bec:	4663      	mov	r3, ip
 8002bee:	08dc      	lsrs	r4, r3, #3
 8002bf0:	4204      	tst	r4, r0
 8002bf2:	d104      	bne.n	8002bfe <__aeabi_dsub+0x4ce>
 8002bf4:	0021      	movs	r1, r4
 8002bf6:	46da      	mov	sl, fp
 8002bf8:	08d2      	lsrs	r2, r2, #3
 8002bfa:	075e      	lsls	r6, r3, #29
 8002bfc:	4316      	orrs	r6, r2
 8002bfe:	00f3      	lsls	r3, r6, #3
 8002c00:	4699      	mov	r9, r3
 8002c02:	2401      	movs	r4, #1
 8002c04:	4653      	mov	r3, sl
 8002c06:	00c9      	lsls	r1, r1, #3
 8002c08:	0f72      	lsrs	r2, r6, #29
 8002c0a:	4311      	orrs	r1, r2
 8002c0c:	401c      	ands	r4, r3
 8002c0e:	4d6a      	ldr	r5, [pc, #424]	; (8002db8 <__aeabi_dsub+0x688>)
 8002c10:	e6ab      	b.n	800296a <__aeabi_dsub+0x23a>
 8002c12:	001d      	movs	r5, r3
 8002c14:	2200      	movs	r2, #0
 8002c16:	2700      	movs	r7, #0
 8002c18:	e6b4      	b.n	8002984 <__aeabi_dsub+0x254>
 8002c1a:	2d00      	cmp	r5, #0
 8002c1c:	d159      	bne.n	8002cd2 <__aeabi_dsub+0x5a2>
 8002c1e:	000b      	movs	r3, r1
 8002c20:	4303      	orrs	r3, r0
 8002c22:	d100      	bne.n	8002c26 <__aeabi_dsub+0x4f6>
 8002c24:	e6d6      	b.n	80029d4 <__aeabi_dsub+0x2a4>
 8002c26:	1c73      	adds	r3, r6, #1
 8002c28:	d100      	bne.n	8002c2c <__aeabi_dsub+0x4fc>
 8002c2a:	e0b2      	b.n	8002d92 <__aeabi_dsub+0x662>
 8002c2c:	4b62      	ldr	r3, [pc, #392]	; (8002db8 <__aeabi_dsub+0x688>)
 8002c2e:	429f      	cmp	r7, r3
 8002c30:	d01e      	beq.n	8002c70 <__aeabi_dsub+0x540>
 8002c32:	43f3      	mvns	r3, r6
 8002c34:	2b38      	cmp	r3, #56	; 0x38
 8002c36:	dc6f      	bgt.n	8002d18 <__aeabi_dsub+0x5e8>
 8002c38:	2b1f      	cmp	r3, #31
 8002c3a:	dd00      	ble.n	8002c3e <__aeabi_dsub+0x50e>
 8002c3c:	e097      	b.n	8002d6e <__aeabi_dsub+0x63e>
 8002c3e:	2520      	movs	r5, #32
 8002c40:	000e      	movs	r6, r1
 8002c42:	1aed      	subs	r5, r5, r3
 8002c44:	40ae      	lsls	r6, r5
 8002c46:	46b0      	mov	r8, r6
 8002c48:	0006      	movs	r6, r0
 8002c4a:	46aa      	mov	sl, r5
 8002c4c:	40de      	lsrs	r6, r3
 8002c4e:	4645      	mov	r5, r8
 8002c50:	4335      	orrs	r5, r6
 8002c52:	002e      	movs	r6, r5
 8002c54:	4655      	mov	r5, sl
 8002c56:	40a8      	lsls	r0, r5
 8002c58:	40d9      	lsrs	r1, r3
 8002c5a:	1e45      	subs	r5, r0, #1
 8002c5c:	41a8      	sbcs	r0, r5
 8002c5e:	448c      	add	ip, r1
 8002c60:	4306      	orrs	r6, r0
 8002c62:	18b6      	adds	r6, r6, r2
 8002c64:	4296      	cmp	r6, r2
 8002c66:	4192      	sbcs	r2, r2
 8002c68:	4251      	negs	r1, r2
 8002c6a:	4461      	add	r1, ip
 8002c6c:	003d      	movs	r5, r7
 8002c6e:	e625      	b.n	80028bc <__aeabi_dsub+0x18c>
 8002c70:	003d      	movs	r5, r7
 8002c72:	4661      	mov	r1, ip
 8002c74:	4691      	mov	r9, r2
 8002c76:	e678      	b.n	800296a <__aeabi_dsub+0x23a>
 8002c78:	000b      	movs	r3, r1
 8002c7a:	4303      	orrs	r3, r0
 8002c7c:	2d00      	cmp	r5, #0
 8002c7e:	d000      	beq.n	8002c82 <__aeabi_dsub+0x552>
 8002c80:	e655      	b.n	800292e <__aeabi_dsub+0x1fe>
 8002c82:	2b00      	cmp	r3, #0
 8002c84:	d0f5      	beq.n	8002c72 <__aeabi_dsub+0x542>
 8002c86:	4663      	mov	r3, ip
 8002c88:	4313      	orrs	r3, r2
 8002c8a:	d100      	bne.n	8002c8e <__aeabi_dsub+0x55e>
 8002c8c:	e66d      	b.n	800296a <__aeabi_dsub+0x23a>
 8002c8e:	1886      	adds	r6, r0, r2
 8002c90:	4286      	cmp	r6, r0
 8002c92:	4180      	sbcs	r0, r0
 8002c94:	4461      	add	r1, ip
 8002c96:	4240      	negs	r0, r0
 8002c98:	1809      	adds	r1, r1, r0
 8002c9a:	2200      	movs	r2, #0
 8002c9c:	020b      	lsls	r3, r1, #8
 8002c9e:	d400      	bmi.n	8002ca2 <__aeabi_dsub+0x572>
 8002ca0:	e6d0      	b.n	8002a44 <__aeabi_dsub+0x314>
 8002ca2:	4b46      	ldr	r3, [pc, #280]	; (8002dbc <__aeabi_dsub+0x68c>)
 8002ca4:	3501      	adds	r5, #1
 8002ca6:	4019      	ands	r1, r3
 8002ca8:	e5b2      	b.n	8002810 <__aeabi_dsub+0xe0>
 8002caa:	46b1      	mov	r9, r6
 8002cac:	e65d      	b.n	800296a <__aeabi_dsub+0x23a>
 8002cae:	0033      	movs	r3, r6
 8002cb0:	4667      	mov	r7, ip
 8002cb2:	3b20      	subs	r3, #32
 8002cb4:	40df      	lsrs	r7, r3
 8002cb6:	003b      	movs	r3, r7
 8002cb8:	2e20      	cmp	r6, #32
 8002cba:	d005      	beq.n	8002cc8 <__aeabi_dsub+0x598>
 8002cbc:	2740      	movs	r7, #64	; 0x40
 8002cbe:	1bbf      	subs	r7, r7, r6
 8002cc0:	4666      	mov	r6, ip
 8002cc2:	40be      	lsls	r6, r7
 8002cc4:	4332      	orrs	r2, r6
 8002cc6:	4690      	mov	r8, r2
 8002cc8:	4646      	mov	r6, r8
 8002cca:	1e72      	subs	r2, r6, #1
 8002ccc:	4196      	sbcs	r6, r2
 8002cce:	4333      	orrs	r3, r6
 8002cd0:	e5ef      	b.n	80028b2 <__aeabi_dsub+0x182>
 8002cd2:	4b39      	ldr	r3, [pc, #228]	; (8002db8 <__aeabi_dsub+0x688>)
 8002cd4:	429f      	cmp	r7, r3
 8002cd6:	d0cb      	beq.n	8002c70 <__aeabi_dsub+0x540>
 8002cd8:	2580      	movs	r5, #128	; 0x80
 8002cda:	042d      	lsls	r5, r5, #16
 8002cdc:	4273      	negs	r3, r6
 8002cde:	4329      	orrs	r1, r5
 8002ce0:	e7a8      	b.n	8002c34 <__aeabi_dsub+0x504>
 8002ce2:	4308      	orrs	r0, r1
 8002ce4:	1e41      	subs	r1, r0, #1
 8002ce6:	4188      	sbcs	r0, r1
 8002ce8:	e6a2      	b.n	8002a30 <__aeabi_dsub+0x300>
 8002cea:	2f00      	cmp	r7, #0
 8002cec:	d100      	bne.n	8002cf0 <__aeabi_dsub+0x5c0>
 8002cee:	e63c      	b.n	800296a <__aeabi_dsub+0x23a>
 8002cf0:	4663      	mov	r3, ip
 8002cf2:	1a86      	subs	r6, r0, r2
 8002cf4:	1acf      	subs	r7, r1, r3
 8002cf6:	42b0      	cmp	r0, r6
 8002cf8:	419b      	sbcs	r3, r3
 8002cfa:	425b      	negs	r3, r3
 8002cfc:	1afb      	subs	r3, r7, r3
 8002cfe:	4698      	mov	r8, r3
 8002d00:	021b      	lsls	r3, r3, #8
 8002d02:	d54e      	bpl.n	8002da2 <__aeabi_dsub+0x672>
 8002d04:	1a16      	subs	r6, r2, r0
 8002d06:	4663      	mov	r3, ip
 8002d08:	42b2      	cmp	r2, r6
 8002d0a:	4192      	sbcs	r2, r2
 8002d0c:	1a59      	subs	r1, r3, r1
 8002d0e:	4252      	negs	r2, r2
 8002d10:	1a89      	subs	r1, r1, r2
 8002d12:	465c      	mov	r4, fp
 8002d14:	2200      	movs	r2, #0
 8002d16:	e57b      	b.n	8002810 <__aeabi_dsub+0xe0>
 8002d18:	4301      	orrs	r1, r0
 8002d1a:	000e      	movs	r6, r1
 8002d1c:	1e71      	subs	r1, r6, #1
 8002d1e:	418e      	sbcs	r6, r1
 8002d20:	e79f      	b.n	8002c62 <__aeabi_dsub+0x532>
 8002d22:	001d      	movs	r5, r3
 8002d24:	000e      	movs	r6, r1
 8002d26:	3d20      	subs	r5, #32
 8002d28:	40ee      	lsrs	r6, r5
 8002d2a:	46b0      	mov	r8, r6
 8002d2c:	2b20      	cmp	r3, #32
 8002d2e:	d004      	beq.n	8002d3a <__aeabi_dsub+0x60a>
 8002d30:	2540      	movs	r5, #64	; 0x40
 8002d32:	1aeb      	subs	r3, r5, r3
 8002d34:	4099      	lsls	r1, r3
 8002d36:	4308      	orrs	r0, r1
 8002d38:	4681      	mov	r9, r0
 8002d3a:	4648      	mov	r0, r9
 8002d3c:	4643      	mov	r3, r8
 8002d3e:	1e41      	subs	r1, r0, #1
 8002d40:	4188      	sbcs	r0, r1
 8002d42:	4318      	orrs	r0, r3
 8002d44:	e674      	b.n	8002a30 <__aeabi_dsub+0x300>
 8002d46:	2200      	movs	r2, #0
 8002d48:	2400      	movs	r4, #0
 8002d4a:	e617      	b.n	800297c <__aeabi_dsub+0x24c>
 8002d4c:	1a16      	subs	r6, r2, r0
 8002d4e:	4663      	mov	r3, ip
 8002d50:	42b2      	cmp	r2, r6
 8002d52:	4192      	sbcs	r2, r2
 8002d54:	1a59      	subs	r1, r3, r1
 8002d56:	4252      	negs	r2, r2
 8002d58:	1a89      	subs	r1, r1, r2
 8002d5a:	003d      	movs	r5, r7
 8002d5c:	e525      	b.n	80027aa <__aeabi_dsub+0x7a>
 8002d5e:	4661      	mov	r1, ip
 8002d60:	4691      	mov	r9, r2
 8002d62:	4d15      	ldr	r5, [pc, #84]	; (8002db8 <__aeabi_dsub+0x688>)
 8002d64:	e601      	b.n	800296a <__aeabi_dsub+0x23a>
 8002d66:	2280      	movs	r2, #128	; 0x80
 8002d68:	2400      	movs	r4, #0
 8002d6a:	0312      	lsls	r2, r2, #12
 8002d6c:	e679      	b.n	8002a62 <__aeabi_dsub+0x332>
 8002d6e:	001d      	movs	r5, r3
 8002d70:	000e      	movs	r6, r1
 8002d72:	3d20      	subs	r5, #32
 8002d74:	40ee      	lsrs	r6, r5
 8002d76:	46b0      	mov	r8, r6
 8002d78:	2b20      	cmp	r3, #32
 8002d7a:	d004      	beq.n	8002d86 <__aeabi_dsub+0x656>
 8002d7c:	2540      	movs	r5, #64	; 0x40
 8002d7e:	1aeb      	subs	r3, r5, r3
 8002d80:	4099      	lsls	r1, r3
 8002d82:	4308      	orrs	r0, r1
 8002d84:	4681      	mov	r9, r0
 8002d86:	464e      	mov	r6, r9
 8002d88:	4643      	mov	r3, r8
 8002d8a:	1e71      	subs	r1, r6, #1
 8002d8c:	418e      	sbcs	r6, r1
 8002d8e:	431e      	orrs	r6, r3
 8002d90:	e767      	b.n	8002c62 <__aeabi_dsub+0x532>
 8002d92:	1886      	adds	r6, r0, r2
 8002d94:	4296      	cmp	r6, r2
 8002d96:	419b      	sbcs	r3, r3
 8002d98:	4461      	add	r1, ip
 8002d9a:	425b      	negs	r3, r3
 8002d9c:	18c9      	adds	r1, r1, r3
 8002d9e:	003d      	movs	r5, r7
 8002da0:	e58c      	b.n	80028bc <__aeabi_dsub+0x18c>
 8002da2:	4647      	mov	r7, r8
 8002da4:	4337      	orrs	r7, r6
 8002da6:	d0ce      	beq.n	8002d46 <__aeabi_dsub+0x616>
 8002da8:	2207      	movs	r2, #7
 8002daa:	4641      	mov	r1, r8
 8002dac:	4032      	ands	r2, r6
 8002dae:	e649      	b.n	8002a44 <__aeabi_dsub+0x314>
 8002db0:	2700      	movs	r7, #0
 8002db2:	003a      	movs	r2, r7
 8002db4:	e5e6      	b.n	8002984 <__aeabi_dsub+0x254>
 8002db6:	46c0      	nop			; (mov r8, r8)
 8002db8:	000007ff 	.word	0x000007ff
 8002dbc:	ff7fffff 	.word	0xff7fffff

08002dc0 <__aeabi_dcmpun>:
 8002dc0:	b570      	push	{r4, r5, r6, lr}
 8002dc2:	4e0c      	ldr	r6, [pc, #48]	; (8002df4 <__aeabi_dcmpun+0x34>)
 8002dc4:	030d      	lsls	r5, r1, #12
 8002dc6:	031c      	lsls	r4, r3, #12
 8002dc8:	0049      	lsls	r1, r1, #1
 8002dca:	005b      	lsls	r3, r3, #1
 8002dcc:	0b2d      	lsrs	r5, r5, #12
 8002dce:	0d49      	lsrs	r1, r1, #21
 8002dd0:	0b24      	lsrs	r4, r4, #12
 8002dd2:	0d5b      	lsrs	r3, r3, #21
 8002dd4:	42b1      	cmp	r1, r6
 8002dd6:	d008      	beq.n	8002dea <__aeabi_dcmpun+0x2a>
 8002dd8:	4906      	ldr	r1, [pc, #24]	; (8002df4 <__aeabi_dcmpun+0x34>)
 8002dda:	2000      	movs	r0, #0
 8002ddc:	428b      	cmp	r3, r1
 8002dde:	d103      	bne.n	8002de8 <__aeabi_dcmpun+0x28>
 8002de0:	4314      	orrs	r4, r2
 8002de2:	0020      	movs	r0, r4
 8002de4:	1e44      	subs	r4, r0, #1
 8002de6:	41a0      	sbcs	r0, r4
 8002de8:	bd70      	pop	{r4, r5, r6, pc}
 8002dea:	4305      	orrs	r5, r0
 8002dec:	2001      	movs	r0, #1
 8002dee:	2d00      	cmp	r5, #0
 8002df0:	d1fa      	bne.n	8002de8 <__aeabi_dcmpun+0x28>
 8002df2:	e7f1      	b.n	8002dd8 <__aeabi_dcmpun+0x18>
 8002df4:	000007ff 	.word	0x000007ff

08002df8 <__aeabi_d2iz>:
 8002df8:	b530      	push	{r4, r5, lr}
 8002dfa:	4d14      	ldr	r5, [pc, #80]	; (8002e4c <__aeabi_d2iz+0x54>)
 8002dfc:	030a      	lsls	r2, r1, #12
 8002dfe:	004b      	lsls	r3, r1, #1
 8002e00:	0b12      	lsrs	r2, r2, #12
 8002e02:	0d5b      	lsrs	r3, r3, #21
 8002e04:	0fc9      	lsrs	r1, r1, #31
 8002e06:	2400      	movs	r4, #0
 8002e08:	42ab      	cmp	r3, r5
 8002e0a:	dd11      	ble.n	8002e30 <__aeabi_d2iz+0x38>
 8002e0c:	4c10      	ldr	r4, [pc, #64]	; (8002e50 <__aeabi_d2iz+0x58>)
 8002e0e:	42a3      	cmp	r3, r4
 8002e10:	dc10      	bgt.n	8002e34 <__aeabi_d2iz+0x3c>
 8002e12:	2480      	movs	r4, #128	; 0x80
 8002e14:	0364      	lsls	r4, r4, #13
 8002e16:	4322      	orrs	r2, r4
 8002e18:	4c0e      	ldr	r4, [pc, #56]	; (8002e54 <__aeabi_d2iz+0x5c>)
 8002e1a:	1ae4      	subs	r4, r4, r3
 8002e1c:	2c1f      	cmp	r4, #31
 8002e1e:	dd0c      	ble.n	8002e3a <__aeabi_d2iz+0x42>
 8002e20:	480d      	ldr	r0, [pc, #52]	; (8002e58 <__aeabi_d2iz+0x60>)
 8002e22:	1ac3      	subs	r3, r0, r3
 8002e24:	40da      	lsrs	r2, r3
 8002e26:	0013      	movs	r3, r2
 8002e28:	425c      	negs	r4, r3
 8002e2a:	2900      	cmp	r1, #0
 8002e2c:	d100      	bne.n	8002e30 <__aeabi_d2iz+0x38>
 8002e2e:	001c      	movs	r4, r3
 8002e30:	0020      	movs	r0, r4
 8002e32:	bd30      	pop	{r4, r5, pc}
 8002e34:	4b09      	ldr	r3, [pc, #36]	; (8002e5c <__aeabi_d2iz+0x64>)
 8002e36:	18cc      	adds	r4, r1, r3
 8002e38:	e7fa      	b.n	8002e30 <__aeabi_d2iz+0x38>
 8002e3a:	4d09      	ldr	r5, [pc, #36]	; (8002e60 <__aeabi_d2iz+0x68>)
 8002e3c:	40e0      	lsrs	r0, r4
 8002e3e:	46ac      	mov	ip, r5
 8002e40:	4463      	add	r3, ip
 8002e42:	409a      	lsls	r2, r3
 8002e44:	0013      	movs	r3, r2
 8002e46:	4303      	orrs	r3, r0
 8002e48:	e7ee      	b.n	8002e28 <__aeabi_d2iz+0x30>
 8002e4a:	46c0      	nop			; (mov r8, r8)
 8002e4c:	000003fe 	.word	0x000003fe
 8002e50:	0000041d 	.word	0x0000041d
 8002e54:	00000433 	.word	0x00000433
 8002e58:	00000413 	.word	0x00000413
 8002e5c:	7fffffff 	.word	0x7fffffff
 8002e60:	fffffbed 	.word	0xfffffbed

08002e64 <__aeabi_i2d>:
 8002e64:	b570      	push	{r4, r5, r6, lr}
 8002e66:	2800      	cmp	r0, #0
 8002e68:	d02d      	beq.n	8002ec6 <__aeabi_i2d+0x62>
 8002e6a:	17c3      	asrs	r3, r0, #31
 8002e6c:	18c5      	adds	r5, r0, r3
 8002e6e:	405d      	eors	r5, r3
 8002e70:	0fc4      	lsrs	r4, r0, #31
 8002e72:	0028      	movs	r0, r5
 8002e74:	f000 f938 	bl	80030e8 <__clzsi2>
 8002e78:	4b15      	ldr	r3, [pc, #84]	; (8002ed0 <__aeabi_i2d+0x6c>)
 8002e7a:	1a1b      	subs	r3, r3, r0
 8002e7c:	055b      	lsls	r3, r3, #21
 8002e7e:	0d5b      	lsrs	r3, r3, #21
 8002e80:	280a      	cmp	r0, #10
 8002e82:	dd15      	ble.n	8002eb0 <__aeabi_i2d+0x4c>
 8002e84:	380b      	subs	r0, #11
 8002e86:	4085      	lsls	r5, r0
 8002e88:	2200      	movs	r2, #0
 8002e8a:	032d      	lsls	r5, r5, #12
 8002e8c:	0b2d      	lsrs	r5, r5, #12
 8002e8e:	2100      	movs	r1, #0
 8002e90:	0010      	movs	r0, r2
 8002e92:	032d      	lsls	r5, r5, #12
 8002e94:	0d0a      	lsrs	r2, r1, #20
 8002e96:	0b2d      	lsrs	r5, r5, #12
 8002e98:	0512      	lsls	r2, r2, #20
 8002e9a:	432a      	orrs	r2, r5
 8002e9c:	4d0d      	ldr	r5, [pc, #52]	; (8002ed4 <__aeabi_i2d+0x70>)
 8002e9e:	051b      	lsls	r3, r3, #20
 8002ea0:	402a      	ands	r2, r5
 8002ea2:	4313      	orrs	r3, r2
 8002ea4:	005b      	lsls	r3, r3, #1
 8002ea6:	07e4      	lsls	r4, r4, #31
 8002ea8:	085b      	lsrs	r3, r3, #1
 8002eaa:	4323      	orrs	r3, r4
 8002eac:	0019      	movs	r1, r3
 8002eae:	bd70      	pop	{r4, r5, r6, pc}
 8002eb0:	0002      	movs	r2, r0
 8002eb2:	0029      	movs	r1, r5
 8002eb4:	3215      	adds	r2, #21
 8002eb6:	4091      	lsls	r1, r2
 8002eb8:	000a      	movs	r2, r1
 8002eba:	210b      	movs	r1, #11
 8002ebc:	1a08      	subs	r0, r1, r0
 8002ebe:	40c5      	lsrs	r5, r0
 8002ec0:	032d      	lsls	r5, r5, #12
 8002ec2:	0b2d      	lsrs	r5, r5, #12
 8002ec4:	e7e3      	b.n	8002e8e <__aeabi_i2d+0x2a>
 8002ec6:	2400      	movs	r4, #0
 8002ec8:	2300      	movs	r3, #0
 8002eca:	2500      	movs	r5, #0
 8002ecc:	2200      	movs	r2, #0
 8002ece:	e7de      	b.n	8002e8e <__aeabi_i2d+0x2a>
 8002ed0:	0000041e 	.word	0x0000041e
 8002ed4:	800fffff 	.word	0x800fffff

08002ed8 <__aeabi_ui2d>:
 8002ed8:	b510      	push	{r4, lr}
 8002eda:	1e04      	subs	r4, r0, #0
 8002edc:	d025      	beq.n	8002f2a <__aeabi_ui2d+0x52>
 8002ede:	f000 f903 	bl	80030e8 <__clzsi2>
 8002ee2:	4b14      	ldr	r3, [pc, #80]	; (8002f34 <__aeabi_ui2d+0x5c>)
 8002ee4:	1a1b      	subs	r3, r3, r0
 8002ee6:	055b      	lsls	r3, r3, #21
 8002ee8:	0d5b      	lsrs	r3, r3, #21
 8002eea:	280a      	cmp	r0, #10
 8002eec:	dd12      	ble.n	8002f14 <__aeabi_ui2d+0x3c>
 8002eee:	380b      	subs	r0, #11
 8002ef0:	4084      	lsls	r4, r0
 8002ef2:	2200      	movs	r2, #0
 8002ef4:	0324      	lsls	r4, r4, #12
 8002ef6:	0b24      	lsrs	r4, r4, #12
 8002ef8:	2100      	movs	r1, #0
 8002efa:	0010      	movs	r0, r2
 8002efc:	0324      	lsls	r4, r4, #12
 8002efe:	0d0a      	lsrs	r2, r1, #20
 8002f00:	0b24      	lsrs	r4, r4, #12
 8002f02:	0512      	lsls	r2, r2, #20
 8002f04:	4322      	orrs	r2, r4
 8002f06:	4c0c      	ldr	r4, [pc, #48]	; (8002f38 <__aeabi_ui2d+0x60>)
 8002f08:	051b      	lsls	r3, r3, #20
 8002f0a:	4022      	ands	r2, r4
 8002f0c:	4313      	orrs	r3, r2
 8002f0e:	005b      	lsls	r3, r3, #1
 8002f10:	0859      	lsrs	r1, r3, #1
 8002f12:	bd10      	pop	{r4, pc}
 8002f14:	0002      	movs	r2, r0
 8002f16:	0021      	movs	r1, r4
 8002f18:	3215      	adds	r2, #21
 8002f1a:	4091      	lsls	r1, r2
 8002f1c:	000a      	movs	r2, r1
 8002f1e:	210b      	movs	r1, #11
 8002f20:	1a08      	subs	r0, r1, r0
 8002f22:	40c4      	lsrs	r4, r0
 8002f24:	0324      	lsls	r4, r4, #12
 8002f26:	0b24      	lsrs	r4, r4, #12
 8002f28:	e7e6      	b.n	8002ef8 <__aeabi_ui2d+0x20>
 8002f2a:	2300      	movs	r3, #0
 8002f2c:	2400      	movs	r4, #0
 8002f2e:	2200      	movs	r2, #0
 8002f30:	e7e2      	b.n	8002ef8 <__aeabi_ui2d+0x20>
 8002f32:	46c0      	nop			; (mov r8, r8)
 8002f34:	0000041e 	.word	0x0000041e
 8002f38:	800fffff 	.word	0x800fffff

08002f3c <__aeabi_f2d>:
 8002f3c:	0041      	lsls	r1, r0, #1
 8002f3e:	0e09      	lsrs	r1, r1, #24
 8002f40:	1c4b      	adds	r3, r1, #1
 8002f42:	b570      	push	{r4, r5, r6, lr}
 8002f44:	b2db      	uxtb	r3, r3
 8002f46:	0246      	lsls	r6, r0, #9
 8002f48:	0a75      	lsrs	r5, r6, #9
 8002f4a:	0fc4      	lsrs	r4, r0, #31
 8002f4c:	2b01      	cmp	r3, #1
 8002f4e:	dd14      	ble.n	8002f7a <__aeabi_f2d+0x3e>
 8002f50:	23e0      	movs	r3, #224	; 0xe0
 8002f52:	009b      	lsls	r3, r3, #2
 8002f54:	076d      	lsls	r5, r5, #29
 8002f56:	0b36      	lsrs	r6, r6, #12
 8002f58:	18cb      	adds	r3, r1, r3
 8002f5a:	2100      	movs	r1, #0
 8002f5c:	0d0a      	lsrs	r2, r1, #20
 8002f5e:	0028      	movs	r0, r5
 8002f60:	0512      	lsls	r2, r2, #20
 8002f62:	4d1c      	ldr	r5, [pc, #112]	; (8002fd4 <__aeabi_f2d+0x98>)
 8002f64:	4332      	orrs	r2, r6
 8002f66:	055b      	lsls	r3, r3, #21
 8002f68:	402a      	ands	r2, r5
 8002f6a:	085b      	lsrs	r3, r3, #1
 8002f6c:	4313      	orrs	r3, r2
 8002f6e:	005b      	lsls	r3, r3, #1
 8002f70:	07e4      	lsls	r4, r4, #31
 8002f72:	085b      	lsrs	r3, r3, #1
 8002f74:	4323      	orrs	r3, r4
 8002f76:	0019      	movs	r1, r3
 8002f78:	bd70      	pop	{r4, r5, r6, pc}
 8002f7a:	2900      	cmp	r1, #0
 8002f7c:	d114      	bne.n	8002fa8 <__aeabi_f2d+0x6c>
 8002f7e:	2d00      	cmp	r5, #0
 8002f80:	d01e      	beq.n	8002fc0 <__aeabi_f2d+0x84>
 8002f82:	0028      	movs	r0, r5
 8002f84:	f000 f8b0 	bl	80030e8 <__clzsi2>
 8002f88:	280a      	cmp	r0, #10
 8002f8a:	dc1c      	bgt.n	8002fc6 <__aeabi_f2d+0x8a>
 8002f8c:	230b      	movs	r3, #11
 8002f8e:	002a      	movs	r2, r5
 8002f90:	1a1b      	subs	r3, r3, r0
 8002f92:	40da      	lsrs	r2, r3
 8002f94:	0003      	movs	r3, r0
 8002f96:	3315      	adds	r3, #21
 8002f98:	409d      	lsls	r5, r3
 8002f9a:	4b0f      	ldr	r3, [pc, #60]	; (8002fd8 <__aeabi_f2d+0x9c>)
 8002f9c:	0312      	lsls	r2, r2, #12
 8002f9e:	1a1b      	subs	r3, r3, r0
 8002fa0:	055b      	lsls	r3, r3, #21
 8002fa2:	0b16      	lsrs	r6, r2, #12
 8002fa4:	0d5b      	lsrs	r3, r3, #21
 8002fa6:	e7d8      	b.n	8002f5a <__aeabi_f2d+0x1e>
 8002fa8:	2d00      	cmp	r5, #0
 8002faa:	d006      	beq.n	8002fba <__aeabi_f2d+0x7e>
 8002fac:	0b32      	lsrs	r2, r6, #12
 8002fae:	2680      	movs	r6, #128	; 0x80
 8002fb0:	0336      	lsls	r6, r6, #12
 8002fb2:	076d      	lsls	r5, r5, #29
 8002fb4:	4316      	orrs	r6, r2
 8002fb6:	4b09      	ldr	r3, [pc, #36]	; (8002fdc <__aeabi_f2d+0xa0>)
 8002fb8:	e7cf      	b.n	8002f5a <__aeabi_f2d+0x1e>
 8002fba:	4b08      	ldr	r3, [pc, #32]	; (8002fdc <__aeabi_f2d+0xa0>)
 8002fbc:	2600      	movs	r6, #0
 8002fbe:	e7cc      	b.n	8002f5a <__aeabi_f2d+0x1e>
 8002fc0:	2300      	movs	r3, #0
 8002fc2:	2600      	movs	r6, #0
 8002fc4:	e7c9      	b.n	8002f5a <__aeabi_f2d+0x1e>
 8002fc6:	0003      	movs	r3, r0
 8002fc8:	002a      	movs	r2, r5
 8002fca:	3b0b      	subs	r3, #11
 8002fcc:	409a      	lsls	r2, r3
 8002fce:	2500      	movs	r5, #0
 8002fd0:	e7e3      	b.n	8002f9a <__aeabi_f2d+0x5e>
 8002fd2:	46c0      	nop			; (mov r8, r8)
 8002fd4:	800fffff 	.word	0x800fffff
 8002fd8:	00000389 	.word	0x00000389
 8002fdc:	000007ff 	.word	0x000007ff

08002fe0 <__aeabi_d2f>:
 8002fe0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002fe2:	004c      	lsls	r4, r1, #1
 8002fe4:	0d64      	lsrs	r4, r4, #21
 8002fe6:	030b      	lsls	r3, r1, #12
 8002fe8:	1c62      	adds	r2, r4, #1
 8002fea:	0a5b      	lsrs	r3, r3, #9
 8002fec:	0f46      	lsrs	r6, r0, #29
 8002fee:	0552      	lsls	r2, r2, #21
 8002ff0:	0fc9      	lsrs	r1, r1, #31
 8002ff2:	431e      	orrs	r6, r3
 8002ff4:	00c5      	lsls	r5, r0, #3
 8002ff6:	0d52      	lsrs	r2, r2, #21
 8002ff8:	2a01      	cmp	r2, #1
 8002ffa:	dd29      	ble.n	8003050 <__aeabi_d2f+0x70>
 8002ffc:	4b37      	ldr	r3, [pc, #220]	; (80030dc <__aeabi_d2f+0xfc>)
 8002ffe:	18e7      	adds	r7, r4, r3
 8003000:	2ffe      	cmp	r7, #254	; 0xfe
 8003002:	dc1c      	bgt.n	800303e <__aeabi_d2f+0x5e>
 8003004:	2f00      	cmp	r7, #0
 8003006:	dd3b      	ble.n	8003080 <__aeabi_d2f+0xa0>
 8003008:	0180      	lsls	r0, r0, #6
 800300a:	1e43      	subs	r3, r0, #1
 800300c:	4198      	sbcs	r0, r3
 800300e:	2207      	movs	r2, #7
 8003010:	00f3      	lsls	r3, r6, #3
 8003012:	0f6d      	lsrs	r5, r5, #29
 8003014:	4303      	orrs	r3, r0
 8003016:	432b      	orrs	r3, r5
 8003018:	401a      	ands	r2, r3
 800301a:	2a00      	cmp	r2, #0
 800301c:	d004      	beq.n	8003028 <__aeabi_d2f+0x48>
 800301e:	220f      	movs	r2, #15
 8003020:	401a      	ands	r2, r3
 8003022:	2a04      	cmp	r2, #4
 8003024:	d000      	beq.n	8003028 <__aeabi_d2f+0x48>
 8003026:	3304      	adds	r3, #4
 8003028:	2280      	movs	r2, #128	; 0x80
 800302a:	04d2      	lsls	r2, r2, #19
 800302c:	401a      	ands	r2, r3
 800302e:	d024      	beq.n	800307a <__aeabi_d2f+0x9a>
 8003030:	3701      	adds	r7, #1
 8003032:	b2fa      	uxtb	r2, r7
 8003034:	2fff      	cmp	r7, #255	; 0xff
 8003036:	d002      	beq.n	800303e <__aeabi_d2f+0x5e>
 8003038:	019b      	lsls	r3, r3, #6
 800303a:	0a58      	lsrs	r0, r3, #9
 800303c:	e001      	b.n	8003042 <__aeabi_d2f+0x62>
 800303e:	22ff      	movs	r2, #255	; 0xff
 8003040:	2000      	movs	r0, #0
 8003042:	0240      	lsls	r0, r0, #9
 8003044:	05d2      	lsls	r2, r2, #23
 8003046:	0a40      	lsrs	r0, r0, #9
 8003048:	07c9      	lsls	r1, r1, #31
 800304a:	4310      	orrs	r0, r2
 800304c:	4308      	orrs	r0, r1
 800304e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003050:	4335      	orrs	r5, r6
 8003052:	2c00      	cmp	r4, #0
 8003054:	d104      	bne.n	8003060 <__aeabi_d2f+0x80>
 8003056:	2d00      	cmp	r5, #0
 8003058:	d10a      	bne.n	8003070 <__aeabi_d2f+0x90>
 800305a:	2200      	movs	r2, #0
 800305c:	2000      	movs	r0, #0
 800305e:	e7f0      	b.n	8003042 <__aeabi_d2f+0x62>
 8003060:	2d00      	cmp	r5, #0
 8003062:	d0ec      	beq.n	800303e <__aeabi_d2f+0x5e>
 8003064:	2080      	movs	r0, #128	; 0x80
 8003066:	03c0      	lsls	r0, r0, #15
 8003068:	4330      	orrs	r0, r6
 800306a:	22ff      	movs	r2, #255	; 0xff
 800306c:	e7e9      	b.n	8003042 <__aeabi_d2f+0x62>
 800306e:	2400      	movs	r4, #0
 8003070:	2300      	movs	r3, #0
 8003072:	025b      	lsls	r3, r3, #9
 8003074:	0a58      	lsrs	r0, r3, #9
 8003076:	b2e2      	uxtb	r2, r4
 8003078:	e7e3      	b.n	8003042 <__aeabi_d2f+0x62>
 800307a:	08db      	lsrs	r3, r3, #3
 800307c:	003c      	movs	r4, r7
 800307e:	e7f8      	b.n	8003072 <__aeabi_d2f+0x92>
 8003080:	003b      	movs	r3, r7
 8003082:	3317      	adds	r3, #23
 8003084:	dbf3      	blt.n	800306e <__aeabi_d2f+0x8e>
 8003086:	2380      	movs	r3, #128	; 0x80
 8003088:	041b      	lsls	r3, r3, #16
 800308a:	4333      	orrs	r3, r6
 800308c:	261e      	movs	r6, #30
 800308e:	1bf6      	subs	r6, r6, r7
 8003090:	2e1f      	cmp	r6, #31
 8003092:	dd14      	ble.n	80030be <__aeabi_d2f+0xde>
 8003094:	2202      	movs	r2, #2
 8003096:	4252      	negs	r2, r2
 8003098:	1bd7      	subs	r7, r2, r7
 800309a:	001a      	movs	r2, r3
 800309c:	40fa      	lsrs	r2, r7
 800309e:	0017      	movs	r7, r2
 80030a0:	2e20      	cmp	r6, #32
 80030a2:	d004      	beq.n	80030ae <__aeabi_d2f+0xce>
 80030a4:	4a0e      	ldr	r2, [pc, #56]	; (80030e0 <__aeabi_d2f+0x100>)
 80030a6:	4694      	mov	ip, r2
 80030a8:	4464      	add	r4, ip
 80030aa:	40a3      	lsls	r3, r4
 80030ac:	431d      	orrs	r5, r3
 80030ae:	002b      	movs	r3, r5
 80030b0:	1e5d      	subs	r5, r3, #1
 80030b2:	41ab      	sbcs	r3, r5
 80030b4:	2207      	movs	r2, #7
 80030b6:	433b      	orrs	r3, r7
 80030b8:	401a      	ands	r2, r3
 80030ba:	2700      	movs	r7, #0
 80030bc:	e7ad      	b.n	800301a <__aeabi_d2f+0x3a>
 80030be:	4a09      	ldr	r2, [pc, #36]	; (80030e4 <__aeabi_d2f+0x104>)
 80030c0:	0028      	movs	r0, r5
 80030c2:	18a2      	adds	r2, r4, r2
 80030c4:	4095      	lsls	r5, r2
 80030c6:	4093      	lsls	r3, r2
 80030c8:	1e6c      	subs	r4, r5, #1
 80030ca:	41a5      	sbcs	r5, r4
 80030cc:	40f0      	lsrs	r0, r6
 80030ce:	2207      	movs	r2, #7
 80030d0:	432b      	orrs	r3, r5
 80030d2:	4303      	orrs	r3, r0
 80030d4:	401a      	ands	r2, r3
 80030d6:	2700      	movs	r7, #0
 80030d8:	e79f      	b.n	800301a <__aeabi_d2f+0x3a>
 80030da:	46c0      	nop			; (mov r8, r8)
 80030dc:	fffffc80 	.word	0xfffffc80
 80030e0:	fffffca2 	.word	0xfffffca2
 80030e4:	fffffc82 	.word	0xfffffc82

080030e8 <__clzsi2>:
 80030e8:	211c      	movs	r1, #28
 80030ea:	2301      	movs	r3, #1
 80030ec:	041b      	lsls	r3, r3, #16
 80030ee:	4298      	cmp	r0, r3
 80030f0:	d301      	bcc.n	80030f6 <__clzsi2+0xe>
 80030f2:	0c00      	lsrs	r0, r0, #16
 80030f4:	3910      	subs	r1, #16
 80030f6:	0a1b      	lsrs	r3, r3, #8
 80030f8:	4298      	cmp	r0, r3
 80030fa:	d301      	bcc.n	8003100 <__clzsi2+0x18>
 80030fc:	0a00      	lsrs	r0, r0, #8
 80030fe:	3908      	subs	r1, #8
 8003100:	091b      	lsrs	r3, r3, #4
 8003102:	4298      	cmp	r0, r3
 8003104:	d301      	bcc.n	800310a <__clzsi2+0x22>
 8003106:	0900      	lsrs	r0, r0, #4
 8003108:	3904      	subs	r1, #4
 800310a:	a202      	add	r2, pc, #8	; (adr r2, 8003114 <__clzsi2+0x2c>)
 800310c:	5c10      	ldrb	r0, [r2, r0]
 800310e:	1840      	adds	r0, r0, r1
 8003110:	4770      	bx	lr
 8003112:	46c0      	nop			; (mov r8, r8)
 8003114:	02020304 	.word	0x02020304
 8003118:	01010101 	.word	0x01010101
	...

08003124 <__divdi3>:
 8003124:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003126:	464e      	mov	r6, r9
 8003128:	4657      	mov	r7, sl
 800312a:	46de      	mov	lr, fp
 800312c:	4645      	mov	r5, r8
 800312e:	b5e0      	push	{r5, r6, r7, lr}
 8003130:	000f      	movs	r7, r1
 8003132:	2100      	movs	r1, #0
 8003134:	b083      	sub	sp, #12
 8003136:	0006      	movs	r6, r0
 8003138:	4689      	mov	r9, r1
 800313a:	2f00      	cmp	r7, #0
 800313c:	da06      	bge.n	800314c <__divdi3+0x28>
 800313e:	0039      	movs	r1, r7
 8003140:	2700      	movs	r7, #0
 8003142:	4246      	negs	r6, r0
 8003144:	418f      	sbcs	r7, r1
 8003146:	2101      	movs	r1, #1
 8003148:	4249      	negs	r1, r1
 800314a:	4689      	mov	r9, r1
 800314c:	2b00      	cmp	r3, #0
 800314e:	da07      	bge.n	8003160 <__divdi3+0x3c>
 8003150:	4649      	mov	r1, r9
 8003152:	43c9      	mvns	r1, r1
 8003154:	0010      	movs	r0, r2
 8003156:	4689      	mov	r9, r1
 8003158:	0019      	movs	r1, r3
 800315a:	2300      	movs	r3, #0
 800315c:	4242      	negs	r2, r0
 800315e:	418b      	sbcs	r3, r1
 8003160:	0034      	movs	r4, r6
 8003162:	003d      	movs	r5, r7
 8003164:	4692      	mov	sl, r2
 8003166:	4698      	mov	r8, r3
 8003168:	42bb      	cmp	r3, r7
 800316a:	d869      	bhi.n	8003240 <__divdi3+0x11c>
 800316c:	d066      	beq.n	800323c <__divdi3+0x118>
 800316e:	4641      	mov	r1, r8
 8003170:	4650      	mov	r0, sl
 8003172:	f000 f8af 	bl	80032d4 <__clzdi2>
 8003176:	4683      	mov	fp, r0
 8003178:	0039      	movs	r1, r7
 800317a:	0030      	movs	r0, r6
 800317c:	f000 f8aa 	bl	80032d4 <__clzdi2>
 8003180:	465b      	mov	r3, fp
 8003182:	1a1b      	subs	r3, r3, r0
 8003184:	469c      	mov	ip, r3
 8003186:	3b20      	subs	r3, #32
 8003188:	469b      	mov	fp, r3
 800318a:	d500      	bpl.n	800318e <__divdi3+0x6a>
 800318c:	e075      	b.n	800327a <__divdi3+0x156>
 800318e:	4651      	mov	r1, sl
 8003190:	4658      	mov	r0, fp
 8003192:	4081      	lsls	r1, r0
 8003194:	000b      	movs	r3, r1
 8003196:	4651      	mov	r1, sl
 8003198:	4660      	mov	r0, ip
 800319a:	4081      	lsls	r1, r0
 800319c:	000a      	movs	r2, r1
 800319e:	42bb      	cmp	r3, r7
 80031a0:	d861      	bhi.n	8003266 <__divdi3+0x142>
 80031a2:	d05e      	beq.n	8003262 <__divdi3+0x13e>
 80031a4:	0034      	movs	r4, r6
 80031a6:	003d      	movs	r5, r7
 80031a8:	4659      	mov	r1, fp
 80031aa:	1aa4      	subs	r4, r4, r2
 80031ac:	419d      	sbcs	r5, r3
 80031ae:	2900      	cmp	r1, #0
 80031b0:	da00      	bge.n	80031b4 <__divdi3+0x90>
 80031b2:	e07a      	b.n	80032aa <__divdi3+0x186>
 80031b4:	2100      	movs	r1, #0
 80031b6:	2000      	movs	r0, #0
 80031b8:	2601      	movs	r6, #1
 80031ba:	9000      	str	r0, [sp, #0]
 80031bc:	9101      	str	r1, [sp, #4]
 80031be:	4659      	mov	r1, fp
 80031c0:	408e      	lsls	r6, r1
 80031c2:	9601      	str	r6, [sp, #4]
 80031c4:	4661      	mov	r1, ip
 80031c6:	2601      	movs	r6, #1
 80031c8:	408e      	lsls	r6, r1
 80031ca:	4661      	mov	r1, ip
 80031cc:	9600      	str	r6, [sp, #0]
 80031ce:	2900      	cmp	r1, #0
 80031d0:	d050      	beq.n	8003274 <__divdi3+0x150>
 80031d2:	07d9      	lsls	r1, r3, #31
 80031d4:	0856      	lsrs	r6, r2, #1
 80031d6:	085f      	lsrs	r7, r3, #1
 80031d8:	430e      	orrs	r6, r1
 80031da:	4663      	mov	r3, ip
 80031dc:	e00e      	b.n	80031fc <__divdi3+0xd8>
 80031de:	42af      	cmp	r7, r5
 80031e0:	d101      	bne.n	80031e6 <__divdi3+0xc2>
 80031e2:	42a6      	cmp	r6, r4
 80031e4:	d80c      	bhi.n	8003200 <__divdi3+0xdc>
 80031e6:	1ba4      	subs	r4, r4, r6
 80031e8:	41bd      	sbcs	r5, r7
 80031ea:	2101      	movs	r1, #1
 80031ec:	1924      	adds	r4, r4, r4
 80031ee:	416d      	adcs	r5, r5
 80031f0:	2200      	movs	r2, #0
 80031f2:	3b01      	subs	r3, #1
 80031f4:	1864      	adds	r4, r4, r1
 80031f6:	4155      	adcs	r5, r2
 80031f8:	2b00      	cmp	r3, #0
 80031fa:	d006      	beq.n	800320a <__divdi3+0xe6>
 80031fc:	42af      	cmp	r7, r5
 80031fe:	d9ee      	bls.n	80031de <__divdi3+0xba>
 8003200:	3b01      	subs	r3, #1
 8003202:	1924      	adds	r4, r4, r4
 8003204:	416d      	adcs	r5, r5
 8003206:	2b00      	cmp	r3, #0
 8003208:	d1f8      	bne.n	80031fc <__divdi3+0xd8>
 800320a:	9800      	ldr	r0, [sp, #0]
 800320c:	9901      	ldr	r1, [sp, #4]
 800320e:	465b      	mov	r3, fp
 8003210:	1900      	adds	r0, r0, r4
 8003212:	4169      	adcs	r1, r5
 8003214:	2b00      	cmp	r3, #0
 8003216:	db3d      	blt.n	8003294 <__divdi3+0x170>
 8003218:	002e      	movs	r6, r5
 800321a:	40de      	lsrs	r6, r3
 800321c:	4663      	mov	r3, ip
 800321e:	002c      	movs	r4, r5
 8003220:	40dc      	lsrs	r4, r3
 8003222:	465b      	mov	r3, fp
 8003224:	2b00      	cmp	r3, #0
 8003226:	db4b      	blt.n	80032c0 <__divdi3+0x19c>
 8003228:	0034      	movs	r4, r6
 800322a:	465d      	mov	r5, fp
 800322c:	40ac      	lsls	r4, r5
 800322e:	0023      	movs	r3, r4
 8003230:	4664      	mov	r4, ip
 8003232:	40a6      	lsls	r6, r4
 8003234:	0032      	movs	r2, r6
 8003236:	1a80      	subs	r0, r0, r2
 8003238:	4199      	sbcs	r1, r3
 800323a:	e003      	b.n	8003244 <__divdi3+0x120>
 800323c:	42b2      	cmp	r2, r6
 800323e:	d996      	bls.n	800316e <__divdi3+0x4a>
 8003240:	2000      	movs	r0, #0
 8003242:	2100      	movs	r1, #0
 8003244:	464b      	mov	r3, r9
 8003246:	2b00      	cmp	r3, #0
 8003248:	d004      	beq.n	8003254 <__divdi3+0x130>
 800324a:	0003      	movs	r3, r0
 800324c:	000c      	movs	r4, r1
 800324e:	2100      	movs	r1, #0
 8003250:	4258      	negs	r0, r3
 8003252:	41a1      	sbcs	r1, r4
 8003254:	b003      	add	sp, #12
 8003256:	bc3c      	pop	{r2, r3, r4, r5}
 8003258:	4690      	mov	r8, r2
 800325a:	4699      	mov	r9, r3
 800325c:	46a2      	mov	sl, r4
 800325e:	46ab      	mov	fp, r5
 8003260:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003262:	42b1      	cmp	r1, r6
 8003264:	d99e      	bls.n	80031a4 <__divdi3+0x80>
 8003266:	2100      	movs	r1, #0
 8003268:	2000      	movs	r0, #0
 800326a:	9000      	str	r0, [sp, #0]
 800326c:	9101      	str	r1, [sp, #4]
 800326e:	4661      	mov	r1, ip
 8003270:	2900      	cmp	r1, #0
 8003272:	d1ae      	bne.n	80031d2 <__divdi3+0xae>
 8003274:	9800      	ldr	r0, [sp, #0]
 8003276:	9901      	ldr	r1, [sp, #4]
 8003278:	e7e4      	b.n	8003244 <__divdi3+0x120>
 800327a:	2320      	movs	r3, #32
 800327c:	4662      	mov	r2, ip
 800327e:	4651      	mov	r1, sl
 8003280:	1a9b      	subs	r3, r3, r2
 8003282:	40d9      	lsrs	r1, r3
 8003284:	4640      	mov	r0, r8
 8003286:	9100      	str	r1, [sp, #0]
 8003288:	4661      	mov	r1, ip
 800328a:	4088      	lsls	r0, r1
 800328c:	0003      	movs	r3, r0
 800328e:	9900      	ldr	r1, [sp, #0]
 8003290:	430b      	orrs	r3, r1
 8003292:	e780      	b.n	8003196 <__divdi3+0x72>
 8003294:	4662      	mov	r2, ip
 8003296:	2320      	movs	r3, #32
 8003298:	1a9b      	subs	r3, r3, r2
 800329a:	002a      	movs	r2, r5
 800329c:	409a      	lsls	r2, r3
 800329e:	0026      	movs	r6, r4
 80032a0:	0013      	movs	r3, r2
 80032a2:	4662      	mov	r2, ip
 80032a4:	40d6      	lsrs	r6, r2
 80032a6:	431e      	orrs	r6, r3
 80032a8:	e7b8      	b.n	800321c <__divdi3+0xf8>
 80032aa:	4661      	mov	r1, ip
 80032ac:	2620      	movs	r6, #32
 80032ae:	2701      	movs	r7, #1
 80032b0:	1a76      	subs	r6, r6, r1
 80032b2:	2000      	movs	r0, #0
 80032b4:	2100      	movs	r1, #0
 80032b6:	40f7      	lsrs	r7, r6
 80032b8:	9000      	str	r0, [sp, #0]
 80032ba:	9101      	str	r1, [sp, #4]
 80032bc:	9701      	str	r7, [sp, #4]
 80032be:	e781      	b.n	80031c4 <__divdi3+0xa0>
 80032c0:	4667      	mov	r7, ip
 80032c2:	2320      	movs	r3, #32
 80032c4:	4662      	mov	r2, ip
 80032c6:	0035      	movs	r5, r6
 80032c8:	40bc      	lsls	r4, r7
 80032ca:	1a9b      	subs	r3, r3, r2
 80032cc:	40dd      	lsrs	r5, r3
 80032ce:	0023      	movs	r3, r4
 80032d0:	432b      	orrs	r3, r5
 80032d2:	e7ad      	b.n	8003230 <__divdi3+0x10c>

080032d4 <__clzdi2>:
 80032d4:	b510      	push	{r4, lr}
 80032d6:	2900      	cmp	r1, #0
 80032d8:	d103      	bne.n	80032e2 <__clzdi2+0xe>
 80032da:	f7ff ff05 	bl	80030e8 <__clzsi2>
 80032de:	3020      	adds	r0, #32
 80032e0:	e002      	b.n	80032e8 <__clzdi2+0x14>
 80032e2:	1c08      	adds	r0, r1, #0
 80032e4:	f7ff ff00 	bl	80030e8 <__clzsi2>
 80032e8:	bd10      	pop	{r4, pc}
 80032ea:	46c0      	nop			; (mov r8, r8)

080032ec <__NVIC_EnableIRQ>:
  \brief   Enable Interrupt
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn){
 80032ec:	b580      	push	{r7, lr}
 80032ee:	b082      	sub	sp, #8
 80032f0:	af00      	add	r7, sp, #0
 80032f2:	0002      	movs	r2, r0
 80032f4:	1dfb      	adds	r3, r7, #7
 80032f6:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80032f8:	1dfb      	adds	r3, r7, #7
 80032fa:	781b      	ldrb	r3, [r3, #0]
 80032fc:	2b7f      	cmp	r3, #127	; 0x7f
 80032fe:	d809      	bhi.n	8003314 <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003300:	1dfb      	adds	r3, r7, #7
 8003302:	781b      	ldrb	r3, [r3, #0]
 8003304:	001a      	movs	r2, r3
 8003306:	231f      	movs	r3, #31
 8003308:	401a      	ands	r2, r3
 800330a:	4b04      	ldr	r3, [pc, #16]	; (800331c <__NVIC_EnableIRQ+0x30>)
 800330c:	2101      	movs	r1, #1
 800330e:	4091      	lsls	r1, r2
 8003310:	000a      	movs	r2, r1
 8003312:	601a      	str	r2, [r3, #0]
  }
}
 8003314:	46c0      	nop			; (mov r8, r8)
 8003316:	46bd      	mov	sp, r7
 8003318:	b002      	add	sp, #8
 800331a:	bd80      	pop	{r7, pc}
 800331c:	e000e100 	.word	0xe000e100

08003320 <__NVIC_SetPriority>:
           or negative to specify a processor exception.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority){
 8003320:	b590      	push	{r4, r7, lr}
 8003322:	b083      	sub	sp, #12
 8003324:	af00      	add	r7, sp, #0
 8003326:	0002      	movs	r2, r0
 8003328:	6039      	str	r1, [r7, #0]
 800332a:	1dfb      	adds	r3, r7, #7
 800332c:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800332e:	1dfb      	adds	r3, r7, #7
 8003330:	781b      	ldrb	r3, [r3, #0]
 8003332:	2b7f      	cmp	r3, #127	; 0x7f
 8003334:	d828      	bhi.n	8003388 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)] = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003336:	4a2f      	ldr	r2, [pc, #188]	; (80033f4 <__NVIC_SetPriority+0xd4>)
 8003338:	1dfb      	adds	r3, r7, #7
 800333a:	781b      	ldrb	r3, [r3, #0]
 800333c:	b25b      	sxtb	r3, r3
 800333e:	089b      	lsrs	r3, r3, #2
 8003340:	33c0      	adds	r3, #192	; 0xc0
 8003342:	009b      	lsls	r3, r3, #2
 8003344:	589b      	ldr	r3, [r3, r2]
 8003346:	1dfa      	adds	r2, r7, #7
 8003348:	7812      	ldrb	r2, [r2, #0]
 800334a:	0011      	movs	r1, r2
 800334c:	2203      	movs	r2, #3
 800334e:	400a      	ands	r2, r1
 8003350:	00d2      	lsls	r2, r2, #3
 8003352:	21ff      	movs	r1, #255	; 0xff
 8003354:	4091      	lsls	r1, r2
 8003356:	000a      	movs	r2, r1
 8003358:	43d2      	mvns	r2, r2
 800335a:	401a      	ands	r2, r3
 800335c:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800335e:	683b      	ldr	r3, [r7, #0]
 8003360:	019b      	lsls	r3, r3, #6
 8003362:	22ff      	movs	r2, #255	; 0xff
 8003364:	401a      	ands	r2, r3
 8003366:	1dfb      	adds	r3, r7, #7
 8003368:	781b      	ldrb	r3, [r3, #0]
 800336a:	0018      	movs	r0, r3
 800336c:	2303      	movs	r3, #3
 800336e:	4003      	ands	r3, r0
 8003370:	00db      	lsls	r3, r3, #3
 8003372:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)] = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003374:	481f      	ldr	r0, [pc, #124]	; (80033f4 <__NVIC_SetPriority+0xd4>)
 8003376:	1dfb      	adds	r3, r7, #7
 8003378:	781b      	ldrb	r3, [r3, #0]
 800337a:	b25b      	sxtb	r3, r3
 800337c:	089b      	lsrs	r3, r3, #2
 800337e:	430a      	orrs	r2, r1
 8003380:	33c0      	adds	r3, #192	; 0xc0
 8003382:	009b      	lsls	r3, r3, #2
 8003384:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8003386:	e031      	b.n	80033ec <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003388:	4a1b      	ldr	r2, [pc, #108]	; (80033f8 <__NVIC_SetPriority+0xd8>)
 800338a:	1dfb      	adds	r3, r7, #7
 800338c:	781b      	ldrb	r3, [r3, #0]
 800338e:	0019      	movs	r1, r3
 8003390:	230f      	movs	r3, #15
 8003392:	400b      	ands	r3, r1
 8003394:	3b08      	subs	r3, #8
 8003396:	089b      	lsrs	r3, r3, #2
 8003398:	3306      	adds	r3, #6
 800339a:	009b      	lsls	r3, r3, #2
 800339c:	18d3      	adds	r3, r2, r3
 800339e:	3304      	adds	r3, #4
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	1dfa      	adds	r2, r7, #7
 80033a4:	7812      	ldrb	r2, [r2, #0]
 80033a6:	0011      	movs	r1, r2
 80033a8:	2203      	movs	r2, #3
 80033aa:	400a      	ands	r2, r1
 80033ac:	00d2      	lsls	r2, r2, #3
 80033ae:	21ff      	movs	r1, #255	; 0xff
 80033b0:	4091      	lsls	r1, r2
 80033b2:	000a      	movs	r2, r1
 80033b4:	43d2      	mvns	r2, r2
 80033b6:	401a      	ands	r2, r3
 80033b8:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80033ba:	683b      	ldr	r3, [r7, #0]
 80033bc:	019b      	lsls	r3, r3, #6
 80033be:	22ff      	movs	r2, #255	; 0xff
 80033c0:	401a      	ands	r2, r3
 80033c2:	1dfb      	adds	r3, r7, #7
 80033c4:	781b      	ldrb	r3, [r3, #0]
 80033c6:	0018      	movs	r0, r3
 80033c8:	2303      	movs	r3, #3
 80033ca:	4003      	ands	r3, r0
 80033cc:	00db      	lsls	r3, r3, #3
 80033ce:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80033d0:	4809      	ldr	r0, [pc, #36]	; (80033f8 <__NVIC_SetPriority+0xd8>)
 80033d2:	1dfb      	adds	r3, r7, #7
 80033d4:	781b      	ldrb	r3, [r3, #0]
 80033d6:	001c      	movs	r4, r3
 80033d8:	230f      	movs	r3, #15
 80033da:	4023      	ands	r3, r4
 80033dc:	3b08      	subs	r3, #8
 80033de:	089b      	lsrs	r3, r3, #2
 80033e0:	430a      	orrs	r2, r1
 80033e2:	3306      	adds	r3, #6
 80033e4:	009b      	lsls	r3, r3, #2
 80033e6:	18c3      	adds	r3, r0, r3
 80033e8:	3304      	adds	r3, #4
 80033ea:	601a      	str	r2, [r3, #0]
}
 80033ec:	46c0      	nop			; (mov r8, r8)
 80033ee:	46bd      	mov	sp, r7
 80033f0:	b003      	add	sp, #12
 80033f2:	bd90      	pop	{r4, r7, pc}
 80033f4:	e000e100 	.word	0xe000e100
 80033f8:	e000ed00 	.word	0xe000ed00

080033fc <canFilterConfig>:
/*                                                                            */
/******************************************************************************/

/******************* Configure the CAN to filter the data frames from the RPI ********************/

void canFilterConfig(){
 80033fc:	b580      	push	{r7, lr}
 80033fe:	af00      	add	r7, sp, #0

  printf("********** CAN FILTER CONFIGURATION **********\r\n");
 8003400:	4bfd      	ldr	r3, [pc, #1012]	; (80037f8 <canFilterConfig+0x3fc>)
 8003402:	0018      	movs	r0, r3
 8003404:	f004 fcf2 	bl	8007dec <puts>

  // Enter filter initialization mode
  CAN->FMR |= CAN_FMR_FINIT; // 0: Active filters mode, 1: Initialization mode for the filters
 8003408:	4afc      	ldr	r2, [pc, #1008]	; (80037fc <canFilterConfig+0x400>)
 800340a:	2380      	movs	r3, #128	; 0x80
 800340c:	009b      	lsls	r3, r3, #2
 800340e:	58d3      	ldr	r3, [r2, r3]
 8003410:	49fa      	ldr	r1, [pc, #1000]	; (80037fc <canFilterConfig+0x400>)
 8003412:	2201      	movs	r2, #1
 8003414:	431a      	orrs	r2, r3
 8003416:	2380      	movs	r3, #128	; 0x80
 8003418:	009b      	lsls	r3, r3, #2
 800341a:	50ca      	str	r2, [r1, r3]

  // Identifier mode for the filters 0 to 5
  CAN->FM1R |= CAN_FM1R_FBM0 | CAN_FM1R_FBM1 | CAN_FM1R_FBM2 | CAN_FM1R_FBM3 | CAN_FM1R_FBM4 | CAN_FM1R_FBM5;  // 0: Mask mode, 1: Identifier mode
 800341c:	4af7      	ldr	r2, [pc, #988]	; (80037fc <canFilterConfig+0x400>)
 800341e:	2381      	movs	r3, #129	; 0x81
 8003420:	009b      	lsls	r3, r3, #2
 8003422:	58d3      	ldr	r3, [r2, r3]
 8003424:	49f5      	ldr	r1, [pc, #980]	; (80037fc <canFilterConfig+0x400>)
 8003426:	223f      	movs	r2, #63	; 0x3f
 8003428:	431a      	orrs	r2, r3
 800342a:	2381      	movs	r3, #129	; 0x81
 800342c:	009b      	lsls	r3, r3, #2
 800342e:	50ca      	str	r2, [r1, r3]

  // Identifier mode for the filters 6 to 11
  CAN->FM1R |= CAN_FM1R_FBM6 | CAN_FM1R_FBM7 | CAN_FM1R_FBM8 | CAN_FM1R_FBM9 | CAN_FM1R_FBM10 | CAN_FM1R_FBM11;  // 0: Mask mode, 1: Identifier mode
 8003430:	4af2      	ldr	r2, [pc, #968]	; (80037fc <canFilterConfig+0x400>)
 8003432:	2381      	movs	r3, #129	; 0x81
 8003434:	009b      	lsls	r3, r3, #2
 8003436:	58d3      	ldr	r3, [r2, r3]
 8003438:	49f0      	ldr	r1, [pc, #960]	; (80037fc <canFilterConfig+0x400>)
 800343a:	22fc      	movs	r2, #252	; 0xfc
 800343c:	0112      	lsls	r2, r2, #4
 800343e:	431a      	orrs	r2, r3
 8003440:	2381      	movs	r3, #129	; 0x81
 8003442:	009b      	lsls	r3, r3, #2
 8003444:	50ca      	str	r2, [r1, r3]

  // Single 32-bit scale configuration mode for the filters 0 to 5
  CAN->FS1R |= CAN_FS1R_FSC0 | CAN_FS1R_FSC1 | CAN_FS1R_FSC2 | CAN_FS1R_FSC3 | CAN_FS1R_FSC4 | CAN_FS1R_FSC5; // 0: Dual 16-bit scale configuration, 1: Single 32-bit scale configuration
 8003446:	4aed      	ldr	r2, [pc, #948]	; (80037fc <canFilterConfig+0x400>)
 8003448:	2383      	movs	r3, #131	; 0x83
 800344a:	009b      	lsls	r3, r3, #2
 800344c:	58d3      	ldr	r3, [r2, r3]
 800344e:	49eb      	ldr	r1, [pc, #940]	; (80037fc <canFilterConfig+0x400>)
 8003450:	223f      	movs	r2, #63	; 0x3f
 8003452:	431a      	orrs	r2, r3
 8003454:	2383      	movs	r3, #131	; 0x83
 8003456:	009b      	lsls	r3, r3, #2
 8003458:	50ca      	str	r2, [r1, r3]

  // Single 32-bit scale configuration mode for the filters 6 to 11
  CAN->FS1R |= CAN_FS1R_FSC6 | CAN_FS1R_FSC7 | CAN_FS1R_FSC8 | CAN_FS1R_FSC9 | CAN_FS1R_FSC10 | CAN_FS1R_FSC11; // 0: Dual 16-bit scale configuration, 1: Single 32-bit scale configuration
 800345a:	4ae8      	ldr	r2, [pc, #928]	; (80037fc <canFilterConfig+0x400>)
 800345c:	2383      	movs	r3, #131	; 0x83
 800345e:	009b      	lsls	r3, r3, #2
 8003460:	58d3      	ldr	r3, [r2, r3]
 8003462:	49e6      	ldr	r1, [pc, #920]	; (80037fc <canFilterConfig+0x400>)
 8003464:	22fc      	movs	r2, #252	; 0xfc
 8003466:	0112      	lsls	r2, r2, #4
 8003468:	431a      	orrs	r2, r3
 800346a:	2383      	movs	r3, #131	; 0x83
 800346c:	009b      	lsls	r3, r3, #2
 800346e:	50ca      	str	r2, [r1, r3]

  // The message passing through the filter 0 to 5 will be stored in the FIFO 0
  CAN->FFA1R &= ~CAN_FFA1R_FFA0_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003470:	4ae2      	ldr	r2, [pc, #904]	; (80037fc <canFilterConfig+0x400>)
 8003472:	2385      	movs	r3, #133	; 0x85
 8003474:	009b      	lsls	r3, r3, #2
 8003476:	58d3      	ldr	r3, [r2, r3]
 8003478:	49e0      	ldr	r1, [pc, #896]	; (80037fc <canFilterConfig+0x400>)
 800347a:	2201      	movs	r2, #1
 800347c:	4393      	bics	r3, r2
 800347e:	001a      	movs	r2, r3
 8003480:	2385      	movs	r3, #133	; 0x85
 8003482:	009b      	lsls	r3, r3, #2
 8003484:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA1_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003486:	4add      	ldr	r2, [pc, #884]	; (80037fc <canFilterConfig+0x400>)
 8003488:	2385      	movs	r3, #133	; 0x85
 800348a:	009b      	lsls	r3, r3, #2
 800348c:	58d3      	ldr	r3, [r2, r3]
 800348e:	49db      	ldr	r1, [pc, #876]	; (80037fc <canFilterConfig+0x400>)
 8003490:	2202      	movs	r2, #2
 8003492:	4393      	bics	r3, r2
 8003494:	001a      	movs	r2, r3
 8003496:	2385      	movs	r3, #133	; 0x85
 8003498:	009b      	lsls	r3, r3, #2
 800349a:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA2_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 800349c:	4ad7      	ldr	r2, [pc, #860]	; (80037fc <canFilterConfig+0x400>)
 800349e:	2385      	movs	r3, #133	; 0x85
 80034a0:	009b      	lsls	r3, r3, #2
 80034a2:	58d3      	ldr	r3, [r2, r3]
 80034a4:	49d5      	ldr	r1, [pc, #852]	; (80037fc <canFilterConfig+0x400>)
 80034a6:	2204      	movs	r2, #4
 80034a8:	4393      	bics	r3, r2
 80034aa:	001a      	movs	r2, r3
 80034ac:	2385      	movs	r3, #133	; 0x85
 80034ae:	009b      	lsls	r3, r3, #2
 80034b0:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA3_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80034b2:	4ad2      	ldr	r2, [pc, #840]	; (80037fc <canFilterConfig+0x400>)
 80034b4:	2385      	movs	r3, #133	; 0x85
 80034b6:	009b      	lsls	r3, r3, #2
 80034b8:	58d3      	ldr	r3, [r2, r3]
 80034ba:	49d0      	ldr	r1, [pc, #832]	; (80037fc <canFilterConfig+0x400>)
 80034bc:	2208      	movs	r2, #8
 80034be:	4393      	bics	r3, r2
 80034c0:	001a      	movs	r2, r3
 80034c2:	2385      	movs	r3, #133	; 0x85
 80034c4:	009b      	lsls	r3, r3, #2
 80034c6:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA4_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80034c8:	4acc      	ldr	r2, [pc, #816]	; (80037fc <canFilterConfig+0x400>)
 80034ca:	2385      	movs	r3, #133	; 0x85
 80034cc:	009b      	lsls	r3, r3, #2
 80034ce:	58d3      	ldr	r3, [r2, r3]
 80034d0:	49ca      	ldr	r1, [pc, #808]	; (80037fc <canFilterConfig+0x400>)
 80034d2:	2210      	movs	r2, #16
 80034d4:	4393      	bics	r3, r2
 80034d6:	001a      	movs	r2, r3
 80034d8:	2385      	movs	r3, #133	; 0x85
 80034da:	009b      	lsls	r3, r3, #2
 80034dc:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA5_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80034de:	4ac7      	ldr	r2, [pc, #796]	; (80037fc <canFilterConfig+0x400>)
 80034e0:	2385      	movs	r3, #133	; 0x85
 80034e2:	009b      	lsls	r3, r3, #2
 80034e4:	58d3      	ldr	r3, [r2, r3]
 80034e6:	49c5      	ldr	r1, [pc, #788]	; (80037fc <canFilterConfig+0x400>)
 80034e8:	2220      	movs	r2, #32
 80034ea:	4393      	bics	r3, r2
 80034ec:	001a      	movs	r2, r3
 80034ee:	2385      	movs	r3, #133	; 0x85
 80034f0:	009b      	lsls	r3, r3, #2
 80034f2:	50ca      	str	r2, [r1, r3]

  CAN->FFA1R |= CAN_FFA1R_FFA6_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80034f4:	4ac1      	ldr	r2, [pc, #772]	; (80037fc <canFilterConfig+0x400>)
 80034f6:	2385      	movs	r3, #133	; 0x85
 80034f8:	009b      	lsls	r3, r3, #2
 80034fa:	58d3      	ldr	r3, [r2, r3]
 80034fc:	49bf      	ldr	r1, [pc, #764]	; (80037fc <canFilterConfig+0x400>)
 80034fe:	2240      	movs	r2, #64	; 0x40
 8003500:	431a      	orrs	r2, r3
 8003502:	2385      	movs	r3, #133	; 0x85
 8003504:	009b      	lsls	r3, r3, #2
 8003506:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA7_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003508:	4abc      	ldr	r2, [pc, #752]	; (80037fc <canFilterConfig+0x400>)
 800350a:	2385      	movs	r3, #133	; 0x85
 800350c:	009b      	lsls	r3, r3, #2
 800350e:	58d3      	ldr	r3, [r2, r3]
 8003510:	49ba      	ldr	r1, [pc, #744]	; (80037fc <canFilterConfig+0x400>)
 8003512:	2280      	movs	r2, #128	; 0x80
 8003514:	431a      	orrs	r2, r3
 8003516:	2385      	movs	r3, #133	; 0x85
 8003518:	009b      	lsls	r3, r3, #2
 800351a:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA8_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 800351c:	4ab7      	ldr	r2, [pc, #732]	; (80037fc <canFilterConfig+0x400>)
 800351e:	2385      	movs	r3, #133	; 0x85
 8003520:	009b      	lsls	r3, r3, #2
 8003522:	58d3      	ldr	r3, [r2, r3]
 8003524:	49b5      	ldr	r1, [pc, #724]	; (80037fc <canFilterConfig+0x400>)
 8003526:	2280      	movs	r2, #128	; 0x80
 8003528:	0052      	lsls	r2, r2, #1
 800352a:	431a      	orrs	r2, r3
 800352c:	2385      	movs	r3, #133	; 0x85
 800352e:	009b      	lsls	r3, r3, #2
 8003530:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA9_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003532:	4ab2      	ldr	r2, [pc, #712]	; (80037fc <canFilterConfig+0x400>)
 8003534:	2385      	movs	r3, #133	; 0x85
 8003536:	009b      	lsls	r3, r3, #2
 8003538:	58d3      	ldr	r3, [r2, r3]
 800353a:	49b0      	ldr	r1, [pc, #704]	; (80037fc <canFilterConfig+0x400>)
 800353c:	2280      	movs	r2, #128	; 0x80
 800353e:	0092      	lsls	r2, r2, #2
 8003540:	431a      	orrs	r2, r3
 8003542:	2385      	movs	r3, #133	; 0x85
 8003544:	009b      	lsls	r3, r3, #2
 8003546:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA10_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003548:	4aac      	ldr	r2, [pc, #688]	; (80037fc <canFilterConfig+0x400>)
 800354a:	2385      	movs	r3, #133	; 0x85
 800354c:	009b      	lsls	r3, r3, #2
 800354e:	58d3      	ldr	r3, [r2, r3]
 8003550:	49aa      	ldr	r1, [pc, #680]	; (80037fc <canFilterConfig+0x400>)
 8003552:	2280      	movs	r2, #128	; 0x80
 8003554:	00d2      	lsls	r2, r2, #3
 8003556:	431a      	orrs	r2, r3
 8003558:	2385      	movs	r3, #133	; 0x85
 800355a:	009b      	lsls	r3, r3, #2
 800355c:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA11_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 800355e:	4aa7      	ldr	r2, [pc, #668]	; (80037fc <canFilterConfig+0x400>)
 8003560:	2385      	movs	r3, #133	; 0x85
 8003562:	009b      	lsls	r3, r3, #2
 8003564:	58d3      	ldr	r3, [r2, r3]
 8003566:	49a5      	ldr	r1, [pc, #660]	; (80037fc <canFilterConfig+0x400>)
 8003568:	2280      	movs	r2, #128	; 0x80
 800356a:	0112      	lsls	r2, r2, #4
 800356c:	431a      	orrs	r2, r3
 800356e:	2385      	movs	r3, #133	; 0x85
 8003570:	009b      	lsls	r3, r3, #2
 8003572:	50ca      	str	r2, [r1, r3]

  // Activate filter 0 to 5
  CAN->FA1R |= CAN_FA1R_FACT0 | CAN_FA1R_FACT1 | CAN_FA1R_FACT2 | CAN_FA1R_FACT3 | CAN_FA1R_FACT4 | CAN_FA1R_FACT5;
 8003574:	4aa1      	ldr	r2, [pc, #644]	; (80037fc <canFilterConfig+0x400>)
 8003576:	2387      	movs	r3, #135	; 0x87
 8003578:	009b      	lsls	r3, r3, #2
 800357a:	58d3      	ldr	r3, [r2, r3]
 800357c:	499f      	ldr	r1, [pc, #636]	; (80037fc <canFilterConfig+0x400>)
 800357e:	223f      	movs	r2, #63	; 0x3f
 8003580:	431a      	orrs	r2, r3
 8003582:	2387      	movs	r3, #135	; 0x87
 8003584:	009b      	lsls	r3, r3, #2
 8003586:	50ca      	str	r2, [r1, r3]

  // Activate filter 6 to 11
  CAN->FA1R |= CAN_FA1R_FACT6 | CAN_FA1R_FACT7 | CAN_FA1R_FACT8 | CAN_FA1R_FACT9 | CAN_FA1R_FACT10 | CAN_FA1R_FACT11;
 8003588:	4a9c      	ldr	r2, [pc, #624]	; (80037fc <canFilterConfig+0x400>)
 800358a:	2387      	movs	r3, #135	; 0x87
 800358c:	009b      	lsls	r3, r3, #2
 800358e:	58d3      	ldr	r3, [r2, r3]
 8003590:	499a      	ldr	r1, [pc, #616]	; (80037fc <canFilterConfig+0x400>)
 8003592:	22fc      	movs	r2, #252	; 0xfc
 8003594:	0112      	lsls	r2, r2, #4
 8003596:	431a      	orrs	r2, r3
 8003598:	2387      	movs	r3, #135	; 0x87
 800359a:	009b      	lsls	r3, r3, #2
 800359c:	50ca      	str	r2, [r1, r3]
  /********** FIFO 0 **********/
  /* Filter bank 0 register 1 and filter bank 0 register 2 are both identifier registers */
  /* The data frames will be accepted only if the ID is between 0x01 and 0x06 */

  // Filter bank 0 register 1
  CAN->sFilterRegister[0].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800359e:	4a97      	ldr	r2, [pc, #604]	; (80037fc <canFilterConfig+0x400>)
 80035a0:	2390      	movs	r3, #144	; 0x90
 80035a2:	009b      	lsls	r3, r3, #2
 80035a4:	58d3      	ldr	r3, [r2, r3]
 80035a6:	4a95      	ldr	r2, [pc, #596]	; (80037fc <canFilterConfig+0x400>)
 80035a8:	2390      	movs	r3, #144	; 0x90
 80035aa:	009b      	lsls	r3, r3, #2
 80035ac:	2100      	movs	r1, #0
 80035ae:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[0].FR1 |= (0x01 << CAN_F0R1_FB21_Pos); // Identifier is 0x01
 80035b0:	4a92      	ldr	r2, [pc, #584]	; (80037fc <canFilterConfig+0x400>)
 80035b2:	2390      	movs	r3, #144	; 0x90
 80035b4:	009b      	lsls	r3, r3, #2
 80035b6:	58d3      	ldr	r3, [r2, r3]
 80035b8:	4990      	ldr	r1, [pc, #576]	; (80037fc <canFilterConfig+0x400>)
 80035ba:	2280      	movs	r2, #128	; 0x80
 80035bc:	0392      	lsls	r2, r2, #14
 80035be:	431a      	orrs	r2, r3
 80035c0:	2390      	movs	r3, #144	; 0x90
 80035c2:	009b      	lsls	r3, r3, #2
 80035c4:	50ca      	str	r2, [r1, r3]

  // Filter bank 0 register 2
  CAN->sFilterRegister[0].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80035c6:	4a8d      	ldr	r2, [pc, #564]	; (80037fc <canFilterConfig+0x400>)
 80035c8:	2391      	movs	r3, #145	; 0x91
 80035ca:	009b      	lsls	r3, r3, #2
 80035cc:	58d3      	ldr	r3, [r2, r3]
 80035ce:	4a8b      	ldr	r2, [pc, #556]	; (80037fc <canFilterConfig+0x400>)
 80035d0:	2391      	movs	r3, #145	; 0x91
 80035d2:	009b      	lsls	r3, r3, #2
 80035d4:	2100      	movs	r1, #0
 80035d6:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[0].FR2 |= (0x01 << CAN_F0R2_FB21_Pos); // Identifier is 0x01
 80035d8:	4a88      	ldr	r2, [pc, #544]	; (80037fc <canFilterConfig+0x400>)
 80035da:	2391      	movs	r3, #145	; 0x91
 80035dc:	009b      	lsls	r3, r3, #2
 80035de:	58d3      	ldr	r3, [r2, r3]
 80035e0:	4986      	ldr	r1, [pc, #536]	; (80037fc <canFilterConfig+0x400>)
 80035e2:	2280      	movs	r2, #128	; 0x80
 80035e4:	0392      	lsls	r2, r2, #14
 80035e6:	431a      	orrs	r2, r3
 80035e8:	2391      	movs	r3, #145	; 0x91
 80035ea:	009b      	lsls	r3, r3, #2
 80035ec:	50ca      	str	r2, [r1, r3]

  // Filter bank 1 register 1
  CAN->sFilterRegister[1].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80035ee:	4a83      	ldr	r2, [pc, #524]	; (80037fc <canFilterConfig+0x400>)
 80035f0:	2392      	movs	r3, #146	; 0x92
 80035f2:	009b      	lsls	r3, r3, #2
 80035f4:	58d3      	ldr	r3, [r2, r3]
 80035f6:	4a81      	ldr	r2, [pc, #516]	; (80037fc <canFilterConfig+0x400>)
 80035f8:	2392      	movs	r3, #146	; 0x92
 80035fa:	009b      	lsls	r3, r3, #2
 80035fc:	2100      	movs	r1, #0
 80035fe:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[1].FR1 |= (0x02 << CAN_F0R1_FB21_Pos); // Identifier is 0x02
 8003600:	4a7e      	ldr	r2, [pc, #504]	; (80037fc <canFilterConfig+0x400>)
 8003602:	2392      	movs	r3, #146	; 0x92
 8003604:	009b      	lsls	r3, r3, #2
 8003606:	58d3      	ldr	r3, [r2, r3]
 8003608:	497c      	ldr	r1, [pc, #496]	; (80037fc <canFilterConfig+0x400>)
 800360a:	2280      	movs	r2, #128	; 0x80
 800360c:	03d2      	lsls	r2, r2, #15
 800360e:	431a      	orrs	r2, r3
 8003610:	2392      	movs	r3, #146	; 0x92
 8003612:	009b      	lsls	r3, r3, #2
 8003614:	50ca      	str	r2, [r1, r3]

  // Filter bank 1 register 2
  CAN->sFilterRegister[1].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003616:	4a79      	ldr	r2, [pc, #484]	; (80037fc <canFilterConfig+0x400>)
 8003618:	2393      	movs	r3, #147	; 0x93
 800361a:	009b      	lsls	r3, r3, #2
 800361c:	58d3      	ldr	r3, [r2, r3]
 800361e:	4a77      	ldr	r2, [pc, #476]	; (80037fc <canFilterConfig+0x400>)
 8003620:	2393      	movs	r3, #147	; 0x93
 8003622:	009b      	lsls	r3, r3, #2
 8003624:	2100      	movs	r1, #0
 8003626:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[1].FR2 |= (0x02 << CAN_F0R2_FB21_Pos); // Identifier is 0x02
 8003628:	4a74      	ldr	r2, [pc, #464]	; (80037fc <canFilterConfig+0x400>)
 800362a:	2393      	movs	r3, #147	; 0x93
 800362c:	009b      	lsls	r3, r3, #2
 800362e:	58d3      	ldr	r3, [r2, r3]
 8003630:	4972      	ldr	r1, [pc, #456]	; (80037fc <canFilterConfig+0x400>)
 8003632:	2280      	movs	r2, #128	; 0x80
 8003634:	03d2      	lsls	r2, r2, #15
 8003636:	431a      	orrs	r2, r3
 8003638:	2393      	movs	r3, #147	; 0x93
 800363a:	009b      	lsls	r3, r3, #2
 800363c:	50ca      	str	r2, [r1, r3]

  // Filter bank 2 register 1
  CAN->sFilterRegister[2].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800363e:	4a6f      	ldr	r2, [pc, #444]	; (80037fc <canFilterConfig+0x400>)
 8003640:	2394      	movs	r3, #148	; 0x94
 8003642:	009b      	lsls	r3, r3, #2
 8003644:	58d3      	ldr	r3, [r2, r3]
 8003646:	4a6d      	ldr	r2, [pc, #436]	; (80037fc <canFilterConfig+0x400>)
 8003648:	2394      	movs	r3, #148	; 0x94
 800364a:	009b      	lsls	r3, r3, #2
 800364c:	2100      	movs	r1, #0
 800364e:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[2].FR1 |= (0x03 << CAN_F0R1_FB21_Pos); // Identifier is 0x03
 8003650:	4a6a      	ldr	r2, [pc, #424]	; (80037fc <canFilterConfig+0x400>)
 8003652:	2394      	movs	r3, #148	; 0x94
 8003654:	009b      	lsls	r3, r3, #2
 8003656:	58d3      	ldr	r3, [r2, r3]
 8003658:	4968      	ldr	r1, [pc, #416]	; (80037fc <canFilterConfig+0x400>)
 800365a:	22c0      	movs	r2, #192	; 0xc0
 800365c:	03d2      	lsls	r2, r2, #15
 800365e:	431a      	orrs	r2, r3
 8003660:	2394      	movs	r3, #148	; 0x94
 8003662:	009b      	lsls	r3, r3, #2
 8003664:	50ca      	str	r2, [r1, r3]

  // Filter bank 2 register 2
  CAN->sFilterRegister[2].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003666:	4a65      	ldr	r2, [pc, #404]	; (80037fc <canFilterConfig+0x400>)
 8003668:	2395      	movs	r3, #149	; 0x95
 800366a:	009b      	lsls	r3, r3, #2
 800366c:	58d3      	ldr	r3, [r2, r3]
 800366e:	4a63      	ldr	r2, [pc, #396]	; (80037fc <canFilterConfig+0x400>)
 8003670:	2395      	movs	r3, #149	; 0x95
 8003672:	009b      	lsls	r3, r3, #2
 8003674:	2100      	movs	r1, #0
 8003676:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[2].FR2 |= (0x03 << CAN_F0R2_FB21_Pos); // Identifier is 0x03
 8003678:	4a60      	ldr	r2, [pc, #384]	; (80037fc <canFilterConfig+0x400>)
 800367a:	2395      	movs	r3, #149	; 0x95
 800367c:	009b      	lsls	r3, r3, #2
 800367e:	58d3      	ldr	r3, [r2, r3]
 8003680:	495e      	ldr	r1, [pc, #376]	; (80037fc <canFilterConfig+0x400>)
 8003682:	22c0      	movs	r2, #192	; 0xc0
 8003684:	03d2      	lsls	r2, r2, #15
 8003686:	431a      	orrs	r2, r3
 8003688:	2395      	movs	r3, #149	; 0x95
 800368a:	009b      	lsls	r3, r3, #2
 800368c:	50ca      	str	r2, [r1, r3]

  // Filter bank 3 register 1
  CAN->sFilterRegister[3].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800368e:	4a5b      	ldr	r2, [pc, #364]	; (80037fc <canFilterConfig+0x400>)
 8003690:	2396      	movs	r3, #150	; 0x96
 8003692:	009b      	lsls	r3, r3, #2
 8003694:	58d3      	ldr	r3, [r2, r3]
 8003696:	4a59      	ldr	r2, [pc, #356]	; (80037fc <canFilterConfig+0x400>)
 8003698:	2396      	movs	r3, #150	; 0x96
 800369a:	009b      	lsls	r3, r3, #2
 800369c:	2100      	movs	r1, #0
 800369e:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[3].FR1 |= (0x04 << CAN_F0R1_FB21_Pos); // Identifier is 0x04
 80036a0:	4a56      	ldr	r2, [pc, #344]	; (80037fc <canFilterConfig+0x400>)
 80036a2:	2396      	movs	r3, #150	; 0x96
 80036a4:	009b      	lsls	r3, r3, #2
 80036a6:	58d3      	ldr	r3, [r2, r3]
 80036a8:	4954      	ldr	r1, [pc, #336]	; (80037fc <canFilterConfig+0x400>)
 80036aa:	2280      	movs	r2, #128	; 0x80
 80036ac:	0412      	lsls	r2, r2, #16
 80036ae:	431a      	orrs	r2, r3
 80036b0:	2396      	movs	r3, #150	; 0x96
 80036b2:	009b      	lsls	r3, r3, #2
 80036b4:	50ca      	str	r2, [r1, r3]

  // Filter bank 3 register 2
  CAN->sFilterRegister[3].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80036b6:	4a51      	ldr	r2, [pc, #324]	; (80037fc <canFilterConfig+0x400>)
 80036b8:	2397      	movs	r3, #151	; 0x97
 80036ba:	009b      	lsls	r3, r3, #2
 80036bc:	58d3      	ldr	r3, [r2, r3]
 80036be:	4a4f      	ldr	r2, [pc, #316]	; (80037fc <canFilterConfig+0x400>)
 80036c0:	2397      	movs	r3, #151	; 0x97
 80036c2:	009b      	lsls	r3, r3, #2
 80036c4:	2100      	movs	r1, #0
 80036c6:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[3].FR2 |= (0x04 << CAN_F0R2_FB21_Pos); // Identifier is 0x04
 80036c8:	4a4c      	ldr	r2, [pc, #304]	; (80037fc <canFilterConfig+0x400>)
 80036ca:	2397      	movs	r3, #151	; 0x97
 80036cc:	009b      	lsls	r3, r3, #2
 80036ce:	58d3      	ldr	r3, [r2, r3]
 80036d0:	494a      	ldr	r1, [pc, #296]	; (80037fc <canFilterConfig+0x400>)
 80036d2:	2280      	movs	r2, #128	; 0x80
 80036d4:	0412      	lsls	r2, r2, #16
 80036d6:	431a      	orrs	r2, r3
 80036d8:	2397      	movs	r3, #151	; 0x97
 80036da:	009b      	lsls	r3, r3, #2
 80036dc:	50ca      	str	r2, [r1, r3]

  // Filter bank 4 register 1
  CAN->sFilterRegister[4].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80036de:	4a47      	ldr	r2, [pc, #284]	; (80037fc <canFilterConfig+0x400>)
 80036e0:	2398      	movs	r3, #152	; 0x98
 80036e2:	009b      	lsls	r3, r3, #2
 80036e4:	58d3      	ldr	r3, [r2, r3]
 80036e6:	4a45      	ldr	r2, [pc, #276]	; (80037fc <canFilterConfig+0x400>)
 80036e8:	2398      	movs	r3, #152	; 0x98
 80036ea:	009b      	lsls	r3, r3, #2
 80036ec:	2100      	movs	r1, #0
 80036ee:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[4].FR1 |= (0x05 << CAN_F0R1_FB21_Pos); // Identifier is 0x05
 80036f0:	4a42      	ldr	r2, [pc, #264]	; (80037fc <canFilterConfig+0x400>)
 80036f2:	2398      	movs	r3, #152	; 0x98
 80036f4:	009b      	lsls	r3, r3, #2
 80036f6:	58d3      	ldr	r3, [r2, r3]
 80036f8:	4940      	ldr	r1, [pc, #256]	; (80037fc <canFilterConfig+0x400>)
 80036fa:	22a0      	movs	r2, #160	; 0xa0
 80036fc:	0412      	lsls	r2, r2, #16
 80036fe:	431a      	orrs	r2, r3
 8003700:	2398      	movs	r3, #152	; 0x98
 8003702:	009b      	lsls	r3, r3, #2
 8003704:	50ca      	str	r2, [r1, r3]

  // Filter bank 4 register 2
  CAN->sFilterRegister[4].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003706:	4a3d      	ldr	r2, [pc, #244]	; (80037fc <canFilterConfig+0x400>)
 8003708:	2399      	movs	r3, #153	; 0x99
 800370a:	009b      	lsls	r3, r3, #2
 800370c:	58d3      	ldr	r3, [r2, r3]
 800370e:	4a3b      	ldr	r2, [pc, #236]	; (80037fc <canFilterConfig+0x400>)
 8003710:	2399      	movs	r3, #153	; 0x99
 8003712:	009b      	lsls	r3, r3, #2
 8003714:	2100      	movs	r1, #0
 8003716:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[4].FR2 |= (0x05 << CAN_F0R2_FB21_Pos); // Identifier is 0x05
 8003718:	4a38      	ldr	r2, [pc, #224]	; (80037fc <canFilterConfig+0x400>)
 800371a:	2399      	movs	r3, #153	; 0x99
 800371c:	009b      	lsls	r3, r3, #2
 800371e:	58d3      	ldr	r3, [r2, r3]
 8003720:	4936      	ldr	r1, [pc, #216]	; (80037fc <canFilterConfig+0x400>)
 8003722:	22a0      	movs	r2, #160	; 0xa0
 8003724:	0412      	lsls	r2, r2, #16
 8003726:	431a      	orrs	r2, r3
 8003728:	2399      	movs	r3, #153	; 0x99
 800372a:	009b      	lsls	r3, r3, #2
 800372c:	50ca      	str	r2, [r1, r3]

  // Filter bank 5 register 1
  CAN->sFilterRegister[5].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800372e:	4a33      	ldr	r2, [pc, #204]	; (80037fc <canFilterConfig+0x400>)
 8003730:	239a      	movs	r3, #154	; 0x9a
 8003732:	009b      	lsls	r3, r3, #2
 8003734:	58d3      	ldr	r3, [r2, r3]
 8003736:	4a31      	ldr	r2, [pc, #196]	; (80037fc <canFilterConfig+0x400>)
 8003738:	239a      	movs	r3, #154	; 0x9a
 800373a:	009b      	lsls	r3, r3, #2
 800373c:	2100      	movs	r1, #0
 800373e:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[5].FR1 |= (0x06 << CAN_F0R1_FB21_Pos); // Identifier is 0x06
 8003740:	4a2e      	ldr	r2, [pc, #184]	; (80037fc <canFilterConfig+0x400>)
 8003742:	239a      	movs	r3, #154	; 0x9a
 8003744:	009b      	lsls	r3, r3, #2
 8003746:	58d3      	ldr	r3, [r2, r3]
 8003748:	492c      	ldr	r1, [pc, #176]	; (80037fc <canFilterConfig+0x400>)
 800374a:	22c0      	movs	r2, #192	; 0xc0
 800374c:	0412      	lsls	r2, r2, #16
 800374e:	431a      	orrs	r2, r3
 8003750:	239a      	movs	r3, #154	; 0x9a
 8003752:	009b      	lsls	r3, r3, #2
 8003754:	50ca      	str	r2, [r1, r3]

  // Filter bank 5 register 2
  CAN->sFilterRegister[5].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003756:	4a29      	ldr	r2, [pc, #164]	; (80037fc <canFilterConfig+0x400>)
 8003758:	239b      	movs	r3, #155	; 0x9b
 800375a:	009b      	lsls	r3, r3, #2
 800375c:	58d3      	ldr	r3, [r2, r3]
 800375e:	4a27      	ldr	r2, [pc, #156]	; (80037fc <canFilterConfig+0x400>)
 8003760:	239b      	movs	r3, #155	; 0x9b
 8003762:	009b      	lsls	r3, r3, #2
 8003764:	2100      	movs	r1, #0
 8003766:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[5].FR2 |= (0x06 << CAN_F0R2_FB21_Pos); // Identifier is 0x06
 8003768:	4a24      	ldr	r2, [pc, #144]	; (80037fc <canFilterConfig+0x400>)
 800376a:	239b      	movs	r3, #155	; 0x9b
 800376c:	009b      	lsls	r3, r3, #2
 800376e:	58d3      	ldr	r3, [r2, r3]
 8003770:	4922      	ldr	r1, [pc, #136]	; (80037fc <canFilterConfig+0x400>)
 8003772:	22c0      	movs	r2, #192	; 0xc0
 8003774:	0412      	lsls	r2, r2, #16
 8003776:	431a      	orrs	r2, r3
 8003778:	239b      	movs	r3, #155	; 0x9b
 800377a:	009b      	lsls	r3, r3, #2
 800377c:	50ca      	str	r2, [r1, r3]

  /* Filter bank 0 register 1 and filter bank 0 register 2 are both identifier registers */
  /* The data frames will be accepted only if the ID is between 0x01 and 0x06 */

  // Filter bank 6 register 1
  CAN->sFilterRegister[6].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800377e:	4a1f      	ldr	r2, [pc, #124]	; (80037fc <canFilterConfig+0x400>)
 8003780:	239c      	movs	r3, #156	; 0x9c
 8003782:	009b      	lsls	r3, r3, #2
 8003784:	58d3      	ldr	r3, [r2, r3]
 8003786:	4a1d      	ldr	r2, [pc, #116]	; (80037fc <canFilterConfig+0x400>)
 8003788:	239c      	movs	r3, #156	; 0x9c
 800378a:	009b      	lsls	r3, r3, #2
 800378c:	2100      	movs	r1, #0
 800378e:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[6].FR1 |= (0x01 << CAN_F0R1_FB21_Pos); // Identifier is 0x01
 8003790:	4a1a      	ldr	r2, [pc, #104]	; (80037fc <canFilterConfig+0x400>)
 8003792:	239c      	movs	r3, #156	; 0x9c
 8003794:	009b      	lsls	r3, r3, #2
 8003796:	58d3      	ldr	r3, [r2, r3]
 8003798:	4918      	ldr	r1, [pc, #96]	; (80037fc <canFilterConfig+0x400>)
 800379a:	2280      	movs	r2, #128	; 0x80
 800379c:	0392      	lsls	r2, r2, #14
 800379e:	431a      	orrs	r2, r3
 80037a0:	239c      	movs	r3, #156	; 0x9c
 80037a2:	009b      	lsls	r3, r3, #2
 80037a4:	50ca      	str	r2, [r1, r3]

  // Filter bank 6 register 2
  CAN->sFilterRegister[6].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80037a6:	4a15      	ldr	r2, [pc, #84]	; (80037fc <canFilterConfig+0x400>)
 80037a8:	239d      	movs	r3, #157	; 0x9d
 80037aa:	009b      	lsls	r3, r3, #2
 80037ac:	58d3      	ldr	r3, [r2, r3]
 80037ae:	4a13      	ldr	r2, [pc, #76]	; (80037fc <canFilterConfig+0x400>)
 80037b0:	239d      	movs	r3, #157	; 0x9d
 80037b2:	009b      	lsls	r3, r3, #2
 80037b4:	2100      	movs	r1, #0
 80037b6:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[6].FR2 |= (0x01 << CAN_F0R2_FB21_Pos); // Identifier is 0x01
 80037b8:	4a10      	ldr	r2, [pc, #64]	; (80037fc <canFilterConfig+0x400>)
 80037ba:	239d      	movs	r3, #157	; 0x9d
 80037bc:	009b      	lsls	r3, r3, #2
 80037be:	58d3      	ldr	r3, [r2, r3]
 80037c0:	490e      	ldr	r1, [pc, #56]	; (80037fc <canFilterConfig+0x400>)
 80037c2:	2280      	movs	r2, #128	; 0x80
 80037c4:	0392      	lsls	r2, r2, #14
 80037c6:	431a      	orrs	r2, r3
 80037c8:	239d      	movs	r3, #157	; 0x9d
 80037ca:	009b      	lsls	r3, r3, #2
 80037cc:	50ca      	str	r2, [r1, r3]

  // Filter bank 7 register 1
  CAN->sFilterRegister[7].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80037ce:	4a0b      	ldr	r2, [pc, #44]	; (80037fc <canFilterConfig+0x400>)
 80037d0:	239e      	movs	r3, #158	; 0x9e
 80037d2:	009b      	lsls	r3, r3, #2
 80037d4:	58d3      	ldr	r3, [r2, r3]
 80037d6:	4a09      	ldr	r2, [pc, #36]	; (80037fc <canFilterConfig+0x400>)
 80037d8:	239e      	movs	r3, #158	; 0x9e
 80037da:	009b      	lsls	r3, r3, #2
 80037dc:	2100      	movs	r1, #0
 80037de:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[7].FR1 |= (0x02 << CAN_F0R1_FB21_Pos); // Identifier is 0x02
 80037e0:	4a06      	ldr	r2, [pc, #24]	; (80037fc <canFilterConfig+0x400>)
 80037e2:	239e      	movs	r3, #158	; 0x9e
 80037e4:	009b      	lsls	r3, r3, #2
 80037e6:	58d3      	ldr	r3, [r2, r3]
 80037e8:	4904      	ldr	r1, [pc, #16]	; (80037fc <canFilterConfig+0x400>)
 80037ea:	2280      	movs	r2, #128	; 0x80
 80037ec:	03d2      	lsls	r2, r2, #15
 80037ee:	431a      	orrs	r2, r3
 80037f0:	239e      	movs	r3, #158	; 0x9e
 80037f2:	009b      	lsls	r3, r3, #2
 80037f4:	50ca      	str	r2, [r1, r3]
 80037f6:	e003      	b.n	8003800 <canFilterConfig+0x404>
 80037f8:	0800c148 	.word	0x0800c148
 80037fc:	40006400 	.word	0x40006400

  // Filter bank 7 register 2
  CAN->sFilterRegister[7].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003800:	4a62      	ldr	r2, [pc, #392]	; (800398c <canFilterConfig+0x590>)
 8003802:	239f      	movs	r3, #159	; 0x9f
 8003804:	009b      	lsls	r3, r3, #2
 8003806:	58d3      	ldr	r3, [r2, r3]
 8003808:	4a60      	ldr	r2, [pc, #384]	; (800398c <canFilterConfig+0x590>)
 800380a:	239f      	movs	r3, #159	; 0x9f
 800380c:	009b      	lsls	r3, r3, #2
 800380e:	2100      	movs	r1, #0
 8003810:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[7].FR2 |= (0x02 << CAN_F0R2_FB21_Pos); // Identifier is 0x02
 8003812:	4a5e      	ldr	r2, [pc, #376]	; (800398c <canFilterConfig+0x590>)
 8003814:	239f      	movs	r3, #159	; 0x9f
 8003816:	009b      	lsls	r3, r3, #2
 8003818:	58d3      	ldr	r3, [r2, r3]
 800381a:	495c      	ldr	r1, [pc, #368]	; (800398c <canFilterConfig+0x590>)
 800381c:	2280      	movs	r2, #128	; 0x80
 800381e:	03d2      	lsls	r2, r2, #15
 8003820:	431a      	orrs	r2, r3
 8003822:	239f      	movs	r3, #159	; 0x9f
 8003824:	009b      	lsls	r3, r3, #2
 8003826:	50ca      	str	r2, [r1, r3]

  // Filter bank 8 register 1
  CAN->sFilterRegister[8].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 8003828:	4a58      	ldr	r2, [pc, #352]	; (800398c <canFilterConfig+0x590>)
 800382a:	23a0      	movs	r3, #160	; 0xa0
 800382c:	009b      	lsls	r3, r3, #2
 800382e:	58d3      	ldr	r3, [r2, r3]
 8003830:	4a56      	ldr	r2, [pc, #344]	; (800398c <canFilterConfig+0x590>)
 8003832:	23a0      	movs	r3, #160	; 0xa0
 8003834:	009b      	lsls	r3, r3, #2
 8003836:	2100      	movs	r1, #0
 8003838:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[8].FR1 |= (0x03 << CAN_F0R1_FB21_Pos); // Identifier is 0x03
 800383a:	4a54      	ldr	r2, [pc, #336]	; (800398c <canFilterConfig+0x590>)
 800383c:	23a0      	movs	r3, #160	; 0xa0
 800383e:	009b      	lsls	r3, r3, #2
 8003840:	58d3      	ldr	r3, [r2, r3]
 8003842:	4952      	ldr	r1, [pc, #328]	; (800398c <canFilterConfig+0x590>)
 8003844:	22c0      	movs	r2, #192	; 0xc0
 8003846:	03d2      	lsls	r2, r2, #15
 8003848:	431a      	orrs	r2, r3
 800384a:	23a0      	movs	r3, #160	; 0xa0
 800384c:	009b      	lsls	r3, r3, #2
 800384e:	50ca      	str	r2, [r1, r3]

  // Filter bank 8 register 2
  CAN->sFilterRegister[8].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003850:	4a4e      	ldr	r2, [pc, #312]	; (800398c <canFilterConfig+0x590>)
 8003852:	23a1      	movs	r3, #161	; 0xa1
 8003854:	009b      	lsls	r3, r3, #2
 8003856:	58d3      	ldr	r3, [r2, r3]
 8003858:	4a4c      	ldr	r2, [pc, #304]	; (800398c <canFilterConfig+0x590>)
 800385a:	23a1      	movs	r3, #161	; 0xa1
 800385c:	009b      	lsls	r3, r3, #2
 800385e:	2100      	movs	r1, #0
 8003860:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[8].FR2 |= (0x03 << CAN_F0R2_FB21_Pos); // Identifier is 0x03
 8003862:	4a4a      	ldr	r2, [pc, #296]	; (800398c <canFilterConfig+0x590>)
 8003864:	23a1      	movs	r3, #161	; 0xa1
 8003866:	009b      	lsls	r3, r3, #2
 8003868:	58d3      	ldr	r3, [r2, r3]
 800386a:	4948      	ldr	r1, [pc, #288]	; (800398c <canFilterConfig+0x590>)
 800386c:	22c0      	movs	r2, #192	; 0xc0
 800386e:	03d2      	lsls	r2, r2, #15
 8003870:	431a      	orrs	r2, r3
 8003872:	23a1      	movs	r3, #161	; 0xa1
 8003874:	009b      	lsls	r3, r3, #2
 8003876:	50ca      	str	r2, [r1, r3]

  // Filter bank 9 register 1
  CAN->sFilterRegister[9].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 8003878:	4a44      	ldr	r2, [pc, #272]	; (800398c <canFilterConfig+0x590>)
 800387a:	23a2      	movs	r3, #162	; 0xa2
 800387c:	009b      	lsls	r3, r3, #2
 800387e:	58d3      	ldr	r3, [r2, r3]
 8003880:	4a42      	ldr	r2, [pc, #264]	; (800398c <canFilterConfig+0x590>)
 8003882:	23a2      	movs	r3, #162	; 0xa2
 8003884:	009b      	lsls	r3, r3, #2
 8003886:	2100      	movs	r1, #0
 8003888:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[9].FR1 |= (0x04 << CAN_F0R1_FB21_Pos); // Identifier is 0x04
 800388a:	4a40      	ldr	r2, [pc, #256]	; (800398c <canFilterConfig+0x590>)
 800388c:	23a2      	movs	r3, #162	; 0xa2
 800388e:	009b      	lsls	r3, r3, #2
 8003890:	58d3      	ldr	r3, [r2, r3]
 8003892:	493e      	ldr	r1, [pc, #248]	; (800398c <canFilterConfig+0x590>)
 8003894:	2280      	movs	r2, #128	; 0x80
 8003896:	0412      	lsls	r2, r2, #16
 8003898:	431a      	orrs	r2, r3
 800389a:	23a2      	movs	r3, #162	; 0xa2
 800389c:	009b      	lsls	r3, r3, #2
 800389e:	50ca      	str	r2, [r1, r3]

  // Filter bank 9 register 2
  CAN->sFilterRegister[9].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80038a0:	4a3a      	ldr	r2, [pc, #232]	; (800398c <canFilterConfig+0x590>)
 80038a2:	23a3      	movs	r3, #163	; 0xa3
 80038a4:	009b      	lsls	r3, r3, #2
 80038a6:	58d3      	ldr	r3, [r2, r3]
 80038a8:	4a38      	ldr	r2, [pc, #224]	; (800398c <canFilterConfig+0x590>)
 80038aa:	23a3      	movs	r3, #163	; 0xa3
 80038ac:	009b      	lsls	r3, r3, #2
 80038ae:	2100      	movs	r1, #0
 80038b0:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[9].FR2 |= (0x04 << CAN_F0R2_FB21_Pos); // Identifier is 0x04
 80038b2:	4a36      	ldr	r2, [pc, #216]	; (800398c <canFilterConfig+0x590>)
 80038b4:	23a3      	movs	r3, #163	; 0xa3
 80038b6:	009b      	lsls	r3, r3, #2
 80038b8:	58d3      	ldr	r3, [r2, r3]
 80038ba:	4934      	ldr	r1, [pc, #208]	; (800398c <canFilterConfig+0x590>)
 80038bc:	2280      	movs	r2, #128	; 0x80
 80038be:	0412      	lsls	r2, r2, #16
 80038c0:	431a      	orrs	r2, r3
 80038c2:	23a3      	movs	r3, #163	; 0xa3
 80038c4:	009b      	lsls	r3, r3, #2
 80038c6:	50ca      	str	r2, [r1, r3]

  // Filter bank 10 register 1
  CAN->sFilterRegister[10].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80038c8:	4a30      	ldr	r2, [pc, #192]	; (800398c <canFilterConfig+0x590>)
 80038ca:	23a4      	movs	r3, #164	; 0xa4
 80038cc:	009b      	lsls	r3, r3, #2
 80038ce:	58d3      	ldr	r3, [r2, r3]
 80038d0:	4a2e      	ldr	r2, [pc, #184]	; (800398c <canFilterConfig+0x590>)
 80038d2:	23a4      	movs	r3, #164	; 0xa4
 80038d4:	009b      	lsls	r3, r3, #2
 80038d6:	2100      	movs	r1, #0
 80038d8:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[10].FR1 |= (0x05 << CAN_F0R1_FB21_Pos); // Identifier is 0x05
 80038da:	4a2c      	ldr	r2, [pc, #176]	; (800398c <canFilterConfig+0x590>)
 80038dc:	23a4      	movs	r3, #164	; 0xa4
 80038de:	009b      	lsls	r3, r3, #2
 80038e0:	58d3      	ldr	r3, [r2, r3]
 80038e2:	492a      	ldr	r1, [pc, #168]	; (800398c <canFilterConfig+0x590>)
 80038e4:	22a0      	movs	r2, #160	; 0xa0
 80038e6:	0412      	lsls	r2, r2, #16
 80038e8:	431a      	orrs	r2, r3
 80038ea:	23a4      	movs	r3, #164	; 0xa4
 80038ec:	009b      	lsls	r3, r3, #2
 80038ee:	50ca      	str	r2, [r1, r3]

  // Filter bank 10 register 2
  CAN->sFilterRegister[10].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80038f0:	4a26      	ldr	r2, [pc, #152]	; (800398c <canFilterConfig+0x590>)
 80038f2:	23a5      	movs	r3, #165	; 0xa5
 80038f4:	009b      	lsls	r3, r3, #2
 80038f6:	58d3      	ldr	r3, [r2, r3]
 80038f8:	4a24      	ldr	r2, [pc, #144]	; (800398c <canFilterConfig+0x590>)
 80038fa:	23a5      	movs	r3, #165	; 0xa5
 80038fc:	009b      	lsls	r3, r3, #2
 80038fe:	2100      	movs	r1, #0
 8003900:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[10].FR2 |= (0x05 << CAN_F0R2_FB21_Pos); // Identifier is 0x05
 8003902:	4a22      	ldr	r2, [pc, #136]	; (800398c <canFilterConfig+0x590>)
 8003904:	23a5      	movs	r3, #165	; 0xa5
 8003906:	009b      	lsls	r3, r3, #2
 8003908:	58d3      	ldr	r3, [r2, r3]
 800390a:	4920      	ldr	r1, [pc, #128]	; (800398c <canFilterConfig+0x590>)
 800390c:	22a0      	movs	r2, #160	; 0xa0
 800390e:	0412      	lsls	r2, r2, #16
 8003910:	431a      	orrs	r2, r3
 8003912:	23a5      	movs	r3, #165	; 0xa5
 8003914:	009b      	lsls	r3, r3, #2
 8003916:	50ca      	str	r2, [r1, r3]

  // Filter bank 11 register 1
  CAN->sFilterRegister[11].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 8003918:	4a1c      	ldr	r2, [pc, #112]	; (800398c <canFilterConfig+0x590>)
 800391a:	23a6      	movs	r3, #166	; 0xa6
 800391c:	009b      	lsls	r3, r3, #2
 800391e:	58d3      	ldr	r3, [r2, r3]
 8003920:	4a1a      	ldr	r2, [pc, #104]	; (800398c <canFilterConfig+0x590>)
 8003922:	23a6      	movs	r3, #166	; 0xa6
 8003924:	009b      	lsls	r3, r3, #2
 8003926:	2100      	movs	r1, #0
 8003928:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[11].FR1 |= (0x06 << CAN_F0R1_FB21_Pos); // Identifier is 0x06
 800392a:	4a18      	ldr	r2, [pc, #96]	; (800398c <canFilterConfig+0x590>)
 800392c:	23a6      	movs	r3, #166	; 0xa6
 800392e:	009b      	lsls	r3, r3, #2
 8003930:	58d3      	ldr	r3, [r2, r3]
 8003932:	4916      	ldr	r1, [pc, #88]	; (800398c <canFilterConfig+0x590>)
 8003934:	22c0      	movs	r2, #192	; 0xc0
 8003936:	0412      	lsls	r2, r2, #16
 8003938:	431a      	orrs	r2, r3
 800393a:	23a6      	movs	r3, #166	; 0xa6
 800393c:	009b      	lsls	r3, r3, #2
 800393e:	50ca      	str	r2, [r1, r3]

  // Filter bank 5 register 2
  CAN->sFilterRegister[11].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003940:	4a12      	ldr	r2, [pc, #72]	; (800398c <canFilterConfig+0x590>)
 8003942:	23a7      	movs	r3, #167	; 0xa7
 8003944:	009b      	lsls	r3, r3, #2
 8003946:	58d3      	ldr	r3, [r2, r3]
 8003948:	4a10      	ldr	r2, [pc, #64]	; (800398c <canFilterConfig+0x590>)
 800394a:	23a7      	movs	r3, #167	; 0xa7
 800394c:	009b      	lsls	r3, r3, #2
 800394e:	2100      	movs	r1, #0
 8003950:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[11].FR2 |= (0x06 << CAN_F0R2_FB21_Pos); // Identifier is 0x06
 8003952:	4a0e      	ldr	r2, [pc, #56]	; (800398c <canFilterConfig+0x590>)
 8003954:	23a7      	movs	r3, #167	; 0xa7
 8003956:	009b      	lsls	r3, r3, #2
 8003958:	58d3      	ldr	r3, [r2, r3]
 800395a:	490c      	ldr	r1, [pc, #48]	; (800398c <canFilterConfig+0x590>)
 800395c:	22c0      	movs	r2, #192	; 0xc0
 800395e:	0412      	lsls	r2, r2, #16
 8003960:	431a      	orrs	r2, r3
 8003962:	23a7      	movs	r3, #167	; 0xa7
 8003964:	009b      	lsls	r3, r3, #2
 8003966:	50ca      	str	r2, [r1, r3]

  // Leave filter initialization mode
  CAN->FMR &=~ CAN_FMR_FINIT;
 8003968:	4a08      	ldr	r2, [pc, #32]	; (800398c <canFilterConfig+0x590>)
 800396a:	2380      	movs	r3, #128	; 0x80
 800396c:	009b      	lsls	r3, r3, #2
 800396e:	58d3      	ldr	r3, [r2, r3]
 8003970:	4906      	ldr	r1, [pc, #24]	; (800398c <canFilterConfig+0x590>)
 8003972:	2201      	movs	r2, #1
 8003974:	4393      	bics	r3, r2
 8003976:	001a      	movs	r2, r3
 8003978:	2380      	movs	r3, #128	; 0x80
 800397a:	009b      	lsls	r3, r3, #2
 800397c:	50ca      	str	r2, [r1, r3]

  printf("CAN FILTER CONFIGURATION OK\r\n");
 800397e:	4b04      	ldr	r3, [pc, #16]	; (8003990 <canFilterConfig+0x594>)
 8003980:	0018      	movs	r0, r3
 8003982:	f004 fa33 	bl	8007dec <puts>

}
 8003986:	46c0      	nop			; (mov r8, r8)
 8003988:	46bd      	mov	sp, r7
 800398a:	bd80      	pop	{r7, pc}
 800398c:	40006400 	.word	0x40006400
 8003990:	0800c178 	.word	0x0800c178

08003994 <canInit>:

/******************* Initialize the CAN peripheral ********************/

void canInit(){
 8003994:	b580      	push	{r7, lr}
 8003996:	af00      	add	r7, sp, #0

  printf("********** CAN INITIALIZATION **********\r\n");
 8003998:	4ba1      	ldr	r3, [pc, #644]	; (8003c20 <canInit+0x28c>)
 800399a:	0018      	movs	r0, r3
 800399c:	f004 fa26 	bl	8007dec <puts>

  // Enable the clock for the GPIOA at 8 Mhz
  RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 80039a0:	4ba0      	ldr	r3, [pc, #640]	; (8003c24 <canInit+0x290>)
 80039a2:	695a      	ldr	r2, [r3, #20]
 80039a4:	4b9f      	ldr	r3, [pc, #636]	; (8003c24 <canInit+0x290>)
 80039a6:	2180      	movs	r1, #128	; 0x80
 80039a8:	0289      	lsls	r1, r1, #10
 80039aa:	430a      	orrs	r2, r1
 80039ac:	615a      	str	r2, [r3, #20]

  // Enable the clock for the CAN at 8 Mhz
  RCC->APB1ENR |= RCC_APB1ENR_CANEN;
 80039ae:	4b9d      	ldr	r3, [pc, #628]	; (8003c24 <canInit+0x290>)
 80039b0:	69da      	ldr	r2, [r3, #28]
 80039b2:	4b9c      	ldr	r3, [pc, #624]	; (8003c24 <canInit+0x290>)
 80039b4:	2180      	movs	r1, #128	; 0x80
 80039b6:	0489      	lsls	r1, r1, #18
 80039b8:	430a      	orrs	r2, r1
 80039ba:	61da      	str	r2, [r3, #28]

  /* PA12 is the TX pin and PA11 is the RX pin */

  // Activate PA12 mode to alternate function
  GPIOA->MODER &= ~GPIO_MODER_MODER12_Msk; // Clear
 80039bc:	2390      	movs	r3, #144	; 0x90
 80039be:	05db      	lsls	r3, r3, #23
 80039c0:	681a      	ldr	r2, [r3, #0]
 80039c2:	2390      	movs	r3, #144	; 0x90
 80039c4:	05db      	lsls	r3, r3, #23
 80039c6:	4998      	ldr	r1, [pc, #608]	; (8003c28 <canInit+0x294>)
 80039c8:	400a      	ands	r2, r1
 80039ca:	601a      	str	r2, [r3, #0]
  GPIOA->MODER |= (0x02 <<GPIO_MODER_MODER12_Pos); // 00: Input mode (reset state), 01: General purpose output mode, 10 : Alternate function mode, 11: Analog mode
 80039cc:	2390      	movs	r3, #144	; 0x90
 80039ce:	05db      	lsls	r3, r3, #23
 80039d0:	681a      	ldr	r2, [r3, #0]
 80039d2:	2390      	movs	r3, #144	; 0x90
 80039d4:	05db      	lsls	r3, r3, #23
 80039d6:	2180      	movs	r1, #128	; 0x80
 80039d8:	0489      	lsls	r1, r1, #18
 80039da:	430a      	orrs	r2, r1
 80039dc:	601a      	str	r2, [r3, #0]

  // Configure PA12 as High-Speed Output
  GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR12_Msk;
 80039de:	2390      	movs	r3, #144	; 0x90
 80039e0:	05db      	lsls	r3, r3, #23
 80039e2:	689a      	ldr	r2, [r3, #8]
 80039e4:	2390      	movs	r3, #144	; 0x90
 80039e6:	05db      	lsls	r3, r3, #23
 80039e8:	498f      	ldr	r1, [pc, #572]	; (8003c28 <canInit+0x294>)
 80039ea:	400a      	ands	r2, r1
 80039ec:	609a      	str	r2, [r3, #8]
  GPIOA->OSPEEDR |= (0x03 <<GPIO_OSPEEDR_OSPEEDR12_Pos); // x0: Low speed, 01: Medium speed, 11: High speed
 80039ee:	2390      	movs	r3, #144	; 0x90
 80039f0:	05db      	lsls	r3, r3, #23
 80039f2:	689a      	ldr	r2, [r3, #8]
 80039f4:	2390      	movs	r3, #144	; 0x90
 80039f6:	05db      	lsls	r3, r3, #23
 80039f8:	21c0      	movs	r1, #192	; 0xc0
 80039fa:	0489      	lsls	r1, r1, #18
 80039fc:	430a      	orrs	r2, r1
 80039fe:	609a      	str	r2, [r3, #8]

  // Disable PA12 Pull-up/Pull-down
  GPIOA->PUPDR &= ~GPIO_PUPDR_PUPDR12_Msk; // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8003a00:	2390      	movs	r3, #144	; 0x90
 8003a02:	05db      	lsls	r3, r3, #23
 8003a04:	68da      	ldr	r2, [r3, #12]
 8003a06:	2390      	movs	r3, #144	; 0x90
 8003a08:	05db      	lsls	r3, r3, #23
 8003a0a:	4987      	ldr	r1, [pc, #540]	; (8003c28 <canInit+0x294>)
 8003a0c:	400a      	ands	r2, r1
 8003a0e:	60da      	str	r2, [r3, #12]

  // Alternative mapping for PA12
  GPIOA->AFR[1] &= ~GPIO_AFRH_AFSEL12_Msk; // Clear
 8003a10:	2390      	movs	r3, #144	; 0x90
 8003a12:	05db      	lsls	r3, r3, #23
 8003a14:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a16:	2390      	movs	r3, #144	; 0x90
 8003a18:	05db      	lsls	r3, r3, #23
 8003a1a:	4984      	ldr	r1, [pc, #528]	; (8003c2c <canInit+0x298>)
 8003a1c:	400a      	ands	r2, r1
 8003a1e:	625a      	str	r2, [r3, #36]	; 0x24
  GPIOA->AFR[1] |= (0x04 << GPIO_AFRH_AFSEL12_Pos); // Alternate function as TX pin for the CAN
 8003a20:	2390      	movs	r3, #144	; 0x90
 8003a22:	05db      	lsls	r3, r3, #23
 8003a24:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a26:	2390      	movs	r3, #144	; 0x90
 8003a28:	05db      	lsls	r3, r3, #23
 8003a2a:	2180      	movs	r1, #128	; 0x80
 8003a2c:	02c9      	lsls	r1, r1, #11
 8003a2e:	430a      	orrs	r2, r1
 8003a30:	625a      	str	r2, [r3, #36]	; 0x24

  // Activate PA11 mode to alternate function
  GPIOA->MODER &= ~GPIO_MODER_MODER11_Msk; // Clear
 8003a32:	2390      	movs	r3, #144	; 0x90
 8003a34:	05db      	lsls	r3, r3, #23
 8003a36:	681a      	ldr	r2, [r3, #0]
 8003a38:	2390      	movs	r3, #144	; 0x90
 8003a3a:	05db      	lsls	r3, r3, #23
 8003a3c:	497c      	ldr	r1, [pc, #496]	; (8003c30 <canInit+0x29c>)
 8003a3e:	400a      	ands	r2, r1
 8003a40:	601a      	str	r2, [r3, #0]
  GPIOA->MODER |= (0x02 <<GPIO_MODER_MODER11_Pos); // 00: Input mode (reset state), 01: General purpose output mode, 10 : Alternate function mode, 11: Analog mode
 8003a42:	2390      	movs	r3, #144	; 0x90
 8003a44:	05db      	lsls	r3, r3, #23
 8003a46:	681a      	ldr	r2, [r3, #0]
 8003a48:	2390      	movs	r3, #144	; 0x90
 8003a4a:	05db      	lsls	r3, r3, #23
 8003a4c:	2180      	movs	r1, #128	; 0x80
 8003a4e:	0409      	lsls	r1, r1, #16
 8003a50:	430a      	orrs	r2, r1
 8003a52:	601a      	str	r2, [r3, #0]

  // Configure PA11 as High-Speed Output
  GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR11_Msk; // Clear
 8003a54:	2390      	movs	r3, #144	; 0x90
 8003a56:	05db      	lsls	r3, r3, #23
 8003a58:	689a      	ldr	r2, [r3, #8]
 8003a5a:	2390      	movs	r3, #144	; 0x90
 8003a5c:	05db      	lsls	r3, r3, #23
 8003a5e:	4974      	ldr	r1, [pc, #464]	; (8003c30 <canInit+0x29c>)
 8003a60:	400a      	ands	r2, r1
 8003a62:	609a      	str	r2, [r3, #8]
  GPIOA->OSPEEDR |= (0x03 <<GPIO_OSPEEDR_OSPEEDR11_Pos); // x0: Low speed, 01: Medium speed, 11: High speed
 8003a64:	2390      	movs	r3, #144	; 0x90
 8003a66:	05db      	lsls	r3, r3, #23
 8003a68:	689a      	ldr	r2, [r3, #8]
 8003a6a:	2390      	movs	r3, #144	; 0x90
 8003a6c:	05db      	lsls	r3, r3, #23
 8003a6e:	21c0      	movs	r1, #192	; 0xc0
 8003a70:	0409      	lsls	r1, r1, #16
 8003a72:	430a      	orrs	r2, r1
 8003a74:	609a      	str	r2, [r3, #8]

  // Disable PA11 Pull-up/Pull-down
  GPIOA->PUPDR &= ~GPIO_PUPDR_PUPDR11_Msk; // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8003a76:	2390      	movs	r3, #144	; 0x90
 8003a78:	05db      	lsls	r3, r3, #23
 8003a7a:	68da      	ldr	r2, [r3, #12]
 8003a7c:	2390      	movs	r3, #144	; 0x90
 8003a7e:	05db      	lsls	r3, r3, #23
 8003a80:	496b      	ldr	r1, [pc, #428]	; (8003c30 <canInit+0x29c>)
 8003a82:	400a      	ands	r2, r1
 8003a84:	60da      	str	r2, [r3, #12]

  // Alternative mapping for PA11
  GPIOA->AFR[1] &= ~GPIO_AFRH_AFSEL11_Msk; // Clear
 8003a86:	2390      	movs	r3, #144	; 0x90
 8003a88:	05db      	lsls	r3, r3, #23
 8003a8a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a8c:	2390      	movs	r3, #144	; 0x90
 8003a8e:	05db      	lsls	r3, r3, #23
 8003a90:	4968      	ldr	r1, [pc, #416]	; (8003c34 <canInit+0x2a0>)
 8003a92:	400a      	ands	r2, r1
 8003a94:	625a      	str	r2, [r3, #36]	; 0x24
  GPIOA->AFR[1] |= (0x04 << GPIO_AFRH_AFSEL11_Pos); // Alternate function as RX pin for the CAN
 8003a96:	2390      	movs	r3, #144	; 0x90
 8003a98:	05db      	lsls	r3, r3, #23
 8003a9a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a9c:	2390      	movs	r3, #144	; 0x90
 8003a9e:	05db      	lsls	r3, r3, #23
 8003aa0:	2180      	movs	r1, #128	; 0x80
 8003aa2:	01c9      	lsls	r1, r1, #7
 8003aa4:	430a      	orrs	r2, r1
 8003aa6:	625a      	str	r2, [r3, #36]	; 0x24

  // Exit freeze mode while using DEBUG
  CAN->MCR &= ~CAN_MCR_DBF_Msk;
 8003aa8:	4b63      	ldr	r3, [pc, #396]	; (8003c38 <canInit+0x2a4>)
 8003aaa:	681a      	ldr	r2, [r3, #0]
 8003aac:	4b62      	ldr	r3, [pc, #392]	; (8003c38 <canInit+0x2a4>)
 8003aae:	4963      	ldr	r1, [pc, #396]	; (8003c3c <canInit+0x2a8>)
 8003ab0:	400a      	ands	r2, r1
 8003ab2:	601a      	str	r2, [r3, #0]

  // Initialization request for the CAN
  CAN->MCR |= CAN_MCR_INRQ;
 8003ab4:	4b60      	ldr	r3, [pc, #384]	; (8003c38 <canInit+0x2a4>)
 8003ab6:	681a      	ldr	r2, [r3, #0]
 8003ab8:	4b5f      	ldr	r3, [pc, #380]	; (8003c38 <canInit+0x2a4>)
 8003aba:	2101      	movs	r1, #1
 8003abc:	430a      	orrs	r2, r1
 8003abe:	601a      	str	r2, [r3, #0]

  while ( (CAN->MSR & CAN_MSR_INAK) != CAN_MSR_INAK){
 8003ac0:	e003      	b.n	8003aca <canInit+0x136>

    printf("Wait until INAK bit is set to enter in can initialization mode\r\n");
 8003ac2:	4b5f      	ldr	r3, [pc, #380]	; (8003c40 <canInit+0x2ac>)
 8003ac4:	0018      	movs	r0, r3
 8003ac6:	f004 f991 	bl	8007dec <puts>
  while ( (CAN->MSR & CAN_MSR_INAK) != CAN_MSR_INAK){
 8003aca:	4b5b      	ldr	r3, [pc, #364]	; (8003c38 <canInit+0x2a4>)
 8003acc:	685b      	ldr	r3, [r3, #4]
 8003ace:	2201      	movs	r2, #1
 8003ad0:	4013      	ands	r3, r2
 8003ad2:	2b01      	cmp	r3, #1
 8003ad4:	d1f5      	bne.n	8003ac2 <canInit+0x12e>
  } // Wait until we reach initialization mode

  // Exit from sleep mode
  CAN->MCR &= ~CAN_MCR_SLEEP;
 8003ad6:	4b58      	ldr	r3, [pc, #352]	; (8003c38 <canInit+0x2a4>)
 8003ad8:	681a      	ldr	r2, [r3, #0]
 8003ada:	4b57      	ldr	r3, [pc, #348]	; (8003c38 <canInit+0x2a4>)
 8003adc:	2102      	movs	r1, #2
 8003ade:	438a      	bics	r2, r1
 8003ae0:	601a      	str	r2, [r3, #0]

  // Time triggered mode disable
  CAN->MCR &= ~CAN_MCR_TTCM;
 8003ae2:	4b55      	ldr	r3, [pc, #340]	; (8003c38 <canInit+0x2a4>)
 8003ae4:	681a      	ldr	r2, [r3, #0]
 8003ae6:	4b54      	ldr	r3, [pc, #336]	; (8003c38 <canInit+0x2a4>)
 8003ae8:	2180      	movs	r1, #128	; 0x80
 8003aea:	438a      	bics	r2, r1
 8003aec:	601a      	str	r2, [r3, #0]

  // Automatic retransmission diseable
  CAN->MCR |= CAN_MCR_NART;
 8003aee:	4b52      	ldr	r3, [pc, #328]	; (8003c38 <canInit+0x2a4>)
 8003af0:	681a      	ldr	r2, [r3, #0]
 8003af2:	4b51      	ldr	r3, [pc, #324]	; (8003c38 <canInit+0x2a4>)
 8003af4:	2110      	movs	r1, #16
 8003af6:	430a      	orrs	r2, r1
 8003af8:	601a      	str	r2, [r3, #0]

  // Receive fifo locked disable
  CAN->MCR &= ~CAN_MCR_RFLM;
 8003afa:	4b4f      	ldr	r3, [pc, #316]	; (8003c38 <canInit+0x2a4>)
 8003afc:	681a      	ldr	r2, [r3, #0]
 8003afe:	4b4e      	ldr	r3, [pc, #312]	; (8003c38 <canInit+0x2a4>)
 8003b00:	2108      	movs	r1, #8
 8003b02:	438a      	bics	r2, r1
 8003b04:	601a      	str	r2, [r3, #0]

  // Auto wake up disable
  CAN->MCR &= ~CAN_MCR_AWUM;
 8003b06:	4b4c      	ldr	r3, [pc, #304]	; (8003c38 <canInit+0x2a4>)
 8003b08:	681a      	ldr	r2, [r3, #0]
 8003b0a:	4b4b      	ldr	r3, [pc, #300]	; (8003c38 <canInit+0x2a4>)
 8003b0c:	2120      	movs	r1, #32
 8003b0e:	438a      	bics	r2, r1
 8003b10:	601a      	str	r2, [r3, #0]

  // Transmit fifo priority disable
  CAN->MCR &= ~CAN_MCR_TXFP;
 8003b12:	4b49      	ldr	r3, [pc, #292]	; (8003c38 <canInit+0x2a4>)
 8003b14:	681a      	ldr	r2, [r3, #0]
 8003b16:	4b48      	ldr	r3, [pc, #288]	; (8003c38 <canInit+0x2a4>)
 8003b18:	2104      	movs	r1, #4
 8003b1a:	438a      	bics	r2, r1
 8003b1c:	601a      	str	r2, [r3, #0]

  // Normal mode
  CAN->BTR &= ~CAN_BTR_LBKM_Msk; // 0: Loop Back Mode disabled, 1: Loop Back Mode enabled
 8003b1e:	4b46      	ldr	r3, [pc, #280]	; (8003c38 <canInit+0x2a4>)
 8003b20:	69da      	ldr	r2, [r3, #28]
 8003b22:	4b45      	ldr	r3, [pc, #276]	; (8003c38 <canInit+0x2a4>)
 8003b24:	4947      	ldr	r1, [pc, #284]	; (8003c44 <canInit+0x2b0>)
 8003b26:	400a      	ands	r2, r1
 8003b28:	61da      	str	r2, [r3, #28]
  CAN->BTR &= ~CAN_BTR_SILM_Msk; // 0: Normal operation, 1: Silent Mode
 8003b2a:	4b43      	ldr	r3, [pc, #268]	; (8003c38 <canInit+0x2a4>)
 8003b2c:	69da      	ldr	r2, [r3, #28]
 8003b2e:	4b42      	ldr	r3, [pc, #264]	; (8003c38 <canInit+0x2a4>)
 8003b30:	0052      	lsls	r2, r2, #1
 8003b32:	0852      	lsrs	r2, r2, #1
 8003b34:	61da      	str	r2, [r3, #28]

  /* The bit timing are given from this website : http://www.bittiming.can-wiki.info */

  // Synchronization segment of 1 TQ
  CAN->BTR &= ~CAN_BTR_SJW_Msk;
 8003b36:	4b40      	ldr	r3, [pc, #256]	; (8003c38 <canInit+0x2a4>)
 8003b38:	69da      	ldr	r2, [r3, #28]
 8003b3a:	4b3f      	ldr	r3, [pc, #252]	; (8003c38 <canInit+0x2a4>)
 8003b3c:	493a      	ldr	r1, [pc, #232]	; (8003c28 <canInit+0x294>)
 8003b3e:	400a      	ands	r2, r1
 8003b40:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x01 - 0x01) << CAN_BTR_SJW_Pos );
 8003b42:	4a3d      	ldr	r2, [pc, #244]	; (8003c38 <canInit+0x2a4>)
 8003b44:	4b3c      	ldr	r3, [pc, #240]	; (8003c38 <canInit+0x2a4>)
 8003b46:	69d2      	ldr	r2, [r2, #28]
 8003b48:	61da      	str	r2, [r3, #28]

  // Prescaler of 1
  CAN->BTR &= ~CAN_BTR_BRP_Msk;
 8003b4a:	4b3b      	ldr	r3, [pc, #236]	; (8003c38 <canInit+0x2a4>)
 8003b4c:	69da      	ldr	r2, [r3, #28]
 8003b4e:	4b3a      	ldr	r3, [pc, #232]	; (8003c38 <canInit+0x2a4>)
 8003b50:	0a92      	lsrs	r2, r2, #10
 8003b52:	0292      	lsls	r2, r2, #10
 8003b54:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x01 - 0x01) << CAN_BTR_BRP_Pos );
 8003b56:	4a38      	ldr	r2, [pc, #224]	; (8003c38 <canInit+0x2a4>)
 8003b58:	4b37      	ldr	r3, [pc, #220]	; (8003c38 <canInit+0x2a4>)
 8003b5a:	69d2      	ldr	r2, [r2, #28]
 8003b5c:	61da      	str	r2, [r3, #28]

  // Segment 2 of 2 TQ
  CAN->BTR &= ~CAN_BTR_TS2_Msk; // Clear
 8003b5e:	4b36      	ldr	r3, [pc, #216]	; (8003c38 <canInit+0x2a4>)
 8003b60:	69da      	ldr	r2, [r3, #28]
 8003b62:	4b35      	ldr	r3, [pc, #212]	; (8003c38 <canInit+0x2a4>)
 8003b64:	4938      	ldr	r1, [pc, #224]	; (8003c48 <canInit+0x2b4>)
 8003b66:	400a      	ands	r2, r1
 8003b68:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x02 - 0x01) << CAN_BTR_TS2_Pos );
 8003b6a:	4b33      	ldr	r3, [pc, #204]	; (8003c38 <canInit+0x2a4>)
 8003b6c:	69da      	ldr	r2, [r3, #28]
 8003b6e:	4b32      	ldr	r3, [pc, #200]	; (8003c38 <canInit+0x2a4>)
 8003b70:	2180      	movs	r1, #128	; 0x80
 8003b72:	0349      	lsls	r1, r1, #13
 8003b74:	430a      	orrs	r2, r1
 8003b76:	61da      	str	r2, [r3, #28]

  // Segment 1 of 13 TQ
  CAN->BTR &= ~CAN_BTR_TS1_Msk; // Clear
 8003b78:	4b2f      	ldr	r3, [pc, #188]	; (8003c38 <canInit+0x2a4>)
 8003b7a:	69da      	ldr	r2, [r3, #28]
 8003b7c:	4b2e      	ldr	r3, [pc, #184]	; (8003c38 <canInit+0x2a4>)
 8003b7e:	492b      	ldr	r1, [pc, #172]	; (8003c2c <canInit+0x298>)
 8003b80:	400a      	ands	r2, r1
 8003b82:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x0D - 0x01) << CAN_BTR_TS1_Pos );
 8003b84:	4b2c      	ldr	r3, [pc, #176]	; (8003c38 <canInit+0x2a4>)
 8003b86:	69da      	ldr	r2, [r3, #28]
 8003b88:	4b2b      	ldr	r3, [pc, #172]	; (8003c38 <canInit+0x2a4>)
 8003b8a:	21c0      	movs	r1, #192	; 0xc0
 8003b8c:	0309      	lsls	r1, r1, #12
 8003b8e:	430a      	orrs	r2, r1
 8003b90:	61da      	str	r2, [r3, #28]

  canFilterConfig();
 8003b92:	f7ff fc33 	bl	80033fc <canFilterConfig>

  // Configure the sources of interruption
  CAN->IER |= CAN_IER_TMEIE; // Interruption on completed transmission request (ok, arbitration loss, abort and error)
 8003b96:	4b28      	ldr	r3, [pc, #160]	; (8003c38 <canInit+0x2a4>)
 8003b98:	695a      	ldr	r2, [r3, #20]
 8003b9a:	4b27      	ldr	r3, [pc, #156]	; (8003c38 <canInit+0x2a4>)
 8003b9c:	2101      	movs	r1, #1
 8003b9e:	430a      	orrs	r2, r1
 8003ba0:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FMPIE0; // Interruption on message pending into the fifo 0
 8003ba2:	4b25      	ldr	r3, [pc, #148]	; (8003c38 <canInit+0x2a4>)
 8003ba4:	695a      	ldr	r2, [r3, #20]
 8003ba6:	4b24      	ldr	r3, [pc, #144]	; (8003c38 <canInit+0x2a4>)
 8003ba8:	2102      	movs	r1, #2
 8003baa:	430a      	orrs	r2, r1
 8003bac:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FMPIE1; // Interruption on message pending into the fifo 1
 8003bae:	4b22      	ldr	r3, [pc, #136]	; (8003c38 <canInit+0x2a4>)
 8003bb0:	695a      	ldr	r2, [r3, #20]
 8003bb2:	4b21      	ldr	r3, [pc, #132]	; (8003c38 <canInit+0x2a4>)
 8003bb4:	2110      	movs	r1, #16
 8003bb6:	430a      	orrs	r2, r1
 8003bb8:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FOVIE0; // Interruption on message overrun into the fifo 0
 8003bba:	4b1f      	ldr	r3, [pc, #124]	; (8003c38 <canInit+0x2a4>)
 8003bbc:	695a      	ldr	r2, [r3, #20]
 8003bbe:	4b1e      	ldr	r3, [pc, #120]	; (8003c38 <canInit+0x2a4>)
 8003bc0:	2108      	movs	r1, #8
 8003bc2:	430a      	orrs	r2, r1
 8003bc4:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FOVIE1; // Interruption on message overrun into the fifo 1
 8003bc6:	4b1c      	ldr	r3, [pc, #112]	; (8003c38 <canInit+0x2a4>)
 8003bc8:	695a      	ldr	r2, [r3, #20]
 8003bca:	4b1b      	ldr	r3, [pc, #108]	; (8003c38 <canInit+0x2a4>)
 8003bcc:	2140      	movs	r1, #64	; 0x40
 8003bce:	430a      	orrs	r2, r1
 8003bd0:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_ERRIE; // Interruption on error
 8003bd2:	4b19      	ldr	r3, [pc, #100]	; (8003c38 <canInit+0x2a4>)
 8003bd4:	695a      	ldr	r2, [r3, #20]
 8003bd6:	4b18      	ldr	r3, [pc, #96]	; (8003c38 <canInit+0x2a4>)
 8003bd8:	2180      	movs	r1, #128	; 0x80
 8003bda:	0209      	lsls	r1, r1, #8
 8003bdc:	430a      	orrs	r2, r1
 8003bde:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_LECIE; // Interruption on last error code
 8003be0:	4b15      	ldr	r3, [pc, #84]	; (8003c38 <canInit+0x2a4>)
 8003be2:	695a      	ldr	r2, [r3, #20]
 8003be4:	4b14      	ldr	r3, [pc, #80]	; (8003c38 <canInit+0x2a4>)
 8003be6:	2180      	movs	r1, #128	; 0x80
 8003be8:	0109      	lsls	r1, r1, #4
 8003bea:	430a      	orrs	r2, r1
 8003bec:	615a      	str	r2, [r3, #20]


  // Request exit from initialization mode
  CAN->MCR &= ~CAN_MCR_INRQ;
 8003bee:	4b12      	ldr	r3, [pc, #72]	; (8003c38 <canInit+0x2a4>)
 8003bf0:	681a      	ldr	r2, [r3, #0]
 8003bf2:	4b11      	ldr	r3, [pc, #68]	; (8003c38 <canInit+0x2a4>)
 8003bf4:	2101      	movs	r1, #1
 8003bf6:	438a      	bics	r2, r1
 8003bf8:	601a      	str	r2, [r3, #0]

  while ((CAN->MSR & CAN_MSR_INAK) == CAN_MSR_INAK){
 8003bfa:	e003      	b.n	8003c04 <canInit+0x270>
    printf("Wait until INAK bit is clear to exit from can initialization mode\r\n");
 8003bfc:	4b13      	ldr	r3, [pc, #76]	; (8003c4c <canInit+0x2b8>)
 8003bfe:	0018      	movs	r0, r3
 8003c00:	f004 f8f4 	bl	8007dec <puts>
  while ((CAN->MSR & CAN_MSR_INAK) == CAN_MSR_INAK){
 8003c04:	4b0c      	ldr	r3, [pc, #48]	; (8003c38 <canInit+0x2a4>)
 8003c06:	685b      	ldr	r3, [r3, #4]
 8003c08:	2201      	movs	r2, #1
 8003c0a:	4013      	ands	r3, r2
 8003c0c:	2b01      	cmp	r3, #1
 8003c0e:	d0f5      	beq.n	8003bfc <canInit+0x268>
  } // Wait until we quit initialization mode

  printf("CAN INITIALIZATION OK\r\n");
 8003c10:	4b0f      	ldr	r3, [pc, #60]	; (8003c50 <canInit+0x2bc>)
 8003c12:	0018      	movs	r0, r3
 8003c14:	f004 f8ea 	bl	8007dec <puts>

}
 8003c18:	46c0      	nop			; (mov r8, r8)
 8003c1a:	46bd      	mov	sp, r7
 8003c1c:	bd80      	pop	{r7, pc}
 8003c1e:	46c0      	nop			; (mov r8, r8)
 8003c20:	0800c198 	.word	0x0800c198
 8003c24:	40021000 	.word	0x40021000
 8003c28:	fcffffff 	.word	0xfcffffff
 8003c2c:	fff0ffff 	.word	0xfff0ffff
 8003c30:	ff3fffff 	.word	0xff3fffff
 8003c34:	ffff0fff 	.word	0xffff0fff
 8003c38:	40006400 	.word	0x40006400
 8003c3c:	fffeffff 	.word	0xfffeffff
 8003c40:	0800c1c4 	.word	0x0800c1c4
 8003c44:	bfffffff 	.word	0xbfffffff
 8003c48:	ff8fffff 	.word	0xff8fffff
 8003c4c:	0800c204 	.word	0x0800c204
 8003c50:	0800c248 	.word	0x0800c248

08003c54 <sendRemoteFrame>:

/******************* Send remote frames to the RPI in order to get information about the 4 next passes ********************/

void sendRemoteFrame(){
 8003c54:	b580      	push	{r7, lr}
 8003c56:	b082      	sub	sp, #8
 8003c58:	af00      	add	r7, sp, #0

	nextRemoteFrameId = (numberOfDataFrameReceived >= 6) ? ( ( numberOfDataFrameReceived % 6 ) + 1 ) : (numberOfDataFrameReceived + 1);
 8003c5a:	4b54      	ldr	r3, [pc, #336]	; (8003dac <sendRemoteFrame+0x158>)
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	2b05      	cmp	r3, #5
 8003c60:	d908      	bls.n	8003c74 <sendRemoteFrame+0x20>
 8003c62:	4b52      	ldr	r3, [pc, #328]	; (8003dac <sendRemoteFrame+0x158>)
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	2106      	movs	r1, #6
 8003c68:	0018      	movs	r0, r3
 8003c6a:	f7fc faf9 	bl	8000260 <__aeabi_uidivmod>
 8003c6e:	000b      	movs	r3, r1
 8003c70:	1c5a      	adds	r2, r3, #1
 8003c72:	e002      	b.n	8003c7a <sendRemoteFrame+0x26>
 8003c74:	4b4d      	ldr	r3, [pc, #308]	; (8003dac <sendRemoteFrame+0x158>)
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	1c5a      	adds	r2, r3, #1
 8003c7a:	4b4d      	ldr	r3, [pc, #308]	; (8003db0 <sendRemoteFrame+0x15c>)
 8003c7c:	601a      	str	r2, [r3, #0]

	printf("********** SEND REMOTE FRAME WITH ID N°%ld **********\r\n", nextRemoteFrameId);
 8003c7e:	4b4c      	ldr	r3, [pc, #304]	; (8003db0 <sendRemoteFrame+0x15c>)
 8003c80:	681a      	ldr	r2, [r3, #0]
 8003c82:	4b4c      	ldr	r3, [pc, #304]	; (8003db4 <sendRemoteFrame+0x160>)
 8003c84:	0011      	movs	r1, r2
 8003c86:	0018      	movs	r0, r3
 8003c88:	f004 f836 	bl	8007cf8 <iprintf>

	uint32_t emptyMailbox;

	// Check that all the Tx mailboxes are not full
	if ( ( (CAN->TSR & CAN_TSR_TME0) != 0U ) || ( (CAN->TSR & CAN_TSR_TME1) != 0U ) || ( (CAN->TSR & CAN_TSR_TME2) != 0U) ){
 8003c8c:	4b4a      	ldr	r3, [pc, #296]	; (8003db8 <sendRemoteFrame+0x164>)
 8003c8e:	689a      	ldr	r2, [r3, #8]
 8003c90:	2380      	movs	r3, #128	; 0x80
 8003c92:	04db      	lsls	r3, r3, #19
 8003c94:	4013      	ands	r3, r2
 8003c96:	d10b      	bne.n	8003cb0 <sendRemoteFrame+0x5c>
 8003c98:	4b47      	ldr	r3, [pc, #284]	; (8003db8 <sendRemoteFrame+0x164>)
 8003c9a:	689a      	ldr	r2, [r3, #8]
 8003c9c:	2380      	movs	r3, #128	; 0x80
 8003c9e:	051b      	lsls	r3, r3, #20
 8003ca0:	4013      	ands	r3, r2
 8003ca2:	d105      	bne.n	8003cb0 <sendRemoteFrame+0x5c>
 8003ca4:	4b44      	ldr	r3, [pc, #272]	; (8003db8 <sendRemoteFrame+0x164>)
 8003ca6:	689a      	ldr	r2, [r3, #8]
 8003ca8:	2380      	movs	r3, #128	; 0x80
 8003caa:	055b      	lsls	r3, r3, #21
 8003cac:	4013      	ands	r3, r2
 8003cae:	d074      	beq.n	8003d9a <sendRemoteFrame+0x146>

		// Select an empty transmit mailbox
		emptyMailbox = (CAN->TSR & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 8003cb0:	4b41      	ldr	r3, [pc, #260]	; (8003db8 <sendRemoteFrame+0x164>)
 8003cb2:	689b      	ldr	r3, [r3, #8]
 8003cb4:	0e1b      	lsrs	r3, r3, #24
 8003cb6:	2203      	movs	r2, #3
 8003cb8:	4013      	ands	r3, r2
 8003cba:	607b      	str	r3, [r7, #4]

		printf("The transmit mailbox selected for the ID n°%ld is mailbox %ld\r\n", nextRemoteFrameId, emptyMailbox);
 8003cbc:	4b3c      	ldr	r3, [pc, #240]	; (8003db0 <sendRemoteFrame+0x15c>)
 8003cbe:	6819      	ldr	r1, [r3, #0]
 8003cc0:	687a      	ldr	r2, [r7, #4]
 8003cc2:	4b3e      	ldr	r3, [pc, #248]	; (8003dbc <sendRemoteFrame+0x168>)
 8003cc4:	0018      	movs	r0, r3
 8003cc6:	f004 f817 	bl	8007cf8 <iprintf>

		// IDE bit set to 0 because we use format CAN Strandard format (2.0A)
		CAN->sTxMailBox[emptyMailbox].TIR &= ~(0x01 << 2); // Set bit 2 to 0
 8003cca:	4a3b      	ldr	r2, [pc, #236]	; (8003db8 <sendRemoteFrame+0x164>)
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	3318      	adds	r3, #24
 8003cd0:	011b      	lsls	r3, r3, #4
 8003cd2:	589b      	ldr	r3, [r3, r2]
 8003cd4:	4938      	ldr	r1, [pc, #224]	; (8003db8 <sendRemoteFrame+0x164>)
 8003cd6:	2204      	movs	r2, #4
 8003cd8:	4393      	bics	r3, r2
 8003cda:	001a      	movs	r2, r3
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	3318      	adds	r3, #24
 8003ce0:	011b      	lsls	r3, r3, #4
 8003ce2:	505a      	str	r2, [r3, r1]

		// RTR bit set to 1 because we send a request frame
		CAN->sTxMailBox[emptyMailbox].TIR |= (0x01 << 1); // Set bit 1 to 1
 8003ce4:	4a34      	ldr	r2, [pc, #208]	; (8003db8 <sendRemoteFrame+0x164>)
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	3318      	adds	r3, #24
 8003cea:	011b      	lsls	r3, r3, #4
 8003cec:	589b      	ldr	r3, [r3, r2]
 8003cee:	4932      	ldr	r1, [pc, #200]	; (8003db8 <sendRemoteFrame+0x164>)
 8003cf0:	2202      	movs	r2, #2
 8003cf2:	431a      	orrs	r2, r3
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	3318      	adds	r3, #24
 8003cf8:	011b      	lsls	r3, r3, #4
 8003cfa:	505a      	str	r2, [r3, r1]

		// Set the identifier field according to the parameter "nextRemoteFrameId"
		CAN->sTxMailBox[emptyMailbox].TIR &= ~(0x00003FFFF << 3); // Clear bits 3 to 20
 8003cfc:	4a2e      	ldr	r2, [pc, #184]	; (8003db8 <sendRemoteFrame+0x164>)
 8003cfe:	687b      	ldr	r3, [r7, #4]
 8003d00:	3318      	adds	r3, #24
 8003d02:	011b      	lsls	r3, r3, #4
 8003d04:	589b      	ldr	r3, [r3, r2]
 8003d06:	492c      	ldr	r1, [pc, #176]	; (8003db8 <sendRemoteFrame+0x164>)
 8003d08:	4a2d      	ldr	r2, [pc, #180]	; (8003dc0 <sendRemoteFrame+0x16c>)
 8003d0a:	401a      	ands	r2, r3
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	3318      	adds	r3, #24
 8003d10:	011b      	lsls	r3, r3, #4
 8003d12:	505a      	str	r2, [r3, r1]
		CAN->sTxMailBox[emptyMailbox].TIR &= ~(0x000007FF << 21); // Clear bits 21 to 31
 8003d14:	4a28      	ldr	r2, [pc, #160]	; (8003db8 <sendRemoteFrame+0x164>)
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	3318      	adds	r3, #24
 8003d1a:	011b      	lsls	r3, r3, #4
 8003d1c:	589b      	ldr	r3, [r3, r2]
 8003d1e:	4926      	ldr	r1, [pc, #152]	; (8003db8 <sendRemoteFrame+0x164>)
 8003d20:	02db      	lsls	r3, r3, #11
 8003d22:	0ada      	lsrs	r2, r3, #11
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	3318      	adds	r3, #24
 8003d28:	011b      	lsls	r3, r3, #4
 8003d2a:	505a      	str	r2, [r3, r1]
		CAN->sTxMailBox[emptyMailbox].TIR = ( (uint32_t) nextRemoteFrameId << 21);
 8003d2c:	4b20      	ldr	r3, [pc, #128]	; (8003db0 <sendRemoteFrame+0x15c>)
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	4921      	ldr	r1, [pc, #132]	; (8003db8 <sendRemoteFrame+0x164>)
 8003d32:	055a      	lsls	r2, r3, #21
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	3318      	adds	r3, #24
 8003d38:	011b      	lsls	r3, r3, #4
 8003d3a:	505a      	str	r2, [r3, r1]

		// Size of the data frame according to the parameter "nbBytesCanFrame"
		CAN->sTxMailBox[emptyMailbox].TDTR &= ~(0xFFFFFFFF << 0); // Clear bits 0 to 3
 8003d3c:	4a1e      	ldr	r2, [pc, #120]	; (8003db8 <sendRemoteFrame+0x164>)
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	3318      	adds	r3, #24
 8003d42:	011b      	lsls	r3, r3, #4
 8003d44:	18d3      	adds	r3, r2, r3
 8003d46:	3304      	adds	r3, #4
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	4a1b      	ldr	r2, [pc, #108]	; (8003db8 <sendRemoteFrame+0x164>)
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	3318      	adds	r3, #24
 8003d50:	011b      	lsls	r3, r3, #4
 8003d52:	18d3      	adds	r3, r2, r3
 8003d54:	3304      	adds	r3, #4
 8003d56:	2200      	movs	r2, #0
 8003d58:	601a      	str	r2, [r3, #0]
		CAN->sTxMailBox[emptyMailbox].TDTR |= ( ( (uint32_t) nbBytesCanFrame[nextRemoteFrameId - 1] ) << 0);
 8003d5a:	4a17      	ldr	r2, [pc, #92]	; (8003db8 <sendRemoteFrame+0x164>)
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	3318      	adds	r3, #24
 8003d60:	011b      	lsls	r3, r3, #4
 8003d62:	18d3      	adds	r3, r2, r3
 8003d64:	3304      	adds	r3, #4
 8003d66:	681a      	ldr	r2, [r3, #0]
 8003d68:	4b11      	ldr	r3, [pc, #68]	; (8003db0 <sendRemoteFrame+0x15c>)
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	1e59      	subs	r1, r3, #1
 8003d6e:	4b15      	ldr	r3, [pc, #84]	; (8003dc4 <sendRemoteFrame+0x170>)
 8003d70:	0089      	lsls	r1, r1, #2
 8003d72:	58cb      	ldr	r3, [r1, r3]
 8003d74:	4910      	ldr	r1, [pc, #64]	; (8003db8 <sendRemoteFrame+0x164>)
 8003d76:	431a      	orrs	r2, r3
 8003d78:	687b      	ldr	r3, [r7, #4]
 8003d7a:	3318      	adds	r3, #24
 8003d7c:	011b      	lsls	r3, r3, #4
 8003d7e:	18cb      	adds	r3, r1, r3
 8003d80:	3304      	adds	r3, #4
 8003d82:	601a      	str	r2, [r3, #0]

		// Ask for transmission request : TXRQ = 1
		CAN->sTxMailBox[0].TIR |= CAN_TI0R_TXRQ;
 8003d84:	4a0c      	ldr	r2, [pc, #48]	; (8003db8 <sendRemoteFrame+0x164>)
 8003d86:	23c0      	movs	r3, #192	; 0xc0
 8003d88:	005b      	lsls	r3, r3, #1
 8003d8a:	58d3      	ldr	r3, [r2, r3]
 8003d8c:	490a      	ldr	r1, [pc, #40]	; (8003db8 <sendRemoteFrame+0x164>)
 8003d8e:	2201      	movs	r2, #1
 8003d90:	431a      	orrs	r2, r3
 8003d92:	23c0      	movs	r3, #192	; 0xc0
 8003d94:	005b      	lsls	r3, r3, #1
 8003d96:	50ca      	str	r2, [r1, r3]
 8003d98:	e003      	b.n	8003da2 <sendRemoteFrame+0x14e>

	}

	else{

		printf("All the mailbox are full\r\n");
 8003d9a:	4b0b      	ldr	r3, [pc, #44]	; (8003dc8 <sendRemoteFrame+0x174>)
 8003d9c:	0018      	movs	r0, r3
 8003d9e:	f004 f825 	bl	8007dec <puts>
	}

}
 8003da2:	46c0      	nop			; (mov r8, r8)
 8003da4:	46bd      	mov	sp, r7
 8003da6:	b002      	add	sp, #8
 8003da8:	bd80      	pop	{r7, pc}
 8003daa:	46c0      	nop			; (mov r8, r8)
 8003dac:	2000027c 	.word	0x2000027c
 8003db0:	20000280 	.word	0x20000280
 8003db4:	0800c260 	.word	0x0800c260
 8003db8:	40006400 	.word	0x40006400
 8003dbc:	0800c29c 	.word	0x0800c29c
 8003dc0:	ffe00007 	.word	0xffe00007
 8003dc4:	20000000 	.word	0x20000000
 8003dc8:	0800c2e0 	.word	0x0800c2e0

08003dcc <concat>:

/*******************  Concatenate to integer into one  ********************/

int concat(int a, int b){
 8003dcc:	b5b0      	push	{r4, r5, r7, lr}
 8003dce:	b08e      	sub	sp, #56	; 0x38
 8003dd0:	af00      	add	r7, sp, #0
 8003dd2:	6078      	str	r0, [r7, #4]
 8003dd4:	6039      	str	r1, [r7, #0]

	char s1[20];
	char s2[20];

    // Convert both the integers to string
    sprintf(s1, "%d", a);
 8003dd6:	687a      	ldr	r2, [r7, #4]
 8003dd8:	490e      	ldr	r1, [pc, #56]	; (8003e14 <concat+0x48>)
 8003dda:	2420      	movs	r4, #32
 8003ddc:	193b      	adds	r3, r7, r4
 8003dde:	0018      	movs	r0, r3
 8003de0:	f004 f820 	bl	8007e24 <siprintf>
    sprintf(s2, "%d", b);
 8003de4:	683a      	ldr	r2, [r7, #0]
 8003de6:	490b      	ldr	r1, [pc, #44]	; (8003e14 <concat+0x48>)
 8003de8:	250c      	movs	r5, #12
 8003dea:	197b      	adds	r3, r7, r5
 8003dec:	0018      	movs	r0, r3
 8003dee:	f004 f819 	bl	8007e24 <siprintf>

    // Concatenate both strings
    strcat(s1, s2);
 8003df2:	197a      	adds	r2, r7, r5
 8003df4:	193b      	adds	r3, r7, r4
 8003df6:	0011      	movs	r1, r2
 8003df8:	0018      	movs	r0, r3
 8003dfa:	f004 f833 	bl	8007e64 <strcat>

    // Convert the concatenated string
    // to integer
    int c = atoi(s1);
 8003dfe:	193b      	adds	r3, r7, r4
 8003e00:	0018      	movs	r0, r3
 8003e02:	f003 f914 	bl	800702e <atoi>
 8003e06:	0003      	movs	r3, r0
 8003e08:	637b      	str	r3, [r7, #52]	; 0x34

    // return the formed integer
    return c;
 8003e0a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
}
 8003e0c:	0018      	movs	r0, r3
 8003e0e:	46bd      	mov	sp, r7
 8003e10:	b00e      	add	sp, #56	; 0x38
 8003e12:	bdb0      	pop	{r4, r5, r7, pc}
 8003e14:	0800c2fc 	.word	0x0800c2fc

08003e18 <receiveDataFrame>:

/******************* Receive data frames from the RPI in order to get information about the 4 next passes ********************/

void receiveDataFrame(){
 8003e18:	b5b0      	push	{r4, r5, r7, lr}
 8003e1a:	b088      	sub	sp, #32
 8003e1c:	af00      	add	r7, sp, #0

	passNumberToUpdate = (numberOfDataFrameReceived < 6) ? 0 : ( (numberOfDataFrameReceived < 12) ? 1 : ( (numberOfDataFrameReceived < 18) ? 2 : 3) );
 8003e1e:	4bb8      	ldr	r3, [pc, #736]	; (8004100 <receiveDataFrame+0x2e8>)
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	2b05      	cmp	r3, #5
 8003e24:	d90d      	bls.n	8003e42 <receiveDataFrame+0x2a>
 8003e26:	4bb6      	ldr	r3, [pc, #728]	; (8004100 <receiveDataFrame+0x2e8>)
 8003e28:	681b      	ldr	r3, [r3, #0]
 8003e2a:	2b0b      	cmp	r3, #11
 8003e2c:	d907      	bls.n	8003e3e <receiveDataFrame+0x26>
 8003e2e:	4bb4      	ldr	r3, [pc, #720]	; (8004100 <receiveDataFrame+0x2e8>)
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	2b11      	cmp	r3, #17
 8003e34:	d801      	bhi.n	8003e3a <receiveDataFrame+0x22>
 8003e36:	2302      	movs	r3, #2
 8003e38:	e004      	b.n	8003e44 <receiveDataFrame+0x2c>
 8003e3a:	2303      	movs	r3, #3
 8003e3c:	e002      	b.n	8003e44 <receiveDataFrame+0x2c>
 8003e3e:	2301      	movs	r3, #1
 8003e40:	e000      	b.n	8003e44 <receiveDataFrame+0x2c>
 8003e42:	2300      	movs	r3, #0
 8003e44:	4aaf      	ldr	r2, [pc, #700]	; (8004104 <receiveDataFrame+0x2ec>)
 8003e46:	6013      	str	r3, [r2, #0]
	nextDataFrameId = (numberOfDataFrameReceived >= 6) ? ( ( numberOfDataFrameReceived % 6 ) + 1 ) : (numberOfDataFrameReceived + 1);
 8003e48:	4bad      	ldr	r3, [pc, #692]	; (8004100 <receiveDataFrame+0x2e8>)
 8003e4a:	681b      	ldr	r3, [r3, #0]
 8003e4c:	2b05      	cmp	r3, #5
 8003e4e:	d908      	bls.n	8003e62 <receiveDataFrame+0x4a>
 8003e50:	4bab      	ldr	r3, [pc, #684]	; (8004100 <receiveDataFrame+0x2e8>)
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	2106      	movs	r1, #6
 8003e56:	0018      	movs	r0, r3
 8003e58:	f7fc fa02 	bl	8000260 <__aeabi_uidivmod>
 8003e5c:	000b      	movs	r3, r1
 8003e5e:	1c5a      	adds	r2, r3, #1
 8003e60:	e002      	b.n	8003e68 <receiveDataFrame+0x50>
 8003e62:	4ba7      	ldr	r3, [pc, #668]	; (8004100 <receiveDataFrame+0x2e8>)
 8003e64:	681b      	ldr	r3, [r3, #0]
 8003e66:	1c5a      	adds	r2, r3, #1
 8003e68:	4ba7      	ldr	r3, [pc, #668]	; (8004108 <receiveDataFrame+0x2f0>)
 8003e6a:	601a      	str	r2, [r3, #0]

	// Get the fifo number where the data frame is stored
	uint32_t fifoNumber = ((CAN->RF0R & CAN_RF0R_FMP0) != 0U) ? 0 : 1;
 8003e6c:	4ba7      	ldr	r3, [pc, #668]	; (800410c <receiveDataFrame+0x2f4>)
 8003e6e:	68db      	ldr	r3, [r3, #12]
 8003e70:	2203      	movs	r2, #3
 8003e72:	4013      	ands	r3, r2
 8003e74:	425a      	negs	r2, r3
 8003e76:	4153      	adcs	r3, r2
 8003e78:	b2db      	uxtb	r3, r3
 8003e7a:	61fb      	str	r3, [r7, #28]
	printf("The data frame was store into the fifo %ld \r\n", fifoNumber);
 8003e7c:	69fa      	ldr	r2, [r7, #28]
 8003e7e:	4ba4      	ldr	r3, [pc, #656]	; (8004110 <receiveDataFrame+0x2f8>)
 8003e80:	0011      	movs	r1, r2
 8003e82:	0018      	movs	r0, r3
 8003e84:	f003 ff38 	bl	8007cf8 <iprintf>

	// Get the id of the received data frame
	uint32_t receivedDataFrameId = (CAN_RI0R_STID & CAN->sFIFOMailBox[fifoNumber].RIR) >> CAN_TI0R_STID_Pos;
 8003e88:	4aa0      	ldr	r2, [pc, #640]	; (800410c <receiveDataFrame+0x2f4>)
 8003e8a:	69fb      	ldr	r3, [r7, #28]
 8003e8c:	331b      	adds	r3, #27
 8003e8e:	011b      	lsls	r3, r3, #4
 8003e90:	589b      	ldr	r3, [r3, r2]
 8003e92:	0d5b      	lsrs	r3, r3, #21
 8003e94:	055b      	lsls	r3, r3, #21
 8003e96:	0d5b      	lsrs	r3, r3, #21
 8003e98:	61bb      	str	r3, [r7, #24]
	printf("The identifier received for the data frame is %ld \r\n", receivedDataFrameId);
 8003e9a:	69ba      	ldr	r2, [r7, #24]
 8003e9c:	4b9d      	ldr	r3, [pc, #628]	; (8004114 <receiveDataFrame+0x2fc>)
 8003e9e:	0011      	movs	r1, r2
 8003ea0:	0018      	movs	r0, r3
 8003ea2:	f003 ff29 	bl	8007cf8 <iprintf>

	// Check if the identifier from the received data frame and the supposed next id to receive are the same
	if(receivedDataFrameId == nextDataFrameId){
 8003ea6:	4b98      	ldr	r3, [pc, #608]	; (8004108 <receiveDataFrame+0x2f0>)
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	69ba      	ldr	r2, [r7, #24]
 8003eac:	429a      	cmp	r2, r3
 8003eae:	d001      	beq.n	8003eb4 <receiveDataFrame+0x9c>
 8003eb0:	f000 fdc8 	bl	8004a44 <receiveDataFrame+0xc2c>

		// Get the size of the received data frame
	    uint32_t receivedDataFrameDlc = (CAN_RDT0R_DLC & CAN->sFIFOMailBox[fifoNumber].RDTR) >> CAN_RDT0R_DLC_Pos;
 8003eb4:	4a95      	ldr	r2, [pc, #596]	; (800410c <receiveDataFrame+0x2f4>)
 8003eb6:	69fb      	ldr	r3, [r7, #28]
 8003eb8:	331b      	adds	r3, #27
 8003eba:	011b      	lsls	r3, r3, #4
 8003ebc:	18d3      	adds	r3, r2, r3
 8003ebe:	3304      	adds	r3, #4
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	220f      	movs	r2, #15
 8003ec4:	4013      	ands	r3, r2
 8003ec6:	617b      	str	r3, [r7, #20]
	    printf("The size from the received data frame is %ld bytes \r\n",receivedDataFrameDlc);
 8003ec8:	697a      	ldr	r2, [r7, #20]
 8003eca:	4b93      	ldr	r3, [pc, #588]	; (8004118 <receiveDataFrame+0x300>)
 8003ecc:	0011      	movs	r1, r2
 8003ece:	0018      	movs	r0, r3
 8003ed0:	f003 ff12 	bl	8007cf8 <iprintf>

	    // Check if the data lenght received and the supposed next data lenght to receive are same
	    if(receivedDataFrameDlc == (nbBytesCanFrame[nextDataFrameId - 1])){
 8003ed4:	4b8c      	ldr	r3, [pc, #560]	; (8004108 <receiveDataFrame+0x2f0>)
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	1e5a      	subs	r2, r3, #1
 8003eda:	4b90      	ldr	r3, [pc, #576]	; (800411c <receiveDataFrame+0x304>)
 8003edc:	0092      	lsls	r2, r2, #2
 8003ede:	58d3      	ldr	r3, [r2, r3]
 8003ee0:	697a      	ldr	r2, [r7, #20]
 8003ee2:	429a      	cmp	r2, r3
 8003ee4:	d001      	beq.n	8003eea <receiveDataFrame+0xd2>
 8003ee6:	f000 fda8 	bl	8004a3a <receiveDataFrame+0xc22>

	    	printf("The received data frame has the right size \r\n");
 8003eea:	4b8d      	ldr	r3, [pc, #564]	; (8004120 <receiveDataFrame+0x308>)
 8003eec:	0018      	movs	r0, r3
 8003eee:	f003 ff7d 	bl	8007dec <puts>

	    	printf("********** RECEIVE DATA FRAME WITH ID N°%ld FOR PASS N°%ld **********\r\n", nextDataFrameId, (passNumberToUpdate + 1));
 8003ef2:	4b85      	ldr	r3, [pc, #532]	; (8004108 <receiveDataFrame+0x2f0>)
 8003ef4:	6819      	ldr	r1, [r3, #0]
 8003ef6:	4b83      	ldr	r3, [pc, #524]	; (8004104 <receiveDataFrame+0x2ec>)
 8003ef8:	681b      	ldr	r3, [r3, #0]
 8003efa:	1c5a      	adds	r2, r3, #1
 8003efc:	4b89      	ldr	r3, [pc, #548]	; (8004124 <receiveDataFrame+0x30c>)
 8003efe:	0018      	movs	r0, r3
 8003f00:	f003 fefa 	bl	8007cf8 <iprintf>

	    	switch (nextDataFrameId){
 8003f04:	4b80      	ldr	r3, [pc, #512]	; (8004108 <receiveDataFrame+0x2f0>)
 8003f06:	681b      	ldr	r3, [r3, #0]
 8003f08:	2b06      	cmp	r3, #6
 8003f0a:	d901      	bls.n	8003f10 <receiveDataFrame+0xf8>
 8003f0c:	f000 fd87 	bl	8004a1e <receiveDataFrame+0xc06>
 8003f10:	009a      	lsls	r2, r3, #2
 8003f12:	4b85      	ldr	r3, [pc, #532]	; (8004128 <receiveDataFrame+0x310>)
 8003f14:	18d3      	adds	r3, r2, r3
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	469f      	mov	pc, r3
	    		uint32_t hundreds, milli, minuteUnit, minuteTeens, second;

	    		// Get the AOS date
	    		case 1:

	    			passes[passNumberToUpdate].passTime.year =  concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ); // Year
 8003f1a:	4a7c      	ldr	r2, [pc, #496]	; (800410c <receiveDataFrame+0x2f4>)
 8003f1c:	23dc      	movs	r3, #220	; 0xdc
 8003f1e:	005b      	lsls	r3, r3, #1
 8003f20:	58d3      	ldr	r3, [r2, r3]
 8003f22:	b2db      	uxtb	r3, r3
 8003f24:	3b30      	subs	r3, #48	; 0x30
 8003f26:	0018      	movs	r0, r3
 8003f28:	4a78      	ldr	r2, [pc, #480]	; (800410c <receiveDataFrame+0x2f4>)
 8003f2a:	23dc      	movs	r3, #220	; 0xdc
 8003f2c:	005b      	lsls	r3, r3, #1
 8003f2e:	58d3      	ldr	r3, [r2, r3]
 8003f30:	0a1b      	lsrs	r3, r3, #8
 8003f32:	b2db      	uxtb	r3, r3
 8003f34:	3b30      	subs	r3, #48	; 0x30
 8003f36:	0019      	movs	r1, r3
 8003f38:	f7ff ff48 	bl	8003dcc <concat>
 8003f3c:	0001      	movs	r1, r0
 8003f3e:	4b71      	ldr	r3, [pc, #452]	; (8004104 <receiveDataFrame+0x2ec>)
 8003f40:	681a      	ldr	r2, [r3, #0]
 8003f42:	0008      	movs	r0, r1
 8003f44:	4b79      	ldr	r3, [pc, #484]	; (800412c <receiveDataFrame+0x314>)
 8003f46:	2164      	movs	r1, #100	; 0x64
 8003f48:	434a      	muls	r2, r1
 8003f4a:	50d0      	str	r0, [r2, r3]
	    			printf("The AOS date year is : %ld\r\n", passes[passNumberToUpdate].passTime.year);
 8003f4c:	4b6d      	ldr	r3, [pc, #436]	; (8004104 <receiveDataFrame+0x2ec>)
 8003f4e:	681a      	ldr	r2, [r3, #0]
 8003f50:	4b76      	ldr	r3, [pc, #472]	; (800412c <receiveDataFrame+0x314>)
 8003f52:	2164      	movs	r1, #100	; 0x64
 8003f54:	434a      	muls	r2, r1
 8003f56:	58d2      	ldr	r2, [r2, r3]
 8003f58:	4b75      	ldr	r3, [pc, #468]	; (8004130 <receiveDataFrame+0x318>)
 8003f5a:	0011      	movs	r1, r2
 8003f5c:	0018      	movs	r0, r3
 8003f5e:	f003 fecb 	bl	8007cf8 <iprintf>

	    			passes[passNumberToUpdate].passTime.month = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) ); // Month
 8003f62:	4a6a      	ldr	r2, [pc, #424]	; (800410c <receiveDataFrame+0x2f4>)
 8003f64:	23dc      	movs	r3, #220	; 0xdc
 8003f66:	005b      	lsls	r3, r3, #1
 8003f68:	58d3      	ldr	r3, [r2, r3]
 8003f6a:	0e1b      	lsrs	r3, r3, #24
 8003f6c:	b2db      	uxtb	r3, r3
 8003f6e:	3b30      	subs	r3, #48	; 0x30
 8003f70:	0018      	movs	r0, r3
 8003f72:	4a66      	ldr	r2, [pc, #408]	; (800410c <receiveDataFrame+0x2f4>)
 8003f74:	23de      	movs	r3, #222	; 0xde
 8003f76:	005b      	lsls	r3, r3, #1
 8003f78:	58d3      	ldr	r3, [r2, r3]
 8003f7a:	b2db      	uxtb	r3, r3
 8003f7c:	3b30      	subs	r3, #48	; 0x30
 8003f7e:	0019      	movs	r1, r3
 8003f80:	f7ff ff24 	bl	8003dcc <concat>
 8003f84:	0002      	movs	r2, r0
 8003f86:	4b5f      	ldr	r3, [pc, #380]	; (8004104 <receiveDataFrame+0x2ec>)
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	0010      	movs	r0, r2
 8003f8c:	4a67      	ldr	r2, [pc, #412]	; (800412c <receiveDataFrame+0x314>)
 8003f8e:	2164      	movs	r1, #100	; 0x64
 8003f90:	434b      	muls	r3, r1
 8003f92:	18d3      	adds	r3, r2, r3
 8003f94:	3304      	adds	r3, #4
 8003f96:	6018      	str	r0, [r3, #0]
	    			printf("The AOS date month is : %ld\r\n", passes[passNumberToUpdate].passTime.month);
 8003f98:	4b5a      	ldr	r3, [pc, #360]	; (8004104 <receiveDataFrame+0x2ec>)
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	4a63      	ldr	r2, [pc, #396]	; (800412c <receiveDataFrame+0x314>)
 8003f9e:	2164      	movs	r1, #100	; 0x64
 8003fa0:	434b      	muls	r3, r1
 8003fa2:	18d3      	adds	r3, r2, r3
 8003fa4:	3304      	adds	r3, #4
 8003fa6:	681a      	ldr	r2, [r3, #0]
 8003fa8:	4b62      	ldr	r3, [pc, #392]	; (8004134 <receiveDataFrame+0x31c>)
 8003faa:	0011      	movs	r1, r2
 8003fac:	0018      	movs	r0, r3
 8003fae:	f003 fea3 	bl	8007cf8 <iprintf>

	    			passes[passNumberToUpdate].passTime.day = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA6 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA6_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA7 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA7_Pos) ) - '0' ) ); // Day
 8003fb2:	4a56      	ldr	r2, [pc, #344]	; (800410c <receiveDataFrame+0x2f4>)
 8003fb4:	23de      	movs	r3, #222	; 0xde
 8003fb6:	005b      	lsls	r3, r3, #1
 8003fb8:	58d3      	ldr	r3, [r2, r3]
 8003fba:	0c1b      	lsrs	r3, r3, #16
 8003fbc:	b2db      	uxtb	r3, r3
 8003fbe:	3b30      	subs	r3, #48	; 0x30
 8003fc0:	0018      	movs	r0, r3
 8003fc2:	4a52      	ldr	r2, [pc, #328]	; (800410c <receiveDataFrame+0x2f4>)
 8003fc4:	23de      	movs	r3, #222	; 0xde
 8003fc6:	005b      	lsls	r3, r3, #1
 8003fc8:	58d3      	ldr	r3, [r2, r3]
 8003fca:	0e1b      	lsrs	r3, r3, #24
 8003fcc:	b2db      	uxtb	r3, r3
 8003fce:	3b30      	subs	r3, #48	; 0x30
 8003fd0:	0019      	movs	r1, r3
 8003fd2:	f7ff fefb 	bl	8003dcc <concat>
 8003fd6:	0002      	movs	r2, r0
 8003fd8:	4b4a      	ldr	r3, [pc, #296]	; (8004104 <receiveDataFrame+0x2ec>)
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	0010      	movs	r0, r2
 8003fde:	4a53      	ldr	r2, [pc, #332]	; (800412c <receiveDataFrame+0x314>)
 8003fe0:	2164      	movs	r1, #100	; 0x64
 8003fe2:	434b      	muls	r3, r1
 8003fe4:	18d3      	adds	r3, r2, r3
 8003fe6:	3308      	adds	r3, #8
 8003fe8:	6018      	str	r0, [r3, #0]
	    			printf("The AOS date day is : %ld\r\n", passes[passNumberToUpdate].passTime.day);
 8003fea:	4b46      	ldr	r3, [pc, #280]	; (8004104 <receiveDataFrame+0x2ec>)
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	4a4f      	ldr	r2, [pc, #316]	; (800412c <receiveDataFrame+0x314>)
 8003ff0:	2164      	movs	r1, #100	; 0x64
 8003ff2:	434b      	muls	r3, r1
 8003ff4:	18d3      	adds	r3, r2, r3
 8003ff6:	3308      	adds	r3, #8
 8003ff8:	681a      	ldr	r2, [r3, #0]
 8003ffa:	4b4f      	ldr	r3, [pc, #316]	; (8004138 <receiveDataFrame+0x320>)
 8003ffc:	0011      	movs	r1, r2
 8003ffe:	0018      	movs	r0, r3
 8004000:	f003 fe7a 	bl	8007cf8 <iprintf>

	    			break;
 8004004:	f000 fd0b 	bl	8004a1e <receiveDataFrame+0xc06>

	    		// Get the AOS time
	    		case 2:

	    			passes[passNumberToUpdate].passTime.hour =  concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ); // Year
 8004008:	4a40      	ldr	r2, [pc, #256]	; (800410c <receiveDataFrame+0x2f4>)
 800400a:	23dc      	movs	r3, #220	; 0xdc
 800400c:	005b      	lsls	r3, r3, #1
 800400e:	58d3      	ldr	r3, [r2, r3]
 8004010:	b2db      	uxtb	r3, r3
 8004012:	3b30      	subs	r3, #48	; 0x30
 8004014:	0018      	movs	r0, r3
 8004016:	4a3d      	ldr	r2, [pc, #244]	; (800410c <receiveDataFrame+0x2f4>)
 8004018:	23dc      	movs	r3, #220	; 0xdc
 800401a:	005b      	lsls	r3, r3, #1
 800401c:	58d3      	ldr	r3, [r2, r3]
 800401e:	0a1b      	lsrs	r3, r3, #8
 8004020:	b2db      	uxtb	r3, r3
 8004022:	3b30      	subs	r3, #48	; 0x30
 8004024:	0019      	movs	r1, r3
 8004026:	f7ff fed1 	bl	8003dcc <concat>
 800402a:	0002      	movs	r2, r0
 800402c:	4b35      	ldr	r3, [pc, #212]	; (8004104 <receiveDataFrame+0x2ec>)
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	0010      	movs	r0, r2
 8004032:	4a3e      	ldr	r2, [pc, #248]	; (800412c <receiveDataFrame+0x314>)
 8004034:	2164      	movs	r1, #100	; 0x64
 8004036:	434b      	muls	r3, r1
 8004038:	18d3      	adds	r3, r2, r3
 800403a:	330c      	adds	r3, #12
 800403c:	6018      	str	r0, [r3, #0]
	    			printf("The AOS time hour is : %ld\r\n", passes[passNumberToUpdate].passTime.hour);
 800403e:	4b31      	ldr	r3, [pc, #196]	; (8004104 <receiveDataFrame+0x2ec>)
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	4a3a      	ldr	r2, [pc, #232]	; (800412c <receiveDataFrame+0x314>)
 8004044:	2164      	movs	r1, #100	; 0x64
 8004046:	434b      	muls	r3, r1
 8004048:	18d3      	adds	r3, r2, r3
 800404a:	330c      	adds	r3, #12
 800404c:	681a      	ldr	r2, [r3, #0]
 800404e:	4b3b      	ldr	r3, [pc, #236]	; (800413c <receiveDataFrame+0x324>)
 8004050:	0011      	movs	r1, r2
 8004052:	0018      	movs	r0, r3
 8004054:	f003 fe50 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].passTime.minute = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) ); // Month
 8004058:	4a2c      	ldr	r2, [pc, #176]	; (800410c <receiveDataFrame+0x2f4>)
 800405a:	23dc      	movs	r3, #220	; 0xdc
 800405c:	005b      	lsls	r3, r3, #1
 800405e:	58d3      	ldr	r3, [r2, r3]
 8004060:	0e1b      	lsrs	r3, r3, #24
 8004062:	b2db      	uxtb	r3, r3
 8004064:	3b30      	subs	r3, #48	; 0x30
 8004066:	0018      	movs	r0, r3
 8004068:	4a28      	ldr	r2, [pc, #160]	; (800410c <receiveDataFrame+0x2f4>)
 800406a:	23de      	movs	r3, #222	; 0xde
 800406c:	005b      	lsls	r3, r3, #1
 800406e:	58d3      	ldr	r3, [r2, r3]
 8004070:	b2db      	uxtb	r3, r3
 8004072:	3b30      	subs	r3, #48	; 0x30
 8004074:	0019      	movs	r1, r3
 8004076:	f7ff fea9 	bl	8003dcc <concat>
 800407a:	0002      	movs	r2, r0
 800407c:	4b21      	ldr	r3, [pc, #132]	; (8004104 <receiveDataFrame+0x2ec>)
 800407e:	681b      	ldr	r3, [r3, #0]
 8004080:	0010      	movs	r0, r2
 8004082:	4a2a      	ldr	r2, [pc, #168]	; (800412c <receiveDataFrame+0x314>)
 8004084:	2164      	movs	r1, #100	; 0x64
 8004086:	434b      	muls	r3, r1
 8004088:	18d3      	adds	r3, r2, r3
 800408a:	3310      	adds	r3, #16
 800408c:	6018      	str	r0, [r3, #0]
	    			printf("The AOS time minute is : %ld\r\n", passes[passNumberToUpdate].passTime.minute);
 800408e:	4b1d      	ldr	r3, [pc, #116]	; (8004104 <receiveDataFrame+0x2ec>)
 8004090:	681b      	ldr	r3, [r3, #0]
 8004092:	4a26      	ldr	r2, [pc, #152]	; (800412c <receiveDataFrame+0x314>)
 8004094:	2164      	movs	r1, #100	; 0x64
 8004096:	434b      	muls	r3, r1
 8004098:	18d3      	adds	r3, r2, r3
 800409a:	3310      	adds	r3, #16
 800409c:	681a      	ldr	r2, [r3, #0]
 800409e:	4b28      	ldr	r3, [pc, #160]	; (8004140 <receiveDataFrame+0x328>)
 80040a0:	0011      	movs	r1, r2
 80040a2:	0018      	movs	r0, r3
 80040a4:	f003 fe28 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].passTime.second = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA6 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA6_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA7 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA7_Pos) ) - '0' ) ); // Day
 80040a8:	4a18      	ldr	r2, [pc, #96]	; (800410c <receiveDataFrame+0x2f4>)
 80040aa:	23de      	movs	r3, #222	; 0xde
 80040ac:	005b      	lsls	r3, r3, #1
 80040ae:	58d3      	ldr	r3, [r2, r3]
 80040b0:	0c1b      	lsrs	r3, r3, #16
 80040b2:	b2db      	uxtb	r3, r3
 80040b4:	3b30      	subs	r3, #48	; 0x30
 80040b6:	0018      	movs	r0, r3
 80040b8:	4a14      	ldr	r2, [pc, #80]	; (800410c <receiveDataFrame+0x2f4>)
 80040ba:	23de      	movs	r3, #222	; 0xde
 80040bc:	005b      	lsls	r3, r3, #1
 80040be:	58d3      	ldr	r3, [r2, r3]
 80040c0:	0e1b      	lsrs	r3, r3, #24
 80040c2:	b2db      	uxtb	r3, r3
 80040c4:	3b30      	subs	r3, #48	; 0x30
 80040c6:	0019      	movs	r1, r3
 80040c8:	f7ff fe80 	bl	8003dcc <concat>
 80040cc:	0002      	movs	r2, r0
 80040ce:	4b0d      	ldr	r3, [pc, #52]	; (8004104 <receiveDataFrame+0x2ec>)
 80040d0:	681b      	ldr	r3, [r3, #0]
 80040d2:	0010      	movs	r0, r2
 80040d4:	4a15      	ldr	r2, [pc, #84]	; (800412c <receiveDataFrame+0x314>)
 80040d6:	2164      	movs	r1, #100	; 0x64
 80040d8:	434b      	muls	r3, r1
 80040da:	18d3      	adds	r3, r2, r3
 80040dc:	3314      	adds	r3, #20
 80040de:	6018      	str	r0, [r3, #0]
	    			printf("The AOS time second is : %ld\r\n", passes[passNumberToUpdate].passTime.second);
 80040e0:	4b08      	ldr	r3, [pc, #32]	; (8004104 <receiveDataFrame+0x2ec>)
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	4a11      	ldr	r2, [pc, #68]	; (800412c <receiveDataFrame+0x314>)
 80040e6:	2164      	movs	r1, #100	; 0x64
 80040e8:	434b      	muls	r3, r1
 80040ea:	18d3      	adds	r3, r2, r3
 80040ec:	3314      	adds	r3, #20
 80040ee:	681a      	ldr	r2, [r3, #0]
 80040f0:	4b14      	ldr	r3, [pc, #80]	; (8004144 <receiveDataFrame+0x32c>)
 80040f2:	0011      	movs	r1, r2
 80040f4:	0018      	movs	r0, r3
 80040f6:	f003 fdff 	bl	8007cf8 <iprintf>
	    			break;
 80040fa:	f000 fc90 	bl	8004a1e <receiveDataFrame+0xc06>
 80040fe:	46c0      	nop			; (mov r8, r8)
 8004100:	2000027c 	.word	0x2000027c
 8004104:	20000288 	.word	0x20000288
 8004108:	20000284 	.word	0x20000284
 800410c:	40006400 	.word	0x40006400
 8004110:	0800c300 	.word	0x0800c300
 8004114:	0800c330 	.word	0x0800c330
 8004118:	0800c368 	.word	0x0800c368
 800411c:	20000000 	.word	0x20000000
 8004120:	0800c3a0 	.word	0x0800c3a0
 8004124:	0800c3d0 	.word	0x0800c3d0
 8004128:	0800d524 	.word	0x0800d524
 800412c:	2000028c 	.word	0x2000028c
 8004130:	0800c41c 	.word	0x0800c41c
 8004134:	0800c43c 	.word	0x0800c43c
 8004138:	0800c45c 	.word	0x0800c45c
 800413c:	0800c478 	.word	0x0800c478
 8004140:	0800c498 	.word	0x0800c498
 8004144:	0800c4b8 	.word	0x0800c4b8

	    		// Get the transit time
	    		case 3:
	    			minuteUnit = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) );
 8004148:	4aeb      	ldr	r2, [pc, #940]	; (80044f8 <receiveDataFrame+0x6e0>)
 800414a:	23dc      	movs	r3, #220	; 0xdc
 800414c:	005b      	lsls	r3, r3, #1
 800414e:	58d3      	ldr	r3, [r2, r3]
 8004150:	b2db      	uxtb	r3, r3
 8004152:	3b30      	subs	r3, #48	; 0x30
 8004154:	0018      	movs	r0, r3
 8004156:	4ae8      	ldr	r2, [pc, #928]	; (80044f8 <receiveDataFrame+0x6e0>)
 8004158:	23dc      	movs	r3, #220	; 0xdc
 800415a:	005b      	lsls	r3, r3, #1
 800415c:	58d3      	ldr	r3, [r2, r3]
 800415e:	0a1b      	lsrs	r3, r3, #8
 8004160:	b2db      	uxtb	r3, r3
 8004162:	3b30      	subs	r3, #48	; 0x30
 8004164:	0019      	movs	r1, r3
 8004166:	f7ff fe31 	bl	8003dcc <concat>
 800416a:	0003      	movs	r3, r0
 800416c:	60bb      	str	r3, [r7, #8]
	    			printf("The transit time minute unit is : %ld\r\n", minuteUnit);
 800416e:	68ba      	ldr	r2, [r7, #8]
 8004170:	4be2      	ldr	r3, [pc, #904]	; (80044fc <receiveDataFrame+0x6e4>)
 8004172:	0011      	movs	r1, r2
 8004174:	0018      	movs	r0, r3
 8004176:	f003 fdbf 	bl	8007cf8 <iprintf>
	    			minuteTeens = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) );
 800417a:	4adf      	ldr	r2, [pc, #892]	; (80044f8 <receiveDataFrame+0x6e0>)
 800417c:	23dc      	movs	r3, #220	; 0xdc
 800417e:	005b      	lsls	r3, r3, #1
 8004180:	58d3      	ldr	r3, [r2, r3]
 8004182:	0e1b      	lsrs	r3, r3, #24
 8004184:	b2db      	uxtb	r3, r3
 8004186:	3b30      	subs	r3, #48	; 0x30
 8004188:	0018      	movs	r0, r3
 800418a:	4adb      	ldr	r2, [pc, #876]	; (80044f8 <receiveDataFrame+0x6e0>)
 800418c:	23de      	movs	r3, #222	; 0xde
 800418e:	005b      	lsls	r3, r3, #1
 8004190:	58d3      	ldr	r3, [r2, r3]
 8004192:	b2db      	uxtb	r3, r3
 8004194:	3b30      	subs	r3, #48	; 0x30
 8004196:	0019      	movs	r1, r3
 8004198:	f7ff fe18 	bl	8003dcc <concat>
 800419c:	0003      	movs	r3, r0
 800419e:	607b      	str	r3, [r7, #4]
	    			printf("The transit time minute teens is : %ld\r\n", minuteTeens);
 80041a0:	687a      	ldr	r2, [r7, #4]
 80041a2:	4bd7      	ldr	r3, [pc, #860]	; (8004500 <receiveDataFrame+0x6e8>)
 80041a4:	0011      	movs	r1, r2
 80041a6:	0018      	movs	r0, r3
 80041a8:	f003 fda6 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].transitTimeMinute = floorf( ( minuteUnit + (minuteTeens /100.f) ) * 100000 ) / 100000;
 80041ac:	68b8      	ldr	r0, [r7, #8]
 80041ae:	f7fd f8e7 	bl	8001380 <__aeabi_ui2f>
 80041b2:	1c04      	adds	r4, r0, #0
 80041b4:	6878      	ldr	r0, [r7, #4]
 80041b6:	f7fd f8e3 	bl	8001380 <__aeabi_ui2f>
 80041ba:	1c03      	adds	r3, r0, #0
 80041bc:	49d1      	ldr	r1, [pc, #836]	; (8004504 <receiveDataFrame+0x6ec>)
 80041be:	1c18      	adds	r0, r3, #0
 80041c0:	f7fc fbf0 	bl	80009a4 <__aeabi_fdiv>
 80041c4:	1c03      	adds	r3, r0, #0
 80041c6:	1c19      	adds	r1, r3, #0
 80041c8:	1c20      	adds	r0, r4, #0
 80041ca:	f7fc fa51 	bl	8000670 <__aeabi_fadd>
 80041ce:	1c03      	adds	r3, r0, #0
 80041d0:	49cd      	ldr	r1, [pc, #820]	; (8004508 <receiveDataFrame+0x6f0>)
 80041d2:	1c18      	adds	r0, r3, #0
 80041d4:	f7fc fdbe 	bl	8000d54 <__aeabi_fmul>
 80041d8:	1c03      	adds	r3, r0, #0
 80041da:	1c18      	adds	r0, r3, #0
 80041dc:	f007 ff44 	bl	800c068 <floorf>
 80041e0:	1c02      	adds	r2, r0, #0
 80041e2:	4bca      	ldr	r3, [pc, #808]	; (800450c <receiveDataFrame+0x6f4>)
 80041e4:	681c      	ldr	r4, [r3, #0]
 80041e6:	49c8      	ldr	r1, [pc, #800]	; (8004508 <receiveDataFrame+0x6f0>)
 80041e8:	1c10      	adds	r0, r2, #0
 80041ea:	f7fc fbdb 	bl	80009a4 <__aeabi_fdiv>
 80041ee:	1c03      	adds	r3, r0, #0
 80041f0:	1c19      	adds	r1, r3, #0
 80041f2:	4ac7      	ldr	r2, [pc, #796]	; (8004510 <receiveDataFrame+0x6f8>)
 80041f4:	2364      	movs	r3, #100	; 0x64
 80041f6:	4363      	muls	r3, r4
 80041f8:	18d3      	adds	r3, r2, r3
 80041fa:	3318      	adds	r3, #24
 80041fc:	6019      	str	r1, [r3, #0]
	    			printf("The total transit time minute is : %f\r\n", passes[passNumberToUpdate].transitTimeMinute);
 80041fe:	4bc3      	ldr	r3, [pc, #780]	; (800450c <receiveDataFrame+0x6f4>)
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	4ac3      	ldr	r2, [pc, #780]	; (8004510 <receiveDataFrame+0x6f8>)
 8004204:	2164      	movs	r1, #100	; 0x64
 8004206:	434b      	muls	r3, r1
 8004208:	18d3      	adds	r3, r2, r3
 800420a:	3318      	adds	r3, #24
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	1c18      	adds	r0, r3, #0
 8004210:	f7fe fe94 	bl	8002f3c <__aeabi_f2d>
 8004214:	0003      	movs	r3, r0
 8004216:	000c      	movs	r4, r1
 8004218:	49be      	ldr	r1, [pc, #760]	; (8004514 <receiveDataFrame+0x6fc>)
 800421a:	001a      	movs	r2, r3
 800421c:	0023      	movs	r3, r4
 800421e:	0008      	movs	r0, r1
 8004220:	f003 fd6a 	bl	8007cf8 <iprintf>

	    			second = ( (float) (passes[passNumberToUpdate].transitTimeMinute) ) * 60.0 ;
 8004224:	4bb9      	ldr	r3, [pc, #740]	; (800450c <receiveDataFrame+0x6f4>)
 8004226:	681b      	ldr	r3, [r3, #0]
 8004228:	4ab9      	ldr	r2, [pc, #740]	; (8004510 <receiveDataFrame+0x6f8>)
 800422a:	2164      	movs	r1, #100	; 0x64
 800422c:	434b      	muls	r3, r1
 800422e:	18d3      	adds	r3, r2, r3
 8004230:	3318      	adds	r3, #24
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	1c18      	adds	r0, r3, #0
 8004236:	f7fe fe81 	bl	8002f3c <__aeabi_f2d>
 800423a:	2200      	movs	r2, #0
 800423c:	4bb6      	ldr	r3, [pc, #728]	; (8004518 <receiveDataFrame+0x700>)
 800423e:	f7fe f805 	bl	800224c <__aeabi_dmul>
 8004242:	0003      	movs	r3, r0
 8004244:	000c      	movs	r4, r1
 8004246:	0018      	movs	r0, r3
 8004248:	0021      	movs	r1, r4
 800424a:	f7fc f9d7 	bl	80005fc <__aeabi_d2uiz>
 800424e:	0003      	movs	r3, r0
 8004250:	603b      	str	r3, [r7, #0]
	    			passes[passNumberToUpdate].transitTimeSecond = floorf( second * 100000 ) / 100000;
 8004252:	683b      	ldr	r3, [r7, #0]
 8004254:	4ab1      	ldr	r2, [pc, #708]	; (800451c <receiveDataFrame+0x704>)
 8004256:	4353      	muls	r3, r2
 8004258:	0018      	movs	r0, r3
 800425a:	f7fd f891 	bl	8001380 <__aeabi_ui2f>
 800425e:	1c02      	adds	r2, r0, #0
 8004260:	4baa      	ldr	r3, [pc, #680]	; (800450c <receiveDataFrame+0x6f4>)
 8004262:	681c      	ldr	r4, [r3, #0]
 8004264:	49a8      	ldr	r1, [pc, #672]	; (8004508 <receiveDataFrame+0x6f0>)
 8004266:	1c10      	adds	r0, r2, #0
 8004268:	f7fc fb9c 	bl	80009a4 <__aeabi_fdiv>
 800426c:	1c03      	adds	r3, r0, #0
 800426e:	1c19      	adds	r1, r3, #0
 8004270:	4aa7      	ldr	r2, [pc, #668]	; (8004510 <receiveDataFrame+0x6f8>)
 8004272:	2364      	movs	r3, #100	; 0x64
 8004274:	4363      	muls	r3, r4
 8004276:	18d3      	adds	r3, r2, r3
 8004278:	331c      	adds	r3, #28
 800427a:	6019      	str	r1, [r3, #0]
	    			printf("The total transit time second is : %f\r\n", passes[passNumberToUpdate].transitTimeSecond);
 800427c:	4ba3      	ldr	r3, [pc, #652]	; (800450c <receiveDataFrame+0x6f4>)
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	4aa3      	ldr	r2, [pc, #652]	; (8004510 <receiveDataFrame+0x6f8>)
 8004282:	2164      	movs	r1, #100	; 0x64
 8004284:	434b      	muls	r3, r1
 8004286:	18d3      	adds	r3, r2, r3
 8004288:	331c      	adds	r3, #28
 800428a:	681b      	ldr	r3, [r3, #0]
 800428c:	1c18      	adds	r0, r3, #0
 800428e:	f7fe fe55 	bl	8002f3c <__aeabi_f2d>
 8004292:	0003      	movs	r3, r0
 8004294:	000c      	movs	r4, r1
 8004296:	49a2      	ldr	r1, [pc, #648]	; (8004520 <receiveDataFrame+0x708>)
 8004298:	001a      	movs	r2, r3
 800429a:	0023      	movs	r3, r4
 800429c:	0008      	movs	r0, r1
 800429e:	f003 fd2b 	bl	8007cf8 <iprintf>
	    			break;
 80042a2:	e3bc      	b.n	8004a1e <receiveDataFrame+0xc06>

	    		// Get the start point AZ
	    		case 4:

	    			hundreds = concat ( concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA2 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA2_Pos) ) - '0' ) );
 80042a4:	4a94      	ldr	r2, [pc, #592]	; (80044f8 <receiveDataFrame+0x6e0>)
 80042a6:	23dc      	movs	r3, #220	; 0xdc
 80042a8:	005b      	lsls	r3, r3, #1
 80042aa:	58d3      	ldr	r3, [r2, r3]
 80042ac:	b2db      	uxtb	r3, r3
 80042ae:	3b30      	subs	r3, #48	; 0x30
 80042b0:	0018      	movs	r0, r3
 80042b2:	4a91      	ldr	r2, [pc, #580]	; (80044f8 <receiveDataFrame+0x6e0>)
 80042b4:	23dc      	movs	r3, #220	; 0xdc
 80042b6:	005b      	lsls	r3, r3, #1
 80042b8:	58d3      	ldr	r3, [r2, r3]
 80042ba:	0a1b      	lsrs	r3, r3, #8
 80042bc:	b2db      	uxtb	r3, r3
 80042be:	3b30      	subs	r3, #48	; 0x30
 80042c0:	0019      	movs	r1, r3
 80042c2:	f7ff fd83 	bl	8003dcc <concat>
 80042c6:	4a8c      	ldr	r2, [pc, #560]	; (80044f8 <receiveDataFrame+0x6e0>)
 80042c8:	23dc      	movs	r3, #220	; 0xdc
 80042ca:	005b      	lsls	r3, r3, #1
 80042cc:	58d3      	ldr	r3, [r2, r3]
 80042ce:	0c1b      	lsrs	r3, r3, #16
 80042d0:	b2db      	uxtb	r3, r3
 80042d2:	3b30      	subs	r3, #48	; 0x30
 80042d4:	0019      	movs	r1, r3
 80042d6:	f7ff fd79 	bl	8003dcc <concat>
 80042da:	0003      	movs	r3, r0
 80042dc:	613b      	str	r3, [r7, #16]
	    			printf("The hundreds from the start point are : %ld\r\n", hundreds);
 80042de:	693a      	ldr	r2, [r7, #16]
 80042e0:	4b90      	ldr	r3, [pc, #576]	; (8004524 <receiveDataFrame+0x70c>)
 80042e2:	0011      	movs	r1, r2
 80042e4:	0018      	movs	r0, r3
 80042e6:	f003 fd07 	bl	8007cf8 <iprintf>
	    			milli = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA5 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA5_Pos) ) - '0' ) );
 80042ea:	4a83      	ldr	r2, [pc, #524]	; (80044f8 <receiveDataFrame+0x6e0>)
 80042ec:	23de      	movs	r3, #222	; 0xde
 80042ee:	005b      	lsls	r3, r3, #1
 80042f0:	58d3      	ldr	r3, [r2, r3]
 80042f2:	b2db      	uxtb	r3, r3
 80042f4:	3b30      	subs	r3, #48	; 0x30
 80042f6:	0018      	movs	r0, r3
 80042f8:	4a7f      	ldr	r2, [pc, #508]	; (80044f8 <receiveDataFrame+0x6e0>)
 80042fa:	23de      	movs	r3, #222	; 0xde
 80042fc:	005b      	lsls	r3, r3, #1
 80042fe:	58d3      	ldr	r3, [r2, r3]
 8004300:	0a1b      	lsrs	r3, r3, #8
 8004302:	b2db      	uxtb	r3, r3
 8004304:	3b30      	subs	r3, #48	; 0x30
 8004306:	0019      	movs	r1, r3
 8004308:	f7ff fd60 	bl	8003dcc <concat>
 800430c:	0003      	movs	r3, r0
 800430e:	60fb      	str	r3, [r7, #12]
	    			printf("The milli from the start point are : %ld\r\n", milli);
 8004310:	68fa      	ldr	r2, [r7, #12]
 8004312:	4b85      	ldr	r3, [pc, #532]	; (8004528 <receiveDataFrame+0x710>)
 8004314:	0011      	movs	r1, r2
 8004316:	0018      	movs	r0, r3
 8004318:	f003 fcee 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].startPoint.azCoordinate = floorf( ( hundreds + (milli /100.f) ) * 100000 ) / 100000;
 800431c:	6938      	ldr	r0, [r7, #16]
 800431e:	f7fd f82f 	bl	8001380 <__aeabi_ui2f>
 8004322:	1c04      	adds	r4, r0, #0
 8004324:	68f8      	ldr	r0, [r7, #12]
 8004326:	f7fd f82b 	bl	8001380 <__aeabi_ui2f>
 800432a:	1c03      	adds	r3, r0, #0
 800432c:	4975      	ldr	r1, [pc, #468]	; (8004504 <receiveDataFrame+0x6ec>)
 800432e:	1c18      	adds	r0, r3, #0
 8004330:	f7fc fb38 	bl	80009a4 <__aeabi_fdiv>
 8004334:	1c03      	adds	r3, r0, #0
 8004336:	1c19      	adds	r1, r3, #0
 8004338:	1c20      	adds	r0, r4, #0
 800433a:	f7fc f999 	bl	8000670 <__aeabi_fadd>
 800433e:	1c03      	adds	r3, r0, #0
 8004340:	4971      	ldr	r1, [pc, #452]	; (8004508 <receiveDataFrame+0x6f0>)
 8004342:	1c18      	adds	r0, r3, #0
 8004344:	f7fc fd06 	bl	8000d54 <__aeabi_fmul>
 8004348:	1c03      	adds	r3, r0, #0
 800434a:	1c18      	adds	r0, r3, #0
 800434c:	f007 fe8c 	bl	800c068 <floorf>
 8004350:	1c02      	adds	r2, r0, #0
 8004352:	4b6e      	ldr	r3, [pc, #440]	; (800450c <receiveDataFrame+0x6f4>)
 8004354:	681c      	ldr	r4, [r3, #0]
 8004356:	496c      	ldr	r1, [pc, #432]	; (8004508 <receiveDataFrame+0x6f0>)
 8004358:	1c10      	adds	r0, r2, #0
 800435a:	f7fc fb23 	bl	80009a4 <__aeabi_fdiv>
 800435e:	1c03      	adds	r3, r0, #0
 8004360:	1c19      	adds	r1, r3, #0
 8004362:	4a6b      	ldr	r2, [pc, #428]	; (8004510 <receiveDataFrame+0x6f8>)
 8004364:	2364      	movs	r3, #100	; 0x64
 8004366:	4363      	muls	r3, r4
 8004368:	18d3      	adds	r3, r2, r3
 800436a:	3320      	adds	r3, #32
 800436c:	6019      	str	r1, [r3, #0]
	    			printf("The startPoint.azCoordinate is : %f\r\n", passes[passNumberToUpdate].startPoint.azCoordinate);
 800436e:	4b67      	ldr	r3, [pc, #412]	; (800450c <receiveDataFrame+0x6f4>)
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	4a67      	ldr	r2, [pc, #412]	; (8004510 <receiveDataFrame+0x6f8>)
 8004374:	2164      	movs	r1, #100	; 0x64
 8004376:	434b      	muls	r3, r1
 8004378:	18d3      	adds	r3, r2, r3
 800437a:	3320      	adds	r3, #32
 800437c:	681b      	ldr	r3, [r3, #0]
 800437e:	1c18      	adds	r0, r3, #0
 8004380:	f7fe fddc 	bl	8002f3c <__aeabi_f2d>
 8004384:	0003      	movs	r3, r0
 8004386:	000c      	movs	r4, r1
 8004388:	4968      	ldr	r1, [pc, #416]	; (800452c <receiveDataFrame+0x714>)
 800438a:	001a      	movs	r2, r3
 800438c:	0023      	movs	r3, r4
 800438e:	0008      	movs	r0, r1
 8004390:	f003 fcb2 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].startPoint.elCoordinate = floorf( 0 * 100000 ) / 100000;
 8004394:	4b5d      	ldr	r3, [pc, #372]	; (800450c <receiveDataFrame+0x6f4>)
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	4a5d      	ldr	r2, [pc, #372]	; (8004510 <receiveDataFrame+0x6f8>)
 800439a:	2164      	movs	r1, #100	; 0x64
 800439c:	434b      	muls	r3, r1
 800439e:	18d3      	adds	r3, r2, r3
 80043a0:	3324      	adds	r3, #36	; 0x24
 80043a2:	2200      	movs	r2, #0
 80043a4:	601a      	str	r2, [r3, #0]
	    			printf("The startPoint.elCoordinate is : %f\r\n", passes[passNumberToUpdate].startPoint.elCoordinate);
 80043a6:	4b59      	ldr	r3, [pc, #356]	; (800450c <receiveDataFrame+0x6f4>)
 80043a8:	681b      	ldr	r3, [r3, #0]
 80043aa:	4a59      	ldr	r2, [pc, #356]	; (8004510 <receiveDataFrame+0x6f8>)
 80043ac:	2164      	movs	r1, #100	; 0x64
 80043ae:	434b      	muls	r3, r1
 80043b0:	18d3      	adds	r3, r2, r3
 80043b2:	3324      	adds	r3, #36	; 0x24
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	1c18      	adds	r0, r3, #0
 80043b8:	f7fe fdc0 	bl	8002f3c <__aeabi_f2d>
 80043bc:	0003      	movs	r3, r0
 80043be:	000c      	movs	r4, r1
 80043c0:	495b      	ldr	r1, [pc, #364]	; (8004530 <receiveDataFrame+0x718>)
 80043c2:	001a      	movs	r2, r3
 80043c4:	0023      	movs	r3, r4
 80043c6:	0008      	movs	r0, r1
 80043c8:	f003 fc96 	bl	8007cf8 <iprintf>
	    			break;
 80043cc:	e327      	b.n	8004a1e <receiveDataFrame+0xc06>

	    		// Get the end point AZ
	    		case 5:

	    			hundreds = concat ( concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA2 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA2_Pos) ) - '0' ) );
 80043ce:	4a4a      	ldr	r2, [pc, #296]	; (80044f8 <receiveDataFrame+0x6e0>)
 80043d0:	23dc      	movs	r3, #220	; 0xdc
 80043d2:	005b      	lsls	r3, r3, #1
 80043d4:	58d3      	ldr	r3, [r2, r3]
 80043d6:	b2db      	uxtb	r3, r3
 80043d8:	3b30      	subs	r3, #48	; 0x30
 80043da:	0018      	movs	r0, r3
 80043dc:	4a46      	ldr	r2, [pc, #280]	; (80044f8 <receiveDataFrame+0x6e0>)
 80043de:	23dc      	movs	r3, #220	; 0xdc
 80043e0:	005b      	lsls	r3, r3, #1
 80043e2:	58d3      	ldr	r3, [r2, r3]
 80043e4:	0a1b      	lsrs	r3, r3, #8
 80043e6:	b2db      	uxtb	r3, r3
 80043e8:	3b30      	subs	r3, #48	; 0x30
 80043ea:	0019      	movs	r1, r3
 80043ec:	f7ff fcee 	bl	8003dcc <concat>
 80043f0:	4a41      	ldr	r2, [pc, #260]	; (80044f8 <receiveDataFrame+0x6e0>)
 80043f2:	23dc      	movs	r3, #220	; 0xdc
 80043f4:	005b      	lsls	r3, r3, #1
 80043f6:	58d3      	ldr	r3, [r2, r3]
 80043f8:	0c1b      	lsrs	r3, r3, #16
 80043fa:	b2db      	uxtb	r3, r3
 80043fc:	3b30      	subs	r3, #48	; 0x30
 80043fe:	0019      	movs	r1, r3
 8004400:	f7ff fce4 	bl	8003dcc <concat>
 8004404:	0003      	movs	r3, r0
 8004406:	613b      	str	r3, [r7, #16]
	    			printf("The hundreds from the end point are : %ld\r\n", hundreds);
 8004408:	693a      	ldr	r2, [r7, #16]
 800440a:	4b4a      	ldr	r3, [pc, #296]	; (8004534 <receiveDataFrame+0x71c>)
 800440c:	0011      	movs	r1, r2
 800440e:	0018      	movs	r0, r3
 8004410:	f003 fc72 	bl	8007cf8 <iprintf>
	    			milli = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA5 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA5_Pos) ) - '0' ) );
 8004414:	4a38      	ldr	r2, [pc, #224]	; (80044f8 <receiveDataFrame+0x6e0>)
 8004416:	23de      	movs	r3, #222	; 0xde
 8004418:	005b      	lsls	r3, r3, #1
 800441a:	58d3      	ldr	r3, [r2, r3]
 800441c:	b2db      	uxtb	r3, r3
 800441e:	3b30      	subs	r3, #48	; 0x30
 8004420:	0018      	movs	r0, r3
 8004422:	4a35      	ldr	r2, [pc, #212]	; (80044f8 <receiveDataFrame+0x6e0>)
 8004424:	23de      	movs	r3, #222	; 0xde
 8004426:	005b      	lsls	r3, r3, #1
 8004428:	58d3      	ldr	r3, [r2, r3]
 800442a:	0a1b      	lsrs	r3, r3, #8
 800442c:	b2db      	uxtb	r3, r3
 800442e:	3b30      	subs	r3, #48	; 0x30
 8004430:	0019      	movs	r1, r3
 8004432:	f7ff fccb 	bl	8003dcc <concat>
 8004436:	0003      	movs	r3, r0
 8004438:	60fb      	str	r3, [r7, #12]
	    			printf("The milli from the end point are : %ld\r\n", milli);
 800443a:	68fa      	ldr	r2, [r7, #12]
 800443c:	4b3e      	ldr	r3, [pc, #248]	; (8004538 <receiveDataFrame+0x720>)
 800443e:	0011      	movs	r1, r2
 8004440:	0018      	movs	r0, r3
 8004442:	f003 fc59 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].endPoint.azCoordinate = floorf( ( hundreds + (milli /100.f) ) * 100000 ) / 100000;
 8004446:	6938      	ldr	r0, [r7, #16]
 8004448:	f7fc ff9a 	bl	8001380 <__aeabi_ui2f>
 800444c:	1c04      	adds	r4, r0, #0
 800444e:	68f8      	ldr	r0, [r7, #12]
 8004450:	f7fc ff96 	bl	8001380 <__aeabi_ui2f>
 8004454:	1c03      	adds	r3, r0, #0
 8004456:	492b      	ldr	r1, [pc, #172]	; (8004504 <receiveDataFrame+0x6ec>)
 8004458:	1c18      	adds	r0, r3, #0
 800445a:	f7fc faa3 	bl	80009a4 <__aeabi_fdiv>
 800445e:	1c03      	adds	r3, r0, #0
 8004460:	1c19      	adds	r1, r3, #0
 8004462:	1c20      	adds	r0, r4, #0
 8004464:	f7fc f904 	bl	8000670 <__aeabi_fadd>
 8004468:	1c03      	adds	r3, r0, #0
 800446a:	4927      	ldr	r1, [pc, #156]	; (8004508 <receiveDataFrame+0x6f0>)
 800446c:	1c18      	adds	r0, r3, #0
 800446e:	f7fc fc71 	bl	8000d54 <__aeabi_fmul>
 8004472:	1c03      	adds	r3, r0, #0
 8004474:	1c18      	adds	r0, r3, #0
 8004476:	f007 fdf7 	bl	800c068 <floorf>
 800447a:	1c02      	adds	r2, r0, #0
 800447c:	4b23      	ldr	r3, [pc, #140]	; (800450c <receiveDataFrame+0x6f4>)
 800447e:	681c      	ldr	r4, [r3, #0]
 8004480:	4921      	ldr	r1, [pc, #132]	; (8004508 <receiveDataFrame+0x6f0>)
 8004482:	1c10      	adds	r0, r2, #0
 8004484:	f7fc fa8e 	bl	80009a4 <__aeabi_fdiv>
 8004488:	1c03      	adds	r3, r0, #0
 800448a:	1c19      	adds	r1, r3, #0
 800448c:	4a20      	ldr	r2, [pc, #128]	; (8004510 <receiveDataFrame+0x6f8>)
 800448e:	2364      	movs	r3, #100	; 0x64
 8004490:	4363      	muls	r3, r4
 8004492:	18d3      	adds	r3, r2, r3
 8004494:	3328      	adds	r3, #40	; 0x28
 8004496:	6019      	str	r1, [r3, #0]
	    			printf("The endPoint.azCoordinate is : %f\n", passes[passNumberToUpdate].endPoint.azCoordinate);
 8004498:	4b1c      	ldr	r3, [pc, #112]	; (800450c <receiveDataFrame+0x6f4>)
 800449a:	681b      	ldr	r3, [r3, #0]
 800449c:	4a1c      	ldr	r2, [pc, #112]	; (8004510 <receiveDataFrame+0x6f8>)
 800449e:	2164      	movs	r1, #100	; 0x64
 80044a0:	434b      	muls	r3, r1
 80044a2:	18d3      	adds	r3, r2, r3
 80044a4:	3328      	adds	r3, #40	; 0x28
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	1c18      	adds	r0, r3, #0
 80044aa:	f7fe fd47 	bl	8002f3c <__aeabi_f2d>
 80044ae:	0003      	movs	r3, r0
 80044b0:	000c      	movs	r4, r1
 80044b2:	4922      	ldr	r1, [pc, #136]	; (800453c <receiveDataFrame+0x724>)
 80044b4:	001a      	movs	r2, r3
 80044b6:	0023      	movs	r3, r4
 80044b8:	0008      	movs	r0, r1
 80044ba:	f003 fc1d 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].endPoint.elCoordinate = floorf( 0 * 100000 ) / 100000;
 80044be:	4b13      	ldr	r3, [pc, #76]	; (800450c <receiveDataFrame+0x6f4>)
 80044c0:	681b      	ldr	r3, [r3, #0]
 80044c2:	4a13      	ldr	r2, [pc, #76]	; (8004510 <receiveDataFrame+0x6f8>)
 80044c4:	2164      	movs	r1, #100	; 0x64
 80044c6:	434b      	muls	r3, r1
 80044c8:	18d3      	adds	r3, r2, r3
 80044ca:	332c      	adds	r3, #44	; 0x2c
 80044cc:	2200      	movs	r2, #0
 80044ce:	601a      	str	r2, [r3, #0]
	    			printf("The endPoint.elCoordinate is : %f\n", passes[passNumberToUpdate].endPoint.elCoordinate);
 80044d0:	4b0e      	ldr	r3, [pc, #56]	; (800450c <receiveDataFrame+0x6f4>)
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	4a0e      	ldr	r2, [pc, #56]	; (8004510 <receiveDataFrame+0x6f8>)
 80044d6:	2164      	movs	r1, #100	; 0x64
 80044d8:	434b      	muls	r3, r1
 80044da:	18d3      	adds	r3, r2, r3
 80044dc:	332c      	adds	r3, #44	; 0x2c
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	1c18      	adds	r0, r3, #0
 80044e2:	f7fe fd2b 	bl	8002f3c <__aeabi_f2d>
 80044e6:	0003      	movs	r3, r0
 80044e8:	000c      	movs	r4, r1
 80044ea:	4915      	ldr	r1, [pc, #84]	; (8004540 <receiveDataFrame+0x728>)
 80044ec:	001a      	movs	r2, r3
 80044ee:	0023      	movs	r3, r4
 80044f0:	0008      	movs	r0, r1
 80044f2:	f003 fc01 	bl	8007cf8 <iprintf>
	    			break;
 80044f6:	e292      	b.n	8004a1e <receiveDataFrame+0xc06>
 80044f8:	40006400 	.word	0x40006400
 80044fc:	0800c4d8 	.word	0x0800c4d8
 8004500:	0800c500 	.word	0x0800c500
 8004504:	42c80000 	.word	0x42c80000
 8004508:	47c35000 	.word	0x47c35000
 800450c:	20000288 	.word	0x20000288
 8004510:	2000028c 	.word	0x2000028c
 8004514:	0800c52c 	.word	0x0800c52c
 8004518:	404e0000 	.word	0x404e0000
 800451c:	000186a0 	.word	0x000186a0
 8004520:	0800c554 	.word	0x0800c554
 8004524:	0800c57c 	.word	0x0800c57c
 8004528:	0800c5ac 	.word	0x0800c5ac
 800452c:	0800c5d8 	.word	0x0800c5d8
 8004530:	0800c600 	.word	0x0800c600
 8004534:	0800c628 	.word	0x0800c628
 8004538:	0800c654 	.word	0x0800c654
 800453c:	0800c680 	.word	0x0800c680
 8004540:	0800c6a4 	.word	0x0800c6a4

	    		// Get the middle point EL
	    		case 6:

	    			hundreds = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) );
 8004544:	4afe      	ldr	r2, [pc, #1016]	; (8004940 <receiveDataFrame+0xb28>)
 8004546:	23dc      	movs	r3, #220	; 0xdc
 8004548:	005b      	lsls	r3, r3, #1
 800454a:	58d3      	ldr	r3, [r2, r3]
 800454c:	b2db      	uxtb	r3, r3
 800454e:	3b30      	subs	r3, #48	; 0x30
 8004550:	0018      	movs	r0, r3
 8004552:	4afb      	ldr	r2, [pc, #1004]	; (8004940 <receiveDataFrame+0xb28>)
 8004554:	23dc      	movs	r3, #220	; 0xdc
 8004556:	005b      	lsls	r3, r3, #1
 8004558:	58d3      	ldr	r3, [r2, r3]
 800455a:	0a1b      	lsrs	r3, r3, #8
 800455c:	b2db      	uxtb	r3, r3
 800455e:	3b30      	subs	r3, #48	; 0x30
 8004560:	0019      	movs	r1, r3
 8004562:	f7ff fc33 	bl	8003dcc <concat>
 8004566:	0003      	movs	r3, r0
 8004568:	613b      	str	r3, [r7, #16]
	    			printf("The hundreds from the peak point are : %ld\r\n", hundreds);
 800456a:	693a      	ldr	r2, [r7, #16]
 800456c:	4bf5      	ldr	r3, [pc, #980]	; (8004944 <receiveDataFrame+0xb2c>)
 800456e:	0011      	movs	r1, r2
 8004570:	0018      	movs	r0, r3
 8004572:	f003 fbc1 	bl	8007cf8 <iprintf>
	    			milli  = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) );
 8004576:	4af2      	ldr	r2, [pc, #968]	; (8004940 <receiveDataFrame+0xb28>)
 8004578:	23dc      	movs	r3, #220	; 0xdc
 800457a:	005b      	lsls	r3, r3, #1
 800457c:	58d3      	ldr	r3, [r2, r3]
 800457e:	0e1b      	lsrs	r3, r3, #24
 8004580:	b2db      	uxtb	r3, r3
 8004582:	3b30      	subs	r3, #48	; 0x30
 8004584:	0018      	movs	r0, r3
 8004586:	4aee      	ldr	r2, [pc, #952]	; (8004940 <receiveDataFrame+0xb28>)
 8004588:	23de      	movs	r3, #222	; 0xde
 800458a:	005b      	lsls	r3, r3, #1
 800458c:	58d3      	ldr	r3, [r2, r3]
 800458e:	b2db      	uxtb	r3, r3
 8004590:	3b30      	subs	r3, #48	; 0x30
 8004592:	0019      	movs	r1, r3
 8004594:	f7ff fc1a 	bl	8003dcc <concat>
 8004598:	0003      	movs	r3, r0
 800459a:	60fb      	str	r3, [r7, #12]
	    			printf("The milli from the peak point are : %ld\r\n", milli);
 800459c:	68fa      	ldr	r2, [r7, #12]
 800459e:	4bea      	ldr	r3, [pc, #936]	; (8004948 <receiveDataFrame+0xb30>)
 80045a0:	0011      	movs	r1, r2
 80045a2:	0018      	movs	r0, r3
 80045a4:	f003 fba8 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].peakPoint.azCoordinate = floorf( fabsf( ( (passes[passNumberToUpdate].endPoint.azCoordinate) + (passes[passNumberToUpdate].startPoint.azCoordinate) ) / 2.0 ) * 100000 ) / 100000;
 80045a8:	4be8      	ldr	r3, [pc, #928]	; (800494c <receiveDataFrame+0xb34>)
 80045aa:	681b      	ldr	r3, [r3, #0]
 80045ac:	4ae8      	ldr	r2, [pc, #928]	; (8004950 <receiveDataFrame+0xb38>)
 80045ae:	2164      	movs	r1, #100	; 0x64
 80045b0:	434b      	muls	r3, r1
 80045b2:	18d3      	adds	r3, r2, r3
 80045b4:	3328      	adds	r3, #40	; 0x28
 80045b6:	6818      	ldr	r0, [r3, #0]
 80045b8:	4be4      	ldr	r3, [pc, #912]	; (800494c <receiveDataFrame+0xb34>)
 80045ba:	681b      	ldr	r3, [r3, #0]
 80045bc:	4ae4      	ldr	r2, [pc, #912]	; (8004950 <receiveDataFrame+0xb38>)
 80045be:	2164      	movs	r1, #100	; 0x64
 80045c0:	434b      	muls	r3, r1
 80045c2:	18d3      	adds	r3, r2, r3
 80045c4:	3320      	adds	r3, #32
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	1c19      	adds	r1, r3, #0
 80045ca:	f7fc f851 	bl	8000670 <__aeabi_fadd>
 80045ce:	1c03      	adds	r3, r0, #0
 80045d0:	2180      	movs	r1, #128	; 0x80
 80045d2:	05c9      	lsls	r1, r1, #23
 80045d4:	1c18      	adds	r0, r3, #0
 80045d6:	f7fc f9e5 	bl	80009a4 <__aeabi_fdiv>
 80045da:	1c03      	adds	r3, r0, #0
 80045dc:	005b      	lsls	r3, r3, #1
 80045de:	085b      	lsrs	r3, r3, #1
 80045e0:	49dc      	ldr	r1, [pc, #880]	; (8004954 <receiveDataFrame+0xb3c>)
 80045e2:	1c18      	adds	r0, r3, #0
 80045e4:	f7fc fbb6 	bl	8000d54 <__aeabi_fmul>
 80045e8:	1c03      	adds	r3, r0, #0
 80045ea:	1c18      	adds	r0, r3, #0
 80045ec:	f007 fd3c 	bl	800c068 <floorf>
 80045f0:	1c02      	adds	r2, r0, #0
 80045f2:	4bd6      	ldr	r3, [pc, #856]	; (800494c <receiveDataFrame+0xb34>)
 80045f4:	681c      	ldr	r4, [r3, #0]
 80045f6:	49d7      	ldr	r1, [pc, #860]	; (8004954 <receiveDataFrame+0xb3c>)
 80045f8:	1c10      	adds	r0, r2, #0
 80045fa:	f7fc f9d3 	bl	80009a4 <__aeabi_fdiv>
 80045fe:	1c03      	adds	r3, r0, #0
 8004600:	1c19      	adds	r1, r3, #0
 8004602:	4ad3      	ldr	r2, [pc, #844]	; (8004950 <receiveDataFrame+0xb38>)
 8004604:	2364      	movs	r3, #100	; 0x64
 8004606:	4363      	muls	r3, r4
 8004608:	18d3      	adds	r3, r2, r3
 800460a:	3330      	adds	r3, #48	; 0x30
 800460c:	6019      	str	r1, [r3, #0]
	    			printf("The peakPoint.azCoordinate is : %f\r\n", passes[passNumberToUpdate].peakPoint.azCoordinate);
 800460e:	4bcf      	ldr	r3, [pc, #828]	; (800494c <receiveDataFrame+0xb34>)
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	4acf      	ldr	r2, [pc, #828]	; (8004950 <receiveDataFrame+0xb38>)
 8004614:	2164      	movs	r1, #100	; 0x64
 8004616:	434b      	muls	r3, r1
 8004618:	18d3      	adds	r3, r2, r3
 800461a:	3330      	adds	r3, #48	; 0x30
 800461c:	681b      	ldr	r3, [r3, #0]
 800461e:	1c18      	adds	r0, r3, #0
 8004620:	f7fe fc8c 	bl	8002f3c <__aeabi_f2d>
 8004624:	0003      	movs	r3, r0
 8004626:	000c      	movs	r4, r1
 8004628:	49cb      	ldr	r1, [pc, #812]	; (8004958 <receiveDataFrame+0xb40>)
 800462a:	001a      	movs	r2, r3
 800462c:	0023      	movs	r3, r4
 800462e:	0008      	movs	r0, r1
 8004630:	f003 fb62 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].peakPoint.elCoordinate = floorf( ( hundreds + (milli /100.f) ) * 100000 ) / 100000;
 8004634:	6938      	ldr	r0, [r7, #16]
 8004636:	f7fc fea3 	bl	8001380 <__aeabi_ui2f>
 800463a:	1c04      	adds	r4, r0, #0
 800463c:	68f8      	ldr	r0, [r7, #12]
 800463e:	f7fc fe9f 	bl	8001380 <__aeabi_ui2f>
 8004642:	1c03      	adds	r3, r0, #0
 8004644:	49c5      	ldr	r1, [pc, #788]	; (800495c <receiveDataFrame+0xb44>)
 8004646:	1c18      	adds	r0, r3, #0
 8004648:	f7fc f9ac 	bl	80009a4 <__aeabi_fdiv>
 800464c:	1c03      	adds	r3, r0, #0
 800464e:	1c19      	adds	r1, r3, #0
 8004650:	1c20      	adds	r0, r4, #0
 8004652:	f7fc f80d 	bl	8000670 <__aeabi_fadd>
 8004656:	1c03      	adds	r3, r0, #0
 8004658:	49be      	ldr	r1, [pc, #760]	; (8004954 <receiveDataFrame+0xb3c>)
 800465a:	1c18      	adds	r0, r3, #0
 800465c:	f7fc fb7a 	bl	8000d54 <__aeabi_fmul>
 8004660:	1c03      	adds	r3, r0, #0
 8004662:	1c18      	adds	r0, r3, #0
 8004664:	f007 fd00 	bl	800c068 <floorf>
 8004668:	1c02      	adds	r2, r0, #0
 800466a:	4bb8      	ldr	r3, [pc, #736]	; (800494c <receiveDataFrame+0xb34>)
 800466c:	681c      	ldr	r4, [r3, #0]
 800466e:	49b9      	ldr	r1, [pc, #740]	; (8004954 <receiveDataFrame+0xb3c>)
 8004670:	1c10      	adds	r0, r2, #0
 8004672:	f7fc f997 	bl	80009a4 <__aeabi_fdiv>
 8004676:	1c03      	adds	r3, r0, #0
 8004678:	1c19      	adds	r1, r3, #0
 800467a:	4ab5      	ldr	r2, [pc, #724]	; (8004950 <receiveDataFrame+0xb38>)
 800467c:	2364      	movs	r3, #100	; 0x64
 800467e:	4363      	muls	r3, r4
 8004680:	18d3      	adds	r3, r2, r3
 8004682:	3334      	adds	r3, #52	; 0x34
 8004684:	6019      	str	r1, [r3, #0]
	    			printf("The peakPoint.elCoordinate is : %f\r\n", passes[passNumberToUpdate].peakPoint.elCoordinate);
 8004686:	4bb1      	ldr	r3, [pc, #708]	; (800494c <receiveDataFrame+0xb34>)
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	4ab1      	ldr	r2, [pc, #708]	; (8004950 <receiveDataFrame+0xb38>)
 800468c:	2164      	movs	r1, #100	; 0x64
 800468e:	434b      	muls	r3, r1
 8004690:	18d3      	adds	r3, r2, r3
 8004692:	3334      	adds	r3, #52	; 0x34
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	1c18      	adds	r0, r3, #0
 8004698:	f7fe fc50 	bl	8002f3c <__aeabi_f2d>
 800469c:	0003      	movs	r3, r0
 800469e:	000c      	movs	r4, r1
 80046a0:	49af      	ldr	r1, [pc, #700]	; (8004960 <receiveDataFrame+0xb48>)
 80046a2:	001a      	movs	r2, r3
 80046a4:	0023      	movs	r3, r4
 80046a6:	0008      	movs	r0, r1
 80046a8:	f003 fb26 	bl	8007cf8 <iprintf>

	    			// Initialize the average speed for the pass in AZ and in EL
	    			passes[passNumberToUpdate].averageSpeedAz = floorf( ( fabsf( (passes[passNumberToUpdate].endPoint.azCoordinate - passes[passNumberToUpdate].startPoint.azCoordinate) ) / ( (float) (passes[passNumberToUpdate].transitTimeMinute) ) ) * 100000 ) / 100000;
 80046ac:	4ba7      	ldr	r3, [pc, #668]	; (800494c <receiveDataFrame+0xb34>)
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	4aa7      	ldr	r2, [pc, #668]	; (8004950 <receiveDataFrame+0xb38>)
 80046b2:	2164      	movs	r1, #100	; 0x64
 80046b4:	434b      	muls	r3, r1
 80046b6:	18d3      	adds	r3, r2, r3
 80046b8:	3328      	adds	r3, #40	; 0x28
 80046ba:	6818      	ldr	r0, [r3, #0]
 80046bc:	4ba3      	ldr	r3, [pc, #652]	; (800494c <receiveDataFrame+0xb34>)
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	4aa3      	ldr	r2, [pc, #652]	; (8004950 <receiveDataFrame+0xb38>)
 80046c2:	2164      	movs	r1, #100	; 0x64
 80046c4:	434b      	muls	r3, r1
 80046c6:	18d3      	adds	r3, r2, r3
 80046c8:	3320      	adds	r3, #32
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	1c19      	adds	r1, r3, #0
 80046ce:	f7fc fc73 	bl	8000fb8 <__aeabi_fsub>
 80046d2:	1c03      	adds	r3, r0, #0
 80046d4:	005b      	lsls	r3, r3, #1
 80046d6:	0858      	lsrs	r0, r3, #1
 80046d8:	4b9c      	ldr	r3, [pc, #624]	; (800494c <receiveDataFrame+0xb34>)
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	4a9c      	ldr	r2, [pc, #624]	; (8004950 <receiveDataFrame+0xb38>)
 80046de:	2164      	movs	r1, #100	; 0x64
 80046e0:	434b      	muls	r3, r1
 80046e2:	18d3      	adds	r3, r2, r3
 80046e4:	3318      	adds	r3, #24
 80046e6:	681b      	ldr	r3, [r3, #0]
 80046e8:	1c19      	adds	r1, r3, #0
 80046ea:	f7fc f95b 	bl	80009a4 <__aeabi_fdiv>
 80046ee:	1c03      	adds	r3, r0, #0
 80046f0:	4998      	ldr	r1, [pc, #608]	; (8004954 <receiveDataFrame+0xb3c>)
 80046f2:	1c18      	adds	r0, r3, #0
 80046f4:	f7fc fb2e 	bl	8000d54 <__aeabi_fmul>
 80046f8:	1c03      	adds	r3, r0, #0
 80046fa:	1c18      	adds	r0, r3, #0
 80046fc:	f007 fcb4 	bl	800c068 <floorf>
 8004700:	1c02      	adds	r2, r0, #0
 8004702:	4b92      	ldr	r3, [pc, #584]	; (800494c <receiveDataFrame+0xb34>)
 8004704:	681c      	ldr	r4, [r3, #0]
 8004706:	4993      	ldr	r1, [pc, #588]	; (8004954 <receiveDataFrame+0xb3c>)
 8004708:	1c10      	adds	r0, r2, #0
 800470a:	f7fc f94b 	bl	80009a4 <__aeabi_fdiv>
 800470e:	1c03      	adds	r3, r0, #0
 8004710:	1c19      	adds	r1, r3, #0
 8004712:	4a8f      	ldr	r2, [pc, #572]	; (8004950 <receiveDataFrame+0xb38>)
 8004714:	2364      	movs	r3, #100	; 0x64
 8004716:	4363      	muls	r3, r4
 8004718:	18d3      	adds	r3, r2, r3
 800471a:	3338      	adds	r3, #56	; 0x38
 800471c:	6019      	str	r1, [r3, #0]
	    			printf("The pass.averageSpeedAz is : %f\r\n", passes[passNumberToUpdate].averageSpeedAz);
 800471e:	4b8b      	ldr	r3, [pc, #556]	; (800494c <receiveDataFrame+0xb34>)
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	4a8b      	ldr	r2, [pc, #556]	; (8004950 <receiveDataFrame+0xb38>)
 8004724:	2164      	movs	r1, #100	; 0x64
 8004726:	434b      	muls	r3, r1
 8004728:	18d3      	adds	r3, r2, r3
 800472a:	3338      	adds	r3, #56	; 0x38
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	1c18      	adds	r0, r3, #0
 8004730:	f7fe fc04 	bl	8002f3c <__aeabi_f2d>
 8004734:	0003      	movs	r3, r0
 8004736:	000c      	movs	r4, r1
 8004738:	498a      	ldr	r1, [pc, #552]	; (8004964 <receiveDataFrame+0xb4c>)
 800473a:	001a      	movs	r2, r3
 800473c:	0023      	movs	r3, r4
 800473e:	0008      	movs	r0, r1
 8004740:	f003 fada 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].averageSpeedEl = floorf( ( (passes[passNumberToUpdate].peakPoint.elCoordinate * 2.0) / ( (float) (passes[passNumberToUpdate].transitTimeMinute) ) ) * 100000 ) / 100000;
 8004744:	4b81      	ldr	r3, [pc, #516]	; (800494c <receiveDataFrame+0xb34>)
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	4a81      	ldr	r2, [pc, #516]	; (8004950 <receiveDataFrame+0xb38>)
 800474a:	2164      	movs	r1, #100	; 0x64
 800474c:	434b      	muls	r3, r1
 800474e:	18d3      	adds	r3, r2, r3
 8004750:	3334      	adds	r3, #52	; 0x34
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	1c18      	adds	r0, r3, #0
 8004756:	f7fe fbf1 	bl	8002f3c <__aeabi_f2d>
 800475a:	0002      	movs	r2, r0
 800475c:	000b      	movs	r3, r1
 800475e:	f7fc fe4f 	bl	8001400 <__aeabi_dadd>
 8004762:	0003      	movs	r3, r0
 8004764:	000c      	movs	r4, r1
 8004766:	0025      	movs	r5, r4
 8004768:	001c      	movs	r4, r3
 800476a:	4b78      	ldr	r3, [pc, #480]	; (800494c <receiveDataFrame+0xb34>)
 800476c:	681b      	ldr	r3, [r3, #0]
 800476e:	4a78      	ldr	r2, [pc, #480]	; (8004950 <receiveDataFrame+0xb38>)
 8004770:	2164      	movs	r1, #100	; 0x64
 8004772:	434b      	muls	r3, r1
 8004774:	18d3      	adds	r3, r2, r3
 8004776:	3318      	adds	r3, #24
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	1c18      	adds	r0, r3, #0
 800477c:	f7fe fbde 	bl	8002f3c <__aeabi_f2d>
 8004780:	0002      	movs	r2, r0
 8004782:	000b      	movs	r3, r1
 8004784:	0020      	movs	r0, r4
 8004786:	0029      	movs	r1, r5
 8004788:	f7fd f956 	bl	8001a38 <__aeabi_ddiv>
 800478c:	0003      	movs	r3, r0
 800478e:	000c      	movs	r4, r1
 8004790:	0018      	movs	r0, r3
 8004792:	0021      	movs	r1, r4
 8004794:	2200      	movs	r2, #0
 8004796:	4b74      	ldr	r3, [pc, #464]	; (8004968 <receiveDataFrame+0xb50>)
 8004798:	f7fd fd58 	bl	800224c <__aeabi_dmul>
 800479c:	0003      	movs	r3, r0
 800479e:	000c      	movs	r4, r1
 80047a0:	0018      	movs	r0, r3
 80047a2:	0021      	movs	r1, r4
 80047a4:	f7fe fc1c 	bl	8002fe0 <__aeabi_d2f>
 80047a8:	1c03      	adds	r3, r0, #0
 80047aa:	1c18      	adds	r0, r3, #0
 80047ac:	f007 fc5c 	bl	800c068 <floorf>
 80047b0:	1c02      	adds	r2, r0, #0
 80047b2:	4b66      	ldr	r3, [pc, #408]	; (800494c <receiveDataFrame+0xb34>)
 80047b4:	681c      	ldr	r4, [r3, #0]
 80047b6:	4967      	ldr	r1, [pc, #412]	; (8004954 <receiveDataFrame+0xb3c>)
 80047b8:	1c10      	adds	r0, r2, #0
 80047ba:	f7fc f8f3 	bl	80009a4 <__aeabi_fdiv>
 80047be:	1c03      	adds	r3, r0, #0
 80047c0:	1c19      	adds	r1, r3, #0
 80047c2:	4a63      	ldr	r2, [pc, #396]	; (8004950 <receiveDataFrame+0xb38>)
 80047c4:	2364      	movs	r3, #100	; 0x64
 80047c6:	4363      	muls	r3, r4
 80047c8:	18d3      	adds	r3, r2, r3
 80047ca:	333c      	adds	r3, #60	; 0x3c
 80047cc:	6019      	str	r1, [r3, #0]
	    			printf("The pass.averageSpeedEl is : %f\r\n", passes[passNumberToUpdate].averageSpeedEl);
 80047ce:	4b5f      	ldr	r3, [pc, #380]	; (800494c <receiveDataFrame+0xb34>)
 80047d0:	681b      	ldr	r3, [r3, #0]
 80047d2:	4a5f      	ldr	r2, [pc, #380]	; (8004950 <receiveDataFrame+0xb38>)
 80047d4:	2164      	movs	r1, #100	; 0x64
 80047d6:	434b      	muls	r3, r1
 80047d8:	18d3      	adds	r3, r2, r3
 80047da:	333c      	adds	r3, #60	; 0x3c
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	1c18      	adds	r0, r3, #0
 80047e0:	f7fe fbac 	bl	8002f3c <__aeabi_f2d>
 80047e4:	0003      	movs	r3, r0
 80047e6:	000c      	movs	r4, r1
 80047e8:	4960      	ldr	r1, [pc, #384]	; (800496c <receiveDataFrame+0xb54>)
 80047ea:	001a      	movs	r2, r3
 80047ec:	0023      	movs	r3, r4
 80047ee:	0008      	movs	r0, r1
 80047f0:	f003 fa82 	bl	8007cf8 <iprintf>

	    			// Initialize the time of the tracking to 0
	    			passes[passNumberToUpdate].tracking.currentTimeSecond = floorf( 0 * 100000 ) / 100000;
 80047f4:	4b55      	ldr	r3, [pc, #340]	; (800494c <receiveDataFrame+0xb34>)
 80047f6:	681b      	ldr	r3, [r3, #0]
 80047f8:	4a55      	ldr	r2, [pc, #340]	; (8004950 <receiveDataFrame+0xb38>)
 80047fa:	2164      	movs	r1, #100	; 0x64
 80047fc:	434b      	muls	r3, r1
 80047fe:	18d3      	adds	r3, r2, r3
 8004800:	3344      	adds	r3, #68	; 0x44
 8004802:	2200      	movs	r2, #0
 8004804:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentTimeSecond is : %f\r\n", passes[passNumberToUpdate].tracking.currentTimeSecond);
 8004806:	4b51      	ldr	r3, [pc, #324]	; (800494c <receiveDataFrame+0xb34>)
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	4a51      	ldr	r2, [pc, #324]	; (8004950 <receiveDataFrame+0xb38>)
 800480c:	2164      	movs	r1, #100	; 0x64
 800480e:	434b      	muls	r3, r1
 8004810:	18d3      	adds	r3, r2, r3
 8004812:	3344      	adds	r3, #68	; 0x44
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	1c18      	adds	r0, r3, #0
 8004818:	f7fe fb90 	bl	8002f3c <__aeabi_f2d>
 800481c:	0003      	movs	r3, r0
 800481e:	000c      	movs	r4, r1
 8004820:	4953      	ldr	r1, [pc, #332]	; (8004970 <receiveDataFrame+0xb58>)
 8004822:	001a      	movs	r2, r3
 8004824:	0023      	movs	r3, r4
 8004826:	0008      	movs	r0, r1
 8004828:	f003 fa66 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].tracking.currentTimeMinute = floorf( 0 * 100000 ) / 100000;
 800482c:	4b47      	ldr	r3, [pc, #284]	; (800494c <receiveDataFrame+0xb34>)
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	4a47      	ldr	r2, [pc, #284]	; (8004950 <receiveDataFrame+0xb38>)
 8004832:	2164      	movs	r1, #100	; 0x64
 8004834:	434b      	muls	r3, r1
 8004836:	18d3      	adds	r3, r2, r3
 8004838:	3340      	adds	r3, #64	; 0x40
 800483a:	2200      	movs	r2, #0
 800483c:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentTimeMinute is : %f\r\n", passes[passNumberToUpdate].tracking.currentTimeMinute);
 800483e:	4b43      	ldr	r3, [pc, #268]	; (800494c <receiveDataFrame+0xb34>)
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	4a43      	ldr	r2, [pc, #268]	; (8004950 <receiveDataFrame+0xb38>)
 8004844:	2164      	movs	r1, #100	; 0x64
 8004846:	434b      	muls	r3, r1
 8004848:	18d3      	adds	r3, r2, r3
 800484a:	3340      	adds	r3, #64	; 0x40
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	1c18      	adds	r0, r3, #0
 8004850:	f7fe fb74 	bl	8002f3c <__aeabi_f2d>
 8004854:	0003      	movs	r3, r0
 8004856:	000c      	movs	r4, r1
 8004858:	4946      	ldr	r1, [pc, #280]	; (8004974 <receiveDataFrame+0xb5c>)
 800485a:	001a      	movs	r2, r3
 800485c:	0023      	movs	r3, r4
 800485e:	0008      	movs	r0, r1
 8004860:	f003 fa4a 	bl	8007cf8 <iprintf>

	    			// Initialize the current speed of the tracking to 0
	    			passes[passNumberToUpdate].tracking.currentSpeedAz = floorf( 0 * 100000 ) / 10000;
 8004864:	4b39      	ldr	r3, [pc, #228]	; (800494c <receiveDataFrame+0xb34>)
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	4a39      	ldr	r2, [pc, #228]	; (8004950 <receiveDataFrame+0xb38>)
 800486a:	2164      	movs	r1, #100	; 0x64
 800486c:	434b      	muls	r3, r1
 800486e:	18d3      	adds	r3, r2, r3
 8004870:	3348      	adds	r3, #72	; 0x48
 8004872:	2200      	movs	r2, #0
 8004874:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentSpeedAz is : %f\r\n", passes[passNumberToUpdate].tracking.currentSpeedAz);
 8004876:	4b35      	ldr	r3, [pc, #212]	; (800494c <receiveDataFrame+0xb34>)
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	4a35      	ldr	r2, [pc, #212]	; (8004950 <receiveDataFrame+0xb38>)
 800487c:	2164      	movs	r1, #100	; 0x64
 800487e:	434b      	muls	r3, r1
 8004880:	18d3      	adds	r3, r2, r3
 8004882:	3348      	adds	r3, #72	; 0x48
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	1c18      	adds	r0, r3, #0
 8004888:	f7fe fb58 	bl	8002f3c <__aeabi_f2d>
 800488c:	0003      	movs	r3, r0
 800488e:	000c      	movs	r4, r1
 8004890:	4939      	ldr	r1, [pc, #228]	; (8004978 <receiveDataFrame+0xb60>)
 8004892:	001a      	movs	r2, r3
 8004894:	0023      	movs	r3, r4
 8004896:	0008      	movs	r0, r1
 8004898:	f003 fa2e 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].tracking.currentSpeedEl = floorf( 0 * 100000 ) / 100000;
 800489c:	4b2b      	ldr	r3, [pc, #172]	; (800494c <receiveDataFrame+0xb34>)
 800489e:	681b      	ldr	r3, [r3, #0]
 80048a0:	4a2b      	ldr	r2, [pc, #172]	; (8004950 <receiveDataFrame+0xb38>)
 80048a2:	2164      	movs	r1, #100	; 0x64
 80048a4:	434b      	muls	r3, r1
 80048a6:	18d3      	adds	r3, r2, r3
 80048a8:	334c      	adds	r3, #76	; 0x4c
 80048aa:	2200      	movs	r2, #0
 80048ac:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentSpeedEl is : %f\r\n", passes[passNumberToUpdate].tracking.currentSpeedAz);
 80048ae:	4b27      	ldr	r3, [pc, #156]	; (800494c <receiveDataFrame+0xb34>)
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	4a27      	ldr	r2, [pc, #156]	; (8004950 <receiveDataFrame+0xb38>)
 80048b4:	2164      	movs	r1, #100	; 0x64
 80048b6:	434b      	muls	r3, r1
 80048b8:	18d3      	adds	r3, r2, r3
 80048ba:	3348      	adds	r3, #72	; 0x48
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	1c18      	adds	r0, r3, #0
 80048c0:	f7fe fb3c 	bl	8002f3c <__aeabi_f2d>
 80048c4:	0003      	movs	r3, r0
 80048c6:	000c      	movs	r4, r1
 80048c8:	492c      	ldr	r1, [pc, #176]	; (800497c <receiveDataFrame+0xb64>)
 80048ca:	001a      	movs	r2, r3
 80048cc:	0023      	movs	r3, r4
 80048ce:	0008      	movs	r0, r1
 80048d0:	f003 fa12 	bl	8007cf8 <iprintf>

	    			// The maximum speed of the tracking in AZ and in EL is two times the value of the average speed
	    			passes[passNumberToUpdate].tracking.maximumSpeedAz = floorf( ( 2 * (passes[passNumberToUpdate].averageSpeedAz) ) * 100000 ) / 100000;
 80048d4:	4b1d      	ldr	r3, [pc, #116]	; (800494c <receiveDataFrame+0xb34>)
 80048d6:	681b      	ldr	r3, [r3, #0]
 80048d8:	4a1d      	ldr	r2, [pc, #116]	; (8004950 <receiveDataFrame+0xb38>)
 80048da:	2164      	movs	r1, #100	; 0x64
 80048dc:	434b      	muls	r3, r1
 80048de:	18d3      	adds	r3, r2, r3
 80048e0:	3338      	adds	r3, #56	; 0x38
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	1c19      	adds	r1, r3, #0
 80048e6:	1c18      	adds	r0, r3, #0
 80048e8:	f7fb fec2 	bl	8000670 <__aeabi_fadd>
 80048ec:	1c03      	adds	r3, r0, #0
 80048ee:	4919      	ldr	r1, [pc, #100]	; (8004954 <receiveDataFrame+0xb3c>)
 80048f0:	1c18      	adds	r0, r3, #0
 80048f2:	f7fc fa2f 	bl	8000d54 <__aeabi_fmul>
 80048f6:	1c03      	adds	r3, r0, #0
 80048f8:	1c18      	adds	r0, r3, #0
 80048fa:	f007 fbb5 	bl	800c068 <floorf>
 80048fe:	1c02      	adds	r2, r0, #0
 8004900:	4b12      	ldr	r3, [pc, #72]	; (800494c <receiveDataFrame+0xb34>)
 8004902:	681c      	ldr	r4, [r3, #0]
 8004904:	4913      	ldr	r1, [pc, #76]	; (8004954 <receiveDataFrame+0xb3c>)
 8004906:	1c10      	adds	r0, r2, #0
 8004908:	f7fc f84c 	bl	80009a4 <__aeabi_fdiv>
 800490c:	1c03      	adds	r3, r0, #0
 800490e:	1c19      	adds	r1, r3, #0
 8004910:	4a0f      	ldr	r2, [pc, #60]	; (8004950 <receiveDataFrame+0xb38>)
 8004912:	2364      	movs	r3, #100	; 0x64
 8004914:	4363      	muls	r3, r4
 8004916:	18d3      	adds	r3, r2, r3
 8004918:	3350      	adds	r3, #80	; 0x50
 800491a:	6019      	str	r1, [r3, #0]
	    			printf("The pass.tracking.maximumSpeedAz is : %f\r\n", passes[passNumberToUpdate].tracking.maximumSpeedAz);
 800491c:	4b0b      	ldr	r3, [pc, #44]	; (800494c <receiveDataFrame+0xb34>)
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	4a0b      	ldr	r2, [pc, #44]	; (8004950 <receiveDataFrame+0xb38>)
 8004922:	2164      	movs	r1, #100	; 0x64
 8004924:	434b      	muls	r3, r1
 8004926:	18d3      	adds	r3, r2, r3
 8004928:	3350      	adds	r3, #80	; 0x50
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	1c18      	adds	r0, r3, #0
 800492e:	f7fe fb05 	bl	8002f3c <__aeabi_f2d>
 8004932:	0003      	movs	r3, r0
 8004934:	000c      	movs	r4, r1
 8004936:	4912      	ldr	r1, [pc, #72]	; (8004980 <receiveDataFrame+0xb68>)
 8004938:	001a      	movs	r2, r3
 800493a:	0023      	movs	r3, r4
 800493c:	e022      	b.n	8004984 <receiveDataFrame+0xb6c>
 800493e:	46c0      	nop			; (mov r8, r8)
 8004940:	40006400 	.word	0x40006400
 8004944:	0800c6c8 	.word	0x0800c6c8
 8004948:	0800c6f8 	.word	0x0800c6f8
 800494c:	20000288 	.word	0x20000288
 8004950:	2000028c 	.word	0x2000028c
 8004954:	47c35000 	.word	0x47c35000
 8004958:	0800c724 	.word	0x0800c724
 800495c:	42c80000 	.word	0x42c80000
 8004960:	0800c74c 	.word	0x0800c74c
 8004964:	0800c774 	.word	0x0800c774
 8004968:	40f86a00 	.word	0x40f86a00
 800496c:	0800c798 	.word	0x0800c798
 8004970:	0800c7bc 	.word	0x0800c7bc
 8004974:	0800c7ec 	.word	0x0800c7ec
 8004978:	0800c81c 	.word	0x0800c81c
 800497c:	0800c848 	.word	0x0800c848
 8004980:	0800c874 	.word	0x0800c874
 8004984:	0008      	movs	r0, r1
 8004986:	f003 f9b7 	bl	8007cf8 <iprintf>
	    			passes[passNumberToUpdate].tracking.maximumSpeedEl = floorf( ( 2 * (passes[passNumberToUpdate].averageSpeedEl) ) * 100000 )/ 100000;
 800498a:	4b3a      	ldr	r3, [pc, #232]	; (8004a74 <receiveDataFrame+0xc5c>)
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	4a3a      	ldr	r2, [pc, #232]	; (8004a78 <receiveDataFrame+0xc60>)
 8004990:	2164      	movs	r1, #100	; 0x64
 8004992:	434b      	muls	r3, r1
 8004994:	18d3      	adds	r3, r2, r3
 8004996:	333c      	adds	r3, #60	; 0x3c
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	1c19      	adds	r1, r3, #0
 800499c:	1c18      	adds	r0, r3, #0
 800499e:	f7fb fe67 	bl	8000670 <__aeabi_fadd>
 80049a2:	1c03      	adds	r3, r0, #0
 80049a4:	4935      	ldr	r1, [pc, #212]	; (8004a7c <receiveDataFrame+0xc64>)
 80049a6:	1c18      	adds	r0, r3, #0
 80049a8:	f7fc f9d4 	bl	8000d54 <__aeabi_fmul>
 80049ac:	1c03      	adds	r3, r0, #0
 80049ae:	1c18      	adds	r0, r3, #0
 80049b0:	f007 fb5a 	bl	800c068 <floorf>
 80049b4:	1c02      	adds	r2, r0, #0
 80049b6:	4b2f      	ldr	r3, [pc, #188]	; (8004a74 <receiveDataFrame+0xc5c>)
 80049b8:	681c      	ldr	r4, [r3, #0]
 80049ba:	4930      	ldr	r1, [pc, #192]	; (8004a7c <receiveDataFrame+0xc64>)
 80049bc:	1c10      	adds	r0, r2, #0
 80049be:	f7fb fff1 	bl	80009a4 <__aeabi_fdiv>
 80049c2:	1c03      	adds	r3, r0, #0
 80049c4:	1c19      	adds	r1, r3, #0
 80049c6:	4a2c      	ldr	r2, [pc, #176]	; (8004a78 <receiveDataFrame+0xc60>)
 80049c8:	2364      	movs	r3, #100	; 0x64
 80049ca:	4363      	muls	r3, r4
 80049cc:	18d3      	adds	r3, r2, r3
 80049ce:	3354      	adds	r3, #84	; 0x54
 80049d0:	6019      	str	r1, [r3, #0]
	    			printf("The pass.tracking.maximumSpeedEl is : %f\r\n", passes[passNumberToUpdate].tracking.maximumSpeedEl);
 80049d2:	4b28      	ldr	r3, [pc, #160]	; (8004a74 <receiveDataFrame+0xc5c>)
 80049d4:	681b      	ldr	r3, [r3, #0]
 80049d6:	4a28      	ldr	r2, [pc, #160]	; (8004a78 <receiveDataFrame+0xc60>)
 80049d8:	2164      	movs	r1, #100	; 0x64
 80049da:	434b      	muls	r3, r1
 80049dc:	18d3      	adds	r3, r2, r3
 80049de:	3354      	adds	r3, #84	; 0x54
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	1c18      	adds	r0, r3, #0
 80049e4:	f7fe faaa 	bl	8002f3c <__aeabi_f2d>
 80049e8:	0003      	movs	r3, r0
 80049ea:	000c      	movs	r4, r1
 80049ec:	4924      	ldr	r1, [pc, #144]	; (8004a80 <receiveDataFrame+0xc68>)
 80049ee:	001a      	movs	r2, r3
 80049f0:	0023      	movs	r3, r4
 80049f2:	0008      	movs	r0, r1
 80049f4:	f003 f980 	bl	8007cf8 <iprintf>

	    			// Set the speed of the motors at 12V in °/min
	    			passes[passNumberToUpdate].tracking.maximumMotorSpeedAz = 131; // 80 rpm at 12V ( 131 / 360 * 220 = 80 )
 80049f8:	4b1e      	ldr	r3, [pc, #120]	; (8004a74 <receiveDataFrame+0xc5c>)
 80049fa:	681b      	ldr	r3, [r3, #0]
 80049fc:	4a1e      	ldr	r2, [pc, #120]	; (8004a78 <receiveDataFrame+0xc60>)
 80049fe:	2164      	movs	r1, #100	; 0x64
 8004a00:	434b      	muls	r3, r1
 8004a02:	18d3      	adds	r3, r2, r3
 8004a04:	3358      	adds	r3, #88	; 0x58
 8004a06:	4a1f      	ldr	r2, [pc, #124]	; (8004a84 <receiveDataFrame+0xc6c>)
 8004a08:	601a      	str	r2, [r3, #0]
	    			passes[passNumberToUpdate].tracking.maximumMotorSpeedEl = 16.5; // 10 rpm at 12V ( 16.5 / 360 * 220 = 10 )
 8004a0a:	4b1a      	ldr	r3, [pc, #104]	; (8004a74 <receiveDataFrame+0xc5c>)
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	4a1a      	ldr	r2, [pc, #104]	; (8004a78 <receiveDataFrame+0xc60>)
 8004a10:	2164      	movs	r1, #100	; 0x64
 8004a12:	434b      	muls	r3, r1
 8004a14:	18d3      	adds	r3, r2, r3
 8004a16:	335c      	adds	r3, #92	; 0x5c
 8004a18:	4a1b      	ldr	r2, [pc, #108]	; (8004a88 <receiveDataFrame+0xc70>)
 8004a1a:	601a      	str	r2, [r3, #0]

	    			break;
 8004a1c:	46c0      	nop			; (mov r8, r8)

	    		}

	    	numberOfDataFrameReceived++;
 8004a1e:	4b1b      	ldr	r3, [pc, #108]	; (8004a8c <receiveDataFrame+0xc74>)
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	1c5a      	adds	r2, r3, #1
 8004a24:	4b19      	ldr	r3, [pc, #100]	; (8004a8c <receiveDataFrame+0xc74>)
 8004a26:	601a      	str	r2, [r3, #0]

	    	// Set the alarm for passes[0]
	    	if(numberOfDataFrameReceived == 2){
 8004a28:	4b18      	ldr	r3, [pc, #96]	; (8004a8c <receiveDataFrame+0xc74>)
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	2b02      	cmp	r3, #2
 8004a2e:	d10d      	bne.n	8004a4c <receiveDataFrame+0xc34>
	    		rtcSetAlarm();
 8004a30:	f001 fdd2 	bl	80065d8 <rtcSetAlarm>
	    		rtcGetAlarm();
 8004a34:	f001 ff94 	bl	8006960 <rtcGetAlarm>
 8004a38:	e008      	b.n	8004a4c <receiveDataFrame+0xc34>

	    }

	    else{

	    	printf("The size of the received data frame is not the right one \r\n");
 8004a3a:	4b15      	ldr	r3, [pc, #84]	; (8004a90 <receiveDataFrame+0xc78>)
 8004a3c:	0018      	movs	r0, r3
 8004a3e:	f003 f9d5 	bl	8007dec <puts>
 8004a42:	e003      	b.n	8004a4c <receiveDataFrame+0xc34>
	    }
	}

	else {

		printf("The id of the received data frame is not the one we are looking for \r\n");
 8004a44:	4b13      	ldr	r3, [pc, #76]	; (8004a94 <receiveDataFrame+0xc7c>)
 8004a46:	0018      	movs	r0, r3
 8004a48:	f003 f9d0 	bl	8007dec <puts>

	}

	// Release the FIFO
	(fifoNumber == 0) ? (CAN->RF0R |= CAN_RF0R_RFOM0) : (CAN->RF1R |= CAN_RF1R_RFOM1);
 8004a4c:	69fb      	ldr	r3, [r7, #28]
 8004a4e:	2b00      	cmp	r3, #0
 8004a50:	d106      	bne.n	8004a60 <receiveDataFrame+0xc48>
 8004a52:	4b11      	ldr	r3, [pc, #68]	; (8004a98 <receiveDataFrame+0xc80>)
 8004a54:	68da      	ldr	r2, [r3, #12]
 8004a56:	4b10      	ldr	r3, [pc, #64]	; (8004a98 <receiveDataFrame+0xc80>)
 8004a58:	2120      	movs	r1, #32
 8004a5a:	430a      	orrs	r2, r1
 8004a5c:	60da      	str	r2, [r3, #12]

}
 8004a5e:	e005      	b.n	8004a6c <receiveDataFrame+0xc54>
	(fifoNumber == 0) ? (CAN->RF0R |= CAN_RF0R_RFOM0) : (CAN->RF1R |= CAN_RF1R_RFOM1);
 8004a60:	4b0d      	ldr	r3, [pc, #52]	; (8004a98 <receiveDataFrame+0xc80>)
 8004a62:	691a      	ldr	r2, [r3, #16]
 8004a64:	4b0c      	ldr	r3, [pc, #48]	; (8004a98 <receiveDataFrame+0xc80>)
 8004a66:	2120      	movs	r1, #32
 8004a68:	430a      	orrs	r2, r1
 8004a6a:	611a      	str	r2, [r3, #16]
}
 8004a6c:	46c0      	nop			; (mov r8, r8)
 8004a6e:	46bd      	mov	sp, r7
 8004a70:	b008      	add	sp, #32
 8004a72:	bdb0      	pop	{r4, r5, r7, pc}
 8004a74:	20000288 	.word	0x20000288
 8004a78:	2000028c 	.word	0x2000028c
 8004a7c:	47c35000 	.word	0x47c35000
 8004a80:	0800c8a0 	.word	0x0800c8a0
 8004a84:	43030000 	.word	0x43030000
 8004a88:	41840000 	.word	0x41840000
 8004a8c:	2000027c 	.word	0x2000027c
 8004a90:	0800c8cc 	.word	0x0800c8cc
 8004a94:	0800c908 	.word	0x0800c908
 8004a98:	40006400 	.word	0x40006400

08004a9c <canEnableIRQ>:

void canEnableIRQ(){
 8004a9c:	b580      	push	{r7, lr}
 8004a9e:	af00      	add	r7, sp, #0

	NVIC_SetPriority(CEC_CAN_IRQn, 1); // Set interruption priority level to 1
 8004aa0:	2101      	movs	r1, #1
 8004aa2:	201e      	movs	r0, #30
 8004aa4:	f7fe fc3c 	bl	8003320 <__NVIC_SetPriority>
	NVIC_EnableIRQ(CEC_CAN_IRQn); // Enable interruption for the NVIC
 8004aa8:	201e      	movs	r0, #30
 8004aaa:	f7fe fc1f 	bl	80032ec <__NVIC_EnableIRQ>
}
 8004aae:	46c0      	nop			; (mov r8, r8)
 8004ab0:	46bd      	mov	sp, r7
 8004ab2:	bd80      	pop	{r7, pc}

08004ab4 <canDisableIRQ>:

void canDisableIRQ(){
 8004ab4:	b580      	push	{r7, lr}
 8004ab6:	af00      	add	r7, sp, #0

	CAN->IER &= ~(CAN_IER_TMEIE); // Interruption on completed transmission request (ok, arbitration loss, abort and error)
 8004ab8:	4b16      	ldr	r3, [pc, #88]	; (8004b14 <canDisableIRQ+0x60>)
 8004aba:	695a      	ldr	r2, [r3, #20]
 8004abc:	4b15      	ldr	r3, [pc, #84]	; (8004b14 <canDisableIRQ+0x60>)
 8004abe:	2101      	movs	r1, #1
 8004ac0:	438a      	bics	r2, r1
 8004ac2:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FMPIE0); // Interruption on message pending into the fifo 0
 8004ac4:	4b13      	ldr	r3, [pc, #76]	; (8004b14 <canDisableIRQ+0x60>)
 8004ac6:	695a      	ldr	r2, [r3, #20]
 8004ac8:	4b12      	ldr	r3, [pc, #72]	; (8004b14 <canDisableIRQ+0x60>)
 8004aca:	2102      	movs	r1, #2
 8004acc:	438a      	bics	r2, r1
 8004ace:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FMPIE1); // Interruption on message pending into the fifo 1
 8004ad0:	4b10      	ldr	r3, [pc, #64]	; (8004b14 <canDisableIRQ+0x60>)
 8004ad2:	695a      	ldr	r2, [r3, #20]
 8004ad4:	4b0f      	ldr	r3, [pc, #60]	; (8004b14 <canDisableIRQ+0x60>)
 8004ad6:	2110      	movs	r1, #16
 8004ad8:	438a      	bics	r2, r1
 8004ada:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FOVIE0); // Interruption on message overrun into the fifo 0
 8004adc:	4b0d      	ldr	r3, [pc, #52]	; (8004b14 <canDisableIRQ+0x60>)
 8004ade:	695a      	ldr	r2, [r3, #20]
 8004ae0:	4b0c      	ldr	r3, [pc, #48]	; (8004b14 <canDisableIRQ+0x60>)
 8004ae2:	2108      	movs	r1, #8
 8004ae4:	438a      	bics	r2, r1
 8004ae6:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FOVIE1); // Interruption on message overrun into the fifo 1
 8004ae8:	4b0a      	ldr	r3, [pc, #40]	; (8004b14 <canDisableIRQ+0x60>)
 8004aea:	695a      	ldr	r2, [r3, #20]
 8004aec:	4b09      	ldr	r3, [pc, #36]	; (8004b14 <canDisableIRQ+0x60>)
 8004aee:	2140      	movs	r1, #64	; 0x40
 8004af0:	438a      	bics	r2, r1
 8004af2:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_ERRIE); // Interruption on error
 8004af4:	4b07      	ldr	r3, [pc, #28]	; (8004b14 <canDisableIRQ+0x60>)
 8004af6:	695a      	ldr	r2, [r3, #20]
 8004af8:	4b06      	ldr	r3, [pc, #24]	; (8004b14 <canDisableIRQ+0x60>)
 8004afa:	4907      	ldr	r1, [pc, #28]	; (8004b18 <canDisableIRQ+0x64>)
 8004afc:	400a      	ands	r2, r1
 8004afe:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_LECIE); // Interruption on last error code
 8004b00:	4b04      	ldr	r3, [pc, #16]	; (8004b14 <canDisableIRQ+0x60>)
 8004b02:	695a      	ldr	r2, [r3, #20]
 8004b04:	4b03      	ldr	r3, [pc, #12]	; (8004b14 <canDisableIRQ+0x60>)
 8004b06:	4905      	ldr	r1, [pc, #20]	; (8004b1c <canDisableIRQ+0x68>)
 8004b08:	400a      	ands	r2, r1
 8004b0a:	615a      	str	r2, [r3, #20]
}
 8004b0c:	46c0      	nop			; (mov r8, r8)
 8004b0e:	46bd      	mov	sp, r7
 8004b10:	bd80      	pop	{r7, pc}
 8004b12:	46c0      	nop			; (mov r8, r8)
 8004b14:	40006400 	.word	0x40006400
 8004b18:	ffff7fff 	.word	0xffff7fff
 8004b1c:	fffff7ff 	.word	0xfffff7ff

08004b20 <CEC_CAN_IRQHandler>:

void CEC_CAN_IRQHandler(void){
 8004b20:	b580      	push	{r7, lr}
 8004b22:	b086      	sub	sp, #24
 8004b24:	af00      	add	r7, sp, #0

	uint32_t interrupts = CAN->IER;
 8004b26:	4bc8      	ldr	r3, [pc, #800]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b28:	695b      	ldr	r3, [r3, #20]
 8004b2a:	617b      	str	r3, [r7, #20]
	uint32_t msrflags = CAN->MSR;
 8004b2c:	4bc6      	ldr	r3, [pc, #792]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b2e:	685b      	ldr	r3, [r3, #4]
 8004b30:	613b      	str	r3, [r7, #16]
	uint32_t tsrflags = CAN->TSR;
 8004b32:	4bc5      	ldr	r3, [pc, #788]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b34:	689b      	ldr	r3, [r3, #8]
 8004b36:	60fb      	str	r3, [r7, #12]
	uint32_t rf0rflags = CAN->RF0R;
 8004b38:	4bc3      	ldr	r3, [pc, #780]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b3a:	68db      	ldr	r3, [r3, #12]
 8004b3c:	60bb      	str	r3, [r7, #8]
	uint32_t rf1rflags = CAN->RF1R;
 8004b3e:	4bc2      	ldr	r3, [pc, #776]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b40:	691b      	ldr	r3, [r3, #16]
 8004b42:	607b      	str	r3, [r7, #4]
	uint32_t esrflags = CAN->ESR;
 8004b44:	4bc0      	ldr	r3, [pc, #768]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b46:	699b      	ldr	r3, [r3, #24]
 8004b48:	603b      	str	r3, [r7, #0]

	/********** TRANSMIT INTERRUPT **********/
	if ((interrupts & CAN_IER_TMEIE) != 0U){
 8004b4a:	697b      	ldr	r3, [r7, #20]
 8004b4c:	2201      	movs	r2, #1
 8004b4e:	4013      	ands	r3, r2
 8004b50:	d100      	bne.n	8004b54 <CEC_CAN_IRQHandler+0x34>
 8004b52:	e0f3      	b.n	8004d3c <CEC_CAN_IRQHandler+0x21c>

    	// Transmit interrupt mailbox 0
		if ((tsrflags & CAN_TSR_RQCP0) != 0U) {
 8004b54:	68fb      	ldr	r3, [r7, #12]
 8004b56:	2201      	movs	r2, #1
 8004b58:	4013      	ands	r3, r2
 8004b5a:	d049      	beq.n	8004bf0 <CEC_CAN_IRQHandler+0xd0>

    		// Clear RQCP0, TXOK0, ALST0 and TERR0 bits
    		CAN->TSR &= ~CAN_TSR_RQCP0_Msk;
 8004b5c:	4bba      	ldr	r3, [pc, #744]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b5e:	689a      	ldr	r2, [r3, #8]
 8004b60:	4bb9      	ldr	r3, [pc, #740]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b62:	2101      	movs	r1, #1
 8004b64:	438a      	bics	r2, r1
 8004b66:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TXOK0_Msk;
 8004b68:	4bb7      	ldr	r3, [pc, #732]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b6a:	689a      	ldr	r2, [r3, #8]
 8004b6c:	4bb6      	ldr	r3, [pc, #728]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b6e:	2102      	movs	r1, #2
 8004b70:	438a      	bics	r2, r1
 8004b72:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_ALST0_Msk;
 8004b74:	4bb4      	ldr	r3, [pc, #720]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b76:	689a      	ldr	r2, [r3, #8]
 8004b78:	4bb3      	ldr	r3, [pc, #716]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b7a:	2104      	movs	r1, #4
 8004b7c:	438a      	bics	r2, r1
 8004b7e:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TERR0_Msk;
 8004b80:	4bb1      	ldr	r3, [pc, #708]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b82:	689a      	ldr	r2, [r3, #8]
 8004b84:	4bb0      	ldr	r3, [pc, #704]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004b86:	2108      	movs	r1, #8
 8004b88:	438a      	bics	r2, r1
 8004b8a:	609a      	str	r2, [r3, #8]

      		// Transmission succeed
    		if ((tsrflags & CAN_TSR_TXOK0) != 0U){
 8004b8c:	68fb      	ldr	r3, [r7, #12]
 8004b8e:	2202      	movs	r2, #2
 8004b90:	4013      	ands	r3, r2
 8004b92:	d003      	beq.n	8004b9c <CEC_CAN_IRQHandler+0x7c>

        		printf("Transmission succeed from mailbox 0 ! \r\n");
 8004b94:	4bad      	ldr	r3, [pc, #692]	; (8004e4c <CEC_CAN_IRQHandler+0x32c>)
 8004b96:	0018      	movs	r0, r3
 8004b98:	f003 f928 	bl	8007dec <puts>

    		}

    		// Transmission failed due to arbitration lost
      		if ((tsrflags & CAN_TSR_ALST0) != 0U){
 8004b9c:	68fb      	ldr	r3, [r7, #12]
 8004b9e:	2204      	movs	r2, #4
 8004ba0:	4013      	ands	r3, r2
 8004ba2:	d009      	beq.n	8004bb8 <CEC_CAN_IRQHandler+0x98>

          		printf("Transmission fail due to arbitration lost from mailbox 0 ! \r\n");
 8004ba4:	4baa      	ldr	r3, [pc, #680]	; (8004e50 <CEC_CAN_IRQHandler+0x330>)
 8004ba6:	0018      	movs	r0, r3
 8004ba8:	f003 f920 	bl	8007dec <puts>
          		printf("Send new remote frame ! \r\n");
 8004bac:	4ba9      	ldr	r3, [pc, #676]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004bae:	0018      	movs	r0, r3
 8004bb0:	f003 f91c 	bl	8007dec <puts>
          		sendRemoteFrame();
 8004bb4:	f7ff f84e 	bl	8003c54 <sendRemoteFrame>
        	}

        	// Transmission failed due error
        	if ((tsrflags & CAN_TSR_TERR0) != 0U){
 8004bb8:	68fb      	ldr	r3, [r7, #12]
 8004bba:	2208      	movs	r2, #8
 8004bbc:	4013      	ands	r3, r2
 8004bbe:	d009      	beq.n	8004bd4 <CEC_CAN_IRQHandler+0xb4>

          		printf("Transmission fail due to error from mailbox 0 ! \r\n");
 8004bc0:	4ba5      	ldr	r3, [pc, #660]	; (8004e58 <CEC_CAN_IRQHandler+0x338>)
 8004bc2:	0018      	movs	r0, r3
 8004bc4:	f003 f912 	bl	8007dec <puts>
          		printf("Send new remote frame ! \r\n");
 8004bc8:	4ba2      	ldr	r3, [pc, #648]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004bca:	0018      	movs	r0, r3
 8004bcc:	f003 f90e 	bl	8007dec <puts>
          		sendRemoteFrame();
 8004bd0:	f7ff f840 	bl	8003c54 <sendRemoteFrame>

        	}

        	// Transmission aborted
        	if ((tsrflags & CAN_TSR_ABRQ0) != 0U) {
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	2280      	movs	r2, #128	; 0x80
 8004bd8:	4013      	ands	r3, r2
 8004bda:	d009      	beq.n	8004bf0 <CEC_CAN_IRQHandler+0xd0>

        		printf("Transmission aborted from mailbox 0 ! \r\n");
 8004bdc:	4b9f      	ldr	r3, [pc, #636]	; (8004e5c <CEC_CAN_IRQHandler+0x33c>)
 8004bde:	0018      	movs	r0, r3
 8004be0:	f003 f904 	bl	8007dec <puts>
        		printf("Send new remote frame ! \r\n");
 8004be4:	4b9b      	ldr	r3, [pc, #620]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004be6:	0018      	movs	r0, r3
 8004be8:	f003 f900 	bl	8007dec <puts>
        		sendRemoteFrame();
 8004bec:	f7ff f832 	bl	8003c54 <sendRemoteFrame>

        	}
      	}

    	// Transmit interrupt mailbox 1
    	if ((tsrflags & CAN_TSR_RQCP1) != 0U) {
 8004bf0:	68fa      	ldr	r2, [r7, #12]
 8004bf2:	2380      	movs	r3, #128	; 0x80
 8004bf4:	005b      	lsls	r3, r3, #1
 8004bf6:	4013      	ands	r3, r2
 8004bf8:	d04d      	beq.n	8004c96 <CEC_CAN_IRQHandler+0x176>

    		// Clear RQCP0, TXOK0, ALST0 and TERR0 bits
    		CAN->TSR &= ~CAN_TSR_RQCP1_Msk;
 8004bfa:	4b93      	ldr	r3, [pc, #588]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004bfc:	689a      	ldr	r2, [r3, #8]
 8004bfe:	4b92      	ldr	r3, [pc, #584]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004c00:	4997      	ldr	r1, [pc, #604]	; (8004e60 <CEC_CAN_IRQHandler+0x340>)
 8004c02:	400a      	ands	r2, r1
 8004c04:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TXOK1_Msk;
 8004c06:	4b90      	ldr	r3, [pc, #576]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004c08:	689a      	ldr	r2, [r3, #8]
 8004c0a:	4b8f      	ldr	r3, [pc, #572]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004c0c:	4995      	ldr	r1, [pc, #596]	; (8004e64 <CEC_CAN_IRQHandler+0x344>)
 8004c0e:	400a      	ands	r2, r1
 8004c10:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_ALST1_Msk;
 8004c12:	4b8d      	ldr	r3, [pc, #564]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004c14:	689a      	ldr	r2, [r3, #8]
 8004c16:	4b8c      	ldr	r3, [pc, #560]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004c18:	4993      	ldr	r1, [pc, #588]	; (8004e68 <CEC_CAN_IRQHandler+0x348>)
 8004c1a:	400a      	ands	r2, r1
 8004c1c:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TERR1_Msk;
 8004c1e:	4b8a      	ldr	r3, [pc, #552]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004c20:	689a      	ldr	r2, [r3, #8]
 8004c22:	4b89      	ldr	r3, [pc, #548]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004c24:	4991      	ldr	r1, [pc, #580]	; (8004e6c <CEC_CAN_IRQHandler+0x34c>)
 8004c26:	400a      	ands	r2, r1
 8004c28:	609a      	str	r2, [r3, #8]

    		// Transmission succeed
    	    if ((tsrflags & CAN_TSR_TXOK1) != 0U){
 8004c2a:	68fa      	ldr	r2, [r7, #12]
 8004c2c:	2380      	movs	r3, #128	; 0x80
 8004c2e:	009b      	lsls	r3, r3, #2
 8004c30:	4013      	ands	r3, r2
 8004c32:	d003      	beq.n	8004c3c <CEC_CAN_IRQHandler+0x11c>

    	        printf("Transmission succeed from mailbox 1 ! \r\n");
 8004c34:	4b8e      	ldr	r3, [pc, #568]	; (8004e70 <CEC_CAN_IRQHandler+0x350>)
 8004c36:	0018      	movs	r0, r3
 8004c38:	f003 f8d8 	bl	8007dec <puts>

    	    }

    	    // Transmission failed due to arbitration lost
    	    if ((tsrflags & CAN_TSR_ALST1) != 0U){
 8004c3c:	68fa      	ldr	r2, [r7, #12]
 8004c3e:	2380      	movs	r3, #128	; 0x80
 8004c40:	00db      	lsls	r3, r3, #3
 8004c42:	4013      	ands	r3, r2
 8004c44:	d009      	beq.n	8004c5a <CEC_CAN_IRQHandler+0x13a>

    	    	printf("Transmission fail due to arbitration lost from mailbox 1 ! \r\n");
 8004c46:	4b8b      	ldr	r3, [pc, #556]	; (8004e74 <CEC_CAN_IRQHandler+0x354>)
 8004c48:	0018      	movs	r0, r3
 8004c4a:	f003 f8cf 	bl	8007dec <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004c4e:	4b81      	ldr	r3, [pc, #516]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004c50:	0018      	movs	r0, r3
 8004c52:	f003 f8cb 	bl	8007dec <puts>
    	    	sendRemoteFrame();
 8004c56:	f7fe fffd 	bl	8003c54 <sendRemoteFrame>
    	    }

    	    // Transmission failed due error
    	    if ((tsrflags & CAN_TSR_TERR1) != 0U){
 8004c5a:	68fa      	ldr	r2, [r7, #12]
 8004c5c:	2380      	movs	r3, #128	; 0x80
 8004c5e:	011b      	lsls	r3, r3, #4
 8004c60:	4013      	ands	r3, r2
 8004c62:	d009      	beq.n	8004c78 <CEC_CAN_IRQHandler+0x158>

    	    	printf("Transmission fail due to error from mailbox 1 ! \r\n");
 8004c64:	4b84      	ldr	r3, [pc, #528]	; (8004e78 <CEC_CAN_IRQHandler+0x358>)
 8004c66:	0018      	movs	r0, r3
 8004c68:	f003 f8c0 	bl	8007dec <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004c6c:	4b79      	ldr	r3, [pc, #484]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004c6e:	0018      	movs	r0, r3
 8004c70:	f003 f8bc 	bl	8007dec <puts>
    	    	sendRemoteFrame();
 8004c74:	f7fe ffee 	bl	8003c54 <sendRemoteFrame>
    	    }

    	    // Transmission aborted
    	    if ((tsrflags & CAN_TSR_ABRQ1) != 0U) {
 8004c78:	68fa      	ldr	r2, [r7, #12]
 8004c7a:	2380      	movs	r3, #128	; 0x80
 8004c7c:	021b      	lsls	r3, r3, #8
 8004c7e:	4013      	ands	r3, r2
 8004c80:	d009      	beq.n	8004c96 <CEC_CAN_IRQHandler+0x176>

    	        printf("Transmission aborted from mailbox 1 !\r\n");
 8004c82:	4b7e      	ldr	r3, [pc, #504]	; (8004e7c <CEC_CAN_IRQHandler+0x35c>)
 8004c84:	0018      	movs	r0, r3
 8004c86:	f003 f8b1 	bl	8007dec <puts>
    	        printf("Send new remote frame ! \r\n");
 8004c8a:	4b72      	ldr	r3, [pc, #456]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004c8c:	0018      	movs	r0, r3
 8004c8e:	f003 f8ad 	bl	8007dec <puts>
    	        sendRemoteFrame();
 8004c92:	f7fe ffdf 	bl	8003c54 <sendRemoteFrame>
    	    }
    	}

    	// Transmit interrupt mailbox 2
    	if ((tsrflags & CAN_TSR_RQCP2) != 0U) {
 8004c96:	68fa      	ldr	r2, [r7, #12]
 8004c98:	2380      	movs	r3, #128	; 0x80
 8004c9a:	025b      	lsls	r3, r3, #9
 8004c9c:	4013      	ands	r3, r2
 8004c9e:	d04d      	beq.n	8004d3c <CEC_CAN_IRQHandler+0x21c>

    		// Clear RQCP2, TXOK2, ALST2 and TERR2 bits
    		CAN->TSR &= ~CAN_TSR_RQCP2_Msk;
 8004ca0:	4b69      	ldr	r3, [pc, #420]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004ca2:	689a      	ldr	r2, [r3, #8]
 8004ca4:	4b68      	ldr	r3, [pc, #416]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004ca6:	4976      	ldr	r1, [pc, #472]	; (8004e80 <CEC_CAN_IRQHandler+0x360>)
 8004ca8:	400a      	ands	r2, r1
 8004caa:	609a      	str	r2, [r3, #8]
    	    CAN->TSR &= ~CAN_TSR_TXOK2_Msk;
 8004cac:	4b66      	ldr	r3, [pc, #408]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004cae:	689a      	ldr	r2, [r3, #8]
 8004cb0:	4b65      	ldr	r3, [pc, #404]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004cb2:	4974      	ldr	r1, [pc, #464]	; (8004e84 <CEC_CAN_IRQHandler+0x364>)
 8004cb4:	400a      	ands	r2, r1
 8004cb6:	609a      	str	r2, [r3, #8]
    	    CAN->TSR &= ~CAN_TSR_ALST2_Msk;
 8004cb8:	4b63      	ldr	r3, [pc, #396]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004cba:	689a      	ldr	r2, [r3, #8]
 8004cbc:	4b62      	ldr	r3, [pc, #392]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004cbe:	4972      	ldr	r1, [pc, #456]	; (8004e88 <CEC_CAN_IRQHandler+0x368>)
 8004cc0:	400a      	ands	r2, r1
 8004cc2:	609a      	str	r2, [r3, #8]
    	    CAN->TSR &= ~CAN_TSR_TERR2_Msk;
 8004cc4:	4b60      	ldr	r3, [pc, #384]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004cc6:	689a      	ldr	r2, [r3, #8]
 8004cc8:	4b5f      	ldr	r3, [pc, #380]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004cca:	4970      	ldr	r1, [pc, #448]	; (8004e8c <CEC_CAN_IRQHandler+0x36c>)
 8004ccc:	400a      	ands	r2, r1
 8004cce:	609a      	str	r2, [r3, #8]

    	    // Transmission succeed
    	    if ((tsrflags & CAN_TSR_TXOK2) != 0U){
 8004cd0:	68fa      	ldr	r2, [r7, #12]
 8004cd2:	2380      	movs	r3, #128	; 0x80
 8004cd4:	029b      	lsls	r3, r3, #10
 8004cd6:	4013      	ands	r3, r2
 8004cd8:	d003      	beq.n	8004ce2 <CEC_CAN_IRQHandler+0x1c2>

    	    	printf("Transmission succeed from mailbox 2 !\r\n");
 8004cda:	4b6d      	ldr	r3, [pc, #436]	; (8004e90 <CEC_CAN_IRQHandler+0x370>)
 8004cdc:	0018      	movs	r0, r3
 8004cde:	f003 f885 	bl	8007dec <puts>

    	    }

    	    // Transmission failed due to arbitration lost
    	    if ((tsrflags & CAN_TSR_ALST2) != 0U){
 8004ce2:	68fa      	ldr	r2, [r7, #12]
 8004ce4:	2380      	movs	r3, #128	; 0x80
 8004ce6:	02db      	lsls	r3, r3, #11
 8004ce8:	4013      	ands	r3, r2
 8004cea:	d009      	beq.n	8004d00 <CEC_CAN_IRQHandler+0x1e0>

    	    	printf("Transmission fail due to arbitration lost from mailbox 2 !\r\n");
 8004cec:	4b69      	ldr	r3, [pc, #420]	; (8004e94 <CEC_CAN_IRQHandler+0x374>)
 8004cee:	0018      	movs	r0, r3
 8004cf0:	f003 f87c 	bl	8007dec <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004cf4:	4b57      	ldr	r3, [pc, #348]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004cf6:	0018      	movs	r0, r3
 8004cf8:	f003 f878 	bl	8007dec <puts>
    	    	sendRemoteFrame();
 8004cfc:	f7fe ffaa 	bl	8003c54 <sendRemoteFrame>
    	    }

    	    // Transmission failed due error
    	    if ((tsrflags & CAN_TSR_TERR2) != 0U){
 8004d00:	68fa      	ldr	r2, [r7, #12]
 8004d02:	2380      	movs	r3, #128	; 0x80
 8004d04:	031b      	lsls	r3, r3, #12
 8004d06:	4013      	ands	r3, r2
 8004d08:	d009      	beq.n	8004d1e <CEC_CAN_IRQHandler+0x1fe>

    	    	printf("Transmission fail due to error from mailbox 2 !\r\n");
 8004d0a:	4b63      	ldr	r3, [pc, #396]	; (8004e98 <CEC_CAN_IRQHandler+0x378>)
 8004d0c:	0018      	movs	r0, r3
 8004d0e:	f003 f86d 	bl	8007dec <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004d12:	4b50      	ldr	r3, [pc, #320]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004d14:	0018      	movs	r0, r3
 8004d16:	f003 f869 	bl	8007dec <puts>
    	    	sendRemoteFrame();
 8004d1a:	f7fe ff9b 	bl	8003c54 <sendRemoteFrame>
    	    }

    	    // Transmission aborted
    	    if ((tsrflags & CAN_TSR_ABRQ2) != 0U) {
 8004d1e:	68fa      	ldr	r2, [r7, #12]
 8004d20:	2380      	movs	r3, #128	; 0x80
 8004d22:	041b      	lsls	r3, r3, #16
 8004d24:	4013      	ands	r3, r2
 8004d26:	d009      	beq.n	8004d3c <CEC_CAN_IRQHandler+0x21c>

    	    	printf("Transmission aborted from mailbox 2 !\r\n");
 8004d28:	4b5c      	ldr	r3, [pc, #368]	; (8004e9c <CEC_CAN_IRQHandler+0x37c>)
 8004d2a:	0018      	movs	r0, r3
 8004d2c:	f003 f85e 	bl	8007dec <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004d30:	4b48      	ldr	r3, [pc, #288]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004d32:	0018      	movs	r0, r3
 8004d34:	f003 f85a 	bl	8007dec <puts>
    	    	sendRemoteFrame();
 8004d38:	f7fe ff8c 	bl	8003c54 <sendRemoteFrame>
	}

	/********** FIFO 0 INTERRUPT **********/

	// Fifo 0 overrun
  	if ((interrupts & CAN_IER_FOVIE0) != 0U){
 8004d3c:	697b      	ldr	r3, [r7, #20]
 8004d3e:	2208      	movs	r2, #8
 8004d40:	4013      	ands	r3, r2
 8004d42:	d013      	beq.n	8004d6c <CEC_CAN_IRQHandler+0x24c>

    	if ((rf0rflags & CAN_RF0R_FOVR0) != 0U) {
 8004d44:	68bb      	ldr	r3, [r7, #8]
 8004d46:	2210      	movs	r2, #16
 8004d48:	4013      	ands	r3, r2
 8004d4a:	d00f      	beq.n	8004d6c <CEC_CAN_IRQHandler+0x24c>

      		printf("Fifo 0 overrun ! \r\n");
 8004d4c:	4b54      	ldr	r3, [pc, #336]	; (8004ea0 <CEC_CAN_IRQHandler+0x380>)
 8004d4e:	0018      	movs	r0, r3
 8004d50:	f003 f84c 	bl	8007dec <puts>
      		printf("Send new remote frame ! \r\n");
 8004d54:	4b3f      	ldr	r3, [pc, #252]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004d56:	0018      	movs	r0, r3
 8004d58:	f003 f848 	bl	8007dec <puts>
      		sendRemoteFrame();
 8004d5c:	f7fe ff7a 	bl	8003c54 <sendRemoteFrame>

      		// Clear fifo 0 overrun flag
      		CAN->RF0R &= ~CAN_RF0R_FOVR0_Msk;
 8004d60:	4b39      	ldr	r3, [pc, #228]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004d62:	68da      	ldr	r2, [r3, #12]
 8004d64:	4b38      	ldr	r3, [pc, #224]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004d66:	2110      	movs	r1, #16
 8004d68:	438a      	bics	r2, r1
 8004d6a:	60da      	str	r2, [r3, #12]
    	}
  	}

  	// Fifo 0 full
  	if ((interrupts & CAN_IER_FFIE0) != 0U)	{
 8004d6c:	697b      	ldr	r3, [r7, #20]
 8004d6e:	2204      	movs	r2, #4
 8004d70:	4013      	ands	r3, r2
 8004d72:	d00d      	beq.n	8004d90 <CEC_CAN_IRQHandler+0x270>

    	if ((rf0rflags & CAN_RF0R_FULL0) != 0U)	{
 8004d74:	68bb      	ldr	r3, [r7, #8]
 8004d76:	2208      	movs	r2, #8
 8004d78:	4013      	ands	r3, r2
 8004d7a:	d009      	beq.n	8004d90 <CEC_CAN_IRQHandler+0x270>

      		printf("Fifo 0 full ! \r\n");
 8004d7c:	4b49      	ldr	r3, [pc, #292]	; (8004ea4 <CEC_CAN_IRQHandler+0x384>)
 8004d7e:	0018      	movs	r0, r3
 8004d80:	f003 f834 	bl	8007dec <puts>

      		// Clear fifo 0 full flag
      		CAN->RF0R &= ~CAN_RF0R_FULL0_Msk;
 8004d84:	4b30      	ldr	r3, [pc, #192]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004d86:	68da      	ldr	r2, [r3, #12]
 8004d88:	4b2f      	ldr	r3, [pc, #188]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004d8a:	2108      	movs	r1, #8
 8004d8c:	438a      	bics	r2, r1
 8004d8e:	60da      	str	r2, [r3, #12]
    	}
  	}

  	// Fifo 0 message pending
  	if ((interrupts & CAN_IER_FMPIE0) != 0U) {
 8004d90:	697b      	ldr	r3, [r7, #20]
 8004d92:	2202      	movs	r2, #2
 8004d94:	4013      	ands	r3, r2
 8004d96:	d017      	beq.n	8004dc8 <CEC_CAN_IRQHandler+0x2a8>

    	// Check if message is still pending
    	if ((CAN->RF0R & CAN_RF0R_FMP0) != 0U) {
 8004d98:	4b2b      	ldr	r3, [pc, #172]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004d9a:	68db      	ldr	r3, [r3, #12]
 8004d9c:	2203      	movs	r2, #3
 8004d9e:	4013      	ands	r3, r2
 8004da0:	d012      	beq.n	8004dc8 <CEC_CAN_IRQHandler+0x2a8>

    		printf("Fifo 0 message pending ! \r\n");
 8004da2:	4b41      	ldr	r3, [pc, #260]	; (8004ea8 <CEC_CAN_IRQHandler+0x388>)
 8004da4:	0018      	movs	r0, r3
 8004da6:	f003 f821 	bl	8007dec <puts>
    		receiveDataFrame();
 8004daa:	f7ff f835 	bl	8003e18 <receiveDataFrame>

    		// Ask for informations about the four next passes
    		if (numberOfDataFrameReceived < 24) {
 8004dae:	4b3f      	ldr	r3, [pc, #252]	; (8004eac <CEC_CAN_IRQHandler+0x38c>)
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	2b17      	cmp	r3, #23
 8004db4:	d802      	bhi.n	8004dbc <CEC_CAN_IRQHandler+0x29c>
    			sendRemoteFrame();
 8004db6:	f7fe ff4d 	bl	8003c54 <sendRemoteFrame>
 8004dba:	e005      	b.n	8004dc8 <CEC_CAN_IRQHandler+0x2a8>
    		}

    		// Disable CAN IRQ if we already have the informations about the four next passes
    		else {

    			printf("Disable CAN IRQ because we have the informations about the 4 next passes ! \r\n");
 8004dbc:	4b3c      	ldr	r3, [pc, #240]	; (8004eb0 <CEC_CAN_IRQHandler+0x390>)
 8004dbe:	0018      	movs	r0, r3
 8004dc0:	f003 f814 	bl	8007dec <puts>
    			canDisableIRQ();
 8004dc4:	f7ff fe76 	bl	8004ab4 <canDisableIRQ>
  	}

  	/********** FIFO 1 INTERRUPT **********/

  		// Fifo 1 overrun
  	  	if ((interrupts & CAN_IER_FOVIE1) != 0U){
 8004dc8:	697b      	ldr	r3, [r7, #20]
 8004dca:	2240      	movs	r2, #64	; 0x40
 8004dcc:	4013      	ands	r3, r2
 8004dce:	d013      	beq.n	8004df8 <CEC_CAN_IRQHandler+0x2d8>

  	    	if ((rf1rflags & CAN_RF1R_FOVR1) != 0U) {
 8004dd0:	687b      	ldr	r3, [r7, #4]
 8004dd2:	2210      	movs	r2, #16
 8004dd4:	4013      	ands	r3, r2
 8004dd6:	d00f      	beq.n	8004df8 <CEC_CAN_IRQHandler+0x2d8>

  	      		printf("Fifo 1 overrun ! \r\n");
 8004dd8:	4b36      	ldr	r3, [pc, #216]	; (8004eb4 <CEC_CAN_IRQHandler+0x394>)
 8004dda:	0018      	movs	r0, r3
 8004ddc:	f003 f806 	bl	8007dec <puts>
  	      		printf("Send new remote frame ! \r\n");
 8004de0:	4b1c      	ldr	r3, [pc, #112]	; (8004e54 <CEC_CAN_IRQHandler+0x334>)
 8004de2:	0018      	movs	r0, r3
 8004de4:	f003 f802 	bl	8007dec <puts>
  	      		sendRemoteFrame();
 8004de8:	f7fe ff34 	bl	8003c54 <sendRemoteFrame>

  	      		// Clear fifo 1 overrun flag
  	      		CAN->RF1R &= ~CAN_RF1R_FOVR1_Msk;
 8004dec:	4b16      	ldr	r3, [pc, #88]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004dee:	691a      	ldr	r2, [r3, #16]
 8004df0:	4b15      	ldr	r3, [pc, #84]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004df2:	2110      	movs	r1, #16
 8004df4:	438a      	bics	r2, r1
 8004df6:	611a      	str	r2, [r3, #16]
  	    	}
  	  	}

  	  	// Fifo 1 full
  	  	if ((interrupts & CAN_IER_FFIE1) != 0U)	{
 8004df8:	697b      	ldr	r3, [r7, #20]
 8004dfa:	2220      	movs	r2, #32
 8004dfc:	4013      	ands	r3, r2
 8004dfe:	d00d      	beq.n	8004e1c <CEC_CAN_IRQHandler+0x2fc>

  	    	if ((rf1rflags & CAN_RF1R_FULL1) != 0U)	{
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	2208      	movs	r2, #8
 8004e04:	4013      	ands	r3, r2
 8004e06:	d009      	beq.n	8004e1c <CEC_CAN_IRQHandler+0x2fc>

  	      		printf("Fifo 1 full ! \r\n");
 8004e08:	4b2b      	ldr	r3, [pc, #172]	; (8004eb8 <CEC_CAN_IRQHandler+0x398>)
 8004e0a:	0018      	movs	r0, r3
 8004e0c:	f002 ffee 	bl	8007dec <puts>

  	      		// Clear fifo 1 full flag
  	      		CAN->RF1R &= ~CAN_RF1R_FULL1_Msk;
 8004e10:	4b0d      	ldr	r3, [pc, #52]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004e12:	691a      	ldr	r2, [r3, #16]
 8004e14:	4b0c      	ldr	r3, [pc, #48]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004e16:	2108      	movs	r1, #8
 8004e18:	438a      	bics	r2, r1
 8004e1a:	611a      	str	r2, [r3, #16]
  	    	}
  	  	}

  	  	// Fifo 1 message pending
  	  	if ((interrupts & CAN_IER_FMPIE1) != 0U) {
 8004e1c:	697b      	ldr	r3, [r7, #20]
 8004e1e:	2210      	movs	r2, #16
 8004e20:	4013      	ands	r3, r2
 8004e22:	d053      	beq.n	8004ecc <CEC_CAN_IRQHandler+0x3ac>

  	    	// Check if message is still pending
  	    	if ((CAN->RF1R & CAN_RF1R_FMP1) != 0U) {
 8004e24:	4b08      	ldr	r3, [pc, #32]	; (8004e48 <CEC_CAN_IRQHandler+0x328>)
 8004e26:	691b      	ldr	r3, [r3, #16]
 8004e28:	2203      	movs	r2, #3
 8004e2a:	4013      	ands	r3, r2
 8004e2c:	d04e      	beq.n	8004ecc <CEC_CAN_IRQHandler+0x3ac>

  	    		printf("Fifo 1 message pending ! \r\n");
 8004e2e:	4b23      	ldr	r3, [pc, #140]	; (8004ebc <CEC_CAN_IRQHandler+0x39c>)
 8004e30:	0018      	movs	r0, r3
 8004e32:	f002 ffdb 	bl	8007dec <puts>
  	    		receiveDataFrame();
 8004e36:	f7fe ffef 	bl	8003e18 <receiveDataFrame>

  	    		// Ask for informations about the four next passes
  	    		if (numberOfDataFrameReceived < 24) {
 8004e3a:	4b1c      	ldr	r3, [pc, #112]	; (8004eac <CEC_CAN_IRQHandler+0x38c>)
 8004e3c:	681b      	ldr	r3, [r3, #0]
 8004e3e:	2b17      	cmp	r3, #23
 8004e40:	d83e      	bhi.n	8004ec0 <CEC_CAN_IRQHandler+0x3a0>
  	    		    sendRemoteFrame();
 8004e42:	f7fe ff07 	bl	8003c54 <sendRemoteFrame>
 8004e46:	e041      	b.n	8004ecc <CEC_CAN_IRQHandler+0x3ac>
 8004e48:	40006400 	.word	0x40006400
 8004e4c:	0800c950 	.word	0x0800c950
 8004e50:	0800c978 	.word	0x0800c978
 8004e54:	0800c9b8 	.word	0x0800c9b8
 8004e58:	0800c9d4 	.word	0x0800c9d4
 8004e5c:	0800ca08 	.word	0x0800ca08
 8004e60:	fffffeff 	.word	0xfffffeff
 8004e64:	fffffdff 	.word	0xfffffdff
 8004e68:	fffffbff 	.word	0xfffffbff
 8004e6c:	fffff7ff 	.word	0xfffff7ff
 8004e70:	0800ca30 	.word	0x0800ca30
 8004e74:	0800ca58 	.word	0x0800ca58
 8004e78:	0800ca98 	.word	0x0800ca98
 8004e7c:	0800cacc 	.word	0x0800cacc
 8004e80:	fffeffff 	.word	0xfffeffff
 8004e84:	fffdffff 	.word	0xfffdffff
 8004e88:	fffbffff 	.word	0xfffbffff
 8004e8c:	fff7ffff 	.word	0xfff7ffff
 8004e90:	0800caf4 	.word	0x0800caf4
 8004e94:	0800cb1c 	.word	0x0800cb1c
 8004e98:	0800cb58 	.word	0x0800cb58
 8004e9c:	0800cb8c 	.word	0x0800cb8c
 8004ea0:	0800cbb4 	.word	0x0800cbb4
 8004ea4:	0800cbc8 	.word	0x0800cbc8
 8004ea8:	0800cbd8 	.word	0x0800cbd8
 8004eac:	2000027c 	.word	0x2000027c
 8004eb0:	0800cbf4 	.word	0x0800cbf4
 8004eb4:	0800cc44 	.word	0x0800cc44
 8004eb8:	0800cc58 	.word	0x0800cc58
 8004ebc:	0800cc68 	.word	0x0800cc68
  	    		}

  	    		// Disable CAN IRQ if we already have the informations about the four next passes
  	    		else {

  	    			printf("Disable CAN IRQ because we have the informations about the 4 next passes ! \r\n");
 8004ec0:	4b5d      	ldr	r3, [pc, #372]	; (8005038 <CEC_CAN_IRQHandler+0x518>)
 8004ec2:	0018      	movs	r0, r3
 8004ec4:	f002 ff92 	bl	8007dec <puts>
  	    			canDisableIRQ();
 8004ec8:	f7ff fdf4 	bl	8004ab4 <canDisableIRQ>
  	  	}

  	/********** STATUS CHANGE ERROR INTERRUPT **********/

	// Sleep aknowledge
	if ((interrupts & CAN_IER_SLKIE) != 0U) {
 8004ecc:	697a      	ldr	r2, [r7, #20]
 8004ece:	2380      	movs	r3, #128	; 0x80
 8004ed0:	029b      	lsls	r3, r3, #10
 8004ed2:	4013      	ands	r3, r2
 8004ed4:	d00d      	beq.n	8004ef2 <CEC_CAN_IRQHandler+0x3d2>

    	if ((msrflags & CAN_MSR_SLAKI) != 0U) {
 8004ed6:	693b      	ldr	r3, [r7, #16]
 8004ed8:	2210      	movs	r2, #16
 8004eda:	4013      	ands	r3, r2
 8004edc:	d009      	beq.n	8004ef2 <CEC_CAN_IRQHandler+0x3d2>

    		printf("Sleep aknowledge for the can ! \r\n");
 8004ede:	4b57      	ldr	r3, [pc, #348]	; (800503c <CEC_CAN_IRQHandler+0x51c>)
 8004ee0:	0018      	movs	r0, r3
 8004ee2:	f002 ff83 	bl	8007dec <puts>

    		// Clear Sleep interrupt Flag
    		CAN->MSR &= ~CAN_MSR_SLAKI_Msk;
 8004ee6:	4b56      	ldr	r3, [pc, #344]	; (8005040 <CEC_CAN_IRQHandler+0x520>)
 8004ee8:	685a      	ldr	r2, [r3, #4]
 8004eea:	4b55      	ldr	r3, [pc, #340]	; (8005040 <CEC_CAN_IRQHandler+0x520>)
 8004eec:	2110      	movs	r1, #16
 8004eee:	438a      	bics	r2, r1
 8004ef0:	605a      	str	r2, [r3, #4]
    	}
  	}

	// WakeUp aknowledge
  	if ((interrupts & CAN_IER_WKUIE) != 0U){
 8004ef2:	697a      	ldr	r2, [r7, #20]
 8004ef4:	2380      	movs	r3, #128	; 0x80
 8004ef6:	025b      	lsls	r3, r3, #9
 8004ef8:	4013      	ands	r3, r2
 8004efa:	d00d      	beq.n	8004f18 <CEC_CAN_IRQHandler+0x3f8>

    	if ((msrflags & CAN_MSR_WKUI) != 0U){
 8004efc:	693b      	ldr	r3, [r7, #16]
 8004efe:	2208      	movs	r2, #8
 8004f00:	4013      	ands	r3, r2
 8004f02:	d009      	beq.n	8004f18 <CEC_CAN_IRQHandler+0x3f8>


      	printf("Wakeup aknowledge for the can ! \r\n");
 8004f04:	4b4f      	ldr	r3, [pc, #316]	; (8005044 <CEC_CAN_IRQHandler+0x524>)
 8004f06:	0018      	movs	r0, r3
 8004f08:	f002 ff70 	bl	8007dec <puts>

      	// Clear WakeUp Flag
     	CAN->MSR &= ~CAN_MSR_WKUI_Msk;
 8004f0c:	4b4c      	ldr	r3, [pc, #304]	; (8005040 <CEC_CAN_IRQHandler+0x520>)
 8004f0e:	685a      	ldr	r2, [r3, #4]
 8004f10:	4b4b      	ldr	r3, [pc, #300]	; (8005040 <CEC_CAN_IRQHandler+0x520>)
 8004f12:	2108      	movs	r1, #8
 8004f14:	438a      	bics	r2, r1
 8004f16:	605a      	str	r2, [r3, #4]

    	}
  	}

  	// Error
	if ((interrupts & CAN_IER_ERRIE) != 0U){
 8004f18:	697a      	ldr	r2, [r7, #20]
 8004f1a:	2380      	movs	r3, #128	; 0x80
 8004f1c:	021b      	lsls	r3, r3, #8
 8004f1e:	4013      	ands	r3, r2
 8004f20:	d100      	bne.n	8004f24 <CEC_CAN_IRQHandler+0x404>
 8004f22:	e085      	b.n	8005030 <CEC_CAN_IRQHandler+0x510>

    	if ((msrflags & CAN_MSR_ERRI) != 0U){
 8004f24:	693b      	ldr	r3, [r7, #16]
 8004f26:	2204      	movs	r2, #4
 8004f28:	4013      	ands	r3, r2
 8004f2a:	d100      	bne.n	8004f2e <CEC_CAN_IRQHandler+0x40e>
 8004f2c:	e07a      	b.n	8005024 <CEC_CAN_IRQHandler+0x504>

      		// Error Warning Flag
      		if (((interrupts & CAN_IER_EWGIE) != 0U) && ((esrflags & CAN_ESR_EWGF) != 0U)){
 8004f2e:	697a      	ldr	r2, [r7, #20]
 8004f30:	2380      	movs	r3, #128	; 0x80
 8004f32:	005b      	lsls	r3, r3, #1
 8004f34:	4013      	ands	r3, r2
 8004f36:	d007      	beq.n	8004f48 <CEC_CAN_IRQHandler+0x428>
 8004f38:	683b      	ldr	r3, [r7, #0]
 8004f3a:	2201      	movs	r2, #1
 8004f3c:	4013      	ands	r3, r2
 8004f3e:	d003      	beq.n	8004f48 <CEC_CAN_IRQHandler+0x428>

        		printf("Error warning flag ! \r\n");
 8004f40:	4b41      	ldr	r3, [pc, #260]	; (8005048 <CEC_CAN_IRQHandler+0x528>)
 8004f42:	0018      	movs	r0, r3
 8004f44:	f002 ff52 	bl	8007dec <puts>

      		}

      		// Error Passive Flag
      		if (((CAN_IER_EPVIE) != 0U) && ((esrflags & CAN_ESR_EPVF) != 0U)) {
 8004f48:	683b      	ldr	r3, [r7, #0]
 8004f4a:	2202      	movs	r2, #2
 8004f4c:	4013      	ands	r3, r2
 8004f4e:	d003      	beq.n	8004f58 <CEC_CAN_IRQHandler+0x438>


        		printf("Error passive flag ! \r\n");
 8004f50:	4b3e      	ldr	r3, [pc, #248]	; (800504c <CEC_CAN_IRQHandler+0x52c>)
 8004f52:	0018      	movs	r0, r3
 8004f54:	f002 ff4a 	bl	8007dec <puts>

      		}

      		// Bus-off Flag
      		if (((interrupts & CAN_IER_BOFIE) != 0U) && ((esrflags & CAN_ESR_BOFF) != 0U)) {
 8004f58:	697a      	ldr	r2, [r7, #20]
 8004f5a:	2380      	movs	r3, #128	; 0x80
 8004f5c:	00db      	lsls	r3, r3, #3
 8004f5e:	4013      	ands	r3, r2
 8004f60:	d007      	beq.n	8004f72 <CEC_CAN_IRQHandler+0x452>
 8004f62:	683b      	ldr	r3, [r7, #0]
 8004f64:	2204      	movs	r2, #4
 8004f66:	4013      	ands	r3, r2
 8004f68:	d003      	beq.n	8004f72 <CEC_CAN_IRQHandler+0x452>

        		printf("Error bus-off flag ! \r\n");
 8004f6a:	4b39      	ldr	r3, [pc, #228]	; (8005050 <CEC_CAN_IRQHandler+0x530>)
 8004f6c:	0018      	movs	r0, r3
 8004f6e:	f002 ff3d 	bl	8007dec <puts>

      		}

      		// Error Code Flag
      		if (((interrupts & CAN_IER_LECIE) != 0U) && ((esrflags & CAN_ESR_LEC) != 0U)) {
 8004f72:	697a      	ldr	r2, [r7, #20]
 8004f74:	2380      	movs	r3, #128	; 0x80
 8004f76:	011b      	lsls	r3, r3, #4
 8004f78:	4013      	ands	r3, r2
 8004f7a:	d053      	beq.n	8005024 <CEC_CAN_IRQHandler+0x504>
 8004f7c:	683b      	ldr	r3, [r7, #0]
 8004f7e:	2270      	movs	r2, #112	; 0x70
 8004f80:	4013      	ands	r3, r2
 8004f82:	d04f      	beq.n	8005024 <CEC_CAN_IRQHandler+0x504>

      			sendRemoteFrame();
 8004f84:	f7fe fe66 	bl	8003c54 <sendRemoteFrame>

        		switch (esrflags & CAN_ESR_LEC) {
 8004f88:	683b      	ldr	r3, [r7, #0]
 8004f8a:	2270      	movs	r2, #112	; 0x70
 8004f8c:	4013      	ands	r3, r2
 8004f8e:	2b30      	cmp	r3, #48	; 0x30
 8004f90:	d01e      	beq.n	8004fd0 <CEC_CAN_IRQHandler+0x4b0>
 8004f92:	d804      	bhi.n	8004f9e <CEC_CAN_IRQHandler+0x47e>
 8004f94:	2b10      	cmp	r3, #16
 8004f96:	d009      	beq.n	8004fac <CEC_CAN_IRQHandler+0x48c>
 8004f98:	2b20      	cmp	r3, #32
 8004f9a:	d010      	beq.n	8004fbe <CEC_CAN_IRQHandler+0x49e>
            		printf("CRC error ! \r\n");
          			printf("Send new remote frame ! \r\n");
           			break;

          			default:
            		break;
 8004f9c:	e03c      	b.n	8005018 <CEC_CAN_IRQHandler+0x4f8>
        		switch (esrflags & CAN_ESR_LEC) {
 8004f9e:	2b50      	cmp	r3, #80	; 0x50
 8004fa0:	d028      	beq.n	8004ff4 <CEC_CAN_IRQHandler+0x4d4>
 8004fa2:	2b60      	cmp	r3, #96	; 0x60
 8004fa4:	d02f      	beq.n	8005006 <CEC_CAN_IRQHandler+0x4e6>
 8004fa6:	2b40      	cmp	r3, #64	; 0x40
 8004fa8:	d01b      	beq.n	8004fe2 <CEC_CAN_IRQHandler+0x4c2>
            		break;
 8004faa:	e035      	b.n	8005018 <CEC_CAN_IRQHandler+0x4f8>
            		printf("Stuff error ! \r\n");
 8004fac:	4b29      	ldr	r3, [pc, #164]	; (8005054 <CEC_CAN_IRQHandler+0x534>)
 8004fae:	0018      	movs	r0, r3
 8004fb0:	f002 ff1c 	bl	8007dec <puts>
          			printf("Send new remote frame ! \r\n");
 8004fb4:	4b28      	ldr	r3, [pc, #160]	; (8005058 <CEC_CAN_IRQHandler+0x538>)
 8004fb6:	0018      	movs	r0, r3
 8004fb8:	f002 ff18 	bl	8007dec <puts>
            		break;
 8004fbc:	e02c      	b.n	8005018 <CEC_CAN_IRQHandler+0x4f8>
            		printf("Form error ! \r\n");
 8004fbe:	4b27      	ldr	r3, [pc, #156]	; (800505c <CEC_CAN_IRQHandler+0x53c>)
 8004fc0:	0018      	movs	r0, r3
 8004fc2:	f002 ff13 	bl	8007dec <puts>
          			printf("Send new remote frame ! \r\n");
 8004fc6:	4b24      	ldr	r3, [pc, #144]	; (8005058 <CEC_CAN_IRQHandler+0x538>)
 8004fc8:	0018      	movs	r0, r3
 8004fca:	f002 ff0f 	bl	8007dec <puts>
            		break;
 8004fce:	e023      	b.n	8005018 <CEC_CAN_IRQHandler+0x4f8>
            		printf("Acknowledgment error ! \r\n");
 8004fd0:	4b23      	ldr	r3, [pc, #140]	; (8005060 <CEC_CAN_IRQHandler+0x540>)
 8004fd2:	0018      	movs	r0, r3
 8004fd4:	f002 ff0a 	bl	8007dec <puts>
          			printf("Send new remote frame ! \r\n");
 8004fd8:	4b1f      	ldr	r3, [pc, #124]	; (8005058 <CEC_CAN_IRQHandler+0x538>)
 8004fda:	0018      	movs	r0, r3
 8004fdc:	f002 ff06 	bl	8007dec <puts>
            		break;
 8004fe0:	e01a      	b.n	8005018 <CEC_CAN_IRQHandler+0x4f8>
            		printf("Bit recessive error ! \r\n");
 8004fe2:	4b20      	ldr	r3, [pc, #128]	; (8005064 <CEC_CAN_IRQHandler+0x544>)
 8004fe4:	0018      	movs	r0, r3
 8004fe6:	f002 ff01 	bl	8007dec <puts>
          			printf("Send new remote frame ! \r\n");
 8004fea:	4b1b      	ldr	r3, [pc, #108]	; (8005058 <CEC_CAN_IRQHandler+0x538>)
 8004fec:	0018      	movs	r0, r3
 8004fee:	f002 fefd 	bl	8007dec <puts>
            		break;
 8004ff2:	e011      	b.n	8005018 <CEC_CAN_IRQHandler+0x4f8>
            		printf("Bit dominant error ! \r\n");
 8004ff4:	4b1c      	ldr	r3, [pc, #112]	; (8005068 <CEC_CAN_IRQHandler+0x548>)
 8004ff6:	0018      	movs	r0, r3
 8004ff8:	f002 fef8 	bl	8007dec <puts>
          			printf("Send new remote frame ! \r\n");
 8004ffc:	4b16      	ldr	r3, [pc, #88]	; (8005058 <CEC_CAN_IRQHandler+0x538>)
 8004ffe:	0018      	movs	r0, r3
 8005000:	f002 fef4 	bl	8007dec <puts>
            		break;
 8005004:	e008      	b.n	8005018 <CEC_CAN_IRQHandler+0x4f8>
            		printf("CRC error ! \r\n");
 8005006:	4b19      	ldr	r3, [pc, #100]	; (800506c <CEC_CAN_IRQHandler+0x54c>)
 8005008:	0018      	movs	r0, r3
 800500a:	f002 feef 	bl	8007dec <puts>
          			printf("Send new remote frame ! \r\n");
 800500e:	4b12      	ldr	r3, [pc, #72]	; (8005058 <CEC_CAN_IRQHandler+0x538>)
 8005010:	0018      	movs	r0, r3
 8005012:	f002 feeb 	bl	8007dec <puts>
           			break;
 8005016:	46c0      	nop			; (mov r8, r8)
        		}


        		// Clear Last error code Flag
        		CAN->ESR &= ~CAN_ESR_LEC_Msk;
 8005018:	4b09      	ldr	r3, [pc, #36]	; (8005040 <CEC_CAN_IRQHandler+0x520>)
 800501a:	699a      	ldr	r2, [r3, #24]
 800501c:	4b08      	ldr	r3, [pc, #32]	; (8005040 <CEC_CAN_IRQHandler+0x520>)
 800501e:	2170      	movs	r1, #112	; 0x70
 8005020:	438a      	bics	r2, r1
 8005022:	619a      	str	r2, [r3, #24]
      		}
    	}

    	// Clear ERRI Flag
    	CAN->MSR &= ~CAN_MSR_ERRI_Msk;
 8005024:	4b06      	ldr	r3, [pc, #24]	; (8005040 <CEC_CAN_IRQHandler+0x520>)
 8005026:	685a      	ldr	r2, [r3, #4]
 8005028:	4b05      	ldr	r3, [pc, #20]	; (8005040 <CEC_CAN_IRQHandler+0x520>)
 800502a:	2104      	movs	r1, #4
 800502c:	438a      	bics	r2, r1
 800502e:	605a      	str	r2, [r3, #4]
  	}

}
 8005030:	46c0      	nop			; (mov r8, r8)
 8005032:	46bd      	mov	sp, r7
 8005034:	b006      	add	sp, #24
 8005036:	bd80      	pop	{r7, pc}
 8005038:	0800cbf4 	.word	0x0800cbf4
 800503c:	0800cc84 	.word	0x0800cc84
 8005040:	40006400 	.word	0x40006400
 8005044:	0800cca8 	.word	0x0800cca8
 8005048:	0800cccc 	.word	0x0800cccc
 800504c:	0800cce4 	.word	0x0800cce4
 8005050:	0800ccfc 	.word	0x0800ccfc
 8005054:	0800cd14 	.word	0x0800cd14
 8005058:	0800c9b8 	.word	0x0800c9b8
 800505c:	0800cd24 	.word	0x0800cd24
 8005060:	0800cd34 	.word	0x0800cd34
 8005064:	0800cd50 	.word	0x0800cd50
 8005068:	0800cd68 	.word	0x0800cd68
 800506c:	0800cd80 	.word	0x0800cd80

08005070 <dacInit>:
/*                                                                            */
/*                   	Dac (Digital to analog converter)                     */
/*                                                                            */
/******************************************************************************/

void dacInit(){
 8005070:	b580      	push	{r7, lr}
 8005072:	af00      	add	r7, sp, #0

	// Enable GPIOA clock
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8005074:	4b1f      	ldr	r3, [pc, #124]	; (80050f4 <dacInit+0x84>)
 8005076:	695a      	ldr	r2, [r3, #20]
 8005078:	4b1e      	ldr	r3, [pc, #120]	; (80050f4 <dacInit+0x84>)
 800507a:	2180      	movs	r1, #128	; 0x80
 800507c:	0289      	lsls	r1, r1, #10
 800507e:	430a      	orrs	r2, r1
 8005080:	615a      	str	r2, [r3, #20]

	// Configure pin PA4 as analog
	GPIOA->MODER &= ~GPIO_MODER_MODER4_Msk;
 8005082:	2390      	movs	r3, #144	; 0x90
 8005084:	05db      	lsls	r3, r3, #23
 8005086:	681a      	ldr	r2, [r3, #0]
 8005088:	2390      	movs	r3, #144	; 0x90
 800508a:	05db      	lsls	r3, r3, #23
 800508c:	491a      	ldr	r1, [pc, #104]	; (80050f8 <dacInit+0x88>)
 800508e:	400a      	ands	r2, r1
 8005090:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (0x03 <<GPIO_MODER_MODER4_Pos);
 8005092:	2390      	movs	r3, #144	; 0x90
 8005094:	05db      	lsls	r3, r3, #23
 8005096:	681a      	ldr	r2, [r3, #0]
 8005098:	2390      	movs	r3, #144	; 0x90
 800509a:	05db      	lsls	r3, r3, #23
 800509c:	21c0      	movs	r1, #192	; 0xc0
 800509e:	0089      	lsls	r1, r1, #2
 80050a0:	430a      	orrs	r2, r1
 80050a2:	601a      	str	r2, [r3, #0]

	// Configure pin PA5 as analog
	// PA5 is connected to LED2. In order to get the correct value on PA5 we must unsolder SB21 bridge
	GPIOA->MODER &= ~GPIO_MODER_MODER5_Msk;
 80050a4:	2390      	movs	r3, #144	; 0x90
 80050a6:	05db      	lsls	r3, r3, #23
 80050a8:	681a      	ldr	r2, [r3, #0]
 80050aa:	2390      	movs	r3, #144	; 0x90
 80050ac:	05db      	lsls	r3, r3, #23
 80050ae:	4913      	ldr	r1, [pc, #76]	; (80050fc <dacInit+0x8c>)
 80050b0:	400a      	ands	r2, r1
 80050b2:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (0x03 <<GPIO_MODER_MODER5_Pos);
 80050b4:	2390      	movs	r3, #144	; 0x90
 80050b6:	05db      	lsls	r3, r3, #23
 80050b8:	681a      	ldr	r2, [r3, #0]
 80050ba:	2390      	movs	r3, #144	; 0x90
 80050bc:	05db      	lsls	r3, r3, #23
 80050be:	21c0      	movs	r1, #192	; 0xc0
 80050c0:	0109      	lsls	r1, r1, #4
 80050c2:	430a      	orrs	r2, r1
 80050c4:	601a      	str	r2, [r3, #0]

	// Enable DAC clock
	RCC->APB1ENR |= RCC_APB1ENR_DACEN;
 80050c6:	4b0b      	ldr	r3, [pc, #44]	; (80050f4 <dacInit+0x84>)
 80050c8:	69da      	ldr	r2, [r3, #28]
 80050ca:	4b0a      	ldr	r3, [pc, #40]	; (80050f4 <dacInit+0x84>)
 80050cc:	2180      	movs	r1, #128	; 0x80
 80050ce:	0589      	lsls	r1, r1, #22
 80050d0:	430a      	orrs	r2, r1
 80050d2:	61da      	str	r2, [r3, #28]

	// Reset DAC configuration
	DAC->CR = 0x00000000;
 80050d4:	4b0a      	ldr	r3, [pc, #40]	; (8005100 <dacInit+0x90>)
 80050d6:	2200      	movs	r2, #0
 80050d8:	601a      	str	r2, [r3, #0]

	// Reset holding data register
	DAC->DHR12R1 = 0x00000000;
 80050da:	4b09      	ldr	r3, [pc, #36]	; (8005100 <dacInit+0x90>)
 80050dc:	2200      	movs	r2, #0
 80050de:	609a      	str	r2, [r3, #8]
	DAC->DHR12R2 = 0x00000000;
 80050e0:	4b07      	ldr	r3, [pc, #28]	; (8005100 <dacInit+0x90>)
 80050e2:	2200      	movs	r2, #0
 80050e4:	615a      	str	r2, [r3, #20]

	printf("DAC CONFIGURATION OK\n");
 80050e6:	4b07      	ldr	r3, [pc, #28]	; (8005104 <dacInit+0x94>)
 80050e8:	0018      	movs	r0, r3
 80050ea:	f002 fe7f 	bl	8007dec <puts>
}
 80050ee:	46c0      	nop			; (mov r8, r8)
 80050f0:	46bd      	mov	sp, r7
 80050f2:	bd80      	pop	{r7, pc}
 80050f4:	40021000 	.word	0x40021000
 80050f8:	fffffcff 	.word	0xfffffcff
 80050fc:	fffff3ff 	.word	0xfffff3ff
 8005100:	40007400 	.word	0x40007400
 8005104:	0800cd90 	.word	0x0800cd90

08005108 <dacStart>:

void dacStart(void){
 8005108:	b580      	push	{r7, lr}
 800510a:	af00      	add	r7, sp, #0

	// Reset holding data register
	DAC->DHR12R1 = 0x00000000;
 800510c:	4b09      	ldr	r3, [pc, #36]	; (8005134 <dacStart+0x2c>)
 800510e:	2200      	movs	r2, #0
 8005110:	609a      	str	r2, [r3, #8]
	DAC->DHR12R2 = 0x00000000;
 8005112:	4b08      	ldr	r3, [pc, #32]	; (8005134 <dacStart+0x2c>)
 8005114:	2200      	movs	r2, #0
 8005116:	615a      	str	r2, [r3, #20]

	// Enable Channel 1 and 2
	DAC->CR |= DAC_CR_EN2 | DAC_CR_EN1;
 8005118:	4b06      	ldr	r3, [pc, #24]	; (8005134 <dacStart+0x2c>)
 800511a:	681a      	ldr	r2, [r3, #0]
 800511c:	4b05      	ldr	r3, [pc, #20]	; (8005134 <dacStart+0x2c>)
 800511e:	4906      	ldr	r1, [pc, #24]	; (8005138 <dacStart+0x30>)
 8005120:	430a      	orrs	r2, r1
 8005122:	601a      	str	r2, [r3, #0]

	printf("DAC START\n");
 8005124:	4b05      	ldr	r3, [pc, #20]	; (800513c <dacStart+0x34>)
 8005126:	0018      	movs	r0, r3
 8005128:	f002 fe60 	bl	8007dec <puts>
}
 800512c:	46c0      	nop			; (mov r8, r8)
 800512e:	46bd      	mov	sp, r7
 8005130:	bd80      	pop	{r7, pc}
 8005132:	46c0      	nop			; (mov r8, r8)
 8005134:	40007400 	.word	0x40007400
 8005138:	00010001 	.word	0x00010001
 800513c:	0800cda8 	.word	0x0800cda8

08005140 <dacStop>:

void dacStop(void){
 8005140:	b580      	push	{r7, lr}
 8005142:	af00      	add	r7, sp, #0

	// Disable dac Channel 1 and 2
	DAC->CR &= ~DAC_CR_EN2;
 8005144:	4b09      	ldr	r3, [pc, #36]	; (800516c <dacStop+0x2c>)
 8005146:	681a      	ldr	r2, [r3, #0]
 8005148:	4b08      	ldr	r3, [pc, #32]	; (800516c <dacStop+0x2c>)
 800514a:	4909      	ldr	r1, [pc, #36]	; (8005170 <dacStop+0x30>)
 800514c:	400a      	ands	r2, r1
 800514e:	601a      	str	r2, [r3, #0]
	DAC->CR &= ~DAC_CR_EN1;
 8005150:	4b06      	ldr	r3, [pc, #24]	; (800516c <dacStop+0x2c>)
 8005152:	681a      	ldr	r2, [r3, #0]
 8005154:	4b05      	ldr	r3, [pc, #20]	; (800516c <dacStop+0x2c>)
 8005156:	2101      	movs	r1, #1
 8005158:	438a      	bics	r2, r1
 800515a:	601a      	str	r2, [r3, #0]

	printf("DAC STOP\n");
 800515c:	4b05      	ldr	r3, [pc, #20]	; (8005174 <dacStop+0x34>)
 800515e:	0018      	movs	r0, r3
 8005160:	f002 fe44 	bl	8007dec <puts>
}
 8005164:	46c0      	nop			; (mov r8, r8)
 8005166:	46bd      	mov	sp, r7
 8005168:	bd80      	pop	{r7, pc}
 800516a:	46c0      	nop			; (mov r8, r8)
 800516c:	40007400 	.word	0x40007400
 8005170:	fffeffff 	.word	0xfffeffff
 8005174:	0800cdb4 	.word	0x0800cdb4

08005178 <dacUpdate>:

void dacUpdate(){
 8005178:	b5b0      	push	{r4, r5, r7, lr}
 800517a:	b082      	sub	sp, #8
 800517c:	af00      	add	r7, sp, #0

	float dacCurrentSpeedAz = ( ( (float) (passes[0].tracking.currentSpeedAz) ) * 4095.0 ) / ( (float) (passes[0].tracking.maximumMotorSpeedAz) );
 800517e:	4b40      	ldr	r3, [pc, #256]	; (8005280 <dacUpdate+0x108>)
 8005180:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005182:	1c18      	adds	r0, r3, #0
 8005184:	f7fd feda 	bl	8002f3c <__aeabi_f2d>
 8005188:	2200      	movs	r2, #0
 800518a:	4b3e      	ldr	r3, [pc, #248]	; (8005284 <dacUpdate+0x10c>)
 800518c:	f7fd f85e 	bl	800224c <__aeabi_dmul>
 8005190:	0003      	movs	r3, r0
 8005192:	000c      	movs	r4, r1
 8005194:	0025      	movs	r5, r4
 8005196:	001c      	movs	r4, r3
 8005198:	4b39      	ldr	r3, [pc, #228]	; (8005280 <dacUpdate+0x108>)
 800519a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800519c:	1c18      	adds	r0, r3, #0
 800519e:	f7fd fecd 	bl	8002f3c <__aeabi_f2d>
 80051a2:	0002      	movs	r2, r0
 80051a4:	000b      	movs	r3, r1
 80051a6:	0020      	movs	r0, r4
 80051a8:	0029      	movs	r1, r5
 80051aa:	f7fc fc45 	bl	8001a38 <__aeabi_ddiv>
 80051ae:	0003      	movs	r3, r0
 80051b0:	000c      	movs	r4, r1
 80051b2:	0018      	movs	r0, r3
 80051b4:	0021      	movs	r1, r4
 80051b6:	f7fd ff13 	bl	8002fe0 <__aeabi_d2f>
 80051ba:	1c03      	adds	r3, r0, #0
 80051bc:	607b      	str	r3, [r7, #4]
	//printf("dacCurrentSpeedAz : %.5f\n",dacCurrentSpeedAz);

	float dacCurrentSpeedEl = ( ( (float) (passes[0].tracking.currentSpeedEl) ) * 4095.0 ) / ( (float) (passes[0].tracking.maximumMotorSpeedEl) );
 80051be:	4b30      	ldr	r3, [pc, #192]	; (8005280 <dacUpdate+0x108>)
 80051c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80051c2:	1c18      	adds	r0, r3, #0
 80051c4:	f7fd feba 	bl	8002f3c <__aeabi_f2d>
 80051c8:	2200      	movs	r2, #0
 80051ca:	4b2e      	ldr	r3, [pc, #184]	; (8005284 <dacUpdate+0x10c>)
 80051cc:	f7fd f83e 	bl	800224c <__aeabi_dmul>
 80051d0:	0003      	movs	r3, r0
 80051d2:	000c      	movs	r4, r1
 80051d4:	0025      	movs	r5, r4
 80051d6:	001c      	movs	r4, r3
 80051d8:	4b29      	ldr	r3, [pc, #164]	; (8005280 <dacUpdate+0x108>)
 80051da:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051dc:	1c18      	adds	r0, r3, #0
 80051de:	f7fd fead 	bl	8002f3c <__aeabi_f2d>
 80051e2:	0002      	movs	r2, r0
 80051e4:	000b      	movs	r3, r1
 80051e6:	0020      	movs	r0, r4
 80051e8:	0029      	movs	r1, r5
 80051ea:	f7fc fc25 	bl	8001a38 <__aeabi_ddiv>
 80051ee:	0003      	movs	r3, r0
 80051f0:	000c      	movs	r4, r1
 80051f2:	0018      	movs	r0, r3
 80051f4:	0021      	movs	r1, r4
 80051f6:	f7fd fef3 	bl	8002fe0 <__aeabi_d2f>
 80051fa:	1c03      	adds	r3, r0, #0
 80051fc:	603b      	str	r3, [r7, #0]
	//printf("dacCurrentSpeedEl : %.5f\n",dacCurrentSpeedEl);

	DAC->DHR12R1 = ( ( (uint16_t) ( roundf( fabsf(dacCurrentSpeedAz) ) ) ) <= 4095) ? ( (uint16_t) ( roundf(dacCurrentSpeedAz) ) ) : 4095;
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	005b      	lsls	r3, r3, #1
 8005202:	085b      	lsrs	r3, r3, #1
 8005204:	1c18      	adds	r0, r3, #0
 8005206:	f006 ff6d 	bl	800c0e4 <roundf>
 800520a:	1c03      	adds	r3, r0, #0
 800520c:	1c18      	adds	r0, r3, #0
 800520e:	f7fb f9dd 	bl	80005cc <__aeabi_f2uiz>
 8005212:	0003      	movs	r3, r0
 8005214:	b29b      	uxth	r3, r3
 8005216:	4a1c      	ldr	r2, [pc, #112]	; (8005288 <dacUpdate+0x110>)
 8005218:	4293      	cmp	r3, r2
 800521a:	d80b      	bhi.n	8005234 <dacUpdate+0xbc>
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	1c18      	adds	r0, r3, #0
 8005220:	f006 ff60 	bl	800c0e4 <roundf>
 8005224:	1c03      	adds	r3, r0, #0
 8005226:	1c18      	adds	r0, r3, #0
 8005228:	f7fb f9d0 	bl	80005cc <__aeabi_f2uiz>
 800522c:	0003      	movs	r3, r0
 800522e:	b29b      	uxth	r3, r3
 8005230:	001a      	movs	r2, r3
 8005232:	e000      	b.n	8005236 <dacUpdate+0xbe>
 8005234:	4a14      	ldr	r2, [pc, #80]	; (8005288 <dacUpdate+0x110>)
 8005236:	4b15      	ldr	r3, [pc, #84]	; (800528c <dacUpdate+0x114>)
 8005238:	609a      	str	r2, [r3, #8]
	//printf("DAC->DHR12R1 : %ld\n",DAC->DHR12R1);

	DAC->DHR12R2 = ( ( (uint16_t) ( roundf( fabsf(dacCurrentSpeedEl) ) ) ) <= 4095) ? ( (uint16_t) ( roundf(dacCurrentSpeedEl) ) ) : 4095;
 800523a:	683b      	ldr	r3, [r7, #0]
 800523c:	005b      	lsls	r3, r3, #1
 800523e:	085b      	lsrs	r3, r3, #1
 8005240:	1c18      	adds	r0, r3, #0
 8005242:	f006 ff4f 	bl	800c0e4 <roundf>
 8005246:	1c03      	adds	r3, r0, #0
 8005248:	1c18      	adds	r0, r3, #0
 800524a:	f7fb f9bf 	bl	80005cc <__aeabi_f2uiz>
 800524e:	0003      	movs	r3, r0
 8005250:	b29b      	uxth	r3, r3
 8005252:	4a0d      	ldr	r2, [pc, #52]	; (8005288 <dacUpdate+0x110>)
 8005254:	4293      	cmp	r3, r2
 8005256:	d80b      	bhi.n	8005270 <dacUpdate+0xf8>
 8005258:	683b      	ldr	r3, [r7, #0]
 800525a:	1c18      	adds	r0, r3, #0
 800525c:	f006 ff42 	bl	800c0e4 <roundf>
 8005260:	1c03      	adds	r3, r0, #0
 8005262:	1c18      	adds	r0, r3, #0
 8005264:	f7fb f9b2 	bl	80005cc <__aeabi_f2uiz>
 8005268:	0003      	movs	r3, r0
 800526a:	b29b      	uxth	r3, r3
 800526c:	001a      	movs	r2, r3
 800526e:	e000      	b.n	8005272 <dacUpdate+0xfa>
 8005270:	4a05      	ldr	r2, [pc, #20]	; (8005288 <dacUpdate+0x110>)
 8005272:	4b06      	ldr	r3, [pc, #24]	; (800528c <dacUpdate+0x114>)
 8005274:	615a      	str	r2, [r3, #20]
	//printf("DAC->DHR12R2 : %ld\n",DAC->DHR12R2);
}
 8005276:	46c0      	nop			; (mov r8, r8)
 8005278:	46bd      	mov	sp, r7
 800527a:	b002      	add	sp, #8
 800527c:	bdb0      	pop	{r4, r5, r7, pc}
 800527e:	46c0      	nop			; (mov r8, r8)
 8005280:	2000028c 	.word	0x2000028c
 8005284:	40affe00 	.word	0x40affe00
 8005288:	00000fff 	.word	0x00000fff
 800528c:	40007400 	.word	0x40007400

08005290 <pwmInit>:
/*                                                                            */
/*                   Pulse width modulation (PWM)                             */
/*                                                                            */
/******************************************************************************/

void pwmInit(){
 8005290:	b580      	push	{r7, lr}
 8005292:	af00      	add	r7, sp, #0

	// Enable GPIOA clock
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8005294:	4b5a      	ldr	r3, [pc, #360]	; (8005400 <pwmInit+0x170>)
 8005296:	695a      	ldr	r2, [r3, #20]
 8005298:	4b59      	ldr	r3, [pc, #356]	; (8005400 <pwmInit+0x170>)
 800529a:	2180      	movs	r1, #128	; 0x80
 800529c:	0289      	lsls	r1, r1, #10
 800529e:	430a      	orrs	r2, r1
 80052a0:	615a      	str	r2, [r3, #20]

	// Configure PA0 and PA1 AZ direction pin as output pin
	GPIOA->MODER &= ~(GPIO_MODER_MODER0_Msk | GPIO_MODER_MODER1_Msk);
 80052a2:	2390      	movs	r3, #144	; 0x90
 80052a4:	05db      	lsls	r3, r3, #23
 80052a6:	681a      	ldr	r2, [r3, #0]
 80052a8:	2390      	movs	r3, #144	; 0x90
 80052aa:	05db      	lsls	r3, r3, #23
 80052ac:	210f      	movs	r1, #15
 80052ae:	438a      	bics	r2, r1
 80052b0:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |=  (0x01 << GPIO_MODER_MODER0_Pos) | (0x01 << GPIO_MODER_MODER1_Pos);
 80052b2:	2390      	movs	r3, #144	; 0x90
 80052b4:	05db      	lsls	r3, r3, #23
 80052b6:	681a      	ldr	r2, [r3, #0]
 80052b8:	2390      	movs	r3, #144	; 0x90
 80052ba:	05db      	lsls	r3, r3, #23
 80052bc:	2105      	movs	r1, #5
 80052be:	430a      	orrs	r2, r1
 80052c0:	601a      	str	r2, [r3, #0]

	// Configure PA6 and PA7 EL direction pin as output pin
	GPIOA->MODER &= ~(GPIO_MODER_MODER6_Msk | GPIO_MODER_MODER7_Msk);
 80052c2:	2390      	movs	r3, #144	; 0x90
 80052c4:	05db      	lsls	r3, r3, #23
 80052c6:	681a      	ldr	r2, [r3, #0]
 80052c8:	2390      	movs	r3, #144	; 0x90
 80052ca:	05db      	lsls	r3, r3, #23
 80052cc:	494d      	ldr	r1, [pc, #308]	; (8005404 <pwmInit+0x174>)
 80052ce:	400a      	ands	r2, r1
 80052d0:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |=  (0x01 << GPIO_MODER_MODER6_Pos) | (0x01 << GPIO_MODER_MODER7_Pos);
 80052d2:	2390      	movs	r3, #144	; 0x90
 80052d4:	05db      	lsls	r3, r3, #23
 80052d6:	681a      	ldr	r2, [r3, #0]
 80052d8:	2390      	movs	r3, #144	; 0x90
 80052da:	05db      	lsls	r3, r3, #23
 80052dc:	21a0      	movs	r1, #160	; 0xa0
 80052de:	01c9      	lsls	r1, r1, #7
 80052e0:	430a      	orrs	r2, r1
 80052e2:	601a      	str	r2, [r3, #0]

	// Configure PA0 and PA1 AZ direction pin as output pin with open drain (PMOS not present, NMOS only)
	GPIOA->OTYPER |= GPIO_OTYPER_OT_0 | GPIO_OTYPER_OT_1;
 80052e4:	2390      	movs	r3, #144	; 0x90
 80052e6:	05db      	lsls	r3, r3, #23
 80052e8:	685a      	ldr	r2, [r3, #4]
 80052ea:	2390      	movs	r3, #144	; 0x90
 80052ec:	05db      	lsls	r3, r3, #23
 80052ee:	2103      	movs	r1, #3
 80052f0:	430a      	orrs	r2, r1
 80052f2:	605a      	str	r2, [r3, #4]

	// Configure PA6 and PA7 EL direction pin as output pin with open drain (PMOS not present, NMOS only)
	GPIOA->OTYPER |= GPIO_OTYPER_OT_6 | GPIO_OTYPER_OT_7;
 80052f4:	2390      	movs	r3, #144	; 0x90
 80052f6:	05db      	lsls	r3, r3, #23
 80052f8:	685a      	ldr	r2, [r3, #4]
 80052fa:	2390      	movs	r3, #144	; 0x90
 80052fc:	05db      	lsls	r3, r3, #23
 80052fe:	21c0      	movs	r1, #192	; 0xc0
 8005300:	430a      	orrs	r2, r1
 8005302:	605a      	str	r2, [r3, #4]

	// Configure PA0 and PA1 AZ direction pin as output pin with pull up resistor
	GPIOA->PUPDR &= ~(GPIO_PUPDR_PUPDR0_Msk | GPIO_PUPDR_PUPDR1_Msk); // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8005304:	2390      	movs	r3, #144	; 0x90
 8005306:	05db      	lsls	r3, r3, #23
 8005308:	68da      	ldr	r2, [r3, #12]
 800530a:	2390      	movs	r3, #144	; 0x90
 800530c:	05db      	lsls	r3, r3, #23
 800530e:	210f      	movs	r1, #15
 8005310:	438a      	bics	r2, r1
 8005312:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR |=  (0x01 << GPIO_PUPDR_PUPDR0_Pos) | (0x01 << GPIO_PUPDR_PUPDR1_Pos);
 8005314:	2390      	movs	r3, #144	; 0x90
 8005316:	05db      	lsls	r3, r3, #23
 8005318:	68da      	ldr	r2, [r3, #12]
 800531a:	2390      	movs	r3, #144	; 0x90
 800531c:	05db      	lsls	r3, r3, #23
 800531e:	2105      	movs	r1, #5
 8005320:	430a      	orrs	r2, r1
 8005322:	60da      	str	r2, [r3, #12]

	// Configure PA6 and PA7 EL direction pin as output pin with pull up resistor
	GPIOA->PUPDR &= ~(GPIO_PUPDR_PUPDR6_Msk | GPIO_PUPDR_PUPDR7_Msk); // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8005324:	2390      	movs	r3, #144	; 0x90
 8005326:	05db      	lsls	r3, r3, #23
 8005328:	68da      	ldr	r2, [r3, #12]
 800532a:	2390      	movs	r3, #144	; 0x90
 800532c:	05db      	lsls	r3, r3, #23
 800532e:	4935      	ldr	r1, [pc, #212]	; (8005404 <pwmInit+0x174>)
 8005330:	400a      	ands	r2, r1
 8005332:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR |=  (0x01 << GPIO_PUPDR_PUPDR6_Pos) | (0x01 << GPIO_PUPDR_PUPDR7_Pos);
 8005334:	2390      	movs	r3, #144	; 0x90
 8005336:	05db      	lsls	r3, r3, #23
 8005338:	68da      	ldr	r2, [r3, #12]
 800533a:	2390      	movs	r3, #144	; 0x90
 800533c:	05db      	lsls	r3, r3, #23
 800533e:	21a0      	movs	r1, #160	; 0xa0
 8005340:	01c9      	lsls	r1, r1, #7
 8005342:	430a      	orrs	r2, r1
 8005344:	60da      	str	r2, [r3, #12]

	// Configure PA8 and PA9 as Alternate Function
	GPIOA->MODER &= ~(GPIO_MODER_MODER8_Msk | GPIO_MODER_MODER9_Msk);
 8005346:	2390      	movs	r3, #144	; 0x90
 8005348:	05db      	lsls	r3, r3, #23
 800534a:	681a      	ldr	r2, [r3, #0]
 800534c:	2390      	movs	r3, #144	; 0x90
 800534e:	05db      	lsls	r3, r3, #23
 8005350:	492d      	ldr	r1, [pc, #180]	; (8005408 <pwmInit+0x178>)
 8005352:	400a      	ands	r2, r1
 8005354:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |=  (0x02 <<GPIO_MODER_MODER8_Pos) | (0x02 <<GPIO_MODER_MODER9_Pos);
 8005356:	2390      	movs	r3, #144	; 0x90
 8005358:	05db      	lsls	r3, r3, #23
 800535a:	681a      	ldr	r2, [r3, #0]
 800535c:	2390      	movs	r3, #144	; 0x90
 800535e:	05db      	lsls	r3, r3, #23
 8005360:	21a0      	movs	r1, #160	; 0xa0
 8005362:	0309      	lsls	r1, r1, #12
 8005364:	430a      	orrs	r2, r1
 8005366:	601a      	str	r2, [r3, #0]

	// Set PA8 and PA9 to AF2 (TIM1)
	GPIOA->AFR[1] &= ~(0x000000FF);
 8005368:	2390      	movs	r3, #144	; 0x90
 800536a:	05db      	lsls	r3, r3, #23
 800536c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800536e:	2390      	movs	r3, #144	; 0x90
 8005370:	05db      	lsls	r3, r3, #23
 8005372:	21ff      	movs	r1, #255	; 0xff
 8005374:	438a      	bics	r2, r1
 8005376:	625a      	str	r2, [r3, #36]	; 0x24
	GPIOA->AFR[1] |=  (0x00000022);
 8005378:	2390      	movs	r3, #144	; 0x90
 800537a:	05db      	lsls	r3, r3, #23
 800537c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800537e:	2390      	movs	r3, #144	; 0x90
 8005380:	05db      	lsls	r3, r3, #23
 8005382:	2122      	movs	r1, #34	; 0x22
 8005384:	430a      	orrs	r2, r1
 8005386:	625a      	str	r2, [r3, #36]	; 0x24

	// Enable TIM1 clock
	RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;
 8005388:	4b1d      	ldr	r3, [pc, #116]	; (8005400 <pwmInit+0x170>)
 800538a:	699a      	ldr	r2, [r3, #24]
 800538c:	4b1c      	ldr	r3, [pc, #112]	; (8005400 <pwmInit+0x170>)
 800538e:	2180      	movs	r1, #128	; 0x80
 8005390:	0109      	lsls	r1, r1, #4
 8005392:	430a      	orrs	r2, r1
 8005394:	619a      	str	r2, [r3, #24]

	// Reset TIM1 configuration
	TIM1->CR1 = 0x0000;
 8005396:	4b1d      	ldr	r3, [pc, #116]	; (800540c <pwmInit+0x17c>)
 8005398:	2200      	movs	r2, #0
 800539a:	601a      	str	r2, [r3, #0]
	TIM1->CR2 = 0x0000;
 800539c:	4b1b      	ldr	r3, [pc, #108]	; (800540c <pwmInit+0x17c>)
 800539e:	2200      	movs	r2, #0
 80053a0:	605a      	str	r2, [r3, #4]
	TIM1->CCER = 0x0000;
 80053a2:	4b1a      	ldr	r3, [pc, #104]	; (800540c <pwmInit+0x17c>)
 80053a4:	2200      	movs	r2, #0
 80053a6:	621a      	str	r2, [r3, #32]

	// Set TIM1 prescaler to 1MHz counting frequency (1µs resolution)
	TIM1->PSC = (uint16_t) 8 - 1;
 80053a8:	4b18      	ldr	r3, [pc, #96]	; (800540c <pwmInit+0x17c>)
 80053aa:	2207      	movs	r2, #7
 80053ac:	629a      	str	r2, [r3, #40]	; 0x28

	// Set Auto-Reload to period 20 ms
	TIM1->ARR = (uint16_t) 200;
 80053ae:	4b17      	ldr	r3, [pc, #92]	; (800540c <pwmInit+0x17c>)
 80053b0:	22c8      	movs	r2, #200	; 0xc8
 80053b2:	62da      	str	r2, [r3, #44]	; 0x2c

	// Enable Auto-Reload Preload register
	TIM1->CR1 |= TIM_CR1_ARPE;
 80053b4:	4b15      	ldr	r3, [pc, #84]	; (800540c <pwmInit+0x17c>)
 80053b6:	681a      	ldr	r2, [r3, #0]
 80053b8:	4b14      	ldr	r3, [pc, #80]	; (800540c <pwmInit+0x17c>)
 80053ba:	2180      	movs	r1, #128	; 0x80
 80053bc:	430a      	orrs	r2, r1
 80053be:	601a      	str	r2, [r3, #0]

	// Setup Input Capture
	TIM1->CCMR1 = 0x0000;
 80053c0:	4b12      	ldr	r3, [pc, #72]	; (800540c <pwmInit+0x17c>)
 80053c2:	2200      	movs	r2, #0
 80053c4:	619a      	str	r2, [r3, #24]
	TIM1->CCMR2 = 0x0000;
 80053c6:	4b11      	ldr	r3, [pc, #68]	; (800540c <pwmInit+0x17c>)
 80053c8:	2200      	movs	r2, #0
 80053ca:	61da      	str	r2, [r3, #28]

	// Setup PWM mode 1 output
	TIM1->CCMR1 |= (0x06 <<TIM_CCMR1_OC1M_Pos) | TIM_CCMR1_OC1PE;
 80053cc:	4b0f      	ldr	r3, [pc, #60]	; (800540c <pwmInit+0x17c>)
 80053ce:	699a      	ldr	r2, [r3, #24]
 80053d0:	4b0e      	ldr	r3, [pc, #56]	; (800540c <pwmInit+0x17c>)
 80053d2:	2168      	movs	r1, #104	; 0x68
 80053d4:	430a      	orrs	r2, r1
 80053d6:	619a      	str	r2, [r3, #24]
	TIM1->CCMR1 |= (0x06 <<TIM_CCMR1_OC2M_Pos) | TIM_CCMR1_OC2PE;
 80053d8:	4b0c      	ldr	r3, [pc, #48]	; (800540c <pwmInit+0x17c>)
 80053da:	699a      	ldr	r2, [r3, #24]
 80053dc:	4b0b      	ldr	r3, [pc, #44]	; (800540c <pwmInit+0x17c>)
 80053de:	21d0      	movs	r1, #208	; 0xd0
 80053e0:	01c9      	lsls	r1, r1, #7
 80053e2:	430a      	orrs	r2, r1
 80053e4:	619a      	str	r2, [r3, #24]

	// Set default PWM values
	TIM1->CCR1 = 0x0000;
 80053e6:	4b09      	ldr	r3, [pc, #36]	; (800540c <pwmInit+0x17c>)
 80053e8:	2200      	movs	r2, #0
 80053ea:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR2 = 0x0000;
 80053ec:	4b07      	ldr	r3, [pc, #28]	; (800540c <pwmInit+0x17c>)
 80053ee:	2200      	movs	r2, #0
 80053f0:	639a      	str	r2, [r3, #56]	; 0x38

	printf("PWM INIT OK ! \r\n");
 80053f2:	4b07      	ldr	r3, [pc, #28]	; (8005410 <pwmInit+0x180>)
 80053f4:	0018      	movs	r0, r3
 80053f6:	f002 fcf9 	bl	8007dec <puts>
}
 80053fa:	46c0      	nop			; (mov r8, r8)
 80053fc:	46bd      	mov	sp, r7
 80053fe:	bd80      	pop	{r7, pc}
 8005400:	40021000 	.word	0x40021000
 8005404:	ffff0fff 	.word	0xffff0fff
 8005408:	fff0ffff 	.word	0xfff0ffff
 800540c:	40012c00 	.word	0x40012c00
 8005410:	0800cdc0 	.word	0x0800cdc0

08005414 <home>:

/********************************** HOME ********************************************/

void home(){
 8005414:	b580      	push	{r7, lr}
 8005416:	af00      	add	r7, sp, #0

	// Enable GPIOB clock
	RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 8005418:	4b37      	ldr	r3, [pc, #220]	; (80054f8 <home+0xe4>)
 800541a:	695a      	ldr	r2, [r3, #20]
 800541c:	4b36      	ldr	r3, [pc, #216]	; (80054f8 <home+0xe4>)
 800541e:	2180      	movs	r1, #128	; 0x80
 8005420:	02c9      	lsls	r1, r1, #11
 8005422:	430a      	orrs	r2, r1
 8005424:	615a      	str	r2, [r3, #20]

	/*********** CONFIGURE AZ INPUT (PB2) AS AZ ENCODER INDEX (I)  **********/

	// Configure PB2 for AZ Home as input
	GPIOB->MODER &= ~(GPIO_MODER_MODER2_Msk);
 8005426:	4b35      	ldr	r3, [pc, #212]	; (80054fc <home+0xe8>)
 8005428:	681a      	ldr	r2, [r3, #0]
 800542a:	4b34      	ldr	r3, [pc, #208]	; (80054fc <home+0xe8>)
 800542c:	2130      	movs	r1, #48	; 0x30
 800542e:	438a      	bics	r2, r1
 8005430:	601a      	str	r2, [r3, #0]

	// PB2 no pull-up, pull-down
	GPIOB->PUPDR &= ~(GPIO_PUPDR_PUPDR2_Msk);
 8005432:	4b32      	ldr	r3, [pc, #200]	; (80054fc <home+0xe8>)
 8005434:	68da      	ldr	r2, [r3, #12]
 8005436:	4b31      	ldr	r3, [pc, #196]	; (80054fc <home+0xe8>)
 8005438:	2130      	movs	r1, #48	; 0x30
 800543a:	438a      	bics	r2, r1
 800543c:	60da      	str	r2, [r3, #12]

	/*********** CONFIGURE EL INPUT (PB3) AS EL ENCODER INDEX (I)  **********/

	// Configure PB3 for EL Home as input
	GPIOB->MODER &= ~(GPIO_MODER_MODER3_Msk);
 800543e:	4b2f      	ldr	r3, [pc, #188]	; (80054fc <home+0xe8>)
 8005440:	681a      	ldr	r2, [r3, #0]
 8005442:	4b2e      	ldr	r3, [pc, #184]	; (80054fc <home+0xe8>)
 8005444:	21c0      	movs	r1, #192	; 0xc0
 8005446:	438a      	bics	r2, r1
 8005448:	601a      	str	r2, [r3, #0]

	// PB3 no pull-up, pull-down
	GPIOB->PUPDR &= ~(GPIO_PUPDR_PUPDR3_Msk);
 800544a:	4b2c      	ldr	r3, [pc, #176]	; (80054fc <home+0xe8>)
 800544c:	68da      	ldr	r2, [r3, #12]
 800544e:	4b2b      	ldr	r3, [pc, #172]	; (80054fc <home+0xe8>)
 8005450:	21c0      	movs	r1, #192	; 0xc0
 8005452:	438a      	bics	r2, r1
 8005454:	60da      	str	r2, [r3, #12]

	/*********** CONFIGURE INTERRUPTION SOURCES  **********/

	// Enable SYSCFG clock
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 8005456:	4b28      	ldr	r3, [pc, #160]	; (80054f8 <home+0xe4>)
 8005458:	699a      	ldr	r2, [r3, #24]
 800545a:	4b27      	ldr	r3, [pc, #156]	; (80054f8 <home+0xe4>)
 800545c:	2101      	movs	r1, #1
 800545e:	430a      	orrs	r2, r1
 8005460:	619a      	str	r2, [r3, #24]

	// Select Port B as interrupt source for EXTI line 2 i.e PB2
	SYSCFG->EXTICR[0] &= ~(SYSCFG_EXTICR1_EXTI2_Msk);
 8005462:	4b27      	ldr	r3, [pc, #156]	; (8005500 <home+0xec>)
 8005464:	689a      	ldr	r2, [r3, #8]
 8005466:	4b26      	ldr	r3, [pc, #152]	; (8005500 <home+0xec>)
 8005468:	4926      	ldr	r1, [pc, #152]	; (8005504 <home+0xf0>)
 800546a:	400a      	ands	r2, r1
 800546c:	609a      	str	r2, [r3, #8]
	SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI2_PB;
 800546e:	4b24      	ldr	r3, [pc, #144]	; (8005500 <home+0xec>)
 8005470:	689a      	ldr	r2, [r3, #8]
 8005472:	4b23      	ldr	r3, [pc, #140]	; (8005500 <home+0xec>)
 8005474:	2180      	movs	r1, #128	; 0x80
 8005476:	0049      	lsls	r1, r1, #1
 8005478:	430a      	orrs	r2, r1
 800547a:	609a      	str	r2, [r3, #8]

	// Select Port B as interrupt source for EXTI line 3 i.e PB3
	SYSCFG->EXTICR[0] &= ~(SYSCFG_EXTICR1_EXTI3_Msk);
 800547c:	4b20      	ldr	r3, [pc, #128]	; (8005500 <home+0xec>)
 800547e:	689a      	ldr	r2, [r3, #8]
 8005480:	4b1f      	ldr	r3, [pc, #124]	; (8005500 <home+0xec>)
 8005482:	4921      	ldr	r1, [pc, #132]	; (8005508 <home+0xf4>)
 8005484:	400a      	ands	r2, r1
 8005486:	609a      	str	r2, [r3, #8]
	SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI3_PB;
 8005488:	4b1d      	ldr	r3, [pc, #116]	; (8005500 <home+0xec>)
 800548a:	689a      	ldr	r2, [r3, #8]
 800548c:	4b1c      	ldr	r3, [pc, #112]	; (8005500 <home+0xec>)
 800548e:	2180      	movs	r1, #128	; 0x80
 8005490:	0149      	lsls	r1, r1, #5
 8005492:	430a      	orrs	r2, r1
 8005494:	609a      	str	r2, [r3, #8]

	// Enable EXTI line 2 for PB2
	EXTI->IMR |= EXTI_IMR_IM2;
 8005496:	4b1d      	ldr	r3, [pc, #116]	; (800550c <home+0xf8>)
 8005498:	681a      	ldr	r2, [r3, #0]
 800549a:	4b1c      	ldr	r3, [pc, #112]	; (800550c <home+0xf8>)
 800549c:	2104      	movs	r1, #4
 800549e:	430a      	orrs	r2, r1
 80054a0:	601a      	str	r2, [r3, #0]

	// Enable EXTI line 3 for PB3
	EXTI->IMR |= EXTI_IMR_IM3;
 80054a2:	4b1a      	ldr	r3, [pc, #104]	; (800550c <home+0xf8>)
 80054a4:	681a      	ldr	r2, [r3, #0]
 80054a6:	4b19      	ldr	r3, [pc, #100]	; (800550c <home+0xf8>)
 80054a8:	2108      	movs	r1, #8
 80054aa:	430a      	orrs	r2, r1
 80054ac:	601a      	str	r2, [r3, #0]

	// Disable Falling / Enable rising trigger
	EXTI->RTSR |= EXTI_RTSR_RT2;
 80054ae:	4b17      	ldr	r3, [pc, #92]	; (800550c <home+0xf8>)
 80054b0:	689a      	ldr	r2, [r3, #8]
 80054b2:	4b16      	ldr	r3, [pc, #88]	; (800550c <home+0xf8>)
 80054b4:	2104      	movs	r1, #4
 80054b6:	430a      	orrs	r2, r1
 80054b8:	609a      	str	r2, [r3, #8]
	EXTI->FTSR &= ~(EXTI_FTSR_FT2);
 80054ba:	4b14      	ldr	r3, [pc, #80]	; (800550c <home+0xf8>)
 80054bc:	68da      	ldr	r2, [r3, #12]
 80054be:	4b13      	ldr	r3, [pc, #76]	; (800550c <home+0xf8>)
 80054c0:	2104      	movs	r1, #4
 80054c2:	438a      	bics	r2, r1
 80054c4:	60da      	str	r2, [r3, #12]

	// Disable Falling / Enable rising trigger
	EXTI->RTSR |= EXTI_RTSR_RT3;
 80054c6:	4b11      	ldr	r3, [pc, #68]	; (800550c <home+0xf8>)
 80054c8:	689a      	ldr	r2, [r3, #8]
 80054ca:	4b10      	ldr	r3, [pc, #64]	; (800550c <home+0xf8>)
 80054cc:	2108      	movs	r1, #8
 80054ce:	430a      	orrs	r2, r1
 80054d0:	609a      	str	r2, [r3, #8]
	EXTI->FTSR &= ~(EXTI_FTSR_FT3);
 80054d2:	4b0e      	ldr	r3, [pc, #56]	; (800550c <home+0xf8>)
 80054d4:	68da      	ldr	r2, [r3, #12]
 80054d6:	4b0d      	ldr	r3, [pc, #52]	; (800550c <home+0xf8>)
 80054d8:	2108      	movs	r1, #8
 80054da:	438a      	bics	r2, r1
 80054dc:	60da      	str	r2, [r3, #12]

	// Set maximum priority for EXTI line 4 to 15 interrupts
	NVIC_SetPriority(EXTI2_3_IRQn, 0);
 80054de:	2100      	movs	r1, #0
 80054e0:	2006      	movs	r0, #6
 80054e2:	f7fd ff1d 	bl	8003320 <__NVIC_SetPriority>

	// Enable EXTI line 4 to 15 (user button on line 13) interrupts
	NVIC_EnableIRQ(EXTI2_3_IRQn);
 80054e6:	2006      	movs	r0, #6
 80054e8:	f7fd ff00 	bl	80032ec <__NVIC_EnableIRQ>

	pwmHomeStart();
 80054ec:	f000 f810 	bl	8005510 <pwmHomeStart>

}
 80054f0:	46c0      	nop			; (mov r8, r8)
 80054f2:	46bd      	mov	sp, r7
 80054f4:	bd80      	pop	{r7, pc}
 80054f6:	46c0      	nop			; (mov r8, r8)
 80054f8:	40021000 	.word	0x40021000
 80054fc:	48000400 	.word	0x48000400
 8005500:	40010000 	.word	0x40010000
 8005504:	fffff0ff 	.word	0xfffff0ff
 8005508:	ffff0fff 	.word	0xffff0fff
 800550c:	40010400 	.word	0x40010400

08005510 <pwmHomeStart>:

void pwmHomeStart(){
 8005510:	b580      	push	{r7, lr}
 8005512:	af00      	add	r7, sp, #0

	/*********** SET AZ HOMING ROTATION DIRECTION TO CLOCKWISE **********/

	// AZ direction pins are PA0 and PA1
	GPIOA->ODR |= GPIO_ODR_0; // Set PA0 value to low
 8005514:	2390      	movs	r3, #144	; 0x90
 8005516:	05db      	lsls	r3, r3, #23
 8005518:	695a      	ldr	r2, [r3, #20]
 800551a:	2390      	movs	r3, #144	; 0x90
 800551c:	05db      	lsls	r3, r3, #23
 800551e:	2101      	movs	r1, #1
 8005520:	430a      	orrs	r2, r1
 8005522:	615a      	str	r2, [r3, #20]
	GPIOA->ODR &= ~(GPIO_ODR_1); // Set PA1 value to high
 8005524:	2390      	movs	r3, #144	; 0x90
 8005526:	05db      	lsls	r3, r3, #23
 8005528:	695a      	ldr	r2, [r3, #20]
 800552a:	2390      	movs	r3, #144	; 0x90
 800552c:	05db      	lsls	r3, r3, #23
 800552e:	2102      	movs	r1, #2
 8005530:	438a      	bics	r2, r1
 8005532:	615a      	str	r2, [r3, #20]

	/*********** SET EL HOMING ROTATION DIRECTION TO CLOCKWISE **********/

	// EL direction pins are PA6 and PA7
	GPIOA->ODR |= GPIO_ODR_6; // Set PA6 value to low
 8005534:	2390      	movs	r3, #144	; 0x90
 8005536:	05db      	lsls	r3, r3, #23
 8005538:	695a      	ldr	r2, [r3, #20]
 800553a:	2390      	movs	r3, #144	; 0x90
 800553c:	05db      	lsls	r3, r3, #23
 800553e:	2140      	movs	r1, #64	; 0x40
 8005540:	430a      	orrs	r2, r1
 8005542:	615a      	str	r2, [r3, #20]
	GPIOA->ODR &= ~(GPIO_ODR_7); // Set PA7 value to high
 8005544:	2390      	movs	r3, #144	; 0x90
 8005546:	05db      	lsls	r3, r3, #23
 8005548:	695a      	ldr	r2, [r3, #20]
 800554a:	2390      	movs	r3, #144	; 0x90
 800554c:	05db      	lsls	r3, r3, #23
 800554e:	2180      	movs	r1, #128	; 0x80
 8005550:	438a      	bics	r2, r1
 8005552:	615a      	str	r2, [r3, #20]

	/*********** AZ and EL MOTOR TURN AT THE MAXIMUM SPEED **********/

	// Timer 1 channel 1 is PA8 pin and Timer 1 channel 2 is PA9 pin
	TIM1->CCR1 = (uint16_t) 200;
 8005554:	4b12      	ldr	r3, [pc, #72]	; (80055a0 <pwmHomeStart+0x90>)
 8005556:	22c8      	movs	r2, #200	; 0xc8
 8005558:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR2 = (uint16_t) 200;
 800555a:	4b11      	ldr	r3, [pc, #68]	; (80055a0 <pwmHomeStart+0x90>)
 800555c:	22c8      	movs	r2, #200	; 0xc8
 800555e:	639a      	str	r2, [r3, #56]	; 0x38

	// Resets TIM1 counter
	TIM1->EGR |= TIM_EGR_UG;
 8005560:	4b0f      	ldr	r3, [pc, #60]	; (80055a0 <pwmHomeStart+0x90>)
 8005562:	695a      	ldr	r2, [r3, #20]
 8005564:	4b0e      	ldr	r3, [pc, #56]	; (80055a0 <pwmHomeStart+0x90>)
 8005566:	2101      	movs	r1, #1
 8005568:	430a      	orrs	r2, r1
 800556a:	615a      	str	r2, [r3, #20]

	// Enable Outputs
	TIM1->CCER |= TIM_CCER_CC1E | TIM_CCER_CC2E;
 800556c:	4b0c      	ldr	r3, [pc, #48]	; (80055a0 <pwmHomeStart+0x90>)
 800556e:	6a1a      	ldr	r2, [r3, #32]
 8005570:	4b0b      	ldr	r3, [pc, #44]	; (80055a0 <pwmHomeStart+0x90>)
 8005572:	2111      	movs	r1, #17
 8005574:	430a      	orrs	r2, r1
 8005576:	621a      	str	r2, [r3, #32]

	// Enable Main output
	TIM1->BDTR |= TIM_BDTR_MOE;
 8005578:	4b09      	ldr	r3, [pc, #36]	; (80055a0 <pwmHomeStart+0x90>)
 800557a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800557c:	4b08      	ldr	r3, [pc, #32]	; (80055a0 <pwmHomeStart+0x90>)
 800557e:	2180      	movs	r1, #128	; 0x80
 8005580:	0209      	lsls	r1, r1, #8
 8005582:	430a      	orrs	r2, r1
 8005584:	645a      	str	r2, [r3, #68]	; 0x44

	// Enable TIM1
	TIM1->CR1 |= TIM_CR1_CEN;
 8005586:	4b06      	ldr	r3, [pc, #24]	; (80055a0 <pwmHomeStart+0x90>)
 8005588:	681a      	ldr	r2, [r3, #0]
 800558a:	4b05      	ldr	r3, [pc, #20]	; (80055a0 <pwmHomeStart+0x90>)
 800558c:	2101      	movs	r1, #1
 800558e:	430a      	orrs	r2, r1
 8005590:	601a      	str	r2, [r3, #0]

	printf("PWM HOME START ! \r\n");
 8005592:	4b04      	ldr	r3, [pc, #16]	; (80055a4 <pwmHomeStart+0x94>)
 8005594:	0018      	movs	r0, r3
 8005596:	f002 fc29 	bl	8007dec <puts>

}
 800559a:	46c0      	nop			; (mov r8, r8)
 800559c:	46bd      	mov	sp, r7
 800559e:	bd80      	pop	{r7, pc}
 80055a0:	40012c00 	.word	0x40012c00
 80055a4:	0800cdd0 	.word	0x0800cdd0

080055a8 <EXTI2_3_IRQHandler>:

void EXTI2_3_IRQHandler(){
 80055a8:	b580      	push	{r7, lr}
 80055aa:	af00      	add	r7, sp, #0

	// Test for line 2 pending interrupt i.e AZ home reach
	if ((EXTI->PR & EXTI_PR_PR2_Msk) != 0){
 80055ac:	4b1f      	ldr	r3, [pc, #124]	; (800562c <EXTI2_3_IRQHandler+0x84>)
 80055ae:	695b      	ldr	r3, [r3, #20]
 80055b0:	2204      	movs	r2, #4
 80055b2:	4013      	ands	r3, r2
 80055b4:	d011      	beq.n	80055da <EXTI2_3_IRQHandler+0x32>

		// Clear pending bit 2 by writing a '1'
		EXTI->PR = EXTI_PR_PR2;
 80055b6:	4b1d      	ldr	r3, [pc, #116]	; (800562c <EXTI2_3_IRQHandler+0x84>)
 80055b8:	2204      	movs	r2, #4
 80055ba:	615a      	str	r2, [r3, #20]

		// Disable interruption on line 2
		EXTI->IMR &= ~(EXTI_IMR_IM2);
 80055bc:	4b1b      	ldr	r3, [pc, #108]	; (800562c <EXTI2_3_IRQHandler+0x84>)
 80055be:	681a      	ldr	r2, [r3, #0]
 80055c0:	4b1a      	ldr	r3, [pc, #104]	; (800562c <EXTI2_3_IRQHandler+0x84>)
 80055c2:	2104      	movs	r1, #4
 80055c4:	438a      	bics	r2, r1
 80055c6:	601a      	str	r2, [r3, #0]

		isHomeAz = 1;
 80055c8:	4b19      	ldr	r3, [pc, #100]	; (8005630 <EXTI2_3_IRQHandler+0x88>)
 80055ca:	2201      	movs	r2, #1
 80055cc:	701a      	strb	r2, [r3, #0]

		printf("AZ HOME REACH ! \r\n");
 80055ce:	4b19      	ldr	r3, [pc, #100]	; (8005634 <EXTI2_3_IRQHandler+0x8c>)
 80055d0:	0018      	movs	r0, r3
 80055d2:	f002 fc0b 	bl	8007dec <puts>

		pwmHomeUpdate();
 80055d6:	f000 f835 	bl	8005644 <pwmHomeUpdate>

	}

	// Test for line 3 pending interrupt i.e EL home reach
	if ((EXTI->PR & EXTI_PR_PR3_Msk) != 0){
 80055da:	4b14      	ldr	r3, [pc, #80]	; (800562c <EXTI2_3_IRQHandler+0x84>)
 80055dc:	695b      	ldr	r3, [r3, #20]
 80055de:	2208      	movs	r2, #8
 80055e0:	4013      	ands	r3, r2
 80055e2:	d011      	beq.n	8005608 <EXTI2_3_IRQHandler+0x60>

		// Clear pending bit 3 by writing a '1'
		EXTI->PR = EXTI_PR_PR3;
 80055e4:	4b11      	ldr	r3, [pc, #68]	; (800562c <EXTI2_3_IRQHandler+0x84>)
 80055e6:	2208      	movs	r2, #8
 80055e8:	615a      	str	r2, [r3, #20]

		// Disable interruption on line 3
		EXTI->IMR &= ~(EXTI_IMR_IM3);
 80055ea:	4b10      	ldr	r3, [pc, #64]	; (800562c <EXTI2_3_IRQHandler+0x84>)
 80055ec:	681a      	ldr	r2, [r3, #0]
 80055ee:	4b0f      	ldr	r3, [pc, #60]	; (800562c <EXTI2_3_IRQHandler+0x84>)
 80055f0:	2108      	movs	r1, #8
 80055f2:	438a      	bics	r2, r1
 80055f4:	601a      	str	r2, [r3, #0]

		isHomeEl = 1;
 80055f6:	4b10      	ldr	r3, [pc, #64]	; (8005638 <EXTI2_3_IRQHandler+0x90>)
 80055f8:	2201      	movs	r2, #1
 80055fa:	701a      	strb	r2, [r3, #0]

		printf("EL HOME REACH ! \r\n");
 80055fc:	4b0f      	ldr	r3, [pc, #60]	; (800563c <EXTI2_3_IRQHandler+0x94>)
 80055fe:	0018      	movs	r0, r3
 8005600:	f002 fbf4 	bl	8007dec <puts>

		pwmHomeUpdate();
 8005604:	f000 f81e 	bl	8005644 <pwmHomeUpdate>
	}

	if(isHomeAz && isHomeEl){
 8005608:	4b09      	ldr	r3, [pc, #36]	; (8005630 <EXTI2_3_IRQHandler+0x88>)
 800560a:	781b      	ldrb	r3, [r3, #0]
 800560c:	2b00      	cmp	r3, #0
 800560e:	d009      	beq.n	8005624 <EXTI2_3_IRQHandler+0x7c>
 8005610:	4b09      	ldr	r3, [pc, #36]	; (8005638 <EXTI2_3_IRQHandler+0x90>)
 8005612:	781b      	ldrb	r3, [r3, #0]
 8005614:	2b00      	cmp	r3, #0
 8005616:	d005      	beq.n	8005624 <EXTI2_3_IRQHandler+0x7c>

		printf("ALL HOME REACH ! \r\n");
 8005618:	4b09      	ldr	r3, [pc, #36]	; (8005640 <EXTI2_3_IRQHandler+0x98>)
 800561a:	0018      	movs	r0, r3
 800561c:	f002 fbe6 	bl	8007dec <puts>
		pwmHomeStop();
 8005620:	f000 f842 	bl	80056a8 <pwmHomeStop>
	}
}
 8005624:	46c0      	nop			; (mov r8, r8)
 8005626:	46bd      	mov	sp, r7
 8005628:	bd80      	pop	{r7, pc}
 800562a:	46c0      	nop			; (mov r8, r8)
 800562c:	40010400 	.word	0x40010400
 8005630:	2000041c 	.word	0x2000041c
 8005634:	0800cde4 	.word	0x0800cde4
 8005638:	2000041d 	.word	0x2000041d
 800563c:	0800cdf8 	.word	0x0800cdf8
 8005640:	0800ce0c 	.word	0x0800ce0c

08005644 <pwmHomeUpdate>:

void pwmHomeUpdate(){
 8005644:	b580      	push	{r7, lr}
 8005646:	af00      	add	r7, sp, #0


	TIM1->CCR1 = (!isHomeAz) ? (uint16_t) 200 : (uint16_t) 0;
 8005648:	4b12      	ldr	r3, [pc, #72]	; (8005694 <pwmHomeUpdate+0x50>)
 800564a:	781b      	ldrb	r3, [r3, #0]
 800564c:	2b00      	cmp	r3, #0
 800564e:	d101      	bne.n	8005654 <pwmHomeUpdate+0x10>
 8005650:	22c8      	movs	r2, #200	; 0xc8
 8005652:	e000      	b.n	8005656 <pwmHomeUpdate+0x12>
 8005654:	2200      	movs	r2, #0
 8005656:	4b10      	ldr	r3, [pc, #64]	; (8005698 <pwmHomeUpdate+0x54>)
 8005658:	635a      	str	r2, [r3, #52]	; 0x34

	if(isHomeAz){
 800565a:	4b0e      	ldr	r3, [pc, #56]	; (8005694 <pwmHomeUpdate+0x50>)
 800565c:	781b      	ldrb	r3, [r3, #0]
 800565e:	2b00      	cmp	r3, #0
 8005660:	d003      	beq.n	800566a <pwmHomeUpdate+0x26>
		printf("Set az pwm speed to 0 \r\n");
 8005662:	4b0e      	ldr	r3, [pc, #56]	; (800569c <pwmHomeUpdate+0x58>)
 8005664:	0018      	movs	r0, r3
 8005666:	f002 fbc1 	bl	8007dec <puts>
	}

	TIM1->CCR2 = (!isHomeEl) ? (uint16_t) 200 : (uint16_t) 0;
 800566a:	4b0d      	ldr	r3, [pc, #52]	; (80056a0 <pwmHomeUpdate+0x5c>)
 800566c:	781b      	ldrb	r3, [r3, #0]
 800566e:	2b00      	cmp	r3, #0
 8005670:	d101      	bne.n	8005676 <pwmHomeUpdate+0x32>
 8005672:	22c8      	movs	r2, #200	; 0xc8
 8005674:	e000      	b.n	8005678 <pwmHomeUpdate+0x34>
 8005676:	2200      	movs	r2, #0
 8005678:	4b07      	ldr	r3, [pc, #28]	; (8005698 <pwmHomeUpdate+0x54>)
 800567a:	639a      	str	r2, [r3, #56]	; 0x38

	if(isHomeEl){
 800567c:	4b08      	ldr	r3, [pc, #32]	; (80056a0 <pwmHomeUpdate+0x5c>)
 800567e:	781b      	ldrb	r3, [r3, #0]
 8005680:	2b00      	cmp	r3, #0
 8005682:	d003      	beq.n	800568c <pwmHomeUpdate+0x48>
		printf("Set el pwm speed to 0 \r\n");
 8005684:	4b07      	ldr	r3, [pc, #28]	; (80056a4 <pwmHomeUpdate+0x60>)
 8005686:	0018      	movs	r0, r3
 8005688:	f002 fbb0 	bl	8007dec <puts>
	}

}
 800568c:	46c0      	nop			; (mov r8, r8)
 800568e:	46bd      	mov	sp, r7
 8005690:	bd80      	pop	{r7, pc}
 8005692:	46c0      	nop			; (mov r8, r8)
 8005694:	2000041c 	.word	0x2000041c
 8005698:	40012c00 	.word	0x40012c00
 800569c:	0800ce20 	.word	0x0800ce20
 80056a0:	2000041d 	.word	0x2000041d
 80056a4:	0800ce38 	.word	0x0800ce38

080056a8 <pwmHomeStop>:

void pwmHomeStop(){
 80056a8:	b5b0      	push	{r4, r5, r7, lr}
 80056aa:	af00      	add	r7, sp, #0

	isHomeAz = 0;
 80056ac:	4b25      	ldr	r3, [pc, #148]	; (8005744 <pwmHomeStop+0x9c>)
 80056ae:	2200      	movs	r2, #0
 80056b0:	701a      	strb	r2, [r3, #0]
	isHomeEl = 0;
 80056b2:	4b25      	ldr	r3, [pc, #148]	; (8005748 <pwmHomeStop+0xa0>)
 80056b4:	2200      	movs	r2, #0
 80056b6:	701a      	strb	r2, [r3, #0]

	systemPosition.azCoordinate = 0.0;
 80056b8:	4b24      	ldr	r3, [pc, #144]	; (800574c <pwmHomeStop+0xa4>)
 80056ba:	2200      	movs	r2, #0
 80056bc:	601a      	str	r2, [r3, #0]
	systemPosition.elCoordinate = 0.0;
 80056be:	4b23      	ldr	r3, [pc, #140]	; (800574c <pwmHomeStop+0xa4>)
 80056c0:	2200      	movs	r2, #0
 80056c2:	605a      	str	r2, [r3, #4]

	printf("systemPosition.azCoordinate : %f \r\n", systemPosition.azCoordinate);
 80056c4:	4b21      	ldr	r3, [pc, #132]	; (800574c <pwmHomeStop+0xa4>)
 80056c6:	681b      	ldr	r3, [r3, #0]
 80056c8:	1c18      	adds	r0, r3, #0
 80056ca:	f7fd fc37 	bl	8002f3c <__aeabi_f2d>
 80056ce:	0003      	movs	r3, r0
 80056d0:	000c      	movs	r4, r1
 80056d2:	491f      	ldr	r1, [pc, #124]	; (8005750 <pwmHomeStop+0xa8>)
 80056d4:	001a      	movs	r2, r3
 80056d6:	0023      	movs	r3, r4
 80056d8:	0008      	movs	r0, r1
 80056da:	f002 fb0d 	bl	8007cf8 <iprintf>
	printf("systemPosition.elCoordinate : %f \r\n", systemPosition.elCoordinate);
 80056de:	4b1b      	ldr	r3, [pc, #108]	; (800574c <pwmHomeStop+0xa4>)
 80056e0:	685b      	ldr	r3, [r3, #4]
 80056e2:	1c18      	adds	r0, r3, #0
 80056e4:	f7fd fc2a 	bl	8002f3c <__aeabi_f2d>
 80056e8:	0003      	movs	r3, r0
 80056ea:	000c      	movs	r4, r1
 80056ec:	4919      	ldr	r1, [pc, #100]	; (8005754 <pwmHomeStop+0xac>)
 80056ee:	001a      	movs	r2, r3
 80056f0:	0023      	movs	r3, r4
 80056f2:	0008      	movs	r0, r1
 80056f4:	f002 fb00 	bl	8007cf8 <iprintf>

	// Disable TIM1
	TIM1->CR1 &= ~TIM_CR1_CEN;
 80056f8:	4b17      	ldr	r3, [pc, #92]	; (8005758 <pwmHomeStop+0xb0>)
 80056fa:	681a      	ldr	r2, [r3, #0]
 80056fc:	4b16      	ldr	r3, [pc, #88]	; (8005758 <pwmHomeStop+0xb0>)
 80056fe:	2101      	movs	r1, #1
 8005700:	438a      	bics	r2, r1
 8005702:	601a      	str	r2, [r3, #0]

	// Resets TIM1 counter
	TIM1->EGR |= TIM_EGR_UG;
 8005704:	4b14      	ldr	r3, [pc, #80]	; (8005758 <pwmHomeStop+0xb0>)
 8005706:	695a      	ldr	r2, [r3, #20]
 8005708:	4b13      	ldr	r3, [pc, #76]	; (8005758 <pwmHomeStop+0xb0>)
 800570a:	2101      	movs	r1, #1
 800570c:	430a      	orrs	r2, r1
 800570e:	615a      	str	r2, [r3, #20]

	// Disable output
	TIM1->CCER &= ~TIM_CCER_CC1E;
 8005710:	4b11      	ldr	r3, [pc, #68]	; (8005758 <pwmHomeStop+0xb0>)
 8005712:	6a1a      	ldr	r2, [r3, #32]
 8005714:	4b10      	ldr	r3, [pc, #64]	; (8005758 <pwmHomeStop+0xb0>)
 8005716:	2101      	movs	r1, #1
 8005718:	438a      	bics	r2, r1
 800571a:	621a      	str	r2, [r3, #32]
	TIM1->CCER &= ~TIM_CCER_CC2E;
 800571c:	4b0e      	ldr	r3, [pc, #56]	; (8005758 <pwmHomeStop+0xb0>)
 800571e:	6a1a      	ldr	r2, [r3, #32]
 8005720:	4b0d      	ldr	r3, [pc, #52]	; (8005758 <pwmHomeStop+0xb0>)
 8005722:	2110      	movs	r1, #16
 8005724:	438a      	bics	r2, r1
 8005726:	621a      	str	r2, [r3, #32]

	// Disable Main output
	TIM1->BDTR &= ~TIM_BDTR_MOE;
 8005728:	4b0b      	ldr	r3, [pc, #44]	; (8005758 <pwmHomeStop+0xb0>)
 800572a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800572c:	4b0a      	ldr	r3, [pc, #40]	; (8005758 <pwmHomeStop+0xb0>)
 800572e:	490b      	ldr	r1, [pc, #44]	; (800575c <pwmHomeStop+0xb4>)
 8005730:	400a      	ands	r2, r1
 8005732:	645a      	str	r2, [r3, #68]	; 0x44

	printf("PWM HOME STOP ! \r\n");
 8005734:	4b0a      	ldr	r3, [pc, #40]	; (8005760 <pwmHomeStop+0xb8>)
 8005736:	0018      	movs	r0, r3
 8005738:	f002 fb58 	bl	8007dec <puts>
}
 800573c:	46c0      	nop			; (mov r8, r8)
 800573e:	46bd      	mov	sp, r7
 8005740:	bdb0      	pop	{r4, r5, r7, pc}
 8005742:	46c0      	nop			; (mov r8, r8)
 8005744:	2000041c 	.word	0x2000041c
 8005748:	2000041d 	.word	0x2000041d
 800574c:	20000420 	.word	0x20000420
 8005750:	0800ce50 	.word	0x0800ce50
 8005754:	0800ce74 	.word	0x0800ce74
 8005758:	40012c00 	.word	0x40012c00
 800575c:	ffff7fff 	.word	0xffff7fff
 8005760:	0800ce98 	.word	0x0800ce98

08005764 <goToNextPassStartPoint>:

/********************************** GO TO NEXT PASS START POINT ********************************************/

void goToNextPassStartPoint(){
 8005764:	b5b0      	push	{r4, r5, r7, lr}
 8005766:	af00      	add	r7, sp, #0

	printf("**********GO TO NEXT PASS STARTING POINT ! **********\r\n");
 8005768:	4b67      	ldr	r3, [pc, #412]	; (8005908 <goToNextPassStartPoint+0x1a4>)
 800576a:	0018      	movs	r0, r3
 800576c:	f002 fb3e 	bl	8007dec <puts>

	goToNextPassStartPointPass.averageSpeedAz = floorf( ( (float) (passes[0].tracking.maximumMotorSpeedAz) ) * 100000 ) / 100000;
 8005770:	4b66      	ldr	r3, [pc, #408]	; (800590c <goToNextPassStartPoint+0x1a8>)
 8005772:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005774:	4966      	ldr	r1, [pc, #408]	; (8005910 <goToNextPassStartPoint+0x1ac>)
 8005776:	1c18      	adds	r0, r3, #0
 8005778:	f7fb faec 	bl	8000d54 <__aeabi_fmul>
 800577c:	1c03      	adds	r3, r0, #0
 800577e:	1c18      	adds	r0, r3, #0
 8005780:	f006 fc72 	bl	800c068 <floorf>
 8005784:	1c03      	adds	r3, r0, #0
 8005786:	4962      	ldr	r1, [pc, #392]	; (8005910 <goToNextPassStartPoint+0x1ac>)
 8005788:	1c18      	adds	r0, r3, #0
 800578a:	f7fb f90b 	bl	80009a4 <__aeabi_fdiv>
 800578e:	1c03      	adds	r3, r0, #0
 8005790:	1c1a      	adds	r2, r3, #0
 8005792:	4b60      	ldr	r3, [pc, #384]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 8005794:	639a      	str	r2, [r3, #56]	; 0x38
	printf("The goToNextPassStartPointPass.averageSpeedAz is : %f\n", goToNextPassStartPointPass.averageSpeedAz);
 8005796:	4b5f      	ldr	r3, [pc, #380]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 8005798:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800579a:	1c18      	adds	r0, r3, #0
 800579c:	f7fd fbce 	bl	8002f3c <__aeabi_f2d>
 80057a0:	0003      	movs	r3, r0
 80057a2:	000c      	movs	r4, r1
 80057a4:	495c      	ldr	r1, [pc, #368]	; (8005918 <goToNextPassStartPoint+0x1b4>)
 80057a6:	001a      	movs	r2, r3
 80057a8:	0023      	movs	r3, r4
 80057aa:	0008      	movs	r0, r1
 80057ac:	f002 faa4 	bl	8007cf8 <iprintf>

	goToNextPassStartPointPass.startPoint.azCoordinate = floorf( ( (float) (systemPosition.azCoordinate) ) * 100000 ) / 100000;
 80057b0:	4b5a      	ldr	r3, [pc, #360]	; (800591c <goToNextPassStartPoint+0x1b8>)
 80057b2:	681b      	ldr	r3, [r3, #0]
 80057b4:	4956      	ldr	r1, [pc, #344]	; (8005910 <goToNextPassStartPoint+0x1ac>)
 80057b6:	1c18      	adds	r0, r3, #0
 80057b8:	f7fb facc 	bl	8000d54 <__aeabi_fmul>
 80057bc:	1c03      	adds	r3, r0, #0
 80057be:	1c18      	adds	r0, r3, #0
 80057c0:	f006 fc52 	bl	800c068 <floorf>
 80057c4:	1c03      	adds	r3, r0, #0
 80057c6:	4952      	ldr	r1, [pc, #328]	; (8005910 <goToNextPassStartPoint+0x1ac>)
 80057c8:	1c18      	adds	r0, r3, #0
 80057ca:	f7fb f8eb 	bl	80009a4 <__aeabi_fdiv>
 80057ce:	1c03      	adds	r3, r0, #0
 80057d0:	1c1a      	adds	r2, r3, #0
 80057d2:	4b50      	ldr	r3, [pc, #320]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 80057d4:	621a      	str	r2, [r3, #32]
	printf("The goToNextPassStartPointPass.startPoint.azCoordinate is : %f\r\n", goToNextPassStartPointPass.startPoint.azCoordinate);
 80057d6:	4b4f      	ldr	r3, [pc, #316]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 80057d8:	6a1b      	ldr	r3, [r3, #32]
 80057da:	1c18      	adds	r0, r3, #0
 80057dc:	f7fd fbae 	bl	8002f3c <__aeabi_f2d>
 80057e0:	0003      	movs	r3, r0
 80057e2:	000c      	movs	r4, r1
 80057e4:	494e      	ldr	r1, [pc, #312]	; (8005920 <goToNextPassStartPoint+0x1bc>)
 80057e6:	001a      	movs	r2, r3
 80057e8:	0023      	movs	r3, r4
 80057ea:	0008      	movs	r0, r1
 80057ec:	f002 fa84 	bl	8007cf8 <iprintf>

	goToNextPassStartPointPass.endPoint.azCoordinate = floorf( ( (float) (passes[0].startPoint.azCoordinate) ) * 100000 ) / 100000;
 80057f0:	4b46      	ldr	r3, [pc, #280]	; (800590c <goToNextPassStartPoint+0x1a8>)
 80057f2:	6a1b      	ldr	r3, [r3, #32]
 80057f4:	4946      	ldr	r1, [pc, #280]	; (8005910 <goToNextPassStartPoint+0x1ac>)
 80057f6:	1c18      	adds	r0, r3, #0
 80057f8:	f7fb faac 	bl	8000d54 <__aeabi_fmul>
 80057fc:	1c03      	adds	r3, r0, #0
 80057fe:	1c18      	adds	r0, r3, #0
 8005800:	f006 fc32 	bl	800c068 <floorf>
 8005804:	1c03      	adds	r3, r0, #0
 8005806:	4942      	ldr	r1, [pc, #264]	; (8005910 <goToNextPassStartPoint+0x1ac>)
 8005808:	1c18      	adds	r0, r3, #0
 800580a:	f7fb f8cb 	bl	80009a4 <__aeabi_fdiv>
 800580e:	1c03      	adds	r3, r0, #0
 8005810:	1c1a      	adds	r2, r3, #0
 8005812:	4b40      	ldr	r3, [pc, #256]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 8005814:	629a      	str	r2, [r3, #40]	; 0x28
	printf("The goToNextPassStartPointPass.endPoint.azCoordinate is : %f\r\n", goToNextPassStartPointPass.endPoint.azCoordinate);
 8005816:	4b3f      	ldr	r3, [pc, #252]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 8005818:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800581a:	1c18      	adds	r0, r3, #0
 800581c:	f7fd fb8e 	bl	8002f3c <__aeabi_f2d>
 8005820:	0003      	movs	r3, r0
 8005822:	000c      	movs	r4, r1
 8005824:	493f      	ldr	r1, [pc, #252]	; (8005924 <goToNextPassStartPoint+0x1c0>)
 8005826:	001a      	movs	r2, r3
 8005828:	0023      	movs	r3, r4
 800582a:	0008      	movs	r0, r1
 800582c:	f002 fa64 	bl	8007cf8 <iprintf>

	goToNextPassStartPointPass.transitTimeMinute =  floorf( ( ( fabsf(goToNextPassStartPointPass.endPoint.azCoordinate - goToNextPassStartPointPass.startPoint.azCoordinate) ) / goToNextPassStartPointPass.averageSpeedAz ) * 100000 ) / 100000;
 8005830:	4b38      	ldr	r3, [pc, #224]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 8005832:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005834:	4b37      	ldr	r3, [pc, #220]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 8005836:	6a1b      	ldr	r3, [r3, #32]
 8005838:	1c19      	adds	r1, r3, #0
 800583a:	1c10      	adds	r0, r2, #0
 800583c:	f7fb fbbc 	bl	8000fb8 <__aeabi_fsub>
 8005840:	1c03      	adds	r3, r0, #0
 8005842:	005b      	lsls	r3, r3, #1
 8005844:	085a      	lsrs	r2, r3, #1
 8005846:	4b33      	ldr	r3, [pc, #204]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 8005848:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800584a:	1c19      	adds	r1, r3, #0
 800584c:	1c10      	adds	r0, r2, #0
 800584e:	f7fb f8a9 	bl	80009a4 <__aeabi_fdiv>
 8005852:	1c03      	adds	r3, r0, #0
 8005854:	492e      	ldr	r1, [pc, #184]	; (8005910 <goToNextPassStartPoint+0x1ac>)
 8005856:	1c18      	adds	r0, r3, #0
 8005858:	f7fb fa7c 	bl	8000d54 <__aeabi_fmul>
 800585c:	1c03      	adds	r3, r0, #0
 800585e:	1c18      	adds	r0, r3, #0
 8005860:	f006 fc02 	bl	800c068 <floorf>
 8005864:	1c03      	adds	r3, r0, #0
 8005866:	492a      	ldr	r1, [pc, #168]	; (8005910 <goToNextPassStartPoint+0x1ac>)
 8005868:	1c18      	adds	r0, r3, #0
 800586a:	f7fb f89b 	bl	80009a4 <__aeabi_fdiv>
 800586e:	1c03      	adds	r3, r0, #0
 8005870:	1c1a      	adds	r2, r3, #0
 8005872:	4b28      	ldr	r3, [pc, #160]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 8005874:	619a      	str	r2, [r3, #24]
	printf("The goToNextPassStartPointPass.transitTimeMinute is : %f\r\n",goToNextPassStartPointPass.transitTimeMinute);
 8005876:	4b27      	ldr	r3, [pc, #156]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 8005878:	699b      	ldr	r3, [r3, #24]
 800587a:	1c18      	adds	r0, r3, #0
 800587c:	f7fd fb5e 	bl	8002f3c <__aeabi_f2d>
 8005880:	0003      	movs	r3, r0
 8005882:	000c      	movs	r4, r1
 8005884:	4928      	ldr	r1, [pc, #160]	; (8005928 <goToNextPassStartPoint+0x1c4>)
 8005886:	001a      	movs	r2, r3
 8005888:	0023      	movs	r3, r4
 800588a:	0008      	movs	r0, r1
 800588c:	f002 fa34 	bl	8007cf8 <iprintf>

	goToNextPassStartPointPass.transitTimeSecond = floorf( ( ( (float) (goToNextPassStartPointPass.transitTimeMinute) ) * 60.0 ) * 100000 ) / 100000;
 8005890:	4b20      	ldr	r3, [pc, #128]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 8005892:	699b      	ldr	r3, [r3, #24]
 8005894:	1c18      	adds	r0, r3, #0
 8005896:	f7fd fb51 	bl	8002f3c <__aeabi_f2d>
 800589a:	2200      	movs	r2, #0
 800589c:	4b23      	ldr	r3, [pc, #140]	; (800592c <goToNextPassStartPoint+0x1c8>)
 800589e:	f7fc fcd5 	bl	800224c <__aeabi_dmul>
 80058a2:	0003      	movs	r3, r0
 80058a4:	000c      	movs	r4, r1
 80058a6:	0018      	movs	r0, r3
 80058a8:	0021      	movs	r1, r4
 80058aa:	2200      	movs	r2, #0
 80058ac:	4b20      	ldr	r3, [pc, #128]	; (8005930 <goToNextPassStartPoint+0x1cc>)
 80058ae:	f7fc fccd 	bl	800224c <__aeabi_dmul>
 80058b2:	0003      	movs	r3, r0
 80058b4:	000c      	movs	r4, r1
 80058b6:	0018      	movs	r0, r3
 80058b8:	0021      	movs	r1, r4
 80058ba:	f7fd fb91 	bl	8002fe0 <__aeabi_d2f>
 80058be:	1c03      	adds	r3, r0, #0
 80058c0:	1c18      	adds	r0, r3, #0
 80058c2:	f006 fbd1 	bl	800c068 <floorf>
 80058c6:	1c03      	adds	r3, r0, #0
 80058c8:	4911      	ldr	r1, [pc, #68]	; (8005910 <goToNextPassStartPoint+0x1ac>)
 80058ca:	1c18      	adds	r0, r3, #0
 80058cc:	f7fb f86a 	bl	80009a4 <__aeabi_fdiv>
 80058d0:	1c03      	adds	r3, r0, #0
 80058d2:	1c1a      	adds	r2, r3, #0
 80058d4:	4b0f      	ldr	r3, [pc, #60]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 80058d6:	61da      	str	r2, [r3, #28]
	printf("The goToNextPassStartPointPass.transitTimeSecond is : %f\r\n",goToNextPassStartPointPass.transitTimeSecond);
 80058d8:	4b0e      	ldr	r3, [pc, #56]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 80058da:	69db      	ldr	r3, [r3, #28]
 80058dc:	1c18      	adds	r0, r3, #0
 80058de:	f7fd fb2d 	bl	8002f3c <__aeabi_f2d>
 80058e2:	0003      	movs	r3, r0
 80058e4:	000c      	movs	r4, r1
 80058e6:	4913      	ldr	r1, [pc, #76]	; (8005934 <goToNextPassStartPoint+0x1d0>)
 80058e8:	001a      	movs	r2, r3
 80058ea:	0023      	movs	r3, r4
 80058ec:	0008      	movs	r0, r1
 80058ee:	f002 fa03 	bl	8007cf8 <iprintf>

	goToNextPassStartPointPass.tracking.currentTimeSecond = floorf( 0 * 100000 ) / 100000;
 80058f2:	4b08      	ldr	r3, [pc, #32]	; (8005914 <goToNextPassStartPoint+0x1b0>)
 80058f4:	2200      	movs	r2, #0
 80058f6:	645a      	str	r2, [r3, #68]	; 0x44

	timerGoToNextPassStartPointStart();
 80058f8:	f001 f8c2 	bl	8006a80 <timerGoToNextPassStartPointStart>
	pwmGoToNextPassStartPointStart();
 80058fc:	f000 f81c 	bl	8005938 <pwmGoToNextPassStartPointStart>

}
 8005900:	46c0      	nop			; (mov r8, r8)
 8005902:	46bd      	mov	sp, r7
 8005904:	bdb0      	pop	{r4, r5, r7, pc}
 8005906:	46c0      	nop			; (mov r8, r8)
 8005908:	0800ceac 	.word	0x0800ceac
 800590c:	2000028c 	.word	0x2000028c
 8005910:	47c35000 	.word	0x47c35000
 8005914:	20000428 	.word	0x20000428
 8005918:	0800cee4 	.word	0x0800cee4
 800591c:	20000420 	.word	0x20000420
 8005920:	0800cf1c 	.word	0x0800cf1c
 8005924:	0800cf60 	.word	0x0800cf60
 8005928:	0800cfa0 	.word	0x0800cfa0
 800592c:	404e0000 	.word	0x404e0000
 8005930:	40f86a00 	.word	0x40f86a00
 8005934:	0800cfdc 	.word	0x0800cfdc

08005938 <pwmGoToNextPassStartPointStart>:

void pwmGoToNextPassStartPointStart(){
 8005938:	b580      	push	{r7, lr}
 800593a:	af00      	add	r7, sp, #0

	/*********** SET AZ ROTATION DIRECTION **********/

	setGoToNextPassStartPointDirectionSpeed();
 800593c:	f000 f828 	bl	8005990 <setGoToNextPassStartPointDirectionSpeed>

	/*********** AZ and EL MOTOR TURN AT THE MAXIMUM SPEED **********/

	// Timer 1 channel 1 is PA8 pin and Timer 1 channel 2 is PA9 pin
	TIM1->CCR1 = (uint16_t) 200;
 8005940:	4b11      	ldr	r3, [pc, #68]	; (8005988 <pwmGoToNextPassStartPointStart+0x50>)
 8005942:	22c8      	movs	r2, #200	; 0xc8
 8005944:	635a      	str	r2, [r3, #52]	; 0x34

	// Resets TIM1 counter
	TIM1->EGR |= TIM_EGR_UG;
 8005946:	4b10      	ldr	r3, [pc, #64]	; (8005988 <pwmGoToNextPassStartPointStart+0x50>)
 8005948:	695a      	ldr	r2, [r3, #20]
 800594a:	4b0f      	ldr	r3, [pc, #60]	; (8005988 <pwmGoToNextPassStartPointStart+0x50>)
 800594c:	2101      	movs	r1, #1
 800594e:	430a      	orrs	r2, r1
 8005950:	615a      	str	r2, [r3, #20]

	// Enable Outputs
	TIM1->CCER |= TIM_CCER_CC1E;
 8005952:	4b0d      	ldr	r3, [pc, #52]	; (8005988 <pwmGoToNextPassStartPointStart+0x50>)
 8005954:	6a1a      	ldr	r2, [r3, #32]
 8005956:	4b0c      	ldr	r3, [pc, #48]	; (8005988 <pwmGoToNextPassStartPointStart+0x50>)
 8005958:	2101      	movs	r1, #1
 800595a:	430a      	orrs	r2, r1
 800595c:	621a      	str	r2, [r3, #32]

	// Enable Main output
	TIM1->BDTR |= TIM_BDTR_MOE;
 800595e:	4b0a      	ldr	r3, [pc, #40]	; (8005988 <pwmGoToNextPassStartPointStart+0x50>)
 8005960:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005962:	4b09      	ldr	r3, [pc, #36]	; (8005988 <pwmGoToNextPassStartPointStart+0x50>)
 8005964:	2180      	movs	r1, #128	; 0x80
 8005966:	0209      	lsls	r1, r1, #8
 8005968:	430a      	orrs	r2, r1
 800596a:	645a      	str	r2, [r3, #68]	; 0x44

	// Enable TIM1
	TIM1->CR1 |= TIM_CR1_CEN;
 800596c:	4b06      	ldr	r3, [pc, #24]	; (8005988 <pwmGoToNextPassStartPointStart+0x50>)
 800596e:	681a      	ldr	r2, [r3, #0]
 8005970:	4b05      	ldr	r3, [pc, #20]	; (8005988 <pwmGoToNextPassStartPointStart+0x50>)
 8005972:	2101      	movs	r1, #1
 8005974:	430a      	orrs	r2, r1
 8005976:	601a      	str	r2, [r3, #0]

	printf("PWM GO TO NEXT PASS START POINT START\n");
 8005978:	4b04      	ldr	r3, [pc, #16]	; (800598c <pwmGoToNextPassStartPointStart+0x54>)
 800597a:	0018      	movs	r0, r3
 800597c:	f002 fa36 	bl	8007dec <puts>

}
 8005980:	46c0      	nop			; (mov r8, r8)
 8005982:	46bd      	mov	sp, r7
 8005984:	bd80      	pop	{r7, pc}
 8005986:	46c0      	nop			; (mov r8, r8)
 8005988:	40012c00 	.word	0x40012c00
 800598c:	0800d018 	.word	0x0800d018

08005990 <setGoToNextPassStartPointDirectionSpeed>:

void setGoToNextPassStartPointDirectionSpeed(){
 8005990:	b590      	push	{r4, r7, lr}
 8005992:	b083      	sub	sp, #12
 8005994:	af00      	add	r7, sp, #0

	uint32_t startPointQuarter = ( (goToNextPassStartPointPass.startPoint.azCoordinate) <= 90 ) ? 1 : ( ( (goToNextPassStartPointPass.startPoint.azCoordinate) <= 180) ? 2 : ( ( (goToNextPassStartPointPass.startPoint.azCoordinate) <= 270) ? 3 : 4 ) );
 8005996:	4bb2      	ldr	r3, [pc, #712]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005998:	6a1b      	ldr	r3, [r3, #32]
 800599a:	49b2      	ldr	r1, [pc, #712]	; (8005c64 <setGoToNextPassStartPointDirectionSpeed+0x2d4>)
 800599c:	1c18      	adds	r0, r3, #0
 800599e:	f7fa fda9 	bl	80004f4 <__aeabi_fcmple>
 80059a2:	1e03      	subs	r3, r0, #0
 80059a4:	d001      	beq.n	80059aa <setGoToNextPassStartPointDirectionSpeed+0x1a>
 80059a6:	2301      	movs	r3, #1
 80059a8:	e014      	b.n	80059d4 <setGoToNextPassStartPointDirectionSpeed+0x44>
 80059aa:	4bad      	ldr	r3, [pc, #692]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 80059ac:	6a1b      	ldr	r3, [r3, #32]
 80059ae:	49ae      	ldr	r1, [pc, #696]	; (8005c68 <setGoToNextPassStartPointDirectionSpeed+0x2d8>)
 80059b0:	1c18      	adds	r0, r3, #0
 80059b2:	f7fa fd9f 	bl	80004f4 <__aeabi_fcmple>
 80059b6:	1e03      	subs	r3, r0, #0
 80059b8:	d001      	beq.n	80059be <setGoToNextPassStartPointDirectionSpeed+0x2e>
 80059ba:	2302      	movs	r3, #2
 80059bc:	e00a      	b.n	80059d4 <setGoToNextPassStartPointDirectionSpeed+0x44>
 80059be:	4ba8      	ldr	r3, [pc, #672]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 80059c0:	6a1b      	ldr	r3, [r3, #32]
 80059c2:	49aa      	ldr	r1, [pc, #680]	; (8005c6c <setGoToNextPassStartPointDirectionSpeed+0x2dc>)
 80059c4:	1c18      	adds	r0, r3, #0
 80059c6:	f7fa fd95 	bl	80004f4 <__aeabi_fcmple>
 80059ca:	1e03      	subs	r3, r0, #0
 80059cc:	d001      	beq.n	80059d2 <setGoToNextPassStartPointDirectionSpeed+0x42>
 80059ce:	2303      	movs	r3, #3
 80059d0:	e000      	b.n	80059d4 <setGoToNextPassStartPointDirectionSpeed+0x44>
 80059d2:	2304      	movs	r3, #4
 80059d4:	607b      	str	r3, [r7, #4]
	printf("goToNextPassStartPointPass.startPoint.azCoordinate is in the quarter %ld \r\n", startPointQuarter);
 80059d6:	687a      	ldr	r2, [r7, #4]
 80059d8:	4ba5      	ldr	r3, [pc, #660]	; (8005c70 <setGoToNextPassStartPointDirectionSpeed+0x2e0>)
 80059da:	0011      	movs	r1, r2
 80059dc:	0018      	movs	r0, r3
 80059de:	f002 f98b 	bl	8007cf8 <iprintf>
	uint32_t endPointQuarter = ( (goToNextPassStartPointPass.endPoint.azCoordinate) <= 90 ) ? 1 : ( ( (goToNextPassStartPointPass.endPoint.azCoordinate) <= 180) ? 2 : ( ( (goToNextPassStartPointPass.endPoint.azCoordinate) <= 270) ? 3 : 4 ) );
 80059e2:	4b9f      	ldr	r3, [pc, #636]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 80059e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80059e6:	499f      	ldr	r1, [pc, #636]	; (8005c64 <setGoToNextPassStartPointDirectionSpeed+0x2d4>)
 80059e8:	1c18      	adds	r0, r3, #0
 80059ea:	f7fa fd83 	bl	80004f4 <__aeabi_fcmple>
 80059ee:	1e03      	subs	r3, r0, #0
 80059f0:	d001      	beq.n	80059f6 <setGoToNextPassStartPointDirectionSpeed+0x66>
 80059f2:	2301      	movs	r3, #1
 80059f4:	e014      	b.n	8005a20 <setGoToNextPassStartPointDirectionSpeed+0x90>
 80059f6:	4b9a      	ldr	r3, [pc, #616]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 80059f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80059fa:	499b      	ldr	r1, [pc, #620]	; (8005c68 <setGoToNextPassStartPointDirectionSpeed+0x2d8>)
 80059fc:	1c18      	adds	r0, r3, #0
 80059fe:	f7fa fd79 	bl	80004f4 <__aeabi_fcmple>
 8005a02:	1e03      	subs	r3, r0, #0
 8005a04:	d001      	beq.n	8005a0a <setGoToNextPassStartPointDirectionSpeed+0x7a>
 8005a06:	2302      	movs	r3, #2
 8005a08:	e00a      	b.n	8005a20 <setGoToNextPassStartPointDirectionSpeed+0x90>
 8005a0a:	4b95      	ldr	r3, [pc, #596]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005a0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005a0e:	4997      	ldr	r1, [pc, #604]	; (8005c6c <setGoToNextPassStartPointDirectionSpeed+0x2dc>)
 8005a10:	1c18      	adds	r0, r3, #0
 8005a12:	f7fa fd6f 	bl	80004f4 <__aeabi_fcmple>
 8005a16:	1e03      	subs	r3, r0, #0
 8005a18:	d001      	beq.n	8005a1e <setGoToNextPassStartPointDirectionSpeed+0x8e>
 8005a1a:	2303      	movs	r3, #3
 8005a1c:	e000      	b.n	8005a20 <setGoToNextPassStartPointDirectionSpeed+0x90>
 8005a1e:	2304      	movs	r3, #4
 8005a20:	603b      	str	r3, [r7, #0]
	printf("goToNextPassStartPointPass.endPoint.azCoordinate is in the quarter %ld \r\n", endPointQuarter);
 8005a22:	683a      	ldr	r2, [r7, #0]
 8005a24:	4b93      	ldr	r3, [pc, #588]	; (8005c74 <setGoToNextPassStartPointDirectionSpeed+0x2e4>)
 8005a26:	0011      	movs	r1, r2
 8005a28:	0018      	movs	r0, r3
 8005a2a:	f002 f965 	bl	8007cf8 <iprintf>

	switch (startPointQuarter){
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	2b02      	cmp	r3, #2
 8005a32:	d04e      	beq.n	8005ad2 <setGoToNextPassStartPointDirectionSpeed+0x142>
 8005a34:	d802      	bhi.n	8005a3c <setGoToNextPassStartPointDirectionSpeed+0xac>
 8005a36:	2b01      	cmp	r3, #1
 8005a38:	d007      	beq.n	8005a4a <setGoToNextPassStartPointDirectionSpeed+0xba>
			}

			break;

		default:
			break;
 8005a3a:	e123      	b.n	8005c84 <setGoToNextPassStartPointDirectionSpeed+0x2f4>
	switch (startPointQuarter){
 8005a3c:	2b03      	cmp	r3, #3
 8005a3e:	d100      	bne.n	8005a42 <setGoToNextPassStartPointDirectionSpeed+0xb2>
 8005a40:	e08b      	b.n	8005b5a <setGoToNextPassStartPointDirectionSpeed+0x1ca>
 8005a42:	2b04      	cmp	r3, #4
 8005a44:	d100      	bne.n	8005a48 <setGoToNextPassStartPointDirectionSpeed+0xb8>
 8005a46:	e0cc      	b.n	8005be2 <setGoToNextPassStartPointDirectionSpeed+0x252>
			break;
 8005a48:	e11c      	b.n	8005c84 <setGoToNextPassStartPointDirectionSpeed+0x2f4>
			switch (endPointQuarter){
 8005a4a:	683b      	ldr	r3, [r7, #0]
 8005a4c:	2b02      	cmp	r3, #2
 8005a4e:	d01c      	beq.n	8005a8a <setGoToNextPassStartPointDirectionSpeed+0xfa>
 8005a50:	d802      	bhi.n	8005a58 <setGoToNextPassStartPointDirectionSpeed+0xc8>
 8005a52:	2b01      	cmp	r3, #1
 8005a54:	d005      	beq.n	8005a62 <setGoToNextPassStartPointDirectionSpeed+0xd2>
					break;
 8005a56:	e03b      	b.n	8005ad0 <setGoToNextPassStartPointDirectionSpeed+0x140>
			switch (endPointQuarter){
 8005a58:	2b03      	cmp	r3, #3
 8005a5a:	d01b      	beq.n	8005a94 <setGoToNextPassStartPointDirectionSpeed+0x104>
 8005a5c:	2b04      	cmp	r3, #4
 8005a5e:	d032      	beq.n	8005ac6 <setGoToNextPassStartPointDirectionSpeed+0x136>
					break;
 8005a60:	e036      	b.n	8005ad0 <setGoToNextPassStartPointDirectionSpeed+0x140>
					if( (goToNextPassStartPointPass.endPoint.azCoordinate) >= (goToNextPassStartPointPass.startPoint.azCoordinate) ){
 8005a62:	4b7f      	ldr	r3, [pc, #508]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005a64:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005a66:	4b7e      	ldr	r3, [pc, #504]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005a68:	6a1b      	ldr	r3, [r3, #32]
 8005a6a:	1c19      	adds	r1, r3, #0
 8005a6c:	1c10      	adds	r0, r2, #0
 8005a6e:	f7fa fd55 	bl	800051c <__aeabi_fcmpge>
 8005a72:	1e03      	subs	r3, r0, #0
 8005a74:	d004      	beq.n	8005a80 <setGoToNextPassStartPointDirectionSpeed+0xf0>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005a76:	4b7a      	ldr	r3, [pc, #488]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005a78:	2260      	movs	r2, #96	; 0x60
 8005a7a:	2101      	movs	r1, #1
 8005a7c:	5499      	strb	r1, [r3, r2]
					break;
 8005a7e:	e027      	b.n	8005ad0 <setGoToNextPassStartPointDirectionSpeed+0x140>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005a80:	4b77      	ldr	r3, [pc, #476]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005a82:	2260      	movs	r2, #96	; 0x60
 8005a84:	2100      	movs	r1, #0
 8005a86:	5499      	strb	r1, [r3, r2]
					break;
 8005a88:	e022      	b.n	8005ad0 <setGoToNextPassStartPointDirectionSpeed+0x140>
					goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005a8a:	4b75      	ldr	r3, [pc, #468]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005a8c:	2260      	movs	r2, #96	; 0x60
 8005a8e:	2101      	movs	r1, #1
 8005a90:	5499      	strb	r1, [r3, r2]
					break;
 8005a92:	e01d      	b.n	8005ad0 <setGoToNextPassStartPointDirectionSpeed+0x140>
					if( (goToNextPassStartPointPass.endPoint.azCoordinate) <= (goToNextPassStartPointPass.startPoint.azCoordinate + 180) ){
 8005a94:	4b72      	ldr	r3, [pc, #456]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005a96:	6a9c      	ldr	r4, [r3, #40]	; 0x28
 8005a98:	4b71      	ldr	r3, [pc, #452]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005a9a:	6a1b      	ldr	r3, [r3, #32]
 8005a9c:	4972      	ldr	r1, [pc, #456]	; (8005c68 <setGoToNextPassStartPointDirectionSpeed+0x2d8>)
 8005a9e:	1c18      	adds	r0, r3, #0
 8005aa0:	f7fa fde6 	bl	8000670 <__aeabi_fadd>
 8005aa4:	1c03      	adds	r3, r0, #0
 8005aa6:	1c19      	adds	r1, r3, #0
 8005aa8:	1c20      	adds	r0, r4, #0
 8005aaa:	f7fa fd23 	bl	80004f4 <__aeabi_fcmple>
 8005aae:	1e03      	subs	r3, r0, #0
 8005ab0:	d004      	beq.n	8005abc <setGoToNextPassStartPointDirectionSpeed+0x12c>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005ab2:	4b6b      	ldr	r3, [pc, #428]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005ab4:	2260      	movs	r2, #96	; 0x60
 8005ab6:	2101      	movs	r1, #1
 8005ab8:	5499      	strb	r1, [r3, r2]
					break;
 8005aba:	e009      	b.n	8005ad0 <setGoToNextPassStartPointDirectionSpeed+0x140>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005abc:	4b68      	ldr	r3, [pc, #416]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005abe:	2260      	movs	r2, #96	; 0x60
 8005ac0:	2100      	movs	r1, #0
 8005ac2:	5499      	strb	r1, [r3, r2]
					break;
 8005ac4:	e004      	b.n	8005ad0 <setGoToNextPassStartPointDirectionSpeed+0x140>
					goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005ac6:	4b66      	ldr	r3, [pc, #408]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005ac8:	2260      	movs	r2, #96	; 0x60
 8005aca:	2100      	movs	r1, #0
 8005acc:	5499      	strb	r1, [r3, r2]
					break;
 8005ace:	46c0      	nop			; (mov r8, r8)
			break;
 8005ad0:	e0d8      	b.n	8005c84 <setGoToNextPassStartPointDirectionSpeed+0x2f4>
			switch (endPointQuarter){
 8005ad2:	683b      	ldr	r3, [r7, #0]
 8005ad4:	2b02      	cmp	r3, #2
 8005ad6:	d00d      	beq.n	8005af4 <setGoToNextPassStartPointDirectionSpeed+0x164>
 8005ad8:	d802      	bhi.n	8005ae0 <setGoToNextPassStartPointDirectionSpeed+0x150>
 8005ada:	2b01      	cmp	r3, #1
 8005adc:	d005      	beq.n	8005aea <setGoToNextPassStartPointDirectionSpeed+0x15a>
					break;
 8005ade:	e03b      	b.n	8005b58 <setGoToNextPassStartPointDirectionSpeed+0x1c8>
			switch (endPointQuarter){
 8005ae0:	2b03      	cmp	r3, #3
 8005ae2:	d01b      	beq.n	8005b1c <setGoToNextPassStartPointDirectionSpeed+0x18c>
 8005ae4:	2b04      	cmp	r3, #4
 8005ae6:	d01e      	beq.n	8005b26 <setGoToNextPassStartPointDirectionSpeed+0x196>
					break;
 8005ae8:	e036      	b.n	8005b58 <setGoToNextPassStartPointDirectionSpeed+0x1c8>
					goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005aea:	4b5d      	ldr	r3, [pc, #372]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005aec:	2260      	movs	r2, #96	; 0x60
 8005aee:	2100      	movs	r1, #0
 8005af0:	5499      	strb	r1, [r3, r2]
					break;
 8005af2:	e031      	b.n	8005b58 <setGoToNextPassStartPointDirectionSpeed+0x1c8>
					if( (goToNextPassStartPointPass.endPoint.azCoordinate) < (goToNextPassStartPointPass.startPoint.azCoordinate) ){
 8005af4:	4b5a      	ldr	r3, [pc, #360]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005af6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005af8:	4b59      	ldr	r3, [pc, #356]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005afa:	6a1b      	ldr	r3, [r3, #32]
 8005afc:	1c19      	adds	r1, r3, #0
 8005afe:	1c10      	adds	r0, r2, #0
 8005b00:	f7fa fcee 	bl	80004e0 <__aeabi_fcmplt>
 8005b04:	1e03      	subs	r3, r0, #0
 8005b06:	d004      	beq.n	8005b12 <setGoToNextPassStartPointDirectionSpeed+0x182>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005b08:	4b55      	ldr	r3, [pc, #340]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b0a:	2260      	movs	r2, #96	; 0x60
 8005b0c:	2100      	movs	r1, #0
 8005b0e:	5499      	strb	r1, [r3, r2]
					break;
 8005b10:	e022      	b.n	8005b58 <setGoToNextPassStartPointDirectionSpeed+0x1c8>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005b12:	4b53      	ldr	r3, [pc, #332]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b14:	2260      	movs	r2, #96	; 0x60
 8005b16:	2101      	movs	r1, #1
 8005b18:	5499      	strb	r1, [r3, r2]
					break;
 8005b1a:	e01d      	b.n	8005b58 <setGoToNextPassStartPointDirectionSpeed+0x1c8>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005b1c:	4b50      	ldr	r3, [pc, #320]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b1e:	2260      	movs	r2, #96	; 0x60
 8005b20:	2101      	movs	r1, #1
 8005b22:	5499      	strb	r1, [r3, r2]
					break;
 8005b24:	e018      	b.n	8005b58 <setGoToNextPassStartPointDirectionSpeed+0x1c8>
					if( (goToNextPassStartPointPass.endPoint.azCoordinate) <= ( (goToNextPassStartPointPass.startPoint.azCoordinate) + 180 ) ){
 8005b26:	4b4e      	ldr	r3, [pc, #312]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b28:	6a9c      	ldr	r4, [r3, #40]	; 0x28
 8005b2a:	4b4d      	ldr	r3, [pc, #308]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b2c:	6a1b      	ldr	r3, [r3, #32]
 8005b2e:	494e      	ldr	r1, [pc, #312]	; (8005c68 <setGoToNextPassStartPointDirectionSpeed+0x2d8>)
 8005b30:	1c18      	adds	r0, r3, #0
 8005b32:	f7fa fd9d 	bl	8000670 <__aeabi_fadd>
 8005b36:	1c03      	adds	r3, r0, #0
 8005b38:	1c19      	adds	r1, r3, #0
 8005b3a:	1c20      	adds	r0, r4, #0
 8005b3c:	f7fa fcda 	bl	80004f4 <__aeabi_fcmple>
 8005b40:	1e03      	subs	r3, r0, #0
 8005b42:	d004      	beq.n	8005b4e <setGoToNextPassStartPointDirectionSpeed+0x1be>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005b44:	4b46      	ldr	r3, [pc, #280]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b46:	2260      	movs	r2, #96	; 0x60
 8005b48:	2101      	movs	r1, #1
 8005b4a:	5499      	strb	r1, [r3, r2]
					break;
 8005b4c:	e003      	b.n	8005b56 <setGoToNextPassStartPointDirectionSpeed+0x1c6>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005b4e:	4b44      	ldr	r3, [pc, #272]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b50:	2260      	movs	r2, #96	; 0x60
 8005b52:	2100      	movs	r1, #0
 8005b54:	5499      	strb	r1, [r3, r2]
					break;
 8005b56:	46c0      	nop			; (mov r8, r8)
			break;
 8005b58:	e094      	b.n	8005c84 <setGoToNextPassStartPointDirectionSpeed+0x2f4>
			switch (endPointQuarter){
 8005b5a:	683b      	ldr	r3, [r7, #0]
 8005b5c:	2b02      	cmp	r3, #2
 8005b5e:	d021      	beq.n	8005ba4 <setGoToNextPassStartPointDirectionSpeed+0x214>
 8005b60:	d802      	bhi.n	8005b68 <setGoToNextPassStartPointDirectionSpeed+0x1d8>
 8005b62:	2b01      	cmp	r3, #1
 8005b64:	d005      	beq.n	8005b72 <setGoToNextPassStartPointDirectionSpeed+0x1e2>
					break;
 8005b66:	e03b      	b.n	8005be0 <setGoToNextPassStartPointDirectionSpeed+0x250>
			switch (endPointQuarter){
 8005b68:	2b03      	cmp	r3, #3
 8005b6a:	d020      	beq.n	8005bae <setGoToNextPassStartPointDirectionSpeed+0x21e>
 8005b6c:	2b04      	cmp	r3, #4
 8005b6e:	d032      	beq.n	8005bd6 <setGoToNextPassStartPointDirectionSpeed+0x246>
					break;
 8005b70:	e036      	b.n	8005be0 <setGoToNextPassStartPointDirectionSpeed+0x250>
					if( (goToNextPassStartPointPass.endPoint.azCoordinate) < ( (goToNextPassStartPointPass.startPoint.azCoordinate) - 180 ) ){
 8005b72:	4b3b      	ldr	r3, [pc, #236]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b74:	6a9c      	ldr	r4, [r3, #40]	; 0x28
 8005b76:	4b3a      	ldr	r3, [pc, #232]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b78:	6a1b      	ldr	r3, [r3, #32]
 8005b7a:	493b      	ldr	r1, [pc, #236]	; (8005c68 <setGoToNextPassStartPointDirectionSpeed+0x2d8>)
 8005b7c:	1c18      	adds	r0, r3, #0
 8005b7e:	f7fb fa1b 	bl	8000fb8 <__aeabi_fsub>
 8005b82:	1c03      	adds	r3, r0, #0
 8005b84:	1c19      	adds	r1, r3, #0
 8005b86:	1c20      	adds	r0, r4, #0
 8005b88:	f7fa fcaa 	bl	80004e0 <__aeabi_fcmplt>
 8005b8c:	1e03      	subs	r3, r0, #0
 8005b8e:	d004      	beq.n	8005b9a <setGoToNextPassStartPointDirectionSpeed+0x20a>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005b90:	4b33      	ldr	r3, [pc, #204]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b92:	2260      	movs	r2, #96	; 0x60
 8005b94:	2101      	movs	r1, #1
 8005b96:	5499      	strb	r1, [r3, r2]
					break;
 8005b98:	e022      	b.n	8005be0 <setGoToNextPassStartPointDirectionSpeed+0x250>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005b9a:	4b31      	ldr	r3, [pc, #196]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005b9c:	2260      	movs	r2, #96	; 0x60
 8005b9e:	2100      	movs	r1, #0
 8005ba0:	5499      	strb	r1, [r3, r2]
					break;
 8005ba2:	e01d      	b.n	8005be0 <setGoToNextPassStartPointDirectionSpeed+0x250>
					goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005ba4:	4b2e      	ldr	r3, [pc, #184]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005ba6:	2260      	movs	r2, #96	; 0x60
 8005ba8:	2100      	movs	r1, #0
 8005baa:	5499      	strb	r1, [r3, r2]
					break;
 8005bac:	e018      	b.n	8005be0 <setGoToNextPassStartPointDirectionSpeed+0x250>
					if( (goToNextPassStartPointPass.endPoint.azCoordinate) < (goToNextPassStartPointPass.startPoint.azCoordinate) ){
 8005bae:	4b2c      	ldr	r3, [pc, #176]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005bb0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005bb2:	4b2b      	ldr	r3, [pc, #172]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005bb4:	6a1b      	ldr	r3, [r3, #32]
 8005bb6:	1c19      	adds	r1, r3, #0
 8005bb8:	1c10      	adds	r0, r2, #0
 8005bba:	f7fa fc91 	bl	80004e0 <__aeabi_fcmplt>
 8005bbe:	1e03      	subs	r3, r0, #0
 8005bc0:	d004      	beq.n	8005bcc <setGoToNextPassStartPointDirectionSpeed+0x23c>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005bc2:	4b27      	ldr	r3, [pc, #156]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005bc4:	2260      	movs	r2, #96	; 0x60
 8005bc6:	2100      	movs	r1, #0
 8005bc8:	5499      	strb	r1, [r3, r2]
					break;
 8005bca:	e009      	b.n	8005be0 <setGoToNextPassStartPointDirectionSpeed+0x250>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005bcc:	4b24      	ldr	r3, [pc, #144]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005bce:	2260      	movs	r2, #96	; 0x60
 8005bd0:	2101      	movs	r1, #1
 8005bd2:	5499      	strb	r1, [r3, r2]
					break;
 8005bd4:	e004      	b.n	8005be0 <setGoToNextPassStartPointDirectionSpeed+0x250>
					goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005bd6:	4b22      	ldr	r3, [pc, #136]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005bd8:	2260      	movs	r2, #96	; 0x60
 8005bda:	2101      	movs	r1, #1
 8005bdc:	5499      	strb	r1, [r3, r2]
					break;
 8005bde:	46c0      	nop			; (mov r8, r8)
			break;
 8005be0:	e050      	b.n	8005c84 <setGoToNextPassStartPointDirectionSpeed+0x2f4>
			switch (endPointQuarter){
 8005be2:	683b      	ldr	r3, [r7, #0]
 8005be4:	2b02      	cmp	r3, #2
 8005be6:	d00d      	beq.n	8005c04 <setGoToNextPassStartPointDirectionSpeed+0x274>
 8005be8:	d802      	bhi.n	8005bf0 <setGoToNextPassStartPointDirectionSpeed+0x260>
 8005bea:	2b01      	cmp	r3, #1
 8005bec:	d005      	beq.n	8005bfa <setGoToNextPassStartPointDirectionSpeed+0x26a>
					break;
 8005bee:	e048      	b.n	8005c82 <setGoToNextPassStartPointDirectionSpeed+0x2f2>
			switch (endPointQuarter){
 8005bf0:	2b03      	cmp	r3, #3
 8005bf2:	d020      	beq.n	8005c36 <setGoToNextPassStartPointDirectionSpeed+0x2a6>
 8005bf4:	2b04      	cmp	r3, #4
 8005bf6:	d023      	beq.n	8005c40 <setGoToNextPassStartPointDirectionSpeed+0x2b0>
					break;
 8005bf8:	e043      	b.n	8005c82 <setGoToNextPassStartPointDirectionSpeed+0x2f2>
					goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005bfa:	4b19      	ldr	r3, [pc, #100]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005bfc:	2260      	movs	r2, #96	; 0x60
 8005bfe:	2101      	movs	r1, #1
 8005c00:	5499      	strb	r1, [r3, r2]
					break;
 8005c02:	e03e      	b.n	8005c82 <setGoToNextPassStartPointDirectionSpeed+0x2f2>
					if( (goToNextPassStartPointPass.endPoint.azCoordinate) > ( (goToNextPassStartPointPass.startPoint.azCoordinate) - 180 ) ){
 8005c04:	4b16      	ldr	r3, [pc, #88]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005c06:	6a9c      	ldr	r4, [r3, #40]	; 0x28
 8005c08:	4b15      	ldr	r3, [pc, #84]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005c0a:	6a1b      	ldr	r3, [r3, #32]
 8005c0c:	4916      	ldr	r1, [pc, #88]	; (8005c68 <setGoToNextPassStartPointDirectionSpeed+0x2d8>)
 8005c0e:	1c18      	adds	r0, r3, #0
 8005c10:	f7fb f9d2 	bl	8000fb8 <__aeabi_fsub>
 8005c14:	1c03      	adds	r3, r0, #0
 8005c16:	1c19      	adds	r1, r3, #0
 8005c18:	1c20      	adds	r0, r4, #0
 8005c1a:	f7fa fc75 	bl	8000508 <__aeabi_fcmpgt>
 8005c1e:	1e03      	subs	r3, r0, #0
 8005c20:	d004      	beq.n	8005c2c <setGoToNextPassStartPointDirectionSpeed+0x29c>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005c22:	4b0f      	ldr	r3, [pc, #60]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005c24:	2260      	movs	r2, #96	; 0x60
 8005c26:	2100      	movs	r1, #0
 8005c28:	5499      	strb	r1, [r3, r2]
					break;
 8005c2a:	e02a      	b.n	8005c82 <setGoToNextPassStartPointDirectionSpeed+0x2f2>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005c2c:	4b0c      	ldr	r3, [pc, #48]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005c2e:	2260      	movs	r2, #96	; 0x60
 8005c30:	2101      	movs	r1, #1
 8005c32:	5499      	strb	r1, [r3, r2]
					break;
 8005c34:	e025      	b.n	8005c82 <setGoToNextPassStartPointDirectionSpeed+0x2f2>
					goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005c36:	4b0a      	ldr	r3, [pc, #40]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005c38:	2260      	movs	r2, #96	; 0x60
 8005c3a:	2100      	movs	r1, #0
 8005c3c:	5499      	strb	r1, [r3, r2]
					break;
 8005c3e:	e020      	b.n	8005c82 <setGoToNextPassStartPointDirectionSpeed+0x2f2>
					if( (goToNextPassStartPointPass.endPoint.azCoordinate) < (goToNextPassStartPointPass.startPoint.azCoordinate) ){
 8005c40:	4b07      	ldr	r3, [pc, #28]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005c42:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005c44:	4b06      	ldr	r3, [pc, #24]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005c46:	6a1b      	ldr	r3, [r3, #32]
 8005c48:	1c19      	adds	r1, r3, #0
 8005c4a:	1c10      	adds	r0, r2, #0
 8005c4c:	f7fa fc48 	bl	80004e0 <__aeabi_fcmplt>
 8005c50:	1e03      	subs	r3, r0, #0
 8005c52:	d011      	beq.n	8005c78 <setGoToNextPassStartPointDirectionSpeed+0x2e8>
						goToNextPassStartPointPass.tracking.directionSpeedAz = 0;
 8005c54:	4b02      	ldr	r3, [pc, #8]	; (8005c60 <setGoToNextPassStartPointDirectionSpeed+0x2d0>)
 8005c56:	2260      	movs	r2, #96	; 0x60
 8005c58:	2100      	movs	r1, #0
 8005c5a:	5499      	strb	r1, [r3, r2]
					break;
 8005c5c:	e010      	b.n	8005c80 <setGoToNextPassStartPointDirectionSpeed+0x2f0>
 8005c5e:	46c0      	nop			; (mov r8, r8)
 8005c60:	20000428 	.word	0x20000428
 8005c64:	42b40000 	.word	0x42b40000
 8005c68:	43340000 	.word	0x43340000
 8005c6c:	43870000 	.word	0x43870000
 8005c70:	0800d040 	.word	0x0800d040
 8005c74:	0800d08c 	.word	0x0800d08c
						goToNextPassStartPointPass.tracking.directionSpeedAz = 1;
 8005c78:	4b1b      	ldr	r3, [pc, #108]	; (8005ce8 <setGoToNextPassStartPointDirectionSpeed+0x358>)
 8005c7a:	2260      	movs	r2, #96	; 0x60
 8005c7c:	2101      	movs	r1, #1
 8005c7e:	5499      	strb	r1, [r3, r2]
					break;
 8005c80:	46c0      	nop			; (mov r8, r8)
			break;
 8005c82:	46c0      	nop			; (mov r8, r8)
	}

	// Clockwise AZ
	if(goToNextPassStartPointPass.tracking.directionSpeedAz == 1){
 8005c84:	4b18      	ldr	r3, [pc, #96]	; (8005ce8 <setGoToNextPassStartPointDirectionSpeed+0x358>)
 8005c86:	2260      	movs	r2, #96	; 0x60
 8005c88:	5c9b      	ldrb	r3, [r3, r2]
 8005c8a:	2b01      	cmp	r3, #1
 8005c8c:	d114      	bne.n	8005cb8 <setGoToNextPassStartPointDirectionSpeed+0x328>

		printf("goToNextPassStartPointPass.tracking.directionSpeedAz is clockwise \r\n");
 8005c8e:	4b17      	ldr	r3, [pc, #92]	; (8005cec <setGoToNextPassStartPointDirectionSpeed+0x35c>)
 8005c90:	0018      	movs	r0, r3
 8005c92:	f002 f8ab 	bl	8007dec <puts>

		// AZ direction pins are PA0 and PA1
		GPIOA->ODR |= GPIO_ODR_0; // Set PA0 value to high
 8005c96:	2390      	movs	r3, #144	; 0x90
 8005c98:	05db      	lsls	r3, r3, #23
 8005c9a:	695a      	ldr	r2, [r3, #20]
 8005c9c:	2390      	movs	r3, #144	; 0x90
 8005c9e:	05db      	lsls	r3, r3, #23
 8005ca0:	2101      	movs	r1, #1
 8005ca2:	430a      	orrs	r2, r1
 8005ca4:	615a      	str	r2, [r3, #20]
		GPIOA->ODR &= ~(GPIO_ODR_1); // Set PA1 value to low
 8005ca6:	2390      	movs	r3, #144	; 0x90
 8005ca8:	05db      	lsls	r3, r3, #23
 8005caa:	695a      	ldr	r2, [r3, #20]
 8005cac:	2390      	movs	r3, #144	; 0x90
 8005cae:	05db      	lsls	r3, r3, #23
 8005cb0:	2102      	movs	r1, #2
 8005cb2:	438a      	bics	r2, r1
 8005cb4:	615a      	str	r2, [r3, #20]
		GPIOA->ODR |= GPIO_ODR_1; // Set PA1 value to high
		GPIOA->ODR &= ~(GPIO_ODR_0); // Set PA0 value to low

	}

}
 8005cb6:	e013      	b.n	8005ce0 <setGoToNextPassStartPointDirectionSpeed+0x350>
		printf("goToNextPassStartPointPass.tracking.directionSpeedAz is counter-clockwise \r\n");
 8005cb8:	4b0d      	ldr	r3, [pc, #52]	; (8005cf0 <setGoToNextPassStartPointDirectionSpeed+0x360>)
 8005cba:	0018      	movs	r0, r3
 8005cbc:	f002 f896 	bl	8007dec <puts>
		GPIOA->ODR |= GPIO_ODR_1; // Set PA1 value to high
 8005cc0:	2390      	movs	r3, #144	; 0x90
 8005cc2:	05db      	lsls	r3, r3, #23
 8005cc4:	695a      	ldr	r2, [r3, #20]
 8005cc6:	2390      	movs	r3, #144	; 0x90
 8005cc8:	05db      	lsls	r3, r3, #23
 8005cca:	2102      	movs	r1, #2
 8005ccc:	430a      	orrs	r2, r1
 8005cce:	615a      	str	r2, [r3, #20]
		GPIOA->ODR &= ~(GPIO_ODR_0); // Set PA0 value to low
 8005cd0:	2390      	movs	r3, #144	; 0x90
 8005cd2:	05db      	lsls	r3, r3, #23
 8005cd4:	695a      	ldr	r2, [r3, #20]
 8005cd6:	2390      	movs	r3, #144	; 0x90
 8005cd8:	05db      	lsls	r3, r3, #23
 8005cda:	2101      	movs	r1, #1
 8005cdc:	438a      	bics	r2, r1
 8005cde:	615a      	str	r2, [r3, #20]
}
 8005ce0:	46c0      	nop			; (mov r8, r8)
 8005ce2:	46bd      	mov	sp, r7
 8005ce4:	b003      	add	sp, #12
 8005ce6:	bd90      	pop	{r4, r7, pc}
 8005ce8:	20000428 	.word	0x20000428
 8005cec:	0800d0d8 	.word	0x0800d0d8
 8005cf0:	0800d11c 	.word	0x0800d11c

08005cf4 <pwmGoToNextPassStartPointStop>:

void pwmGoToNextPassStartPointStop(){
 8005cf4:	b580      	push	{r7, lr}
 8005cf6:	af00      	add	r7, sp, #0

	// Set PA8 pwm value to 0
	TIM1->CCR1 = (uint16_t) 0;
 8005cf8:	4b1f      	ldr	r3, [pc, #124]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005cfa:	2200      	movs	r2, #0
 8005cfc:	635a      	str	r2, [r3, #52]	; 0x34

	// Disable TIM1
	TIM1->CR1 &= ~TIM_CR1_CEN;
 8005cfe:	4b1e      	ldr	r3, [pc, #120]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005d00:	681a      	ldr	r2, [r3, #0]
 8005d02:	4b1d      	ldr	r3, [pc, #116]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005d04:	2101      	movs	r1, #1
 8005d06:	438a      	bics	r2, r1
 8005d08:	601a      	str	r2, [r3, #0]

	// Resets TIM1 counter
	TIM1->EGR |= TIM_EGR_UG;
 8005d0a:	4b1b      	ldr	r3, [pc, #108]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005d0c:	695a      	ldr	r2, [r3, #20]
 8005d0e:	4b1a      	ldr	r3, [pc, #104]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005d10:	2101      	movs	r1, #1
 8005d12:	430a      	orrs	r2, r1
 8005d14:	615a      	str	r2, [r3, #20]

	// Disable output
	TIM1->CCER &= ~TIM_CCER_CC1E;
 8005d16:	4b18      	ldr	r3, [pc, #96]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005d18:	6a1a      	ldr	r2, [r3, #32]
 8005d1a:	4b17      	ldr	r3, [pc, #92]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005d1c:	2101      	movs	r1, #1
 8005d1e:	438a      	bics	r2, r1
 8005d20:	621a      	str	r2, [r3, #32]
	TIM1->CCER &= ~TIM_CCER_CC2E;
 8005d22:	4b15      	ldr	r3, [pc, #84]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005d24:	6a1a      	ldr	r2, [r3, #32]
 8005d26:	4b14      	ldr	r3, [pc, #80]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005d28:	2110      	movs	r1, #16
 8005d2a:	438a      	bics	r2, r1
 8005d2c:	621a      	str	r2, [r3, #32]

	// Disable Main output
	TIM1->BDTR &= ~TIM_BDTR_MOE;
 8005d2e:	4b12      	ldr	r3, [pc, #72]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005d30:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005d32:	4b11      	ldr	r3, [pc, #68]	; (8005d78 <pwmGoToNextPassStartPointStop+0x84>)
 8005d34:	4911      	ldr	r1, [pc, #68]	; (8005d7c <pwmGoToNextPassStartPointStop+0x88>)
 8005d36:	400a      	ands	r2, r1
 8005d38:	645a      	str	r2, [r3, #68]	; 0x44

	// Disable azimut pins
	GPIOA->ODR &= ~(GPIO_ODR_0); // Set PA0 value to low
 8005d3a:	2390      	movs	r3, #144	; 0x90
 8005d3c:	05db      	lsls	r3, r3, #23
 8005d3e:	695a      	ldr	r2, [r3, #20]
 8005d40:	2390      	movs	r3, #144	; 0x90
 8005d42:	05db      	lsls	r3, r3, #23
 8005d44:	2101      	movs	r1, #1
 8005d46:	438a      	bics	r2, r1
 8005d48:	615a      	str	r2, [r3, #20]
	GPIOA->ODR &= ~(GPIO_ODR_1); // Set PA1 value to low
 8005d4a:	2390      	movs	r3, #144	; 0x90
 8005d4c:	05db      	lsls	r3, r3, #23
 8005d4e:	695a      	ldr	r2, [r3, #20]
 8005d50:	2390      	movs	r3, #144	; 0x90
 8005d52:	05db      	lsls	r3, r3, #23
 8005d54:	2102      	movs	r1, #2
 8005d56:	438a      	bics	r2, r1
 8005d58:	615a      	str	r2, [r3, #20]

	systemPosition.azCoordinate = passes[0].startPoint.azCoordinate;
 8005d5a:	4b09      	ldr	r3, [pc, #36]	; (8005d80 <pwmGoToNextPassStartPointStop+0x8c>)
 8005d5c:	6a1a      	ldr	r2, [r3, #32]
 8005d5e:	4b09      	ldr	r3, [pc, #36]	; (8005d84 <pwmGoToNextPassStartPointStop+0x90>)
 8005d60:	601a      	str	r2, [r3, #0]
	systemPosition.elCoordinate = passes[0].startPoint.elCoordinate;
 8005d62:	4b07      	ldr	r3, [pc, #28]	; (8005d80 <pwmGoToNextPassStartPointStop+0x8c>)
 8005d64:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005d66:	4b07      	ldr	r3, [pc, #28]	; (8005d84 <pwmGoToNextPassStartPointStop+0x90>)
 8005d68:	605a      	str	r2, [r3, #4]

	printf("PWM GO TO NEXT PASS START POINT STOP\n");
 8005d6a:	4b07      	ldr	r3, [pc, #28]	; (8005d88 <pwmGoToNextPassStartPointStop+0x94>)
 8005d6c:	0018      	movs	r0, r3
 8005d6e:	f002 f83d 	bl	8007dec <puts>

}
 8005d72:	46c0      	nop			; (mov r8, r8)
 8005d74:	46bd      	mov	sp, r7
 8005d76:	bd80      	pop	{r7, pc}
 8005d78:	40012c00 	.word	0x40012c00
 8005d7c:	ffff7fff 	.word	0xffff7fff
 8005d80:	2000028c 	.word	0x2000028c
 8005d84:	20000420 	.word	0x20000420
 8005d88:	0800d168 	.word	0x0800d168

08005d8c <pwmPassStart>:

/********************************** PASS ********************************************/

void pwmPassStart(){
 8005d8c:	b580      	push	{r7, lr}
 8005d8e:	af00      	add	r7, sp, #0

	setPassDirectionSpeed();
 8005d90:	f000 f82a 	bl	8005de8 <setPassDirectionSpeed>

	// Set default PWM values
	TIM1->CCR1 = 0x0000;
 8005d94:	4b12      	ldr	r3, [pc, #72]	; (8005de0 <pwmPassStart+0x54>)
 8005d96:	2200      	movs	r2, #0
 8005d98:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR2 = 0x0000;
 8005d9a:	4b11      	ldr	r3, [pc, #68]	; (8005de0 <pwmPassStart+0x54>)
 8005d9c:	2200      	movs	r2, #0
 8005d9e:	639a      	str	r2, [r3, #56]	; 0x38

	// Resets TIM1 counter
	TIM1->EGR |= TIM_EGR_UG;
 8005da0:	4b0f      	ldr	r3, [pc, #60]	; (8005de0 <pwmPassStart+0x54>)
 8005da2:	695a      	ldr	r2, [r3, #20]
 8005da4:	4b0e      	ldr	r3, [pc, #56]	; (8005de0 <pwmPassStart+0x54>)
 8005da6:	2101      	movs	r1, #1
 8005da8:	430a      	orrs	r2, r1
 8005daa:	615a      	str	r2, [r3, #20]

	// Enable Outputs
	TIM1->CCER |= TIM_CCER_CC1E | TIM_CCER_CC2E;
 8005dac:	4b0c      	ldr	r3, [pc, #48]	; (8005de0 <pwmPassStart+0x54>)
 8005dae:	6a1a      	ldr	r2, [r3, #32]
 8005db0:	4b0b      	ldr	r3, [pc, #44]	; (8005de0 <pwmPassStart+0x54>)
 8005db2:	2111      	movs	r1, #17
 8005db4:	430a      	orrs	r2, r1
 8005db6:	621a      	str	r2, [r3, #32]

	// Enable Main output
	TIM1->BDTR |= TIM_BDTR_MOE;
 8005db8:	4b09      	ldr	r3, [pc, #36]	; (8005de0 <pwmPassStart+0x54>)
 8005dba:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005dbc:	4b08      	ldr	r3, [pc, #32]	; (8005de0 <pwmPassStart+0x54>)
 8005dbe:	2180      	movs	r1, #128	; 0x80
 8005dc0:	0209      	lsls	r1, r1, #8
 8005dc2:	430a      	orrs	r2, r1
 8005dc4:	645a      	str	r2, [r3, #68]	; 0x44

	// Enable TIM1
	TIM1->CR1 |= TIM_CR1_CEN;
 8005dc6:	4b06      	ldr	r3, [pc, #24]	; (8005de0 <pwmPassStart+0x54>)
 8005dc8:	681a      	ldr	r2, [r3, #0]
 8005dca:	4b05      	ldr	r3, [pc, #20]	; (8005de0 <pwmPassStart+0x54>)
 8005dcc:	2101      	movs	r1, #1
 8005dce:	430a      	orrs	r2, r1
 8005dd0:	601a      	str	r2, [r3, #0]

	printf("PWM PASS START\r\n");
 8005dd2:	4b04      	ldr	r3, [pc, #16]	; (8005de4 <pwmPassStart+0x58>)
 8005dd4:	0018      	movs	r0, r3
 8005dd6:	f002 f809 	bl	8007dec <puts>

}
 8005dda:	46c0      	nop			; (mov r8, r8)
 8005ddc:	46bd      	mov	sp, r7
 8005dde:	bd80      	pop	{r7, pc}
 8005de0:	40012c00 	.word	0x40012c00
 8005de4:	0800d190 	.word	0x0800d190

08005de8 <setPassDirectionSpeed>:
void setPassDirectionSpeed(void){
 8005de8:	b590      	push	{r4, r7, lr}
 8005dea:	b083      	sub	sp, #12
 8005dec:	af00      	add	r7, sp, #0

	uint32_t startPointQuarter = ( (passes[0].startPoint.azCoordinate) <= 90 ) ? 1 : ( ( (passes[0].startPoint.azCoordinate) <= 180) ? 2 : ( ( (passes[0].startPoint.azCoordinate) <= 270) ? 3 : 4 ) );
 8005dee:	4bb4      	ldr	r3, [pc, #720]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005df0:	6a1b      	ldr	r3, [r3, #32]
 8005df2:	49b4      	ldr	r1, [pc, #720]	; (80060c4 <setPassDirectionSpeed+0x2dc>)
 8005df4:	1c18      	adds	r0, r3, #0
 8005df6:	f7fa fb7d 	bl	80004f4 <__aeabi_fcmple>
 8005dfa:	1e03      	subs	r3, r0, #0
 8005dfc:	d001      	beq.n	8005e02 <setPassDirectionSpeed+0x1a>
 8005dfe:	2301      	movs	r3, #1
 8005e00:	e014      	b.n	8005e2c <setPassDirectionSpeed+0x44>
 8005e02:	4baf      	ldr	r3, [pc, #700]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005e04:	6a1b      	ldr	r3, [r3, #32]
 8005e06:	49b0      	ldr	r1, [pc, #704]	; (80060c8 <setPassDirectionSpeed+0x2e0>)
 8005e08:	1c18      	adds	r0, r3, #0
 8005e0a:	f7fa fb73 	bl	80004f4 <__aeabi_fcmple>
 8005e0e:	1e03      	subs	r3, r0, #0
 8005e10:	d001      	beq.n	8005e16 <setPassDirectionSpeed+0x2e>
 8005e12:	2302      	movs	r3, #2
 8005e14:	e00a      	b.n	8005e2c <setPassDirectionSpeed+0x44>
 8005e16:	4baa      	ldr	r3, [pc, #680]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005e18:	6a1b      	ldr	r3, [r3, #32]
 8005e1a:	49ac      	ldr	r1, [pc, #688]	; (80060cc <setPassDirectionSpeed+0x2e4>)
 8005e1c:	1c18      	adds	r0, r3, #0
 8005e1e:	f7fa fb69 	bl	80004f4 <__aeabi_fcmple>
 8005e22:	1e03      	subs	r3, r0, #0
 8005e24:	d001      	beq.n	8005e2a <setPassDirectionSpeed+0x42>
 8005e26:	2303      	movs	r3, #3
 8005e28:	e000      	b.n	8005e2c <setPassDirectionSpeed+0x44>
 8005e2a:	2304      	movs	r3, #4
 8005e2c:	607b      	str	r3, [r7, #4]
	printf("passes[0].startPoint.azCoordinate is in the quarter %ld \r\n", startPointQuarter);
 8005e2e:	687a      	ldr	r2, [r7, #4]
 8005e30:	4ba7      	ldr	r3, [pc, #668]	; (80060d0 <setPassDirectionSpeed+0x2e8>)
 8005e32:	0011      	movs	r1, r2
 8005e34:	0018      	movs	r0, r3
 8005e36:	f001 ff5f 	bl	8007cf8 <iprintf>
	uint32_t peakPointQuarter = ( (passes[0].peakPoint.azCoordinate) <= 90 ) ? 1 : ( ( (passes[0].peakPoint.azCoordinate) <= 180) ? 2 : ( ( (passes[0].peakPoint.azCoordinate) <= 270) ? 3 : 4 ) );
 8005e3a:	4ba1      	ldr	r3, [pc, #644]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005e3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e3e:	49a1      	ldr	r1, [pc, #644]	; (80060c4 <setPassDirectionSpeed+0x2dc>)
 8005e40:	1c18      	adds	r0, r3, #0
 8005e42:	f7fa fb57 	bl	80004f4 <__aeabi_fcmple>
 8005e46:	1e03      	subs	r3, r0, #0
 8005e48:	d001      	beq.n	8005e4e <setPassDirectionSpeed+0x66>
 8005e4a:	2301      	movs	r3, #1
 8005e4c:	e014      	b.n	8005e78 <setPassDirectionSpeed+0x90>
 8005e4e:	4b9c      	ldr	r3, [pc, #624]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005e50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e52:	499d      	ldr	r1, [pc, #628]	; (80060c8 <setPassDirectionSpeed+0x2e0>)
 8005e54:	1c18      	adds	r0, r3, #0
 8005e56:	f7fa fb4d 	bl	80004f4 <__aeabi_fcmple>
 8005e5a:	1e03      	subs	r3, r0, #0
 8005e5c:	d001      	beq.n	8005e62 <setPassDirectionSpeed+0x7a>
 8005e5e:	2302      	movs	r3, #2
 8005e60:	e00a      	b.n	8005e78 <setPassDirectionSpeed+0x90>
 8005e62:	4b97      	ldr	r3, [pc, #604]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e66:	4999      	ldr	r1, [pc, #612]	; (80060cc <setPassDirectionSpeed+0x2e4>)
 8005e68:	1c18      	adds	r0, r3, #0
 8005e6a:	f7fa fb43 	bl	80004f4 <__aeabi_fcmple>
 8005e6e:	1e03      	subs	r3, r0, #0
 8005e70:	d001      	beq.n	8005e76 <setPassDirectionSpeed+0x8e>
 8005e72:	2303      	movs	r3, #3
 8005e74:	e000      	b.n	8005e78 <setPassDirectionSpeed+0x90>
 8005e76:	2304      	movs	r3, #4
 8005e78:	603b      	str	r3, [r7, #0]
	printf("passes[0].peakPoint.azCoordinate is in the quarter %ld \r\n", peakPointQuarter);
 8005e7a:	683a      	ldr	r2, [r7, #0]
 8005e7c:	4b95      	ldr	r3, [pc, #596]	; (80060d4 <setPassDirectionSpeed+0x2ec>)
 8005e7e:	0011      	movs	r1, r2
 8005e80:	0018      	movs	r0, r3
 8005e82:	f001 ff39 	bl	8007cf8 <iprintf>

	passes[0].tracking.directionSpeedEl = 0;
 8005e86:	4b8e      	ldr	r3, [pc, #568]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005e88:	2261      	movs	r2, #97	; 0x61
 8005e8a:	2100      	movs	r1, #0
 8005e8c:	5499      	strb	r1, [r3, r2]

	switch (startPointQuarter){
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	2b02      	cmp	r3, #2
 8005e92:	d04e      	beq.n	8005f32 <setPassDirectionSpeed+0x14a>
 8005e94:	d802      	bhi.n	8005e9c <setPassDirectionSpeed+0xb4>
 8005e96:	2b01      	cmp	r3, #1
 8005e98:	d007      	beq.n	8005eaa <setPassDirectionSpeed+0xc2>
			}

			break;

		default:
			break;
 8005e9a:	e123      	b.n	80060e4 <setPassDirectionSpeed+0x2fc>
	switch (startPointQuarter){
 8005e9c:	2b03      	cmp	r3, #3
 8005e9e:	d100      	bne.n	8005ea2 <setPassDirectionSpeed+0xba>
 8005ea0:	e08b      	b.n	8005fba <setPassDirectionSpeed+0x1d2>
 8005ea2:	2b04      	cmp	r3, #4
 8005ea4:	d100      	bne.n	8005ea8 <setPassDirectionSpeed+0xc0>
 8005ea6:	e0cc      	b.n	8006042 <setPassDirectionSpeed+0x25a>
			break;
 8005ea8:	e11c      	b.n	80060e4 <setPassDirectionSpeed+0x2fc>
			switch (peakPointQuarter){
 8005eaa:	683b      	ldr	r3, [r7, #0]
 8005eac:	2b02      	cmp	r3, #2
 8005eae:	d01c      	beq.n	8005eea <setPassDirectionSpeed+0x102>
 8005eb0:	d802      	bhi.n	8005eb8 <setPassDirectionSpeed+0xd0>
 8005eb2:	2b01      	cmp	r3, #1
 8005eb4:	d005      	beq.n	8005ec2 <setPassDirectionSpeed+0xda>
					break;
 8005eb6:	e03b      	b.n	8005f30 <setPassDirectionSpeed+0x148>
			switch (peakPointQuarter){
 8005eb8:	2b03      	cmp	r3, #3
 8005eba:	d01b      	beq.n	8005ef4 <setPassDirectionSpeed+0x10c>
 8005ebc:	2b04      	cmp	r3, #4
 8005ebe:	d032      	beq.n	8005f26 <setPassDirectionSpeed+0x13e>
					break;
 8005ec0:	e036      	b.n	8005f30 <setPassDirectionSpeed+0x148>
					if( (passes[0].peakPoint.azCoordinate) >= (passes[0].startPoint.azCoordinate) ){
 8005ec2:	4b7f      	ldr	r3, [pc, #508]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005ec4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005ec6:	4b7e      	ldr	r3, [pc, #504]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005ec8:	6a1b      	ldr	r3, [r3, #32]
 8005eca:	1c19      	adds	r1, r3, #0
 8005ecc:	1c10      	adds	r0, r2, #0
 8005ece:	f7fa fb25 	bl	800051c <__aeabi_fcmpge>
 8005ed2:	1e03      	subs	r3, r0, #0
 8005ed4:	d004      	beq.n	8005ee0 <setPassDirectionSpeed+0xf8>
						passes[0].tracking.directionSpeedAz = 1;
 8005ed6:	4b7a      	ldr	r3, [pc, #488]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005ed8:	2260      	movs	r2, #96	; 0x60
 8005eda:	2101      	movs	r1, #1
 8005edc:	5499      	strb	r1, [r3, r2]
					break;
 8005ede:	e027      	b.n	8005f30 <setPassDirectionSpeed+0x148>
						passes[0].tracking.directionSpeedAz = 0;
 8005ee0:	4b77      	ldr	r3, [pc, #476]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005ee2:	2260      	movs	r2, #96	; 0x60
 8005ee4:	2100      	movs	r1, #0
 8005ee6:	5499      	strb	r1, [r3, r2]
					break;
 8005ee8:	e022      	b.n	8005f30 <setPassDirectionSpeed+0x148>
					passes[0].tracking.directionSpeedAz = 1;
 8005eea:	4b75      	ldr	r3, [pc, #468]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005eec:	2260      	movs	r2, #96	; 0x60
 8005eee:	2101      	movs	r1, #1
 8005ef0:	5499      	strb	r1, [r3, r2]
					break;
 8005ef2:	e01d      	b.n	8005f30 <setPassDirectionSpeed+0x148>
					if( (passes[0].peakPoint.azCoordinate) <= (passes[0].startPoint.azCoordinate + 180) ){
 8005ef4:	4b72      	ldr	r3, [pc, #456]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005ef6:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8005ef8:	4b71      	ldr	r3, [pc, #452]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005efa:	6a1b      	ldr	r3, [r3, #32]
 8005efc:	4972      	ldr	r1, [pc, #456]	; (80060c8 <setPassDirectionSpeed+0x2e0>)
 8005efe:	1c18      	adds	r0, r3, #0
 8005f00:	f7fa fbb6 	bl	8000670 <__aeabi_fadd>
 8005f04:	1c03      	adds	r3, r0, #0
 8005f06:	1c19      	adds	r1, r3, #0
 8005f08:	1c20      	adds	r0, r4, #0
 8005f0a:	f7fa faf3 	bl	80004f4 <__aeabi_fcmple>
 8005f0e:	1e03      	subs	r3, r0, #0
 8005f10:	d004      	beq.n	8005f1c <setPassDirectionSpeed+0x134>
						passes[0].tracking.directionSpeedAz = 1;
 8005f12:	4b6b      	ldr	r3, [pc, #428]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f14:	2260      	movs	r2, #96	; 0x60
 8005f16:	2101      	movs	r1, #1
 8005f18:	5499      	strb	r1, [r3, r2]
					break;
 8005f1a:	e009      	b.n	8005f30 <setPassDirectionSpeed+0x148>
						passes[0].tracking.directionSpeedAz = 0;
 8005f1c:	4b68      	ldr	r3, [pc, #416]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f1e:	2260      	movs	r2, #96	; 0x60
 8005f20:	2100      	movs	r1, #0
 8005f22:	5499      	strb	r1, [r3, r2]
					break;
 8005f24:	e004      	b.n	8005f30 <setPassDirectionSpeed+0x148>
					passes[0].tracking.directionSpeedAz = 0;
 8005f26:	4b66      	ldr	r3, [pc, #408]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f28:	2260      	movs	r2, #96	; 0x60
 8005f2a:	2100      	movs	r1, #0
 8005f2c:	5499      	strb	r1, [r3, r2]
					break;
 8005f2e:	46c0      	nop			; (mov r8, r8)
			break;
 8005f30:	e0d8      	b.n	80060e4 <setPassDirectionSpeed+0x2fc>
			switch (peakPointQuarter){
 8005f32:	683b      	ldr	r3, [r7, #0]
 8005f34:	2b02      	cmp	r3, #2
 8005f36:	d00d      	beq.n	8005f54 <setPassDirectionSpeed+0x16c>
 8005f38:	d802      	bhi.n	8005f40 <setPassDirectionSpeed+0x158>
 8005f3a:	2b01      	cmp	r3, #1
 8005f3c:	d005      	beq.n	8005f4a <setPassDirectionSpeed+0x162>
					break;
 8005f3e:	e03b      	b.n	8005fb8 <setPassDirectionSpeed+0x1d0>
			switch (peakPointQuarter){
 8005f40:	2b03      	cmp	r3, #3
 8005f42:	d01b      	beq.n	8005f7c <setPassDirectionSpeed+0x194>
 8005f44:	2b04      	cmp	r3, #4
 8005f46:	d01e      	beq.n	8005f86 <setPassDirectionSpeed+0x19e>
					break;
 8005f48:	e036      	b.n	8005fb8 <setPassDirectionSpeed+0x1d0>
					passes[0].tracking.directionSpeedAz = 0;
 8005f4a:	4b5d      	ldr	r3, [pc, #372]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f4c:	2260      	movs	r2, #96	; 0x60
 8005f4e:	2100      	movs	r1, #0
 8005f50:	5499      	strb	r1, [r3, r2]
					break;
 8005f52:	e031      	b.n	8005fb8 <setPassDirectionSpeed+0x1d0>
					if( (passes[0].peakPoint.azCoordinate) < (passes[0].startPoint.azCoordinate) ){
 8005f54:	4b5a      	ldr	r3, [pc, #360]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f56:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005f58:	4b59      	ldr	r3, [pc, #356]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f5a:	6a1b      	ldr	r3, [r3, #32]
 8005f5c:	1c19      	adds	r1, r3, #0
 8005f5e:	1c10      	adds	r0, r2, #0
 8005f60:	f7fa fabe 	bl	80004e0 <__aeabi_fcmplt>
 8005f64:	1e03      	subs	r3, r0, #0
 8005f66:	d004      	beq.n	8005f72 <setPassDirectionSpeed+0x18a>
						passes[0].tracking.directionSpeedAz = 0;
 8005f68:	4b55      	ldr	r3, [pc, #340]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f6a:	2260      	movs	r2, #96	; 0x60
 8005f6c:	2100      	movs	r1, #0
 8005f6e:	5499      	strb	r1, [r3, r2]
					break;
 8005f70:	e022      	b.n	8005fb8 <setPassDirectionSpeed+0x1d0>
						passes[0].tracking.directionSpeedAz = 1;
 8005f72:	4b53      	ldr	r3, [pc, #332]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f74:	2260      	movs	r2, #96	; 0x60
 8005f76:	2101      	movs	r1, #1
 8005f78:	5499      	strb	r1, [r3, r2]
					break;
 8005f7a:	e01d      	b.n	8005fb8 <setPassDirectionSpeed+0x1d0>
					passes[0].tracking.directionSpeedAz = 1;
 8005f7c:	4b50      	ldr	r3, [pc, #320]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f7e:	2260      	movs	r2, #96	; 0x60
 8005f80:	2101      	movs	r1, #1
 8005f82:	5499      	strb	r1, [r3, r2]
					break;
 8005f84:	e018      	b.n	8005fb8 <setPassDirectionSpeed+0x1d0>
					if( (passes[0].peakPoint.azCoordinate) <= ( (passes[0].startPoint.azCoordinate) + 180 ) ){
 8005f86:	4b4e      	ldr	r3, [pc, #312]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f88:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8005f8a:	4b4d      	ldr	r3, [pc, #308]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005f8c:	6a1b      	ldr	r3, [r3, #32]
 8005f8e:	494e      	ldr	r1, [pc, #312]	; (80060c8 <setPassDirectionSpeed+0x2e0>)
 8005f90:	1c18      	adds	r0, r3, #0
 8005f92:	f7fa fb6d 	bl	8000670 <__aeabi_fadd>
 8005f96:	1c03      	adds	r3, r0, #0
 8005f98:	1c19      	adds	r1, r3, #0
 8005f9a:	1c20      	adds	r0, r4, #0
 8005f9c:	f7fa faaa 	bl	80004f4 <__aeabi_fcmple>
 8005fa0:	1e03      	subs	r3, r0, #0
 8005fa2:	d004      	beq.n	8005fae <setPassDirectionSpeed+0x1c6>
						passes[0].tracking.directionSpeedAz = 1;
 8005fa4:	4b46      	ldr	r3, [pc, #280]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005fa6:	2260      	movs	r2, #96	; 0x60
 8005fa8:	2101      	movs	r1, #1
 8005faa:	5499      	strb	r1, [r3, r2]
					break;
 8005fac:	e003      	b.n	8005fb6 <setPassDirectionSpeed+0x1ce>
						passes[0].tracking.directionSpeedAz = 0;
 8005fae:	4b44      	ldr	r3, [pc, #272]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005fb0:	2260      	movs	r2, #96	; 0x60
 8005fb2:	2100      	movs	r1, #0
 8005fb4:	5499      	strb	r1, [r3, r2]
					break;
 8005fb6:	46c0      	nop			; (mov r8, r8)
			break;
 8005fb8:	e094      	b.n	80060e4 <setPassDirectionSpeed+0x2fc>
			switch (peakPointQuarter){
 8005fba:	683b      	ldr	r3, [r7, #0]
 8005fbc:	2b02      	cmp	r3, #2
 8005fbe:	d021      	beq.n	8006004 <setPassDirectionSpeed+0x21c>
 8005fc0:	d802      	bhi.n	8005fc8 <setPassDirectionSpeed+0x1e0>
 8005fc2:	2b01      	cmp	r3, #1
 8005fc4:	d005      	beq.n	8005fd2 <setPassDirectionSpeed+0x1ea>
					break;
 8005fc6:	e03b      	b.n	8006040 <setPassDirectionSpeed+0x258>
			switch (peakPointQuarter){
 8005fc8:	2b03      	cmp	r3, #3
 8005fca:	d020      	beq.n	800600e <setPassDirectionSpeed+0x226>
 8005fcc:	2b04      	cmp	r3, #4
 8005fce:	d032      	beq.n	8006036 <setPassDirectionSpeed+0x24e>
					break;
 8005fd0:	e036      	b.n	8006040 <setPassDirectionSpeed+0x258>
					if( (passes[0].peakPoint.azCoordinate) < ( (passes[0].startPoint.azCoordinate) - 180 ) ){
 8005fd2:	4b3b      	ldr	r3, [pc, #236]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005fd4:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8005fd6:	4b3a      	ldr	r3, [pc, #232]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005fd8:	6a1b      	ldr	r3, [r3, #32]
 8005fda:	493b      	ldr	r1, [pc, #236]	; (80060c8 <setPassDirectionSpeed+0x2e0>)
 8005fdc:	1c18      	adds	r0, r3, #0
 8005fde:	f7fa ffeb 	bl	8000fb8 <__aeabi_fsub>
 8005fe2:	1c03      	adds	r3, r0, #0
 8005fe4:	1c19      	adds	r1, r3, #0
 8005fe6:	1c20      	adds	r0, r4, #0
 8005fe8:	f7fa fa7a 	bl	80004e0 <__aeabi_fcmplt>
 8005fec:	1e03      	subs	r3, r0, #0
 8005fee:	d004      	beq.n	8005ffa <setPassDirectionSpeed+0x212>
						passes[0].tracking.directionSpeedAz = 1;
 8005ff0:	4b33      	ldr	r3, [pc, #204]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005ff2:	2260      	movs	r2, #96	; 0x60
 8005ff4:	2101      	movs	r1, #1
 8005ff6:	5499      	strb	r1, [r3, r2]
					break;
 8005ff8:	e022      	b.n	8006040 <setPassDirectionSpeed+0x258>
						passes[0].tracking.directionSpeedAz = 0;
 8005ffa:	4b31      	ldr	r3, [pc, #196]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8005ffc:	2260      	movs	r2, #96	; 0x60
 8005ffe:	2100      	movs	r1, #0
 8006000:	5499      	strb	r1, [r3, r2]
					break;
 8006002:	e01d      	b.n	8006040 <setPassDirectionSpeed+0x258>
					passes[0].tracking.directionSpeedAz = 0;
 8006004:	4b2e      	ldr	r3, [pc, #184]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8006006:	2260      	movs	r2, #96	; 0x60
 8006008:	2100      	movs	r1, #0
 800600a:	5499      	strb	r1, [r3, r2]
					break;
 800600c:	e018      	b.n	8006040 <setPassDirectionSpeed+0x258>
					if( (passes[0].peakPoint.azCoordinate) < (passes[0].startPoint.azCoordinate) ){
 800600e:	4b2c      	ldr	r3, [pc, #176]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8006010:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006012:	4b2b      	ldr	r3, [pc, #172]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8006014:	6a1b      	ldr	r3, [r3, #32]
 8006016:	1c19      	adds	r1, r3, #0
 8006018:	1c10      	adds	r0, r2, #0
 800601a:	f7fa fa61 	bl	80004e0 <__aeabi_fcmplt>
 800601e:	1e03      	subs	r3, r0, #0
 8006020:	d004      	beq.n	800602c <setPassDirectionSpeed+0x244>
						passes[0].tracking.directionSpeedAz = 0;
 8006022:	4b27      	ldr	r3, [pc, #156]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8006024:	2260      	movs	r2, #96	; 0x60
 8006026:	2100      	movs	r1, #0
 8006028:	5499      	strb	r1, [r3, r2]
					break;
 800602a:	e009      	b.n	8006040 <setPassDirectionSpeed+0x258>
						passes[0].tracking.directionSpeedAz = 1;
 800602c:	4b24      	ldr	r3, [pc, #144]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 800602e:	2260      	movs	r2, #96	; 0x60
 8006030:	2101      	movs	r1, #1
 8006032:	5499      	strb	r1, [r3, r2]
					break;
 8006034:	e004      	b.n	8006040 <setPassDirectionSpeed+0x258>
					passes[0].tracking.directionSpeedAz = 1;
 8006036:	4b22      	ldr	r3, [pc, #136]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8006038:	2260      	movs	r2, #96	; 0x60
 800603a:	2101      	movs	r1, #1
 800603c:	5499      	strb	r1, [r3, r2]
					break;
 800603e:	46c0      	nop			; (mov r8, r8)
			break;
 8006040:	e050      	b.n	80060e4 <setPassDirectionSpeed+0x2fc>
			switch (peakPointQuarter){
 8006042:	683b      	ldr	r3, [r7, #0]
 8006044:	2b02      	cmp	r3, #2
 8006046:	d00d      	beq.n	8006064 <setPassDirectionSpeed+0x27c>
 8006048:	d802      	bhi.n	8006050 <setPassDirectionSpeed+0x268>
 800604a:	2b01      	cmp	r3, #1
 800604c:	d005      	beq.n	800605a <setPassDirectionSpeed+0x272>
					break;
 800604e:	e048      	b.n	80060e2 <setPassDirectionSpeed+0x2fa>
			switch (peakPointQuarter){
 8006050:	2b03      	cmp	r3, #3
 8006052:	d020      	beq.n	8006096 <setPassDirectionSpeed+0x2ae>
 8006054:	2b04      	cmp	r3, #4
 8006056:	d023      	beq.n	80060a0 <setPassDirectionSpeed+0x2b8>
					break;
 8006058:	e043      	b.n	80060e2 <setPassDirectionSpeed+0x2fa>
					passes[0].tracking.directionSpeedAz = 1;
 800605a:	4b19      	ldr	r3, [pc, #100]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 800605c:	2260      	movs	r2, #96	; 0x60
 800605e:	2101      	movs	r1, #1
 8006060:	5499      	strb	r1, [r3, r2]
					break;
 8006062:	e03e      	b.n	80060e2 <setPassDirectionSpeed+0x2fa>
					if( (passes[0].peakPoint.azCoordinate) > ( (passes[0].startPoint.azCoordinate) - 180 ) ){
 8006064:	4b16      	ldr	r3, [pc, #88]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8006066:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8006068:	4b15      	ldr	r3, [pc, #84]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 800606a:	6a1b      	ldr	r3, [r3, #32]
 800606c:	4916      	ldr	r1, [pc, #88]	; (80060c8 <setPassDirectionSpeed+0x2e0>)
 800606e:	1c18      	adds	r0, r3, #0
 8006070:	f7fa ffa2 	bl	8000fb8 <__aeabi_fsub>
 8006074:	1c03      	adds	r3, r0, #0
 8006076:	1c19      	adds	r1, r3, #0
 8006078:	1c20      	adds	r0, r4, #0
 800607a:	f7fa fa45 	bl	8000508 <__aeabi_fcmpgt>
 800607e:	1e03      	subs	r3, r0, #0
 8006080:	d004      	beq.n	800608c <setPassDirectionSpeed+0x2a4>
						passes[0].tracking.directionSpeedAz = 0;
 8006082:	4b0f      	ldr	r3, [pc, #60]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8006084:	2260      	movs	r2, #96	; 0x60
 8006086:	2100      	movs	r1, #0
 8006088:	5499      	strb	r1, [r3, r2]
					break;
 800608a:	e02a      	b.n	80060e2 <setPassDirectionSpeed+0x2fa>
						passes[0].tracking.directionSpeedAz = 1;
 800608c:	4b0c      	ldr	r3, [pc, #48]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 800608e:	2260      	movs	r2, #96	; 0x60
 8006090:	2101      	movs	r1, #1
 8006092:	5499      	strb	r1, [r3, r2]
					break;
 8006094:	e025      	b.n	80060e2 <setPassDirectionSpeed+0x2fa>
					passes[0].tracking.directionSpeedAz = 0;
 8006096:	4b0a      	ldr	r3, [pc, #40]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 8006098:	2260      	movs	r2, #96	; 0x60
 800609a:	2100      	movs	r1, #0
 800609c:	5499      	strb	r1, [r3, r2]
					break;
 800609e:	e020      	b.n	80060e2 <setPassDirectionSpeed+0x2fa>
					if( (passes[0].peakPoint.azCoordinate) < (passes[0].startPoint.azCoordinate) ){
 80060a0:	4b07      	ldr	r3, [pc, #28]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 80060a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80060a4:	4b06      	ldr	r3, [pc, #24]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 80060a6:	6a1b      	ldr	r3, [r3, #32]
 80060a8:	1c19      	adds	r1, r3, #0
 80060aa:	1c10      	adds	r0, r2, #0
 80060ac:	f7fa fa18 	bl	80004e0 <__aeabi_fcmplt>
 80060b0:	1e03      	subs	r3, r0, #0
 80060b2:	d011      	beq.n	80060d8 <setPassDirectionSpeed+0x2f0>
						passes[0].tracking.directionSpeedAz = 0;
 80060b4:	4b02      	ldr	r3, [pc, #8]	; (80060c0 <setPassDirectionSpeed+0x2d8>)
 80060b6:	2260      	movs	r2, #96	; 0x60
 80060b8:	2100      	movs	r1, #0
 80060ba:	5499      	strb	r1, [r3, r2]
					break;
 80060bc:	e010      	b.n	80060e0 <setPassDirectionSpeed+0x2f8>
 80060be:	46c0      	nop			; (mov r8, r8)
 80060c0:	2000028c 	.word	0x2000028c
 80060c4:	42b40000 	.word	0x42b40000
 80060c8:	43340000 	.word	0x43340000
 80060cc:	43870000 	.word	0x43870000
 80060d0:	0800d1a0 	.word	0x0800d1a0
 80060d4:	0800d1dc 	.word	0x0800d1dc
						passes[0].tracking.directionSpeedAz = 1;
 80060d8:	4b28      	ldr	r3, [pc, #160]	; (800617c <setPassDirectionSpeed+0x394>)
 80060da:	2260      	movs	r2, #96	; 0x60
 80060dc:	2101      	movs	r1, #1
 80060de:	5499      	strb	r1, [r3, r2]
					break;
 80060e0:	46c0      	nop			; (mov r8, r8)
			break;
 80060e2:	46c0      	nop			; (mov r8, r8)
	}

	// Clockwise AZ
	if(passes[0].tracking.directionSpeedAz == 1){
 80060e4:	4b25      	ldr	r3, [pc, #148]	; (800617c <setPassDirectionSpeed+0x394>)
 80060e6:	2260      	movs	r2, #96	; 0x60
 80060e8:	5c9b      	ldrb	r3, [r3, r2]
 80060ea:	2b01      	cmp	r3, #1
 80060ec:	d114      	bne.n	8006118 <setPassDirectionSpeed+0x330>

		printf("passes[0].tracking.directionSpeedAz is clockwise \r\n");
 80060ee:	4b24      	ldr	r3, [pc, #144]	; (8006180 <setPassDirectionSpeed+0x398>)
 80060f0:	0018      	movs	r0, r3
 80060f2:	f001 fe7b 	bl	8007dec <puts>

		// AZ direction pins are PA0 and PA1
		GPIOA->ODR |= GPIO_ODR_0; // Set PA0 value to high
 80060f6:	2390      	movs	r3, #144	; 0x90
 80060f8:	05db      	lsls	r3, r3, #23
 80060fa:	695a      	ldr	r2, [r3, #20]
 80060fc:	2390      	movs	r3, #144	; 0x90
 80060fe:	05db      	lsls	r3, r3, #23
 8006100:	2101      	movs	r1, #1
 8006102:	430a      	orrs	r2, r1
 8006104:	615a      	str	r2, [r3, #20]
		GPIOA->ODR &= ~(GPIO_ODR_1); // Set PA1 value to low
 8006106:	2390      	movs	r3, #144	; 0x90
 8006108:	05db      	lsls	r3, r3, #23
 800610a:	695a      	ldr	r2, [r3, #20]
 800610c:	2390      	movs	r3, #144	; 0x90
 800610e:	05db      	lsls	r3, r3, #23
 8006110:	2102      	movs	r1, #2
 8006112:	438a      	bics	r2, r1
 8006114:	615a      	str	r2, [r3, #20]
 8006116:	e013      	b.n	8006140 <setPassDirectionSpeed+0x358>
	}

	// Counter-clockwise AZ
	else{

		printf("passes[0].tracking.directionSpeedAz is counter-clockwise \r\n");
 8006118:	4b1a      	ldr	r3, [pc, #104]	; (8006184 <setPassDirectionSpeed+0x39c>)
 800611a:	0018      	movs	r0, r3
 800611c:	f001 fe66 	bl	8007dec <puts>

		// AZ direction pins are PA0 and PA1
		GPIOA->ODR |= GPIO_ODR_1; // Set PA1 value to high
 8006120:	2390      	movs	r3, #144	; 0x90
 8006122:	05db      	lsls	r3, r3, #23
 8006124:	695a      	ldr	r2, [r3, #20]
 8006126:	2390      	movs	r3, #144	; 0x90
 8006128:	05db      	lsls	r3, r3, #23
 800612a:	2102      	movs	r1, #2
 800612c:	430a      	orrs	r2, r1
 800612e:	615a      	str	r2, [r3, #20]
		GPIOA->ODR &= ~(GPIO_ODR_0); // Set PA0 value to low
 8006130:	2390      	movs	r3, #144	; 0x90
 8006132:	05db      	lsls	r3, r3, #23
 8006134:	695a      	ldr	r2, [r3, #20]
 8006136:	2390      	movs	r3, #144	; 0x90
 8006138:	05db      	lsls	r3, r3, #23
 800613a:	2101      	movs	r1, #1
 800613c:	438a      	bics	r2, r1
 800613e:	615a      	str	r2, [r3, #20]

	}

	// Counter-clockwise EL
	if(passes[0].tracking.directionSpeedEl == 0){
 8006140:	4b0e      	ldr	r3, [pc, #56]	; (800617c <setPassDirectionSpeed+0x394>)
 8006142:	2261      	movs	r2, #97	; 0x61
 8006144:	5c9b      	ldrb	r3, [r3, r2]
 8006146:	2b00      	cmp	r3, #0
 8006148:	d113      	bne.n	8006172 <setPassDirectionSpeed+0x38a>


		printf("passes[0].tracking.directionSpeedAz is counter-clockwise \r\n");
 800614a:	4b0e      	ldr	r3, [pc, #56]	; (8006184 <setPassDirectionSpeed+0x39c>)
 800614c:	0018      	movs	r0, r3
 800614e:	f001 fe4d 	bl	8007dec <puts>

		// EL direction pins are PA6 and PA7
		GPIOA->ODR |= GPIO_ODR_7; // Set PA7 value to high
 8006152:	2390      	movs	r3, #144	; 0x90
 8006154:	05db      	lsls	r3, r3, #23
 8006156:	695a      	ldr	r2, [r3, #20]
 8006158:	2390      	movs	r3, #144	; 0x90
 800615a:	05db      	lsls	r3, r3, #23
 800615c:	2180      	movs	r1, #128	; 0x80
 800615e:	430a      	orrs	r2, r1
 8006160:	615a      	str	r2, [r3, #20]
		GPIOA->ODR &= ~(GPIO_ODR_6); // Set PA6 value to low
 8006162:	2390      	movs	r3, #144	; 0x90
 8006164:	05db      	lsls	r3, r3, #23
 8006166:	695a      	ldr	r2, [r3, #20]
 8006168:	2390      	movs	r3, #144	; 0x90
 800616a:	05db      	lsls	r3, r3, #23
 800616c:	2140      	movs	r1, #64	; 0x40
 800616e:	438a      	bics	r2, r1
 8006170:	615a      	str	r2, [r3, #20]
	}

}
 8006172:	46c0      	nop			; (mov r8, r8)
 8006174:	46bd      	mov	sp, r7
 8006176:	b003      	add	sp, #12
 8006178:	bd90      	pop	{r4, r7, pc}
 800617a:	46c0      	nop			; (mov r8, r8)
 800617c:	2000028c 	.word	0x2000028c
 8006180:	0800d218 	.word	0x0800d218
 8006184:	0800d24c 	.word	0x0800d24c

08006188 <pwmPassUpdate>:

void pwmPassUpdate(){
 8006188:	b590      	push	{r4, r7, lr}
 800618a:	b083      	sub	sp, #12
 800618c:	af00      	add	r7, sp, #0

	float pwmCurrentSpeedAz = ( ( (float) (passes[0].tracking.currentSpeedAz) ) * (TIM1->ARR) ) / ( ( (float) (passes[0].tracking.maximumMotorSpeedAz) ) );
 800618e:	4b24      	ldr	r3, [pc, #144]	; (8006220 <pwmPassUpdate+0x98>)
 8006190:	6c9c      	ldr	r4, [r3, #72]	; 0x48
 8006192:	4b24      	ldr	r3, [pc, #144]	; (8006224 <pwmPassUpdate+0x9c>)
 8006194:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006196:	0018      	movs	r0, r3
 8006198:	f7fb f8f2 	bl	8001380 <__aeabi_ui2f>
 800619c:	1c03      	adds	r3, r0, #0
 800619e:	1c19      	adds	r1, r3, #0
 80061a0:	1c20      	adds	r0, r4, #0
 80061a2:	f7fa fdd7 	bl	8000d54 <__aeabi_fmul>
 80061a6:	1c03      	adds	r3, r0, #0
 80061a8:	1c1a      	adds	r2, r3, #0
 80061aa:	4b1d      	ldr	r3, [pc, #116]	; (8006220 <pwmPassUpdate+0x98>)
 80061ac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80061ae:	1c19      	adds	r1, r3, #0
 80061b0:	1c10      	adds	r0, r2, #0
 80061b2:	f7fa fbf7 	bl	80009a4 <__aeabi_fdiv>
 80061b6:	1c03      	adds	r3, r0, #0
 80061b8:	607b      	str	r3, [r7, #4]
	//printf("pwmCurrentSpeedAz : %.5f\n",pwmCurrentSpeedAz);

	float pwmCurrentSpeedEl = ( ( (float) (passes[0].tracking.currentSpeedEl) ) * (TIM1->ARR) ) / ( ( (float) (passes[0].tracking.maximumMotorSpeedEl) ) );
 80061ba:	4b19      	ldr	r3, [pc, #100]	; (8006220 <pwmPassUpdate+0x98>)
 80061bc:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80061be:	4b19      	ldr	r3, [pc, #100]	; (8006224 <pwmPassUpdate+0x9c>)
 80061c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80061c2:	0018      	movs	r0, r3
 80061c4:	f7fb f8dc 	bl	8001380 <__aeabi_ui2f>
 80061c8:	1c03      	adds	r3, r0, #0
 80061ca:	1c19      	adds	r1, r3, #0
 80061cc:	1c20      	adds	r0, r4, #0
 80061ce:	f7fa fdc1 	bl	8000d54 <__aeabi_fmul>
 80061d2:	1c03      	adds	r3, r0, #0
 80061d4:	1c1a      	adds	r2, r3, #0
 80061d6:	4b12      	ldr	r3, [pc, #72]	; (8006220 <pwmPassUpdate+0x98>)
 80061d8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80061da:	1c19      	adds	r1, r3, #0
 80061dc:	1c10      	adds	r0, r2, #0
 80061de:	f7fa fbe1 	bl	80009a4 <__aeabi_fdiv>
 80061e2:	1c03      	adds	r3, r0, #0
 80061e4:	603b      	str	r3, [r7, #0]
	//printf("pwmCurrentSpeedEl : %.5f\n",pwmCurrentSpeedEl);

	TIM1->CCR1 = (uint16_t) ( roundf(pwmCurrentSpeedAz) );
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	1c18      	adds	r0, r3, #0
 80061ea:	f005 ff7b 	bl	800c0e4 <roundf>
 80061ee:	1c03      	adds	r3, r0, #0
 80061f0:	1c18      	adds	r0, r3, #0
 80061f2:	f7fa f9eb 	bl	80005cc <__aeabi_f2uiz>
 80061f6:	0003      	movs	r3, r0
 80061f8:	b29a      	uxth	r2, r3
 80061fa:	4b0a      	ldr	r3, [pc, #40]	; (8006224 <pwmPassUpdate+0x9c>)
 80061fc:	635a      	str	r2, [r3, #52]	; 0x34
	//printf("TIM1->CCR1 : %ld\n",TIM1->CCR1);

	TIM1->CCR2 = (uint16_t) ( roundf(pwmCurrentSpeedEl) );
 80061fe:	683b      	ldr	r3, [r7, #0]
 8006200:	1c18      	adds	r0, r3, #0
 8006202:	f005 ff6f 	bl	800c0e4 <roundf>
 8006206:	1c03      	adds	r3, r0, #0
 8006208:	1c18      	adds	r0, r3, #0
 800620a:	f7fa f9df 	bl	80005cc <__aeabi_f2uiz>
 800620e:	0003      	movs	r3, r0
 8006210:	b29a      	uxth	r2, r3
 8006212:	4b04      	ldr	r3, [pc, #16]	; (8006224 <pwmPassUpdate+0x9c>)
 8006214:	639a      	str	r2, [r3, #56]	; 0x38
	//printf("TIM1->CCR2 : %ld\n",TIM1->CCR2);

}
 8006216:	46c0      	nop			; (mov r8, r8)
 8006218:	46bd      	mov	sp, r7
 800621a:	b003      	add	sp, #12
 800621c:	bd90      	pop	{r4, r7, pc}
 800621e:	46c0      	nop			; (mov r8, r8)
 8006220:	2000028c 	.word	0x2000028c
 8006224:	40012c00 	.word	0x40012c00

08006228 <pwmPassStop>:

void pwmPassStop(){
 8006228:	b580      	push	{r7, lr}
 800622a:	af00      	add	r7, sp, #0

	// Set az and el pwm values to 0
	TIM1->CCR1 = (uint16_t) 0;
 800622c:	4b1d      	ldr	r3, [pc, #116]	; (80062a4 <pwmPassStop+0x7c>)
 800622e:	2200      	movs	r2, #0
 8006230:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR2 = (uint16_t) 0;
 8006232:	4b1c      	ldr	r3, [pc, #112]	; (80062a4 <pwmPassStop+0x7c>)
 8006234:	2200      	movs	r2, #0
 8006236:	639a      	str	r2, [r3, #56]	; 0x38

	// Disable TIM1
	TIM1->CR1 &= ~TIM_CR1_CEN;
 8006238:	4b1a      	ldr	r3, [pc, #104]	; (80062a4 <pwmPassStop+0x7c>)
 800623a:	681a      	ldr	r2, [r3, #0]
 800623c:	4b19      	ldr	r3, [pc, #100]	; (80062a4 <pwmPassStop+0x7c>)
 800623e:	2101      	movs	r1, #1
 8006240:	438a      	bics	r2, r1
 8006242:	601a      	str	r2, [r3, #0]

	// Disable az direction pin
	GPIOA->ODR &= ~(GPIO_ODR_0); // Set PA0 value to low
 8006244:	2390      	movs	r3, #144	; 0x90
 8006246:	05db      	lsls	r3, r3, #23
 8006248:	695a      	ldr	r2, [r3, #20]
 800624a:	2390      	movs	r3, #144	; 0x90
 800624c:	05db      	lsls	r3, r3, #23
 800624e:	2101      	movs	r1, #1
 8006250:	438a      	bics	r2, r1
 8006252:	615a      	str	r2, [r3, #20]
	GPIOA->ODR &= ~(GPIO_ODR_1); // Set PA1 value to low
 8006254:	2390      	movs	r3, #144	; 0x90
 8006256:	05db      	lsls	r3, r3, #23
 8006258:	695a      	ldr	r2, [r3, #20]
 800625a:	2390      	movs	r3, #144	; 0x90
 800625c:	05db      	lsls	r3, r3, #23
 800625e:	2102      	movs	r1, #2
 8006260:	438a      	bics	r2, r1
 8006262:	615a      	str	r2, [r3, #20]

	// Disable el direction pin
	GPIOA->ODR &= ~(GPIO_ODR_6); // Set PA6 value to low
 8006264:	2390      	movs	r3, #144	; 0x90
 8006266:	05db      	lsls	r3, r3, #23
 8006268:	695a      	ldr	r2, [r3, #20]
 800626a:	2390      	movs	r3, #144	; 0x90
 800626c:	05db      	lsls	r3, r3, #23
 800626e:	2140      	movs	r1, #64	; 0x40
 8006270:	438a      	bics	r2, r1
 8006272:	615a      	str	r2, [r3, #20]
	GPIOA->ODR &= ~(GPIO_ODR_7); // Set PA7 value to low
 8006274:	2390      	movs	r3, #144	; 0x90
 8006276:	05db      	lsls	r3, r3, #23
 8006278:	695a      	ldr	r2, [r3, #20]
 800627a:	2390      	movs	r3, #144	; 0x90
 800627c:	05db      	lsls	r3, r3, #23
 800627e:	2180      	movs	r1, #128	; 0x80
 8006280:	438a      	bics	r2, r1
 8006282:	615a      	str	r2, [r3, #20]

	systemPosition.azCoordinate = passes[0].endPoint.azCoordinate;
 8006284:	4b08      	ldr	r3, [pc, #32]	; (80062a8 <pwmPassStop+0x80>)
 8006286:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006288:	4b08      	ldr	r3, [pc, #32]	; (80062ac <pwmPassStop+0x84>)
 800628a:	601a      	str	r2, [r3, #0]
	systemPosition.elCoordinate = passes[0].endPoint.elCoordinate;
 800628c:	4b06      	ldr	r3, [pc, #24]	; (80062a8 <pwmPassStop+0x80>)
 800628e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006290:	4b06      	ldr	r3, [pc, #24]	; (80062ac <pwmPassStop+0x84>)
 8006292:	605a      	str	r2, [r3, #4]

	printf("PWM PASS STOP\r\n");
 8006294:	4b06      	ldr	r3, [pc, #24]	; (80062b0 <pwmPassStop+0x88>)
 8006296:	0018      	movs	r0, r3
 8006298:	f001 fda8 	bl	8007dec <puts>

}
 800629c:	46c0      	nop			; (mov r8, r8)
 800629e:	46bd      	mov	sp, r7
 80062a0:	bd80      	pop	{r7, pc}
 80062a2:	46c0      	nop			; (mov r8, r8)
 80062a4:	40012c00 	.word	0x40012c00
 80062a8:	2000028c 	.word	0x2000028c
 80062ac:	20000420 	.word	0x20000420
 80062b0:	0800d288 	.word	0x0800d288

080062b4 <byte2bcd>:
/*                                                                            */
/*                   Real time Clock (RTC)                            		  */
/*                                                                            */
/******************************************************************************/

uint8_t byte2bcd(uint8_t byte){
 80062b4:	b580      	push	{r7, lr}
 80062b6:	b084      	sub	sp, #16
 80062b8:	af00      	add	r7, sp, #0
 80062ba:	0002      	movs	r2, r0
 80062bc:	1dfb      	adds	r3, r7, #7
 80062be:	701a      	strb	r2, [r3, #0]
  uint8_t bcdhigh = 0;
 80062c0:	230f      	movs	r3, #15
 80062c2:	18fb      	adds	r3, r7, r3
 80062c4:	2200      	movs	r2, #0
 80062c6:	701a      	strb	r2, [r3, #0]

  while (byte >= 10){
 80062c8:	e00a      	b.n	80062e0 <byte2bcd+0x2c>
    bcdhigh++;
 80062ca:	210f      	movs	r1, #15
 80062cc:	187b      	adds	r3, r7, r1
 80062ce:	781a      	ldrb	r2, [r3, #0]
 80062d0:	187b      	adds	r3, r7, r1
 80062d2:	3201      	adds	r2, #1
 80062d4:	701a      	strb	r2, [r3, #0]
    byte -= 10;
 80062d6:	1dfb      	adds	r3, r7, #7
 80062d8:	1dfa      	adds	r2, r7, #7
 80062da:	7812      	ldrb	r2, [r2, #0]
 80062dc:	3a0a      	subs	r2, #10
 80062de:	701a      	strb	r2, [r3, #0]
  while (byte >= 10){
 80062e0:	1dfb      	adds	r3, r7, #7
 80062e2:	781b      	ldrb	r3, [r3, #0]
 80062e4:	2b09      	cmp	r3, #9
 80062e6:	d8f0      	bhi.n	80062ca <byte2bcd+0x16>
  }

  return  ((uint8_t)(bcdhigh << 4) | byte);
 80062e8:	230f      	movs	r3, #15
 80062ea:	18fb      	adds	r3, r7, r3
 80062ec:	781b      	ldrb	r3, [r3, #0]
 80062ee:	011b      	lsls	r3, r3, #4
 80062f0:	b2da      	uxtb	r2, r3
 80062f2:	1dfb      	adds	r3, r7, #7
 80062f4:	781b      	ldrb	r3, [r3, #0]
 80062f6:	4313      	orrs	r3, r2
 80062f8:	b2db      	uxtb	r3, r3
}
 80062fa:	0018      	movs	r0, r3
 80062fc:	46bd      	mov	sp, r7
 80062fe:	b004      	add	sp, #16
 8006300:	bd80      	pop	{r7, pc}

08006302 <bcd2byte>:

uint8_t bcd2byte(uint8_t bcd){
 8006302:	b580      	push	{r7, lr}
 8006304:	b084      	sub	sp, #16
 8006306:	af00      	add	r7, sp, #0
 8006308:	0002      	movs	r2, r0
 800630a:	1dfb      	adds	r3, r7, #7
 800630c:	701a      	strb	r2, [r3, #0]
  uint8_t tmp = 0;
 800630e:	200f      	movs	r0, #15
 8006310:	183b      	adds	r3, r7, r0
 8006312:	2200      	movs	r2, #0
 8006314:	701a      	strb	r2, [r3, #0]

  tmp = ((uint8_t)(bcd & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
 8006316:	1dfb      	adds	r3, r7, #7
 8006318:	781b      	ldrb	r3, [r3, #0]
 800631a:	091b      	lsrs	r3, r3, #4
 800631c:	b2db      	uxtb	r3, r3
 800631e:	183a      	adds	r2, r7, r0
 8006320:	1c19      	adds	r1, r3, #0
 8006322:	0089      	lsls	r1, r1, #2
 8006324:	18cb      	adds	r3, r1, r3
 8006326:	18db      	adds	r3, r3, r3
 8006328:	7013      	strb	r3, [r2, #0]

  return (tmp + (bcd & (uint8_t)0x0F));
 800632a:	1dfb      	adds	r3, r7, #7
 800632c:	781b      	ldrb	r3, [r3, #0]
 800632e:	220f      	movs	r2, #15
 8006330:	4013      	ands	r3, r2
 8006332:	b2da      	uxtb	r2, r3
 8006334:	183b      	adds	r3, r7, r0
 8006336:	781b      	ldrb	r3, [r3, #0]
 8006338:	18d3      	adds	r3, r2, r3
 800633a:	b2db      	uxtb	r3, r3
}
 800633c:	0018      	movs	r0, r3
 800633e:	46bd      	mov	sp, r7
 8006340:	b004      	add	sp, #16
 8006342:	bd80      	pop	{r7, pc}

08006344 <rtcCalendarInit>:

void rtcCalendarInit(void){
 8006344:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006346:	b093      	sub	sp, #76	; 0x4c
 8006348:	af04      	add	r7, sp, #16

	// Enable the PWR clock
	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 800634a:	4b96      	ldr	r3, [pc, #600]	; (80065a4 <rtcCalendarInit+0x260>)
 800634c:	69da      	ldr	r2, [r3, #28]
 800634e:	4b95      	ldr	r3, [pc, #596]	; (80065a4 <rtcCalendarInit+0x260>)
 8006350:	2180      	movs	r1, #128	; 0x80
 8006352:	0549      	lsls	r1, r1, #21
 8006354:	430a      	orrs	r2, r1
 8006356:	61da      	str	r2, [r3, #28]

	// Enable access to RTC and Backup registers
	PWR->CR |= PWR_CR_DBP;
 8006358:	4b93      	ldr	r3, [pc, #588]	; (80065a8 <rtcCalendarInit+0x264>)
 800635a:	681a      	ldr	r2, [r3, #0]
 800635c:	4b92      	ldr	r3, [pc, #584]	; (80065a8 <rtcCalendarInit+0x264>)
 800635e:	2180      	movs	r1, #128	; 0x80
 8006360:	0049      	lsls	r1, r1, #1
 8006362:	430a      	orrs	r2, r1
 8006364:	601a      	str	r2, [r3, #0]

	// Resets Backup Domain Config
	RCC->BDCR |= RCC_BDCR_BDRST;
 8006366:	4b8f      	ldr	r3, [pc, #572]	; (80065a4 <rtcCalendarInit+0x260>)
 8006368:	6a1a      	ldr	r2, [r3, #32]
 800636a:	4b8e      	ldr	r3, [pc, #568]	; (80065a4 <rtcCalendarInit+0x260>)
 800636c:	2180      	movs	r1, #128	; 0x80
 800636e:	0249      	lsls	r1, r1, #9
 8006370:	430a      	orrs	r2, r1
 8006372:	621a      	str	r2, [r3, #32]
	RCC->BDCR &= ~RCC_BDCR_BDRST;
 8006374:	4b8b      	ldr	r3, [pc, #556]	; (80065a4 <rtcCalendarInit+0x260>)
 8006376:	6a1a      	ldr	r2, [r3, #32]
 8006378:	4b8a      	ldr	r3, [pc, #552]	; (80065a4 <rtcCalendarInit+0x260>)
 800637a:	498c      	ldr	r1, [pc, #560]	; (80065ac <rtcCalendarInit+0x268>)
 800637c:	400a      	ands	r2, r1
 800637e:	621a      	str	r2, [r3, #32]

	// Set driving capability to medium high
	RCC->BDCR &= ~RCC_BDCR_LSEDRV_Msk; //Clear
 8006380:	4b88      	ldr	r3, [pc, #544]	; (80065a4 <rtcCalendarInit+0x260>)
 8006382:	6a1a      	ldr	r2, [r3, #32]
 8006384:	4b87      	ldr	r3, [pc, #540]	; (80065a4 <rtcCalendarInit+0x260>)
 8006386:	2118      	movs	r1, #24
 8006388:	438a      	bics	r2, r1
 800638a:	621a      	str	r2, [r3, #32]
	RCC->BDCR |= (0x02 << RCC_BDCR_LSEDRV_Pos);
 800638c:	4b85      	ldr	r3, [pc, #532]	; (80065a4 <rtcCalendarInit+0x260>)
 800638e:	6a1a      	ldr	r2, [r3, #32]
 8006390:	4b84      	ldr	r3, [pc, #528]	; (80065a4 <rtcCalendarInit+0x260>)
 8006392:	2110      	movs	r1, #16
 8006394:	430a      	orrs	r2, r1
 8006396:	621a      	str	r2, [r3, #32]

	// Start LSE clock
	RCC->BDCR |= RCC_BDCR_LSEON;
 8006398:	4b82      	ldr	r3, [pc, #520]	; (80065a4 <rtcCalendarInit+0x260>)
 800639a:	6a1a      	ldr	r2, [r3, #32]
 800639c:	4b81      	ldr	r3, [pc, #516]	; (80065a4 <rtcCalendarInit+0x260>)
 800639e:	2101      	movs	r1, #1
 80063a0:	430a      	orrs	r2, r1
 80063a2:	621a      	str	r2, [r3, #32]

	// Wait until LSE is ready
	while ( (RCC->BDCR & RCC_BDCR_LSERDY) != RCC_BDCR_LSERDY);
 80063a4:	46c0      	nop			; (mov r8, r8)
 80063a6:	4b7f      	ldr	r3, [pc, #508]	; (80065a4 <rtcCalendarInit+0x260>)
 80063a8:	6a1b      	ldr	r3, [r3, #32]
 80063aa:	2202      	movs	r2, #2
 80063ac:	4013      	ands	r3, r2
 80063ae:	2b02      	cmp	r3, #2
 80063b0:	d1f9      	bne.n	80063a6 <rtcCalendarInit+0x62>

	// Select LSE as RTC clock source
	RCC->BDCR &= ~RCC_BDCR_RTCSEL_Msk;
 80063b2:	4b7c      	ldr	r3, [pc, #496]	; (80065a4 <rtcCalendarInit+0x260>)
 80063b4:	6a1a      	ldr	r2, [r3, #32]
 80063b6:	4b7b      	ldr	r3, [pc, #492]	; (80065a4 <rtcCalendarInit+0x260>)
 80063b8:	497d      	ldr	r1, [pc, #500]	; (80065b0 <rtcCalendarInit+0x26c>)
 80063ba:	400a      	ands	r2, r1
 80063bc:	621a      	str	r2, [r3, #32]
	RCC->BDCR |= RCC_BDCR_RTCSEL_LSE;
 80063be:	4b79      	ldr	r3, [pc, #484]	; (80065a4 <rtcCalendarInit+0x260>)
 80063c0:	6a1a      	ldr	r2, [r3, #32]
 80063c2:	4b78      	ldr	r3, [pc, #480]	; (80065a4 <rtcCalendarInit+0x260>)
 80063c4:	2180      	movs	r1, #128	; 0x80
 80063c6:	0049      	lsls	r1, r1, #1
 80063c8:	430a      	orrs	r2, r1
 80063ca:	621a      	str	r2, [r3, #32]

	// Enable RTC clock
	RCC->BDCR |= RCC_BDCR_RTCEN;
 80063cc:	4b75      	ldr	r3, [pc, #468]	; (80065a4 <rtcCalendarInit+0x260>)
 80063ce:	6a1a      	ldr	r2, [r3, #32]
 80063d0:	4b74      	ldr	r3, [pc, #464]	; (80065a4 <rtcCalendarInit+0x260>)
 80063d2:	2180      	movs	r1, #128	; 0x80
 80063d4:	0209      	lsls	r1, r1, #8
 80063d6:	430a      	orrs	r2, r1
 80063d8:	621a      	str	r2, [r3, #32]

	// Enable Write access for RTC registers
	RTC->WPR = 0xCA;
 80063da:	4b76      	ldr	r3, [pc, #472]	; (80065b4 <rtcCalendarInit+0x270>)
 80063dc:	22ca      	movs	r2, #202	; 0xca
 80063de:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x53;
 80063e0:	4b74      	ldr	r3, [pc, #464]	; (80065b4 <rtcCalendarInit+0x270>)
 80063e2:	2253      	movs	r2, #83	; 0x53
 80063e4:	625a      	str	r2, [r3, #36]	; 0x24

	// Enter Init
	RTC->ISR |= RTC_ISR_INIT;
 80063e6:	4b73      	ldr	r3, [pc, #460]	; (80065b4 <rtcCalendarInit+0x270>)
 80063e8:	68da      	ldr	r2, [r3, #12]
 80063ea:	4b72      	ldr	r3, [pc, #456]	; (80065b4 <rtcCalendarInit+0x270>)
 80063ec:	2180      	movs	r1, #128	; 0x80
 80063ee:	430a      	orrs	r2, r1
 80063f0:	60da      	str	r2, [r3, #12]
	while ((RTC->ISR & RTC_ISR_INITF) != RTC_ISR_INITF);
 80063f2:	46c0      	nop			; (mov r8, r8)
 80063f4:	4b6f      	ldr	r3, [pc, #444]	; (80065b4 <rtcCalendarInit+0x270>)
 80063f6:	68db      	ldr	r3, [r3, #12]
 80063f8:	2240      	movs	r2, #64	; 0x40
 80063fa:	4013      	ands	r3, r2
 80063fc:	2b40      	cmp	r3, #64	; 0x40
 80063fe:	d1f9      	bne.n	80063f4 <rtcCalendarInit+0xb0>

	// Setup prescalers for 1s RTC clock
	RTC->PRER = 0x007F00FF;
 8006400:	4b6c      	ldr	r3, [pc, #432]	; (80065b4 <rtcCalendarInit+0x270>)
 8006402:	4a6d      	ldr	r2, [pc, #436]	; (80065b8 <rtcCalendarInit+0x274>)
 8006404:	611a      	str	r2, [r3, #16]

	// Get the UTC local time
	time_t t = time(NULL);
 8006406:	2000      	movs	r0, #0
 8006408:	f002 fbda 	bl	8008bc0 <time>
 800640c:	0003      	movs	r3, r0
 800640e:	000c      	movs	r4, r1
 8006410:	623b      	str	r3, [r7, #32]
 8006412:	627c      	str	r4, [r7, #36]	; 0x24
	struct tm *tm = localtime(&t);
 8006414:	2320      	movs	r3, #32
 8006416:	18fb      	adds	r3, r7, r3
 8006418:	0018      	movs	r0, r3
 800641a:	f000 fe39 	bl	8007090 <localtime>
 800641e:	0003      	movs	r3, r0
 8006420:	637b      	str	r3, [r7, #52]	; 0x34

	// Create a variable to save the fields of the time structure
	char utc2Timezone[3];

	// Update the field of the time structure according to UTC time
	tm->tm_hour += 2; //UTC+2
 8006422:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006424:	689b      	ldr	r3, [r3, #8]
 8006426:	1c9a      	adds	r2, r3, #2
 8006428:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800642a:	609a      	str	r2, [r3, #8]
	//tm->tm_min += 1;

	// Save the field of the time structure according to a specific format
	Time initTime;

	strftime(utc2Timezone,3, "%y", tm);
 800642c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800642e:	4a63      	ldr	r2, [pc, #396]	; (80065bc <rtcCalendarInit+0x278>)
 8006430:	241c      	movs	r4, #28
 8006432:	1938      	adds	r0, r7, r4
 8006434:	2103      	movs	r1, #3
 8006436:	f002 fa65 	bl	8008904 <strftime>
	//printf("Year : %s\n",utc2Timezone);
	initTime.year = atoi(utc2Timezone);
 800643a:	193b      	adds	r3, r7, r4
 800643c:	0018      	movs	r0, r3
 800643e:	f000 fdf6 	bl	800702e <atoi>
 8006442:	0003      	movs	r3, r0
 8006444:	001a      	movs	r2, r3
 8006446:	1d3b      	adds	r3, r7, #4
 8006448:	601a      	str	r2, [r3, #0]

	strftime(utc2Timezone,3, "%m", tm);
 800644a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800644c:	4a5c      	ldr	r2, [pc, #368]	; (80065c0 <rtcCalendarInit+0x27c>)
 800644e:	1938      	adds	r0, r7, r4
 8006450:	2103      	movs	r1, #3
 8006452:	f002 fa57 	bl	8008904 <strftime>
	//printf("Month : %s\n",utc2Timezone);
	initTime.month = atoi(utc2Timezone);
 8006456:	193b      	adds	r3, r7, r4
 8006458:	0018      	movs	r0, r3
 800645a:	f000 fde8 	bl	800702e <atoi>
 800645e:	0003      	movs	r3, r0
 8006460:	001a      	movs	r2, r3
 8006462:	1d3b      	adds	r3, r7, #4
 8006464:	605a      	str	r2, [r3, #4]

	strftime(utc2Timezone,3, "%d", tm);
 8006466:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006468:	4a56      	ldr	r2, [pc, #344]	; (80065c4 <rtcCalendarInit+0x280>)
 800646a:	1938      	adds	r0, r7, r4
 800646c:	2103      	movs	r1, #3
 800646e:	f002 fa49 	bl	8008904 <strftime>
	//printf("Day : %s\n",utc2Timezone);
	initTime.day = atoi(utc2Timezone);
 8006472:	193b      	adds	r3, r7, r4
 8006474:	0018      	movs	r0, r3
 8006476:	f000 fdda 	bl	800702e <atoi>
 800647a:	0003      	movs	r3, r0
 800647c:	001a      	movs	r2, r3
 800647e:	1d3b      	adds	r3, r7, #4
 8006480:	609a      	str	r2, [r3, #8]

	strftime(utc2Timezone,3, "%H", tm);
 8006482:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006484:	4a50      	ldr	r2, [pc, #320]	; (80065c8 <rtcCalendarInit+0x284>)
 8006486:	1938      	adds	r0, r7, r4
 8006488:	2103      	movs	r1, #3
 800648a:	f002 fa3b 	bl	8008904 <strftime>
	//printf("Hour : %s\n",utc2Timezone);
	initTime.hour = atoi(utc2Timezone);
 800648e:	193b      	adds	r3, r7, r4
 8006490:	0018      	movs	r0, r3
 8006492:	f000 fdcc 	bl	800702e <atoi>
 8006496:	0003      	movs	r3, r0
 8006498:	001a      	movs	r2, r3
 800649a:	1d3b      	adds	r3, r7, #4
 800649c:	60da      	str	r2, [r3, #12]

	strftime(utc2Timezone,3, "%M", tm);
 800649e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80064a0:	4a4a      	ldr	r2, [pc, #296]	; (80065cc <rtcCalendarInit+0x288>)
 80064a2:	1938      	adds	r0, r7, r4
 80064a4:	2103      	movs	r1, #3
 80064a6:	f002 fa2d 	bl	8008904 <strftime>
	//printf("Minute : %s\n",utc2Timezone);
	initTime.minute = atoi(utc2Timezone);
 80064aa:	193b      	adds	r3, r7, r4
 80064ac:	0018      	movs	r0, r3
 80064ae:	f000 fdbe 	bl	800702e <atoi>
 80064b2:	0003      	movs	r3, r0
 80064b4:	001a      	movs	r2, r3
 80064b6:	1d3b      	adds	r3, r7, #4
 80064b8:	611a      	str	r2, [r3, #16]

	strftime(utc2Timezone,3, "%S", tm);
 80064ba:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80064bc:	4a44      	ldr	r2, [pc, #272]	; (80065d0 <rtcCalendarInit+0x28c>)
 80064be:	1938      	adds	r0, r7, r4
 80064c0:	2103      	movs	r1, #3
 80064c2:	f002 fa1f 	bl	8008904 <strftime>
	//printf("Second : %s\n",utc2Timezone);
	initTime.second = atoi(utc2Timezone);
 80064c6:	193b      	adds	r3, r7, r4
 80064c8:	0018      	movs	r0, r3
 80064ca:	f000 fdb0 	bl	800702e <atoi>
 80064ce:	0003      	movs	r3, r0
 80064d0:	001a      	movs	r2, r3
 80064d2:	1d3b      	adds	r3, r7, #4
 80064d4:	615a      	str	r2, [r3, #20]

	printf("Initialization time : %ld/%.2ld/%ld %ld:%ld:%ld\n",initTime.year,initTime.month, initTime.day, initTime.hour,initTime.minute, initTime.second);
 80064d6:	1d3b      	adds	r3, r7, #4
 80064d8:	681c      	ldr	r4, [r3, #0]
 80064da:	1d3b      	adds	r3, r7, #4
 80064dc:	685d      	ldr	r5, [r3, #4]
 80064de:	1d3b      	adds	r3, r7, #4
 80064e0:	689e      	ldr	r6, [r3, #8]
 80064e2:	1d3b      	adds	r3, r7, #4
 80064e4:	68da      	ldr	r2, [r3, #12]
 80064e6:	1d3b      	adds	r3, r7, #4
 80064e8:	6919      	ldr	r1, [r3, #16]
 80064ea:	1d3b      	adds	r3, r7, #4
 80064ec:	695b      	ldr	r3, [r3, #20]
 80064ee:	4839      	ldr	r0, [pc, #228]	; (80065d4 <rtcCalendarInit+0x290>)
 80064f0:	9302      	str	r3, [sp, #8]
 80064f2:	9101      	str	r1, [sp, #4]
 80064f4:	9200      	str	r2, [sp, #0]
 80064f6:	0033      	movs	r3, r6
 80064f8:	002a      	movs	r2, r5
 80064fa:	0021      	movs	r1, r4
 80064fc:	f001 fbfc 	bl	8007cf8 <iprintf>

	uint32_t bcdtime, bcddate;

	bcdtime = ( ( byte2bcd(initTime.hour) ) << 16U) | ( ( byte2bcd(initTime.minute) ) << 8U) | ( ( byte2bcd(initTime.second)) << 0U);
 8006500:	1d3b      	adds	r3, r7, #4
 8006502:	68db      	ldr	r3, [r3, #12]
 8006504:	b2db      	uxtb	r3, r3
 8006506:	0018      	movs	r0, r3
 8006508:	f7ff fed4 	bl	80062b4 <byte2bcd>
 800650c:	0003      	movs	r3, r0
 800650e:	041c      	lsls	r4, r3, #16
 8006510:	1d3b      	adds	r3, r7, #4
 8006512:	691b      	ldr	r3, [r3, #16]
 8006514:	b2db      	uxtb	r3, r3
 8006516:	0018      	movs	r0, r3
 8006518:	f7ff fecc 	bl	80062b4 <byte2bcd>
 800651c:	0003      	movs	r3, r0
 800651e:	021b      	lsls	r3, r3, #8
 8006520:	431c      	orrs	r4, r3
 8006522:	1d3b      	adds	r3, r7, #4
 8006524:	695b      	ldr	r3, [r3, #20]
 8006526:	b2db      	uxtb	r3, r3
 8006528:	0018      	movs	r0, r3
 800652a:	f7ff fec3 	bl	80062b4 <byte2bcd>
 800652e:	0003      	movs	r3, r0
 8006530:	4323      	orrs	r3, r4
 8006532:	633b      	str	r3, [r7, #48]	; 0x30

	bcddate = ( ( byte2bcd(initTime.year) ) << 16U) | ( ( byte2bcd(initTime.month) ) << 8U) | ( ( byte2bcd(initTime.day)) << 0U);
 8006534:	1d3b      	adds	r3, r7, #4
 8006536:	681b      	ldr	r3, [r3, #0]
 8006538:	b2db      	uxtb	r3, r3
 800653a:	0018      	movs	r0, r3
 800653c:	f7ff feba 	bl	80062b4 <byte2bcd>
 8006540:	0003      	movs	r3, r0
 8006542:	041c      	lsls	r4, r3, #16
 8006544:	1d3b      	adds	r3, r7, #4
 8006546:	685b      	ldr	r3, [r3, #4]
 8006548:	b2db      	uxtb	r3, r3
 800654a:	0018      	movs	r0, r3
 800654c:	f7ff feb2 	bl	80062b4 <byte2bcd>
 8006550:	0003      	movs	r3, r0
 8006552:	021b      	lsls	r3, r3, #8
 8006554:	431c      	orrs	r4, r3
 8006556:	1d3b      	adds	r3, r7, #4
 8006558:	689b      	ldr	r3, [r3, #8]
 800655a:	b2db      	uxtb	r3, r3
 800655c:	0018      	movs	r0, r3
 800655e:	f7ff fea9 	bl	80062b4 <byte2bcd>
 8006562:	0003      	movs	r3, r0
 8006564:	4323      	orrs	r3, r4
 8006566:	62fb      	str	r3, [r7, #44]	; 0x2c

	// Set time
	RTC->DR = bcddate;
 8006568:	4b12      	ldr	r3, [pc, #72]	; (80065b4 <rtcCalendarInit+0x270>)
 800656a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800656c:	605a      	str	r2, [r3, #4]
	RTC->TR = bcdtime;
 800656e:	4b11      	ldr	r3, [pc, #68]	; (80065b4 <rtcCalendarInit+0x270>)
 8006570:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006572:	601a      	str	r2, [r3, #0]

	// Set priority level 1 for RTC interrupt
	NVIC_SetPriority(RTC_IRQn, 2);
 8006574:	2102      	movs	r1, #2
 8006576:	2002      	movs	r0, #2
 8006578:	f7fc fed2 	bl	8003320 <__NVIC_SetPriority>

	// Enable RTC interrupts
	NVIC_EnableIRQ(RTC_IRQn);
 800657c:	2002      	movs	r0, #2
 800657e:	f7fc feb5 	bl	80032ec <__NVIC_EnableIRQ>

	// Exit Init
	RTC->ISR &= ~RTC_ISR_INIT;
 8006582:	4b0c      	ldr	r3, [pc, #48]	; (80065b4 <rtcCalendarInit+0x270>)
 8006584:	68da      	ldr	r2, [r3, #12]
 8006586:	4b0b      	ldr	r3, [pc, #44]	; (80065b4 <rtcCalendarInit+0x270>)
 8006588:	2180      	movs	r1, #128	; 0x80
 800658a:	438a      	bics	r2, r1
 800658c:	60da      	str	r2, [r3, #12]

	// Disable Write access for RTC registers
	RTC->WPR = 0xFE;
 800658e:	4b09      	ldr	r3, [pc, #36]	; (80065b4 <rtcCalendarInit+0x270>)
 8006590:	22fe      	movs	r2, #254	; 0xfe
 8006592:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x64;
 8006594:	4b07      	ldr	r3, [pc, #28]	; (80065b4 <rtcCalendarInit+0x270>)
 8006596:	2264      	movs	r2, #100	; 0x64
 8006598:	625a      	str	r2, [r3, #36]	; 0x24
}
 800659a:	46c0      	nop			; (mov r8, r8)
 800659c:	46bd      	mov	sp, r7
 800659e:	b00f      	add	sp, #60	; 0x3c
 80065a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80065a2:	46c0      	nop			; (mov r8, r8)
 80065a4:	40021000 	.word	0x40021000
 80065a8:	40007000 	.word	0x40007000
 80065ac:	fffeffff 	.word	0xfffeffff
 80065b0:	fffffcff 	.word	0xfffffcff
 80065b4:	40002800 	.word	0x40002800
 80065b8:	007f00ff 	.word	0x007f00ff
 80065bc:	0800d298 	.word	0x0800d298
 80065c0:	0800d29c 	.word	0x0800d29c
 80065c4:	0800c2fc 	.word	0x0800c2fc
 80065c8:	0800d2a0 	.word	0x0800d2a0
 80065cc:	0800d2a4 	.word	0x0800d2a4
 80065d0:	0800d2a8 	.word	0x0800d2a8
 80065d4:	0800d2ac 	.word	0x0800d2ac

080065d8 <rtcSetAlarm>:

void rtcSetAlarm(){
 80065d8:	b590      	push	{r4, r7, lr}
 80065da:	b085      	sub	sp, #20
 80065dc:	af00      	add	r7, sp, #0
	uint32_t bcdtime, bcddate;
	uint32_t minuteFirstAlarm;
	uint32_t hourFirstAlarm;

	// First alarm
	if (isFirstAlarm){
 80065de:	4b69      	ldr	r3, [pc, #420]	; (8006784 <rtcSetAlarm+0x1ac>)
 80065e0:	681b      	ldr	r3, [r3, #0]
 80065e2:	2b00      	cmp	r3, #0
 80065e4:	d031      	beq.n	800664a <rtcSetAlarm+0x72>

		/* Manage alarm time minute substraction*/
		// current time minute >= 15
		if( (passes[0].passTime.minute) >= 2){
 80065e6:	4b68      	ldr	r3, [pc, #416]	; (8006788 <rtcSetAlarm+0x1b0>)
 80065e8:	691b      	ldr	r3, [r3, #16]
 80065ea:	2b01      	cmp	r3, #1
 80065ec:	d914      	bls.n	8006618 <rtcSetAlarm+0x40>
			bcdtime = ( ( byte2bcd(passes[0].passTime.hour) ) << 16U) | ( (byte2bcd((passes[0].passTime.minute) - 2) ) << 8U);
 80065ee:	4b66      	ldr	r3, [pc, #408]	; (8006788 <rtcSetAlarm+0x1b0>)
 80065f0:	68db      	ldr	r3, [r3, #12]
 80065f2:	b2db      	uxtb	r3, r3
 80065f4:	0018      	movs	r0, r3
 80065f6:	f7ff fe5d 	bl	80062b4 <byte2bcd>
 80065fa:	0003      	movs	r3, r0
 80065fc:	041c      	lsls	r4, r3, #16
 80065fe:	4b62      	ldr	r3, [pc, #392]	; (8006788 <rtcSetAlarm+0x1b0>)
 8006600:	691b      	ldr	r3, [r3, #16]
 8006602:	b2db      	uxtb	r3, r3
 8006604:	3b02      	subs	r3, #2
 8006606:	b2db      	uxtb	r3, r3
 8006608:	0018      	movs	r0, r3
 800660a:	f7ff fe53 	bl	80062b4 <byte2bcd>
 800660e:	0003      	movs	r3, r0
 8006610:	021b      	lsls	r3, r3, #8
 8006612:	4323      	orrs	r3, r4
 8006614:	60fb      	str	r3, [r7, #12]
 8006616:	e02a      	b.n	800666e <rtcSetAlarm+0x96>
		}

		// current time minute < 15
		else {

			hourFirstAlarm = passes[0].passTime.hour - 1;
 8006618:	4b5b      	ldr	r3, [pc, #364]	; (8006788 <rtcSetAlarm+0x1b0>)
 800661a:	68db      	ldr	r3, [r3, #12]
 800661c:	3b01      	subs	r3, #1
 800661e:	60bb      	str	r3, [r7, #8]
			minuteFirstAlarm = 60 + (passes[0].passTime.minute) - 2;
 8006620:	4b59      	ldr	r3, [pc, #356]	; (8006788 <rtcSetAlarm+0x1b0>)
 8006622:	691b      	ldr	r3, [r3, #16]
 8006624:	333a      	adds	r3, #58	; 0x3a
 8006626:	607b      	str	r3, [r7, #4]
			bcdtime = ( ( byte2bcd(hourFirstAlarm) ) << 16U ) | ( byte2bcd((minuteFirstAlarm) ) << 8U );
 8006628:	68bb      	ldr	r3, [r7, #8]
 800662a:	b2db      	uxtb	r3, r3
 800662c:	0018      	movs	r0, r3
 800662e:	f7ff fe41 	bl	80062b4 <byte2bcd>
 8006632:	0003      	movs	r3, r0
 8006634:	041c      	lsls	r4, r3, #16
 8006636:	687b      	ldr	r3, [r7, #4]
 8006638:	b2db      	uxtb	r3, r3
 800663a:	0018      	movs	r0, r3
 800663c:	f7ff fe3a 	bl	80062b4 <byte2bcd>
 8006640:	0003      	movs	r3, r0
 8006642:	021b      	lsls	r3, r3, #8
 8006644:	4323      	orrs	r3, r4
 8006646:	60fb      	str	r3, [r7, #12]
 8006648:	e011      	b.n	800666e <rtcSetAlarm+0x96>
		}
	}

	// Second alarm
	else {
		bcdtime = ( ( byte2bcd(passes[0].passTime.hour) ) << 16U) | ( (byte2bcd(passes[0].passTime.minute) ) << 8U);
 800664a:	4b4f      	ldr	r3, [pc, #316]	; (8006788 <rtcSetAlarm+0x1b0>)
 800664c:	68db      	ldr	r3, [r3, #12]
 800664e:	b2db      	uxtb	r3, r3
 8006650:	0018      	movs	r0, r3
 8006652:	f7ff fe2f 	bl	80062b4 <byte2bcd>
 8006656:	0003      	movs	r3, r0
 8006658:	041c      	lsls	r4, r3, #16
 800665a:	4b4b      	ldr	r3, [pc, #300]	; (8006788 <rtcSetAlarm+0x1b0>)
 800665c:	691b      	ldr	r3, [r3, #16]
 800665e:	b2db      	uxtb	r3, r3
 8006660:	0018      	movs	r0, r3
 8006662:	f7ff fe27 	bl	80062b4 <byte2bcd>
 8006666:	0003      	movs	r3, r0
 8006668:	021b      	lsls	r3, r3, #8
 800666a:	4323      	orrs	r3, r4
 800666c:	60fb      	str	r3, [r7, #12]
	}

	bcddate = ( ( byte2bcd(passes[0].passTime.day)) << 24U);
 800666e:	4b46      	ldr	r3, [pc, #280]	; (8006788 <rtcSetAlarm+0x1b0>)
 8006670:	689b      	ldr	r3, [r3, #8]
 8006672:	b2db      	uxtb	r3, r3
 8006674:	0018      	movs	r0, r3
 8006676:	f7ff fe1d 	bl	80062b4 <byte2bcd>
 800667a:	0003      	movs	r3, r0
 800667c:	061b      	lsls	r3, r3, #24
 800667e:	603b      	str	r3, [r7, #0]

	// Enable Write access for RTC registers
	RTC->WPR = 0xCA;
 8006680:	4b42      	ldr	r3, [pc, #264]	; (800678c <rtcSetAlarm+0x1b4>)
 8006682:	22ca      	movs	r2, #202	; 0xca
 8006684:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x53;
 8006686:	4b41      	ldr	r3, [pc, #260]	; (800678c <rtcSetAlarm+0x1b4>)
 8006688:	2253      	movs	r2, #83	; 0x53
 800668a:	625a      	str	r2, [r3, #36]	; 0x24

	// Disable Alarm A
	RTC->CR &= ~RTC_CR_ALRAE;
 800668c:	4b3f      	ldr	r3, [pc, #252]	; (800678c <rtcSetAlarm+0x1b4>)
 800668e:	689a      	ldr	r2, [r3, #8]
 8006690:	4b3e      	ldr	r3, [pc, #248]	; (800678c <rtcSetAlarm+0x1b4>)
 8006692:	493f      	ldr	r1, [pc, #252]	; (8006790 <rtcSetAlarm+0x1b8>)
 8006694:	400a      	ands	r2, r1
 8006696:	609a      	str	r2, [r3, #8]

	// Set alarm using date field
	RTC->ALRMAR &= ~RTC_ALRMAR_PM; // 24h format
 8006698:	4b3c      	ldr	r3, [pc, #240]	; (800678c <rtcSetAlarm+0x1b4>)
 800669a:	69da      	ldr	r2, [r3, #28]
 800669c:	4b3b      	ldr	r3, [pc, #236]	; (800678c <rtcSetAlarm+0x1b4>)
 800669e:	493d      	ldr	r1, [pc, #244]	; (8006794 <rtcSetAlarm+0x1bc>)
 80066a0:	400a      	ands	r2, r1
 80066a2:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_WDSEL; // Date
 80066a4:	4b39      	ldr	r3, [pc, #228]	; (800678c <rtcSetAlarm+0x1b4>)
 80066a6:	69da      	ldr	r2, [r3, #28]
 80066a8:	4b38      	ldr	r3, [pc, #224]	; (800678c <rtcSetAlarm+0x1b4>)
 80066aa:	493b      	ldr	r1, [pc, #236]	; (8006798 <rtcSetAlarm+0x1c0>)
 80066ac:	400a      	ands	r2, r1
 80066ae:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_MSK4; // Date
 80066b0:	4b36      	ldr	r3, [pc, #216]	; (800678c <rtcSetAlarm+0x1b4>)
 80066b2:	69da      	ldr	r2, [r3, #28]
 80066b4:	4b35      	ldr	r3, [pc, #212]	; (800678c <rtcSetAlarm+0x1b4>)
 80066b6:	0052      	lsls	r2, r2, #1
 80066b8:	0852      	lsrs	r2, r2, #1
 80066ba:	61da      	str	r2, [r3, #28]

	// Set alarm using time field (hour and minute)
	RTC->ALRMAR &= ~RTC_ALRMAR_MSK3; // Hour
 80066bc:	4b33      	ldr	r3, [pc, #204]	; (800678c <rtcSetAlarm+0x1b4>)
 80066be:	69da      	ldr	r2, [r3, #28]
 80066c0:	4b32      	ldr	r3, [pc, #200]	; (800678c <rtcSetAlarm+0x1b4>)
 80066c2:	4936      	ldr	r1, [pc, #216]	; (800679c <rtcSetAlarm+0x1c4>)
 80066c4:	400a      	ands	r2, r1
 80066c6:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_MSK2; // Minute
 80066c8:	4b30      	ldr	r3, [pc, #192]	; (800678c <rtcSetAlarm+0x1b4>)
 80066ca:	69da      	ldr	r2, [r3, #28]
 80066cc:	4b2f      	ldr	r3, [pc, #188]	; (800678c <rtcSetAlarm+0x1b4>)
 80066ce:	4934      	ldr	r1, [pc, #208]	; (80067a0 <rtcSetAlarm+0x1c8>)
 80066d0:	400a      	ands	r2, r1
 80066d2:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR |= RTC_ALRMAR_MSK1; // Second
 80066d4:	4b2d      	ldr	r3, [pc, #180]	; (800678c <rtcSetAlarm+0x1b4>)
 80066d6:	69da      	ldr	r2, [r3, #28]
 80066d8:	4b2c      	ldr	r3, [pc, #176]	; (800678c <rtcSetAlarm+0x1b4>)
 80066da:	2180      	movs	r1, #128	; 0x80
 80066dc:	430a      	orrs	r2, r1
 80066de:	61da      	str	r2, [r3, #28]

	// Set alarm
	RTC->ALRMAR &= ~RTC_ALRMAR_DU_Msk; // Reset date unit
 80066e0:	4b2a      	ldr	r3, [pc, #168]	; (800678c <rtcSetAlarm+0x1b4>)
 80066e2:	69da      	ldr	r2, [r3, #28]
 80066e4:	4b29      	ldr	r3, [pc, #164]	; (800678c <rtcSetAlarm+0x1b4>)
 80066e6:	492f      	ldr	r1, [pc, #188]	; (80067a4 <rtcSetAlarm+0x1cc>)
 80066e8:	400a      	ands	r2, r1
 80066ea:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_DT_Msk; // Reset date teens
 80066ec:	4b27      	ldr	r3, [pc, #156]	; (800678c <rtcSetAlarm+0x1b4>)
 80066ee:	69da      	ldr	r2, [r3, #28]
 80066f0:	4b26      	ldr	r3, [pc, #152]	; (800678c <rtcSetAlarm+0x1b4>)
 80066f2:	492d      	ldr	r1, [pc, #180]	; (80067a8 <rtcSetAlarm+0x1d0>)
 80066f4:	400a      	ands	r2, r1
 80066f6:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_HU_Msk; // Reset date unit
 80066f8:	4b24      	ldr	r3, [pc, #144]	; (800678c <rtcSetAlarm+0x1b4>)
 80066fa:	69da      	ldr	r2, [r3, #28]
 80066fc:	4b23      	ldr	r3, [pc, #140]	; (800678c <rtcSetAlarm+0x1b4>)
 80066fe:	492b      	ldr	r1, [pc, #172]	; (80067ac <rtcSetAlarm+0x1d4>)
 8006700:	400a      	ands	r2, r1
 8006702:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_HT_Msk; // Reset hour teens
 8006704:	4b21      	ldr	r3, [pc, #132]	; (800678c <rtcSetAlarm+0x1b4>)
 8006706:	69da      	ldr	r2, [r3, #28]
 8006708:	4b20      	ldr	r3, [pc, #128]	; (800678c <rtcSetAlarm+0x1b4>)
 800670a:	4929      	ldr	r1, [pc, #164]	; (80067b0 <rtcSetAlarm+0x1d8>)
 800670c:	400a      	ands	r2, r1
 800670e:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_MNU_Msk; // Reset hour teens
 8006710:	4b1e      	ldr	r3, [pc, #120]	; (800678c <rtcSetAlarm+0x1b4>)
 8006712:	69da      	ldr	r2, [r3, #28]
 8006714:	4b1d      	ldr	r3, [pc, #116]	; (800678c <rtcSetAlarm+0x1b4>)
 8006716:	4927      	ldr	r1, [pc, #156]	; (80067b4 <rtcSetAlarm+0x1dc>)
 8006718:	400a      	ands	r2, r1
 800671a:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_MNT_Msk; // Reset date unit
 800671c:	4b1b      	ldr	r3, [pc, #108]	; (800678c <rtcSetAlarm+0x1b4>)
 800671e:	69da      	ldr	r2, [r3, #28]
 8006720:	4b1a      	ldr	r3, [pc, #104]	; (800678c <rtcSetAlarm+0x1b4>)
 8006722:	4925      	ldr	r1, [pc, #148]	; (80067b8 <rtcSetAlarm+0x1e0>)
 8006724:	400a      	ands	r2, r1
 8006726:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR |= bcdtime | bcddate;
 8006728:	4b18      	ldr	r3, [pc, #96]	; (800678c <rtcSetAlarm+0x1b4>)
 800672a:	69d9      	ldr	r1, [r3, #28]
 800672c:	68fa      	ldr	r2, [r7, #12]
 800672e:	683b      	ldr	r3, [r7, #0]
 8006730:	431a      	orrs	r2, r3
 8006732:	4b16      	ldr	r3, [pc, #88]	; (800678c <rtcSetAlarm+0x1b4>)
 8006734:	430a      	orrs	r2, r1
 8006736:	61da      	str	r2, [r3, #28]

	// Enable Alarm A and associated interrupt
	RTC->CR |= RTC_CR_ALRAE | RTC_CR_ALRAIE;
 8006738:	4b14      	ldr	r3, [pc, #80]	; (800678c <rtcSetAlarm+0x1b4>)
 800673a:	689a      	ldr	r2, [r3, #8]
 800673c:	4b13      	ldr	r3, [pc, #76]	; (800678c <rtcSetAlarm+0x1b4>)
 800673e:	2188      	movs	r1, #136	; 0x88
 8006740:	0149      	lsls	r1, r1, #5
 8006742:	430a      	orrs	r2, r1
 8006744:	609a      	str	r2, [r3, #8]

	// Enable EXTI line 17
	EXTI->IMR |= EXTI_IMR_IM17;
 8006746:	4b1d      	ldr	r3, [pc, #116]	; (80067bc <rtcSetAlarm+0x1e4>)
 8006748:	681a      	ldr	r2, [r3, #0]
 800674a:	4b1c      	ldr	r3, [pc, #112]	; (80067bc <rtcSetAlarm+0x1e4>)
 800674c:	2180      	movs	r1, #128	; 0x80
 800674e:	0289      	lsls	r1, r1, #10
 8006750:	430a      	orrs	r2, r1
 8006752:	601a      	str	r2, [r3, #0]

	// Enable Rising / Disable Falling trigger
	EXTI->RTSR |=  EXTI_RTSR_RT17;
 8006754:	4b19      	ldr	r3, [pc, #100]	; (80067bc <rtcSetAlarm+0x1e4>)
 8006756:	689a      	ldr	r2, [r3, #8]
 8006758:	4b18      	ldr	r3, [pc, #96]	; (80067bc <rtcSetAlarm+0x1e4>)
 800675a:	2180      	movs	r1, #128	; 0x80
 800675c:	0289      	lsls	r1, r1, #10
 800675e:	430a      	orrs	r2, r1
 8006760:	609a      	str	r2, [r3, #8]
	EXTI->FTSR &= ~EXTI_FTSR_FT17;
 8006762:	4b16      	ldr	r3, [pc, #88]	; (80067bc <rtcSetAlarm+0x1e4>)
 8006764:	68da      	ldr	r2, [r3, #12]
 8006766:	4b15      	ldr	r3, [pc, #84]	; (80067bc <rtcSetAlarm+0x1e4>)
 8006768:	4915      	ldr	r1, [pc, #84]	; (80067c0 <rtcSetAlarm+0x1e8>)
 800676a:	400a      	ands	r2, r1
 800676c:	60da      	str	r2, [r3, #12]

	// Disable Write access for RTC registers
	RTC->WPR = 0xFE;
 800676e:	4b07      	ldr	r3, [pc, #28]	; (800678c <rtcSetAlarm+0x1b4>)
 8006770:	22fe      	movs	r2, #254	; 0xfe
 8006772:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x64;
 8006774:	4b05      	ldr	r3, [pc, #20]	; (800678c <rtcSetAlarm+0x1b4>)
 8006776:	2264      	movs	r2, #100	; 0x64
 8006778:	625a      	str	r2, [r3, #36]	; 0x24
}
 800677a:	46c0      	nop			; (mov r8, r8)
 800677c:	46bd      	mov	sp, r7
 800677e:	b005      	add	sp, #20
 8006780:	bd90      	pop	{r4, r7, pc}
 8006782:	46c0      	nop			; (mov r8, r8)
 8006784:	20000018 	.word	0x20000018
 8006788:	2000028c 	.word	0x2000028c
 800678c:	40002800 	.word	0x40002800
 8006790:	fffffeff 	.word	0xfffffeff
 8006794:	ffbfffff 	.word	0xffbfffff
 8006798:	bfffffff 	.word	0xbfffffff
 800679c:	ff7fffff 	.word	0xff7fffff
 80067a0:	ffff7fff 	.word	0xffff7fff
 80067a4:	f0ffffff 	.word	0xf0ffffff
 80067a8:	cfffffff 	.word	0xcfffffff
 80067ac:	fff0ffff 	.word	0xfff0ffff
 80067b0:	ffcfffff 	.word	0xffcfffff
 80067b4:	fffff0ff 	.word	0xfffff0ff
 80067b8:	ffff8fff 	.word	0xffff8fff
 80067bc:	40010400 	.word	0x40010400
 80067c0:	fffdffff 	.word	0xfffdffff

080067c4 <rtcDisableAlarm>:

void rtcDisableAlarm(){
 80067c4:	b580      	push	{r7, lr}
 80067c6:	af00      	add	r7, sp, #0

	// Enable Write access for RTC registers
	RTC->WPR = 0xCA;
 80067c8:	4b0a      	ldr	r3, [pc, #40]	; (80067f4 <rtcDisableAlarm+0x30>)
 80067ca:	22ca      	movs	r2, #202	; 0xca
 80067cc:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x53;
 80067ce:	4b09      	ldr	r3, [pc, #36]	; (80067f4 <rtcDisableAlarm+0x30>)
 80067d0:	2253      	movs	r2, #83	; 0x53
 80067d2:	625a      	str	r2, [r3, #36]	; 0x24

	// Disable Alarm A
	RTC->CR &= ~RTC_CR_ALRAE;
 80067d4:	4b07      	ldr	r3, [pc, #28]	; (80067f4 <rtcDisableAlarm+0x30>)
 80067d6:	689a      	ldr	r2, [r3, #8]
 80067d8:	4b06      	ldr	r3, [pc, #24]	; (80067f4 <rtcDisableAlarm+0x30>)
 80067da:	4907      	ldr	r1, [pc, #28]	; (80067f8 <rtcDisableAlarm+0x34>)
 80067dc:	400a      	ands	r2, r1
 80067de:	609a      	str	r2, [r3, #8]

	// Disable Write access for RTC registers
	RTC->WPR = 0xFE;
 80067e0:	4b04      	ldr	r3, [pc, #16]	; (80067f4 <rtcDisableAlarm+0x30>)
 80067e2:	22fe      	movs	r2, #254	; 0xfe
 80067e4:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x64;
 80067e6:	4b03      	ldr	r3, [pc, #12]	; (80067f4 <rtcDisableAlarm+0x30>)
 80067e8:	2264      	movs	r2, #100	; 0x64
 80067ea:	625a      	str	r2, [r3, #36]	; 0x24

}
 80067ec:	46c0      	nop			; (mov r8, r8)
 80067ee:	46bd      	mov	sp, r7
 80067f0:	bd80      	pop	{r7, pc}
 80067f2:	46c0      	nop			; (mov r8, r8)
 80067f4:	40002800 	.word	0x40002800
 80067f8:	fffffeff 	.word	0xfffffeff

080067fc <RTC_IRQHandler>:

void RTC_IRQHandler(){
 80067fc:	b580      	push	{r7, lr}
 80067fe:	af00      	add	r7, sp, #0

	// Test for RTC Alarm A
	if ((RTC->ISR & RTC_ISR_ALRAF) == RTC_ISR_ALRAF){
 8006800:	4b18      	ldr	r3, [pc, #96]	; (8006864 <RTC_IRQHandler+0x68>)
 8006802:	68da      	ldr	r2, [r3, #12]
 8006804:	2380      	movs	r3, #128	; 0x80
 8006806:	005b      	lsls	r3, r3, #1
 8006808:	401a      	ands	r2, r3
 800680a:	2380      	movs	r3, #128	; 0x80
 800680c:	005b      	lsls	r3, r3, #1
 800680e:	429a      	cmp	r2, r3
 8006810:	d124      	bne.n	800685c <RTC_IRQHandler+0x60>

		// Get the current time
		rtcGetTime();
 8006812:	f000 f82f 	bl	8006874 <rtcGetTime>

		// Disable the alarm
		rtcDisableAlarm();
 8006816:	f7ff ffd5 	bl	80067c4 <rtcDisableAlarm>

		// Clear the interrupt pending bit
		RTC->ISR &= ~RTC_ISR_ALRAF;
 800681a:	4b12      	ldr	r3, [pc, #72]	; (8006864 <RTC_IRQHandler+0x68>)
 800681c:	68da      	ldr	r2, [r3, #12]
 800681e:	4b11      	ldr	r3, [pc, #68]	; (8006864 <RTC_IRQHandler+0x68>)
 8006820:	4911      	ldr	r1, [pc, #68]	; (8006868 <RTC_IRQHandler+0x6c>)
 8006822:	400a      	ands	r2, r1
 8006824:	60da      	str	r2, [r3, #12]

		// Clear EXTI pending bit also
		EXTI->PR = EXTI_PR_PR17;
 8006826:	4b11      	ldr	r3, [pc, #68]	; (800686c <RTC_IRQHandler+0x70>)
 8006828:	2280      	movs	r2, #128	; 0x80
 800682a:	0292      	lsls	r2, r2, #10
 800682c:	615a      	str	r2, [r3, #20]

		// First alarm : Go to the next pass starting point
		if(isFirstAlarm){
 800682e:	4b10      	ldr	r3, [pc, #64]	; (8006870 <RTC_IRQHandler+0x74>)
 8006830:	681b      	ldr	r3, [r3, #0]
 8006832:	2b00      	cmp	r3, #0
 8006834:	d009      	beq.n	800684a <RTC_IRQHandler+0x4e>

			goToNextPassStartPoint();
 8006836:	f7fe ff95 	bl	8005764 <goToNextPassStartPoint>
			isFirstAlarm = 0;
 800683a:	4b0d      	ldr	r3, [pc, #52]	; (8006870 <RTC_IRQHandler+0x74>)
 800683c:	2200      	movs	r2, #0
 800683e:	601a      	str	r2, [r3, #0]

			rtcSetAlarm();
 8006840:	f7ff feca 	bl	80065d8 <rtcSetAlarm>
			rtcGetAlarm();
 8006844:	f000 f88c 	bl	8006960 <rtcGetAlarm>

			isFirstAlarm = 1;
		}

	}
}
 8006848:	e008      	b.n	800685c <RTC_IRQHandler+0x60>
			dacStart();
 800684a:	f7fe fc5d 	bl	8005108 <dacStart>
			pwmPassStart();
 800684e:	f7ff fa9d 	bl	8005d8c <pwmPassStart>
			timerPassStart();
 8006852:	f000 f979 	bl	8006b48 <timerPassStart>
			isFirstAlarm = 1;
 8006856:	4b06      	ldr	r3, [pc, #24]	; (8006870 <RTC_IRQHandler+0x74>)
 8006858:	2201      	movs	r2, #1
 800685a:	601a      	str	r2, [r3, #0]
}
 800685c:	46c0      	nop			; (mov r8, r8)
 800685e:	46bd      	mov	sp, r7
 8006860:	bd80      	pop	{r7, pc}
 8006862:	46c0      	nop			; (mov r8, r8)
 8006864:	40002800 	.word	0x40002800
 8006868:	fffffeff 	.word	0xfffffeff
 800686c:	40010400 	.word	0x40010400
 8006870:	20000018 	.word	0x20000018

08006874 <rtcGetTime>:

void rtcGetTime(){
 8006874:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006876:	b08b      	sub	sp, #44	; 0x2c
 8006878:	af04      	add	r7, sp, #16

	Time currentTime;

	// Wait until the calendar shadow registers are synchronized
	while((RTC->ISR & RTC_ISR_RSF) != RTC_ISR_RSF);
 800687a:	46c0      	nop			; (mov r8, r8)
 800687c:	4b36      	ldr	r3, [pc, #216]	; (8006958 <rtcGetTime+0xe4>)
 800687e:	68db      	ldr	r3, [r3, #12]
 8006880:	2220      	movs	r2, #32
 8006882:	4013      	ands	r3, r2
 8006884:	2b20      	cmp	r3, #32
 8006886:	d1f9      	bne.n	800687c <rtcGetTime+0x8>

	currentTime.year = bcd2byte((RTC->DR & (RTC_DR_YT_Msk  | RTC_DR_YU_Msk )) >> RTC_DR_YU_Pos);
 8006888:	4b33      	ldr	r3, [pc, #204]	; (8006958 <rtcGetTime+0xe4>)
 800688a:	685b      	ldr	r3, [r3, #4]
 800688c:	0c1b      	lsrs	r3, r3, #16
 800688e:	b2db      	uxtb	r3, r3
 8006890:	0018      	movs	r0, r3
 8006892:	f7ff fd36 	bl	8006302 <bcd2byte>
 8006896:	0003      	movs	r3, r0
 8006898:	001a      	movs	r2, r3
 800689a:	003b      	movs	r3, r7
 800689c:	601a      	str	r2, [r3, #0]
	currentTime.month = bcd2byte((RTC->DR & (RTC_DR_MT_Msk | RTC_DR_MU_Msk)) >> RTC_DR_MU_Pos);
 800689e:	4b2e      	ldr	r3, [pc, #184]	; (8006958 <rtcGetTime+0xe4>)
 80068a0:	685b      	ldr	r3, [r3, #4]
 80068a2:	0a1b      	lsrs	r3, r3, #8
 80068a4:	b2db      	uxtb	r3, r3
 80068a6:	221f      	movs	r2, #31
 80068a8:	4013      	ands	r3, r2
 80068aa:	b2db      	uxtb	r3, r3
 80068ac:	0018      	movs	r0, r3
 80068ae:	f7ff fd28 	bl	8006302 <bcd2byte>
 80068b2:	0003      	movs	r3, r0
 80068b4:	001a      	movs	r2, r3
 80068b6:	003b      	movs	r3, r7
 80068b8:	605a      	str	r2, [r3, #4]
	currentTime.day = bcd2byte((RTC->DR & (RTC_DR_DT_Msk  | RTC_DR_DU_Msk )) >> RTC_DR_DU_Pos);
 80068ba:	4b27      	ldr	r3, [pc, #156]	; (8006958 <rtcGetTime+0xe4>)
 80068bc:	685b      	ldr	r3, [r3, #4]
 80068be:	b2db      	uxtb	r3, r3
 80068c0:	223f      	movs	r2, #63	; 0x3f
 80068c2:	4013      	ands	r3, r2
 80068c4:	b2db      	uxtb	r3, r3
 80068c6:	0018      	movs	r0, r3
 80068c8:	f7ff fd1b 	bl	8006302 <bcd2byte>
 80068cc:	0003      	movs	r3, r0
 80068ce:	001a      	movs	r2, r3
 80068d0:	003b      	movs	r3, r7
 80068d2:	609a      	str	r2, [r3, #8]

	currentTime.hour = bcd2byte((RTC->TR & (RTC_TR_HT_Msk  | RTC_TR_HU_Msk )) >> RTC_TR_HU_Pos);
 80068d4:	4b20      	ldr	r3, [pc, #128]	; (8006958 <rtcGetTime+0xe4>)
 80068d6:	681b      	ldr	r3, [r3, #0]
 80068d8:	0c1b      	lsrs	r3, r3, #16
 80068da:	b2db      	uxtb	r3, r3
 80068dc:	223f      	movs	r2, #63	; 0x3f
 80068de:	4013      	ands	r3, r2
 80068e0:	b2db      	uxtb	r3, r3
 80068e2:	0018      	movs	r0, r3
 80068e4:	f7ff fd0d 	bl	8006302 <bcd2byte>
 80068e8:	0003      	movs	r3, r0
 80068ea:	001a      	movs	r2, r3
 80068ec:	003b      	movs	r3, r7
 80068ee:	60da      	str	r2, [r3, #12]
	currentTime.minute = bcd2byte((RTC->TR & (RTC_TR_MNT_Msk | RTC_TR_MNU_Msk)) >> RTC_TR_MNU_Pos);
 80068f0:	4b19      	ldr	r3, [pc, #100]	; (8006958 <rtcGetTime+0xe4>)
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	0a1b      	lsrs	r3, r3, #8
 80068f6:	b2db      	uxtb	r3, r3
 80068f8:	227f      	movs	r2, #127	; 0x7f
 80068fa:	4013      	ands	r3, r2
 80068fc:	b2db      	uxtb	r3, r3
 80068fe:	0018      	movs	r0, r3
 8006900:	f7ff fcff 	bl	8006302 <bcd2byte>
 8006904:	0003      	movs	r3, r0
 8006906:	001a      	movs	r2, r3
 8006908:	003b      	movs	r3, r7
 800690a:	611a      	str	r2, [r3, #16]
	currentTime.second = bcd2byte((RTC->TR & (RTC_TR_ST_Msk  | RTC_TR_SU_Msk )) >> RTC_TR_SU_Pos);
 800690c:	4b12      	ldr	r3, [pc, #72]	; (8006958 <rtcGetTime+0xe4>)
 800690e:	681b      	ldr	r3, [r3, #0]
 8006910:	b2db      	uxtb	r3, r3
 8006912:	227f      	movs	r2, #127	; 0x7f
 8006914:	4013      	ands	r3, r2
 8006916:	b2db      	uxtb	r3, r3
 8006918:	0018      	movs	r0, r3
 800691a:	f7ff fcf2 	bl	8006302 <bcd2byte>
 800691e:	0003      	movs	r3, r0
 8006920:	001a      	movs	r2, r3
 8006922:	003b      	movs	r3, r7
 8006924:	615a      	str	r2, [r3, #20]

	printf("CurrentTime : %ld/%.2ld/%ld %ld:%ld:%ld\n",currentTime.year,currentTime.month, currentTime.day, currentTime.hour,currentTime.minute, currentTime.second);
 8006926:	003b      	movs	r3, r7
 8006928:	681c      	ldr	r4, [r3, #0]
 800692a:	003b      	movs	r3, r7
 800692c:	685d      	ldr	r5, [r3, #4]
 800692e:	003b      	movs	r3, r7
 8006930:	689e      	ldr	r6, [r3, #8]
 8006932:	003b      	movs	r3, r7
 8006934:	68da      	ldr	r2, [r3, #12]
 8006936:	003b      	movs	r3, r7
 8006938:	6919      	ldr	r1, [r3, #16]
 800693a:	003b      	movs	r3, r7
 800693c:	695b      	ldr	r3, [r3, #20]
 800693e:	4807      	ldr	r0, [pc, #28]	; (800695c <rtcGetTime+0xe8>)
 8006940:	9302      	str	r3, [sp, #8]
 8006942:	9101      	str	r1, [sp, #4]
 8006944:	9200      	str	r2, [sp, #0]
 8006946:	0033      	movs	r3, r6
 8006948:	002a      	movs	r2, r5
 800694a:	0021      	movs	r1, r4
 800694c:	f001 f9d4 	bl	8007cf8 <iprintf>

}
 8006950:	46c0      	nop			; (mov r8, r8)
 8006952:	46bd      	mov	sp, r7
 8006954:	b007      	add	sp, #28
 8006956:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006958:	40002800 	.word	0x40002800
 800695c:	0800d2e0 	.word	0x0800d2e0

08006960 <rtcGetAlarm>:

void rtcGetAlarm(){
 8006960:	b580      	push	{r7, lr}
 8006962:	b086      	sub	sp, #24
 8006964:	af00      	add	r7, sp, #0

	Time alarmTime;

	alarmTime.day = bcd2byte((RTC->ALRMAR & (RTC_ALRMAR_DT_Msk | RTC_ALRMAR_DU_Msk )) >> RTC_ALRMAR_DU_Pos);
 8006966:	4b1b      	ldr	r3, [pc, #108]	; (80069d4 <rtcGetAlarm+0x74>)
 8006968:	69db      	ldr	r3, [r3, #28]
 800696a:	0e1b      	lsrs	r3, r3, #24
 800696c:	b2db      	uxtb	r3, r3
 800696e:	223f      	movs	r2, #63	; 0x3f
 8006970:	4013      	ands	r3, r2
 8006972:	b2db      	uxtb	r3, r3
 8006974:	0018      	movs	r0, r3
 8006976:	f7ff fcc4 	bl	8006302 <bcd2byte>
 800697a:	0003      	movs	r3, r0
 800697c:	001a      	movs	r2, r3
 800697e:	003b      	movs	r3, r7
 8006980:	609a      	str	r2, [r3, #8]

	alarmTime.hour = bcd2byte((RTC->ALRMAR & (RTC_ALRMAR_HT_Msk | RTC_ALRMAR_HU_Msk )) >>RTC_ALRMAR_HU_Pos);
 8006982:	4b14      	ldr	r3, [pc, #80]	; (80069d4 <rtcGetAlarm+0x74>)
 8006984:	69db      	ldr	r3, [r3, #28]
 8006986:	0c1b      	lsrs	r3, r3, #16
 8006988:	b2db      	uxtb	r3, r3
 800698a:	223f      	movs	r2, #63	; 0x3f
 800698c:	4013      	ands	r3, r2
 800698e:	b2db      	uxtb	r3, r3
 8006990:	0018      	movs	r0, r3
 8006992:	f7ff fcb6 	bl	8006302 <bcd2byte>
 8006996:	0003      	movs	r3, r0
 8006998:	001a      	movs	r2, r3
 800699a:	003b      	movs	r3, r7
 800699c:	60da      	str	r2, [r3, #12]

	alarmTime.minute = bcd2byte((RTC->ALRMAR & (RTC_ALRMAR_MNT_Msk | RTC_ALRMAR_MNU_Msk)) >> RTC_ALRMAR_MNU_Pos);
 800699e:	4b0d      	ldr	r3, [pc, #52]	; (80069d4 <rtcGetAlarm+0x74>)
 80069a0:	69db      	ldr	r3, [r3, #28]
 80069a2:	0a1b      	lsrs	r3, r3, #8
 80069a4:	b2db      	uxtb	r3, r3
 80069a6:	227f      	movs	r2, #127	; 0x7f
 80069a8:	4013      	ands	r3, r2
 80069aa:	b2db      	uxtb	r3, r3
 80069ac:	0018      	movs	r0, r3
 80069ae:	f7ff fca8 	bl	8006302 <bcd2byte>
 80069b2:	0003      	movs	r3, r0
 80069b4:	001a      	movs	r2, r3
 80069b6:	003b      	movs	r3, r7
 80069b8:	611a      	str	r2, [r3, #16]

	printf("alarmTime : %ld %ld:%ld\n",alarmTime.day, alarmTime.hour,alarmTime.minute);
 80069ba:	003b      	movs	r3, r7
 80069bc:	6899      	ldr	r1, [r3, #8]
 80069be:	003b      	movs	r3, r7
 80069c0:	68da      	ldr	r2, [r3, #12]
 80069c2:	003b      	movs	r3, r7
 80069c4:	691b      	ldr	r3, [r3, #16]
 80069c6:	4804      	ldr	r0, [pc, #16]	; (80069d8 <rtcGetAlarm+0x78>)
 80069c8:	f001 f996 	bl	8007cf8 <iprintf>
}
 80069cc:	46c0      	nop			; (mov r8, r8)
 80069ce:	46bd      	mov	sp, r7
 80069d0:	b006      	add	sp, #24
 80069d2:	bd80      	pop	{r7, pc}
 80069d4:	40002800 	.word	0x40002800
 80069d8:	0800d30c 	.word	0x0800d30c

080069dc <timerInit>:
/*                                                                            */
/*                   				Timer                         		  	  */
/*                                                                            */
/******************************************************************************/

void timerInit(void){
 80069dc:	b580      	push	{r7, lr}
 80069de:	af00      	add	r7, sp, #0

	// Enable the clock for the TIM6 and the TIM7
	RCC->APB1ENR |= RCC_APB1ENR_TIM6EN | RCC_APB1ENR_TIM7EN;
 80069e0:	4b23      	ldr	r3, [pc, #140]	; (8006a70 <timerInit+0x94>)
 80069e2:	69da      	ldr	r2, [r3, #28]
 80069e4:	4b22      	ldr	r3, [pc, #136]	; (8006a70 <timerInit+0x94>)
 80069e6:	2130      	movs	r1, #48	; 0x30
 80069e8:	430a      	orrs	r2, r1
 80069ea:	61da      	str	r2, [r3, #28]

	// Reset TIM6 configuration
	TIM6->CR1 = 0x0000;
 80069ec:	4b21      	ldr	r3, [pc, #132]	; (8006a74 <timerInit+0x98>)
 80069ee:	2200      	movs	r2, #0
 80069f0:	601a      	str	r2, [r3, #0]
	TIM6->CR2 = 0x0000;
 80069f2:	4b20      	ldr	r3, [pc, #128]	; (8006a74 <timerInit+0x98>)
 80069f4:	2200      	movs	r2, #0
 80069f6:	605a      	str	r2, [r3, #4]

	// Reset TIM7 configuration
	TIM7->CR1 = 0x0000;
 80069f8:	4b1f      	ldr	r3, [pc, #124]	; (8006a78 <timerInit+0x9c>)
 80069fa:	2200      	movs	r2, #0
 80069fc:	601a      	str	r2, [r3, #0]
	TIM7->CR2 = 0x0000;
 80069fe:	4b1e      	ldr	r3, [pc, #120]	; (8006a78 <timerInit+0x9c>)
 8006a00:	2200      	movs	r2, #0
 8006a02:	605a      	str	r2, [r3, #4]

	// Set TIM6 prescaler to get a counting period of 1 ms
	TIM6->PSC = (uint16_t) (8000 - 1);
 8006a04:	4b1b      	ldr	r3, [pc, #108]	; (8006a74 <timerInit+0x98>)
 8006a06:	4a1d      	ldr	r2, [pc, #116]	; (8006a7c <timerInit+0xa0>)
 8006a08:	629a      	str	r2, [r3, #40]	; 0x28

	// Set TIM7 prescaler to get a counting period of 1 ms
	TIM7->PSC = (uint16_t) (8000 - 1);
 8006a0a:	4b1b      	ldr	r3, [pc, #108]	; (8006a78 <timerInit+0x9c>)
 8006a0c:	4a1b      	ldr	r2, [pc, #108]	; (8006a7c <timerInit+0xa0>)
 8006a0e:	629a      	str	r2, [r3, #40]	; 0x28

	// Set TIM6 auto-reload register to reset the counter every 100 ms
	TIM6->ARR = (uint16_t) (100 - 1);
 8006a10:	4b18      	ldr	r3, [pc, #96]	; (8006a74 <timerInit+0x98>)
 8006a12:	2263      	movs	r2, #99	; 0x63
 8006a14:	62da      	str	r2, [r3, #44]	; 0x2c

	// Set TIM7 auto-reload register to reset the counter every 100 ms
	TIM7->ARR = (uint16_t) (100 - 1);
 8006a16:	4b18      	ldr	r3, [pc, #96]	; (8006a78 <timerInit+0x9c>)
 8006a18:	2263      	movs	r2, #99	; 0x63
 8006a1a:	62da      	str	r2, [r3, #44]	; 0x2c

	// Enable auto-reload preload
	TIM6->CR1 |= TIM_CR1_ARPE;
 8006a1c:	4b15      	ldr	r3, [pc, #84]	; (8006a74 <timerInit+0x98>)
 8006a1e:	681a      	ldr	r2, [r3, #0]
 8006a20:	4b14      	ldr	r3, [pc, #80]	; (8006a74 <timerInit+0x98>)
 8006a22:	2180      	movs	r1, #128	; 0x80
 8006a24:	430a      	orrs	r2, r1
 8006a26:	601a      	str	r2, [r3, #0]

	// Enable auto-reload preload
	TIM7->CR1 |= TIM_CR1_ARPE;
 8006a28:	4b13      	ldr	r3, [pc, #76]	; (8006a78 <timerInit+0x9c>)
 8006a2a:	681a      	ldr	r2, [r3, #0]
 8006a2c:	4b12      	ldr	r3, [pc, #72]	; (8006a78 <timerInit+0x9c>)
 8006a2e:	2180      	movs	r1, #128	; 0x80
 8006a30:	430a      	orrs	r2, r1
 8006a32:	601a      	str	r2, [r3, #0]

	// Setting UG bit does not produce an interrupt
	TIM6->CR1 |= TIM_CR1_URS;
 8006a34:	4b0f      	ldr	r3, [pc, #60]	; (8006a74 <timerInit+0x98>)
 8006a36:	681a      	ldr	r2, [r3, #0]
 8006a38:	4b0e      	ldr	r3, [pc, #56]	; (8006a74 <timerInit+0x98>)
 8006a3a:	2104      	movs	r1, #4
 8006a3c:	430a      	orrs	r2, r1
 8006a3e:	601a      	str	r2, [r3, #0]

	// Setting UG bit does not produce an interrupt
	TIM7->CR1 |= TIM_CR1_URS;
 8006a40:	4b0d      	ldr	r3, [pc, #52]	; (8006a78 <timerInit+0x9c>)
 8006a42:	681a      	ldr	r2, [r3, #0]
 8006a44:	4b0c      	ldr	r3, [pc, #48]	; (8006a78 <timerInit+0x9c>)
 8006a46:	2104      	movs	r1, #4
 8006a48:	430a      	orrs	r2, r1
 8006a4a:	601a      	str	r2, [r3, #0]

	// Set priority level 1 for TIM6 interrupt
	NVIC_SetPriority(TIM6_DAC_IRQn, 3);
 8006a4c:	2103      	movs	r1, #3
 8006a4e:	2011      	movs	r0, #17
 8006a50:	f7fc fc66 	bl	8003320 <__NVIC_SetPriority>

	// Enable TIM6 interrupts
	NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8006a54:	2011      	movs	r0, #17
 8006a56:	f7fc fc49 	bl	80032ec <__NVIC_EnableIRQ>

	// Set priority level 1 for TIM7 interrupt
	NVIC_SetPriority(TIM7_IRQn, 3);
 8006a5a:	2103      	movs	r1, #3
 8006a5c:	2012      	movs	r0, #18
 8006a5e:	f7fc fc5f 	bl	8003320 <__NVIC_SetPriority>

	// Enable TIM7 interrupts
	NVIC_EnableIRQ(TIM7_IRQn);
 8006a62:	2012      	movs	r0, #18
 8006a64:	f7fc fc42 	bl	80032ec <__NVIC_EnableIRQ>

}
 8006a68:	46c0      	nop			; (mov r8, r8)
 8006a6a:	46bd      	mov	sp, r7
 8006a6c:	bd80      	pop	{r7, pc}
 8006a6e:	46c0      	nop			; (mov r8, r8)
 8006a70:	40021000 	.word	0x40021000
 8006a74:	40001000 	.word	0x40001000
 8006a78:	40001400 	.word	0x40001400
 8006a7c:	00001f3f 	.word	0x00001f3f

08006a80 <timerGoToNextPassStartPointStart>:

/********************************** GO TO NEXT PASS START POINT ********************************************/

void timerGoToNextPassStartPointStart(){
 8006a80:	b580      	push	{r7, lr}
 8006a82:	af00      	add	r7, sp, #0

	// Reset counter
	TIM7->EGR |= TIM_EGR_UG;
 8006a84:	4b0c      	ldr	r3, [pc, #48]	; (8006ab8 <timerGoToNextPassStartPointStart+0x38>)
 8006a86:	695a      	ldr	r2, [r3, #20]
 8006a88:	4b0b      	ldr	r3, [pc, #44]	; (8006ab8 <timerGoToNextPassStartPointStart+0x38>)
 8006a8a:	2101      	movs	r1, #1
 8006a8c:	430a      	orrs	r2, r1
 8006a8e:	615a      	str	r2, [r3, #20]

	// Enable Interrupt upon Update Event
	TIM7->DIER |= TIM_DIER_UIE;
 8006a90:	4b09      	ldr	r3, [pc, #36]	; (8006ab8 <timerGoToNextPassStartPointStart+0x38>)
 8006a92:	68da      	ldr	r2, [r3, #12]
 8006a94:	4b08      	ldr	r3, [pc, #32]	; (8006ab8 <timerGoToNextPassStartPointStart+0x38>)
 8006a96:	2101      	movs	r1, #1
 8006a98:	430a      	orrs	r2, r1
 8006a9a:	60da      	str	r2, [r3, #12]

	// Start TIM7 counter
	TIM7->CR1 |= TIM_CR1_CEN;
 8006a9c:	4b06      	ldr	r3, [pc, #24]	; (8006ab8 <timerGoToNextPassStartPointStart+0x38>)
 8006a9e:	681a      	ldr	r2, [r3, #0]
 8006aa0:	4b05      	ldr	r3, [pc, #20]	; (8006ab8 <timerGoToNextPassStartPointStart+0x38>)
 8006aa2:	2101      	movs	r1, #1
 8006aa4:	430a      	orrs	r2, r1
 8006aa6:	601a      	str	r2, [r3, #0]

	printf("Start timer travel to the next pass starting point ! \n");
 8006aa8:	4b04      	ldr	r3, [pc, #16]	; (8006abc <timerGoToNextPassStartPointStart+0x3c>)
 8006aaa:	0018      	movs	r0, r3
 8006aac:	f001 f99e 	bl	8007dec <puts>
}
 8006ab0:	46c0      	nop			; (mov r8, r8)
 8006ab2:	46bd      	mov	sp, r7
 8006ab4:	bd80      	pop	{r7, pc}
 8006ab6:	46c0      	nop			; (mov r8, r8)
 8006ab8:	40001400 	.word	0x40001400
 8006abc:	0800d328 	.word	0x0800d328

08006ac0 <timerGoToNextPassStartPointStop>:

void timerGoToNextPassStartPointStop(){
 8006ac0:	b580      	push	{r7, lr}
 8006ac2:	af00      	add	r7, sp, #0
	TIM7->CR1 &= ~TIM_CR1_CEN;
 8006ac4:	4b04      	ldr	r3, [pc, #16]	; (8006ad8 <timerGoToNextPassStartPointStop+0x18>)
 8006ac6:	681a      	ldr	r2, [r3, #0]
 8006ac8:	4b03      	ldr	r3, [pc, #12]	; (8006ad8 <timerGoToNextPassStartPointStop+0x18>)
 8006aca:	2101      	movs	r1, #1
 8006acc:	438a      	bics	r2, r1
 8006ace:	601a      	str	r2, [r3, #0]
}
 8006ad0:	46c0      	nop			; (mov r8, r8)
 8006ad2:	46bd      	mov	sp, r7
 8006ad4:	bd80      	pop	{r7, pc}
 8006ad6:	46c0      	nop			; (mov r8, r8)
 8006ad8:	40001400 	.word	0x40001400

08006adc <TIM7_IRQHandler>:

void TIM7_IRQHandler(){
 8006adc:	b580      	push	{r7, lr}
 8006ade:	af00      	add	r7, sp, #0

	// Test for TIM7 update pending interrupt
	if ((TIM7->SR & TIM_SR_UIF) == TIM_SR_UIF){
 8006ae0:	4b15      	ldr	r3, [pc, #84]	; (8006b38 <TIM7_IRQHandler+0x5c>)
 8006ae2:	691b      	ldr	r3, [r3, #16]
 8006ae4:	2201      	movs	r2, #1
 8006ae6:	4013      	ands	r3, r2
 8006ae8:	2b01      	cmp	r3, #1
 8006aea:	d122      	bne.n	8006b32 <TIM7_IRQHandler+0x56>

		// While we are on a tracking
		if( (goToNextPassStartPointPass.tracking.currentTimeSecond ) < (goToNextPassStartPointPass.transitTimeSecond) ){
 8006aec:	4b13      	ldr	r3, [pc, #76]	; (8006b3c <TIM7_IRQHandler+0x60>)
 8006aee:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006af0:	4b12      	ldr	r3, [pc, #72]	; (8006b3c <TIM7_IRQHandler+0x60>)
 8006af2:	69db      	ldr	r3, [r3, #28]
 8006af4:	1c19      	adds	r1, r3, #0
 8006af6:	1c10      	adds	r0, r2, #0
 8006af8:	f7f9 fcf2 	bl	80004e0 <__aeabi_fcmplt>
 8006afc:	1e03      	subs	r3, r0, #0
 8006afe:	d00a      	beq.n	8006b16 <TIM7_IRQHandler+0x3a>

			// Update the time of the tracking
			goToNextPassStartPointPass.tracking.currentTimeSecond += (float) (0.1);
 8006b00:	4b0e      	ldr	r3, [pc, #56]	; (8006b3c <TIM7_IRQHandler+0x60>)
 8006b02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b04:	490e      	ldr	r1, [pc, #56]	; (8006b40 <TIM7_IRQHandler+0x64>)
 8006b06:	1c18      	adds	r0, r3, #0
 8006b08:	f7f9 fdb2 	bl	8000670 <__aeabi_fadd>
 8006b0c:	1c03      	adds	r3, r0, #0
 8006b0e:	1c1a      	adds	r2, r3, #0
 8006b10:	4b0a      	ldr	r3, [pc, #40]	; (8006b3c <TIM7_IRQHandler+0x60>)
 8006b12:	645a      	str	r2, [r3, #68]	; 0x44
 8006b14:	e007      	b.n	8006b26 <TIM7_IRQHandler+0x4a>
		}

		else{


			pwmGoToNextPassStartPointStop();
 8006b16:	f7ff f8ed 	bl	8005cf4 <pwmGoToNextPassStartPointStop>

			timerGoToNextPassStartPointStop();
 8006b1a:	f7ff ffd1 	bl	8006ac0 <timerGoToNextPassStartPointStop>

			printf("Reach next pass starting point ! \n");
 8006b1e:	4b09      	ldr	r3, [pc, #36]	; (8006b44 <TIM7_IRQHandler+0x68>)
 8006b20:	0018      	movs	r0, r3
 8006b22:	f001 f963 	bl	8007dec <puts>

		}

		// Clear pending interrupt flag
		TIM7->SR &= ~TIM_SR_UIF;
 8006b26:	4b04      	ldr	r3, [pc, #16]	; (8006b38 <TIM7_IRQHandler+0x5c>)
 8006b28:	691a      	ldr	r2, [r3, #16]
 8006b2a:	4b03      	ldr	r3, [pc, #12]	; (8006b38 <TIM7_IRQHandler+0x5c>)
 8006b2c:	2101      	movs	r1, #1
 8006b2e:	438a      	bics	r2, r1
 8006b30:	611a      	str	r2, [r3, #16]
	}
}
 8006b32:	46c0      	nop			; (mov r8, r8)
 8006b34:	46bd      	mov	sp, r7
 8006b36:	bd80      	pop	{r7, pc}
 8006b38:	40001400 	.word	0x40001400
 8006b3c:	20000428 	.word	0x20000428
 8006b40:	3dcccccd 	.word	0x3dcccccd
 8006b44:	0800d360 	.word	0x0800d360

08006b48 <timerPassStart>:

void timerPassStart(){
 8006b48:	b580      	push	{r7, lr}
 8006b4a:	af00      	add	r7, sp, #0

	// Reset counter
	TIM6->EGR |= TIM_EGR_UG;
 8006b4c:	4b0c      	ldr	r3, [pc, #48]	; (8006b80 <timerPassStart+0x38>)
 8006b4e:	695a      	ldr	r2, [r3, #20]
 8006b50:	4b0b      	ldr	r3, [pc, #44]	; (8006b80 <timerPassStart+0x38>)
 8006b52:	2101      	movs	r1, #1
 8006b54:	430a      	orrs	r2, r1
 8006b56:	615a      	str	r2, [r3, #20]

	// Enable Interrupt upon Update Event
	TIM6->DIER |= TIM_DIER_UIE;
 8006b58:	4b09      	ldr	r3, [pc, #36]	; (8006b80 <timerPassStart+0x38>)
 8006b5a:	68da      	ldr	r2, [r3, #12]
 8006b5c:	4b08      	ldr	r3, [pc, #32]	; (8006b80 <timerPassStart+0x38>)
 8006b5e:	2101      	movs	r1, #1
 8006b60:	430a      	orrs	r2, r1
 8006b62:	60da      	str	r2, [r3, #12]

	// Start TIM6 counter
	TIM6->CR1 |= TIM_CR1_CEN;
 8006b64:	4b06      	ldr	r3, [pc, #24]	; (8006b80 <timerPassStart+0x38>)
 8006b66:	681a      	ldr	r2, [r3, #0]
 8006b68:	4b05      	ldr	r3, [pc, #20]	; (8006b80 <timerPassStart+0x38>)
 8006b6a:	2101      	movs	r1, #1
 8006b6c:	430a      	orrs	r2, r1
 8006b6e:	601a      	str	r2, [r3, #0]

	printf("Start tracking ! \r\n");
 8006b70:	4b04      	ldr	r3, [pc, #16]	; (8006b84 <timerPassStart+0x3c>)
 8006b72:	0018      	movs	r0, r3
 8006b74:	f001 f93a 	bl	8007dec <puts>

}
 8006b78:	46c0      	nop			; (mov r8, r8)
 8006b7a:	46bd      	mov	sp, r7
 8006b7c:	bd80      	pop	{r7, pc}
 8006b7e:	46c0      	nop			; (mov r8, r8)
 8006b80:	40001000 	.word	0x40001000
 8006b84:	0800d384 	.word	0x0800d384

08006b88 <timerPassStop>:

void timerPassStop(){
 8006b88:	b580      	push	{r7, lr}
 8006b8a:	af00      	add	r7, sp, #0
	TIM6->CR1 &= ~TIM_CR1_CEN;
 8006b8c:	4b04      	ldr	r3, [pc, #16]	; (8006ba0 <timerPassStop+0x18>)
 8006b8e:	681a      	ldr	r2, [r3, #0]
 8006b90:	4b03      	ldr	r3, [pc, #12]	; (8006ba0 <timerPassStop+0x18>)
 8006b92:	2101      	movs	r1, #1
 8006b94:	438a      	bics	r2, r1
 8006b96:	601a      	str	r2, [r3, #0]
}
 8006b98:	46c0      	nop			; (mov r8, r8)
 8006b9a:	46bd      	mov	sp, r7
 8006b9c:	bd80      	pop	{r7, pc}
 8006b9e:	46c0      	nop			; (mov r8, r8)
 8006ba0:	40001000 	.word	0x40001000

08006ba4 <TIM6_DAC_IRQHandler>:

void TIM6_DAC_IRQHandler(){
 8006ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006ba6:	b083      	sub	sp, #12
 8006ba8:	af00      	add	r7, sp, #0

	// Test for TIM6 update pending interrupt
	if ((TIM6->SR & TIM_SR_UIF) == TIM_SR_UIF){
 8006baa:	4b60      	ldr	r3, [pc, #384]	; (8006d2c <TIM6_DAC_IRQHandler+0x188>)
 8006bac:	691b      	ldr	r3, [r3, #16]
 8006bae:	2201      	movs	r2, #1
 8006bb0:	4013      	ands	r3, r2
 8006bb2:	2b01      	cmp	r3, #1
 8006bb4:	d000      	beq.n	8006bb8 <TIM6_DAC_IRQHandler+0x14>
 8006bb6:	e0b5      	b.n	8006d24 <TIM6_DAC_IRQHandler+0x180>

		// While we are on a tracking
		if( ( passes[0].tracking.currentTimeSecond ) < (passes[0].transitTimeSecond) ){
 8006bb8:	4b5d      	ldr	r3, [pc, #372]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006bba:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006bbc:	4b5c      	ldr	r3, [pc, #368]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006bbe:	69db      	ldr	r3, [r3, #28]
 8006bc0:	1c19      	adds	r1, r3, #0
 8006bc2:	1c10      	adds	r0, r2, #0
 8006bc4:	f7f9 fc8c 	bl	80004e0 <__aeabi_fcmplt>
 8006bc8:	1e03      	subs	r3, r0, #0
 8006bca:	d074      	beq.n	8006cb6 <TIM6_DAC_IRQHandler+0x112>


			if ( (passes[0].tracking.currentTimeSecond ) == ( (passes[0].transitTimeSecond) / 2.0 ) ){
 8006bcc:	4b58      	ldr	r3, [pc, #352]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006bce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006bd0:	1c18      	adds	r0, r3, #0
 8006bd2:	f7fc f9b3 	bl	8002f3c <__aeabi_f2d>
 8006bd6:	0004      	movs	r4, r0
 8006bd8:	000d      	movs	r5, r1
 8006bda:	4b55      	ldr	r3, [pc, #340]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006bdc:	69db      	ldr	r3, [r3, #28]
 8006bde:	1c18      	adds	r0, r3, #0
 8006be0:	f7fc f9ac 	bl	8002f3c <__aeabi_f2d>
 8006be4:	2200      	movs	r2, #0
 8006be6:	2380      	movs	r3, #128	; 0x80
 8006be8:	05db      	lsls	r3, r3, #23
 8006bea:	f7fa ff25 	bl	8001a38 <__aeabi_ddiv>
 8006bee:	0002      	movs	r2, r0
 8006bf0:	000b      	movs	r3, r1
 8006bf2:	0020      	movs	r0, r4
 8006bf4:	0029      	movs	r1, r5
 8006bf6:	f7f9 fc33 	bl	8000460 <__aeabi_dcmpeq>
 8006bfa:	1e03      	subs	r3, r0, #0
 8006bfc:	d013      	beq.n	8006c26 <TIM6_DAC_IRQHandler+0x82>

				// Clockwise EL
				// EL direction pins are PA6 and PA7
				printf("Change EL speed rotation to clockwise ! \r\n");
 8006bfe:	4b4d      	ldr	r3, [pc, #308]	; (8006d34 <TIM6_DAC_IRQHandler+0x190>)
 8006c00:	0018      	movs	r0, r3
 8006c02:	f001 f8f3 	bl	8007dec <puts>
				GPIOA->ODR |= GPIO_ODR_6; // Set PA7 value to high
 8006c06:	2390      	movs	r3, #144	; 0x90
 8006c08:	05db      	lsls	r3, r3, #23
 8006c0a:	695a      	ldr	r2, [r3, #20]
 8006c0c:	2390      	movs	r3, #144	; 0x90
 8006c0e:	05db      	lsls	r3, r3, #23
 8006c10:	2140      	movs	r1, #64	; 0x40
 8006c12:	430a      	orrs	r2, r1
 8006c14:	615a      	str	r2, [r3, #20]
				GPIOA->ODR &= ~(GPIO_ODR_7); // Set PA6 value to low
 8006c16:	2390      	movs	r3, #144	; 0x90
 8006c18:	05db      	lsls	r3, r3, #23
 8006c1a:	695a      	ldr	r2, [r3, #20]
 8006c1c:	2390      	movs	r3, #144	; 0x90
 8006c1e:	05db      	lsls	r3, r3, #23
 8006c20:	2180      	movs	r1, #128	; 0x80
 8006c22:	438a      	bics	r2, r1
 8006c24:	615a      	str	r2, [r3, #20]
			}

			// Update the time of the tracking
			passes[0].tracking.currentTimeSecond += (float) (0.1);
 8006c26:	4b42      	ldr	r3, [pc, #264]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006c28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006c2a:	4943      	ldr	r1, [pc, #268]	; (8006d38 <TIM6_DAC_IRQHandler+0x194>)
 8006c2c:	1c18      	adds	r0, r3, #0
 8006c2e:	f7f9 fd1f 	bl	8000670 <__aeabi_fadd>
 8006c32:	1c03      	adds	r3, r0, #0
 8006c34:	1c1a      	adds	r2, r3, #0
 8006c36:	4b3e      	ldr	r3, [pc, #248]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006c38:	645a      	str	r2, [r3, #68]	; 0x44
			passes[0].tracking.currentTimeMinute += ( (float) 0.1 ) / 60.0;
 8006c3a:	4b3d      	ldr	r3, [pc, #244]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006c3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c3e:	1c18      	adds	r0, r3, #0
 8006c40:	f7fc f97c 	bl	8002f3c <__aeabi_f2d>
 8006c44:	4a3d      	ldr	r2, [pc, #244]	; (8006d3c <TIM6_DAC_IRQHandler+0x198>)
 8006c46:	4b3e      	ldr	r3, [pc, #248]	; (8006d40 <TIM6_DAC_IRQHandler+0x19c>)
 8006c48:	f7fa fbda 	bl	8001400 <__aeabi_dadd>
 8006c4c:	0003      	movs	r3, r0
 8006c4e:	000c      	movs	r4, r1
 8006c50:	0018      	movs	r0, r3
 8006c52:	0021      	movs	r1, r4
 8006c54:	f7fc f9c4 	bl	8002fe0 <__aeabi_d2f>
 8006c58:	1c02      	adds	r2, r0, #0
 8006c5a:	4b35      	ldr	r3, [pc, #212]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006c5c:	641a      	str	r2, [r3, #64]	; 0x40

			//printf("Current tracking time second: %.5f\n", passes[0].tracking.currentTimeSecond);
			//printf("Current tracking time minute: %.5f\n",passes[0].tracking.currentTimeMinute);

			// Get the phase of the tracking
			isAccelerationPhase = ( (passes[0].tracking.currentTimeSecond ) <= ( (passes[0].transitTimeSecond) / 2.0 ) ) ? 1 : 0;
 8006c5e:	4b34      	ldr	r3, [pc, #208]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006c60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006c62:	1c18      	adds	r0, r3, #0
 8006c64:	f7fc f96a 	bl	8002f3c <__aeabi_f2d>
 8006c68:	0004      	movs	r4, r0
 8006c6a:	000d      	movs	r5, r1
 8006c6c:	4b30      	ldr	r3, [pc, #192]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006c6e:	69db      	ldr	r3, [r3, #28]
 8006c70:	1c18      	adds	r0, r3, #0
 8006c72:	f7fc f963 	bl	8002f3c <__aeabi_f2d>
 8006c76:	2200      	movs	r2, #0
 8006c78:	2380      	movs	r3, #128	; 0x80
 8006c7a:	05db      	lsls	r3, r3, #23
 8006c7c:	f7fa fedc 	bl	8001a38 <__aeabi_ddiv>
 8006c80:	0002      	movs	r2, r0
 8006c82:	000b      	movs	r3, r1
 8006c84:	0011      	movs	r1, r2
 8006c86:	001a      	movs	r2, r3
 8006c88:	2301      	movs	r3, #1
 8006c8a:	1c1e      	adds	r6, r3, #0
 8006c8c:	0013      	movs	r3, r2
 8006c8e:	000a      	movs	r2, r1
 8006c90:	0020      	movs	r0, r4
 8006c92:	0029      	movs	r1, r5
 8006c94:	f7f9 fbf4 	bl	8000480 <__aeabi_dcmple>
 8006c98:	1e03      	subs	r3, r0, #0
 8006c9a:	d101      	bne.n	8006ca0 <TIM6_DAC_IRQHandler+0xfc>
 8006c9c:	2300      	movs	r3, #0
 8006c9e:	1c1e      	adds	r6, r3, #0
 8006ca0:	b2f3      	uxtb	r3, r6
 8006ca2:	001a      	movs	r2, r3
 8006ca4:	4b27      	ldr	r3, [pc, #156]	; (8006d44 <TIM6_DAC_IRQHandler+0x1a0>)
 8006ca6:	601a      	str	r2, [r3, #0]

			// Update speed
			speedPassUpdate();
 8006ca8:	f000 f852 	bl	8006d50 <speedPassUpdate>

			dacUpdate();
 8006cac:	f7fe fa64 	bl	8005178 <dacUpdate>

			pwmPassUpdate();
 8006cb0:	f7ff fa6a 	bl	8006188 <pwmPassUpdate>
 8006cb4:	e030      	b.n	8006d18 <TIM6_DAC_IRQHandler+0x174>

		}

		else{

			rtcGetTime();
 8006cb6:	f7ff fddd 	bl	8006874 <rtcGetTime>
			dacStop();
 8006cba:	f7fe fa41 	bl	8005140 <dacStop>
			pwmPassStop();
 8006cbe:	f7ff fab3 	bl	8006228 <pwmPassStop>
			timerPassStop();
 8006cc2:	f7ff ff61 	bl	8006b88 <timerPassStop>

			numberOfDataFrameReceived -= 6;
 8006cc6:	4b20      	ldr	r3, [pc, #128]	; (8006d48 <TIM6_DAC_IRQHandler+0x1a4>)
 8006cc8:	681b      	ldr	r3, [r3, #0]
 8006cca:	1f9a      	subs	r2, r3, #6
 8006ccc:	4b1e      	ldr	r3, [pc, #120]	; (8006d48 <TIM6_DAC_IRQHandler+0x1a4>)
 8006cce:	601a      	str	r2, [r3, #0]

			for(uint32_t i= 0; i<3; i++){
 8006cd0:	2300      	movs	r3, #0
 8006cd2:	607b      	str	r3, [r7, #4]
 8006cd4:	e011      	b.n	8006cfa <TIM6_DAC_IRQHandler+0x156>
				passes[i] = passes[i+1];
 8006cd6:	687b      	ldr	r3, [r7, #4]
 8006cd8:	3301      	adds	r3, #1
 8006cda:	4815      	ldr	r0, [pc, #84]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006cdc:	687a      	ldr	r2, [r7, #4]
 8006cde:	2164      	movs	r1, #100	; 0x64
 8006ce0:	4351      	muls	r1, r2
 8006ce2:	4a13      	ldr	r2, [pc, #76]	; (8006d30 <TIM6_DAC_IRQHandler+0x18c>)
 8006ce4:	2464      	movs	r4, #100	; 0x64
 8006ce6:	4363      	muls	r3, r4
 8006ce8:	1840      	adds	r0, r0, r1
 8006cea:	18d3      	adds	r3, r2, r3
 8006cec:	2264      	movs	r2, #100	; 0x64
 8006cee:	0019      	movs	r1, r3
 8006cf0:	f000 faea 	bl	80072c8 <memcpy>
			for(uint32_t i= 0; i<3; i++){
 8006cf4:	687b      	ldr	r3, [r7, #4]
 8006cf6:	3301      	adds	r3, #1
 8006cf8:	607b      	str	r3, [r7, #4]
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	2b02      	cmp	r3, #2
 8006cfe:	d9ea      	bls.n	8006cd6 <TIM6_DAC_IRQHandler+0x132>
			}

			rtcSetAlarm();
 8006d00:	f7ff fc6a 	bl	80065d8 <rtcSetAlarm>

			printf("End of tracking ! \r\n");
 8006d04:	4b11      	ldr	r3, [pc, #68]	; (8006d4c <TIM6_DAC_IRQHandler+0x1a8>)
 8006d06:	0018      	movs	r0, r3
 8006d08:	f001 f870 	bl	8007dec <puts>

			// Enable CAN IRQ
			canEnableIRQ();
 8006d0c:	f7fd fec6 	bl	8004a9c <canEnableIRQ>

			// Send remote
			sendRemoteFrame();
 8006d10:	f7fc ffa0 	bl	8003c54 <sendRemoteFrame>

			goToNextPassStartPoint();
 8006d14:	f7fe fd26 	bl	8005764 <goToNextPassStartPoint>

		}

		// Clear pending interrupt flag
		TIM6->SR &= ~TIM_SR_UIF;
 8006d18:	4b04      	ldr	r3, [pc, #16]	; (8006d2c <TIM6_DAC_IRQHandler+0x188>)
 8006d1a:	691a      	ldr	r2, [r3, #16]
 8006d1c:	4b03      	ldr	r3, [pc, #12]	; (8006d2c <TIM6_DAC_IRQHandler+0x188>)
 8006d1e:	2101      	movs	r1, #1
 8006d20:	438a      	bics	r2, r1
 8006d22:	611a      	str	r2, [r3, #16]
	}
}
 8006d24:	46c0      	nop			; (mov r8, r8)
 8006d26:	46bd      	mov	sp, r7
 8006d28:	b003      	add	sp, #12
 8006d2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006d2c:	40001000 	.word	0x40001000
 8006d30:	2000028c 	.word	0x2000028c
 8006d34:	0800d398 	.word	0x0800d398
 8006d38:	3dcccccd 	.word	0x3dcccccd
 8006d3c:	bbbbbbbc 	.word	0xbbbbbbbc
 8006d40:	3f5b4e81 	.word	0x3f5b4e81
 8006d44:	2000001c 	.word	0x2000001c
 8006d48:	2000027c 	.word	0x2000027c
 8006d4c:	0800d3c4 	.word	0x0800d3c4

08006d50 <speedPassUpdate>:

void speedPassUpdate(){
 8006d50:	b5b0      	push	{r4, r5, r7, lr}
 8006d52:	b084      	sub	sp, #16
 8006d54:	af00      	add	r7, sp, #0

	// Acceleration
	if(isAccelerationPhase == 1){
 8006d56:	4b7d      	ldr	r3, [pc, #500]	; (8006f4c <speedPassUpdate+0x1fc>)
 8006d58:	681b      	ldr	r3, [r3, #0]
 8006d5a:	2b01      	cmp	r3, #1
 8006d5c:	d160      	bne.n	8006e20 <speedPassUpdate+0xd0>
		passes[0].tracking.currentSpeedAz = ( 2.0 * ( (float) (passes[0].tracking.maximumSpeedAz) ) * (passes[0].tracking.currentTimeMinute) ) / ( (float) (passes[0].transitTimeMinute) );
 8006d5e:	4b7c      	ldr	r3, [pc, #496]	; (8006f50 <speedPassUpdate+0x200>)
 8006d60:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006d62:	1c18      	adds	r0, r3, #0
 8006d64:	f7fc f8ea 	bl	8002f3c <__aeabi_f2d>
 8006d68:	0002      	movs	r2, r0
 8006d6a:	000b      	movs	r3, r1
 8006d6c:	f7fa fb48 	bl	8001400 <__aeabi_dadd>
 8006d70:	0003      	movs	r3, r0
 8006d72:	000c      	movs	r4, r1
 8006d74:	0025      	movs	r5, r4
 8006d76:	001c      	movs	r4, r3
 8006d78:	4b75      	ldr	r3, [pc, #468]	; (8006f50 <speedPassUpdate+0x200>)
 8006d7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d7c:	1c18      	adds	r0, r3, #0
 8006d7e:	f7fc f8dd 	bl	8002f3c <__aeabi_f2d>
 8006d82:	0002      	movs	r2, r0
 8006d84:	000b      	movs	r3, r1
 8006d86:	0020      	movs	r0, r4
 8006d88:	0029      	movs	r1, r5
 8006d8a:	f7fb fa5f 	bl	800224c <__aeabi_dmul>
 8006d8e:	0003      	movs	r3, r0
 8006d90:	000c      	movs	r4, r1
 8006d92:	0025      	movs	r5, r4
 8006d94:	001c      	movs	r4, r3
 8006d96:	4b6e      	ldr	r3, [pc, #440]	; (8006f50 <speedPassUpdate+0x200>)
 8006d98:	699b      	ldr	r3, [r3, #24]
 8006d9a:	1c18      	adds	r0, r3, #0
 8006d9c:	f7fc f8ce 	bl	8002f3c <__aeabi_f2d>
 8006da0:	0002      	movs	r2, r0
 8006da2:	000b      	movs	r3, r1
 8006da4:	0020      	movs	r0, r4
 8006da6:	0029      	movs	r1, r5
 8006da8:	f7fa fe46 	bl	8001a38 <__aeabi_ddiv>
 8006dac:	0003      	movs	r3, r0
 8006dae:	000c      	movs	r4, r1
 8006db0:	0018      	movs	r0, r3
 8006db2:	0021      	movs	r1, r4
 8006db4:	f7fc f914 	bl	8002fe0 <__aeabi_d2f>
 8006db8:	1c02      	adds	r2, r0, #0
 8006dba:	4b65      	ldr	r3, [pc, #404]	; (8006f50 <speedPassUpdate+0x200>)
 8006dbc:	649a      	str	r2, [r3, #72]	; 0x48
		//printf("Acceleration current speed az : %.5f\n", passes[0].tracking.currentSpeedAz);
		passes[0].tracking.currentSpeedEl = ( 2.0 * ( (float) (passes[0].tracking.maximumSpeedEl) ) * (passes[0].tracking.currentTimeMinute) ) / ( (float) (passes[0].transitTimeMinute) );
 8006dbe:	4b64      	ldr	r3, [pc, #400]	; (8006f50 <speedPassUpdate+0x200>)
 8006dc0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006dc2:	1c18      	adds	r0, r3, #0
 8006dc4:	f7fc f8ba 	bl	8002f3c <__aeabi_f2d>
 8006dc8:	0002      	movs	r2, r0
 8006dca:	000b      	movs	r3, r1
 8006dcc:	f7fa fb18 	bl	8001400 <__aeabi_dadd>
 8006dd0:	0003      	movs	r3, r0
 8006dd2:	000c      	movs	r4, r1
 8006dd4:	0025      	movs	r5, r4
 8006dd6:	001c      	movs	r4, r3
 8006dd8:	4b5d      	ldr	r3, [pc, #372]	; (8006f50 <speedPassUpdate+0x200>)
 8006dda:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ddc:	1c18      	adds	r0, r3, #0
 8006dde:	f7fc f8ad 	bl	8002f3c <__aeabi_f2d>
 8006de2:	0002      	movs	r2, r0
 8006de4:	000b      	movs	r3, r1
 8006de6:	0020      	movs	r0, r4
 8006de8:	0029      	movs	r1, r5
 8006dea:	f7fb fa2f 	bl	800224c <__aeabi_dmul>
 8006dee:	0003      	movs	r3, r0
 8006df0:	000c      	movs	r4, r1
 8006df2:	0025      	movs	r5, r4
 8006df4:	001c      	movs	r4, r3
 8006df6:	4b56      	ldr	r3, [pc, #344]	; (8006f50 <speedPassUpdate+0x200>)
 8006df8:	699b      	ldr	r3, [r3, #24]
 8006dfa:	1c18      	adds	r0, r3, #0
 8006dfc:	f7fc f89e 	bl	8002f3c <__aeabi_f2d>
 8006e00:	0002      	movs	r2, r0
 8006e02:	000b      	movs	r3, r1
 8006e04:	0020      	movs	r0, r4
 8006e06:	0029      	movs	r1, r5
 8006e08:	f7fa fe16 	bl	8001a38 <__aeabi_ddiv>
 8006e0c:	0003      	movs	r3, r0
 8006e0e:	000c      	movs	r4, r1
 8006e10:	0018      	movs	r0, r3
 8006e12:	0021      	movs	r1, r4
 8006e14:	f7fc f8e4 	bl	8002fe0 <__aeabi_d2f>
 8006e18:	1c02      	adds	r2, r0, #0
 8006e1a:	4b4d      	ldr	r3, [pc, #308]	; (8006f50 <speedPassUpdate+0x200>)
 8006e1c:	64da      	str	r2, [r3, #76]	; 0x4c
		passes[0].tracking.currentSpeedAz = ( (float) (passes[0].tracking.maximumSpeedAz) ) * ( 1 - (2.0 / ( (float) (passes[0].transitTimeMinute) ) ) * ( (passes[0].tracking.currentTimeMinute) -   ( ( (float) (passes[0].transitTimeMinute) ) / 2.0) ) );
		//printf("Decceleration current speed az : %.5f\n", passes[0].tracking.currentSpeedAz);
		passes[0].tracking.currentSpeedEl = ( (float) (passes[0].tracking.maximumSpeedEl) ) * ( 1 - (2.0 / ( (float) (passes[0].transitTimeMinute) ) ) * ( (passes[0].tracking.currentTimeMinute) -   ( ( (float) (passes[0].transitTimeMinute) ) / 2.0) ) );
		//printf("Decceleration current speed el : %.5f\n", passes[0].tracking.currentSpeedEl);
	}
}
 8006e1e:	e091      	b.n	8006f44 <speedPassUpdate+0x1f4>
		passes[0].tracking.currentSpeedAz = ( (float) (passes[0].tracking.maximumSpeedAz) ) * ( 1 - (2.0 / ( (float) (passes[0].transitTimeMinute) ) ) * ( (passes[0].tracking.currentTimeMinute) -   ( ( (float) (passes[0].transitTimeMinute) ) / 2.0) ) );
 8006e20:	4b4b      	ldr	r3, [pc, #300]	; (8006f50 <speedPassUpdate+0x200>)
 8006e22:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006e24:	1c18      	adds	r0, r3, #0
 8006e26:	f7fc f889 	bl	8002f3c <__aeabi_f2d>
 8006e2a:	0004      	movs	r4, r0
 8006e2c:	000d      	movs	r5, r1
 8006e2e:	4b48      	ldr	r3, [pc, #288]	; (8006f50 <speedPassUpdate+0x200>)
 8006e30:	699b      	ldr	r3, [r3, #24]
 8006e32:	1c18      	adds	r0, r3, #0
 8006e34:	f7fc f882 	bl	8002f3c <__aeabi_f2d>
 8006e38:	0002      	movs	r2, r0
 8006e3a:	000b      	movs	r3, r1
 8006e3c:	2000      	movs	r0, #0
 8006e3e:	2180      	movs	r1, #128	; 0x80
 8006e40:	05c9      	lsls	r1, r1, #23
 8006e42:	f7fa fdf9 	bl	8001a38 <__aeabi_ddiv>
 8006e46:	0002      	movs	r2, r0
 8006e48:	000b      	movs	r3, r1
 8006e4a:	60ba      	str	r2, [r7, #8]
 8006e4c:	60fb      	str	r3, [r7, #12]
 8006e4e:	4b40      	ldr	r3, [pc, #256]	; (8006f50 <speedPassUpdate+0x200>)
 8006e50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e52:	1c18      	adds	r0, r3, #0
 8006e54:	f7fc f872 	bl	8002f3c <__aeabi_f2d>
 8006e58:	6038      	str	r0, [r7, #0]
 8006e5a:	6079      	str	r1, [r7, #4]
 8006e5c:	4b3c      	ldr	r3, [pc, #240]	; (8006f50 <speedPassUpdate+0x200>)
 8006e5e:	699b      	ldr	r3, [r3, #24]
 8006e60:	1c18      	adds	r0, r3, #0
 8006e62:	f7fc f86b 	bl	8002f3c <__aeabi_f2d>
 8006e66:	2200      	movs	r2, #0
 8006e68:	2380      	movs	r3, #128	; 0x80
 8006e6a:	05db      	lsls	r3, r3, #23
 8006e6c:	f7fa fde4 	bl	8001a38 <__aeabi_ddiv>
 8006e70:	0002      	movs	r2, r0
 8006e72:	000b      	movs	r3, r1
 8006e74:	6838      	ldr	r0, [r7, #0]
 8006e76:	6879      	ldr	r1, [r7, #4]
 8006e78:	f7fb fc5a 	bl	8002730 <__aeabi_dsub>
 8006e7c:	0002      	movs	r2, r0
 8006e7e:	000b      	movs	r3, r1
 8006e80:	68b8      	ldr	r0, [r7, #8]
 8006e82:	68f9      	ldr	r1, [r7, #12]
 8006e84:	f7fb f9e2 	bl	800224c <__aeabi_dmul>
 8006e88:	0002      	movs	r2, r0
 8006e8a:	000b      	movs	r3, r1
 8006e8c:	2000      	movs	r0, #0
 8006e8e:	4931      	ldr	r1, [pc, #196]	; (8006f54 <speedPassUpdate+0x204>)
 8006e90:	f7fb fc4e 	bl	8002730 <__aeabi_dsub>
 8006e94:	0002      	movs	r2, r0
 8006e96:	000b      	movs	r3, r1
 8006e98:	0020      	movs	r0, r4
 8006e9a:	0029      	movs	r1, r5
 8006e9c:	f7fb f9d6 	bl	800224c <__aeabi_dmul>
 8006ea0:	0003      	movs	r3, r0
 8006ea2:	000c      	movs	r4, r1
 8006ea4:	0018      	movs	r0, r3
 8006ea6:	0021      	movs	r1, r4
 8006ea8:	f7fc f89a 	bl	8002fe0 <__aeabi_d2f>
 8006eac:	1c02      	adds	r2, r0, #0
 8006eae:	4b28      	ldr	r3, [pc, #160]	; (8006f50 <speedPassUpdate+0x200>)
 8006eb0:	649a      	str	r2, [r3, #72]	; 0x48
		passes[0].tracking.currentSpeedEl = ( (float) (passes[0].tracking.maximumSpeedEl) ) * ( 1 - (2.0 / ( (float) (passes[0].transitTimeMinute) ) ) * ( (passes[0].tracking.currentTimeMinute) -   ( ( (float) (passes[0].transitTimeMinute) ) / 2.0) ) );
 8006eb2:	4b27      	ldr	r3, [pc, #156]	; (8006f50 <speedPassUpdate+0x200>)
 8006eb4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006eb6:	1c18      	adds	r0, r3, #0
 8006eb8:	f7fc f840 	bl	8002f3c <__aeabi_f2d>
 8006ebc:	0004      	movs	r4, r0
 8006ebe:	000d      	movs	r5, r1
 8006ec0:	4b23      	ldr	r3, [pc, #140]	; (8006f50 <speedPassUpdate+0x200>)
 8006ec2:	699b      	ldr	r3, [r3, #24]
 8006ec4:	1c18      	adds	r0, r3, #0
 8006ec6:	f7fc f839 	bl	8002f3c <__aeabi_f2d>
 8006eca:	0002      	movs	r2, r0
 8006ecc:	000b      	movs	r3, r1
 8006ece:	2000      	movs	r0, #0
 8006ed0:	2180      	movs	r1, #128	; 0x80
 8006ed2:	05c9      	lsls	r1, r1, #23
 8006ed4:	f7fa fdb0 	bl	8001a38 <__aeabi_ddiv>
 8006ed8:	0002      	movs	r2, r0
 8006eda:	000b      	movs	r3, r1
 8006edc:	60ba      	str	r2, [r7, #8]
 8006ede:	60fb      	str	r3, [r7, #12]
 8006ee0:	4b1b      	ldr	r3, [pc, #108]	; (8006f50 <speedPassUpdate+0x200>)
 8006ee2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ee4:	1c18      	adds	r0, r3, #0
 8006ee6:	f7fc f829 	bl	8002f3c <__aeabi_f2d>
 8006eea:	6038      	str	r0, [r7, #0]
 8006eec:	6079      	str	r1, [r7, #4]
 8006eee:	4b18      	ldr	r3, [pc, #96]	; (8006f50 <speedPassUpdate+0x200>)
 8006ef0:	699b      	ldr	r3, [r3, #24]
 8006ef2:	1c18      	adds	r0, r3, #0
 8006ef4:	f7fc f822 	bl	8002f3c <__aeabi_f2d>
 8006ef8:	2200      	movs	r2, #0
 8006efa:	2380      	movs	r3, #128	; 0x80
 8006efc:	05db      	lsls	r3, r3, #23
 8006efe:	f7fa fd9b 	bl	8001a38 <__aeabi_ddiv>
 8006f02:	0002      	movs	r2, r0
 8006f04:	000b      	movs	r3, r1
 8006f06:	6838      	ldr	r0, [r7, #0]
 8006f08:	6879      	ldr	r1, [r7, #4]
 8006f0a:	f7fb fc11 	bl	8002730 <__aeabi_dsub>
 8006f0e:	0002      	movs	r2, r0
 8006f10:	000b      	movs	r3, r1
 8006f12:	68b8      	ldr	r0, [r7, #8]
 8006f14:	68f9      	ldr	r1, [r7, #12]
 8006f16:	f7fb f999 	bl	800224c <__aeabi_dmul>
 8006f1a:	0002      	movs	r2, r0
 8006f1c:	000b      	movs	r3, r1
 8006f1e:	2000      	movs	r0, #0
 8006f20:	490c      	ldr	r1, [pc, #48]	; (8006f54 <speedPassUpdate+0x204>)
 8006f22:	f7fb fc05 	bl	8002730 <__aeabi_dsub>
 8006f26:	0002      	movs	r2, r0
 8006f28:	000b      	movs	r3, r1
 8006f2a:	0020      	movs	r0, r4
 8006f2c:	0029      	movs	r1, r5
 8006f2e:	f7fb f98d 	bl	800224c <__aeabi_dmul>
 8006f32:	0003      	movs	r3, r0
 8006f34:	000c      	movs	r4, r1
 8006f36:	0018      	movs	r0, r3
 8006f38:	0021      	movs	r1, r4
 8006f3a:	f7fc f851 	bl	8002fe0 <__aeabi_d2f>
 8006f3e:	1c02      	adds	r2, r0, #0
 8006f40:	4b03      	ldr	r3, [pc, #12]	; (8006f50 <speedPassUpdate+0x200>)
 8006f42:	64da      	str	r2, [r3, #76]	; 0x4c
}
 8006f44:	46c0      	nop			; (mov r8, r8)
 8006f46:	46bd      	mov	sp, r7
 8006f48:	b004      	add	sp, #16
 8006f4a:	bdb0      	pop	{r4, r5, r7, pc}
 8006f4c:	2000001c 	.word	0x2000001c
 8006f50:	2000028c 	.word	0x2000028c
 8006f54:	3ff00000 	.word	0x3ff00000

08006f58 <main>:
extern void pwmInit(void);
extern void home(void);

extern void initialise_monitor_handles();

int main(void){
 8006f58:	b580      	push	{r7, lr}
 8006f5a:	af00      	add	r7, sp, #0

	initialise_monitor_handles();
 8006f5c:	f004 fff6 	bl	800bf4c <initialise_monitor_handles>

	canInit();
 8006f60:	f7fc fd18 	bl	8003994 <canInit>

	rtcCalendarInit();
 8006f64:	f7ff f9ee 	bl	8006344 <rtcCalendarInit>

	pwmInit();
 8006f68:	f7fe f992 	bl	8005290 <pwmInit>

	timerInit();
 8006f6c:	f7ff fd36 	bl	80069dc <timerInit>

	dacInit();
 8006f70:	f7fe f87e 	bl	8005070 <dacInit>

	canEnableIRQ();
 8006f74:	f7fd fd92 	bl	8004a9c <canEnableIRQ>

	sendRemoteFrame();
 8006f78:	f7fc fe6c 	bl	8003c54 <sendRemoteFrame>

	home();
 8006f7c:	f7fe fa4a 	bl	8005414 <home>

	while(1){
 8006f80:	e7fe      	b.n	8006f80 <main+0x28>
	...

08006f84 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8006f84:	b580      	push	{r7, lr}
 8006f86:	b084      	sub	sp, #16
 8006f88:	af00      	add	r7, sp, #0
 8006f8a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8006f8c:	4b11      	ldr	r3, [pc, #68]	; (8006fd4 <_sbrk+0x50>)
 8006f8e:	681b      	ldr	r3, [r3, #0]
 8006f90:	2b00      	cmp	r3, #0
 8006f92:	d102      	bne.n	8006f9a <_sbrk+0x16>
		heap_end = &end;
 8006f94:	4b0f      	ldr	r3, [pc, #60]	; (8006fd4 <_sbrk+0x50>)
 8006f96:	4a10      	ldr	r2, [pc, #64]	; (8006fd8 <_sbrk+0x54>)
 8006f98:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8006f9a:	4b0e      	ldr	r3, [pc, #56]	; (8006fd4 <_sbrk+0x50>)
 8006f9c:	681b      	ldr	r3, [r3, #0]
 8006f9e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8006fa0:	4b0c      	ldr	r3, [pc, #48]	; (8006fd4 <_sbrk+0x50>)
 8006fa2:	681a      	ldr	r2, [r3, #0]
 8006fa4:	687b      	ldr	r3, [r7, #4]
 8006fa6:	18d3      	adds	r3, r2, r3
 8006fa8:	466a      	mov	r2, sp
 8006faa:	4293      	cmp	r3, r2
 8006fac:	d907      	bls.n	8006fbe <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8006fae:	f000 f845 	bl	800703c <__errno>
 8006fb2:	0003      	movs	r3, r0
 8006fb4:	220c      	movs	r2, #12
 8006fb6:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8006fb8:	2301      	movs	r3, #1
 8006fba:	425b      	negs	r3, r3
 8006fbc:	e006      	b.n	8006fcc <_sbrk+0x48>
	}

	heap_end += incr;
 8006fbe:	4b05      	ldr	r3, [pc, #20]	; (8006fd4 <_sbrk+0x50>)
 8006fc0:	681a      	ldr	r2, [r3, #0]
 8006fc2:	687b      	ldr	r3, [r7, #4]
 8006fc4:	18d2      	adds	r2, r2, r3
 8006fc6:	4b03      	ldr	r3, [pc, #12]	; (8006fd4 <_sbrk+0x50>)
 8006fc8:	601a      	str	r2, [r3, #0]

	return (caddr_t) prev_heap_end;
 8006fca:	68fb      	ldr	r3, [r7, #12]
}
 8006fcc:	0018      	movs	r0, r3
 8006fce:	46bd      	mov	sp, r7
 8006fd0:	b004      	add	sp, #16
 8006fd2:	bd80      	pop	{r7, pc}
 8006fd4:	2000048c 	.word	0x2000048c
 8006fd8:	20000570 	.word	0x20000570

08006fdc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8006fdc:	480d      	ldr	r0, [pc, #52]	; (8007014 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8006fde:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8006fe0:	480d      	ldr	r0, [pc, #52]	; (8007018 <LoopForever+0x6>)
  ldr r1, =_edata
 8006fe2:	490e      	ldr	r1, [pc, #56]	; (800701c <LoopForever+0xa>)
  ldr r2, =_sidata
 8006fe4:	4a0e      	ldr	r2, [pc, #56]	; (8007020 <LoopForever+0xe>)
  movs r3, #0
 8006fe6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8006fe8:	e002      	b.n	8006ff0 <LoopCopyDataInit>

08006fea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8006fea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8006fec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8006fee:	3304      	adds	r3, #4

08006ff0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8006ff0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8006ff2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8006ff4:	d3f9      	bcc.n	8006fea <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8006ff6:	4a0b      	ldr	r2, [pc, #44]	; (8007024 <LoopForever+0x12>)
  ldr r4, =_ebss
 8006ff8:	4c0b      	ldr	r4, [pc, #44]	; (8007028 <LoopForever+0x16>)
  movs r3, #0
 8006ffa:	2300      	movs	r3, #0
  b LoopFillZerobss
 8006ffc:	e001      	b.n	8007002 <LoopFillZerobss>

08006ffe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8006ffe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8007000:	3204      	adds	r2, #4

08007002 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8007002:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8007004:	d3fb      	bcc.n	8006ffe <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8007006:	e000      	b.n	800700a <LoopFillZerobss+0x8>
 8007008:	bf00      	nop
/* Call static constructors */
  bl __libc_init_array
 800700a:	f000 f81d 	bl	8007048 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800700e:	f7ff ffa3 	bl	8006f58 <main>

08007012 <LoopForever>:

LoopForever:
    b LoopForever
 8007012:	e7fe      	b.n	8007012 <LoopForever>
  ldr   r0, =_estack
 8007014:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8007018:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800701c:	20000260 	.word	0x20000260
  ldr r2, =_sidata
 8007020:	0800db64 	.word	0x0800db64
  ldr r2, =_sbss
 8007024:	20000260 	.word	0x20000260
  ldr r4, =_ebss
 8007028:	20000570 	.word	0x20000570

0800702c <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800702c:	e7fe      	b.n	800702c <ADC_COMP_IRQHandler>

0800702e <atoi>:
 800702e:	b510      	push	{r4, lr}
 8007030:	220a      	movs	r2, #10
 8007032:	2100      	movs	r1, #0
 8007034:	f001 fd08 	bl	8008a48 <strtol>
 8007038:	bd10      	pop	{r4, pc}
	...

0800703c <__errno>:
 800703c:	4b01      	ldr	r3, [pc, #4]	; (8007044 <__errno+0x8>)
 800703e:	6818      	ldr	r0, [r3, #0]
 8007040:	4770      	bx	lr
 8007042:	46c0      	nop			; (mov r8, r8)
 8007044:	20000020 	.word	0x20000020

08007048 <__libc_init_array>:
 8007048:	b570      	push	{r4, r5, r6, lr}
 800704a:	2600      	movs	r6, #0
 800704c:	4d0c      	ldr	r5, [pc, #48]	; (8007080 <__libc_init_array+0x38>)
 800704e:	4c0d      	ldr	r4, [pc, #52]	; (8007084 <__libc_init_array+0x3c>)
 8007050:	1b64      	subs	r4, r4, r5
 8007052:	10a4      	asrs	r4, r4, #2
 8007054:	42a6      	cmp	r6, r4
 8007056:	d109      	bne.n	800706c <__libc_init_array+0x24>
 8007058:	2600      	movs	r6, #0
 800705a:	f005 f867 	bl	800c12c <_init>
 800705e:	4d0a      	ldr	r5, [pc, #40]	; (8007088 <__libc_init_array+0x40>)
 8007060:	4c0a      	ldr	r4, [pc, #40]	; (800708c <__libc_init_array+0x44>)
 8007062:	1b64      	subs	r4, r4, r5
 8007064:	10a4      	asrs	r4, r4, #2
 8007066:	42a6      	cmp	r6, r4
 8007068:	d105      	bne.n	8007076 <__libc_init_array+0x2e>
 800706a:	bd70      	pop	{r4, r5, r6, pc}
 800706c:	00b3      	lsls	r3, r6, #2
 800706e:	58eb      	ldr	r3, [r5, r3]
 8007070:	4798      	blx	r3
 8007072:	3601      	adds	r6, #1
 8007074:	e7ee      	b.n	8007054 <__libc_init_array+0xc>
 8007076:	00b3      	lsls	r3, r6, #2
 8007078:	58eb      	ldr	r3, [r5, r3]
 800707a:	4798      	blx	r3
 800707c:	3601      	adds	r6, #1
 800707e:	e7f2      	b.n	8007066 <__libc_init_array+0x1e>
 8007080:	0800db5c 	.word	0x0800db5c
 8007084:	0800db5c 	.word	0x0800db5c
 8007088:	0800db5c 	.word	0x0800db5c
 800708c:	0800db60 	.word	0x0800db60

08007090 <localtime>:
 8007090:	4b07      	ldr	r3, [pc, #28]	; (80070b0 <localtime+0x20>)
 8007092:	b570      	push	{r4, r5, r6, lr}
 8007094:	681c      	ldr	r4, [r3, #0]
 8007096:	0005      	movs	r5, r0
 8007098:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800709a:	2b00      	cmp	r3, #0
 800709c:	d103      	bne.n	80070a6 <localtime+0x16>
 800709e:	2024      	movs	r0, #36	; 0x24
 80070a0:	f000 f8fe 	bl	80072a0 <malloc>
 80070a4:	63e0      	str	r0, [r4, #60]	; 0x3c
 80070a6:	0028      	movs	r0, r5
 80070a8:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80070aa:	f000 f803 	bl	80070b4 <localtime_r>
 80070ae:	bd70      	pop	{r4, r5, r6, pc}
 80070b0:	20000020 	.word	0x20000020

080070b4 <localtime_r>:
 80070b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80070b6:	000c      	movs	r4, r1
 80070b8:	0007      	movs	r7, r0
 80070ba:	f003 f8e9 	bl	800a290 <__gettzinfo>
 80070be:	0021      	movs	r1, r4
 80070c0:	0005      	movs	r5, r0
 80070c2:	0038      	movs	r0, r7
 80070c4:	f003 f8e8 	bl	800a298 <gmtime_r>
 80070c8:	4a71      	ldr	r2, [pc, #452]	; (8007290 <localtime_r+0x1dc>)
 80070ca:	6943      	ldr	r3, [r0, #20]
 80070cc:	0004      	movs	r4, r0
 80070ce:	189e      	adds	r6, r3, r2
 80070d0:	07b3      	lsls	r3, r6, #30
 80070d2:	d106      	bne.n	80070e2 <localtime_r+0x2e>
 80070d4:	2164      	movs	r1, #100	; 0x64
 80070d6:	0030      	movs	r0, r6
 80070d8:	f7f9 f9ac 	bl	8000434 <__aeabi_idivmod>
 80070dc:	2301      	movs	r3, #1
 80070de:	2900      	cmp	r1, #0
 80070e0:	d106      	bne.n	80070f0 <localtime_r+0x3c>
 80070e2:	21c8      	movs	r1, #200	; 0xc8
 80070e4:	0030      	movs	r0, r6
 80070e6:	0049      	lsls	r1, r1, #1
 80070e8:	f7f9 f9a4 	bl	8000434 <__aeabi_idivmod>
 80070ec:	424b      	negs	r3, r1
 80070ee:	414b      	adcs	r3, r1
 80070f0:	2130      	movs	r1, #48	; 0x30
 80070f2:	434b      	muls	r3, r1
 80070f4:	4967      	ldr	r1, [pc, #412]	; (8007294 <localtime_r+0x1e0>)
 80070f6:	185b      	adds	r3, r3, r1
 80070f8:	9301      	str	r3, [sp, #4]
 80070fa:	f001 fe2b 	bl	8008d54 <__tz_lock>
 80070fe:	f001 fe2b 	bl	8008d58 <_tzset_unlocked>
 8007102:	4b65      	ldr	r3, [pc, #404]	; (8007298 <localtime_r+0x1e4>)
 8007104:	681b      	ldr	r3, [r3, #0]
 8007106:	2b00      	cmp	r3, #0
 8007108:	d025      	beq.n	8007156 <localtime_r+0xa2>
 800710a:	686b      	ldr	r3, [r5, #4]
 800710c:	42b3      	cmp	r3, r6
 800710e:	d10c      	bne.n	800712a <localtime_r+0x76>
 8007110:	cf06      	ldmia	r7!, {r1, r2}
 8007112:	682e      	ldr	r6, [r5, #0]
 8007114:	6a28      	ldr	r0, [r5, #32]
 8007116:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8007118:	2e00      	cmp	r6, #0
 800711a:	d10e      	bne.n	800713a <localtime_r+0x86>
 800711c:	4293      	cmp	r3, r2
 800711e:	dc11      	bgt.n	8007144 <localtime_r+0x90>
 8007120:	d101      	bne.n	8007126 <localtime_r+0x72>
 8007122:	4288      	cmp	r0, r1
 8007124:	d80e      	bhi.n	8007144 <localtime_r+0x90>
 8007126:	2301      	movs	r3, #1
 8007128:	e015      	b.n	8007156 <localtime_r+0xa2>
 800712a:	0030      	movs	r0, r6
 800712c:	f001 fd62 	bl	8008bf4 <__tzcalc_limits>
 8007130:	2800      	cmp	r0, #0
 8007132:	d1ed      	bne.n	8007110 <localtime_r+0x5c>
 8007134:	2301      	movs	r3, #1
 8007136:	425b      	negs	r3, r3
 8007138:	e00d      	b.n	8007156 <localtime_r+0xa2>
 800713a:	4293      	cmp	r3, r2
 800713c:	dc0a      	bgt.n	8007154 <localtime_r+0xa0>
 800713e:	d101      	bne.n	8007144 <localtime_r+0x90>
 8007140:	4288      	cmp	r0, r1
 8007142:	d807      	bhi.n	8007154 <localtime_r+0xa0>
 8007144:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
 8007146:	2301      	movs	r3, #1
 8007148:	4290      	cmp	r0, r2
 800714a:	dc04      	bgt.n	8007156 <localtime_r+0xa2>
 800714c:	d102      	bne.n	8007154 <localtime_r+0xa0>
 800714e:	6caa      	ldr	r2, [r5, #72]	; 0x48
 8007150:	428a      	cmp	r2, r1
 8007152:	d800      	bhi.n	8007156 <localtime_r+0xa2>
 8007154:	2300      	movs	r3, #0
 8007156:	6223      	str	r3, [r4, #32]
 8007158:	6a23      	ldr	r3, [r4, #32]
 800715a:	2b01      	cmp	r3, #1
 800715c:	d149      	bne.n	80071f2 <localtime_r+0x13e>
 800715e:	6d2f      	ldr	r7, [r5, #80]	; 0x50
 8007160:	21e1      	movs	r1, #225	; 0xe1
 8007162:	0038      	movs	r0, r7
 8007164:	0109      	lsls	r1, r1, #4
 8007166:	f7f9 f965 	bl	8000434 <__aeabi_idivmod>
 800716a:	000e      	movs	r6, r1
 800716c:	213c      	movs	r1, #60	; 0x3c
 800716e:	0030      	movs	r0, r6
 8007170:	f7f9 f960 	bl	8000434 <__aeabi_idivmod>
 8007174:	6823      	ldr	r3, [r4, #0]
 8007176:	0030      	movs	r0, r6
 8007178:	1a5d      	subs	r5, r3, r1
 800717a:	6025      	str	r5, [r4, #0]
 800717c:	213c      	movs	r1, #60	; 0x3c
 800717e:	f7f9 f873 	bl	8000268 <__divsi3>
 8007182:	21e1      	movs	r1, #225	; 0xe1
 8007184:	6863      	ldr	r3, [r4, #4]
 8007186:	0109      	lsls	r1, r1, #4
 8007188:	1a1e      	subs	r6, r3, r0
 800718a:	6066      	str	r6, [r4, #4]
 800718c:	0038      	movs	r0, r7
 800718e:	f7f9 f86b 	bl	8000268 <__divsi3>
 8007192:	68a3      	ldr	r3, [r4, #8]
 8007194:	1a1b      	subs	r3, r3, r0
 8007196:	60a3      	str	r3, [r4, #8]
 8007198:	2d3b      	cmp	r5, #59	; 0x3b
 800719a:	dd2c      	ble.n	80071f6 <localtime_r+0x142>
 800719c:	3601      	adds	r6, #1
 800719e:	6066      	str	r6, [r4, #4]
 80071a0:	3d3c      	subs	r5, #60	; 0x3c
 80071a2:	6025      	str	r5, [r4, #0]
 80071a4:	6862      	ldr	r2, [r4, #4]
 80071a6:	2a3b      	cmp	r2, #59	; 0x3b
 80071a8:	dd2b      	ble.n	8007202 <localtime_r+0x14e>
 80071aa:	3301      	adds	r3, #1
 80071ac:	60a3      	str	r3, [r4, #8]
 80071ae:	3a3c      	subs	r2, #60	; 0x3c
 80071b0:	6062      	str	r2, [r4, #4]
 80071b2:	68a2      	ldr	r2, [r4, #8]
 80071b4:	2a17      	cmp	r2, #23
 80071b6:	dd33      	ble.n	8007220 <localtime_r+0x16c>
 80071b8:	69e3      	ldr	r3, [r4, #28]
 80071ba:	3301      	adds	r3, #1
 80071bc:	61e3      	str	r3, [r4, #28]
 80071be:	69a3      	ldr	r3, [r4, #24]
 80071c0:	3301      	adds	r3, #1
 80071c2:	2b06      	cmp	r3, #6
 80071c4:	dc23      	bgt.n	800720e <localtime_r+0x15a>
 80071c6:	61a3      	str	r3, [r4, #24]
 80071c8:	3a18      	subs	r2, #24
 80071ca:	68e3      	ldr	r3, [r4, #12]
 80071cc:	60a2      	str	r2, [r4, #8]
 80071ce:	6922      	ldr	r2, [r4, #16]
 80071d0:	3301      	adds	r3, #1
 80071d2:	9801      	ldr	r0, [sp, #4]
 80071d4:	60e3      	str	r3, [r4, #12]
 80071d6:	0091      	lsls	r1, r2, #2
 80071d8:	5809      	ldr	r1, [r1, r0]
 80071da:	428b      	cmp	r3, r1
 80071dc:	dd05      	ble.n	80071ea <localtime_r+0x136>
 80071de:	1a5b      	subs	r3, r3, r1
 80071e0:	3201      	adds	r2, #1
 80071e2:	60e3      	str	r3, [r4, #12]
 80071e4:	2a0c      	cmp	r2, #12
 80071e6:	d014      	beq.n	8007212 <localtime_r+0x15e>
 80071e8:	6122      	str	r2, [r4, #16]
 80071ea:	f001 fdb4 	bl	8008d56 <__tz_unlock>
 80071ee:	0020      	movs	r0, r4
 80071f0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80071f2:	6aaf      	ldr	r7, [r5, #40]	; 0x28
 80071f4:	e7b4      	b.n	8007160 <localtime_r+0xac>
 80071f6:	2d00      	cmp	r5, #0
 80071f8:	dad4      	bge.n	80071a4 <localtime_r+0xf0>
 80071fa:	3e01      	subs	r6, #1
 80071fc:	6066      	str	r6, [r4, #4]
 80071fe:	353c      	adds	r5, #60	; 0x3c
 8007200:	e7cf      	b.n	80071a2 <localtime_r+0xee>
 8007202:	2a00      	cmp	r2, #0
 8007204:	dad5      	bge.n	80071b2 <localtime_r+0xfe>
 8007206:	3b01      	subs	r3, #1
 8007208:	60a3      	str	r3, [r4, #8]
 800720a:	323c      	adds	r2, #60	; 0x3c
 800720c:	e7d0      	b.n	80071b0 <localtime_r+0xfc>
 800720e:	2300      	movs	r3, #0
 8007210:	e7d9      	b.n	80071c6 <localtime_r+0x112>
 8007212:	2200      	movs	r2, #0
 8007214:	6963      	ldr	r3, [r4, #20]
 8007216:	6122      	str	r2, [r4, #16]
 8007218:	3301      	adds	r3, #1
 800721a:	6163      	str	r3, [r4, #20]
 800721c:	61e2      	str	r2, [r4, #28]
 800721e:	e7e4      	b.n	80071ea <localtime_r+0x136>
 8007220:	2a00      	cmp	r2, #0
 8007222:	dae2      	bge.n	80071ea <localtime_r+0x136>
 8007224:	69e3      	ldr	r3, [r4, #28]
 8007226:	3b01      	subs	r3, #1
 8007228:	61e3      	str	r3, [r4, #28]
 800722a:	69a3      	ldr	r3, [r4, #24]
 800722c:	3b01      	subs	r3, #1
 800722e:	d411      	bmi.n	8007254 <localtime_r+0x1a0>
 8007230:	61a3      	str	r3, [r4, #24]
 8007232:	68e3      	ldr	r3, [r4, #12]
 8007234:	3218      	adds	r2, #24
 8007236:	1e59      	subs	r1, r3, #1
 8007238:	60e1      	str	r1, [r4, #12]
 800723a:	60a2      	str	r2, [r4, #8]
 800723c:	2900      	cmp	r1, #0
 800723e:	d1d4      	bne.n	80071ea <localtime_r+0x136>
 8007240:	6923      	ldr	r3, [r4, #16]
 8007242:	3b01      	subs	r3, #1
 8007244:	d408      	bmi.n	8007258 <localtime_r+0x1a4>
 8007246:	6123      	str	r3, [r4, #16]
 8007248:	6923      	ldr	r3, [r4, #16]
 800724a:	9a01      	ldr	r2, [sp, #4]
 800724c:	009b      	lsls	r3, r3, #2
 800724e:	589b      	ldr	r3, [r3, r2]
 8007250:	60e3      	str	r3, [r4, #12]
 8007252:	e7ca      	b.n	80071ea <localtime_r+0x136>
 8007254:	2306      	movs	r3, #6
 8007256:	e7eb      	b.n	8007230 <localtime_r+0x17c>
 8007258:	230b      	movs	r3, #11
 800725a:	6965      	ldr	r5, [r4, #20]
 800725c:	4a0f      	ldr	r2, [pc, #60]	; (800729c <localtime_r+0x1e8>)
 800725e:	6123      	str	r3, [r4, #16]
 8007260:	1e6b      	subs	r3, r5, #1
 8007262:	6163      	str	r3, [r4, #20]
 8007264:	18ad      	adds	r5, r5, r2
 8007266:	079b      	lsls	r3, r3, #30
 8007268:	d106      	bne.n	8007278 <localtime_r+0x1c4>
 800726a:	2164      	movs	r1, #100	; 0x64
 800726c:	0028      	movs	r0, r5
 800726e:	f7f9 f8e1 	bl	8000434 <__aeabi_idivmod>
 8007272:	2301      	movs	r3, #1
 8007274:	2900      	cmp	r1, #0
 8007276:	d106      	bne.n	8007286 <localtime_r+0x1d2>
 8007278:	21c8      	movs	r1, #200	; 0xc8
 800727a:	0028      	movs	r0, r5
 800727c:	0049      	lsls	r1, r1, #1
 800727e:	f7f9 f8d9 	bl	8000434 <__aeabi_idivmod>
 8007282:	424b      	negs	r3, r1
 8007284:	414b      	adcs	r3, r1
 8007286:	336d      	adds	r3, #109	; 0x6d
 8007288:	33ff      	adds	r3, #255	; 0xff
 800728a:	61e3      	str	r3, [r4, #28]
 800728c:	e7dc      	b.n	8007248 <localtime_r+0x194>
 800728e:	46c0      	nop			; (mov r8, r8)
 8007290:	0000076c 	.word	0x0000076c
 8007294:	0800d544 	.word	0x0800d544
 8007298:	200004b4 	.word	0x200004b4
 800729c:	0000076b 	.word	0x0000076b

080072a0 <malloc>:
 80072a0:	b510      	push	{r4, lr}
 80072a2:	4b03      	ldr	r3, [pc, #12]	; (80072b0 <malloc+0x10>)
 80072a4:	0001      	movs	r1, r0
 80072a6:	6818      	ldr	r0, [r3, #0]
 80072a8:	f000 f86a 	bl	8007380 <_malloc_r>
 80072ac:	bd10      	pop	{r4, pc}
 80072ae:	46c0      	nop			; (mov r8, r8)
 80072b0:	20000020 	.word	0x20000020

080072b4 <free>:
 80072b4:	b510      	push	{r4, lr}
 80072b6:	4b03      	ldr	r3, [pc, #12]	; (80072c4 <free+0x10>)
 80072b8:	0001      	movs	r1, r0
 80072ba:	6818      	ldr	r0, [r3, #0]
 80072bc:	f000 f816 	bl	80072ec <_free_r>
 80072c0:	bd10      	pop	{r4, pc}
 80072c2:	46c0      	nop			; (mov r8, r8)
 80072c4:	20000020 	.word	0x20000020

080072c8 <memcpy>:
 80072c8:	2300      	movs	r3, #0
 80072ca:	b510      	push	{r4, lr}
 80072cc:	429a      	cmp	r2, r3
 80072ce:	d100      	bne.n	80072d2 <memcpy+0xa>
 80072d0:	bd10      	pop	{r4, pc}
 80072d2:	5ccc      	ldrb	r4, [r1, r3]
 80072d4:	54c4      	strb	r4, [r0, r3]
 80072d6:	3301      	adds	r3, #1
 80072d8:	e7f8      	b.n	80072cc <memcpy+0x4>

080072da <memset>:
 80072da:	0003      	movs	r3, r0
 80072dc:	1812      	adds	r2, r2, r0
 80072de:	4293      	cmp	r3, r2
 80072e0:	d100      	bne.n	80072e4 <memset+0xa>
 80072e2:	4770      	bx	lr
 80072e4:	7019      	strb	r1, [r3, #0]
 80072e6:	3301      	adds	r3, #1
 80072e8:	e7f9      	b.n	80072de <memset+0x4>
	...

080072ec <_free_r>:
 80072ec:	b570      	push	{r4, r5, r6, lr}
 80072ee:	0005      	movs	r5, r0
 80072f0:	2900      	cmp	r1, #0
 80072f2:	d010      	beq.n	8007316 <_free_r+0x2a>
 80072f4:	1f0c      	subs	r4, r1, #4
 80072f6:	6823      	ldr	r3, [r4, #0]
 80072f8:	2b00      	cmp	r3, #0
 80072fa:	da00      	bge.n	80072fe <_free_r+0x12>
 80072fc:	18e4      	adds	r4, r4, r3
 80072fe:	0028      	movs	r0, r5
 8007300:	f003 f943 	bl	800a58a <__malloc_lock>
 8007304:	4a1d      	ldr	r2, [pc, #116]	; (800737c <_free_r+0x90>)
 8007306:	6813      	ldr	r3, [r2, #0]
 8007308:	2b00      	cmp	r3, #0
 800730a:	d105      	bne.n	8007318 <_free_r+0x2c>
 800730c:	6063      	str	r3, [r4, #4]
 800730e:	6014      	str	r4, [r2, #0]
 8007310:	0028      	movs	r0, r5
 8007312:	f003 f93b 	bl	800a58c <__malloc_unlock>
 8007316:	bd70      	pop	{r4, r5, r6, pc}
 8007318:	42a3      	cmp	r3, r4
 800731a:	d909      	bls.n	8007330 <_free_r+0x44>
 800731c:	6821      	ldr	r1, [r4, #0]
 800731e:	1860      	adds	r0, r4, r1
 8007320:	4283      	cmp	r3, r0
 8007322:	d1f3      	bne.n	800730c <_free_r+0x20>
 8007324:	6818      	ldr	r0, [r3, #0]
 8007326:	685b      	ldr	r3, [r3, #4]
 8007328:	1841      	adds	r1, r0, r1
 800732a:	6021      	str	r1, [r4, #0]
 800732c:	e7ee      	b.n	800730c <_free_r+0x20>
 800732e:	0013      	movs	r3, r2
 8007330:	685a      	ldr	r2, [r3, #4]
 8007332:	2a00      	cmp	r2, #0
 8007334:	d001      	beq.n	800733a <_free_r+0x4e>
 8007336:	42a2      	cmp	r2, r4
 8007338:	d9f9      	bls.n	800732e <_free_r+0x42>
 800733a:	6819      	ldr	r1, [r3, #0]
 800733c:	1858      	adds	r0, r3, r1
 800733e:	42a0      	cmp	r0, r4
 8007340:	d10b      	bne.n	800735a <_free_r+0x6e>
 8007342:	6820      	ldr	r0, [r4, #0]
 8007344:	1809      	adds	r1, r1, r0
 8007346:	1858      	adds	r0, r3, r1
 8007348:	6019      	str	r1, [r3, #0]
 800734a:	4282      	cmp	r2, r0
 800734c:	d1e0      	bne.n	8007310 <_free_r+0x24>
 800734e:	6810      	ldr	r0, [r2, #0]
 8007350:	6852      	ldr	r2, [r2, #4]
 8007352:	1841      	adds	r1, r0, r1
 8007354:	6019      	str	r1, [r3, #0]
 8007356:	605a      	str	r2, [r3, #4]
 8007358:	e7da      	b.n	8007310 <_free_r+0x24>
 800735a:	42a0      	cmp	r0, r4
 800735c:	d902      	bls.n	8007364 <_free_r+0x78>
 800735e:	230c      	movs	r3, #12
 8007360:	602b      	str	r3, [r5, #0]
 8007362:	e7d5      	b.n	8007310 <_free_r+0x24>
 8007364:	6821      	ldr	r1, [r4, #0]
 8007366:	1860      	adds	r0, r4, r1
 8007368:	4282      	cmp	r2, r0
 800736a:	d103      	bne.n	8007374 <_free_r+0x88>
 800736c:	6810      	ldr	r0, [r2, #0]
 800736e:	6852      	ldr	r2, [r2, #4]
 8007370:	1841      	adds	r1, r0, r1
 8007372:	6021      	str	r1, [r4, #0]
 8007374:	6062      	str	r2, [r4, #4]
 8007376:	605c      	str	r4, [r3, #4]
 8007378:	e7ca      	b.n	8007310 <_free_r+0x24>
 800737a:	46c0      	nop			; (mov r8, r8)
 800737c:	20000490 	.word	0x20000490

08007380 <_malloc_r>:
 8007380:	2303      	movs	r3, #3
 8007382:	b570      	push	{r4, r5, r6, lr}
 8007384:	1ccd      	adds	r5, r1, #3
 8007386:	439d      	bics	r5, r3
 8007388:	3508      	adds	r5, #8
 800738a:	0006      	movs	r6, r0
 800738c:	2d0c      	cmp	r5, #12
 800738e:	d21e      	bcs.n	80073ce <_malloc_r+0x4e>
 8007390:	250c      	movs	r5, #12
 8007392:	42a9      	cmp	r1, r5
 8007394:	d81d      	bhi.n	80073d2 <_malloc_r+0x52>
 8007396:	0030      	movs	r0, r6
 8007398:	f003 f8f7 	bl	800a58a <__malloc_lock>
 800739c:	4a25      	ldr	r2, [pc, #148]	; (8007434 <_malloc_r+0xb4>)
 800739e:	6814      	ldr	r4, [r2, #0]
 80073a0:	0021      	movs	r1, r4
 80073a2:	2900      	cmp	r1, #0
 80073a4:	d119      	bne.n	80073da <_malloc_r+0x5a>
 80073a6:	4c24      	ldr	r4, [pc, #144]	; (8007438 <_malloc_r+0xb8>)
 80073a8:	6823      	ldr	r3, [r4, #0]
 80073aa:	2b00      	cmp	r3, #0
 80073ac:	d103      	bne.n	80073b6 <_malloc_r+0x36>
 80073ae:	0030      	movs	r0, r6
 80073b0:	f000 fd26 	bl	8007e00 <_sbrk_r>
 80073b4:	6020      	str	r0, [r4, #0]
 80073b6:	0029      	movs	r1, r5
 80073b8:	0030      	movs	r0, r6
 80073ba:	f000 fd21 	bl	8007e00 <_sbrk_r>
 80073be:	1c43      	adds	r3, r0, #1
 80073c0:	d12b      	bne.n	800741a <_malloc_r+0x9a>
 80073c2:	230c      	movs	r3, #12
 80073c4:	0030      	movs	r0, r6
 80073c6:	6033      	str	r3, [r6, #0]
 80073c8:	f003 f8e0 	bl	800a58c <__malloc_unlock>
 80073cc:	e003      	b.n	80073d6 <_malloc_r+0x56>
 80073ce:	2d00      	cmp	r5, #0
 80073d0:	dadf      	bge.n	8007392 <_malloc_r+0x12>
 80073d2:	230c      	movs	r3, #12
 80073d4:	6033      	str	r3, [r6, #0]
 80073d6:	2000      	movs	r0, #0
 80073d8:	bd70      	pop	{r4, r5, r6, pc}
 80073da:	680b      	ldr	r3, [r1, #0]
 80073dc:	1b5b      	subs	r3, r3, r5
 80073de:	d419      	bmi.n	8007414 <_malloc_r+0x94>
 80073e0:	2b0b      	cmp	r3, #11
 80073e2:	d903      	bls.n	80073ec <_malloc_r+0x6c>
 80073e4:	600b      	str	r3, [r1, #0]
 80073e6:	18cc      	adds	r4, r1, r3
 80073e8:	6025      	str	r5, [r4, #0]
 80073ea:	e003      	b.n	80073f4 <_malloc_r+0x74>
 80073ec:	684b      	ldr	r3, [r1, #4]
 80073ee:	428c      	cmp	r4, r1
 80073f0:	d10d      	bne.n	800740e <_malloc_r+0x8e>
 80073f2:	6013      	str	r3, [r2, #0]
 80073f4:	0030      	movs	r0, r6
 80073f6:	f003 f8c9 	bl	800a58c <__malloc_unlock>
 80073fa:	0020      	movs	r0, r4
 80073fc:	2207      	movs	r2, #7
 80073fe:	300b      	adds	r0, #11
 8007400:	1d23      	adds	r3, r4, #4
 8007402:	4390      	bics	r0, r2
 8007404:	1ac3      	subs	r3, r0, r3
 8007406:	d0e7      	beq.n	80073d8 <_malloc_r+0x58>
 8007408:	425a      	negs	r2, r3
 800740a:	50e2      	str	r2, [r4, r3]
 800740c:	e7e4      	b.n	80073d8 <_malloc_r+0x58>
 800740e:	6063      	str	r3, [r4, #4]
 8007410:	000c      	movs	r4, r1
 8007412:	e7ef      	b.n	80073f4 <_malloc_r+0x74>
 8007414:	000c      	movs	r4, r1
 8007416:	6849      	ldr	r1, [r1, #4]
 8007418:	e7c3      	b.n	80073a2 <_malloc_r+0x22>
 800741a:	2303      	movs	r3, #3
 800741c:	1cc4      	adds	r4, r0, #3
 800741e:	439c      	bics	r4, r3
 8007420:	42a0      	cmp	r0, r4
 8007422:	d0e1      	beq.n	80073e8 <_malloc_r+0x68>
 8007424:	1a21      	subs	r1, r4, r0
 8007426:	0030      	movs	r0, r6
 8007428:	f000 fcea 	bl	8007e00 <_sbrk_r>
 800742c:	1c43      	adds	r3, r0, #1
 800742e:	d1db      	bne.n	80073e8 <_malloc_r+0x68>
 8007430:	e7c7      	b.n	80073c2 <_malloc_r+0x42>
 8007432:	46c0      	nop			; (mov r8, r8)
 8007434:	20000490 	.word	0x20000490
 8007438:	20000494 	.word	0x20000494

0800743c <__cvt>:
 800743c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800743e:	b08b      	sub	sp, #44	; 0x2c
 8007440:	0014      	movs	r4, r2
 8007442:	1e1d      	subs	r5, r3, #0
 8007444:	9912      	ldr	r1, [sp, #72]	; 0x48
 8007446:	da53      	bge.n	80074f0 <__cvt+0xb4>
 8007448:	2480      	movs	r4, #128	; 0x80
 800744a:	0624      	lsls	r4, r4, #24
 800744c:	191b      	adds	r3, r3, r4
 800744e:	001d      	movs	r5, r3
 8007450:	0014      	movs	r4, r2
 8007452:	232d      	movs	r3, #45	; 0x2d
 8007454:	700b      	strb	r3, [r1, #0]
 8007456:	2320      	movs	r3, #32
 8007458:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800745a:	2203      	movs	r2, #3
 800745c:	439e      	bics	r6, r3
 800745e:	2e46      	cmp	r6, #70	; 0x46
 8007460:	d007      	beq.n	8007472 <__cvt+0x36>
 8007462:	0033      	movs	r3, r6
 8007464:	3b45      	subs	r3, #69	; 0x45
 8007466:	4259      	negs	r1, r3
 8007468:	414b      	adcs	r3, r1
 800746a:	9910      	ldr	r1, [sp, #64]	; 0x40
 800746c:	3a01      	subs	r2, #1
 800746e:	18cb      	adds	r3, r1, r3
 8007470:	9310      	str	r3, [sp, #64]	; 0x40
 8007472:	ab09      	add	r3, sp, #36	; 0x24
 8007474:	9304      	str	r3, [sp, #16]
 8007476:	ab08      	add	r3, sp, #32
 8007478:	9303      	str	r3, [sp, #12]
 800747a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800747c:	9200      	str	r2, [sp, #0]
 800747e:	9302      	str	r3, [sp, #8]
 8007480:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007482:	0022      	movs	r2, r4
 8007484:	9301      	str	r3, [sp, #4]
 8007486:	002b      	movs	r3, r5
 8007488:	f001 ff42 	bl	8009310 <_dtoa_r>
 800748c:	0007      	movs	r7, r0
 800748e:	2e47      	cmp	r6, #71	; 0x47
 8007490:	d102      	bne.n	8007498 <__cvt+0x5c>
 8007492:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007494:	07db      	lsls	r3, r3, #31
 8007496:	d524      	bpl.n	80074e2 <__cvt+0xa6>
 8007498:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800749a:	18fb      	adds	r3, r7, r3
 800749c:	9307      	str	r3, [sp, #28]
 800749e:	2e46      	cmp	r6, #70	; 0x46
 80074a0:	d114      	bne.n	80074cc <__cvt+0x90>
 80074a2:	783b      	ldrb	r3, [r7, #0]
 80074a4:	2b30      	cmp	r3, #48	; 0x30
 80074a6:	d10c      	bne.n	80074c2 <__cvt+0x86>
 80074a8:	2200      	movs	r2, #0
 80074aa:	2300      	movs	r3, #0
 80074ac:	0020      	movs	r0, r4
 80074ae:	0029      	movs	r1, r5
 80074b0:	f7f8 ffd6 	bl	8000460 <__aeabi_dcmpeq>
 80074b4:	2800      	cmp	r0, #0
 80074b6:	d104      	bne.n	80074c2 <__cvt+0x86>
 80074b8:	2301      	movs	r3, #1
 80074ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80074bc:	1a9b      	subs	r3, r3, r2
 80074be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80074c0:	6013      	str	r3, [r2, #0]
 80074c2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80074c4:	9a07      	ldr	r2, [sp, #28]
 80074c6:	681b      	ldr	r3, [r3, #0]
 80074c8:	18d3      	adds	r3, r2, r3
 80074ca:	9307      	str	r3, [sp, #28]
 80074cc:	2200      	movs	r2, #0
 80074ce:	2300      	movs	r3, #0
 80074d0:	0020      	movs	r0, r4
 80074d2:	0029      	movs	r1, r5
 80074d4:	f7f8 ffc4 	bl	8000460 <__aeabi_dcmpeq>
 80074d8:	2230      	movs	r2, #48	; 0x30
 80074da:	2800      	cmp	r0, #0
 80074dc:	d00d      	beq.n	80074fa <__cvt+0xbe>
 80074de:	9b07      	ldr	r3, [sp, #28]
 80074e0:	9309      	str	r3, [sp, #36]	; 0x24
 80074e2:	0038      	movs	r0, r7
 80074e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80074e6:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80074e8:	1bdb      	subs	r3, r3, r7
 80074ea:	6013      	str	r3, [r2, #0]
 80074ec:	b00b      	add	sp, #44	; 0x2c
 80074ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80074f0:	2300      	movs	r3, #0
 80074f2:	e7af      	b.n	8007454 <__cvt+0x18>
 80074f4:	1c59      	adds	r1, r3, #1
 80074f6:	9109      	str	r1, [sp, #36]	; 0x24
 80074f8:	701a      	strb	r2, [r3, #0]
 80074fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80074fc:	9907      	ldr	r1, [sp, #28]
 80074fe:	428b      	cmp	r3, r1
 8007500:	d3f8      	bcc.n	80074f4 <__cvt+0xb8>
 8007502:	e7ee      	b.n	80074e2 <__cvt+0xa6>

08007504 <__exponent>:
 8007504:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007506:	1c83      	adds	r3, r0, #2
 8007508:	b085      	sub	sp, #20
 800750a:	9301      	str	r3, [sp, #4]
 800750c:	0006      	movs	r6, r0
 800750e:	000c      	movs	r4, r1
 8007510:	7002      	strb	r2, [r0, #0]
 8007512:	232b      	movs	r3, #43	; 0x2b
 8007514:	2900      	cmp	r1, #0
 8007516:	da01      	bge.n	800751c <__exponent+0x18>
 8007518:	232d      	movs	r3, #45	; 0x2d
 800751a:	424c      	negs	r4, r1
 800751c:	7073      	strb	r3, [r6, #1]
 800751e:	2c09      	cmp	r4, #9
 8007520:	dd22      	ble.n	8007568 <__exponent+0x64>
 8007522:	ab02      	add	r3, sp, #8
 8007524:	1ddd      	adds	r5, r3, #7
 8007526:	0020      	movs	r0, r4
 8007528:	210a      	movs	r1, #10
 800752a:	f7f8 ff83 	bl	8000434 <__aeabi_idivmod>
 800752e:	1e6f      	subs	r7, r5, #1
 8007530:	3130      	adds	r1, #48	; 0x30
 8007532:	7039      	strb	r1, [r7, #0]
 8007534:	0020      	movs	r0, r4
 8007536:	210a      	movs	r1, #10
 8007538:	f7f8 fe96 	bl	8000268 <__divsi3>
 800753c:	0004      	movs	r4, r0
 800753e:	2809      	cmp	r0, #9
 8007540:	dc0b      	bgt.n	800755a <__exponent+0x56>
 8007542:	3d02      	subs	r5, #2
 8007544:	3430      	adds	r4, #48	; 0x30
 8007546:	9b01      	ldr	r3, [sp, #4]
 8007548:	702c      	strb	r4, [r5, #0]
 800754a:	aa02      	add	r2, sp, #8
 800754c:	3207      	adds	r2, #7
 800754e:	0018      	movs	r0, r3
 8007550:	42aa      	cmp	r2, r5
 8007552:	d804      	bhi.n	800755e <__exponent+0x5a>
 8007554:	1b80      	subs	r0, r0, r6
 8007556:	b005      	add	sp, #20
 8007558:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800755a:	003d      	movs	r5, r7
 800755c:	e7e3      	b.n	8007526 <__exponent+0x22>
 800755e:	782a      	ldrb	r2, [r5, #0]
 8007560:	3501      	adds	r5, #1
 8007562:	701a      	strb	r2, [r3, #0]
 8007564:	3301      	adds	r3, #1
 8007566:	e7f0      	b.n	800754a <__exponent+0x46>
 8007568:	2330      	movs	r3, #48	; 0x30
 800756a:	18e4      	adds	r4, r4, r3
 800756c:	70b3      	strb	r3, [r6, #2]
 800756e:	1d30      	adds	r0, r6, #4
 8007570:	70f4      	strb	r4, [r6, #3]
 8007572:	e7ef      	b.n	8007554 <__exponent+0x50>

08007574 <_printf_float>:
 8007574:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007576:	b095      	sub	sp, #84	; 0x54
 8007578:	000c      	movs	r4, r1
 800757a:	920a      	str	r2, [sp, #40]	; 0x28
 800757c:	930b      	str	r3, [sp, #44]	; 0x2c
 800757e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007580:	9009      	str	r0, [sp, #36]	; 0x24
 8007582:	f002 ff6d 	bl	800a460 <_localeconv_r>
 8007586:	6803      	ldr	r3, [r0, #0]
 8007588:	0018      	movs	r0, r3
 800758a:	930c      	str	r3, [sp, #48]	; 0x30
 800758c:	f7f8 fdbc 	bl	8000108 <strlen>
 8007590:	2300      	movs	r3, #0
 8007592:	9312      	str	r3, [sp, #72]	; 0x48
 8007594:	6823      	ldr	r3, [r4, #0]
 8007596:	900e      	str	r0, [sp, #56]	; 0x38
 8007598:	930d      	str	r3, [sp, #52]	; 0x34
 800759a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800759c:	7e27      	ldrb	r7, [r4, #24]
 800759e:	682b      	ldr	r3, [r5, #0]
 80075a0:	2207      	movs	r2, #7
 80075a2:	05c9      	lsls	r1, r1, #23
 80075a4:	d545      	bpl.n	8007632 <_printf_float+0xbe>
 80075a6:	189b      	adds	r3, r3, r2
 80075a8:	4393      	bics	r3, r2
 80075aa:	001a      	movs	r2, r3
 80075ac:	3208      	adds	r2, #8
 80075ae:	602a      	str	r2, [r5, #0]
 80075b0:	681a      	ldr	r2, [r3, #0]
 80075b2:	685b      	ldr	r3, [r3, #4]
 80075b4:	64a2      	str	r2, [r4, #72]	; 0x48
 80075b6:	64e3      	str	r3, [r4, #76]	; 0x4c
 80075b8:	2201      	movs	r2, #1
 80075ba:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80075bc:	6ca6      	ldr	r6, [r4, #72]	; 0x48
 80075be:	006b      	lsls	r3, r5, #1
 80075c0:	085b      	lsrs	r3, r3, #1
 80075c2:	930f      	str	r3, [sp, #60]	; 0x3c
 80075c4:	4252      	negs	r2, r2
 80075c6:	4bac      	ldr	r3, [pc, #688]	; (8007878 <_printf_float+0x304>)
 80075c8:	0030      	movs	r0, r6
 80075ca:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80075cc:	f7fb fbf8 	bl	8002dc0 <__aeabi_dcmpun>
 80075d0:	2800      	cmp	r0, #0
 80075d2:	d130      	bne.n	8007636 <_printf_float+0xc2>
 80075d4:	2201      	movs	r2, #1
 80075d6:	4ba8      	ldr	r3, [pc, #672]	; (8007878 <_printf_float+0x304>)
 80075d8:	4252      	negs	r2, r2
 80075da:	0030      	movs	r0, r6
 80075dc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80075de:	f7f8 ff4f 	bl	8000480 <__aeabi_dcmple>
 80075e2:	2800      	cmp	r0, #0
 80075e4:	d127      	bne.n	8007636 <_printf_float+0xc2>
 80075e6:	2200      	movs	r2, #0
 80075e8:	2300      	movs	r3, #0
 80075ea:	0030      	movs	r0, r6
 80075ec:	0029      	movs	r1, r5
 80075ee:	f7f8 ff3d 	bl	800046c <__aeabi_dcmplt>
 80075f2:	2800      	cmp	r0, #0
 80075f4:	d003      	beq.n	80075fe <_printf_float+0x8a>
 80075f6:	0023      	movs	r3, r4
 80075f8:	222d      	movs	r2, #45	; 0x2d
 80075fa:	3343      	adds	r3, #67	; 0x43
 80075fc:	701a      	strb	r2, [r3, #0]
 80075fe:	4d9f      	ldr	r5, [pc, #636]	; (800787c <_printf_float+0x308>)
 8007600:	2f47      	cmp	r7, #71	; 0x47
 8007602:	d800      	bhi.n	8007606 <_printf_float+0x92>
 8007604:	4d9e      	ldr	r5, [pc, #632]	; (8007880 <_printf_float+0x30c>)
 8007606:	2303      	movs	r3, #3
 8007608:	2600      	movs	r6, #0
 800760a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800760c:	6123      	str	r3, [r4, #16]
 800760e:	3301      	adds	r3, #1
 8007610:	439a      	bics	r2, r3
 8007612:	6022      	str	r2, [r4, #0]
 8007614:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007616:	aa13      	add	r2, sp, #76	; 0x4c
 8007618:	9300      	str	r3, [sp, #0]
 800761a:	0021      	movs	r1, r4
 800761c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800761e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007620:	f000 f9f4 	bl	8007a0c <_printf_common>
 8007624:	1c43      	adds	r3, r0, #1
 8007626:	d000      	beq.n	800762a <_printf_float+0xb6>
 8007628:	e093      	b.n	8007752 <_printf_float+0x1de>
 800762a:	2001      	movs	r0, #1
 800762c:	4240      	negs	r0, r0
 800762e:	b015      	add	sp, #84	; 0x54
 8007630:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007632:	3307      	adds	r3, #7
 8007634:	e7b8      	b.n	80075a8 <_printf_float+0x34>
 8007636:	0032      	movs	r2, r6
 8007638:	002b      	movs	r3, r5
 800763a:	0030      	movs	r0, r6
 800763c:	0029      	movs	r1, r5
 800763e:	f7fb fbbf 	bl	8002dc0 <__aeabi_dcmpun>
 8007642:	2800      	cmp	r0, #0
 8007644:	d004      	beq.n	8007650 <_printf_float+0xdc>
 8007646:	4d8f      	ldr	r5, [pc, #572]	; (8007884 <_printf_float+0x310>)
 8007648:	2f47      	cmp	r7, #71	; 0x47
 800764a:	d8dc      	bhi.n	8007606 <_printf_float+0x92>
 800764c:	4d8e      	ldr	r5, [pc, #568]	; (8007888 <_printf_float+0x314>)
 800764e:	e7da      	b.n	8007606 <_printf_float+0x92>
 8007650:	2380      	movs	r3, #128	; 0x80
 8007652:	990d      	ldr	r1, [sp, #52]	; 0x34
 8007654:	6862      	ldr	r2, [r4, #4]
 8007656:	00db      	lsls	r3, r3, #3
 8007658:	430b      	orrs	r3, r1
 800765a:	1c51      	adds	r1, r2, #1
 800765c:	d143      	bne.n	80076e6 <_printf_float+0x172>
 800765e:	3207      	adds	r2, #7
 8007660:	6062      	str	r2, [r4, #4]
 8007662:	aa12      	add	r2, sp, #72	; 0x48
 8007664:	2100      	movs	r1, #0
 8007666:	9205      	str	r2, [sp, #20]
 8007668:	aa11      	add	r2, sp, #68	; 0x44
 800766a:	9203      	str	r2, [sp, #12]
 800766c:	2223      	movs	r2, #35	; 0x23
 800766e:	6023      	str	r3, [r4, #0]
 8007670:	9106      	str	r1, [sp, #24]
 8007672:	9301      	str	r3, [sp, #4]
 8007674:	a908      	add	r1, sp, #32
 8007676:	6863      	ldr	r3, [r4, #4]
 8007678:	1852      	adds	r2, r2, r1
 800767a:	9202      	str	r2, [sp, #8]
 800767c:	9300      	str	r3, [sp, #0]
 800767e:	0032      	movs	r2, r6
 8007680:	002b      	movs	r3, r5
 8007682:	9704      	str	r7, [sp, #16]
 8007684:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007686:	f7ff fed9 	bl	800743c <__cvt>
 800768a:	2320      	movs	r3, #32
 800768c:	003a      	movs	r2, r7
 800768e:	0005      	movs	r5, r0
 8007690:	439a      	bics	r2, r3
 8007692:	2a47      	cmp	r2, #71	; 0x47
 8007694:	d107      	bne.n	80076a6 <_printf_float+0x132>
 8007696:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007698:	1cda      	adds	r2, r3, #3
 800769a:	db02      	blt.n	80076a2 <_printf_float+0x12e>
 800769c:	6862      	ldr	r2, [r4, #4]
 800769e:	4293      	cmp	r3, r2
 80076a0:	dd45      	ble.n	800772e <_printf_float+0x1ba>
 80076a2:	3f02      	subs	r7, #2
 80076a4:	b2ff      	uxtb	r7, r7
 80076a6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80076a8:	2f65      	cmp	r7, #101	; 0x65
 80076aa:	d825      	bhi.n	80076f8 <_printf_float+0x184>
 80076ac:	0020      	movs	r0, r4
 80076ae:	3901      	subs	r1, #1
 80076b0:	003a      	movs	r2, r7
 80076b2:	3050      	adds	r0, #80	; 0x50
 80076b4:	9111      	str	r1, [sp, #68]	; 0x44
 80076b6:	f7ff ff25 	bl	8007504 <__exponent>
 80076ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80076bc:	0006      	movs	r6, r0
 80076be:	1813      	adds	r3, r2, r0
 80076c0:	6123      	str	r3, [r4, #16]
 80076c2:	2a01      	cmp	r2, #1
 80076c4:	dc02      	bgt.n	80076cc <_printf_float+0x158>
 80076c6:	6822      	ldr	r2, [r4, #0]
 80076c8:	07d2      	lsls	r2, r2, #31
 80076ca:	d501      	bpl.n	80076d0 <_printf_float+0x15c>
 80076cc:	3301      	adds	r3, #1
 80076ce:	6123      	str	r3, [r4, #16]
 80076d0:	2323      	movs	r3, #35	; 0x23
 80076d2:	aa08      	add	r2, sp, #32
 80076d4:	189b      	adds	r3, r3, r2
 80076d6:	781b      	ldrb	r3, [r3, #0]
 80076d8:	2b00      	cmp	r3, #0
 80076da:	d09b      	beq.n	8007614 <_printf_float+0xa0>
 80076dc:	0023      	movs	r3, r4
 80076de:	222d      	movs	r2, #45	; 0x2d
 80076e0:	3343      	adds	r3, #67	; 0x43
 80076e2:	701a      	strb	r2, [r3, #0]
 80076e4:	e796      	b.n	8007614 <_printf_float+0xa0>
 80076e6:	2f67      	cmp	r7, #103	; 0x67
 80076e8:	d100      	bne.n	80076ec <_printf_float+0x178>
 80076ea:	e176      	b.n	80079da <_printf_float+0x466>
 80076ec:	2f47      	cmp	r7, #71	; 0x47
 80076ee:	d1b8      	bne.n	8007662 <_printf_float+0xee>
 80076f0:	2a00      	cmp	r2, #0
 80076f2:	d1b6      	bne.n	8007662 <_printf_float+0xee>
 80076f4:	2201      	movs	r2, #1
 80076f6:	e7b3      	b.n	8007660 <_printf_float+0xec>
 80076f8:	2f66      	cmp	r7, #102	; 0x66
 80076fa:	d119      	bne.n	8007730 <_printf_float+0x1bc>
 80076fc:	6863      	ldr	r3, [r4, #4]
 80076fe:	2900      	cmp	r1, #0
 8007700:	dd0c      	ble.n	800771c <_printf_float+0x1a8>
 8007702:	6121      	str	r1, [r4, #16]
 8007704:	2b00      	cmp	r3, #0
 8007706:	d102      	bne.n	800770e <_printf_float+0x19a>
 8007708:	6822      	ldr	r2, [r4, #0]
 800770a:	07d2      	lsls	r2, r2, #31
 800770c:	d502      	bpl.n	8007714 <_printf_float+0x1a0>
 800770e:	3301      	adds	r3, #1
 8007710:	185b      	adds	r3, r3, r1
 8007712:	6123      	str	r3, [r4, #16]
 8007714:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007716:	2600      	movs	r6, #0
 8007718:	65a3      	str	r3, [r4, #88]	; 0x58
 800771a:	e7d9      	b.n	80076d0 <_printf_float+0x15c>
 800771c:	2b00      	cmp	r3, #0
 800771e:	d103      	bne.n	8007728 <_printf_float+0x1b4>
 8007720:	2201      	movs	r2, #1
 8007722:	6821      	ldr	r1, [r4, #0]
 8007724:	4211      	tst	r1, r2
 8007726:	d000      	beq.n	800772a <_printf_float+0x1b6>
 8007728:	1c9a      	adds	r2, r3, #2
 800772a:	6122      	str	r2, [r4, #16]
 800772c:	e7f2      	b.n	8007714 <_printf_float+0x1a0>
 800772e:	2767      	movs	r7, #103	; 0x67
 8007730:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007732:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007734:	4293      	cmp	r3, r2
 8007736:	db05      	blt.n	8007744 <_printf_float+0x1d0>
 8007738:	6822      	ldr	r2, [r4, #0]
 800773a:	6123      	str	r3, [r4, #16]
 800773c:	07d2      	lsls	r2, r2, #31
 800773e:	d5e9      	bpl.n	8007714 <_printf_float+0x1a0>
 8007740:	3301      	adds	r3, #1
 8007742:	e7e6      	b.n	8007712 <_printf_float+0x19e>
 8007744:	2101      	movs	r1, #1
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc01      	bgt.n	800774e <_printf_float+0x1da>
 800774a:	1849      	adds	r1, r1, r1
 800774c:	1ac9      	subs	r1, r1, r3
 800774e:	1852      	adds	r2, r2, r1
 8007750:	e7eb      	b.n	800772a <_printf_float+0x1b6>
 8007752:	6822      	ldr	r2, [r4, #0]
 8007754:	0553      	lsls	r3, r2, #21
 8007756:	d408      	bmi.n	800776a <_printf_float+0x1f6>
 8007758:	6923      	ldr	r3, [r4, #16]
 800775a:	002a      	movs	r2, r5
 800775c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800775e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007760:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007762:	47a8      	blx	r5
 8007764:	1c43      	adds	r3, r0, #1
 8007766:	d129      	bne.n	80077bc <_printf_float+0x248>
 8007768:	e75f      	b.n	800762a <_printf_float+0xb6>
 800776a:	2f65      	cmp	r7, #101	; 0x65
 800776c:	d800      	bhi.n	8007770 <_printf_float+0x1fc>
 800776e:	e0e0      	b.n	8007932 <_printf_float+0x3be>
 8007770:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8007772:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8007774:	2200      	movs	r2, #0
 8007776:	2300      	movs	r3, #0
 8007778:	f7f8 fe72 	bl	8000460 <__aeabi_dcmpeq>
 800777c:	2800      	cmp	r0, #0
 800777e:	d034      	beq.n	80077ea <_printf_float+0x276>
 8007780:	2301      	movs	r3, #1
 8007782:	4a42      	ldr	r2, [pc, #264]	; (800788c <_printf_float+0x318>)
 8007784:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007786:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007788:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800778a:	47a8      	blx	r5
 800778c:	1c43      	adds	r3, r0, #1
 800778e:	d100      	bne.n	8007792 <_printf_float+0x21e>
 8007790:	e74b      	b.n	800762a <_printf_float+0xb6>
 8007792:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007794:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007796:	4293      	cmp	r3, r2
 8007798:	db02      	blt.n	80077a0 <_printf_float+0x22c>
 800779a:	6823      	ldr	r3, [r4, #0]
 800779c:	07db      	lsls	r3, r3, #31
 800779e:	d50d      	bpl.n	80077bc <_printf_float+0x248>
 80077a0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80077a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80077a4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80077a6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80077a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80077aa:	47a8      	blx	r5
 80077ac:	2500      	movs	r5, #0
 80077ae:	1c43      	adds	r3, r0, #1
 80077b0:	d100      	bne.n	80077b4 <_printf_float+0x240>
 80077b2:	e73a      	b.n	800762a <_printf_float+0xb6>
 80077b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80077b6:	3b01      	subs	r3, #1
 80077b8:	42ab      	cmp	r3, r5
 80077ba:	dc0a      	bgt.n	80077d2 <_printf_float+0x25e>
 80077bc:	6823      	ldr	r3, [r4, #0]
 80077be:	079b      	lsls	r3, r3, #30
 80077c0:	d500      	bpl.n	80077c4 <_printf_float+0x250>
 80077c2:	e108      	b.n	80079d6 <_printf_float+0x462>
 80077c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80077c6:	68e0      	ldr	r0, [r4, #12]
 80077c8:	4298      	cmp	r0, r3
 80077ca:	db00      	blt.n	80077ce <_printf_float+0x25a>
 80077cc:	e72f      	b.n	800762e <_printf_float+0xba>
 80077ce:	0018      	movs	r0, r3
 80077d0:	e72d      	b.n	800762e <_printf_float+0xba>
 80077d2:	0022      	movs	r2, r4
 80077d4:	2301      	movs	r3, #1
 80077d6:	321a      	adds	r2, #26
 80077d8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80077da:	9809      	ldr	r0, [sp, #36]	; 0x24
 80077dc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80077de:	47b0      	blx	r6
 80077e0:	1c43      	adds	r3, r0, #1
 80077e2:	d100      	bne.n	80077e6 <_printf_float+0x272>
 80077e4:	e721      	b.n	800762a <_printf_float+0xb6>
 80077e6:	3501      	adds	r5, #1
 80077e8:	e7e4      	b.n	80077b4 <_printf_float+0x240>
 80077ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80077ec:	2b00      	cmp	r3, #0
 80077ee:	dc2d      	bgt.n	800784c <_printf_float+0x2d8>
 80077f0:	2301      	movs	r3, #1
 80077f2:	4a26      	ldr	r2, [pc, #152]	; (800788c <_printf_float+0x318>)
 80077f4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80077f6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80077f8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80077fa:	47b0      	blx	r6
 80077fc:	1c43      	adds	r3, r0, #1
 80077fe:	d100      	bne.n	8007802 <_printf_float+0x28e>
 8007800:	e713      	b.n	800762a <_printf_float+0xb6>
 8007802:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007804:	2b00      	cmp	r3, #0
 8007806:	d105      	bne.n	8007814 <_printf_float+0x2a0>
 8007808:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800780a:	2b00      	cmp	r3, #0
 800780c:	d102      	bne.n	8007814 <_printf_float+0x2a0>
 800780e:	6823      	ldr	r3, [r4, #0]
 8007810:	07db      	lsls	r3, r3, #31
 8007812:	d5d3      	bpl.n	80077bc <_printf_float+0x248>
 8007814:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8007816:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007818:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800781a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800781c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800781e:	47b0      	blx	r6
 8007820:	2600      	movs	r6, #0
 8007822:	1c43      	adds	r3, r0, #1
 8007824:	d100      	bne.n	8007828 <_printf_float+0x2b4>
 8007826:	e700      	b.n	800762a <_printf_float+0xb6>
 8007828:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800782a:	425b      	negs	r3, r3
 800782c:	42b3      	cmp	r3, r6
 800782e:	dc01      	bgt.n	8007834 <_printf_float+0x2c0>
 8007830:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007832:	e792      	b.n	800775a <_printf_float+0x1e6>
 8007834:	0022      	movs	r2, r4
 8007836:	2301      	movs	r3, #1
 8007838:	321a      	adds	r2, #26
 800783a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800783c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800783e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8007840:	47b8      	blx	r7
 8007842:	1c43      	adds	r3, r0, #1
 8007844:	d100      	bne.n	8007848 <_printf_float+0x2d4>
 8007846:	e6f0      	b.n	800762a <_printf_float+0xb6>
 8007848:	3601      	adds	r6, #1
 800784a:	e7ed      	b.n	8007828 <_printf_float+0x2b4>
 800784c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800784e:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8007850:	429f      	cmp	r7, r3
 8007852:	dd00      	ble.n	8007856 <_printf_float+0x2e2>
 8007854:	001f      	movs	r7, r3
 8007856:	2f00      	cmp	r7, #0
 8007858:	dd08      	ble.n	800786c <_printf_float+0x2f8>
 800785a:	003b      	movs	r3, r7
 800785c:	002a      	movs	r2, r5
 800785e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007860:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007862:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8007864:	47b0      	blx	r6
 8007866:	1c43      	adds	r3, r0, #1
 8007868:	d100      	bne.n	800786c <_printf_float+0x2f8>
 800786a:	e6de      	b.n	800762a <_printf_float+0xb6>
 800786c:	2300      	movs	r3, #0
 800786e:	930d      	str	r3, [sp, #52]	; 0x34
 8007870:	43fb      	mvns	r3, r7
 8007872:	17db      	asrs	r3, r3, #31
 8007874:	930f      	str	r3, [sp, #60]	; 0x3c
 8007876:	e018      	b.n	80078aa <_printf_float+0x336>
 8007878:	7fefffff 	.word	0x7fefffff
 800787c:	0800d5a8 	.word	0x0800d5a8
 8007880:	0800d5a4 	.word	0x0800d5a4
 8007884:	0800d5b0 	.word	0x0800d5b0
 8007888:	0800d5ac 	.word	0x0800d5ac
 800788c:	0800db34 	.word	0x0800db34
 8007890:	0022      	movs	r2, r4
 8007892:	2301      	movs	r3, #1
 8007894:	321a      	adds	r2, #26
 8007896:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007898:	9809      	ldr	r0, [sp, #36]	; 0x24
 800789a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800789c:	47b0      	blx	r6
 800789e:	1c43      	adds	r3, r0, #1
 80078a0:	d100      	bne.n	80078a4 <_printf_float+0x330>
 80078a2:	e6c2      	b.n	800762a <_printf_float+0xb6>
 80078a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80078a6:	3301      	adds	r3, #1
 80078a8:	930d      	str	r3, [sp, #52]	; 0x34
 80078aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80078ac:	6da6      	ldr	r6, [r4, #88]	; 0x58
 80078ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80078b0:	403b      	ands	r3, r7
 80078b2:	1af3      	subs	r3, r6, r3
 80078b4:	4293      	cmp	r3, r2
 80078b6:	dceb      	bgt.n	8007890 <_printf_float+0x31c>
 80078b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80078ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80078bc:	19ad      	adds	r5, r5, r6
 80078be:	4293      	cmp	r3, r2
 80078c0:	db10      	blt.n	80078e4 <_printf_float+0x370>
 80078c2:	6823      	ldr	r3, [r4, #0]
 80078c4:	07db      	lsls	r3, r3, #31
 80078c6:	d40d      	bmi.n	80078e4 <_printf_float+0x370>
 80078c8:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80078ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80078cc:	1bbe      	subs	r6, r7, r6
 80078ce:	1aff      	subs	r7, r7, r3
 80078d0:	42b7      	cmp	r7, r6
 80078d2:	dd00      	ble.n	80078d6 <_printf_float+0x362>
 80078d4:	0037      	movs	r7, r6
 80078d6:	2f00      	cmp	r7, #0
 80078d8:	dc0d      	bgt.n	80078f6 <_printf_float+0x382>
 80078da:	43fe      	mvns	r6, r7
 80078dc:	17f3      	asrs	r3, r6, #31
 80078de:	2500      	movs	r5, #0
 80078e0:	930c      	str	r3, [sp, #48]	; 0x30
 80078e2:	e01c      	b.n	800791e <_printf_float+0x3aa>
 80078e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80078e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80078e8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80078ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 80078ec:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80078ee:	47b8      	blx	r7
 80078f0:	1c43      	adds	r3, r0, #1
 80078f2:	d1e9      	bne.n	80078c8 <_printf_float+0x354>
 80078f4:	e699      	b.n	800762a <_printf_float+0xb6>
 80078f6:	003b      	movs	r3, r7
 80078f8:	002a      	movs	r2, r5
 80078fa:	990a      	ldr	r1, [sp, #40]	; 0x28
 80078fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80078fe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007900:	47a8      	blx	r5
 8007902:	1c43      	adds	r3, r0, #1
 8007904:	d1e9      	bne.n	80078da <_printf_float+0x366>
 8007906:	e690      	b.n	800762a <_printf_float+0xb6>
 8007908:	0022      	movs	r2, r4
 800790a:	2301      	movs	r3, #1
 800790c:	321a      	adds	r2, #26
 800790e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007910:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007912:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8007914:	47b0      	blx	r6
 8007916:	1c43      	adds	r3, r0, #1
 8007918:	d100      	bne.n	800791c <_printf_float+0x3a8>
 800791a:	e686      	b.n	800762a <_printf_float+0xb6>
 800791c:	3501      	adds	r5, #1
 800791e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8007920:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007922:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007924:	1a9b      	subs	r3, r3, r2
 8007926:	003a      	movs	r2, r7
 8007928:	400a      	ands	r2, r1
 800792a:	1a9b      	subs	r3, r3, r2
 800792c:	42ab      	cmp	r3, r5
 800792e:	dceb      	bgt.n	8007908 <_printf_float+0x394>
 8007930:	e744      	b.n	80077bc <_printf_float+0x248>
 8007932:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007934:	2b01      	cmp	r3, #1
 8007936:	dc02      	bgt.n	800793e <_printf_float+0x3ca>
 8007938:	2301      	movs	r3, #1
 800793a:	421a      	tst	r2, r3
 800793c:	d032      	beq.n	80079a4 <_printf_float+0x430>
 800793e:	2301      	movs	r3, #1
 8007940:	002a      	movs	r2, r5
 8007942:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007944:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007946:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8007948:	47b8      	blx	r7
 800794a:	1c43      	adds	r3, r0, #1
 800794c:	d100      	bne.n	8007950 <_printf_float+0x3dc>
 800794e:	e66c      	b.n	800762a <_printf_float+0xb6>
 8007950:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007952:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007954:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007956:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007958:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800795a:	3501      	adds	r5, #1
 800795c:	47b8      	blx	r7
 800795e:	1c43      	adds	r3, r0, #1
 8007960:	d100      	bne.n	8007964 <_printf_float+0x3f0>
 8007962:	e662      	b.n	800762a <_printf_float+0xb6>
 8007964:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8007966:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8007968:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800796a:	2200      	movs	r2, #0
 800796c:	1e5f      	subs	r7, r3, #1
 800796e:	2300      	movs	r3, #0
 8007970:	f7f8 fd76 	bl	8000460 <__aeabi_dcmpeq>
 8007974:	003b      	movs	r3, r7
 8007976:	2800      	cmp	r0, #0
 8007978:	d014      	beq.n	80079a4 <_printf_float+0x430>
 800797a:	2500      	movs	r5, #0
 800797c:	e00a      	b.n	8007994 <_printf_float+0x420>
 800797e:	0022      	movs	r2, r4
 8007980:	2301      	movs	r3, #1
 8007982:	321a      	adds	r2, #26
 8007984:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007986:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007988:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800798a:	47b8      	blx	r7
 800798c:	1c43      	adds	r3, r0, #1
 800798e:	d100      	bne.n	8007992 <_printf_float+0x41e>
 8007990:	e64b      	b.n	800762a <_printf_float+0xb6>
 8007992:	3501      	adds	r5, #1
 8007994:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007996:	3b01      	subs	r3, #1
 8007998:	42ab      	cmp	r3, r5
 800799a:	dcf0      	bgt.n	800797e <_printf_float+0x40a>
 800799c:	0022      	movs	r2, r4
 800799e:	0033      	movs	r3, r6
 80079a0:	3250      	adds	r2, #80	; 0x50
 80079a2:	e6db      	b.n	800775c <_printf_float+0x1e8>
 80079a4:	002a      	movs	r2, r5
 80079a6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80079a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80079aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80079ac:	47a8      	blx	r5
 80079ae:	1c43      	adds	r3, r0, #1
 80079b0:	d1f4      	bne.n	800799c <_printf_float+0x428>
 80079b2:	e63a      	b.n	800762a <_printf_float+0xb6>
 80079b4:	0022      	movs	r2, r4
 80079b6:	2301      	movs	r3, #1
 80079b8:	3219      	adds	r2, #25
 80079ba:	990a      	ldr	r1, [sp, #40]	; 0x28
 80079bc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80079be:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80079c0:	47b0      	blx	r6
 80079c2:	1c43      	adds	r3, r0, #1
 80079c4:	d100      	bne.n	80079c8 <_printf_float+0x454>
 80079c6:	e630      	b.n	800762a <_printf_float+0xb6>
 80079c8:	3501      	adds	r5, #1
 80079ca:	68e3      	ldr	r3, [r4, #12]
 80079cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80079ce:	1a9b      	subs	r3, r3, r2
 80079d0:	42ab      	cmp	r3, r5
 80079d2:	dcef      	bgt.n	80079b4 <_printf_float+0x440>
 80079d4:	e6f6      	b.n	80077c4 <_printf_float+0x250>
 80079d6:	2500      	movs	r5, #0
 80079d8:	e7f7      	b.n	80079ca <_printf_float+0x456>
 80079da:	2a00      	cmp	r2, #0
 80079dc:	d100      	bne.n	80079e0 <_printf_float+0x46c>
 80079de:	e689      	b.n	80076f4 <_printf_float+0x180>
 80079e0:	2100      	movs	r1, #0
 80079e2:	9106      	str	r1, [sp, #24]
 80079e4:	a912      	add	r1, sp, #72	; 0x48
 80079e6:	9105      	str	r1, [sp, #20]
 80079e8:	a911      	add	r1, sp, #68	; 0x44
 80079ea:	9103      	str	r1, [sp, #12]
 80079ec:	2123      	movs	r1, #35	; 0x23
 80079ee:	a808      	add	r0, sp, #32
 80079f0:	1809      	adds	r1, r1, r0
 80079f2:	6023      	str	r3, [r4, #0]
 80079f4:	9301      	str	r3, [sp, #4]
 80079f6:	9200      	str	r2, [sp, #0]
 80079f8:	002b      	movs	r3, r5
 80079fa:	9704      	str	r7, [sp, #16]
 80079fc:	9102      	str	r1, [sp, #8]
 80079fe:	0032      	movs	r2, r6
 8007a00:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007a02:	f7ff fd1b 	bl	800743c <__cvt>
 8007a06:	0005      	movs	r5, r0
 8007a08:	e645      	b.n	8007696 <_printf_float+0x122>
 8007a0a:	46c0      	nop			; (mov r8, r8)

08007a0c <_printf_common>:
 8007a0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007a0e:	0015      	movs	r5, r2
 8007a10:	9301      	str	r3, [sp, #4]
 8007a12:	688a      	ldr	r2, [r1, #8]
 8007a14:	690b      	ldr	r3, [r1, #16]
 8007a16:	9000      	str	r0, [sp, #0]
 8007a18:	000c      	movs	r4, r1
 8007a1a:	4293      	cmp	r3, r2
 8007a1c:	da00      	bge.n	8007a20 <_printf_common+0x14>
 8007a1e:	0013      	movs	r3, r2
 8007a20:	0022      	movs	r2, r4
 8007a22:	602b      	str	r3, [r5, #0]
 8007a24:	3243      	adds	r2, #67	; 0x43
 8007a26:	7812      	ldrb	r2, [r2, #0]
 8007a28:	2a00      	cmp	r2, #0
 8007a2a:	d001      	beq.n	8007a30 <_printf_common+0x24>
 8007a2c:	3301      	adds	r3, #1
 8007a2e:	602b      	str	r3, [r5, #0]
 8007a30:	6823      	ldr	r3, [r4, #0]
 8007a32:	069b      	lsls	r3, r3, #26
 8007a34:	d502      	bpl.n	8007a3c <_printf_common+0x30>
 8007a36:	682b      	ldr	r3, [r5, #0]
 8007a38:	3302      	adds	r3, #2
 8007a3a:	602b      	str	r3, [r5, #0]
 8007a3c:	2706      	movs	r7, #6
 8007a3e:	6823      	ldr	r3, [r4, #0]
 8007a40:	401f      	ands	r7, r3
 8007a42:	d027      	beq.n	8007a94 <_printf_common+0x88>
 8007a44:	0023      	movs	r3, r4
 8007a46:	3343      	adds	r3, #67	; 0x43
 8007a48:	781b      	ldrb	r3, [r3, #0]
 8007a4a:	1e5a      	subs	r2, r3, #1
 8007a4c:	4193      	sbcs	r3, r2
 8007a4e:	6822      	ldr	r2, [r4, #0]
 8007a50:	0692      	lsls	r2, r2, #26
 8007a52:	d430      	bmi.n	8007ab6 <_printf_common+0xaa>
 8007a54:	0022      	movs	r2, r4
 8007a56:	9901      	ldr	r1, [sp, #4]
 8007a58:	3243      	adds	r2, #67	; 0x43
 8007a5a:	9800      	ldr	r0, [sp, #0]
 8007a5c:	9e08      	ldr	r6, [sp, #32]
 8007a5e:	47b0      	blx	r6
 8007a60:	1c43      	adds	r3, r0, #1
 8007a62:	d025      	beq.n	8007ab0 <_printf_common+0xa4>
 8007a64:	2306      	movs	r3, #6
 8007a66:	6820      	ldr	r0, [r4, #0]
 8007a68:	682a      	ldr	r2, [r5, #0]
 8007a6a:	68e1      	ldr	r1, [r4, #12]
 8007a6c:	4003      	ands	r3, r0
 8007a6e:	2500      	movs	r5, #0
 8007a70:	2b04      	cmp	r3, #4
 8007a72:	d103      	bne.n	8007a7c <_printf_common+0x70>
 8007a74:	1a8d      	subs	r5, r1, r2
 8007a76:	43eb      	mvns	r3, r5
 8007a78:	17db      	asrs	r3, r3, #31
 8007a7a:	401d      	ands	r5, r3
 8007a7c:	68a3      	ldr	r3, [r4, #8]
 8007a7e:	6922      	ldr	r2, [r4, #16]
 8007a80:	4293      	cmp	r3, r2
 8007a82:	dd01      	ble.n	8007a88 <_printf_common+0x7c>
 8007a84:	1a9b      	subs	r3, r3, r2
 8007a86:	18ed      	adds	r5, r5, r3
 8007a88:	2700      	movs	r7, #0
 8007a8a:	42bd      	cmp	r5, r7
 8007a8c:	d120      	bne.n	8007ad0 <_printf_common+0xc4>
 8007a8e:	2000      	movs	r0, #0
 8007a90:	e010      	b.n	8007ab4 <_printf_common+0xa8>
 8007a92:	3701      	adds	r7, #1
 8007a94:	68e3      	ldr	r3, [r4, #12]
 8007a96:	682a      	ldr	r2, [r5, #0]
 8007a98:	1a9b      	subs	r3, r3, r2
 8007a9a:	42bb      	cmp	r3, r7
 8007a9c:	ddd2      	ble.n	8007a44 <_printf_common+0x38>
 8007a9e:	0022      	movs	r2, r4
 8007aa0:	2301      	movs	r3, #1
 8007aa2:	3219      	adds	r2, #25
 8007aa4:	9901      	ldr	r1, [sp, #4]
 8007aa6:	9800      	ldr	r0, [sp, #0]
 8007aa8:	9e08      	ldr	r6, [sp, #32]
 8007aaa:	47b0      	blx	r6
 8007aac:	1c43      	adds	r3, r0, #1
 8007aae:	d1f0      	bne.n	8007a92 <_printf_common+0x86>
 8007ab0:	2001      	movs	r0, #1
 8007ab2:	4240      	negs	r0, r0
 8007ab4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007ab6:	2030      	movs	r0, #48	; 0x30
 8007ab8:	18e1      	adds	r1, r4, r3
 8007aba:	3143      	adds	r1, #67	; 0x43
 8007abc:	7008      	strb	r0, [r1, #0]
 8007abe:	0021      	movs	r1, r4
 8007ac0:	1c5a      	adds	r2, r3, #1
 8007ac2:	3145      	adds	r1, #69	; 0x45
 8007ac4:	7809      	ldrb	r1, [r1, #0]
 8007ac6:	18a2      	adds	r2, r4, r2
 8007ac8:	3243      	adds	r2, #67	; 0x43
 8007aca:	3302      	adds	r3, #2
 8007acc:	7011      	strb	r1, [r2, #0]
 8007ace:	e7c1      	b.n	8007a54 <_printf_common+0x48>
 8007ad0:	0022      	movs	r2, r4
 8007ad2:	2301      	movs	r3, #1
 8007ad4:	321a      	adds	r2, #26
 8007ad6:	9901      	ldr	r1, [sp, #4]
 8007ad8:	9800      	ldr	r0, [sp, #0]
 8007ada:	9e08      	ldr	r6, [sp, #32]
 8007adc:	47b0      	blx	r6
 8007ade:	1c43      	adds	r3, r0, #1
 8007ae0:	d0e6      	beq.n	8007ab0 <_printf_common+0xa4>
 8007ae2:	3701      	adds	r7, #1
 8007ae4:	e7d1      	b.n	8007a8a <_printf_common+0x7e>
	...

08007ae8 <_printf_i>:
 8007ae8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007aea:	b089      	sub	sp, #36	; 0x24
 8007aec:	9204      	str	r2, [sp, #16]
 8007aee:	000a      	movs	r2, r1
 8007af0:	3243      	adds	r2, #67	; 0x43
 8007af2:	9305      	str	r3, [sp, #20]
 8007af4:	9003      	str	r0, [sp, #12]
 8007af6:	9202      	str	r2, [sp, #8]
 8007af8:	7e0a      	ldrb	r2, [r1, #24]
 8007afa:	000c      	movs	r4, r1
 8007afc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007afe:	2a6e      	cmp	r2, #110	; 0x6e
 8007b00:	d100      	bne.n	8007b04 <_printf_i+0x1c>
 8007b02:	e086      	b.n	8007c12 <_printf_i+0x12a>
 8007b04:	d81f      	bhi.n	8007b46 <_printf_i+0x5e>
 8007b06:	2a63      	cmp	r2, #99	; 0x63
 8007b08:	d033      	beq.n	8007b72 <_printf_i+0x8a>
 8007b0a:	d808      	bhi.n	8007b1e <_printf_i+0x36>
 8007b0c:	2a00      	cmp	r2, #0
 8007b0e:	d100      	bne.n	8007b12 <_printf_i+0x2a>
 8007b10:	e08c      	b.n	8007c2c <_printf_i+0x144>
 8007b12:	2a58      	cmp	r2, #88	; 0x58
 8007b14:	d04d      	beq.n	8007bb2 <_printf_i+0xca>
 8007b16:	0025      	movs	r5, r4
 8007b18:	3542      	adds	r5, #66	; 0x42
 8007b1a:	702a      	strb	r2, [r5, #0]
 8007b1c:	e030      	b.n	8007b80 <_printf_i+0x98>
 8007b1e:	2a64      	cmp	r2, #100	; 0x64
 8007b20:	d001      	beq.n	8007b26 <_printf_i+0x3e>
 8007b22:	2a69      	cmp	r2, #105	; 0x69
 8007b24:	d1f7      	bne.n	8007b16 <_printf_i+0x2e>
 8007b26:	6819      	ldr	r1, [r3, #0]
 8007b28:	6825      	ldr	r5, [r4, #0]
 8007b2a:	1d0a      	adds	r2, r1, #4
 8007b2c:	0628      	lsls	r0, r5, #24
 8007b2e:	d529      	bpl.n	8007b84 <_printf_i+0x9c>
 8007b30:	6808      	ldr	r0, [r1, #0]
 8007b32:	601a      	str	r2, [r3, #0]
 8007b34:	2800      	cmp	r0, #0
 8007b36:	da03      	bge.n	8007b40 <_printf_i+0x58>
 8007b38:	232d      	movs	r3, #45	; 0x2d
 8007b3a:	9a02      	ldr	r2, [sp, #8]
 8007b3c:	4240      	negs	r0, r0
 8007b3e:	7013      	strb	r3, [r2, #0]
 8007b40:	4e6b      	ldr	r6, [pc, #428]	; (8007cf0 <_printf_i+0x208>)
 8007b42:	270a      	movs	r7, #10
 8007b44:	e04f      	b.n	8007be6 <_printf_i+0xfe>
 8007b46:	2a73      	cmp	r2, #115	; 0x73
 8007b48:	d074      	beq.n	8007c34 <_printf_i+0x14c>
 8007b4a:	d808      	bhi.n	8007b5e <_printf_i+0x76>
 8007b4c:	2a6f      	cmp	r2, #111	; 0x6f
 8007b4e:	d01f      	beq.n	8007b90 <_printf_i+0xa8>
 8007b50:	2a70      	cmp	r2, #112	; 0x70
 8007b52:	d1e0      	bne.n	8007b16 <_printf_i+0x2e>
 8007b54:	2220      	movs	r2, #32
 8007b56:	6809      	ldr	r1, [r1, #0]
 8007b58:	430a      	orrs	r2, r1
 8007b5a:	6022      	str	r2, [r4, #0]
 8007b5c:	e003      	b.n	8007b66 <_printf_i+0x7e>
 8007b5e:	2a75      	cmp	r2, #117	; 0x75
 8007b60:	d016      	beq.n	8007b90 <_printf_i+0xa8>
 8007b62:	2a78      	cmp	r2, #120	; 0x78
 8007b64:	d1d7      	bne.n	8007b16 <_printf_i+0x2e>
 8007b66:	0022      	movs	r2, r4
 8007b68:	2178      	movs	r1, #120	; 0x78
 8007b6a:	3245      	adds	r2, #69	; 0x45
 8007b6c:	7011      	strb	r1, [r2, #0]
 8007b6e:	4e61      	ldr	r6, [pc, #388]	; (8007cf4 <_printf_i+0x20c>)
 8007b70:	e022      	b.n	8007bb8 <_printf_i+0xd0>
 8007b72:	0025      	movs	r5, r4
 8007b74:	681a      	ldr	r2, [r3, #0]
 8007b76:	3542      	adds	r5, #66	; 0x42
 8007b78:	1d11      	adds	r1, r2, #4
 8007b7a:	6019      	str	r1, [r3, #0]
 8007b7c:	6813      	ldr	r3, [r2, #0]
 8007b7e:	702b      	strb	r3, [r5, #0]
 8007b80:	2301      	movs	r3, #1
 8007b82:	e065      	b.n	8007c50 <_printf_i+0x168>
 8007b84:	6808      	ldr	r0, [r1, #0]
 8007b86:	601a      	str	r2, [r3, #0]
 8007b88:	0669      	lsls	r1, r5, #25
 8007b8a:	d5d3      	bpl.n	8007b34 <_printf_i+0x4c>
 8007b8c:	b200      	sxth	r0, r0
 8007b8e:	e7d1      	b.n	8007b34 <_printf_i+0x4c>
 8007b90:	6819      	ldr	r1, [r3, #0]
 8007b92:	6825      	ldr	r5, [r4, #0]
 8007b94:	1d08      	adds	r0, r1, #4
 8007b96:	6018      	str	r0, [r3, #0]
 8007b98:	6808      	ldr	r0, [r1, #0]
 8007b9a:	062e      	lsls	r6, r5, #24
 8007b9c:	d505      	bpl.n	8007baa <_printf_i+0xc2>
 8007b9e:	4e54      	ldr	r6, [pc, #336]	; (8007cf0 <_printf_i+0x208>)
 8007ba0:	2708      	movs	r7, #8
 8007ba2:	2a6f      	cmp	r2, #111	; 0x6f
 8007ba4:	d01b      	beq.n	8007bde <_printf_i+0xf6>
 8007ba6:	270a      	movs	r7, #10
 8007ba8:	e019      	b.n	8007bde <_printf_i+0xf6>
 8007baa:	066d      	lsls	r5, r5, #25
 8007bac:	d5f7      	bpl.n	8007b9e <_printf_i+0xb6>
 8007bae:	b280      	uxth	r0, r0
 8007bb0:	e7f5      	b.n	8007b9e <_printf_i+0xb6>
 8007bb2:	3145      	adds	r1, #69	; 0x45
 8007bb4:	4e4e      	ldr	r6, [pc, #312]	; (8007cf0 <_printf_i+0x208>)
 8007bb6:	700a      	strb	r2, [r1, #0]
 8007bb8:	6818      	ldr	r0, [r3, #0]
 8007bba:	6822      	ldr	r2, [r4, #0]
 8007bbc:	1d01      	adds	r1, r0, #4
 8007bbe:	6800      	ldr	r0, [r0, #0]
 8007bc0:	6019      	str	r1, [r3, #0]
 8007bc2:	0615      	lsls	r5, r2, #24
 8007bc4:	d521      	bpl.n	8007c0a <_printf_i+0x122>
 8007bc6:	07d3      	lsls	r3, r2, #31
 8007bc8:	d502      	bpl.n	8007bd0 <_printf_i+0xe8>
 8007bca:	2320      	movs	r3, #32
 8007bcc:	431a      	orrs	r2, r3
 8007bce:	6022      	str	r2, [r4, #0]
 8007bd0:	2710      	movs	r7, #16
 8007bd2:	2800      	cmp	r0, #0
 8007bd4:	d103      	bne.n	8007bde <_printf_i+0xf6>
 8007bd6:	2320      	movs	r3, #32
 8007bd8:	6822      	ldr	r2, [r4, #0]
 8007bda:	439a      	bics	r2, r3
 8007bdc:	6022      	str	r2, [r4, #0]
 8007bde:	0023      	movs	r3, r4
 8007be0:	2200      	movs	r2, #0
 8007be2:	3343      	adds	r3, #67	; 0x43
 8007be4:	701a      	strb	r2, [r3, #0]
 8007be6:	6863      	ldr	r3, [r4, #4]
 8007be8:	60a3      	str	r3, [r4, #8]
 8007bea:	2b00      	cmp	r3, #0
 8007bec:	db58      	blt.n	8007ca0 <_printf_i+0x1b8>
 8007bee:	2204      	movs	r2, #4
 8007bf0:	6821      	ldr	r1, [r4, #0]
 8007bf2:	4391      	bics	r1, r2
 8007bf4:	6021      	str	r1, [r4, #0]
 8007bf6:	2800      	cmp	r0, #0
 8007bf8:	d154      	bne.n	8007ca4 <_printf_i+0x1bc>
 8007bfa:	9d02      	ldr	r5, [sp, #8]
 8007bfc:	2b00      	cmp	r3, #0
 8007bfe:	d05a      	beq.n	8007cb6 <_printf_i+0x1ce>
 8007c00:	0025      	movs	r5, r4
 8007c02:	7833      	ldrb	r3, [r6, #0]
 8007c04:	3542      	adds	r5, #66	; 0x42
 8007c06:	702b      	strb	r3, [r5, #0]
 8007c08:	e055      	b.n	8007cb6 <_printf_i+0x1ce>
 8007c0a:	0655      	lsls	r5, r2, #25
 8007c0c:	d5db      	bpl.n	8007bc6 <_printf_i+0xde>
 8007c0e:	b280      	uxth	r0, r0
 8007c10:	e7d9      	b.n	8007bc6 <_printf_i+0xde>
 8007c12:	681a      	ldr	r2, [r3, #0]
 8007c14:	680d      	ldr	r5, [r1, #0]
 8007c16:	1d10      	adds	r0, r2, #4
 8007c18:	6949      	ldr	r1, [r1, #20]
 8007c1a:	6018      	str	r0, [r3, #0]
 8007c1c:	6813      	ldr	r3, [r2, #0]
 8007c1e:	062e      	lsls	r6, r5, #24
 8007c20:	d501      	bpl.n	8007c26 <_printf_i+0x13e>
 8007c22:	6019      	str	r1, [r3, #0]
 8007c24:	e002      	b.n	8007c2c <_printf_i+0x144>
 8007c26:	066d      	lsls	r5, r5, #25
 8007c28:	d5fb      	bpl.n	8007c22 <_printf_i+0x13a>
 8007c2a:	8019      	strh	r1, [r3, #0]
 8007c2c:	2300      	movs	r3, #0
 8007c2e:	9d02      	ldr	r5, [sp, #8]
 8007c30:	6123      	str	r3, [r4, #16]
 8007c32:	e04f      	b.n	8007cd4 <_printf_i+0x1ec>
 8007c34:	681a      	ldr	r2, [r3, #0]
 8007c36:	1d11      	adds	r1, r2, #4
 8007c38:	6019      	str	r1, [r3, #0]
 8007c3a:	6815      	ldr	r5, [r2, #0]
 8007c3c:	2100      	movs	r1, #0
 8007c3e:	6862      	ldr	r2, [r4, #4]
 8007c40:	0028      	movs	r0, r5
 8007c42:	f002 fc97 	bl	800a574 <memchr>
 8007c46:	2800      	cmp	r0, #0
 8007c48:	d001      	beq.n	8007c4e <_printf_i+0x166>
 8007c4a:	1b40      	subs	r0, r0, r5
 8007c4c:	6060      	str	r0, [r4, #4]
 8007c4e:	6863      	ldr	r3, [r4, #4]
 8007c50:	6123      	str	r3, [r4, #16]
 8007c52:	2300      	movs	r3, #0
 8007c54:	9a02      	ldr	r2, [sp, #8]
 8007c56:	7013      	strb	r3, [r2, #0]
 8007c58:	e03c      	b.n	8007cd4 <_printf_i+0x1ec>
 8007c5a:	6923      	ldr	r3, [r4, #16]
 8007c5c:	002a      	movs	r2, r5
 8007c5e:	9904      	ldr	r1, [sp, #16]
 8007c60:	9803      	ldr	r0, [sp, #12]
 8007c62:	9d05      	ldr	r5, [sp, #20]
 8007c64:	47a8      	blx	r5
 8007c66:	1c43      	adds	r3, r0, #1
 8007c68:	d03e      	beq.n	8007ce8 <_printf_i+0x200>
 8007c6a:	6823      	ldr	r3, [r4, #0]
 8007c6c:	079b      	lsls	r3, r3, #30
 8007c6e:	d415      	bmi.n	8007c9c <_printf_i+0x1b4>
 8007c70:	9b07      	ldr	r3, [sp, #28]
 8007c72:	68e0      	ldr	r0, [r4, #12]
 8007c74:	4298      	cmp	r0, r3
 8007c76:	da39      	bge.n	8007cec <_printf_i+0x204>
 8007c78:	0018      	movs	r0, r3
 8007c7a:	e037      	b.n	8007cec <_printf_i+0x204>
 8007c7c:	0022      	movs	r2, r4
 8007c7e:	2301      	movs	r3, #1
 8007c80:	3219      	adds	r2, #25
 8007c82:	9904      	ldr	r1, [sp, #16]
 8007c84:	9803      	ldr	r0, [sp, #12]
 8007c86:	9e05      	ldr	r6, [sp, #20]
 8007c88:	47b0      	blx	r6
 8007c8a:	1c43      	adds	r3, r0, #1
 8007c8c:	d02c      	beq.n	8007ce8 <_printf_i+0x200>
 8007c8e:	3501      	adds	r5, #1
 8007c90:	68e3      	ldr	r3, [r4, #12]
 8007c92:	9a07      	ldr	r2, [sp, #28]
 8007c94:	1a9b      	subs	r3, r3, r2
 8007c96:	42ab      	cmp	r3, r5
 8007c98:	dcf0      	bgt.n	8007c7c <_printf_i+0x194>
 8007c9a:	e7e9      	b.n	8007c70 <_printf_i+0x188>
 8007c9c:	2500      	movs	r5, #0
 8007c9e:	e7f7      	b.n	8007c90 <_printf_i+0x1a8>
 8007ca0:	2800      	cmp	r0, #0
 8007ca2:	d0ad      	beq.n	8007c00 <_printf_i+0x118>
 8007ca4:	9d02      	ldr	r5, [sp, #8]
 8007ca6:	0039      	movs	r1, r7
 8007ca8:	f7f8 fada 	bl	8000260 <__aeabi_uidivmod>
 8007cac:	5c73      	ldrb	r3, [r6, r1]
 8007cae:	3d01      	subs	r5, #1
 8007cb0:	702b      	strb	r3, [r5, #0]
 8007cb2:	2800      	cmp	r0, #0
 8007cb4:	d1f7      	bne.n	8007ca6 <_printf_i+0x1be>
 8007cb6:	2f08      	cmp	r7, #8
 8007cb8:	d109      	bne.n	8007cce <_printf_i+0x1e6>
 8007cba:	6823      	ldr	r3, [r4, #0]
 8007cbc:	07db      	lsls	r3, r3, #31
 8007cbe:	d506      	bpl.n	8007cce <_printf_i+0x1e6>
 8007cc0:	6863      	ldr	r3, [r4, #4]
 8007cc2:	6922      	ldr	r2, [r4, #16]
 8007cc4:	4293      	cmp	r3, r2
 8007cc6:	dc02      	bgt.n	8007cce <_printf_i+0x1e6>
 8007cc8:	2330      	movs	r3, #48	; 0x30
 8007cca:	3d01      	subs	r5, #1
 8007ccc:	702b      	strb	r3, [r5, #0]
 8007cce:	9b02      	ldr	r3, [sp, #8]
 8007cd0:	1b5b      	subs	r3, r3, r5
 8007cd2:	6123      	str	r3, [r4, #16]
 8007cd4:	9b05      	ldr	r3, [sp, #20]
 8007cd6:	aa07      	add	r2, sp, #28
 8007cd8:	9300      	str	r3, [sp, #0]
 8007cda:	0021      	movs	r1, r4
 8007cdc:	9b04      	ldr	r3, [sp, #16]
 8007cde:	9803      	ldr	r0, [sp, #12]
 8007ce0:	f7ff fe94 	bl	8007a0c <_printf_common>
 8007ce4:	1c43      	adds	r3, r0, #1
 8007ce6:	d1b8      	bne.n	8007c5a <_printf_i+0x172>
 8007ce8:	2001      	movs	r0, #1
 8007cea:	4240      	negs	r0, r0
 8007cec:	b009      	add	sp, #36	; 0x24
 8007cee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007cf0:	0800d5b4 	.word	0x0800d5b4
 8007cf4:	0800d5c5 	.word	0x0800d5c5

08007cf8 <iprintf>:
 8007cf8:	b40f      	push	{r0, r1, r2, r3}
 8007cfa:	4b0b      	ldr	r3, [pc, #44]	; (8007d28 <iprintf+0x30>)
 8007cfc:	b513      	push	{r0, r1, r4, lr}
 8007cfe:	681c      	ldr	r4, [r3, #0]
 8007d00:	2c00      	cmp	r4, #0
 8007d02:	d005      	beq.n	8007d10 <iprintf+0x18>
 8007d04:	69a3      	ldr	r3, [r4, #24]
 8007d06:	2b00      	cmp	r3, #0
 8007d08:	d102      	bne.n	8007d10 <iprintf+0x18>
 8007d0a:	0020      	movs	r0, r4
 8007d0c:	f002 f9d8 	bl	800a0c0 <__sinit>
 8007d10:	ab05      	add	r3, sp, #20
 8007d12:	9a04      	ldr	r2, [sp, #16]
 8007d14:	68a1      	ldr	r1, [r4, #8]
 8007d16:	0020      	movs	r0, r4
 8007d18:	9301      	str	r3, [sp, #4]
 8007d1a:	f003 f8b5 	bl	800ae88 <_vfiprintf_r>
 8007d1e:	bc16      	pop	{r1, r2, r4}
 8007d20:	bc08      	pop	{r3}
 8007d22:	b004      	add	sp, #16
 8007d24:	4718      	bx	r3
 8007d26:	46c0      	nop			; (mov r8, r8)
 8007d28:	20000020 	.word	0x20000020

08007d2c <_puts_r>:
 8007d2c:	b570      	push	{r4, r5, r6, lr}
 8007d2e:	0005      	movs	r5, r0
 8007d30:	000e      	movs	r6, r1
 8007d32:	2800      	cmp	r0, #0
 8007d34:	d004      	beq.n	8007d40 <_puts_r+0x14>
 8007d36:	6983      	ldr	r3, [r0, #24]
 8007d38:	2b00      	cmp	r3, #0
 8007d3a:	d101      	bne.n	8007d40 <_puts_r+0x14>
 8007d3c:	f002 f9c0 	bl	800a0c0 <__sinit>
 8007d40:	69ab      	ldr	r3, [r5, #24]
 8007d42:	68ac      	ldr	r4, [r5, #8]
 8007d44:	2b00      	cmp	r3, #0
 8007d46:	d102      	bne.n	8007d4e <_puts_r+0x22>
 8007d48:	0028      	movs	r0, r5
 8007d4a:	f002 f9b9 	bl	800a0c0 <__sinit>
 8007d4e:	4b24      	ldr	r3, [pc, #144]	; (8007de0 <_puts_r+0xb4>)
 8007d50:	429c      	cmp	r4, r3
 8007d52:	d10f      	bne.n	8007d74 <_puts_r+0x48>
 8007d54:	686c      	ldr	r4, [r5, #4]
 8007d56:	89a3      	ldrh	r3, [r4, #12]
 8007d58:	071b      	lsls	r3, r3, #28
 8007d5a:	d502      	bpl.n	8007d62 <_puts_r+0x36>
 8007d5c:	6923      	ldr	r3, [r4, #16]
 8007d5e:	2b00      	cmp	r3, #0
 8007d60:	d11f      	bne.n	8007da2 <_puts_r+0x76>
 8007d62:	0021      	movs	r1, r4
 8007d64:	0028      	movs	r0, r5
 8007d66:	f001 f9d3 	bl	8009110 <__swsetup_r>
 8007d6a:	2800      	cmp	r0, #0
 8007d6c:	d019      	beq.n	8007da2 <_puts_r+0x76>
 8007d6e:	2001      	movs	r0, #1
 8007d70:	4240      	negs	r0, r0
 8007d72:	bd70      	pop	{r4, r5, r6, pc}
 8007d74:	4b1b      	ldr	r3, [pc, #108]	; (8007de4 <_puts_r+0xb8>)
 8007d76:	429c      	cmp	r4, r3
 8007d78:	d101      	bne.n	8007d7e <_puts_r+0x52>
 8007d7a:	68ac      	ldr	r4, [r5, #8]
 8007d7c:	e7eb      	b.n	8007d56 <_puts_r+0x2a>
 8007d7e:	4b1a      	ldr	r3, [pc, #104]	; (8007de8 <_puts_r+0xbc>)
 8007d80:	429c      	cmp	r4, r3
 8007d82:	d1e8      	bne.n	8007d56 <_puts_r+0x2a>
 8007d84:	68ec      	ldr	r4, [r5, #12]
 8007d86:	e7e6      	b.n	8007d56 <_puts_r+0x2a>
 8007d88:	3601      	adds	r6, #1
 8007d8a:	60a3      	str	r3, [r4, #8]
 8007d8c:	2b00      	cmp	r3, #0
 8007d8e:	da04      	bge.n	8007d9a <_puts_r+0x6e>
 8007d90:	69a2      	ldr	r2, [r4, #24]
 8007d92:	429a      	cmp	r2, r3
 8007d94:	dc16      	bgt.n	8007dc4 <_puts_r+0x98>
 8007d96:	290a      	cmp	r1, #10
 8007d98:	d014      	beq.n	8007dc4 <_puts_r+0x98>
 8007d9a:	6823      	ldr	r3, [r4, #0]
 8007d9c:	1c5a      	adds	r2, r3, #1
 8007d9e:	6022      	str	r2, [r4, #0]
 8007da0:	7019      	strb	r1, [r3, #0]
 8007da2:	68a3      	ldr	r3, [r4, #8]
 8007da4:	7831      	ldrb	r1, [r6, #0]
 8007da6:	3b01      	subs	r3, #1
 8007da8:	2900      	cmp	r1, #0
 8007daa:	d1ed      	bne.n	8007d88 <_puts_r+0x5c>
 8007dac:	60a3      	str	r3, [r4, #8]
 8007dae:	2b00      	cmp	r3, #0
 8007db0:	da0f      	bge.n	8007dd2 <_puts_r+0xa6>
 8007db2:	0022      	movs	r2, r4
 8007db4:	310a      	adds	r1, #10
 8007db6:	0028      	movs	r0, r5
 8007db8:	f001 f954 	bl	8009064 <__swbuf_r>
 8007dbc:	1c43      	adds	r3, r0, #1
 8007dbe:	d0d6      	beq.n	8007d6e <_puts_r+0x42>
 8007dc0:	200a      	movs	r0, #10
 8007dc2:	e7d6      	b.n	8007d72 <_puts_r+0x46>
 8007dc4:	0022      	movs	r2, r4
 8007dc6:	0028      	movs	r0, r5
 8007dc8:	f001 f94c 	bl	8009064 <__swbuf_r>
 8007dcc:	1c43      	adds	r3, r0, #1
 8007dce:	d1e8      	bne.n	8007da2 <_puts_r+0x76>
 8007dd0:	e7cd      	b.n	8007d6e <_puts_r+0x42>
 8007dd2:	200a      	movs	r0, #10
 8007dd4:	6823      	ldr	r3, [r4, #0]
 8007dd6:	1c5a      	adds	r2, r3, #1
 8007dd8:	6022      	str	r2, [r4, #0]
 8007dda:	7018      	strb	r0, [r3, #0]
 8007ddc:	e7c9      	b.n	8007d72 <_puts_r+0x46>
 8007dde:	46c0      	nop			; (mov r8, r8)
 8007de0:	0800d8c0 	.word	0x0800d8c0
 8007de4:	0800d8e0 	.word	0x0800d8e0
 8007de8:	0800d8a0 	.word	0x0800d8a0

08007dec <puts>:
 8007dec:	b510      	push	{r4, lr}
 8007dee:	4b03      	ldr	r3, [pc, #12]	; (8007dfc <puts+0x10>)
 8007df0:	0001      	movs	r1, r0
 8007df2:	6818      	ldr	r0, [r3, #0]
 8007df4:	f7ff ff9a 	bl	8007d2c <_puts_r>
 8007df8:	bd10      	pop	{r4, pc}
 8007dfa:	46c0      	nop			; (mov r8, r8)
 8007dfc:	20000020 	.word	0x20000020

08007e00 <_sbrk_r>:
 8007e00:	2300      	movs	r3, #0
 8007e02:	b570      	push	{r4, r5, r6, lr}
 8007e04:	4c06      	ldr	r4, [pc, #24]	; (8007e20 <_sbrk_r+0x20>)
 8007e06:	0005      	movs	r5, r0
 8007e08:	0008      	movs	r0, r1
 8007e0a:	6023      	str	r3, [r4, #0]
 8007e0c:	f7ff f8ba 	bl	8006f84 <_sbrk>
 8007e10:	1c43      	adds	r3, r0, #1
 8007e12:	d103      	bne.n	8007e1c <_sbrk_r+0x1c>
 8007e14:	6823      	ldr	r3, [r4, #0]
 8007e16:	2b00      	cmp	r3, #0
 8007e18:	d000      	beq.n	8007e1c <_sbrk_r+0x1c>
 8007e1a:	602b      	str	r3, [r5, #0]
 8007e1c:	bd70      	pop	{r4, r5, r6, pc}
 8007e1e:	46c0      	nop			; (mov r8, r8)
 8007e20:	2000056c 	.word	0x2000056c

08007e24 <siprintf>:
 8007e24:	b40e      	push	{r1, r2, r3}
 8007e26:	b500      	push	{lr}
 8007e28:	490b      	ldr	r1, [pc, #44]	; (8007e58 <siprintf+0x34>)
 8007e2a:	b09c      	sub	sp, #112	; 0x70
 8007e2c:	ab1d      	add	r3, sp, #116	; 0x74
 8007e2e:	9002      	str	r0, [sp, #8]
 8007e30:	9006      	str	r0, [sp, #24]
 8007e32:	9107      	str	r1, [sp, #28]
 8007e34:	9104      	str	r1, [sp, #16]
 8007e36:	4809      	ldr	r0, [pc, #36]	; (8007e5c <siprintf+0x38>)
 8007e38:	4909      	ldr	r1, [pc, #36]	; (8007e60 <siprintf+0x3c>)
 8007e3a:	cb04      	ldmia	r3!, {r2}
 8007e3c:	9105      	str	r1, [sp, #20]
 8007e3e:	6800      	ldr	r0, [r0, #0]
 8007e40:	a902      	add	r1, sp, #8
 8007e42:	9301      	str	r3, [sp, #4]
 8007e44:	f002 fefa 	bl	800ac3c <_svfiprintf_r>
 8007e48:	2300      	movs	r3, #0
 8007e4a:	9a02      	ldr	r2, [sp, #8]
 8007e4c:	7013      	strb	r3, [r2, #0]
 8007e4e:	b01c      	add	sp, #112	; 0x70
 8007e50:	bc08      	pop	{r3}
 8007e52:	b003      	add	sp, #12
 8007e54:	4718      	bx	r3
 8007e56:	46c0      	nop			; (mov r8, r8)
 8007e58:	7fffffff 	.word	0x7fffffff
 8007e5c:	20000020 	.word	0x20000020
 8007e60:	ffff0208 	.word	0xffff0208

08007e64 <strcat>:
 8007e64:	0002      	movs	r2, r0
 8007e66:	b510      	push	{r4, lr}
 8007e68:	7813      	ldrb	r3, [r2, #0]
 8007e6a:	1c54      	adds	r4, r2, #1
 8007e6c:	2b00      	cmp	r3, #0
 8007e6e:	d105      	bne.n	8007e7c <strcat+0x18>
 8007e70:	5ccc      	ldrb	r4, [r1, r3]
 8007e72:	54d4      	strb	r4, [r2, r3]
 8007e74:	3301      	adds	r3, #1
 8007e76:	2c00      	cmp	r4, #0
 8007e78:	d1fa      	bne.n	8007e70 <strcat+0xc>
 8007e7a:	bd10      	pop	{r4, pc}
 8007e7c:	0022      	movs	r2, r4
 8007e7e:	e7f3      	b.n	8007e68 <strcat+0x4>

08007e80 <iso_year_adjust>:
 8007e80:	22fa      	movs	r2, #250	; 0xfa
 8007e82:	6943      	ldr	r3, [r0, #20]
 8007e84:	b570      	push	{r4, r5, r6, lr}
 8007e86:	00d2      	lsls	r2, r2, #3
 8007e88:	17dc      	asrs	r4, r3, #31
 8007e8a:	4014      	ands	r4, r2
 8007e8c:	3c64      	subs	r4, #100	; 0x64
 8007e8e:	191c      	adds	r4, r3, r4
 8007e90:	0005      	movs	r5, r0
 8007e92:	07a3      	lsls	r3, r4, #30
 8007e94:	d106      	bne.n	8007ea4 <iso_year_adjust+0x24>
 8007e96:	2164      	movs	r1, #100	; 0x64
 8007e98:	0020      	movs	r0, r4
 8007e9a:	f7f8 facb 	bl	8000434 <__aeabi_idivmod>
 8007e9e:	2301      	movs	r3, #1
 8007ea0:	2900      	cmp	r1, #0
 8007ea2:	d106      	bne.n	8007eb2 <iso_year_adjust+0x32>
 8007ea4:	21c8      	movs	r1, #200	; 0xc8
 8007ea6:	0020      	movs	r0, r4
 8007ea8:	0049      	lsls	r1, r1, #1
 8007eaa:	f7f8 fac3 	bl	8000434 <__aeabi_idivmod>
 8007eae:	424b      	negs	r3, r1
 8007eb0:	414b      	adcs	r3, r1
 8007eb2:	69ea      	ldr	r2, [r5, #28]
 8007eb4:	0111      	lsls	r1, r2, #4
 8007eb6:	69aa      	ldr	r2, [r5, #24]
 8007eb8:	0052      	lsls	r2, r2, #1
 8007eba:	1889      	adds	r1, r1, r2
 8007ebc:	18c9      	adds	r1, r1, r3
 8007ebe:	2921      	cmp	r1, #33	; 0x21
 8007ec0:	dc0f      	bgt.n	8007ee2 <iso_year_adjust+0x62>
 8007ec2:	2920      	cmp	r1, #32
 8007ec4:	da27      	bge.n	8007f16 <iso_year_adjust+0x96>
 8007ec6:	290d      	cmp	r1, #13
 8007ec8:	dc05      	bgt.n	8007ed6 <iso_year_adjust+0x56>
 8007eca:	290a      	cmp	r1, #10
 8007ecc:	da23      	bge.n	8007f16 <iso_year_adjust+0x96>
 8007ece:	2901      	cmp	r1, #1
 8007ed0:	d921      	bls.n	8007f16 <iso_year_adjust+0x96>
 8007ed2:	2000      	movs	r0, #0
 8007ed4:	e014      	b.n	8007f00 <iso_year_adjust+0x80>
 8007ed6:	2910      	cmp	r1, #16
 8007ed8:	dbfb      	blt.n	8007ed2 <iso_year_adjust+0x52>
 8007eda:	2911      	cmp	r1, #17
 8007edc:	dd1b      	ble.n	8007f16 <iso_year_adjust+0x96>
 8007ede:	391c      	subs	r1, #28
 8007ee0:	e7f5      	b.n	8007ece <iso_year_adjust+0x4e>
 8007ee2:	4b0e      	ldr	r3, [pc, #56]	; (8007f1c <iso_year_adjust+0x9c>)
 8007ee4:	4299      	cmp	r1, r3
 8007ee6:	dc0c      	bgt.n	8007f02 <iso_year_adjust+0x82>
 8007ee8:	4b0d      	ldr	r3, [pc, #52]	; (8007f20 <iso_year_adjust+0xa0>)
 8007eea:	4299      	cmp	r1, r3
 8007eec:	da07      	bge.n	8007efe <iso_year_adjust+0x7e>
 8007eee:	4b0d      	ldr	r3, [pc, #52]	; (8007f24 <iso_year_adjust+0xa4>)
 8007ef0:	4299      	cmp	r1, r3
 8007ef2:	d004      	beq.n	8007efe <iso_year_adjust+0x7e>
 8007ef4:	dbed      	blt.n	8007ed2 <iso_year_adjust+0x52>
 8007ef6:	4b0c      	ldr	r3, [pc, #48]	; (8007f28 <iso_year_adjust+0xa8>)
 8007ef8:	18c9      	adds	r1, r1, r3
 8007efa:	2902      	cmp	r1, #2
 8007efc:	d8e9      	bhi.n	8007ed2 <iso_year_adjust+0x52>
 8007efe:	2001      	movs	r0, #1
 8007f00:	bd70      	pop	{r4, r5, r6, pc}
 8007f02:	4b0a      	ldr	r3, [pc, #40]	; (8007f2c <iso_year_adjust+0xac>)
 8007f04:	4299      	cmp	r1, r3
 8007f06:	d0fa      	beq.n	8007efe <iso_year_adjust+0x7e>
 8007f08:	4b09      	ldr	r3, [pc, #36]	; (8007f30 <iso_year_adjust+0xb0>)
 8007f0a:	4299      	cmp	r1, r3
 8007f0c:	d0f7      	beq.n	8007efe <iso_year_adjust+0x7e>
 8007f0e:	4b09      	ldr	r3, [pc, #36]	; (8007f34 <iso_year_adjust+0xb4>)
 8007f10:	4299      	cmp	r1, r3
 8007f12:	d1de      	bne.n	8007ed2 <iso_year_adjust+0x52>
 8007f14:	e7f3      	b.n	8007efe <iso_year_adjust+0x7e>
 8007f16:	2001      	movs	r0, #1
 8007f18:	4240      	negs	r0, r0
 8007f1a:	e7f1      	b.n	8007f00 <iso_year_adjust+0x80>
 8007f1c:	000016c6 	.word	0x000016c6
 8007f20:	000016c2 	.word	0x000016c2
 8007f24:	000016a2 	.word	0x000016a2
 8007f28:	ffffe94e 	.word	0xffffe94e
 8007f2c:	000016d5 	.word	0x000016d5
 8007f30:	000016d7 	.word	0x000016d7
 8007f34:	000016d3 	.word	0x000016d3

08007f38 <__strftime>:
 8007f38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007f3a:	001e      	movs	r6, r3
 8007f3c:	2300      	movs	r3, #0
 8007f3e:	000d      	movs	r5, r1
 8007f40:	001f      	movs	r7, r3
 8007f42:	b0ab      	sub	sp, #172	; 0xac
 8007f44:	9003      	str	r0, [sp, #12]
 8007f46:	9308      	str	r3, [sp, #32]
 8007f48:	7813      	ldrb	r3, [r2, #0]
 8007f4a:	2b00      	cmp	r3, #0
 8007f4c:	d101      	bne.n	8007f52 <__strftime+0x1a>
 8007f4e:	f000 fcb6 	bl	80088be <__strftime+0x986>
 8007f52:	2b25      	cmp	r3, #37	; 0x25
 8007f54:	d17f      	bne.n	8008056 <__strftime+0x11e>
 8007f56:	7853      	ldrb	r3, [r2, #1]
 8007f58:	9304      	str	r3, [sp, #16]
 8007f5a:	2b30      	cmp	r3, #48	; 0x30
 8007f5c:	d100      	bne.n	8007f60 <__strftime+0x28>
 8007f5e:	e085      	b.n	800806c <__strftime+0x134>
 8007f60:	2b2b      	cmp	r3, #43	; 0x2b
 8007f62:	d100      	bne.n	8007f66 <__strftime+0x2e>
 8007f64:	e082      	b.n	800806c <__strftime+0x134>
 8007f66:	1c53      	adds	r3, r2, #1
 8007f68:	9307      	str	r3, [sp, #28]
 8007f6a:	2300      	movs	r3, #0
 8007f6c:	9304      	str	r3, [sp, #16]
 8007f6e:	2200      	movs	r2, #0
 8007f70:	9b07      	ldr	r3, [sp, #28]
 8007f72:	9206      	str	r2, [sp, #24]
 8007f74:	781b      	ldrb	r3, [r3, #0]
 8007f76:	3b31      	subs	r3, #49	; 0x31
 8007f78:	2b08      	cmp	r3, #8
 8007f7a:	d807      	bhi.n	8007f8c <__strftime+0x54>
 8007f7c:	320a      	adds	r2, #10
 8007f7e:	a922      	add	r1, sp, #136	; 0x88
 8007f80:	9807      	ldr	r0, [sp, #28]
 8007f82:	f000 fe09 	bl	8008b98 <strtoul>
 8007f86:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007f88:	9006      	str	r0, [sp, #24]
 8007f8a:	9307      	str	r3, [sp, #28]
 8007f8c:	9b07      	ldr	r3, [sp, #28]
 8007f8e:	781b      	ldrb	r3, [r3, #0]
 8007f90:	2b45      	cmp	r3, #69	; 0x45
 8007f92:	d16e      	bne.n	8008072 <__strftime+0x13a>
 8007f94:	9b07      	ldr	r3, [sp, #28]
 8007f96:	3301      	adds	r3, #1
 8007f98:	9307      	str	r3, [sp, #28]
 8007f9a:	9b07      	ldr	r3, [sp, #28]
 8007f9c:	781c      	ldrb	r4, [r3, #0]
 8007f9e:	0020      	movs	r0, r4
 8007fa0:	3825      	subs	r0, #37	; 0x25
 8007fa2:	2855      	cmp	r0, #85	; 0x55
 8007fa4:	d85a      	bhi.n	800805c <__strftime+0x124>
 8007fa6:	f7f8 f8cb 	bl	8000140 <__gnu_thumb1_case_uhi>
 8007faa:	0481      	.short	0x0481
 8007fac:	00590059 	.word	0x00590059
 8007fb0:	00590059 	.word	0x00590059
 8007fb4:	00590059 	.word	0x00590059
 8007fb8:	00590059 	.word	0x00590059
 8007fbc:	00590059 	.word	0x00590059
 8007fc0:	00590059 	.word	0x00590059
 8007fc4:	00590059 	.word	0x00590059
 8007fc8:	00590059 	.word	0x00590059
 8007fcc:	00590059 	.word	0x00590059
 8007fd0:	00590059 	.word	0x00590059
 8007fd4:	00590059 	.word	0x00590059
 8007fd8:	00590059 	.word	0x00590059
 8007fdc:	00590059 	.word	0x00590059
 8007fe0:	00880059 	.word	0x00880059
 8007fe4:	00e300b0 	.word	0x00e300b0
 8007fe8:	00590132 	.word	0x00590132
 8007fec:	01a8014c 	.word	0x01a8014c
 8007ff0:	0253024a 	.word	0x0253024a
 8007ff4:	00590059 	.word	0x00590059
 8007ff8:	02730059 	.word	0x02730059
 8007ffc:	00590059 	.word	0x00590059
 8008000:	00590281 	.word	0x00590281
 8008004:	035e02b5 	.word	0x035e02b5
 8008008:	03820369 	.word	0x03820369
 800800c:	03e50390 	.word	0x03e50390
 8008010:	03fd00e0 	.word	0x03fd00e0
 8008014:	00590456 	.word	0x00590456
 8008018:	00590059 	.word	0x00590059
 800801c:	00590059 	.word	0x00590059
 8008020:	006a0059 	.word	0x006a0059
 8008024:	00c4009d 	.word	0x00c4009d
 8008028:	01200120 	.word	0x01200120
 800802c:	01790059 	.word	0x01790059
 8008030:	0059009d 	.word	0x0059009d
 8008034:	024a0266 	.word	0x024a0266
 8008038:	026d0253 	.word	0x026d0253
 800803c:	00590278 	.word	0x00590278
 8008040:	00590281 	.word	0x00590281
 8008044:	02bf00da 	.word	0x02bf00da
 8008048:	03730363 	.word	0x03730363
 800804c:	03de0059 	.word	0x03de0059
 8008050:	03ed00dd 	.word	0x03ed00dd
 8008054:	0419      	.short	0x0419
 8008056:	1e69      	subs	r1, r5, #1
 8008058:	42b9      	cmp	r1, r7
 800805a:	d802      	bhi.n	8008062 <__strftime+0x12a>
 800805c:	2700      	movs	r7, #0
 800805e:	f000 fc33 	bl	80088c8 <__strftime+0x990>
 8008062:	9903      	ldr	r1, [sp, #12]
 8008064:	3201      	adds	r2, #1
 8008066:	55cb      	strb	r3, [r1, r7]
 8008068:	3701      	adds	r7, #1
 800806a:	e76d      	b.n	8007f48 <__strftime+0x10>
 800806c:	1c93      	adds	r3, r2, #2
 800806e:	9307      	str	r3, [sp, #28]
 8008070:	e77d      	b.n	8007f6e <__strftime+0x36>
 8008072:	3b4f      	subs	r3, #79	; 0x4f
 8008074:	425a      	negs	r2, r3
 8008076:	4153      	adcs	r3, r2
 8008078:	9a07      	ldr	r2, [sp, #28]
 800807a:	18d3      	adds	r3, r2, r3
 800807c:	e78c      	b.n	8007f98 <__strftime+0x60>
 800807e:	69b3      	ldr	r3, [r6, #24]
 8008080:	4aca      	ldr	r2, [pc, #808]	; (80083ac <__strftime+0x474>)
 8008082:	3318      	adds	r3, #24
 8008084:	009b      	lsls	r3, r3, #2
 8008086:	589c      	ldr	r4, [r3, r2]
 8008088:	0020      	movs	r0, r4
 800808a:	f7f8 f83d 	bl	8000108 <strlen>
 800808e:	1be4      	subs	r4, r4, r7
 8008090:	1838      	adds	r0, r7, r0
 8008092:	1e6a      	subs	r2, r5, #1
 8008094:	42b8      	cmp	r0, r7
 8008096:	d109      	bne.n	80080ac <__strftime+0x174>
 8008098:	0007      	movs	r7, r0
 800809a:	9b07      	ldr	r3, [sp, #28]
 800809c:	781b      	ldrb	r3, [r3, #0]
 800809e:	2b00      	cmp	r3, #0
 80080a0:	d101      	bne.n	80080a6 <__strftime+0x16e>
 80080a2:	f000 fc0c 	bl	80088be <__strftime+0x986>
 80080a6:	9a07      	ldr	r2, [sp, #28]
 80080a8:	3201      	adds	r2, #1
 80080aa:	e74d      	b.n	8007f48 <__strftime+0x10>
 80080ac:	42ba      	cmp	r2, r7
 80080ae:	d9d5      	bls.n	800805c <__strftime+0x124>
 80080b0:	5de1      	ldrb	r1, [r4, r7]
 80080b2:	9b03      	ldr	r3, [sp, #12]
 80080b4:	55d9      	strb	r1, [r3, r7]
 80080b6:	3701      	adds	r7, #1
 80080b8:	e7ec      	b.n	8008094 <__strftime+0x15c>
 80080ba:	69b3      	ldr	r3, [r6, #24]
 80080bc:	4abb      	ldr	r2, [pc, #748]	; (80083ac <__strftime+0x474>)
 80080be:	331e      	adds	r3, #30
 80080c0:	009b      	lsls	r3, r3, #2
 80080c2:	18d3      	adds	r3, r2, r3
 80080c4:	685c      	ldr	r4, [r3, #4]
 80080c6:	0020      	movs	r0, r4
 80080c8:	f7f8 f81e 	bl	8000108 <strlen>
 80080cc:	1be4      	subs	r4, r4, r7
 80080ce:	1838      	adds	r0, r7, r0
 80080d0:	1e6a      	subs	r2, r5, #1
 80080d2:	42b8      	cmp	r0, r7
 80080d4:	d0e0      	beq.n	8008098 <__strftime+0x160>
 80080d6:	42ba      	cmp	r2, r7
 80080d8:	d9c0      	bls.n	800805c <__strftime+0x124>
 80080da:	5de1      	ldrb	r1, [r4, r7]
 80080dc:	9b03      	ldr	r3, [sp, #12]
 80080de:	55d9      	strb	r1, [r3, r7]
 80080e0:	3701      	adds	r7, #1
 80080e2:	e7f6      	b.n	80080d2 <__strftime+0x19a>
 80080e4:	6933      	ldr	r3, [r6, #16]
 80080e6:	4ab1      	ldr	r2, [pc, #708]	; (80083ac <__strftime+0x474>)
 80080e8:	009b      	lsls	r3, r3, #2
 80080ea:	589c      	ldr	r4, [r3, r2]
 80080ec:	0020      	movs	r0, r4
 80080ee:	f7f8 f80b 	bl	8000108 <strlen>
 80080f2:	1be4      	subs	r4, r4, r7
 80080f4:	1838      	adds	r0, r7, r0
 80080f6:	1e6a      	subs	r2, r5, #1
 80080f8:	42b8      	cmp	r0, r7
 80080fa:	d0cd      	beq.n	8008098 <__strftime+0x160>
 80080fc:	42ba      	cmp	r2, r7
 80080fe:	d9ad      	bls.n	800805c <__strftime+0x124>
 8008100:	5de1      	ldrb	r1, [r4, r7]
 8008102:	9b03      	ldr	r3, [sp, #12]
 8008104:	55d9      	strb	r1, [r3, r7]
 8008106:	3701      	adds	r7, #1
 8008108:	e7f6      	b.n	80080f8 <__strftime+0x1c0>
 800810a:	6933      	ldr	r3, [r6, #16]
 800810c:	4aa7      	ldr	r2, [pc, #668]	; (80083ac <__strftime+0x474>)
 800810e:	330c      	adds	r3, #12
 8008110:	009b      	lsls	r3, r3, #2
 8008112:	589c      	ldr	r4, [r3, r2]
 8008114:	0020      	movs	r0, r4
 8008116:	f7f7 fff7 	bl	8000108 <strlen>
 800811a:	1be4      	subs	r4, r4, r7
 800811c:	1838      	adds	r0, r7, r0
 800811e:	1e6a      	subs	r2, r5, #1
 8008120:	42b8      	cmp	r0, r7
 8008122:	d0b9      	beq.n	8008098 <__strftime+0x160>
 8008124:	42ba      	cmp	r2, r7
 8008126:	d999      	bls.n	800805c <__strftime+0x124>
 8008128:	5de1      	ldrb	r1, [r4, r7]
 800812a:	9b03      	ldr	r3, [sp, #12]
 800812c:	55d9      	strb	r1, [r3, r7]
 800812e:	3701      	adds	r7, #1
 8008130:	e7f6      	b.n	8008120 <__strftime+0x1e8>
 8008132:	4b9e      	ldr	r3, [pc, #632]	; (80083ac <__strftime+0x474>)
 8008134:	33a0      	adds	r3, #160	; 0xa0
 8008136:	681c      	ldr	r4, [r3, #0]
 8008138:	0020      	movs	r0, r4
 800813a:	f7f7 ffe5 	bl	8000108 <strlen>
 800813e:	7823      	ldrb	r3, [r4, #0]
 8008140:	2b00      	cmp	r3, #0
 8008142:	d0aa      	beq.n	800809a <__strftime+0x162>
 8008144:	9b03      	ldr	r3, [sp, #12]
 8008146:	0022      	movs	r2, r4
 8008148:	19d8      	adds	r0, r3, r7
 800814a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 800814c:	1be9      	subs	r1, r5, r7
 800814e:	9300      	str	r3, [sp, #0]
 8008150:	0033      	movs	r3, r6
 8008152:	f7ff fef1 	bl	8007f38 <__strftime>
 8008156:	2800      	cmp	r0, #0
 8008158:	dd80      	ble.n	800805c <__strftime+0x124>
 800815a:	183f      	adds	r7, r7, r0
 800815c:	e79d      	b.n	800809a <__strftime+0x162>
 800815e:	4b93      	ldr	r3, [pc, #588]	; (80083ac <__strftime+0x474>)
 8008160:	33e4      	adds	r3, #228	; 0xe4
 8008162:	e7e8      	b.n	8008136 <__strftime+0x1fe>
 8008164:	4b91      	ldr	r3, [pc, #580]	; (80083ac <__strftime+0x474>)
 8008166:	339c      	adds	r3, #156	; 0x9c
 8008168:	e7e5      	b.n	8008136 <__strftime+0x1fe>
 800816a:	4b90      	ldr	r3, [pc, #576]	; (80083ac <__strftime+0x474>)
 800816c:	3398      	adds	r3, #152	; 0x98
 800816e:	e7e2      	b.n	8008136 <__strftime+0x1fe>
 8008170:	6974      	ldr	r4, [r6, #20]
 8008172:	4a8f      	ldr	r2, [pc, #572]	; (80083b0 <__strftime+0x478>)
 8008174:	2301      	movs	r3, #1
 8008176:	4294      	cmp	r4, r2
 8008178:	db00      	blt.n	800817c <__strftime+0x244>
 800817a:	2300      	movs	r3, #0
 800817c:	b2db      	uxtb	r3, r3
 800817e:	9309      	str	r3, [sp, #36]	; 0x24
 8008180:	2c00      	cmp	r4, #0
 8008182:	db25      	blt.n	80081d0 <__strftime+0x298>
 8008184:	2164      	movs	r1, #100	; 0x64
 8008186:	0020      	movs	r0, r4
 8008188:	f7f8 f86e 	bl	8000268 <__divsi3>
 800818c:	3013      	adds	r0, #19
 800818e:	9b04      	ldr	r3, [sp, #16]
 8008190:	2b00      	cmp	r3, #0
 8008192:	d025      	beq.n	80081e0 <__strftime+0x2a8>
 8008194:	4a87      	ldr	r2, [pc, #540]	; (80083b4 <__strftime+0x47c>)
 8008196:	2863      	cmp	r0, #99	; 0x63
 8008198:	dd25      	ble.n	80081e6 <__strftime+0x2ae>
 800819a:	2b2b      	cmp	r3, #43	; 0x2b
 800819c:	d123      	bne.n	80081e6 <__strftime+0x2ae>
 800819e:	4b86      	ldr	r3, [pc, #536]	; (80083b8 <__strftime+0x480>)
 80081a0:	9906      	ldr	r1, [sp, #24]
 80081a2:	2902      	cmp	r1, #2
 80081a4:	d201      	bcs.n	80081aa <__strftime+0x272>
 80081a6:	2102      	movs	r1, #2
 80081a8:	9106      	str	r1, [sp, #24]
 80081aa:	9903      	ldr	r1, [sp, #12]
 80081ac:	468c      	mov	ip, r1
 80081ae:	1be9      	subs	r1, r5, r7
 80081b0:	9104      	str	r1, [sp, #16]
 80081b2:	497f      	ldr	r1, [pc, #508]	; (80083b0 <__strftime+0x478>)
 80081b4:	44bc      	add	ip, r7
 80081b6:	428c      	cmp	r4, r1
 80081b8:	da00      	bge.n	80081bc <__strftime+0x284>
 80081ba:	4b80      	ldr	r3, [pc, #512]	; (80083bc <__strftime+0x484>)
 80081bc:	9001      	str	r0, [sp, #4]
 80081be:	9909      	ldr	r1, [sp, #36]	; 0x24
 80081c0:	9806      	ldr	r0, [sp, #24]
 80081c2:	1a41      	subs	r1, r0, r1
 80081c4:	4660      	mov	r0, ip
 80081c6:	9100      	str	r1, [sp, #0]
 80081c8:	1be9      	subs	r1, r5, r7
 80081ca:	f002 ff73 	bl	800b0b4 <sniprintf>
 80081ce:	e016      	b.n	80081fe <__strftime+0x2c6>
 80081d0:	4b7b      	ldr	r3, [pc, #492]	; (80083c0 <__strftime+0x488>)
 80081d2:	18e0      	adds	r0, r4, r3
 80081d4:	f001 f812 	bl	80091fc <abs>
 80081d8:	2164      	movs	r1, #100	; 0x64
 80081da:	f7f8 f845 	bl	8000268 <__divsi3>
 80081de:	e7d6      	b.n	800818e <__strftime+0x256>
 80081e0:	4b78      	ldr	r3, [pc, #480]	; (80083c4 <__strftime+0x48c>)
 80081e2:	4a79      	ldr	r2, [pc, #484]	; (80083c8 <__strftime+0x490>)
 80081e4:	e7dc      	b.n	80081a0 <__strftime+0x268>
 80081e6:	4b77      	ldr	r3, [pc, #476]	; (80083c4 <__strftime+0x48c>)
 80081e8:	e7da      	b.n	80081a0 <__strftime+0x268>
 80081ea:	9b03      	ldr	r3, [sp, #12]
 80081ec:	1be9      	subs	r1, r5, r7
 80081ee:	19d8      	adds	r0, r3, r7
 80081f0:	4a76      	ldr	r2, [pc, #472]	; (80083cc <__strftime+0x494>)
 80081f2:	2c64      	cmp	r4, #100	; 0x64
 80081f4:	d100      	bne.n	80081f8 <__strftime+0x2c0>
 80081f6:	4a76      	ldr	r2, [pc, #472]	; (80083d0 <__strftime+0x498>)
 80081f8:	68f3      	ldr	r3, [r6, #12]
 80081fa:	f002 ff5b 	bl	800b0b4 <sniprintf>
 80081fe:	2800      	cmp	r0, #0
 8008200:	da00      	bge.n	8008204 <__strftime+0x2cc>
 8008202:	e72b      	b.n	800805c <__strftime+0x124>
 8008204:	183f      	adds	r7, r7, r0
 8008206:	42bd      	cmp	r5, r7
 8008208:	d900      	bls.n	800820c <__strftime+0x2d4>
 800820a:	e746      	b.n	800809a <__strftime+0x162>
 800820c:	e726      	b.n	800805c <__strftime+0x124>
 800820e:	9b03      	ldr	r3, [sp, #12]
 8008210:	6970      	ldr	r0, [r6, #20]
 8008212:	19dc      	adds	r4, r3, r7
 8008214:	6933      	ldr	r3, [r6, #16]
 8008216:	3301      	adds	r3, #1
 8008218:	9306      	str	r3, [sp, #24]
 800821a:	68f3      	ldr	r3, [r6, #12]
 800821c:	9304      	str	r3, [sp, #16]
 800821e:	2800      	cmp	r0, #0
 8008220:	db0a      	blt.n	8008238 <__strftime+0x300>
 8008222:	2164      	movs	r1, #100	; 0x64
 8008224:	f7f8 f906 	bl	8000434 <__aeabi_idivmod>
 8008228:	9b04      	ldr	r3, [sp, #16]
 800822a:	9101      	str	r1, [sp, #4]
 800822c:	9300      	str	r3, [sp, #0]
 800822e:	4a69      	ldr	r2, [pc, #420]	; (80083d4 <__strftime+0x49c>)
 8008230:	9b06      	ldr	r3, [sp, #24]
 8008232:	1be9      	subs	r1, r5, r7
 8008234:	0020      	movs	r0, r4
 8008236:	e7c8      	b.n	80081ca <__strftime+0x292>
 8008238:	4b61      	ldr	r3, [pc, #388]	; (80083c0 <__strftime+0x488>)
 800823a:	18c0      	adds	r0, r0, r3
 800823c:	f000 ffde 	bl	80091fc <abs>
 8008240:	e7ef      	b.n	8008222 <__strftime+0x2ea>
 8008242:	2225      	movs	r2, #37	; 0x25
 8008244:	ab22      	add	r3, sp, #136	; 0x88
 8008246:	701a      	strb	r2, [r3, #0]
 8008248:	9a04      	ldr	r2, [sp, #16]
 800824a:	2a00      	cmp	r2, #0
 800824c:	d011      	beq.n	8008272 <__strftime+0x33a>
 800824e:	705a      	strb	r2, [r3, #1]
 8008250:	9b06      	ldr	r3, [sp, #24]
 8008252:	2b06      	cmp	r3, #6
 8008254:	d21d      	bcs.n	8008292 <__strftime+0x35a>
 8008256:	200a      	movs	r0, #10
 8008258:	ab20      	add	r3, sp, #128	; 0x80
 800825a:	1818      	adds	r0, r3, r0
 800825c:	495e      	ldr	r1, [pc, #376]	; (80083d8 <__strftime+0x4a0>)
 800825e:	f002 ffd1 	bl	800b204 <strcpy>
 8008262:	9b03      	ldr	r3, [sp, #12]
 8008264:	1be9      	subs	r1, r5, r7
 8008266:	19d8      	adds	r0, r3, r7
 8008268:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 800826a:	aa22      	add	r2, sp, #136	; 0x88
 800826c:	9300      	str	r3, [sp, #0]
 800826e:	0033      	movs	r3, r6
 8008270:	e76f      	b.n	8008152 <__strftime+0x21a>
 8008272:	222b      	movs	r2, #43	; 0x2b
 8008274:	705a      	strb	r2, [r3, #1]
 8008276:	2304      	movs	r3, #4
 8008278:	200a      	movs	r0, #10
 800827a:	ac20      	add	r4, sp, #128	; 0x80
 800827c:	4a57      	ldr	r2, [pc, #348]	; (80083dc <__strftime+0x4a4>)
 800827e:	211e      	movs	r1, #30
 8008280:	1900      	adds	r0, r0, r4
 8008282:	f002 ff17 	bl	800b0b4 <sniprintf>
 8008286:	2800      	cmp	r0, #0
 8008288:	dde5      	ble.n	8008256 <__strftime+0x31e>
 800828a:	230a      	movs	r3, #10
 800828c:	aa20      	add	r2, sp, #128	; 0x80
 800828e:	189b      	adds	r3, r3, r2
 8008290:	e7e3      	b.n	800825a <__strftime+0x322>
 8008292:	9b06      	ldr	r3, [sp, #24]
 8008294:	3b06      	subs	r3, #6
 8008296:	2b00      	cmp	r3, #0
 8008298:	d0dd      	beq.n	8008256 <__strftime+0x31e>
 800829a:	e7ed      	b.n	8008278 <__strftime+0x340>
 800829c:	0030      	movs	r0, r6
 800829e:	f7ff fdef 	bl	8007e80 <iso_year_adjust>
 80082a2:	0004      	movs	r4, r0
 80082a4:	6970      	ldr	r0, [r6, #20]
 80082a6:	2800      	cmp	r0, #0
 80082a8:	db19      	blt.n	80082de <__strftime+0x3a6>
 80082aa:	2164      	movs	r1, #100	; 0x64
 80082ac:	f7f8 f8c2 	bl	8000434 <__aeabi_idivmod>
 80082b0:	2c00      	cmp	r4, #0
 80082b2:	da19      	bge.n	80082e8 <__strftime+0x3b0>
 80082b4:	4b4a      	ldr	r3, [pc, #296]	; (80083e0 <__strftime+0x4a8>)
 80082b6:	6972      	ldr	r2, [r6, #20]
 80082b8:	429a      	cmp	r2, r3
 80082ba:	da00      	bge.n	80082be <__strftime+0x386>
 80082bc:	2401      	movs	r4, #1
 80082be:	1860      	adds	r0, r4, r1
 80082c0:	2164      	movs	r1, #100	; 0x64
 80082c2:	f7f8 f8b7 	bl	8000434 <__aeabi_idivmod>
 80082c6:	3164      	adds	r1, #100	; 0x64
 80082c8:	0008      	movs	r0, r1
 80082ca:	2164      	movs	r1, #100	; 0x64
 80082cc:	f7f8 f8b2 	bl	8000434 <__aeabi_idivmod>
 80082d0:	000b      	movs	r3, r1
 80082d2:	9a03      	ldr	r2, [sp, #12]
 80082d4:	1bec      	subs	r4, r5, r7
 80082d6:	19d0      	adds	r0, r2, r7
 80082d8:	4a3d      	ldr	r2, [pc, #244]	; (80083d0 <__strftime+0x498>)
 80082da:	0021      	movs	r1, r4
 80082dc:	e78d      	b.n	80081fa <__strftime+0x2c2>
 80082de:	4b38      	ldr	r3, [pc, #224]	; (80083c0 <__strftime+0x488>)
 80082e0:	18c0      	adds	r0, r0, r3
 80082e2:	f000 ff8b 	bl	80091fc <abs>
 80082e6:	e7e0      	b.n	80082aa <__strftime+0x372>
 80082e8:	2c00      	cmp	r4, #0
 80082ea:	d0e8      	beq.n	80082be <__strftime+0x386>
 80082ec:	4b30      	ldr	r3, [pc, #192]	; (80083b0 <__strftime+0x478>)
 80082ee:	6972      	ldr	r2, [r6, #20]
 80082f0:	429a      	cmp	r2, r3
 80082f2:	dae4      	bge.n	80082be <__strftime+0x386>
 80082f4:	2401      	movs	r4, #1
 80082f6:	4264      	negs	r4, r4
 80082f8:	e7e1      	b.n	80082be <__strftime+0x386>
 80082fa:	6973      	ldr	r3, [r6, #20]
 80082fc:	930a      	str	r3, [sp, #40]	; 0x28
 80082fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008300:	2301      	movs	r3, #1
 8008302:	0011      	movs	r1, r2
 8008304:	4a2a      	ldr	r2, [pc, #168]	; (80083b0 <__strftime+0x478>)
 8008306:	4291      	cmp	r1, r2
 8008308:	db00      	blt.n	800830c <__strftime+0x3d4>
 800830a:	2300      	movs	r3, #0
 800830c:	0030      	movs	r0, r6
 800830e:	930b      	str	r3, [sp, #44]	; 0x2c
 8008310:	f7ff fdb6 	bl	8007e80 <iso_year_adjust>
 8008314:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008316:	0004      	movs	r4, r0
 8008318:	2b00      	cmp	r3, #0
 800831a:	db3d      	blt.n	8008398 <__strftime+0x460>
 800831c:	2164      	movs	r1, #100	; 0x64
 800831e:	0018      	movs	r0, r3
 8008320:	f7f7 ffa2 	bl	8000268 <__divsi3>
 8008324:	3013      	adds	r0, #19
 8008326:	9009      	str	r0, [sp, #36]	; 0x24
 8008328:	6970      	ldr	r0, [r6, #20]
 800832a:	2800      	cmp	r0, #0
 800832c:	db5c      	blt.n	80083e8 <__strftime+0x4b0>
 800832e:	2164      	movs	r1, #100	; 0x64
 8008330:	f7f8 f880 	bl	8000434 <__aeabi_idivmod>
 8008334:	2c00      	cmp	r4, #0
 8008336:	da5c      	bge.n	80083f2 <__strftime+0x4ba>
 8008338:	4b29      	ldr	r3, [pc, #164]	; (80083e0 <__strftime+0x4a8>)
 800833a:	6972      	ldr	r2, [r6, #20]
 800833c:	429a      	cmp	r2, r3
 800833e:	da01      	bge.n	8008344 <__strftime+0x40c>
 8008340:	2401      	movs	r4, #1
 8008342:	940b      	str	r4, [sp, #44]	; 0x2c
 8008344:	1861      	adds	r1, r4, r1
 8008346:	1c4b      	adds	r3, r1, #1
 8008348:	d161      	bne.n	800840e <__strftime+0x4d6>
 800834a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800834c:	3164      	adds	r1, #100	; 0x64
 800834e:	3b01      	subs	r3, #1
 8008350:	9309      	str	r3, [sp, #36]	; 0x24
 8008352:	2464      	movs	r4, #100	; 0x64
 8008354:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008356:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8008358:	435c      	muls	r4, r3
 800835a:	ab22      	add	r3, sp, #136	; 0x88
 800835c:	1864      	adds	r4, r4, r1
 800835e:	2a00      	cmp	r2, #0
 8008360:	d05c      	beq.n	800841c <__strftime+0x4e4>
 8008362:	222d      	movs	r2, #45	; 0x2d
 8008364:	701a      	strb	r2, [r3, #0]
 8008366:	2309      	movs	r3, #9
 8008368:	aa20      	add	r2, sp, #128	; 0x80
 800836a:	189b      	adds	r3, r3, r2
 800836c:	9a06      	ldr	r2, [sp, #24]
 800836e:	2a00      	cmp	r2, #0
 8008370:	d160      	bne.n	8008434 <__strftime+0x4fc>
 8008372:	2225      	movs	r2, #37	; 0x25
 8008374:	701a      	strb	r2, [r3, #0]
 8008376:	9a04      	ldr	r2, [sp, #16]
 8008378:	1c58      	adds	r0, r3, #1
 800837a:	2a00      	cmp	r2, #0
 800837c:	d002      	beq.n	8008384 <__strftime+0x44c>
 800837e:	2230      	movs	r2, #48	; 0x30
 8008380:	1c98      	adds	r0, r3, #2
 8008382:	705a      	strb	r2, [r3, #1]
 8008384:	4917      	ldr	r1, [pc, #92]	; (80083e4 <__strftime+0x4ac>)
 8008386:	f002 ff3d 	bl	800b204 <strcpy>
 800838a:	9b03      	ldr	r3, [sp, #12]
 800838c:	1be9      	subs	r1, r5, r7
 800838e:	19d8      	adds	r0, r3, r7
 8008390:	9400      	str	r4, [sp, #0]
 8008392:	9b06      	ldr	r3, [sp, #24]
 8008394:	aa22      	add	r2, sp, #136	; 0x88
 8008396:	e0c4      	b.n	8008522 <__strftime+0x5ea>
 8008398:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800839a:	4a09      	ldr	r2, [pc, #36]	; (80083c0 <__strftime+0x488>)
 800839c:	1898      	adds	r0, r3, r2
 800839e:	f000 ff2d 	bl	80091fc <abs>
 80083a2:	2164      	movs	r1, #100	; 0x64
 80083a4:	f7f7 ff60 	bl	8000268 <__divsi3>
 80083a8:	e7bd      	b.n	8008326 <__strftime+0x3ee>
 80083aa:	46c0      	nop			; (mov r8, r8)
 80083ac:	0800d630 	.word	0x0800d630
 80083b0:	fffff894 	.word	0xfffff894
 80083b4:	0800d5dd 	.word	0x0800d5dd
 80083b8:	0800d5e5 	.word	0x0800d5e5
 80083bc:	0800db31 	.word	0x0800db31
 80083c0:	0000076c 	.word	0x0000076c
 80083c4:	0800da11 	.word	0x0800da11
 80083c8:	0800d5d6 	.word	0x0800d5d6
 80083cc:	0800d5e7 	.word	0x0800d5e7
 80083d0:	0800d5f5 	.word	0x0800d5f5
 80083d4:	0800d5eb 	.word	0x0800d5eb
 80083d8:	0800d5fe 	.word	0x0800d5fe
 80083dc:	0800d5fa 	.word	0x0800d5fa
 80083e0:	fffff895 	.word	0xfffff895
 80083e4:	0800d606 	.word	0x0800d606
 80083e8:	4bc4      	ldr	r3, [pc, #784]	; (80086fc <__strftime+0x7c4>)
 80083ea:	18c0      	adds	r0, r0, r3
 80083ec:	f000 ff06 	bl	80091fc <abs>
 80083f0:	e79d      	b.n	800832e <__strftime+0x3f6>
 80083f2:	2c00      	cmp	r4, #0
 80083f4:	d0a6      	beq.n	8008344 <__strftime+0x40c>
 80083f6:	2300      	movs	r3, #0
 80083f8:	930b      	str	r3, [sp, #44]	; 0x2c
 80083fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80083fc:	001a      	movs	r2, r3
 80083fe:	4bc0      	ldr	r3, [pc, #768]	; (8008700 <__strftime+0x7c8>)
 8008400:	429a      	cmp	r2, r3
 8008402:	da9f      	bge.n	8008344 <__strftime+0x40c>
 8008404:	2401      	movs	r4, #1
 8008406:	2301      	movs	r3, #1
 8008408:	4264      	negs	r4, r4
 800840a:	930b      	str	r3, [sp, #44]	; 0x2c
 800840c:	e79a      	b.n	8008344 <__strftime+0x40c>
 800840e:	2964      	cmp	r1, #100	; 0x64
 8008410:	d19f      	bne.n	8008352 <__strftime+0x41a>
 8008412:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008414:	2100      	movs	r1, #0
 8008416:	3301      	adds	r3, #1
 8008418:	9309      	str	r3, [sp, #36]	; 0x24
 800841a:	e79a      	b.n	8008352 <__strftime+0x41a>
 800841c:	9a04      	ldr	r2, [sp, #16]
 800841e:	2a2b      	cmp	r2, #43	; 0x2b
 8008420:	d1a7      	bne.n	8008372 <__strftime+0x43a>
 8008422:	4ab8      	ldr	r2, [pc, #736]	; (8008704 <__strftime+0x7cc>)
 8008424:	4294      	cmp	r4, r2
 8008426:	d9a4      	bls.n	8008372 <__strftime+0x43a>
 8008428:	9a04      	ldr	r2, [sp, #16]
 800842a:	701a      	strb	r2, [r3, #0]
 800842c:	9a06      	ldr	r2, [sp, #24]
 800842e:	2a00      	cmp	r2, #0
 8008430:	d100      	bne.n	8008434 <__strftime+0x4fc>
 8008432:	e24c      	b.n	80088ce <__strftime+0x996>
 8008434:	9b06      	ldr	r3, [sp, #24]
 8008436:	3b01      	subs	r3, #1
 8008438:	9306      	str	r3, [sp, #24]
 800843a:	2309      	movs	r3, #9
 800843c:	e1bf      	b.n	80087be <__strftime+0x886>
 800843e:	9b03      	ldr	r3, [sp, #12]
 8008440:	1be9      	subs	r1, r5, r7
 8008442:	19d8      	adds	r0, r3, r7
 8008444:	4ab0      	ldr	r2, [pc, #704]	; (8008708 <__strftime+0x7d0>)
 8008446:	2c6b      	cmp	r4, #107	; 0x6b
 8008448:	d100      	bne.n	800844c <__strftime+0x514>
 800844a:	4ab0      	ldr	r2, [pc, #704]	; (800870c <__strftime+0x7d4>)
 800844c:	68b3      	ldr	r3, [r6, #8]
 800844e:	e6d4      	b.n	80081fa <__strftime+0x2c2>
 8008450:	68b0      	ldr	r0, [r6, #8]
 8008452:	230c      	movs	r3, #12
 8008454:	2800      	cmp	r0, #0
 8008456:	d005      	beq.n	8008464 <__strftime+0x52c>
 8008458:	4298      	cmp	r0, r3
 800845a:	d003      	beq.n	8008464 <__strftime+0x52c>
 800845c:	0019      	movs	r1, r3
 800845e:	f7f7 ffe9 	bl	8000434 <__aeabi_idivmod>
 8008462:	000b      	movs	r3, r1
 8008464:	9a03      	ldr	r2, [sp, #12]
 8008466:	1be9      	subs	r1, r5, r7
 8008468:	19d0      	adds	r0, r2, r7
 800846a:	4aa8      	ldr	r2, [pc, #672]	; (800870c <__strftime+0x7d4>)
 800846c:	2c49      	cmp	r4, #73	; 0x49
 800846e:	d000      	beq.n	8008472 <__strftime+0x53a>
 8008470:	e6c3      	b.n	80081fa <__strftime+0x2c2>
 8008472:	4aa5      	ldr	r2, [pc, #660]	; (8008708 <__strftime+0x7d0>)
 8008474:	e6c1      	b.n	80081fa <__strftime+0x2c2>
 8008476:	9a03      	ldr	r2, [sp, #12]
 8008478:	69f3      	ldr	r3, [r6, #28]
 800847a:	19d0      	adds	r0, r2, r7
 800847c:	3301      	adds	r3, #1
 800847e:	1be9      	subs	r1, r5, r7
 8008480:	4aa3      	ldr	r2, [pc, #652]	; (8008710 <__strftime+0x7d8>)
 8008482:	e6ba      	b.n	80081fa <__strftime+0x2c2>
 8008484:	6933      	ldr	r3, [r6, #16]
 8008486:	9a03      	ldr	r2, [sp, #12]
 8008488:	3301      	adds	r3, #1
 800848a:	1be9      	subs	r1, r5, r7
 800848c:	19d0      	adds	r0, r2, r7
 800848e:	e7f0      	b.n	8008472 <__strftime+0x53a>
 8008490:	9b03      	ldr	r3, [sp, #12]
 8008492:	1be9      	subs	r1, r5, r7
 8008494:	19d8      	adds	r0, r3, r7
 8008496:	6873      	ldr	r3, [r6, #4]
 8008498:	e7eb      	b.n	8008472 <__strftime+0x53a>
 800849a:	1e6b      	subs	r3, r5, #1
 800849c:	42bb      	cmp	r3, r7
 800849e:	d800      	bhi.n	80084a2 <__strftime+0x56a>
 80084a0:	e5dc      	b.n	800805c <__strftime+0x124>
 80084a2:	230a      	movs	r3, #10
 80084a4:	9a03      	ldr	r2, [sp, #12]
 80084a6:	55d3      	strb	r3, [r2, r7]
 80084a8:	3701      	adds	r7, #1
 80084aa:	e5f6      	b.n	800809a <__strftime+0x162>
 80084ac:	68b2      	ldr	r2, [r6, #8]
 80084ae:	2301      	movs	r3, #1
 80084b0:	2a0b      	cmp	r2, #11
 80084b2:	dc00      	bgt.n	80084b6 <__strftime+0x57e>
 80084b4:	2300      	movs	r3, #0
 80084b6:	4a97      	ldr	r2, [pc, #604]	; (8008714 <__strftime+0x7dc>)
 80084b8:	3328      	adds	r3, #40	; 0x28
 80084ba:	009b      	lsls	r3, r3, #2
 80084bc:	18d3      	adds	r3, r2, r3
 80084be:	685b      	ldr	r3, [r3, #4]
 80084c0:	0018      	movs	r0, r3
 80084c2:	9304      	str	r3, [sp, #16]
 80084c4:	f7f7 fe20 	bl	8000108 <strlen>
 80084c8:	183b      	adds	r3, r7, r0
 80084ca:	9309      	str	r3, [sp, #36]	; 0x24
 80084cc:	9706      	str	r7, [sp, #24]
 80084ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80084d0:	9a06      	ldr	r2, [sp, #24]
 80084d2:	4293      	cmp	r3, r2
 80084d4:	d101      	bne.n	80084da <__strftime+0x5a2>
 80084d6:	001f      	movs	r7, r3
 80084d8:	e5df      	b.n	800809a <__strftime+0x162>
 80084da:	9a06      	ldr	r2, [sp, #24]
 80084dc:	1e6b      	subs	r3, r5, #1
 80084de:	4293      	cmp	r3, r2
 80084e0:	d800      	bhi.n	80084e4 <__strftime+0x5ac>
 80084e2:	e5bb      	b.n	800805c <__strftime+0x124>
 80084e4:	9b04      	ldr	r3, [sp, #16]
 80084e6:	1bdb      	subs	r3, r3, r7
 80084e8:	5c9c      	ldrb	r4, [r3, r2]
 80084ea:	9b07      	ldr	r3, [sp, #28]
 80084ec:	781b      	ldrb	r3, [r3, #0]
 80084ee:	2b50      	cmp	r3, #80	; 0x50
 80084f0:	d109      	bne.n	8008506 <__strftime+0x5ce>
 80084f2:	f001 ffa7 	bl	800a444 <__locale_ctype_ptr>
 80084f6:	2203      	movs	r2, #3
 80084f8:	1900      	adds	r0, r0, r4
 80084fa:	7843      	ldrb	r3, [r0, #1]
 80084fc:	4013      	ands	r3, r2
 80084fe:	2b01      	cmp	r3, #1
 8008500:	d100      	bne.n	8008504 <__strftime+0x5cc>
 8008502:	3420      	adds	r4, #32
 8008504:	b2e4      	uxtb	r4, r4
 8008506:	9a06      	ldr	r2, [sp, #24]
 8008508:	9b03      	ldr	r3, [sp, #12]
 800850a:	549c      	strb	r4, [r3, r2]
 800850c:	0013      	movs	r3, r2
 800850e:	3301      	adds	r3, #1
 8008510:	9306      	str	r3, [sp, #24]
 8008512:	e7dc      	b.n	80084ce <__strftime+0x596>
 8008514:	9b03      	ldr	r3, [sp, #12]
 8008516:	4a80      	ldr	r2, [pc, #512]	; (8008718 <__strftime+0x7e0>)
 8008518:	19d8      	adds	r0, r3, r7
 800851a:	6873      	ldr	r3, [r6, #4]
 800851c:	1be9      	subs	r1, r5, r7
 800851e:	9300      	str	r3, [sp, #0]
 8008520:	68b3      	ldr	r3, [r6, #8]
 8008522:	f002 fdc7 	bl	800b0b4 <sniprintf>
 8008526:	e66a      	b.n	80081fe <__strftime+0x2c6>
 8008528:	2300      	movs	r3, #0
 800852a:	9306      	str	r3, [sp, #24]
 800852c:	6a33      	ldr	r3, [r6, #32]
 800852e:	2b00      	cmp	r3, #0
 8008530:	db16      	blt.n	8008560 <__strftime+0x628>
 8008532:	f000 fc0f 	bl	8008d54 <__tz_lock>
 8008536:	9b08      	ldr	r3, [sp, #32]
 8008538:	2b00      	cmp	r3, #0
 800853a:	d101      	bne.n	8008540 <__strftime+0x608>
 800853c:	f000 fc0c 	bl	8008d58 <_tzset_unlocked>
 8008540:	f001 fea6 	bl	800a290 <__gettzinfo>
 8008544:	6a32      	ldr	r2, [r6, #32]
 8008546:	17d3      	asrs	r3, r2, #31
 8008548:	1a9b      	subs	r3, r3, r2
 800854a:	2228      	movs	r2, #40	; 0x28
 800854c:	0fdb      	lsrs	r3, r3, #31
 800854e:	3301      	adds	r3, #1
 8008550:	4353      	muls	r3, r2
 8008552:	581b      	ldr	r3, [r3, r0]
 8008554:	425b      	negs	r3, r3
 8008556:	9306      	str	r3, [sp, #24]
 8008558:	f000 fbfd 	bl	8008d56 <__tz_unlock>
 800855c:	2301      	movs	r3, #1
 800855e:	9308      	str	r3, [sp, #32]
 8008560:	2045      	movs	r0, #69	; 0x45
 8008562:	4240      	negs	r0, r0
 8008564:	17c1      	asrs	r1, r0, #31
 8008566:	6974      	ldr	r4, [r6, #20]
 8008568:	17e3      	asrs	r3, r4, #31
 800856a:	940e      	str	r4, [sp, #56]	; 0x38
 800856c:	930f      	str	r3, [sp, #60]	; 0x3c
 800856e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008570:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008572:	1812      	adds	r2, r2, r0
 8008574:	414b      	adcs	r3, r1
 8008576:	2103      	movs	r1, #3
 8008578:	17d8      	asrs	r0, r3, #31
 800857a:	4008      	ands	r0, r1
 800857c:	2100      	movs	r1, #0
 800857e:	9010      	str	r0, [sp, #64]	; 0x40
 8008580:	9111      	str	r1, [sp, #68]	; 0x44
 8008582:	9810      	ldr	r0, [sp, #64]	; 0x40
 8008584:	9911      	ldr	r1, [sp, #68]	; 0x44
 8008586:	1812      	adds	r2, r2, r0
 8008588:	414b      	adcs	r3, r1
 800858a:	0799      	lsls	r1, r3, #30
 800858c:	0890      	lsrs	r0, r2, #2
 800858e:	4308      	orrs	r0, r1
 8008590:	900c      	str	r0, [sp, #48]	; 0x30
 8008592:	109b      	asrs	r3, r3, #2
 8008594:	1e60      	subs	r0, r4, #1
 8008596:	2164      	movs	r1, #100	; 0x64
 8008598:	930d      	str	r3, [sp, #52]	; 0x34
 800859a:	f7f7 fe65 	bl	8000268 <__divsi3>
 800859e:	17c3      	asrs	r3, r0, #31
 80085a0:	9313      	str	r3, [sp, #76]	; 0x4c
 80085a2:	9012      	str	r0, [sp, #72]	; 0x48
 80085a4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80085a6:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80085a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80085aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80085ac:	1a12      	subs	r2, r2, r0
 80085ae:	418b      	sbcs	r3, r1
 80085b0:	0020      	movs	r0, r4
 80085b2:	21c8      	movs	r1, #200	; 0xc8
 80085b4:	302c      	adds	r0, #44	; 0x2c
 80085b6:	0049      	lsls	r1, r1, #1
 80085b8:	30ff      	adds	r0, #255	; 0xff
 80085ba:	9204      	str	r2, [sp, #16]
 80085bc:	9305      	str	r3, [sp, #20]
 80085be:	f7f7 fe53 	bl	8000268 <__divsi3>
 80085c2:	17c3      	asrs	r3, r0, #31
 80085c4:	9014      	str	r0, [sp, #80]	; 0x50
 80085c6:	9315      	str	r3, [sp, #84]	; 0x54
 80085c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80085ca:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80085cc:	9804      	ldr	r0, [sp, #16]
 80085ce:	9905      	ldr	r1, [sp, #20]
 80085d0:	1880      	adds	r0, r0, r2
 80085d2:	4159      	adcs	r1, r3
 80085d4:	0022      	movs	r2, r4
 80085d6:	236e      	movs	r3, #110	; 0x6e
 80085d8:	3a46      	subs	r2, #70	; 0x46
 80085da:	33ff      	adds	r3, #255	; 0xff
 80085dc:	4353      	muls	r3, r2
 80085de:	9316      	str	r3, [sp, #88]	; 0x58
 80085e0:	17db      	asrs	r3, r3, #31
 80085e2:	9317      	str	r3, [sp, #92]	; 0x5c
 80085e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80085e6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80085e8:	18c0      	adds	r0, r0, r3
 80085ea:	4161      	adcs	r1, r4
 80085ec:	69f3      	ldr	r3, [r6, #28]
 80085ee:	2218      	movs	r2, #24
 80085f0:	9318      	str	r3, [sp, #96]	; 0x60
 80085f2:	17db      	asrs	r3, r3, #31
 80085f4:	9319      	str	r3, [sp, #100]	; 0x64
 80085f6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80085f8:	9c19      	ldr	r4, [sp, #100]	; 0x64
 80085fa:	18c0      	adds	r0, r0, r3
 80085fc:	4161      	adcs	r1, r4
 80085fe:	2300      	movs	r3, #0
 8008600:	f7f7 ffba 	bl	8000578 <__aeabi_lmul>
 8008604:	68b3      	ldr	r3, [r6, #8]
 8008606:	223c      	movs	r2, #60	; 0x3c
 8008608:	931a      	str	r3, [sp, #104]	; 0x68
 800860a:	17db      	asrs	r3, r3, #31
 800860c:	931b      	str	r3, [sp, #108]	; 0x6c
 800860e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8008610:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 8008612:	18c0      	adds	r0, r0, r3
 8008614:	4161      	adcs	r1, r4
 8008616:	2300      	movs	r3, #0
 8008618:	f7f7 ffae 	bl	8000578 <__aeabi_lmul>
 800861c:	6873      	ldr	r3, [r6, #4]
 800861e:	223c      	movs	r2, #60	; 0x3c
 8008620:	931c      	str	r3, [sp, #112]	; 0x70
 8008622:	17db      	asrs	r3, r3, #31
 8008624:	931d      	str	r3, [sp, #116]	; 0x74
 8008626:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8008628:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800862a:	18c0      	adds	r0, r0, r3
 800862c:	4161      	adcs	r1, r4
 800862e:	2300      	movs	r3, #0
 8008630:	f7f7 ffa2 	bl	8000578 <__aeabi_lmul>
 8008634:	6833      	ldr	r3, [r6, #0]
 8008636:	4a39      	ldr	r2, [pc, #228]	; (800871c <__strftime+0x7e4>)
 8008638:	931e      	str	r3, [sp, #120]	; 0x78
 800863a:	17db      	asrs	r3, r3, #31
 800863c:	931f      	str	r3, [sp, #124]	; 0x7c
 800863e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8008640:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8008642:	18c0      	adds	r0, r0, r3
 8008644:	4161      	adcs	r1, r4
 8008646:	9b06      	ldr	r3, [sp, #24]
 8008648:	9320      	str	r3, [sp, #128]	; 0x80
 800864a:	17db      	asrs	r3, r3, #31
 800864c:	9321      	str	r3, [sp, #132]	; 0x84
 800864e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008650:	9c21      	ldr	r4, [sp, #132]	; 0x84
 8008652:	1ac0      	subs	r0, r0, r3
 8008654:	41a1      	sbcs	r1, r4
 8008656:	9b03      	ldr	r3, [sp, #12]
 8008658:	9000      	str	r0, [sp, #0]
 800865a:	9101      	str	r1, [sp, #4]
 800865c:	1be9      	subs	r1, r5, r7
 800865e:	19d8      	adds	r0, r3, r7
 8008660:	f002 fd28 	bl	800b0b4 <sniprintf>
 8008664:	e5cb      	b.n	80081fe <__strftime+0x2c6>
 8008666:	9b03      	ldr	r3, [sp, #12]
 8008668:	1be9      	subs	r1, r5, r7
 800866a:	19d8      	adds	r0, r3, r7
 800866c:	6833      	ldr	r3, [r6, #0]
 800866e:	e700      	b.n	8008472 <__strftime+0x53a>
 8008670:	1e6b      	subs	r3, r5, #1
 8008672:	42bb      	cmp	r3, r7
 8008674:	d800      	bhi.n	8008678 <__strftime+0x740>
 8008676:	e4f1      	b.n	800805c <__strftime+0x124>
 8008678:	2309      	movs	r3, #9
 800867a:	e713      	b.n	80084a4 <__strftime+0x56c>
 800867c:	9b03      	ldr	r3, [sp, #12]
 800867e:	1be9      	subs	r1, r5, r7
 8008680:	19d8      	adds	r0, r3, r7
 8008682:	6833      	ldr	r3, [r6, #0]
 8008684:	4a26      	ldr	r2, [pc, #152]	; (8008720 <__strftime+0x7e8>)
 8008686:	9301      	str	r3, [sp, #4]
 8008688:	6873      	ldr	r3, [r6, #4]
 800868a:	9300      	str	r3, [sp, #0]
 800868c:	68b3      	ldr	r3, [r6, #8]
 800868e:	e59c      	b.n	80081ca <__strftime+0x292>
 8008690:	1e6b      	subs	r3, r5, #1
 8008692:	42bb      	cmp	r3, r7
 8008694:	d800      	bhi.n	8008698 <__strftime+0x760>
 8008696:	e4e1      	b.n	800805c <__strftime+0x124>
 8008698:	9a03      	ldr	r2, [sp, #12]
 800869a:	69b3      	ldr	r3, [r6, #24]
 800869c:	19d2      	adds	r2, r2, r7
 800869e:	3701      	adds	r7, #1
 80086a0:	2b00      	cmp	r3, #0
 80086a2:	d102      	bne.n	80086aa <__strftime+0x772>
 80086a4:	3337      	adds	r3, #55	; 0x37
 80086a6:	7013      	strb	r3, [r2, #0]
 80086a8:	e4f7      	b.n	800809a <__strftime+0x162>
 80086aa:	3330      	adds	r3, #48	; 0x30
 80086ac:	e7fb      	b.n	80086a6 <__strftime+0x76e>
 80086ae:	69f3      	ldr	r3, [r6, #28]
 80086b0:	1dd8      	adds	r0, r3, #7
 80086b2:	69b3      	ldr	r3, [r6, #24]
 80086b4:	1ac0      	subs	r0, r0, r3
 80086b6:	2107      	movs	r1, #7
 80086b8:	f7f7 fdd6 	bl	8000268 <__divsi3>
 80086bc:	9a03      	ldr	r2, [sp, #12]
 80086be:	0003      	movs	r3, r0
 80086c0:	19d4      	adds	r4, r2, r7
 80086c2:	1be9      	subs	r1, r5, r7
 80086c4:	4a10      	ldr	r2, [pc, #64]	; (8008708 <__strftime+0x7d0>)
 80086c6:	0020      	movs	r0, r4
 80086c8:	e597      	b.n	80081fa <__strftime+0x2c2>
 80086ca:	0030      	movs	r0, r6
 80086cc:	f7ff fbd8 	bl	8007e80 <iso_year_adjust>
 80086d0:	69b3      	ldr	r3, [r6, #24]
 80086d2:	2106      	movs	r1, #6
 80086d4:	2b00      	cmp	r3, #0
 80086d6:	d000      	beq.n	80086da <__strftime+0x7a2>
 80086d8:	1e59      	subs	r1, r3, #1
 80086da:	2401      	movs	r4, #1
 80086dc:	2800      	cmp	r0, #0
 80086de:	dc07      	bgt.n	80086f0 <__strftime+0x7b8>
 80086e0:	69f3      	ldr	r3, [r6, #28]
 80086e2:	d11f      	bne.n	8008724 <__strftime+0x7ec>
 80086e4:	330a      	adds	r3, #10
 80086e6:	1a58      	subs	r0, r3, r1
 80086e8:	2107      	movs	r1, #7
 80086ea:	f7f7 fdbd 	bl	8000268 <__divsi3>
 80086ee:	0004      	movs	r4, r0
 80086f0:	9b03      	ldr	r3, [sp, #12]
 80086f2:	1be9      	subs	r1, r5, r7
 80086f4:	19d8      	adds	r0, r3, r7
 80086f6:	0023      	movs	r3, r4
 80086f8:	e6bb      	b.n	8008472 <__strftime+0x53a>
 80086fa:	46c0      	nop			; (mov r8, r8)
 80086fc:	0000076c 	.word	0x0000076c
 8008700:	fffff894 	.word	0xfffff894
 8008704:	0000270f 	.word	0x0000270f
 8008708:	0800d5f5 	.word	0x0800d5f5
 800870c:	0800d5e7 	.word	0x0800d5e7
 8008710:	0800d60a 	.word	0x0800d60a
 8008714:	0800d630 	.word	0x0800d630
 8008718:	0800d619 	.word	0x0800d619
 800871c:	0800d60f 	.word	0x0800d60f
 8008720:	0800d614 	.word	0x0800d614
 8008724:	1acb      	subs	r3, r1, r3
 8008726:	6971      	ldr	r1, [r6, #20]
 8008728:	9304      	str	r3, [sp, #16]
 800872a:	43cb      	mvns	r3, r1
 800872c:	4a6e      	ldr	r2, [pc, #440]	; (80088e8 <__strftime+0x9b0>)
 800872e:	17db      	asrs	r3, r3, #31
 8008730:	4013      	ands	r3, r2
 8008732:	4a6e      	ldr	r2, [pc, #440]	; (80088ec <__strftime+0x9b4>)
 8008734:	189b      	adds	r3, r3, r2
 8008736:	18cb      	adds	r3, r1, r3
 8008738:	9306      	str	r3, [sp, #24]
 800873a:	079b      	lsls	r3, r3, #30
 800873c:	d105      	bne.n	800874a <__strftime+0x812>
 800873e:	2164      	movs	r1, #100	; 0x64
 8008740:	9806      	ldr	r0, [sp, #24]
 8008742:	f7f7 fe77 	bl	8000434 <__aeabi_idivmod>
 8008746:	2900      	cmp	r1, #0
 8008748:	d106      	bne.n	8008758 <__strftime+0x820>
 800874a:	21c8      	movs	r1, #200	; 0xc8
 800874c:	9806      	ldr	r0, [sp, #24]
 800874e:	0049      	lsls	r1, r1, #1
 8008750:	f7f7 fe70 	bl	8000434 <__aeabi_idivmod>
 8008754:	424c      	negs	r4, r1
 8008756:	414c      	adcs	r4, r1
 8008758:	9b04      	ldr	r3, [sp, #16]
 800875a:	1b1b      	subs	r3, r3, r4
 800875c:	2434      	movs	r4, #52	; 0x34
 800875e:	2b04      	cmp	r3, #4
 8008760:	dcc6      	bgt.n	80086f0 <__strftime+0x7b8>
 8008762:	3401      	adds	r4, #1
 8008764:	e7c4      	b.n	80086f0 <__strftime+0x7b8>
 8008766:	1e6b      	subs	r3, r5, #1
 8008768:	42bb      	cmp	r3, r7
 800876a:	d800      	bhi.n	800876e <__strftime+0x836>
 800876c:	e476      	b.n	800805c <__strftime+0x124>
 800876e:	69b3      	ldr	r3, [r6, #24]
 8008770:	3330      	adds	r3, #48	; 0x30
 8008772:	e697      	b.n	80084a4 <__strftime+0x56c>
 8008774:	69b2      	ldr	r2, [r6, #24]
 8008776:	2306      	movs	r3, #6
 8008778:	2a00      	cmp	r2, #0
 800877a:	d000      	beq.n	800877e <__strftime+0x846>
 800877c:	1e53      	subs	r3, r2, #1
 800877e:	69f2      	ldr	r2, [r6, #28]
 8008780:	1dd0      	adds	r0, r2, #7
 8008782:	e797      	b.n	80086b4 <__strftime+0x77c>
 8008784:	6970      	ldr	r0, [r6, #20]
 8008786:	2800      	cmp	r0, #0
 8008788:	db07      	blt.n	800879a <__strftime+0x862>
 800878a:	2164      	movs	r1, #100	; 0x64
 800878c:	f7f7 fe52 	bl	8000434 <__aeabi_idivmod>
 8008790:	9b03      	ldr	r3, [sp, #12]
 8008792:	1bec      	subs	r4, r5, r7
 8008794:	19d8      	adds	r0, r3, r7
 8008796:	000b      	movs	r3, r1
 8008798:	e59e      	b.n	80082d8 <__strftime+0x3a0>
 800879a:	4b55      	ldr	r3, [pc, #340]	; (80088f0 <__strftime+0x9b8>)
 800879c:	18c0      	adds	r0, r0, r3
 800879e:	f000 fd2d 	bl	80091fc <abs>
 80087a2:	e7f2      	b.n	800878a <__strftime+0x852>
 80087a4:	6974      	ldr	r4, [r6, #20]
 80087a6:	4a53      	ldr	r2, [pc, #332]	; (80088f4 <__strftime+0x9bc>)
 80087a8:	ab22      	add	r3, sp, #136	; 0x88
 80087aa:	4294      	cmp	r4, r2
 80087ac:	da0a      	bge.n	80087c4 <__strftime+0x88c>
 80087ae:	212d      	movs	r1, #45	; 0x2d
 80087b0:	7019      	strb	r1, [r3, #0]
 80087b2:	9b06      	ldr	r3, [sp, #24]
 80087b4:	1b14      	subs	r4, r2, r4
 80087b6:	2b00      	cmp	r3, #0
 80087b8:	d000      	beq.n	80087bc <__strftime+0x884>
 80087ba:	e63b      	b.n	8008434 <__strftime+0x4fc>
 80087bc:	3309      	adds	r3, #9
 80087be:	aa20      	add	r2, sp, #128	; 0x80
 80087c0:	189b      	adds	r3, r3, r2
 80087c2:	e5d6      	b.n	8008372 <__strftime+0x43a>
 80087c4:	4a4a      	ldr	r2, [pc, #296]	; (80088f0 <__strftime+0x9b8>)
 80087c6:	18a4      	adds	r4, r4, r2
 80087c8:	9a04      	ldr	r2, [sp, #16]
 80087ca:	2a2b      	cmp	r2, #43	; 0x2b
 80087cc:	d000      	beq.n	80087d0 <__strftime+0x898>
 80087ce:	e5d0      	b.n	8008372 <__strftime+0x43a>
 80087d0:	4a49      	ldr	r2, [pc, #292]	; (80088f8 <__strftime+0x9c0>)
 80087d2:	4294      	cmp	r4, r2
 80087d4:	d800      	bhi.n	80087d8 <__strftime+0x8a0>
 80087d6:	e080      	b.n	80088da <__strftime+0x9a2>
 80087d8:	9a04      	ldr	r2, [sp, #16]
 80087da:	e5c3      	b.n	8008364 <__strftime+0x42c>
 80087dc:	6a33      	ldr	r3, [r6, #32]
 80087de:	2b00      	cmp	r3, #0
 80087e0:	da00      	bge.n	80087e4 <__strftime+0x8ac>
 80087e2:	e45a      	b.n	800809a <__strftime+0x162>
 80087e4:	f000 fab6 	bl	8008d54 <__tz_lock>
 80087e8:	9b08      	ldr	r3, [sp, #32]
 80087ea:	2b00      	cmp	r3, #0
 80087ec:	d101      	bne.n	80087f2 <__strftime+0x8ba>
 80087ee:	f000 fab3 	bl	8008d58 <_tzset_unlocked>
 80087f2:	f001 fd4d 	bl	800a290 <__gettzinfo>
 80087f6:	6a32      	ldr	r2, [r6, #32]
 80087f8:	17d3      	asrs	r3, r2, #31
 80087fa:	1a9b      	subs	r3, r3, r2
 80087fc:	2228      	movs	r2, #40	; 0x28
 80087fe:	0fdb      	lsrs	r3, r3, #31
 8008800:	3301      	adds	r3, #1
 8008802:	4353      	muls	r3, r2
 8008804:	581c      	ldr	r4, [r3, r0]
 8008806:	f000 faa6 	bl	8008d56 <__tz_unlock>
 800880a:	4264      	negs	r4, r4
 800880c:	213c      	movs	r1, #60	; 0x3c
 800880e:	0020      	movs	r0, r4
 8008810:	f7f7 fd2a 	bl	8000268 <__divsi3>
 8008814:	f001 fe0e 	bl	800a434 <labs>
 8008818:	21e1      	movs	r1, #225	; 0xe1
 800881a:	9006      	str	r0, [sp, #24]
 800881c:	0109      	lsls	r1, r1, #4
 800881e:	0020      	movs	r0, r4
 8008820:	f7f7 fd22 	bl	8000268 <__divsi3>
 8008824:	213c      	movs	r1, #60	; 0x3c
 8008826:	0004      	movs	r4, r0
 8008828:	9806      	ldr	r0, [sp, #24]
 800882a:	f7f7 fe03 	bl	8000434 <__aeabi_idivmod>
 800882e:	9803      	ldr	r0, [sp, #12]
 8008830:	9100      	str	r1, [sp, #0]
 8008832:	0023      	movs	r3, r4
 8008834:	4a31      	ldr	r2, [pc, #196]	; (80088fc <__strftime+0x9c4>)
 8008836:	1be9      	subs	r1, r5, r7
 8008838:	19c0      	adds	r0, r0, r7
 800883a:	f002 fc3b 	bl	800b0b4 <sniprintf>
 800883e:	2800      	cmp	r0, #0
 8008840:	da01      	bge.n	8008846 <__strftime+0x90e>
 8008842:	f7ff fc0b 	bl	800805c <__strftime+0x124>
 8008846:	183f      	adds	r7, r7, r0
 8008848:	42bd      	cmp	r5, r7
 800884a:	d801      	bhi.n	8008850 <__strftime+0x918>
 800884c:	f7ff fc06 	bl	800805c <__strftime+0x124>
 8008850:	2301      	movs	r3, #1
 8008852:	9308      	str	r3, [sp, #32]
 8008854:	e421      	b.n	800809a <__strftime+0x162>
 8008856:	6a33      	ldr	r3, [r6, #32]
 8008858:	2b00      	cmp	r3, #0
 800885a:	da00      	bge.n	800885e <__strftime+0x926>
 800885c:	e41d      	b.n	800809a <__strftime+0x162>
 800885e:	f000 fa79 	bl	8008d54 <__tz_lock>
 8008862:	9b08      	ldr	r3, [sp, #32]
 8008864:	2b00      	cmp	r3, #0
 8008866:	d101      	bne.n	800886c <__strftime+0x934>
 8008868:	f000 fa76 	bl	8008d58 <_tzset_unlocked>
 800886c:	6a32      	ldr	r2, [r6, #32]
 800886e:	17d3      	asrs	r3, r2, #31
 8008870:	1a9b      	subs	r3, r3, r2
 8008872:	0fdb      	lsrs	r3, r3, #31
 8008874:	4a22      	ldr	r2, [pc, #136]	; (8008900 <__strftime+0x9c8>)
 8008876:	009b      	lsls	r3, r3, #2
 8008878:	589b      	ldr	r3, [r3, r2]
 800887a:	0018      	movs	r0, r3
 800887c:	9306      	str	r3, [sp, #24]
 800887e:	f7f7 fc43 	bl	8000108 <strlen>
 8008882:	9b06      	ldr	r3, [sp, #24]
 8008884:	183c      	adds	r4, r7, r0
 8008886:	1e6a      	subs	r2, r5, #1
 8008888:	1bdb      	subs	r3, r3, r7
 800888a:	42bc      	cmp	r4, r7
 800888c:	d103      	bne.n	8008896 <__strftime+0x95e>
 800888e:	f000 fa62 	bl	8008d56 <__tz_unlock>
 8008892:	0027      	movs	r7, r4
 8008894:	e7dc      	b.n	8008850 <__strftime+0x918>
 8008896:	42ba      	cmp	r2, r7
 8008898:	d904      	bls.n	80088a4 <__strftime+0x96c>
 800889a:	5dd9      	ldrb	r1, [r3, r7]
 800889c:	9803      	ldr	r0, [sp, #12]
 800889e:	55c1      	strb	r1, [r0, r7]
 80088a0:	3701      	adds	r7, #1
 80088a2:	e7f2      	b.n	800888a <__strftime+0x952>
 80088a4:	f000 fa57 	bl	8008d56 <__tz_unlock>
 80088a8:	f7ff fbd8 	bl	800805c <__strftime+0x124>
 80088ac:	1e6b      	subs	r3, r5, #1
 80088ae:	42bb      	cmp	r3, r7
 80088b0:	d801      	bhi.n	80088b6 <__strftime+0x97e>
 80088b2:	f7ff fbd3 	bl	800805c <__strftime+0x124>
 80088b6:	2225      	movs	r2, #37	; 0x25
 80088b8:	9b03      	ldr	r3, [sp, #12]
 80088ba:	55da      	strb	r2, [r3, r7]
 80088bc:	e5f4      	b.n	80084a8 <__strftime+0x570>
 80088be:	2d00      	cmp	r5, #0
 80088c0:	d002      	beq.n	80088c8 <__strftime+0x990>
 80088c2:	2300      	movs	r3, #0
 80088c4:	9a03      	ldr	r2, [sp, #12]
 80088c6:	55d3      	strb	r3, [r2, r7]
 80088c8:	0038      	movs	r0, r7
 80088ca:	b02b      	add	sp, #172	; 0xac
 80088cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80088ce:	2225      	movs	r2, #37	; 0x25
 80088d0:	705a      	strb	r2, [r3, #1]
 80088d2:	2309      	movs	r3, #9
 80088d4:	aa20      	add	r2, sp, #128	; 0x80
 80088d6:	189b      	adds	r3, r3, r2
 80088d8:	e551      	b.n	800837e <__strftime+0x446>
 80088da:	9a06      	ldr	r2, [sp, #24]
 80088dc:	2a00      	cmp	r2, #0
 80088de:	d100      	bne.n	80088e2 <__strftime+0x9aa>
 80088e0:	e547      	b.n	8008372 <__strftime+0x43a>
 80088e2:	2225      	movs	r2, #37	; 0x25
 80088e4:	701a      	strb	r2, [r3, #0]
 80088e6:	e54a      	b.n	800837e <__strftime+0x446>
 80088e8:	fffff830 	.word	0xfffff830
 80088ec:	0000076b 	.word	0x0000076b
 80088f0:	0000076c 	.word	0x0000076c
 80088f4:	fffff894 	.word	0xfffff894
 80088f8:	0000270f 	.word	0x0000270f
 80088fc:	0800d623 	.word	0x0800d623
 8008900:	20000084 	.word	0x20000084

08008904 <strftime>:
 8008904:	b513      	push	{r0, r1, r4, lr}
 8008906:	4c05      	ldr	r4, [pc, #20]	; (800891c <strftime+0x18>)
 8008908:	6824      	ldr	r4, [r4, #0]
 800890a:	6a24      	ldr	r4, [r4, #32]
 800890c:	2c00      	cmp	r4, #0
 800890e:	d100      	bne.n	8008912 <strftime+0xe>
 8008910:	4c03      	ldr	r4, [pc, #12]	; (8008920 <strftime+0x1c>)
 8008912:	9400      	str	r4, [sp, #0]
 8008914:	f7ff fb10 	bl	8007f38 <__strftime>
 8008918:	bd16      	pop	{r1, r2, r4, pc}
 800891a:	46c0      	nop			; (mov r8, r8)
 800891c:	20000020 	.word	0x20000020
 8008920:	200000e8 	.word	0x200000e8

08008924 <_strtol_l.isra.0>:
 8008924:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008926:	001f      	movs	r7, r3
 8008928:	000e      	movs	r6, r1
 800892a:	b087      	sub	sp, #28
 800892c:	9005      	str	r0, [sp, #20]
 800892e:	9101      	str	r1, [sp, #4]
 8008930:	9202      	str	r2, [sp, #8]
 8008932:	980c      	ldr	r0, [sp, #48]	; 0x30
 8008934:	7834      	ldrb	r4, [r6, #0]
 8008936:	f001 fd81 	bl	800a43c <__locale_ctype_ptr_l>
 800893a:	2208      	movs	r2, #8
 800893c:	1900      	adds	r0, r0, r4
 800893e:	7843      	ldrb	r3, [r0, #1]
 8008940:	1c75      	adds	r5, r6, #1
 8008942:	4013      	ands	r3, r2
 8008944:	d136      	bne.n	80089b4 <_strtol_l.isra.0+0x90>
 8008946:	2c2d      	cmp	r4, #45	; 0x2d
 8008948:	d136      	bne.n	80089b8 <_strtol_l.isra.0+0x94>
 800894a:	1cb5      	adds	r5, r6, #2
 800894c:	7874      	ldrb	r4, [r6, #1]
 800894e:	2601      	movs	r6, #1
 8008950:	2f00      	cmp	r7, #0
 8008952:	d062      	beq.n	8008a1a <_strtol_l.isra.0+0xf6>
 8008954:	2f10      	cmp	r7, #16
 8008956:	d109      	bne.n	800896c <_strtol_l.isra.0+0x48>
 8008958:	2c30      	cmp	r4, #48	; 0x30
 800895a:	d107      	bne.n	800896c <_strtol_l.isra.0+0x48>
 800895c:	2220      	movs	r2, #32
 800895e:	782b      	ldrb	r3, [r5, #0]
 8008960:	4393      	bics	r3, r2
 8008962:	2b58      	cmp	r3, #88	; 0x58
 8008964:	d154      	bne.n	8008a10 <_strtol_l.isra.0+0xec>
 8008966:	2710      	movs	r7, #16
 8008968:	786c      	ldrb	r4, [r5, #1]
 800896a:	3502      	adds	r5, #2
 800896c:	4b2d      	ldr	r3, [pc, #180]	; (8008a24 <_strtol_l.isra.0+0x100>)
 800896e:	0039      	movs	r1, r7
 8008970:	18f3      	adds	r3, r6, r3
 8008972:	0018      	movs	r0, r3
 8008974:	9303      	str	r3, [sp, #12]
 8008976:	f7f7 fc73 	bl	8000260 <__aeabi_uidivmod>
 800897a:	9104      	str	r1, [sp, #16]
 800897c:	2101      	movs	r1, #1
 800897e:	2300      	movs	r3, #0
 8008980:	4249      	negs	r1, r1
 8008982:	0002      	movs	r2, r0
 8008984:	468c      	mov	ip, r1
 8008986:	0018      	movs	r0, r3
 8008988:	0021      	movs	r1, r4
 800898a:	3930      	subs	r1, #48	; 0x30
 800898c:	2909      	cmp	r1, #9
 800898e:	d81a      	bhi.n	80089c6 <_strtol_l.isra.0+0xa2>
 8008990:	000c      	movs	r4, r1
 8008992:	42a7      	cmp	r7, r4
 8008994:	dd23      	ble.n	80089de <_strtol_l.isra.0+0xba>
 8008996:	1c59      	adds	r1, r3, #1
 8008998:	d009      	beq.n	80089ae <_strtol_l.isra.0+0x8a>
 800899a:	4663      	mov	r3, ip
 800899c:	4282      	cmp	r2, r0
 800899e:	d306      	bcc.n	80089ae <_strtol_l.isra.0+0x8a>
 80089a0:	d102      	bne.n	80089a8 <_strtol_l.isra.0+0x84>
 80089a2:	9904      	ldr	r1, [sp, #16]
 80089a4:	42a1      	cmp	r1, r4
 80089a6:	db02      	blt.n	80089ae <_strtol_l.isra.0+0x8a>
 80089a8:	2301      	movs	r3, #1
 80089aa:	4378      	muls	r0, r7
 80089ac:	1820      	adds	r0, r4, r0
 80089ae:	782c      	ldrb	r4, [r5, #0]
 80089b0:	3501      	adds	r5, #1
 80089b2:	e7e9      	b.n	8008988 <_strtol_l.isra.0+0x64>
 80089b4:	002e      	movs	r6, r5
 80089b6:	e7bc      	b.n	8008932 <_strtol_l.isra.0+0xe>
 80089b8:	2c2b      	cmp	r4, #43	; 0x2b
 80089ba:	d001      	beq.n	80089c0 <_strtol_l.isra.0+0x9c>
 80089bc:	001e      	movs	r6, r3
 80089be:	e7c7      	b.n	8008950 <_strtol_l.isra.0+0x2c>
 80089c0:	1cb5      	adds	r5, r6, #2
 80089c2:	7874      	ldrb	r4, [r6, #1]
 80089c4:	e7fa      	b.n	80089bc <_strtol_l.isra.0+0x98>
 80089c6:	0021      	movs	r1, r4
 80089c8:	3941      	subs	r1, #65	; 0x41
 80089ca:	2919      	cmp	r1, #25
 80089cc:	d801      	bhi.n	80089d2 <_strtol_l.isra.0+0xae>
 80089ce:	3c37      	subs	r4, #55	; 0x37
 80089d0:	e7df      	b.n	8008992 <_strtol_l.isra.0+0x6e>
 80089d2:	0021      	movs	r1, r4
 80089d4:	3961      	subs	r1, #97	; 0x61
 80089d6:	2919      	cmp	r1, #25
 80089d8:	d801      	bhi.n	80089de <_strtol_l.isra.0+0xba>
 80089da:	3c57      	subs	r4, #87	; 0x57
 80089dc:	e7d9      	b.n	8008992 <_strtol_l.isra.0+0x6e>
 80089de:	1c5a      	adds	r2, r3, #1
 80089e0:	d108      	bne.n	80089f4 <_strtol_l.isra.0+0xd0>
 80089e2:	9a05      	ldr	r2, [sp, #20]
 80089e4:	3323      	adds	r3, #35	; 0x23
 80089e6:	6013      	str	r3, [r2, #0]
 80089e8:	9b02      	ldr	r3, [sp, #8]
 80089ea:	9803      	ldr	r0, [sp, #12]
 80089ec:	2b00      	cmp	r3, #0
 80089ee:	d109      	bne.n	8008a04 <_strtol_l.isra.0+0xe0>
 80089f0:	b007      	add	sp, #28
 80089f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80089f4:	2e00      	cmp	r6, #0
 80089f6:	d000      	beq.n	80089fa <_strtol_l.isra.0+0xd6>
 80089f8:	4240      	negs	r0, r0
 80089fa:	9a02      	ldr	r2, [sp, #8]
 80089fc:	2a00      	cmp	r2, #0
 80089fe:	d0f7      	beq.n	80089f0 <_strtol_l.isra.0+0xcc>
 8008a00:	2b00      	cmp	r3, #0
 8008a02:	d001      	beq.n	8008a08 <_strtol_l.isra.0+0xe4>
 8008a04:	1e6b      	subs	r3, r5, #1
 8008a06:	9301      	str	r3, [sp, #4]
 8008a08:	9b02      	ldr	r3, [sp, #8]
 8008a0a:	9a01      	ldr	r2, [sp, #4]
 8008a0c:	601a      	str	r2, [r3, #0]
 8008a0e:	e7ef      	b.n	80089f0 <_strtol_l.isra.0+0xcc>
 8008a10:	2430      	movs	r4, #48	; 0x30
 8008a12:	2f00      	cmp	r7, #0
 8008a14:	d1aa      	bne.n	800896c <_strtol_l.isra.0+0x48>
 8008a16:	2708      	movs	r7, #8
 8008a18:	e7a8      	b.n	800896c <_strtol_l.isra.0+0x48>
 8008a1a:	2c30      	cmp	r4, #48	; 0x30
 8008a1c:	d09e      	beq.n	800895c <_strtol_l.isra.0+0x38>
 8008a1e:	270a      	movs	r7, #10
 8008a20:	e7a4      	b.n	800896c <_strtol_l.isra.0+0x48>
 8008a22:	46c0      	nop			; (mov r8, r8)
 8008a24:	7fffffff 	.word	0x7fffffff

08008a28 <_strtol_r>:
 8008a28:	b513      	push	{r0, r1, r4, lr}
 8008a2a:	4c05      	ldr	r4, [pc, #20]	; (8008a40 <_strtol_r+0x18>)
 8008a2c:	6824      	ldr	r4, [r4, #0]
 8008a2e:	6a24      	ldr	r4, [r4, #32]
 8008a30:	2c00      	cmp	r4, #0
 8008a32:	d100      	bne.n	8008a36 <_strtol_r+0xe>
 8008a34:	4c03      	ldr	r4, [pc, #12]	; (8008a44 <_strtol_r+0x1c>)
 8008a36:	9400      	str	r4, [sp, #0]
 8008a38:	f7ff ff74 	bl	8008924 <_strtol_l.isra.0>
 8008a3c:	bd16      	pop	{r1, r2, r4, pc}
 8008a3e:	46c0      	nop			; (mov r8, r8)
 8008a40:	20000020 	.word	0x20000020
 8008a44:	200000e8 	.word	0x200000e8

08008a48 <strtol>:
 8008a48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008a4a:	0013      	movs	r3, r2
 8008a4c:	4a06      	ldr	r2, [pc, #24]	; (8008a68 <strtol+0x20>)
 8008a4e:	0005      	movs	r5, r0
 8008a50:	6810      	ldr	r0, [r2, #0]
 8008a52:	6a04      	ldr	r4, [r0, #32]
 8008a54:	2c00      	cmp	r4, #0
 8008a56:	d100      	bne.n	8008a5a <strtol+0x12>
 8008a58:	4c04      	ldr	r4, [pc, #16]	; (8008a6c <strtol+0x24>)
 8008a5a:	000a      	movs	r2, r1
 8008a5c:	9400      	str	r4, [sp, #0]
 8008a5e:	0029      	movs	r1, r5
 8008a60:	f7ff ff60 	bl	8008924 <_strtol_l.isra.0>
 8008a64:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8008a66:	46c0      	nop			; (mov r8, r8)
 8008a68:	20000020 	.word	0x20000020
 8008a6c:	200000e8 	.word	0x200000e8

08008a70 <_strtoul_l.isra.0>:
 8008a70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008a72:	001f      	movs	r7, r3
 8008a74:	000e      	movs	r6, r1
 8008a76:	b085      	sub	sp, #20
 8008a78:	9003      	str	r0, [sp, #12]
 8008a7a:	9101      	str	r1, [sp, #4]
 8008a7c:	9202      	str	r2, [sp, #8]
 8008a7e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8008a80:	7834      	ldrb	r4, [r6, #0]
 8008a82:	f001 fcdb 	bl	800a43c <__locale_ctype_ptr_l>
 8008a86:	2208      	movs	r2, #8
 8008a88:	1900      	adds	r0, r0, r4
 8008a8a:	7843      	ldrb	r3, [r0, #1]
 8008a8c:	1c75      	adds	r5, r6, #1
 8008a8e:	4013      	ands	r3, r2
 8008a90:	d138      	bne.n	8008b04 <_strtoul_l.isra.0+0x94>
 8008a92:	2c2d      	cmp	r4, #45	; 0x2d
 8008a94:	d138      	bne.n	8008b08 <_strtoul_l.isra.0+0x98>
 8008a96:	7874      	ldrb	r4, [r6, #1]
 8008a98:	1cb5      	adds	r5, r6, #2
 8008a9a:	3301      	adds	r3, #1
 8008a9c:	9300      	str	r3, [sp, #0]
 8008a9e:	2f00      	cmp	r7, #0
 8008aa0:	d065      	beq.n	8008b6e <_strtoul_l.isra.0+0xfe>
 8008aa2:	2f10      	cmp	r7, #16
 8008aa4:	d109      	bne.n	8008aba <_strtoul_l.isra.0+0x4a>
 8008aa6:	2c30      	cmp	r4, #48	; 0x30
 8008aa8:	d107      	bne.n	8008aba <_strtoul_l.isra.0+0x4a>
 8008aaa:	2220      	movs	r2, #32
 8008aac:	782b      	ldrb	r3, [r5, #0]
 8008aae:	4393      	bics	r3, r2
 8008ab0:	2b58      	cmp	r3, #88	; 0x58
 8008ab2:	d157      	bne.n	8008b64 <_strtoul_l.isra.0+0xf4>
 8008ab4:	2710      	movs	r7, #16
 8008ab6:	786c      	ldrb	r4, [r5, #1]
 8008ab8:	3502      	adds	r5, #2
 8008aba:	2001      	movs	r0, #1
 8008abc:	0039      	movs	r1, r7
 8008abe:	4240      	negs	r0, r0
 8008ac0:	f7f7 fb48 	bl	8000154 <__udivsi3>
 8008ac4:	0006      	movs	r6, r0
 8008ac6:	2001      	movs	r0, #1
 8008ac8:	0039      	movs	r1, r7
 8008aca:	4240      	negs	r0, r0
 8008acc:	f7f7 fbc8 	bl	8000260 <__aeabi_uidivmod>
 8008ad0:	2300      	movs	r3, #0
 8008ad2:	2201      	movs	r2, #1
 8008ad4:	468c      	mov	ip, r1
 8008ad6:	0018      	movs	r0, r3
 8008ad8:	4252      	negs	r2, r2
 8008ada:	0021      	movs	r1, r4
 8008adc:	3930      	subs	r1, #48	; 0x30
 8008ade:	2909      	cmp	r1, #9
 8008ae0:	d817      	bhi.n	8008b12 <_strtoul_l.isra.0+0xa2>
 8008ae2:	000c      	movs	r4, r1
 8008ae4:	42a7      	cmp	r7, r4
 8008ae6:	dd22      	ble.n	8008b2e <_strtoul_l.isra.0+0xbe>
 8008ae8:	2b00      	cmp	r3, #0
 8008aea:	db1e      	blt.n	8008b2a <_strtoul_l.isra.0+0xba>
 8008aec:	0013      	movs	r3, r2
 8008aee:	4286      	cmp	r6, r0
 8008af0:	d305      	bcc.n	8008afe <_strtoul_l.isra.0+0x8e>
 8008af2:	d101      	bne.n	8008af8 <_strtoul_l.isra.0+0x88>
 8008af4:	45a4      	cmp	ip, r4
 8008af6:	db02      	blt.n	8008afe <_strtoul_l.isra.0+0x8e>
 8008af8:	2301      	movs	r3, #1
 8008afa:	4378      	muls	r0, r7
 8008afc:	1820      	adds	r0, r4, r0
 8008afe:	782c      	ldrb	r4, [r5, #0]
 8008b00:	3501      	adds	r5, #1
 8008b02:	e7ea      	b.n	8008ada <_strtoul_l.isra.0+0x6a>
 8008b04:	002e      	movs	r6, r5
 8008b06:	e7ba      	b.n	8008a7e <_strtoul_l.isra.0+0xe>
 8008b08:	2c2b      	cmp	r4, #43	; 0x2b
 8008b0a:	d1c7      	bne.n	8008a9c <_strtoul_l.isra.0+0x2c>
 8008b0c:	1cb5      	adds	r5, r6, #2
 8008b0e:	7874      	ldrb	r4, [r6, #1]
 8008b10:	e7c4      	b.n	8008a9c <_strtoul_l.isra.0+0x2c>
 8008b12:	0021      	movs	r1, r4
 8008b14:	3941      	subs	r1, #65	; 0x41
 8008b16:	2919      	cmp	r1, #25
 8008b18:	d801      	bhi.n	8008b1e <_strtoul_l.isra.0+0xae>
 8008b1a:	3c37      	subs	r4, #55	; 0x37
 8008b1c:	e7e2      	b.n	8008ae4 <_strtoul_l.isra.0+0x74>
 8008b1e:	0021      	movs	r1, r4
 8008b20:	3961      	subs	r1, #97	; 0x61
 8008b22:	2919      	cmp	r1, #25
 8008b24:	d803      	bhi.n	8008b2e <_strtoul_l.isra.0+0xbe>
 8008b26:	3c57      	subs	r4, #87	; 0x57
 8008b28:	e7dc      	b.n	8008ae4 <_strtoul_l.isra.0+0x74>
 8008b2a:	0013      	movs	r3, r2
 8008b2c:	e7e7      	b.n	8008afe <_strtoul_l.isra.0+0x8e>
 8008b2e:	2b00      	cmp	r3, #0
 8008b30:	da09      	bge.n	8008b46 <_strtoul_l.isra.0+0xd6>
 8008b32:	2322      	movs	r3, #34	; 0x22
 8008b34:	2001      	movs	r0, #1
 8008b36:	9a03      	ldr	r2, [sp, #12]
 8008b38:	4240      	negs	r0, r0
 8008b3a:	6013      	str	r3, [r2, #0]
 8008b3c:	9b02      	ldr	r3, [sp, #8]
 8008b3e:	2b00      	cmp	r3, #0
 8008b40:	d10a      	bne.n	8008b58 <_strtoul_l.isra.0+0xe8>
 8008b42:	b005      	add	sp, #20
 8008b44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008b46:	9a00      	ldr	r2, [sp, #0]
 8008b48:	2a00      	cmp	r2, #0
 8008b4a:	d000      	beq.n	8008b4e <_strtoul_l.isra.0+0xde>
 8008b4c:	4240      	negs	r0, r0
 8008b4e:	9a02      	ldr	r2, [sp, #8]
 8008b50:	2a00      	cmp	r2, #0
 8008b52:	d0f6      	beq.n	8008b42 <_strtoul_l.isra.0+0xd2>
 8008b54:	2b00      	cmp	r3, #0
 8008b56:	d001      	beq.n	8008b5c <_strtoul_l.isra.0+0xec>
 8008b58:	1e6b      	subs	r3, r5, #1
 8008b5a:	9301      	str	r3, [sp, #4]
 8008b5c:	9b02      	ldr	r3, [sp, #8]
 8008b5e:	9a01      	ldr	r2, [sp, #4]
 8008b60:	601a      	str	r2, [r3, #0]
 8008b62:	e7ee      	b.n	8008b42 <_strtoul_l.isra.0+0xd2>
 8008b64:	2430      	movs	r4, #48	; 0x30
 8008b66:	2f00      	cmp	r7, #0
 8008b68:	d1a7      	bne.n	8008aba <_strtoul_l.isra.0+0x4a>
 8008b6a:	2708      	movs	r7, #8
 8008b6c:	e7a5      	b.n	8008aba <_strtoul_l.isra.0+0x4a>
 8008b6e:	2c30      	cmp	r4, #48	; 0x30
 8008b70:	d09b      	beq.n	8008aaa <_strtoul_l.isra.0+0x3a>
 8008b72:	270a      	movs	r7, #10
 8008b74:	e7a1      	b.n	8008aba <_strtoul_l.isra.0+0x4a>
	...

08008b78 <_strtoul_r>:
 8008b78:	b513      	push	{r0, r1, r4, lr}
 8008b7a:	4c05      	ldr	r4, [pc, #20]	; (8008b90 <_strtoul_r+0x18>)
 8008b7c:	6824      	ldr	r4, [r4, #0]
 8008b7e:	6a24      	ldr	r4, [r4, #32]
 8008b80:	2c00      	cmp	r4, #0
 8008b82:	d100      	bne.n	8008b86 <_strtoul_r+0xe>
 8008b84:	4c03      	ldr	r4, [pc, #12]	; (8008b94 <_strtoul_r+0x1c>)
 8008b86:	9400      	str	r4, [sp, #0]
 8008b88:	f7ff ff72 	bl	8008a70 <_strtoul_l.isra.0>
 8008b8c:	bd16      	pop	{r1, r2, r4, pc}
 8008b8e:	46c0      	nop			; (mov r8, r8)
 8008b90:	20000020 	.word	0x20000020
 8008b94:	200000e8 	.word	0x200000e8

08008b98 <strtoul>:
 8008b98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008b9a:	0013      	movs	r3, r2
 8008b9c:	4a06      	ldr	r2, [pc, #24]	; (8008bb8 <strtoul+0x20>)
 8008b9e:	0005      	movs	r5, r0
 8008ba0:	6810      	ldr	r0, [r2, #0]
 8008ba2:	6a04      	ldr	r4, [r0, #32]
 8008ba4:	2c00      	cmp	r4, #0
 8008ba6:	d100      	bne.n	8008baa <strtoul+0x12>
 8008ba8:	4c04      	ldr	r4, [pc, #16]	; (8008bbc <strtoul+0x24>)
 8008baa:	000a      	movs	r2, r1
 8008bac:	9400      	str	r4, [sp, #0]
 8008bae:	0029      	movs	r1, r5
 8008bb0:	f7ff ff5e 	bl	8008a70 <_strtoul_l.isra.0>
 8008bb4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8008bb6:	46c0      	nop			; (mov r8, r8)
 8008bb8:	20000020 	.word	0x20000020
 8008bbc:	200000e8 	.word	0x200000e8

08008bc0 <time>:
 8008bc0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008bc2:	4b0b      	ldr	r3, [pc, #44]	; (8008bf0 <time+0x30>)
 8008bc4:	0004      	movs	r4, r0
 8008bc6:	2200      	movs	r2, #0
 8008bc8:	4669      	mov	r1, sp
 8008bca:	6818      	ldr	r0, [r3, #0]
 8008bcc:	f001 fb4e 	bl	800a26c <_gettimeofday_r>
 8008bd0:	2800      	cmp	r0, #0
 8008bd2:	da04      	bge.n	8008bde <time+0x1e>
 8008bd4:	2201      	movs	r2, #1
 8008bd6:	4252      	negs	r2, r2
 8008bd8:	17d3      	asrs	r3, r2, #31
 8008bda:	9200      	str	r2, [sp, #0]
 8008bdc:	9301      	str	r3, [sp, #4]
 8008bde:	9800      	ldr	r0, [sp, #0]
 8008be0:	9901      	ldr	r1, [sp, #4]
 8008be2:	2c00      	cmp	r4, #0
 8008be4:	d001      	beq.n	8008bea <time+0x2a>
 8008be6:	6020      	str	r0, [r4, #0]
 8008be8:	6061      	str	r1, [r4, #4]
 8008bea:	b004      	add	sp, #16
 8008bec:	bd10      	pop	{r4, pc}
 8008bee:	46c0      	nop			; (mov r8, r8)
 8008bf0:	20000020 	.word	0x20000020

08008bf4 <__tzcalc_limits>:
 8008bf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008bf6:	b089      	sub	sp, #36	; 0x24
 8008bf8:	0004      	movs	r4, r0
 8008bfa:	f001 fb49 	bl	800a290 <__gettzinfo>
 8008bfe:	4b4e      	ldr	r3, [pc, #312]	; (8008d38 <__tzcalc_limits+0x144>)
 8008c00:	0006      	movs	r6, r0
 8008c02:	2000      	movs	r0, #0
 8008c04:	429c      	cmp	r4, r3
 8008c06:	dd5f      	ble.n	8008cc8 <__tzcalc_limits+0xd4>
 8008c08:	256e      	movs	r5, #110	; 0x6e
 8008c0a:	2164      	movs	r1, #100	; 0x64
 8008c0c:	4b4b      	ldr	r3, [pc, #300]	; (8008d3c <__tzcalc_limits+0x148>)
 8008c0e:	35ff      	adds	r5, #255	; 0xff
 8008c10:	18e0      	adds	r0, r4, r3
 8008c12:	4345      	muls	r5, r0
 8008c14:	4b4a      	ldr	r3, [pc, #296]	; (8008d40 <__tzcalc_limits+0x14c>)
 8008c16:	6074      	str	r4, [r6, #4]
 8008c18:	18e0      	adds	r0, r4, r3
 8008c1a:	4b4a      	ldr	r3, [pc, #296]	; (8008d44 <__tzcalc_limits+0x150>)
 8008c1c:	1080      	asrs	r0, r0, #2
 8008c1e:	182d      	adds	r5, r5, r0
 8008c20:	4249      	negs	r1, r1
 8008c22:	18e0      	adds	r0, r4, r3
 8008c24:	f7f7 fb20 	bl	8000268 <__divsi3>
 8008c28:	21c8      	movs	r1, #200	; 0xc8
 8008c2a:	4b47      	ldr	r3, [pc, #284]	; (8008d48 <__tzcalc_limits+0x154>)
 8008c2c:	182d      	adds	r5, r5, r0
 8008c2e:	0049      	lsls	r1, r1, #1
 8008c30:	18e0      	adds	r0, r4, r3
 8008c32:	f7f7 fb19 	bl	8000268 <__divsi3>
 8008c36:	2164      	movs	r1, #100	; 0x64
 8008c38:	182b      	adds	r3, r5, r0
 8008c3a:	0020      	movs	r0, r4
 8008c3c:	9300      	str	r3, [sp, #0]
 8008c3e:	f7f7 fbf9 	bl	8000434 <__aeabi_idivmod>
 8008c42:	9101      	str	r1, [sp, #4]
 8008c44:	21c8      	movs	r1, #200	; 0xc8
 8008c46:	0020      	movs	r0, r4
 8008c48:	0049      	lsls	r1, r1, #1
 8008c4a:	f7f7 fbf3 	bl	8000434 <__aeabi_idivmod>
 8008c4e:	000a      	movs	r2, r1
 8008c50:	4253      	negs	r3, r2
 8008c52:	415a      	adcs	r2, r3
 8008c54:	0033      	movs	r3, r6
 8008c56:	3358      	adds	r3, #88	; 0x58
 8008c58:	9307      	str	r3, [sp, #28]
 8008c5a:	2303      	movs	r3, #3
 8008c5c:	0035      	movs	r5, r6
 8008c5e:	401c      	ands	r4, r3
 8008c60:	9102      	str	r1, [sp, #8]
 8008c62:	9204      	str	r2, [sp, #16]
 8008c64:	3508      	adds	r5, #8
 8008c66:	9405      	str	r4, [sp, #20]
 8008c68:	782b      	ldrb	r3, [r5, #0]
 8008c6a:	68ef      	ldr	r7, [r5, #12]
 8008c6c:	2b4a      	cmp	r3, #74	; 0x4a
 8008c6e:	d12d      	bne.n	8008ccc <__tzcalc_limits+0xd8>
 8008c70:	9b00      	ldr	r3, [sp, #0]
 8008c72:	19dc      	adds	r4, r3, r7
 8008c74:	9b05      	ldr	r3, [sp, #20]
 8008c76:	2b00      	cmp	r3, #0
 8008c78:	d102      	bne.n	8008c80 <__tzcalc_limits+0x8c>
 8008c7a:	9b01      	ldr	r3, [sp, #4]
 8008c7c:	2b00      	cmp	r3, #0
 8008c7e:	d103      	bne.n	8008c88 <__tzcalc_limits+0x94>
 8008c80:	2100      	movs	r1, #0
 8008c82:	9b02      	ldr	r3, [sp, #8]
 8008c84:	428b      	cmp	r3, r1
 8008c86:	d103      	bne.n	8008c90 <__tzcalc_limits+0x9c>
 8008c88:	2101      	movs	r1, #1
 8008c8a:	2f3b      	cmp	r7, #59	; 0x3b
 8008c8c:	dc00      	bgt.n	8008c90 <__tzcalc_limits+0x9c>
 8008c8e:	2100      	movs	r1, #0
 8008c90:	1864      	adds	r4, r4, r1
 8008c92:	3c01      	subs	r4, #1
 8008c94:	492d      	ldr	r1, [pc, #180]	; (8008d4c <__tzcalc_limits+0x158>)
 8008c96:	692b      	ldr	r3, [r5, #16]
 8008c98:	434c      	muls	r4, r1
 8008c9a:	18e4      	adds	r4, r4, r3
 8008c9c:	6a2b      	ldr	r3, [r5, #32]
 8008c9e:	18e4      	adds	r4, r4, r3
 8008ca0:	61ac      	str	r4, [r5, #24]
 8008ca2:	9b07      	ldr	r3, [sp, #28]
 8008ca4:	17e4      	asrs	r4, r4, #31
 8008ca6:	61ec      	str	r4, [r5, #28]
 8008ca8:	3528      	adds	r5, #40	; 0x28
 8008caa:	42ab      	cmp	r3, r5
 8008cac:	d1dc      	bne.n	8008c68 <__tzcalc_limits+0x74>
 8008cae:	6cf1      	ldr	r1, [r6, #76]	; 0x4c
 8008cb0:	6a72      	ldr	r2, [r6, #36]	; 0x24
 8008cb2:	2301      	movs	r3, #1
 8008cb4:	4291      	cmp	r1, r2
 8008cb6:	dc05      	bgt.n	8008cc4 <__tzcalc_limits+0xd0>
 8008cb8:	d103      	bne.n	8008cc2 <__tzcalc_limits+0xce>
 8008cba:	6cb2      	ldr	r2, [r6, #72]	; 0x48
 8008cbc:	6a31      	ldr	r1, [r6, #32]
 8008cbe:	428a      	cmp	r2, r1
 8008cc0:	d800      	bhi.n	8008cc4 <__tzcalc_limits+0xd0>
 8008cc2:	2300      	movs	r3, #0
 8008cc4:	2001      	movs	r0, #1
 8008cc6:	6033      	str	r3, [r6, #0]
 8008cc8:	b009      	add	sp, #36	; 0x24
 8008cca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ccc:	2b44      	cmp	r3, #68	; 0x44
 8008cce:	d102      	bne.n	8008cd6 <__tzcalc_limits+0xe2>
 8008cd0:	9b00      	ldr	r3, [sp, #0]
 8008cd2:	19dc      	adds	r4, r3, r7
 8008cd4:	e7de      	b.n	8008c94 <__tzcalc_limits+0xa0>
 8008cd6:	9b05      	ldr	r3, [sp, #20]
 8008cd8:	9a04      	ldr	r2, [sp, #16]
 8008cda:	2b00      	cmp	r3, #0
 8008cdc:	d103      	bne.n	8008ce6 <__tzcalc_limits+0xf2>
 8008cde:	9b01      	ldr	r3, [sp, #4]
 8008ce0:	2b00      	cmp	r3, #0
 8008ce2:	d000      	beq.n	8008ce6 <__tzcalc_limits+0xf2>
 8008ce4:	2201      	movs	r2, #1
 8008ce6:	2330      	movs	r3, #48	; 0x30
 8008ce8:	4353      	muls	r3, r2
 8008cea:	9306      	str	r3, [sp, #24]
 8008cec:	4b18      	ldr	r3, [pc, #96]	; (8008d50 <__tzcalc_limits+0x15c>)
 8008cee:	2100      	movs	r1, #0
 8008cf0:	469c      	mov	ip, r3
 8008cf2:	6868      	ldr	r0, [r5, #4]
 8008cf4:	9c00      	ldr	r4, [sp, #0]
 8008cf6:	9a06      	ldr	r2, [sp, #24]
 8008cf8:	3101      	adds	r1, #1
 8008cfa:	008b      	lsls	r3, r1, #2
 8008cfc:	189b      	adds	r3, r3, r2
 8008cfe:	4662      	mov	r2, ip
 8008d00:	3b04      	subs	r3, #4
 8008d02:	58d3      	ldr	r3, [r2, r3]
 8008d04:	9303      	str	r3, [sp, #12]
 8008d06:	4288      	cmp	r0, r1
 8008d08:	dc10      	bgt.n	8008d2c <__tzcalc_limits+0x138>
 8008d0a:	1d20      	adds	r0, r4, #4
 8008d0c:	2107      	movs	r1, #7
 8008d0e:	f7f7 fb91 	bl	8000434 <__aeabi_idivmod>
 8008d12:	1a79      	subs	r1, r7, r1
 8008d14:	d500      	bpl.n	8008d18 <__tzcalc_limits+0x124>
 8008d16:	3107      	adds	r1, #7
 8008d18:	68ab      	ldr	r3, [r5, #8]
 8008d1a:	1e5a      	subs	r2, r3, #1
 8008d1c:	2307      	movs	r3, #7
 8008d1e:	4353      	muls	r3, r2
 8008d20:	1859      	adds	r1, r3, r1
 8008d22:	9b03      	ldr	r3, [sp, #12]
 8008d24:	4299      	cmp	r1, r3
 8008d26:	da04      	bge.n	8008d32 <__tzcalc_limits+0x13e>
 8008d28:	1864      	adds	r4, r4, r1
 8008d2a:	e7b3      	b.n	8008c94 <__tzcalc_limits+0xa0>
 8008d2c:	9b03      	ldr	r3, [sp, #12]
 8008d2e:	18e4      	adds	r4, r4, r3
 8008d30:	e7e1      	b.n	8008cf6 <__tzcalc_limits+0x102>
 8008d32:	3907      	subs	r1, #7
 8008d34:	e7f5      	b.n	8008d22 <__tzcalc_limits+0x12e>
 8008d36:	46c0      	nop			; (mov r8, r8)
 8008d38:	000007b1 	.word	0x000007b1
 8008d3c:	fffff84e 	.word	0xfffff84e
 8008d40:	fffff84f 	.word	0xfffff84f
 8008d44:	fffff893 	.word	0xfffff893
 8008d48:	fffff9bf 	.word	0xfffff9bf
 8008d4c:	00015180 	.word	0x00015180
 8008d50:	0800d544 	.word	0x0800d544

08008d54 <__tz_lock>:
 8008d54:	4770      	bx	lr

08008d56 <__tz_unlock>:
 8008d56:	4770      	bx	lr

08008d58 <_tzset_unlocked>:
 8008d58:	b510      	push	{r4, lr}
 8008d5a:	4b02      	ldr	r3, [pc, #8]	; (8008d64 <_tzset_unlocked+0xc>)
 8008d5c:	6818      	ldr	r0, [r3, #0]
 8008d5e:	f000 f803 	bl	8008d68 <_tzset_unlocked_r>
 8008d62:	bd10      	pop	{r4, pc}
 8008d64:	20000020 	.word	0x20000020

08008d68 <_tzset_unlocked_r>:
 8008d68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008d6a:	b08d      	sub	sp, #52	; 0x34
 8008d6c:	0007      	movs	r7, r0
 8008d6e:	f001 fa8f 	bl	800a290 <__gettzinfo>
 8008d72:	49af      	ldr	r1, [pc, #700]	; (8009030 <_tzset_unlocked_r+0x2c8>)
 8008d74:	0006      	movs	r6, r0
 8008d76:	0038      	movs	r0, r7
 8008d78:	f001 fa72 	bl	800a260 <_getenv_r>
 8008d7c:	4dad      	ldr	r5, [pc, #692]	; (8009034 <_tzset_unlocked_r+0x2cc>)
 8008d7e:	1e04      	subs	r4, r0, #0
 8008d80:	d10d      	bne.n	8008d9e <_tzset_unlocked_r+0x36>
 8008d82:	4bad      	ldr	r3, [pc, #692]	; (8009038 <_tzset_unlocked_r+0x2d0>)
 8008d84:	4aad      	ldr	r2, [pc, #692]	; (800903c <_tzset_unlocked_r+0x2d4>)
 8008d86:	6018      	str	r0, [r3, #0]
 8008d88:	4bad      	ldr	r3, [pc, #692]	; (8009040 <_tzset_unlocked_r+0x2d8>)
 8008d8a:	6018      	str	r0, [r3, #0]
 8008d8c:	4bad      	ldr	r3, [pc, #692]	; (8009044 <_tzset_unlocked_r+0x2dc>)
 8008d8e:	6828      	ldr	r0, [r5, #0]
 8008d90:	601a      	str	r2, [r3, #0]
 8008d92:	605a      	str	r2, [r3, #4]
 8008d94:	f7fe fa8e 	bl	80072b4 <free>
 8008d98:	602c      	str	r4, [r5, #0]
 8008d9a:	b00d      	add	sp, #52	; 0x34
 8008d9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d9e:	6829      	ldr	r1, [r5, #0]
 8008da0:	2900      	cmp	r1, #0
 8008da2:	d159      	bne.n	8008e58 <_tzset_unlocked_r+0xf0>
 8008da4:	6828      	ldr	r0, [r5, #0]
 8008da6:	f7fe fa85 	bl	80072b4 <free>
 8008daa:	0020      	movs	r0, r4
 8008dac:	f7f7 f9ac 	bl	8000108 <strlen>
 8008db0:	1c41      	adds	r1, r0, #1
 8008db2:	0038      	movs	r0, r7
 8008db4:	f7fe fae4 	bl	8007380 <_malloc_r>
 8008db8:	6028      	str	r0, [r5, #0]
 8008dba:	2800      	cmp	r0, #0
 8008dbc:	d151      	bne.n	8008e62 <_tzset_unlocked_r+0xfa>
 8008dbe:	7823      	ldrb	r3, [r4, #0]
 8008dc0:	49a1      	ldr	r1, [pc, #644]	; (8009048 <_tzset_unlocked_r+0x2e0>)
 8008dc2:	3b3a      	subs	r3, #58	; 0x3a
 8008dc4:	425a      	negs	r2, r3
 8008dc6:	4153      	adcs	r3, r2
 8008dc8:	18e4      	adds	r4, r4, r3
 8008dca:	4aa0      	ldr	r2, [pc, #640]	; (800904c <_tzset_unlocked_r+0x2e4>)
 8008dcc:	ab0a      	add	r3, sp, #40	; 0x28
 8008dce:	0020      	movs	r0, r4
 8008dd0:	f002 f9a2 	bl	800b118 <siscanf>
 8008dd4:	2800      	cmp	r0, #0
 8008dd6:	dde0      	ble.n	8008d9a <_tzset_unlocked_r+0x32>
 8008dd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008dda:	18e4      	adds	r4, r4, r3
 8008ddc:	7823      	ldrb	r3, [r4, #0]
 8008dde:	2b2d      	cmp	r3, #45	; 0x2d
 8008de0:	d143      	bne.n	8008e6a <_tzset_unlocked_r+0x102>
 8008de2:	3b2e      	subs	r3, #46	; 0x2e
 8008de4:	3401      	adds	r4, #1
 8008de6:	9304      	str	r3, [sp, #16]
 8008de8:	2716      	movs	r7, #22
 8008dea:	ab02      	add	r3, sp, #8
 8008dec:	18ff      	adds	r7, r7, r3
 8008dee:	2300      	movs	r3, #0
 8008df0:	ad08      	add	r5, sp, #32
 8008df2:	803b      	strh	r3, [r7, #0]
 8008df4:	802b      	strh	r3, [r5, #0]
 8008df6:	ab0a      	add	r3, sp, #40	; 0x28
 8008df8:	9303      	str	r3, [sp, #12]
 8008dfa:	9502      	str	r5, [sp, #8]
 8008dfc:	9301      	str	r3, [sp, #4]
 8008dfe:	9700      	str	r7, [sp, #0]
 8008e00:	aa07      	add	r2, sp, #28
 8008e02:	4993      	ldr	r1, [pc, #588]	; (8009050 <_tzset_unlocked_r+0x2e8>)
 8008e04:	0020      	movs	r0, r4
 8008e06:	f002 f987 	bl	800b118 <siscanf>
 8008e0a:	2800      	cmp	r0, #0
 8008e0c:	ddc5      	ble.n	8008d9a <_tzset_unlocked_r+0x32>
 8008e0e:	233c      	movs	r3, #60	; 0x3c
 8008e10:	883a      	ldrh	r2, [r7, #0]
 8008e12:	4f90      	ldr	r7, [pc, #576]	; (8009054 <_tzset_unlocked_r+0x2ec>)
 8008e14:	4353      	muls	r3, r2
 8008e16:	882a      	ldrh	r2, [r5, #0]
 8008e18:	4d8a      	ldr	r5, [pc, #552]	; (8009044 <_tzset_unlocked_r+0x2dc>)
 8008e1a:	189b      	adds	r3, r3, r2
 8008e1c:	aa02      	add	r2, sp, #8
 8008e1e:	8a91      	ldrh	r1, [r2, #20]
 8008e20:	22e1      	movs	r2, #225	; 0xe1
 8008e22:	0112      	lsls	r2, r2, #4
 8008e24:	434a      	muls	r2, r1
 8008e26:	189b      	adds	r3, r3, r2
 8008e28:	9a04      	ldr	r2, [sp, #16]
 8008e2a:	4987      	ldr	r1, [pc, #540]	; (8009048 <_tzset_unlocked_r+0x2e0>)
 8008e2c:	435a      	muls	r2, r3
 8008e2e:	4b87      	ldr	r3, [pc, #540]	; (800904c <_tzset_unlocked_r+0x2e4>)
 8008e30:	62b2      	str	r2, [r6, #40]	; 0x28
 8008e32:	602b      	str	r3, [r5, #0]
 8008e34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008e36:	003a      	movs	r2, r7
 8008e38:	18e4      	adds	r4, r4, r3
 8008e3a:	0020      	movs	r0, r4
 8008e3c:	ab0a      	add	r3, sp, #40	; 0x28
 8008e3e:	f002 f96b 	bl	800b118 <siscanf>
 8008e42:	2800      	cmp	r0, #0
 8008e44:	dc18      	bgt.n	8008e78 <_tzset_unlocked_r+0x110>
 8008e46:	682b      	ldr	r3, [r5, #0]
 8008e48:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 8008e4a:	606b      	str	r3, [r5, #4]
 8008e4c:	4b7a      	ldr	r3, [pc, #488]	; (8009038 <_tzset_unlocked_r+0x2d0>)
 8008e4e:	601a      	str	r2, [r3, #0]
 8008e50:	2200      	movs	r2, #0
 8008e52:	4b7b      	ldr	r3, [pc, #492]	; (8009040 <_tzset_unlocked_r+0x2d8>)
 8008e54:	601a      	str	r2, [r3, #0]
 8008e56:	e7a0      	b.n	8008d9a <_tzset_unlocked_r+0x32>
 8008e58:	f7f7 f95d 	bl	8000116 <strcmp>
 8008e5c:	2800      	cmp	r0, #0
 8008e5e:	d09c      	beq.n	8008d9a <_tzset_unlocked_r+0x32>
 8008e60:	e7a0      	b.n	8008da4 <_tzset_unlocked_r+0x3c>
 8008e62:	0021      	movs	r1, r4
 8008e64:	f002 f9ce 	bl	800b204 <strcpy>
 8008e68:	e7a9      	b.n	8008dbe <_tzset_unlocked_r+0x56>
 8008e6a:	2201      	movs	r2, #1
 8008e6c:	3b2b      	subs	r3, #43	; 0x2b
 8008e6e:	9204      	str	r2, [sp, #16]
 8008e70:	425a      	negs	r2, r3
 8008e72:	4153      	adcs	r3, r2
 8008e74:	18e4      	adds	r4, r4, r3
 8008e76:	e7b7      	b.n	8008de8 <_tzset_unlocked_r+0x80>
 8008e78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008e7a:	606f      	str	r7, [r5, #4]
 8008e7c:	18e4      	adds	r4, r4, r3
 8008e7e:	7823      	ldrb	r3, [r4, #0]
 8008e80:	2b2d      	cmp	r3, #45	; 0x2d
 8008e82:	d000      	beq.n	8008e86 <_tzset_unlocked_r+0x11e>
 8008e84:	e08d      	b.n	8008fa2 <_tzset_unlocked_r+0x23a>
 8008e86:	3b2e      	subs	r3, #46	; 0x2e
 8008e88:	3401      	adds	r4, #1
 8008e8a:	9304      	str	r3, [sp, #16]
 8008e8c:	2716      	movs	r7, #22
 8008e8e:	2300      	movs	r3, #0
 8008e90:	aa02      	add	r2, sp, #8
 8008e92:	18bf      	adds	r7, r7, r2
 8008e94:	ad07      	add	r5, sp, #28
 8008e96:	8313      	strh	r3, [r2, #24]
 8008e98:	802b      	strh	r3, [r5, #0]
 8008e9a:	803b      	strh	r3, [r7, #0]
 8008e9c:	aa08      	add	r2, sp, #32
 8008e9e:	930a      	str	r3, [sp, #40]	; 0x28
 8008ea0:	ab0a      	add	r3, sp, #40	; 0x28
 8008ea2:	9202      	str	r2, [sp, #8]
 8008ea4:	9303      	str	r3, [sp, #12]
 8008ea6:	9301      	str	r3, [sp, #4]
 8008ea8:	9700      	str	r7, [sp, #0]
 8008eaa:	002a      	movs	r2, r5
 8008eac:	4968      	ldr	r1, [pc, #416]	; (8009050 <_tzset_unlocked_r+0x2e8>)
 8008eae:	0020      	movs	r0, r4
 8008eb0:	f002 f932 	bl	800b118 <siscanf>
 8008eb4:	2800      	cmp	r0, #0
 8008eb6:	dd00      	ble.n	8008eba <_tzset_unlocked_r+0x152>
 8008eb8:	e07a      	b.n	8008fb0 <_tzset_unlocked_r+0x248>
 8008eba:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 8008ebc:	4a66      	ldr	r2, [pc, #408]	; (8009058 <_tzset_unlocked_r+0x2f0>)
 8008ebe:	189b      	adds	r3, r3, r2
 8008ec0:	6533      	str	r3, [r6, #80]	; 0x50
 8008ec2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008ec4:	0037      	movs	r7, r6
 8008ec6:	18e4      	adds	r4, r4, r3
 8008ec8:	2300      	movs	r3, #0
 8008eca:	3708      	adds	r7, #8
 8008ecc:	9304      	str	r3, [sp, #16]
 8008ece:	7823      	ldrb	r3, [r4, #0]
 8008ed0:	3b2c      	subs	r3, #44	; 0x2c
 8008ed2:	425a      	negs	r2, r3
 8008ed4:	4153      	adcs	r3, r2
 8008ed6:	18e4      	adds	r4, r4, r3
 8008ed8:	7825      	ldrb	r5, [r4, #0]
 8008eda:	2d4d      	cmp	r5, #77	; 0x4d
 8008edc:	d000      	beq.n	8008ee0 <_tzset_unlocked_r+0x178>
 8008ede:	e078      	b.n	8008fd2 <_tzset_unlocked_r+0x26a>
 8008ee0:	221e      	movs	r2, #30
 8008ee2:	a902      	add	r1, sp, #8
 8008ee4:	1852      	adds	r2, r2, r1
 8008ee6:	9202      	str	r2, [sp, #8]
 8008ee8:	aa09      	add	r2, sp, #36	; 0x24
 8008eea:	9200      	str	r2, [sp, #0]
 8008eec:	221a      	movs	r2, #26
 8008eee:	ab0a      	add	r3, sp, #40	; 0x28
 8008ef0:	1852      	adds	r2, r2, r1
 8008ef2:	9303      	str	r3, [sp, #12]
 8008ef4:	9301      	str	r3, [sp, #4]
 8008ef6:	4959      	ldr	r1, [pc, #356]	; (800905c <_tzset_unlocked_r+0x2f4>)
 8008ef8:	0020      	movs	r0, r4
 8008efa:	f002 f90d 	bl	800b118 <siscanf>
 8008efe:	2803      	cmp	r0, #3
 8008f00:	d000      	beq.n	8008f04 <_tzset_unlocked_r+0x19c>
 8008f02:	e74a      	b.n	8008d9a <_tzset_unlocked_r+0x32>
 8008f04:	ab02      	add	r3, sp, #8
 8008f06:	8b59      	ldrh	r1, [r3, #26]
 8008f08:	1e4b      	subs	r3, r1, #1
 8008f0a:	2b0b      	cmp	r3, #11
 8008f0c:	d900      	bls.n	8008f10 <_tzset_unlocked_r+0x1a8>
 8008f0e:	e744      	b.n	8008d9a <_tzset_unlocked_r+0x32>
 8008f10:	ab02      	add	r3, sp, #8
 8008f12:	8b9a      	ldrh	r2, [r3, #28]
 8008f14:	1e53      	subs	r3, r2, #1
 8008f16:	2b04      	cmp	r3, #4
 8008f18:	d900      	bls.n	8008f1c <_tzset_unlocked_r+0x1b4>
 8008f1a:	e73e      	b.n	8008d9a <_tzset_unlocked_r+0x32>
 8008f1c:	ab02      	add	r3, sp, #8
 8008f1e:	8bdb      	ldrh	r3, [r3, #30]
 8008f20:	2b06      	cmp	r3, #6
 8008f22:	d900      	bls.n	8008f26 <_tzset_unlocked_r+0x1be>
 8008f24:	e739      	b.n	8008d9a <_tzset_unlocked_r+0x32>
 8008f26:	703d      	strb	r5, [r7, #0]
 8008f28:	6079      	str	r1, [r7, #4]
 8008f2a:	60ba      	str	r2, [r7, #8]
 8008f2c:	60fb      	str	r3, [r7, #12]
 8008f2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008f30:	18e5      	adds	r5, r4, r3
 8008f32:	2302      	movs	r3, #2
 8008f34:	aa07      	add	r2, sp, #28
 8008f36:	8013      	strh	r3, [r2, #0]
 8008f38:	2300      	movs	r3, #0
 8008f3a:	a902      	add	r1, sp, #8
 8008f3c:	ac08      	add	r4, sp, #32
 8008f3e:	82cb      	strh	r3, [r1, #22]
 8008f40:	8023      	strh	r3, [r4, #0]
 8008f42:	930a      	str	r3, [sp, #40]	; 0x28
 8008f44:	782b      	ldrb	r3, [r5, #0]
 8008f46:	2b2f      	cmp	r3, #47	; 0x2f
 8008f48:	d10b      	bne.n	8008f62 <_tzset_unlocked_r+0x1fa>
 8008f4a:	2116      	movs	r1, #22
 8008f4c:	a802      	add	r0, sp, #8
 8008f4e:	1809      	adds	r1, r1, r0
 8008f50:	ab0a      	add	r3, sp, #40	; 0x28
 8008f52:	9100      	str	r1, [sp, #0]
 8008f54:	9303      	str	r3, [sp, #12]
 8008f56:	9402      	str	r4, [sp, #8]
 8008f58:	9301      	str	r3, [sp, #4]
 8008f5a:	4941      	ldr	r1, [pc, #260]	; (8009060 <_tzset_unlocked_r+0x2f8>)
 8008f5c:	0028      	movs	r0, r5
 8008f5e:	f002 f8db 	bl	800b118 <siscanf>
 8008f62:	ab02      	add	r3, sp, #8
 8008f64:	8ada      	ldrh	r2, [r3, #22]
 8008f66:	233c      	movs	r3, #60	; 0x3c
 8008f68:	4353      	muls	r3, r2
 8008f6a:	8822      	ldrh	r2, [r4, #0]
 8008f6c:	189b      	adds	r3, r3, r2
 8008f6e:	aa07      	add	r2, sp, #28
 8008f70:	8811      	ldrh	r1, [r2, #0]
 8008f72:	22e1      	movs	r2, #225	; 0xe1
 8008f74:	0112      	lsls	r2, r2, #4
 8008f76:	434a      	muls	r2, r1
 8008f78:	189b      	adds	r3, r3, r2
 8008f7a:	613b      	str	r3, [r7, #16]
 8008f7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008f7e:	3728      	adds	r7, #40	; 0x28
 8008f80:	18ec      	adds	r4, r5, r3
 8008f82:	9b04      	ldr	r3, [sp, #16]
 8008f84:	2b01      	cmp	r3, #1
 8008f86:	d122      	bne.n	8008fce <_tzset_unlocked_r+0x266>
 8008f88:	6870      	ldr	r0, [r6, #4]
 8008f8a:	f7ff fe33 	bl	8008bf4 <__tzcalc_limits>
 8008f8e:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 8008f90:	4b29      	ldr	r3, [pc, #164]	; (8009038 <_tzset_unlocked_r+0x2d0>)
 8008f92:	601a      	str	r2, [r3, #0]
 8008f94:	6d33      	ldr	r3, [r6, #80]	; 0x50
 8008f96:	1a9b      	subs	r3, r3, r2
 8008f98:	1e5a      	subs	r2, r3, #1
 8008f9a:	4193      	sbcs	r3, r2
 8008f9c:	4a28      	ldr	r2, [pc, #160]	; (8009040 <_tzset_unlocked_r+0x2d8>)
 8008f9e:	6013      	str	r3, [r2, #0]
 8008fa0:	e6fb      	b.n	8008d9a <_tzset_unlocked_r+0x32>
 8008fa2:	2201      	movs	r2, #1
 8008fa4:	3b2b      	subs	r3, #43	; 0x2b
 8008fa6:	9204      	str	r2, [sp, #16]
 8008fa8:	425a      	negs	r2, r3
 8008faa:	4153      	adcs	r3, r2
 8008fac:	18e4      	adds	r4, r4, r3
 8008fae:	e76d      	b.n	8008e8c <_tzset_unlocked_r+0x124>
 8008fb0:	233c      	movs	r3, #60	; 0x3c
 8008fb2:	883a      	ldrh	r2, [r7, #0]
 8008fb4:	8829      	ldrh	r1, [r5, #0]
 8008fb6:	4353      	muls	r3, r2
 8008fb8:	aa02      	add	r2, sp, #8
 8008fba:	8b12      	ldrh	r2, [r2, #24]
 8008fbc:	189b      	adds	r3, r3, r2
 8008fbe:	22e1      	movs	r2, #225	; 0xe1
 8008fc0:	0112      	lsls	r2, r2, #4
 8008fc2:	434a      	muls	r2, r1
 8008fc4:	189b      	adds	r3, r3, r2
 8008fc6:	9a04      	ldr	r2, [sp, #16]
 8008fc8:	435a      	muls	r2, r3
 8008fca:	0013      	movs	r3, r2
 8008fcc:	e778      	b.n	8008ec0 <_tzset_unlocked_r+0x158>
 8008fce:	2301      	movs	r3, #1
 8008fd0:	e77c      	b.n	8008ecc <_tzset_unlocked_r+0x164>
 8008fd2:	2344      	movs	r3, #68	; 0x44
 8008fd4:	9305      	str	r3, [sp, #20]
 8008fd6:	2d4a      	cmp	r5, #74	; 0x4a
 8008fd8:	d101      	bne.n	8008fde <_tzset_unlocked_r+0x276>
 8008fda:	3401      	adds	r4, #1
 8008fdc:	9505      	str	r5, [sp, #20]
 8008fde:	220a      	movs	r2, #10
 8008fe0:	a90b      	add	r1, sp, #44	; 0x2c
 8008fe2:	0020      	movs	r0, r4
 8008fe4:	f7ff fdd8 	bl	8008b98 <strtoul>
 8008fe8:	231e      	movs	r3, #30
 8008fea:	aa02      	add	r2, sp, #8
 8008fec:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8008fee:	189b      	adds	r3, r3, r2
 8008ff0:	8018      	strh	r0, [r3, #0]
 8008ff2:	42a5      	cmp	r5, r4
 8008ff4:	d116      	bne.n	8009024 <_tzset_unlocked_r+0x2bc>
 8008ff6:	9b04      	ldr	r3, [sp, #16]
 8008ff8:	2b00      	cmp	r3, #0
 8008ffa:	d108      	bne.n	800900e <_tzset_unlocked_r+0x2a6>
 8008ffc:	334d      	adds	r3, #77	; 0x4d
 8008ffe:	7233      	strb	r3, [r6, #8]
 8009000:	2303      	movs	r3, #3
 8009002:	60f3      	str	r3, [r6, #12]
 8009004:	3b01      	subs	r3, #1
 8009006:	6133      	str	r3, [r6, #16]
 8009008:	9b04      	ldr	r3, [sp, #16]
 800900a:	6173      	str	r3, [r6, #20]
 800900c:	e791      	b.n	8008f32 <_tzset_unlocked_r+0x1ca>
 800900e:	0033      	movs	r3, r6
 8009010:	224d      	movs	r2, #77	; 0x4d
 8009012:	3330      	adds	r3, #48	; 0x30
 8009014:	701a      	strb	r2, [r3, #0]
 8009016:	230b      	movs	r3, #11
 8009018:	6373      	str	r3, [r6, #52]	; 0x34
 800901a:	3b0a      	subs	r3, #10
 800901c:	63b3      	str	r3, [r6, #56]	; 0x38
 800901e:	2300      	movs	r3, #0
 8009020:	63f3      	str	r3, [r6, #60]	; 0x3c
 8009022:	e786      	b.n	8008f32 <_tzset_unlocked_r+0x1ca>
 8009024:	9b05      	ldr	r3, [sp, #20]
 8009026:	b280      	uxth	r0, r0
 8009028:	703b      	strb	r3, [r7, #0]
 800902a:	60f8      	str	r0, [r7, #12]
 800902c:	e781      	b.n	8008f32 <_tzset_unlocked_r+0x1ca>
 800902e:	46c0      	nop			; (mov r8, r8)
 8009030:	0800d857 	.word	0x0800d857
 8009034:	200004b0 	.word	0x200004b0
 8009038:	200004b8 	.word	0x200004b8
 800903c:	0800d85a 	.word	0x0800d85a
 8009040:	200004b4 	.word	0x200004b4
 8009044:	20000084 	.word	0x20000084
 8009048:	0800d85e 	.word	0x0800d85e
 800904c:	200004a3 	.word	0x200004a3
 8009050:	0800d881 	.word	0x0800d881
 8009054:	20000498 	.word	0x20000498
 8009058:	fffff1f0 	.word	0xfffff1f0
 800905c:	0800d86d 	.word	0x0800d86d
 8009060:	0800d880 	.word	0x0800d880

08009064 <__swbuf_r>:
 8009064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009066:	0005      	movs	r5, r0
 8009068:	000e      	movs	r6, r1
 800906a:	0014      	movs	r4, r2
 800906c:	2800      	cmp	r0, #0
 800906e:	d004      	beq.n	800907a <__swbuf_r+0x16>
 8009070:	6983      	ldr	r3, [r0, #24]
 8009072:	2b00      	cmp	r3, #0
 8009074:	d101      	bne.n	800907a <__swbuf_r+0x16>
 8009076:	f001 f823 	bl	800a0c0 <__sinit>
 800907a:	4b22      	ldr	r3, [pc, #136]	; (8009104 <__swbuf_r+0xa0>)
 800907c:	429c      	cmp	r4, r3
 800907e:	d12d      	bne.n	80090dc <__swbuf_r+0x78>
 8009080:	686c      	ldr	r4, [r5, #4]
 8009082:	69a3      	ldr	r3, [r4, #24]
 8009084:	60a3      	str	r3, [r4, #8]
 8009086:	89a3      	ldrh	r3, [r4, #12]
 8009088:	071b      	lsls	r3, r3, #28
 800908a:	d531      	bpl.n	80090f0 <__swbuf_r+0x8c>
 800908c:	6923      	ldr	r3, [r4, #16]
 800908e:	2b00      	cmp	r3, #0
 8009090:	d02e      	beq.n	80090f0 <__swbuf_r+0x8c>
 8009092:	6823      	ldr	r3, [r4, #0]
 8009094:	6922      	ldr	r2, [r4, #16]
 8009096:	b2f7      	uxtb	r7, r6
 8009098:	1a98      	subs	r0, r3, r2
 800909a:	6963      	ldr	r3, [r4, #20]
 800909c:	b2f6      	uxtb	r6, r6
 800909e:	4283      	cmp	r3, r0
 80090a0:	dc05      	bgt.n	80090ae <__swbuf_r+0x4a>
 80090a2:	0021      	movs	r1, r4
 80090a4:	0028      	movs	r0, r5
 80090a6:	f000 ff9d 	bl	8009fe4 <_fflush_r>
 80090aa:	2800      	cmp	r0, #0
 80090ac:	d126      	bne.n	80090fc <__swbuf_r+0x98>
 80090ae:	68a3      	ldr	r3, [r4, #8]
 80090b0:	3001      	adds	r0, #1
 80090b2:	3b01      	subs	r3, #1
 80090b4:	60a3      	str	r3, [r4, #8]
 80090b6:	6823      	ldr	r3, [r4, #0]
 80090b8:	1c5a      	adds	r2, r3, #1
 80090ba:	6022      	str	r2, [r4, #0]
 80090bc:	701f      	strb	r7, [r3, #0]
 80090be:	6963      	ldr	r3, [r4, #20]
 80090c0:	4283      	cmp	r3, r0
 80090c2:	d004      	beq.n	80090ce <__swbuf_r+0x6a>
 80090c4:	89a3      	ldrh	r3, [r4, #12]
 80090c6:	07db      	lsls	r3, r3, #31
 80090c8:	d51a      	bpl.n	8009100 <__swbuf_r+0x9c>
 80090ca:	2e0a      	cmp	r6, #10
 80090cc:	d118      	bne.n	8009100 <__swbuf_r+0x9c>
 80090ce:	0021      	movs	r1, r4
 80090d0:	0028      	movs	r0, r5
 80090d2:	f000 ff87 	bl	8009fe4 <_fflush_r>
 80090d6:	2800      	cmp	r0, #0
 80090d8:	d012      	beq.n	8009100 <__swbuf_r+0x9c>
 80090da:	e00f      	b.n	80090fc <__swbuf_r+0x98>
 80090dc:	4b0a      	ldr	r3, [pc, #40]	; (8009108 <__swbuf_r+0xa4>)
 80090de:	429c      	cmp	r4, r3
 80090e0:	d101      	bne.n	80090e6 <__swbuf_r+0x82>
 80090e2:	68ac      	ldr	r4, [r5, #8]
 80090e4:	e7cd      	b.n	8009082 <__swbuf_r+0x1e>
 80090e6:	4b09      	ldr	r3, [pc, #36]	; (800910c <__swbuf_r+0xa8>)
 80090e8:	429c      	cmp	r4, r3
 80090ea:	d1ca      	bne.n	8009082 <__swbuf_r+0x1e>
 80090ec:	68ec      	ldr	r4, [r5, #12]
 80090ee:	e7c8      	b.n	8009082 <__swbuf_r+0x1e>
 80090f0:	0021      	movs	r1, r4
 80090f2:	0028      	movs	r0, r5
 80090f4:	f000 f80c 	bl	8009110 <__swsetup_r>
 80090f8:	2800      	cmp	r0, #0
 80090fa:	d0ca      	beq.n	8009092 <__swbuf_r+0x2e>
 80090fc:	2601      	movs	r6, #1
 80090fe:	4276      	negs	r6, r6
 8009100:	0030      	movs	r0, r6
 8009102:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009104:	0800d8c0 	.word	0x0800d8c0
 8009108:	0800d8e0 	.word	0x0800d8e0
 800910c:	0800d8a0 	.word	0x0800d8a0

08009110 <__swsetup_r>:
 8009110:	4b36      	ldr	r3, [pc, #216]	; (80091ec <__swsetup_r+0xdc>)
 8009112:	b570      	push	{r4, r5, r6, lr}
 8009114:	681d      	ldr	r5, [r3, #0]
 8009116:	0006      	movs	r6, r0
 8009118:	000c      	movs	r4, r1
 800911a:	2d00      	cmp	r5, #0
 800911c:	d005      	beq.n	800912a <__swsetup_r+0x1a>
 800911e:	69ab      	ldr	r3, [r5, #24]
 8009120:	2b00      	cmp	r3, #0
 8009122:	d102      	bne.n	800912a <__swsetup_r+0x1a>
 8009124:	0028      	movs	r0, r5
 8009126:	f000 ffcb 	bl	800a0c0 <__sinit>
 800912a:	4b31      	ldr	r3, [pc, #196]	; (80091f0 <__swsetup_r+0xe0>)
 800912c:	429c      	cmp	r4, r3
 800912e:	d10f      	bne.n	8009150 <__swsetup_r+0x40>
 8009130:	686c      	ldr	r4, [r5, #4]
 8009132:	230c      	movs	r3, #12
 8009134:	5ee2      	ldrsh	r2, [r4, r3]
 8009136:	b293      	uxth	r3, r2
 8009138:	0719      	lsls	r1, r3, #28
 800913a:	d42d      	bmi.n	8009198 <__swsetup_r+0x88>
 800913c:	06d9      	lsls	r1, r3, #27
 800913e:	d411      	bmi.n	8009164 <__swsetup_r+0x54>
 8009140:	2309      	movs	r3, #9
 8009142:	2001      	movs	r0, #1
 8009144:	6033      	str	r3, [r6, #0]
 8009146:	3337      	adds	r3, #55	; 0x37
 8009148:	4313      	orrs	r3, r2
 800914a:	81a3      	strh	r3, [r4, #12]
 800914c:	4240      	negs	r0, r0
 800914e:	bd70      	pop	{r4, r5, r6, pc}
 8009150:	4b28      	ldr	r3, [pc, #160]	; (80091f4 <__swsetup_r+0xe4>)
 8009152:	429c      	cmp	r4, r3
 8009154:	d101      	bne.n	800915a <__swsetup_r+0x4a>
 8009156:	68ac      	ldr	r4, [r5, #8]
 8009158:	e7eb      	b.n	8009132 <__swsetup_r+0x22>
 800915a:	4b27      	ldr	r3, [pc, #156]	; (80091f8 <__swsetup_r+0xe8>)
 800915c:	429c      	cmp	r4, r3
 800915e:	d1e8      	bne.n	8009132 <__swsetup_r+0x22>
 8009160:	68ec      	ldr	r4, [r5, #12]
 8009162:	e7e6      	b.n	8009132 <__swsetup_r+0x22>
 8009164:	075b      	lsls	r3, r3, #29
 8009166:	d513      	bpl.n	8009190 <__swsetup_r+0x80>
 8009168:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800916a:	2900      	cmp	r1, #0
 800916c:	d008      	beq.n	8009180 <__swsetup_r+0x70>
 800916e:	0023      	movs	r3, r4
 8009170:	3344      	adds	r3, #68	; 0x44
 8009172:	4299      	cmp	r1, r3
 8009174:	d002      	beq.n	800917c <__swsetup_r+0x6c>
 8009176:	0030      	movs	r0, r6
 8009178:	f7fe f8b8 	bl	80072ec <_free_r>
 800917c:	2300      	movs	r3, #0
 800917e:	6363      	str	r3, [r4, #52]	; 0x34
 8009180:	2224      	movs	r2, #36	; 0x24
 8009182:	89a3      	ldrh	r3, [r4, #12]
 8009184:	4393      	bics	r3, r2
 8009186:	81a3      	strh	r3, [r4, #12]
 8009188:	2300      	movs	r3, #0
 800918a:	6063      	str	r3, [r4, #4]
 800918c:	6923      	ldr	r3, [r4, #16]
 800918e:	6023      	str	r3, [r4, #0]
 8009190:	2308      	movs	r3, #8
 8009192:	89a2      	ldrh	r2, [r4, #12]
 8009194:	4313      	orrs	r3, r2
 8009196:	81a3      	strh	r3, [r4, #12]
 8009198:	6923      	ldr	r3, [r4, #16]
 800919a:	2b00      	cmp	r3, #0
 800919c:	d10b      	bne.n	80091b6 <__swsetup_r+0xa6>
 800919e:	21a0      	movs	r1, #160	; 0xa0
 80091a0:	2280      	movs	r2, #128	; 0x80
 80091a2:	89a3      	ldrh	r3, [r4, #12]
 80091a4:	0089      	lsls	r1, r1, #2
 80091a6:	0092      	lsls	r2, r2, #2
 80091a8:	400b      	ands	r3, r1
 80091aa:	4293      	cmp	r3, r2
 80091ac:	d003      	beq.n	80091b6 <__swsetup_r+0xa6>
 80091ae:	0021      	movs	r1, r4
 80091b0:	0030      	movs	r0, r6
 80091b2:	f001 f989 	bl	800a4c8 <__smakebuf_r>
 80091b6:	2301      	movs	r3, #1
 80091b8:	89a2      	ldrh	r2, [r4, #12]
 80091ba:	4013      	ands	r3, r2
 80091bc:	d011      	beq.n	80091e2 <__swsetup_r+0xd2>
 80091be:	2300      	movs	r3, #0
 80091c0:	60a3      	str	r3, [r4, #8]
 80091c2:	6963      	ldr	r3, [r4, #20]
 80091c4:	425b      	negs	r3, r3
 80091c6:	61a3      	str	r3, [r4, #24]
 80091c8:	2000      	movs	r0, #0
 80091ca:	6923      	ldr	r3, [r4, #16]
 80091cc:	4283      	cmp	r3, r0
 80091ce:	d1be      	bne.n	800914e <__swsetup_r+0x3e>
 80091d0:	230c      	movs	r3, #12
 80091d2:	5ee2      	ldrsh	r2, [r4, r3]
 80091d4:	0613      	lsls	r3, r2, #24
 80091d6:	d5ba      	bpl.n	800914e <__swsetup_r+0x3e>
 80091d8:	2340      	movs	r3, #64	; 0x40
 80091da:	4313      	orrs	r3, r2
 80091dc:	81a3      	strh	r3, [r4, #12]
 80091de:	3801      	subs	r0, #1
 80091e0:	e7b5      	b.n	800914e <__swsetup_r+0x3e>
 80091e2:	0792      	lsls	r2, r2, #30
 80091e4:	d400      	bmi.n	80091e8 <__swsetup_r+0xd8>
 80091e6:	6963      	ldr	r3, [r4, #20]
 80091e8:	60a3      	str	r3, [r4, #8]
 80091ea:	e7ed      	b.n	80091c8 <__swsetup_r+0xb8>
 80091ec:	20000020 	.word	0x20000020
 80091f0:	0800d8c0 	.word	0x0800d8c0
 80091f4:	0800d8e0 	.word	0x0800d8e0
 80091f8:	0800d8a0 	.word	0x0800d8a0

080091fc <abs>:
 80091fc:	17c3      	asrs	r3, r0, #31
 80091fe:	18c0      	adds	r0, r0, r3
 8009200:	4058      	eors	r0, r3
 8009202:	4770      	bx	lr

08009204 <quorem>:
 8009204:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009206:	6903      	ldr	r3, [r0, #16]
 8009208:	690c      	ldr	r4, [r1, #16]
 800920a:	b089      	sub	sp, #36	; 0x24
 800920c:	0007      	movs	r7, r0
 800920e:	9105      	str	r1, [sp, #20]
 8009210:	2600      	movs	r6, #0
 8009212:	42a3      	cmp	r3, r4
 8009214:	db65      	blt.n	80092e2 <quorem+0xde>
 8009216:	000b      	movs	r3, r1
 8009218:	3c01      	subs	r4, #1
 800921a:	3314      	adds	r3, #20
 800921c:	00a5      	lsls	r5, r4, #2
 800921e:	9303      	str	r3, [sp, #12]
 8009220:	195b      	adds	r3, r3, r5
 8009222:	9304      	str	r3, [sp, #16]
 8009224:	0003      	movs	r3, r0
 8009226:	3314      	adds	r3, #20
 8009228:	9302      	str	r3, [sp, #8]
 800922a:	195d      	adds	r5, r3, r5
 800922c:	9b04      	ldr	r3, [sp, #16]
 800922e:	6828      	ldr	r0, [r5, #0]
 8009230:	681b      	ldr	r3, [r3, #0]
 8009232:	1c59      	adds	r1, r3, #1
 8009234:	9301      	str	r3, [sp, #4]
 8009236:	f7f6 ff8d 	bl	8000154 <__udivsi3>
 800923a:	9001      	str	r0, [sp, #4]
 800923c:	42b0      	cmp	r0, r6
 800923e:	d029      	beq.n	8009294 <quorem+0x90>
 8009240:	9b03      	ldr	r3, [sp, #12]
 8009242:	9802      	ldr	r0, [sp, #8]
 8009244:	469c      	mov	ip, r3
 8009246:	9606      	str	r6, [sp, #24]
 8009248:	4662      	mov	r2, ip
 800924a:	ca08      	ldmia	r2!, {r3}
 800924c:	4694      	mov	ip, r2
 800924e:	9a01      	ldr	r2, [sp, #4]
 8009250:	b299      	uxth	r1, r3
 8009252:	4351      	muls	r1, r2
 8009254:	0c1b      	lsrs	r3, r3, #16
 8009256:	4353      	muls	r3, r2
 8009258:	1989      	adds	r1, r1, r6
 800925a:	0c0a      	lsrs	r2, r1, #16
 800925c:	189b      	adds	r3, r3, r2
 800925e:	9307      	str	r3, [sp, #28]
 8009260:	0c1e      	lsrs	r6, r3, #16
 8009262:	6803      	ldr	r3, [r0, #0]
 8009264:	b289      	uxth	r1, r1
 8009266:	b29a      	uxth	r2, r3
 8009268:	9b06      	ldr	r3, [sp, #24]
 800926a:	18d2      	adds	r2, r2, r3
 800926c:	6803      	ldr	r3, [r0, #0]
 800926e:	1a52      	subs	r2, r2, r1
 8009270:	0c19      	lsrs	r1, r3, #16
 8009272:	466b      	mov	r3, sp
 8009274:	8b9b      	ldrh	r3, [r3, #28]
 8009276:	1acb      	subs	r3, r1, r3
 8009278:	1411      	asrs	r1, r2, #16
 800927a:	185b      	adds	r3, r3, r1
 800927c:	1419      	asrs	r1, r3, #16
 800927e:	b292      	uxth	r2, r2
 8009280:	041b      	lsls	r3, r3, #16
 8009282:	431a      	orrs	r2, r3
 8009284:	9b04      	ldr	r3, [sp, #16]
 8009286:	9106      	str	r1, [sp, #24]
 8009288:	c004      	stmia	r0!, {r2}
 800928a:	4563      	cmp	r3, ip
 800928c:	d2dc      	bcs.n	8009248 <quorem+0x44>
 800928e:	682b      	ldr	r3, [r5, #0]
 8009290:	2b00      	cmp	r3, #0
 8009292:	d02d      	beq.n	80092f0 <quorem+0xec>
 8009294:	9905      	ldr	r1, [sp, #20]
 8009296:	0038      	movs	r0, r7
 8009298:	f001 fb8e 	bl	800a9b8 <__mcmp>
 800929c:	2800      	cmp	r0, #0
 800929e:	db1f      	blt.n	80092e0 <quorem+0xdc>
 80092a0:	2500      	movs	r5, #0
 80092a2:	9b01      	ldr	r3, [sp, #4]
 80092a4:	9802      	ldr	r0, [sp, #8]
 80092a6:	3301      	adds	r3, #1
 80092a8:	9903      	ldr	r1, [sp, #12]
 80092aa:	9301      	str	r3, [sp, #4]
 80092ac:	6802      	ldr	r2, [r0, #0]
 80092ae:	c908      	ldmia	r1!, {r3}
 80092b0:	b292      	uxth	r2, r2
 80092b2:	1955      	adds	r5, r2, r5
 80092b4:	b29a      	uxth	r2, r3
 80092b6:	1aaa      	subs	r2, r5, r2
 80092b8:	6805      	ldr	r5, [r0, #0]
 80092ba:	0c1b      	lsrs	r3, r3, #16
 80092bc:	0c2d      	lsrs	r5, r5, #16
 80092be:	1aeb      	subs	r3, r5, r3
 80092c0:	1415      	asrs	r5, r2, #16
 80092c2:	195b      	adds	r3, r3, r5
 80092c4:	141d      	asrs	r5, r3, #16
 80092c6:	b292      	uxth	r2, r2
 80092c8:	041b      	lsls	r3, r3, #16
 80092ca:	4313      	orrs	r3, r2
 80092cc:	c008      	stmia	r0!, {r3}
 80092ce:	9b04      	ldr	r3, [sp, #16]
 80092d0:	428b      	cmp	r3, r1
 80092d2:	d2eb      	bcs.n	80092ac <quorem+0xa8>
 80092d4:	9a02      	ldr	r2, [sp, #8]
 80092d6:	00a3      	lsls	r3, r4, #2
 80092d8:	18d3      	adds	r3, r2, r3
 80092da:	681a      	ldr	r2, [r3, #0]
 80092dc:	2a00      	cmp	r2, #0
 80092de:	d011      	beq.n	8009304 <quorem+0x100>
 80092e0:	9e01      	ldr	r6, [sp, #4]
 80092e2:	0030      	movs	r0, r6
 80092e4:	b009      	add	sp, #36	; 0x24
 80092e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80092e8:	682b      	ldr	r3, [r5, #0]
 80092ea:	2b00      	cmp	r3, #0
 80092ec:	d104      	bne.n	80092f8 <quorem+0xf4>
 80092ee:	3c01      	subs	r4, #1
 80092f0:	9b02      	ldr	r3, [sp, #8]
 80092f2:	3d04      	subs	r5, #4
 80092f4:	42ab      	cmp	r3, r5
 80092f6:	d3f7      	bcc.n	80092e8 <quorem+0xe4>
 80092f8:	613c      	str	r4, [r7, #16]
 80092fa:	e7cb      	b.n	8009294 <quorem+0x90>
 80092fc:	681a      	ldr	r2, [r3, #0]
 80092fe:	2a00      	cmp	r2, #0
 8009300:	d104      	bne.n	800930c <quorem+0x108>
 8009302:	3c01      	subs	r4, #1
 8009304:	9a02      	ldr	r2, [sp, #8]
 8009306:	3b04      	subs	r3, #4
 8009308:	429a      	cmp	r2, r3
 800930a:	d3f7      	bcc.n	80092fc <quorem+0xf8>
 800930c:	613c      	str	r4, [r7, #16]
 800930e:	e7e7      	b.n	80092e0 <quorem+0xdc>

08009310 <_dtoa_r>:
 8009310:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009312:	0016      	movs	r6, r2
 8009314:	001f      	movs	r7, r3
 8009316:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8009318:	b09b      	sub	sp, #108	; 0x6c
 800931a:	9002      	str	r0, [sp, #8]
 800931c:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 800931e:	9606      	str	r6, [sp, #24]
 8009320:	9707      	str	r7, [sp, #28]
 8009322:	2c00      	cmp	r4, #0
 8009324:	d108      	bne.n	8009338 <_dtoa_r+0x28>
 8009326:	2010      	movs	r0, #16
 8009328:	f7fd ffba 	bl	80072a0 <malloc>
 800932c:	9b02      	ldr	r3, [sp, #8]
 800932e:	6258      	str	r0, [r3, #36]	; 0x24
 8009330:	6044      	str	r4, [r0, #4]
 8009332:	6084      	str	r4, [r0, #8]
 8009334:	6004      	str	r4, [r0, #0]
 8009336:	60c4      	str	r4, [r0, #12]
 8009338:	9b02      	ldr	r3, [sp, #8]
 800933a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800933c:	6819      	ldr	r1, [r3, #0]
 800933e:	2900      	cmp	r1, #0
 8009340:	d00b      	beq.n	800935a <_dtoa_r+0x4a>
 8009342:	685a      	ldr	r2, [r3, #4]
 8009344:	2301      	movs	r3, #1
 8009346:	4093      	lsls	r3, r2
 8009348:	604a      	str	r2, [r1, #4]
 800934a:	608b      	str	r3, [r1, #8]
 800934c:	9802      	ldr	r0, [sp, #8]
 800934e:	f001 f956 	bl	800a5fe <_Bfree>
 8009352:	2200      	movs	r2, #0
 8009354:	9b02      	ldr	r3, [sp, #8]
 8009356:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009358:	601a      	str	r2, [r3, #0]
 800935a:	2f00      	cmp	r7, #0
 800935c:	da20      	bge.n	80093a0 <_dtoa_r+0x90>
 800935e:	2301      	movs	r3, #1
 8009360:	602b      	str	r3, [r5, #0]
 8009362:	007b      	lsls	r3, r7, #1
 8009364:	085b      	lsrs	r3, r3, #1
 8009366:	9307      	str	r3, [sp, #28]
 8009368:	9c07      	ldr	r4, [sp, #28]
 800936a:	4bb2      	ldr	r3, [pc, #712]	; (8009634 <_dtoa_r+0x324>)
 800936c:	0022      	movs	r2, r4
 800936e:	9317      	str	r3, [sp, #92]	; 0x5c
 8009370:	401a      	ands	r2, r3
 8009372:	429a      	cmp	r2, r3
 8009374:	d117      	bne.n	80093a6 <_dtoa_r+0x96>
 8009376:	4bb0      	ldr	r3, [pc, #704]	; (8009638 <_dtoa_r+0x328>)
 8009378:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800937a:	6013      	str	r3, [r2, #0]
 800937c:	9b06      	ldr	r3, [sp, #24]
 800937e:	2b00      	cmp	r3, #0
 8009380:	d103      	bne.n	800938a <_dtoa_r+0x7a>
 8009382:	0324      	lsls	r4, r4, #12
 8009384:	d101      	bne.n	800938a <_dtoa_r+0x7a>
 8009386:	f000 fd87 	bl	8009e98 <_dtoa_r+0xb88>
 800938a:	4bac      	ldr	r3, [pc, #688]	; (800963c <_dtoa_r+0x32c>)
 800938c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800938e:	9308      	str	r3, [sp, #32]
 8009390:	2a00      	cmp	r2, #0
 8009392:	d002      	beq.n	800939a <_dtoa_r+0x8a>
 8009394:	4baa      	ldr	r3, [pc, #680]	; (8009640 <_dtoa_r+0x330>)
 8009396:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8009398:	6013      	str	r3, [r2, #0]
 800939a:	9808      	ldr	r0, [sp, #32]
 800939c:	b01b      	add	sp, #108	; 0x6c
 800939e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80093a0:	2300      	movs	r3, #0
 80093a2:	602b      	str	r3, [r5, #0]
 80093a4:	e7e0      	b.n	8009368 <_dtoa_r+0x58>
 80093a6:	9e06      	ldr	r6, [sp, #24]
 80093a8:	9f07      	ldr	r7, [sp, #28]
 80093aa:	2200      	movs	r2, #0
 80093ac:	2300      	movs	r3, #0
 80093ae:	0030      	movs	r0, r6
 80093b0:	0039      	movs	r1, r7
 80093b2:	f7f7 f855 	bl	8000460 <__aeabi_dcmpeq>
 80093b6:	1e05      	subs	r5, r0, #0
 80093b8:	d00b      	beq.n	80093d2 <_dtoa_r+0xc2>
 80093ba:	2301      	movs	r3, #1
 80093bc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80093be:	6013      	str	r3, [r2, #0]
 80093c0:	4ba0      	ldr	r3, [pc, #640]	; (8009644 <_dtoa_r+0x334>)
 80093c2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80093c4:	9308      	str	r3, [sp, #32]
 80093c6:	2a00      	cmp	r2, #0
 80093c8:	d0e7      	beq.n	800939a <_dtoa_r+0x8a>
 80093ca:	4a9f      	ldr	r2, [pc, #636]	; (8009648 <_dtoa_r+0x338>)
 80093cc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80093ce:	600a      	str	r2, [r1, #0]
 80093d0:	e7e3      	b.n	800939a <_dtoa_r+0x8a>
 80093d2:	ab18      	add	r3, sp, #96	; 0x60
 80093d4:	9301      	str	r3, [sp, #4]
 80093d6:	ab19      	add	r3, sp, #100	; 0x64
 80093d8:	9300      	str	r3, [sp, #0]
 80093da:	0032      	movs	r2, r6
 80093dc:	003b      	movs	r3, r7
 80093de:	9802      	ldr	r0, [sp, #8]
 80093e0:	f001 fb68 	bl	800aab4 <__d2b>
 80093e4:	0063      	lsls	r3, r4, #1
 80093e6:	9003      	str	r0, [sp, #12]
 80093e8:	0d5b      	lsrs	r3, r3, #21
 80093ea:	d074      	beq.n	80094d6 <_dtoa_r+0x1c6>
 80093ec:	033a      	lsls	r2, r7, #12
 80093ee:	4c97      	ldr	r4, [pc, #604]	; (800964c <_dtoa_r+0x33c>)
 80093f0:	0b12      	lsrs	r2, r2, #12
 80093f2:	4314      	orrs	r4, r2
 80093f4:	0021      	movs	r1, r4
 80093f6:	4a96      	ldr	r2, [pc, #600]	; (8009650 <_dtoa_r+0x340>)
 80093f8:	0030      	movs	r0, r6
 80093fa:	9516      	str	r5, [sp, #88]	; 0x58
 80093fc:	189e      	adds	r6, r3, r2
 80093fe:	2200      	movs	r2, #0
 8009400:	4b94      	ldr	r3, [pc, #592]	; (8009654 <_dtoa_r+0x344>)
 8009402:	f7f9 f995 	bl	8002730 <__aeabi_dsub>
 8009406:	4a94      	ldr	r2, [pc, #592]	; (8009658 <_dtoa_r+0x348>)
 8009408:	4b94      	ldr	r3, [pc, #592]	; (800965c <_dtoa_r+0x34c>)
 800940a:	f7f8 ff1f 	bl	800224c <__aeabi_dmul>
 800940e:	4a94      	ldr	r2, [pc, #592]	; (8009660 <_dtoa_r+0x350>)
 8009410:	4b94      	ldr	r3, [pc, #592]	; (8009664 <_dtoa_r+0x354>)
 8009412:	f7f7 fff5 	bl	8001400 <__aeabi_dadd>
 8009416:	0004      	movs	r4, r0
 8009418:	0030      	movs	r0, r6
 800941a:	000d      	movs	r5, r1
 800941c:	f7f9 fd22 	bl	8002e64 <__aeabi_i2d>
 8009420:	4a91      	ldr	r2, [pc, #580]	; (8009668 <_dtoa_r+0x358>)
 8009422:	4b92      	ldr	r3, [pc, #584]	; (800966c <_dtoa_r+0x35c>)
 8009424:	f7f8 ff12 	bl	800224c <__aeabi_dmul>
 8009428:	0002      	movs	r2, r0
 800942a:	000b      	movs	r3, r1
 800942c:	0020      	movs	r0, r4
 800942e:	0029      	movs	r1, r5
 8009430:	f7f7 ffe6 	bl	8001400 <__aeabi_dadd>
 8009434:	0004      	movs	r4, r0
 8009436:	000d      	movs	r5, r1
 8009438:	f7f9 fcde 	bl	8002df8 <__aeabi_d2iz>
 800943c:	2200      	movs	r2, #0
 800943e:	0007      	movs	r7, r0
 8009440:	2300      	movs	r3, #0
 8009442:	0020      	movs	r0, r4
 8009444:	0029      	movs	r1, r5
 8009446:	f7f7 f811 	bl	800046c <__aeabi_dcmplt>
 800944a:	2800      	cmp	r0, #0
 800944c:	d009      	beq.n	8009462 <_dtoa_r+0x152>
 800944e:	0038      	movs	r0, r7
 8009450:	f7f9 fd08 	bl	8002e64 <__aeabi_i2d>
 8009454:	002b      	movs	r3, r5
 8009456:	0022      	movs	r2, r4
 8009458:	f7f7 f802 	bl	8000460 <__aeabi_dcmpeq>
 800945c:	4243      	negs	r3, r0
 800945e:	4158      	adcs	r0, r3
 8009460:	1a3f      	subs	r7, r7, r0
 8009462:	2301      	movs	r3, #1
 8009464:	9314      	str	r3, [sp, #80]	; 0x50
 8009466:	2f16      	cmp	r7, #22
 8009468:	d80d      	bhi.n	8009486 <_dtoa_r+0x176>
 800946a:	4981      	ldr	r1, [pc, #516]	; (8009670 <_dtoa_r+0x360>)
 800946c:	00fb      	lsls	r3, r7, #3
 800946e:	18c9      	adds	r1, r1, r3
 8009470:	6808      	ldr	r0, [r1, #0]
 8009472:	6849      	ldr	r1, [r1, #4]
 8009474:	9a06      	ldr	r2, [sp, #24]
 8009476:	9b07      	ldr	r3, [sp, #28]
 8009478:	f7f7 f80c 	bl	8000494 <__aeabi_dcmpgt>
 800947c:	2800      	cmp	r0, #0
 800947e:	d046      	beq.n	800950e <_dtoa_r+0x1fe>
 8009480:	2300      	movs	r3, #0
 8009482:	3f01      	subs	r7, #1
 8009484:	9314      	str	r3, [sp, #80]	; 0x50
 8009486:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8009488:	1b9e      	subs	r6, r3, r6
 800948a:	2300      	movs	r3, #0
 800948c:	930a      	str	r3, [sp, #40]	; 0x28
 800948e:	0033      	movs	r3, r6
 8009490:	3b01      	subs	r3, #1
 8009492:	930b      	str	r3, [sp, #44]	; 0x2c
 8009494:	d504      	bpl.n	80094a0 <_dtoa_r+0x190>
 8009496:	2301      	movs	r3, #1
 8009498:	1b9b      	subs	r3, r3, r6
 800949a:	930a      	str	r3, [sp, #40]	; 0x28
 800949c:	2300      	movs	r3, #0
 800949e:	930b      	str	r3, [sp, #44]	; 0x2c
 80094a0:	2f00      	cmp	r7, #0
 80094a2:	db36      	blt.n	8009512 <_dtoa_r+0x202>
 80094a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80094a6:	9711      	str	r7, [sp, #68]	; 0x44
 80094a8:	19db      	adds	r3, r3, r7
 80094aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80094ac:	2300      	movs	r3, #0
 80094ae:	9304      	str	r3, [sp, #16]
 80094b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80094b2:	2401      	movs	r4, #1
 80094b4:	2b09      	cmp	r3, #9
 80094b6:	d900      	bls.n	80094ba <_dtoa_r+0x1aa>
 80094b8:	e084      	b.n	80095c4 <_dtoa_r+0x2b4>
 80094ba:	2b05      	cmp	r3, #5
 80094bc:	dd02      	ble.n	80094c4 <_dtoa_r+0x1b4>
 80094be:	2400      	movs	r4, #0
 80094c0:	3b04      	subs	r3, #4
 80094c2:	9320      	str	r3, [sp, #128]	; 0x80
 80094c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80094c6:	1e98      	subs	r0, r3, #2
 80094c8:	2803      	cmp	r0, #3
 80094ca:	d900      	bls.n	80094ce <_dtoa_r+0x1be>
 80094cc:	e084      	b.n	80095d8 <_dtoa_r+0x2c8>
 80094ce:	f7f6 fe2d 	bl	800012c <__gnu_thumb1_case_uqi>
 80094d2:	7775      	.short	0x7775
 80094d4:	6a28      	.short	0x6a28
 80094d6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80094d8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80094da:	189e      	adds	r6, r3, r2
 80094dc:	4b65      	ldr	r3, [pc, #404]	; (8009674 <_dtoa_r+0x364>)
 80094de:	18f2      	adds	r2, r6, r3
 80094e0:	2a20      	cmp	r2, #32
 80094e2:	dd0f      	ble.n	8009504 <_dtoa_r+0x1f4>
 80094e4:	2340      	movs	r3, #64	; 0x40
 80094e6:	1a9b      	subs	r3, r3, r2
 80094e8:	409c      	lsls	r4, r3
 80094ea:	4b63      	ldr	r3, [pc, #396]	; (8009678 <_dtoa_r+0x368>)
 80094ec:	9806      	ldr	r0, [sp, #24]
 80094ee:	18f3      	adds	r3, r6, r3
 80094f0:	40d8      	lsrs	r0, r3
 80094f2:	4320      	orrs	r0, r4
 80094f4:	f7f9 fcf0 	bl	8002ed8 <__aeabi_ui2d>
 80094f8:	2301      	movs	r3, #1
 80094fa:	4c60      	ldr	r4, [pc, #384]	; (800967c <_dtoa_r+0x36c>)
 80094fc:	3e01      	subs	r6, #1
 80094fe:	1909      	adds	r1, r1, r4
 8009500:	9316      	str	r3, [sp, #88]	; 0x58
 8009502:	e77c      	b.n	80093fe <_dtoa_r+0xee>
 8009504:	2320      	movs	r3, #32
 8009506:	9806      	ldr	r0, [sp, #24]
 8009508:	1a9b      	subs	r3, r3, r2
 800950a:	4098      	lsls	r0, r3
 800950c:	e7f2      	b.n	80094f4 <_dtoa_r+0x1e4>
 800950e:	9014      	str	r0, [sp, #80]	; 0x50
 8009510:	e7b9      	b.n	8009486 <_dtoa_r+0x176>
 8009512:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009514:	1bdb      	subs	r3, r3, r7
 8009516:	930a      	str	r3, [sp, #40]	; 0x28
 8009518:	427b      	negs	r3, r7
 800951a:	9304      	str	r3, [sp, #16]
 800951c:	2300      	movs	r3, #0
 800951e:	9311      	str	r3, [sp, #68]	; 0x44
 8009520:	e7c6      	b.n	80094b0 <_dtoa_r+0x1a0>
 8009522:	2301      	movs	r3, #1
 8009524:	930d      	str	r3, [sp, #52]	; 0x34
 8009526:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8009528:	2b00      	cmp	r3, #0
 800952a:	dd59      	ble.n	80095e0 <_dtoa_r+0x2d0>
 800952c:	930c      	str	r3, [sp, #48]	; 0x30
 800952e:	9309      	str	r3, [sp, #36]	; 0x24
 8009530:	9a02      	ldr	r2, [sp, #8]
 8009532:	6a55      	ldr	r5, [r2, #36]	; 0x24
 8009534:	2200      	movs	r2, #0
 8009536:	606a      	str	r2, [r5, #4]
 8009538:	3204      	adds	r2, #4
 800953a:	0010      	movs	r0, r2
 800953c:	3014      	adds	r0, #20
 800953e:	6869      	ldr	r1, [r5, #4]
 8009540:	4298      	cmp	r0, r3
 8009542:	d952      	bls.n	80095ea <_dtoa_r+0x2da>
 8009544:	9802      	ldr	r0, [sp, #8]
 8009546:	f001 f822 	bl	800a58e <_Balloc>
 800954a:	9b02      	ldr	r3, [sp, #8]
 800954c:	6028      	str	r0, [r5, #0]
 800954e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009550:	681b      	ldr	r3, [r3, #0]
 8009552:	9308      	str	r3, [sp, #32]
 8009554:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009556:	2b0e      	cmp	r3, #14
 8009558:	d900      	bls.n	800955c <_dtoa_r+0x24c>
 800955a:	e10a      	b.n	8009772 <_dtoa_r+0x462>
 800955c:	2c00      	cmp	r4, #0
 800955e:	d100      	bne.n	8009562 <_dtoa_r+0x252>
 8009560:	e107      	b.n	8009772 <_dtoa_r+0x462>
 8009562:	9b06      	ldr	r3, [sp, #24]
 8009564:	9c07      	ldr	r4, [sp, #28]
 8009566:	9312      	str	r3, [sp, #72]	; 0x48
 8009568:	9413      	str	r4, [sp, #76]	; 0x4c
 800956a:	2f00      	cmp	r7, #0
 800956c:	dc00      	bgt.n	8009570 <_dtoa_r+0x260>
 800956e:	e089      	b.n	8009684 <_dtoa_r+0x374>
 8009570:	210f      	movs	r1, #15
 8009572:	003a      	movs	r2, r7
 8009574:	4b3e      	ldr	r3, [pc, #248]	; (8009670 <_dtoa_r+0x360>)
 8009576:	400a      	ands	r2, r1
 8009578:	00d2      	lsls	r2, r2, #3
 800957a:	189b      	adds	r3, r3, r2
 800957c:	681d      	ldr	r5, [r3, #0]
 800957e:	685e      	ldr	r6, [r3, #4]
 8009580:	2302      	movs	r3, #2
 8009582:	113c      	asrs	r4, r7, #4
 8009584:	930e      	str	r3, [sp, #56]	; 0x38
 8009586:	06e3      	lsls	r3, r4, #27
 8009588:	d50b      	bpl.n	80095a2 <_dtoa_r+0x292>
 800958a:	4b3d      	ldr	r3, [pc, #244]	; (8009680 <_dtoa_r+0x370>)
 800958c:	400c      	ands	r4, r1
 800958e:	6a1a      	ldr	r2, [r3, #32]
 8009590:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009592:	9812      	ldr	r0, [sp, #72]	; 0x48
 8009594:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8009596:	f7f8 fa4f 	bl	8001a38 <__aeabi_ddiv>
 800959a:	2303      	movs	r3, #3
 800959c:	9006      	str	r0, [sp, #24]
 800959e:	9107      	str	r1, [sp, #28]
 80095a0:	930e      	str	r3, [sp, #56]	; 0x38
 80095a2:	2300      	movs	r3, #0
 80095a4:	e03a      	b.n	800961c <_dtoa_r+0x30c>
 80095a6:	2301      	movs	r3, #1
 80095a8:	930d      	str	r3, [sp, #52]	; 0x34
 80095aa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80095ac:	18fb      	adds	r3, r7, r3
 80095ae:	930c      	str	r3, [sp, #48]	; 0x30
 80095b0:	3301      	adds	r3, #1
 80095b2:	9309      	str	r3, [sp, #36]	; 0x24
 80095b4:	2b00      	cmp	r3, #0
 80095b6:	dcbb      	bgt.n	8009530 <_dtoa_r+0x220>
 80095b8:	2301      	movs	r3, #1
 80095ba:	e7b9      	b.n	8009530 <_dtoa_r+0x220>
 80095bc:	2300      	movs	r3, #0
 80095be:	e7b1      	b.n	8009524 <_dtoa_r+0x214>
 80095c0:	2300      	movs	r3, #0
 80095c2:	e7f1      	b.n	80095a8 <_dtoa_r+0x298>
 80095c4:	2300      	movs	r3, #0
 80095c6:	940d      	str	r4, [sp, #52]	; 0x34
 80095c8:	9320      	str	r3, [sp, #128]	; 0x80
 80095ca:	3b01      	subs	r3, #1
 80095cc:	2200      	movs	r2, #0
 80095ce:	930c      	str	r3, [sp, #48]	; 0x30
 80095d0:	9309      	str	r3, [sp, #36]	; 0x24
 80095d2:	3313      	adds	r3, #19
 80095d4:	9221      	str	r2, [sp, #132]	; 0x84
 80095d6:	e7ab      	b.n	8009530 <_dtoa_r+0x220>
 80095d8:	2301      	movs	r3, #1
 80095da:	930d      	str	r3, [sp, #52]	; 0x34
 80095dc:	3b02      	subs	r3, #2
 80095de:	e7f5      	b.n	80095cc <_dtoa_r+0x2bc>
 80095e0:	2301      	movs	r3, #1
 80095e2:	930c      	str	r3, [sp, #48]	; 0x30
 80095e4:	9309      	str	r3, [sp, #36]	; 0x24
 80095e6:	001a      	movs	r2, r3
 80095e8:	e7f4      	b.n	80095d4 <_dtoa_r+0x2c4>
 80095ea:	3101      	adds	r1, #1
 80095ec:	6069      	str	r1, [r5, #4]
 80095ee:	0052      	lsls	r2, r2, #1
 80095f0:	e7a3      	b.n	800953a <_dtoa_r+0x22a>
 80095f2:	2301      	movs	r3, #1
 80095f4:	421c      	tst	r4, r3
 80095f6:	d00e      	beq.n	8009616 <_dtoa_r+0x306>
 80095f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80095fa:	4a21      	ldr	r2, [pc, #132]	; (8009680 <_dtoa_r+0x370>)
 80095fc:	3301      	adds	r3, #1
 80095fe:	930e      	str	r3, [sp, #56]	; 0x38
 8009600:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009602:	0028      	movs	r0, r5
 8009604:	00db      	lsls	r3, r3, #3
 8009606:	189b      	adds	r3, r3, r2
 8009608:	0031      	movs	r1, r6
 800960a:	681a      	ldr	r2, [r3, #0]
 800960c:	685b      	ldr	r3, [r3, #4]
 800960e:	f7f8 fe1d 	bl	800224c <__aeabi_dmul>
 8009612:	0005      	movs	r5, r0
 8009614:	000e      	movs	r6, r1
 8009616:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009618:	1064      	asrs	r4, r4, #1
 800961a:	3301      	adds	r3, #1
 800961c:	9310      	str	r3, [sp, #64]	; 0x40
 800961e:	2c00      	cmp	r4, #0
 8009620:	d1e7      	bne.n	80095f2 <_dtoa_r+0x2e2>
 8009622:	9806      	ldr	r0, [sp, #24]
 8009624:	9907      	ldr	r1, [sp, #28]
 8009626:	002a      	movs	r2, r5
 8009628:	0033      	movs	r3, r6
 800962a:	f7f8 fa05 	bl	8001a38 <__aeabi_ddiv>
 800962e:	9006      	str	r0, [sp, #24]
 8009630:	9107      	str	r1, [sp, #28]
 8009632:	e042      	b.n	80096ba <_dtoa_r+0x3aa>
 8009634:	7ff00000 	.word	0x7ff00000
 8009638:	0000270f 	.word	0x0000270f
 800963c:	0800d89c 	.word	0x0800d89c
 8009640:	0800d89f 	.word	0x0800d89f
 8009644:	0800db34 	.word	0x0800db34
 8009648:	0800db35 	.word	0x0800db35
 800964c:	3ff00000 	.word	0x3ff00000
 8009650:	fffffc01 	.word	0xfffffc01
 8009654:	3ff80000 	.word	0x3ff80000
 8009658:	636f4361 	.word	0x636f4361
 800965c:	3fd287a7 	.word	0x3fd287a7
 8009660:	8b60c8b3 	.word	0x8b60c8b3
 8009664:	3fc68a28 	.word	0x3fc68a28
 8009668:	509f79fb 	.word	0x509f79fb
 800966c:	3fd34413 	.word	0x3fd34413
 8009670:	0800d938 	.word	0x0800d938
 8009674:	00000432 	.word	0x00000432
 8009678:	00000412 	.word	0x00000412
 800967c:	fe100000 	.word	0xfe100000
 8009680:	0800d910 	.word	0x0800d910
 8009684:	2302      	movs	r3, #2
 8009686:	930e      	str	r3, [sp, #56]	; 0x38
 8009688:	2f00      	cmp	r7, #0
 800968a:	d016      	beq.n	80096ba <_dtoa_r+0x3aa>
 800968c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800968e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8009690:	427c      	negs	r4, r7
 8009692:	330d      	adds	r3, #13
 8009694:	4023      	ands	r3, r4
 8009696:	4ace      	ldr	r2, [pc, #824]	; (80099d0 <_dtoa_r+0x6c0>)
 8009698:	00db      	lsls	r3, r3, #3
 800969a:	18d3      	adds	r3, r2, r3
 800969c:	681a      	ldr	r2, [r3, #0]
 800969e:	685b      	ldr	r3, [r3, #4]
 80096a0:	f7f8 fdd4 	bl	800224c <__aeabi_dmul>
 80096a4:	2300      	movs	r3, #0
 80096a6:	2601      	movs	r6, #1
 80096a8:	001d      	movs	r5, r3
 80096aa:	9006      	str	r0, [sp, #24]
 80096ac:	9107      	str	r1, [sp, #28]
 80096ae:	1124      	asrs	r4, r4, #4
 80096b0:	2c00      	cmp	r4, #0
 80096b2:	d000      	beq.n	80096b6 <_dtoa_r+0x3a6>
 80096b4:	e08c      	b.n	80097d0 <_dtoa_r+0x4c0>
 80096b6:	2b00      	cmp	r3, #0
 80096b8:	d1b9      	bne.n	800962e <_dtoa_r+0x31e>
 80096ba:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80096bc:	2b00      	cmp	r3, #0
 80096be:	d100      	bne.n	80096c2 <_dtoa_r+0x3b2>
 80096c0:	e096      	b.n	80097f0 <_dtoa_r+0x4e0>
 80096c2:	9c06      	ldr	r4, [sp, #24]
 80096c4:	9d07      	ldr	r5, [sp, #28]
 80096c6:	2200      	movs	r2, #0
 80096c8:	4bc2      	ldr	r3, [pc, #776]	; (80099d4 <_dtoa_r+0x6c4>)
 80096ca:	0020      	movs	r0, r4
 80096cc:	0029      	movs	r1, r5
 80096ce:	f7f6 fecd 	bl	800046c <__aeabi_dcmplt>
 80096d2:	2800      	cmp	r0, #0
 80096d4:	d100      	bne.n	80096d8 <_dtoa_r+0x3c8>
 80096d6:	e08b      	b.n	80097f0 <_dtoa_r+0x4e0>
 80096d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80096da:	2b00      	cmp	r3, #0
 80096dc:	d100      	bne.n	80096e0 <_dtoa_r+0x3d0>
 80096de:	e087      	b.n	80097f0 <_dtoa_r+0x4e0>
 80096e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80096e2:	2b00      	cmp	r3, #0
 80096e4:	dd41      	ble.n	800976a <_dtoa_r+0x45a>
 80096e6:	4bbc      	ldr	r3, [pc, #752]	; (80099d8 <_dtoa_r+0x6c8>)
 80096e8:	2200      	movs	r2, #0
 80096ea:	0020      	movs	r0, r4
 80096ec:	0029      	movs	r1, r5
 80096ee:	f7f8 fdad 	bl	800224c <__aeabi_dmul>
 80096f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80096f4:	9006      	str	r0, [sp, #24]
 80096f6:	9107      	str	r1, [sp, #28]
 80096f8:	3301      	adds	r3, #1
 80096fa:	930e      	str	r3, [sp, #56]	; 0x38
 80096fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80096fe:	1e7e      	subs	r6, r7, #1
 8009700:	980e      	ldr	r0, [sp, #56]	; 0x38
 8009702:	9310      	str	r3, [sp, #64]	; 0x40
 8009704:	f7f9 fbae 	bl	8002e64 <__aeabi_i2d>
 8009708:	9a06      	ldr	r2, [sp, #24]
 800970a:	9b07      	ldr	r3, [sp, #28]
 800970c:	f7f8 fd9e 	bl	800224c <__aeabi_dmul>
 8009710:	2200      	movs	r2, #0
 8009712:	4bb2      	ldr	r3, [pc, #712]	; (80099dc <_dtoa_r+0x6cc>)
 8009714:	f7f7 fe74 	bl	8001400 <__aeabi_dadd>
 8009718:	4ab1      	ldr	r2, [pc, #708]	; (80099e0 <_dtoa_r+0x6d0>)
 800971a:	900e      	str	r0, [sp, #56]	; 0x38
 800971c:	910f      	str	r1, [sp, #60]	; 0x3c
 800971e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8009720:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8009722:	4694      	mov	ip, r2
 8009724:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009726:	4463      	add	r3, ip
 8009728:	9315      	str	r3, [sp, #84]	; 0x54
 800972a:	001d      	movs	r5, r3
 800972c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800972e:	2b00      	cmp	r3, #0
 8009730:	d161      	bne.n	80097f6 <_dtoa_r+0x4e6>
 8009732:	9806      	ldr	r0, [sp, #24]
 8009734:	9907      	ldr	r1, [sp, #28]
 8009736:	2200      	movs	r2, #0
 8009738:	4baa      	ldr	r3, [pc, #680]	; (80099e4 <_dtoa_r+0x6d4>)
 800973a:	f7f8 fff9 	bl	8002730 <__aeabi_dsub>
 800973e:	0022      	movs	r2, r4
 8009740:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8009742:	9006      	str	r0, [sp, #24]
 8009744:	9107      	str	r1, [sp, #28]
 8009746:	f7f6 fea5 	bl	8000494 <__aeabi_dcmpgt>
 800974a:	2800      	cmp	r0, #0
 800974c:	d000      	beq.n	8009750 <_dtoa_r+0x440>
 800974e:	e2a8      	b.n	8009ca2 <_dtoa_r+0x992>
 8009750:	48a5      	ldr	r0, [pc, #660]	; (80099e8 <_dtoa_r+0x6d8>)
 8009752:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8009754:	4684      	mov	ip, r0
 8009756:	4461      	add	r1, ip
 8009758:	000b      	movs	r3, r1
 800975a:	9806      	ldr	r0, [sp, #24]
 800975c:	9907      	ldr	r1, [sp, #28]
 800975e:	0022      	movs	r2, r4
 8009760:	f7f6 fe84 	bl	800046c <__aeabi_dcmplt>
 8009764:	2800      	cmp	r0, #0
 8009766:	d000      	beq.n	800976a <_dtoa_r+0x45a>
 8009768:	e295      	b.n	8009c96 <_dtoa_r+0x986>
 800976a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800976c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800976e:	9306      	str	r3, [sp, #24]
 8009770:	9407      	str	r4, [sp, #28]
 8009772:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8009774:	2b00      	cmp	r3, #0
 8009776:	da00      	bge.n	800977a <_dtoa_r+0x46a>
 8009778:	e15c      	b.n	8009a34 <_dtoa_r+0x724>
 800977a:	2f0e      	cmp	r7, #14
 800977c:	dd00      	ble.n	8009780 <_dtoa_r+0x470>
 800977e:	e159      	b.n	8009a34 <_dtoa_r+0x724>
 8009780:	4b93      	ldr	r3, [pc, #588]	; (80099d0 <_dtoa_r+0x6c0>)
 8009782:	00fa      	lsls	r2, r7, #3
 8009784:	189b      	adds	r3, r3, r2
 8009786:	685c      	ldr	r4, [r3, #4]
 8009788:	681b      	ldr	r3, [r3, #0]
 800978a:	9304      	str	r3, [sp, #16]
 800978c:	9405      	str	r4, [sp, #20]
 800978e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8009790:	2b00      	cmp	r3, #0
 8009792:	db00      	blt.n	8009796 <_dtoa_r+0x486>
 8009794:	e0d8      	b.n	8009948 <_dtoa_r+0x638>
 8009796:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009798:	2b00      	cmp	r3, #0
 800979a:	dd00      	ble.n	800979e <_dtoa_r+0x48e>
 800979c:	e0d4      	b.n	8009948 <_dtoa_r+0x638>
 800979e:	d000      	beq.n	80097a2 <_dtoa_r+0x492>
 80097a0:	e27d      	b.n	8009c9e <_dtoa_r+0x98e>
 80097a2:	9804      	ldr	r0, [sp, #16]
 80097a4:	9905      	ldr	r1, [sp, #20]
 80097a6:	2200      	movs	r2, #0
 80097a8:	4b8e      	ldr	r3, [pc, #568]	; (80099e4 <_dtoa_r+0x6d4>)
 80097aa:	f7f8 fd4f 	bl	800224c <__aeabi_dmul>
 80097ae:	9a06      	ldr	r2, [sp, #24]
 80097b0:	9b07      	ldr	r3, [sp, #28]
 80097b2:	f7f6 fe79 	bl	80004a8 <__aeabi_dcmpge>
 80097b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097b8:	9304      	str	r3, [sp, #16]
 80097ba:	001e      	movs	r6, r3
 80097bc:	2800      	cmp	r0, #0
 80097be:	d000      	beq.n	80097c2 <_dtoa_r+0x4b2>
 80097c0:	e24f      	b.n	8009c62 <_dtoa_r+0x952>
 80097c2:	9b08      	ldr	r3, [sp, #32]
 80097c4:	9a08      	ldr	r2, [sp, #32]
 80097c6:	1c5d      	adds	r5, r3, #1
 80097c8:	2331      	movs	r3, #49	; 0x31
 80097ca:	3701      	adds	r7, #1
 80097cc:	7013      	strb	r3, [r2, #0]
 80097ce:	e24b      	b.n	8009c68 <_dtoa_r+0x958>
 80097d0:	4234      	tst	r4, r6
 80097d2:	d00a      	beq.n	80097ea <_dtoa_r+0x4da>
 80097d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80097d6:	4a85      	ldr	r2, [pc, #532]	; (80099ec <_dtoa_r+0x6dc>)
 80097d8:	3301      	adds	r3, #1
 80097da:	930e      	str	r3, [sp, #56]	; 0x38
 80097dc:	00eb      	lsls	r3, r5, #3
 80097de:	189b      	adds	r3, r3, r2
 80097e0:	681a      	ldr	r2, [r3, #0]
 80097e2:	685b      	ldr	r3, [r3, #4]
 80097e4:	f7f8 fd32 	bl	800224c <__aeabi_dmul>
 80097e8:	0033      	movs	r3, r6
 80097ea:	1064      	asrs	r4, r4, #1
 80097ec:	3501      	adds	r5, #1
 80097ee:	e75f      	b.n	80096b0 <_dtoa_r+0x3a0>
 80097f0:	003e      	movs	r6, r7
 80097f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097f4:	e784      	b.n	8009700 <_dtoa_r+0x3f0>
 80097f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80097f8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80097fa:	1e5a      	subs	r2, r3, #1
 80097fc:	4b74      	ldr	r3, [pc, #464]	; (80099d0 <_dtoa_r+0x6c0>)
 80097fe:	00d2      	lsls	r2, r2, #3
 8009800:	189b      	adds	r3, r3, r2
 8009802:	681a      	ldr	r2, [r3, #0]
 8009804:	685b      	ldr	r3, [r3, #4]
 8009806:	2900      	cmp	r1, #0
 8009808:	d049      	beq.n	800989e <_dtoa_r+0x58e>
 800980a:	2000      	movs	r0, #0
 800980c:	4978      	ldr	r1, [pc, #480]	; (80099f0 <_dtoa_r+0x6e0>)
 800980e:	f7f8 f913 	bl	8001a38 <__aeabi_ddiv>
 8009812:	002b      	movs	r3, r5
 8009814:	0022      	movs	r2, r4
 8009816:	f7f8 ff8b 	bl	8002730 <__aeabi_dsub>
 800981a:	9b08      	ldr	r3, [sp, #32]
 800981c:	900e      	str	r0, [sp, #56]	; 0x38
 800981e:	910f      	str	r1, [sp, #60]	; 0x3c
 8009820:	9315      	str	r3, [sp, #84]	; 0x54
 8009822:	9806      	ldr	r0, [sp, #24]
 8009824:	9907      	ldr	r1, [sp, #28]
 8009826:	f7f9 fae7 	bl	8002df8 <__aeabi_d2iz>
 800982a:	0004      	movs	r4, r0
 800982c:	f7f9 fb1a 	bl	8002e64 <__aeabi_i2d>
 8009830:	0002      	movs	r2, r0
 8009832:	000b      	movs	r3, r1
 8009834:	9806      	ldr	r0, [sp, #24]
 8009836:	9907      	ldr	r1, [sp, #28]
 8009838:	f7f8 ff7a 	bl	8002730 <__aeabi_dsub>
 800983c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800983e:	3430      	adds	r4, #48	; 0x30
 8009840:	1c5d      	adds	r5, r3, #1
 8009842:	701c      	strb	r4, [r3, #0]
 8009844:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8009846:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009848:	9006      	str	r0, [sp, #24]
 800984a:	9107      	str	r1, [sp, #28]
 800984c:	f7f6 fe0e 	bl	800046c <__aeabi_dcmplt>
 8009850:	2800      	cmp	r0, #0
 8009852:	d16c      	bne.n	800992e <_dtoa_r+0x61e>
 8009854:	9a06      	ldr	r2, [sp, #24]
 8009856:	9b07      	ldr	r3, [sp, #28]
 8009858:	2000      	movs	r0, #0
 800985a:	495e      	ldr	r1, [pc, #376]	; (80099d4 <_dtoa_r+0x6c4>)
 800985c:	f7f8 ff68 	bl	8002730 <__aeabi_dsub>
 8009860:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8009862:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009864:	f7f6 fe02 	bl	800046c <__aeabi_dcmplt>
 8009868:	2800      	cmp	r0, #0
 800986a:	d000      	beq.n	800986e <_dtoa_r+0x55e>
 800986c:	e0c3      	b.n	80099f6 <_dtoa_r+0x6e6>
 800986e:	9b08      	ldr	r3, [sp, #32]
 8009870:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8009872:	1aeb      	subs	r3, r5, r3
 8009874:	429a      	cmp	r2, r3
 8009876:	dc00      	bgt.n	800987a <_dtoa_r+0x56a>
 8009878:	e777      	b.n	800976a <_dtoa_r+0x45a>
 800987a:	980e      	ldr	r0, [sp, #56]	; 0x38
 800987c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800987e:	2200      	movs	r2, #0
 8009880:	4b55      	ldr	r3, [pc, #340]	; (80099d8 <_dtoa_r+0x6c8>)
 8009882:	f7f8 fce3 	bl	800224c <__aeabi_dmul>
 8009886:	2200      	movs	r2, #0
 8009888:	900e      	str	r0, [sp, #56]	; 0x38
 800988a:	910f      	str	r1, [sp, #60]	; 0x3c
 800988c:	9806      	ldr	r0, [sp, #24]
 800988e:	9907      	ldr	r1, [sp, #28]
 8009890:	4b51      	ldr	r3, [pc, #324]	; (80099d8 <_dtoa_r+0x6c8>)
 8009892:	f7f8 fcdb 	bl	800224c <__aeabi_dmul>
 8009896:	9515      	str	r5, [sp, #84]	; 0x54
 8009898:	9006      	str	r0, [sp, #24]
 800989a:	9107      	str	r1, [sp, #28]
 800989c:	e7c1      	b.n	8009822 <_dtoa_r+0x512>
 800989e:	0020      	movs	r0, r4
 80098a0:	0029      	movs	r1, r5
 80098a2:	f7f8 fcd3 	bl	800224c <__aeabi_dmul>
 80098a6:	9c08      	ldr	r4, [sp, #32]
 80098a8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80098aa:	0023      	movs	r3, r4
 80098ac:	4694      	mov	ip, r2
 80098ae:	900e      	str	r0, [sp, #56]	; 0x38
 80098b0:	910f      	str	r1, [sp, #60]	; 0x3c
 80098b2:	4463      	add	r3, ip
 80098b4:	9315      	str	r3, [sp, #84]	; 0x54
 80098b6:	9806      	ldr	r0, [sp, #24]
 80098b8:	9907      	ldr	r1, [sp, #28]
 80098ba:	f7f9 fa9d 	bl	8002df8 <__aeabi_d2iz>
 80098be:	0005      	movs	r5, r0
 80098c0:	f7f9 fad0 	bl	8002e64 <__aeabi_i2d>
 80098c4:	000b      	movs	r3, r1
 80098c6:	0002      	movs	r2, r0
 80098c8:	9806      	ldr	r0, [sp, #24]
 80098ca:	9907      	ldr	r1, [sp, #28]
 80098cc:	f7f8 ff30 	bl	8002730 <__aeabi_dsub>
 80098d0:	3530      	adds	r5, #48	; 0x30
 80098d2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80098d4:	7025      	strb	r5, [r4, #0]
 80098d6:	3401      	adds	r4, #1
 80098d8:	9006      	str	r0, [sp, #24]
 80098da:	9107      	str	r1, [sp, #28]
 80098dc:	42a3      	cmp	r3, r4
 80098de:	d12a      	bne.n	8009936 <_dtoa_r+0x626>
 80098e0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80098e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80098e4:	9a08      	ldr	r2, [sp, #32]
 80098e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80098e8:	4694      	mov	ip, r2
 80098ea:	4463      	add	r3, ip
 80098ec:	2200      	movs	r2, #0
 80098ee:	001d      	movs	r5, r3
 80098f0:	4b3f      	ldr	r3, [pc, #252]	; (80099f0 <_dtoa_r+0x6e0>)
 80098f2:	f7f7 fd85 	bl	8001400 <__aeabi_dadd>
 80098f6:	0002      	movs	r2, r0
 80098f8:	000b      	movs	r3, r1
 80098fa:	9806      	ldr	r0, [sp, #24]
 80098fc:	9907      	ldr	r1, [sp, #28]
 80098fe:	f7f6 fdc9 	bl	8000494 <__aeabi_dcmpgt>
 8009902:	2800      	cmp	r0, #0
 8009904:	d000      	beq.n	8009908 <_dtoa_r+0x5f8>
 8009906:	e076      	b.n	80099f6 <_dtoa_r+0x6e6>
 8009908:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800990a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800990c:	2000      	movs	r0, #0
 800990e:	4938      	ldr	r1, [pc, #224]	; (80099f0 <_dtoa_r+0x6e0>)
 8009910:	f7f8 ff0e 	bl	8002730 <__aeabi_dsub>
 8009914:	0002      	movs	r2, r0
 8009916:	000b      	movs	r3, r1
 8009918:	9806      	ldr	r0, [sp, #24]
 800991a:	9907      	ldr	r1, [sp, #28]
 800991c:	f7f6 fda6 	bl	800046c <__aeabi_dcmplt>
 8009920:	2800      	cmp	r0, #0
 8009922:	d100      	bne.n	8009926 <_dtoa_r+0x616>
 8009924:	e721      	b.n	800976a <_dtoa_r+0x45a>
 8009926:	1e6b      	subs	r3, r5, #1
 8009928:	781a      	ldrb	r2, [r3, #0]
 800992a:	2a30      	cmp	r2, #48	; 0x30
 800992c:	d001      	beq.n	8009932 <_dtoa_r+0x622>
 800992e:	0037      	movs	r7, r6
 8009930:	e03f      	b.n	80099b2 <_dtoa_r+0x6a2>
 8009932:	001d      	movs	r5, r3
 8009934:	e7f7      	b.n	8009926 <_dtoa_r+0x616>
 8009936:	9806      	ldr	r0, [sp, #24]
 8009938:	9907      	ldr	r1, [sp, #28]
 800993a:	2200      	movs	r2, #0
 800993c:	4b26      	ldr	r3, [pc, #152]	; (80099d8 <_dtoa_r+0x6c8>)
 800993e:	f7f8 fc85 	bl	800224c <__aeabi_dmul>
 8009942:	9006      	str	r0, [sp, #24]
 8009944:	9107      	str	r1, [sp, #28]
 8009946:	e7b6      	b.n	80098b6 <_dtoa_r+0x5a6>
 8009948:	9e08      	ldr	r6, [sp, #32]
 800994a:	9a04      	ldr	r2, [sp, #16]
 800994c:	9b05      	ldr	r3, [sp, #20]
 800994e:	9806      	ldr	r0, [sp, #24]
 8009950:	9907      	ldr	r1, [sp, #28]
 8009952:	f7f8 f871 	bl	8001a38 <__aeabi_ddiv>
 8009956:	f7f9 fa4f 	bl	8002df8 <__aeabi_d2iz>
 800995a:	0004      	movs	r4, r0
 800995c:	f7f9 fa82 	bl	8002e64 <__aeabi_i2d>
 8009960:	9a04      	ldr	r2, [sp, #16]
 8009962:	9b05      	ldr	r3, [sp, #20]
 8009964:	f7f8 fc72 	bl	800224c <__aeabi_dmul>
 8009968:	0002      	movs	r2, r0
 800996a:	000b      	movs	r3, r1
 800996c:	9806      	ldr	r0, [sp, #24]
 800996e:	9907      	ldr	r1, [sp, #28]
 8009970:	f7f8 fede 	bl	8002730 <__aeabi_dsub>
 8009974:	0023      	movs	r3, r4
 8009976:	3330      	adds	r3, #48	; 0x30
 8009978:	7033      	strb	r3, [r6, #0]
 800997a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800997c:	9b08      	ldr	r3, [sp, #32]
 800997e:	1c75      	adds	r5, r6, #1
 8009980:	1aeb      	subs	r3, r5, r3
 8009982:	429a      	cmp	r2, r3
 8009984:	d148      	bne.n	8009a18 <_dtoa_r+0x708>
 8009986:	0002      	movs	r2, r0
 8009988:	000b      	movs	r3, r1
 800998a:	f7f7 fd39 	bl	8001400 <__aeabi_dadd>
 800998e:	9a04      	ldr	r2, [sp, #16]
 8009990:	9b05      	ldr	r3, [sp, #20]
 8009992:	9006      	str	r0, [sp, #24]
 8009994:	9107      	str	r1, [sp, #28]
 8009996:	f7f6 fd7d 	bl	8000494 <__aeabi_dcmpgt>
 800999a:	2800      	cmp	r0, #0
 800999c:	d12a      	bne.n	80099f4 <_dtoa_r+0x6e4>
 800999e:	9a04      	ldr	r2, [sp, #16]
 80099a0:	9b05      	ldr	r3, [sp, #20]
 80099a2:	9806      	ldr	r0, [sp, #24]
 80099a4:	9907      	ldr	r1, [sp, #28]
 80099a6:	f7f6 fd5b 	bl	8000460 <__aeabi_dcmpeq>
 80099aa:	2800      	cmp	r0, #0
 80099ac:	d001      	beq.n	80099b2 <_dtoa_r+0x6a2>
 80099ae:	07e3      	lsls	r3, r4, #31
 80099b0:	d420      	bmi.n	80099f4 <_dtoa_r+0x6e4>
 80099b2:	9903      	ldr	r1, [sp, #12]
 80099b4:	9802      	ldr	r0, [sp, #8]
 80099b6:	f000 fe22 	bl	800a5fe <_Bfree>
 80099ba:	2300      	movs	r3, #0
 80099bc:	702b      	strb	r3, [r5, #0]
 80099be:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80099c0:	3701      	adds	r7, #1
 80099c2:	601f      	str	r7, [r3, #0]
 80099c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80099c6:	2b00      	cmp	r3, #0
 80099c8:	d100      	bne.n	80099cc <_dtoa_r+0x6bc>
 80099ca:	e4e6      	b.n	800939a <_dtoa_r+0x8a>
 80099cc:	601d      	str	r5, [r3, #0]
 80099ce:	e4e4      	b.n	800939a <_dtoa_r+0x8a>
 80099d0:	0800d938 	.word	0x0800d938
 80099d4:	3ff00000 	.word	0x3ff00000
 80099d8:	40240000 	.word	0x40240000
 80099dc:	401c0000 	.word	0x401c0000
 80099e0:	fcc00000 	.word	0xfcc00000
 80099e4:	40140000 	.word	0x40140000
 80099e8:	7cc00000 	.word	0x7cc00000
 80099ec:	0800d910 	.word	0x0800d910
 80099f0:	3fe00000 	.word	0x3fe00000
 80099f4:	003e      	movs	r6, r7
 80099f6:	1e6b      	subs	r3, r5, #1
 80099f8:	781a      	ldrb	r2, [r3, #0]
 80099fa:	2a39      	cmp	r2, #57	; 0x39
 80099fc:	d106      	bne.n	8009a0c <_dtoa_r+0x6fc>
 80099fe:	9a08      	ldr	r2, [sp, #32]
 8009a00:	429a      	cmp	r2, r3
 8009a02:	d107      	bne.n	8009a14 <_dtoa_r+0x704>
 8009a04:	2330      	movs	r3, #48	; 0x30
 8009a06:	7013      	strb	r3, [r2, #0]
 8009a08:	0013      	movs	r3, r2
 8009a0a:	3601      	adds	r6, #1
 8009a0c:	781a      	ldrb	r2, [r3, #0]
 8009a0e:	3201      	adds	r2, #1
 8009a10:	701a      	strb	r2, [r3, #0]
 8009a12:	e78c      	b.n	800992e <_dtoa_r+0x61e>
 8009a14:	001d      	movs	r5, r3
 8009a16:	e7ee      	b.n	80099f6 <_dtoa_r+0x6e6>
 8009a18:	2200      	movs	r2, #0
 8009a1a:	4ba4      	ldr	r3, [pc, #656]	; (8009cac <_dtoa_r+0x99c>)
 8009a1c:	f7f8 fc16 	bl	800224c <__aeabi_dmul>
 8009a20:	2200      	movs	r2, #0
 8009a22:	2300      	movs	r3, #0
 8009a24:	9006      	str	r0, [sp, #24]
 8009a26:	9107      	str	r1, [sp, #28]
 8009a28:	002e      	movs	r6, r5
 8009a2a:	f7f6 fd19 	bl	8000460 <__aeabi_dcmpeq>
 8009a2e:	2800      	cmp	r0, #0
 8009a30:	d08b      	beq.n	800994a <_dtoa_r+0x63a>
 8009a32:	e7be      	b.n	80099b2 <_dtoa_r+0x6a2>
 8009a34:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8009a36:	2a00      	cmp	r2, #0
 8009a38:	d100      	bne.n	8009a3c <_dtoa_r+0x72c>
 8009a3a:	e0da      	b.n	8009bf2 <_dtoa_r+0x8e2>
 8009a3c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8009a3e:	2a01      	cmp	r2, #1
 8009a40:	dd00      	ble.n	8009a44 <_dtoa_r+0x734>
 8009a42:	e0bd      	b.n	8009bc0 <_dtoa_r+0x8b0>
 8009a44:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8009a46:	2a00      	cmp	r2, #0
 8009a48:	d100      	bne.n	8009a4c <_dtoa_r+0x73c>
 8009a4a:	e0b5      	b.n	8009bb8 <_dtoa_r+0x8a8>
 8009a4c:	4a98      	ldr	r2, [pc, #608]	; (8009cb0 <_dtoa_r+0x9a0>)
 8009a4e:	189b      	adds	r3, r3, r2
 8009a50:	9d04      	ldr	r5, [sp, #16]
 8009a52:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8009a54:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009a56:	2101      	movs	r1, #1
 8009a58:	18d2      	adds	r2, r2, r3
 8009a5a:	920a      	str	r2, [sp, #40]	; 0x28
 8009a5c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009a5e:	9802      	ldr	r0, [sp, #8]
 8009a60:	18d3      	adds	r3, r2, r3
 8009a62:	930b      	str	r3, [sp, #44]	; 0x2c
 8009a64:	f000 fe6b 	bl	800a73e <__i2b>
 8009a68:	0006      	movs	r6, r0
 8009a6a:	2c00      	cmp	r4, #0
 8009a6c:	dd0e      	ble.n	8009a8c <_dtoa_r+0x77c>
 8009a6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009a70:	2b00      	cmp	r3, #0
 8009a72:	dd0b      	ble.n	8009a8c <_dtoa_r+0x77c>
 8009a74:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009a76:	0023      	movs	r3, r4
 8009a78:	4294      	cmp	r4, r2
 8009a7a:	dd00      	ble.n	8009a7e <_dtoa_r+0x76e>
 8009a7c:	0013      	movs	r3, r2
 8009a7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009a80:	1ae4      	subs	r4, r4, r3
 8009a82:	1ad2      	subs	r2, r2, r3
 8009a84:	920a      	str	r2, [sp, #40]	; 0x28
 8009a86:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009a88:	1ad3      	subs	r3, r2, r3
 8009a8a:	930b      	str	r3, [sp, #44]	; 0x2c
 8009a8c:	9b04      	ldr	r3, [sp, #16]
 8009a8e:	2b00      	cmp	r3, #0
 8009a90:	d01f      	beq.n	8009ad2 <_dtoa_r+0x7c2>
 8009a92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009a94:	2b00      	cmp	r3, #0
 8009a96:	d100      	bne.n	8009a9a <_dtoa_r+0x78a>
 8009a98:	e0af      	b.n	8009bfa <_dtoa_r+0x8ea>
 8009a9a:	2d00      	cmp	r5, #0
 8009a9c:	d011      	beq.n	8009ac2 <_dtoa_r+0x7b2>
 8009a9e:	0031      	movs	r1, r6
 8009aa0:	002a      	movs	r2, r5
 8009aa2:	9802      	ldr	r0, [sp, #8]
 8009aa4:	f000 fee4 	bl	800a870 <__pow5mult>
 8009aa8:	9a03      	ldr	r2, [sp, #12]
 8009aaa:	0001      	movs	r1, r0
 8009aac:	0006      	movs	r6, r0
 8009aae:	9802      	ldr	r0, [sp, #8]
 8009ab0:	f000 fe4e 	bl	800a750 <__multiply>
 8009ab4:	9903      	ldr	r1, [sp, #12]
 8009ab6:	9010      	str	r0, [sp, #64]	; 0x40
 8009ab8:	9802      	ldr	r0, [sp, #8]
 8009aba:	f000 fda0 	bl	800a5fe <_Bfree>
 8009abe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009ac0:	9303      	str	r3, [sp, #12]
 8009ac2:	9b04      	ldr	r3, [sp, #16]
 8009ac4:	1b5a      	subs	r2, r3, r5
 8009ac6:	d004      	beq.n	8009ad2 <_dtoa_r+0x7c2>
 8009ac8:	9903      	ldr	r1, [sp, #12]
 8009aca:	9802      	ldr	r0, [sp, #8]
 8009acc:	f000 fed0 	bl	800a870 <__pow5mult>
 8009ad0:	9003      	str	r0, [sp, #12]
 8009ad2:	2101      	movs	r1, #1
 8009ad4:	9802      	ldr	r0, [sp, #8]
 8009ad6:	f000 fe32 	bl	800a73e <__i2b>
 8009ada:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009adc:	9004      	str	r0, [sp, #16]
 8009ade:	2b00      	cmp	r3, #0
 8009ae0:	d100      	bne.n	8009ae4 <_dtoa_r+0x7d4>
 8009ae2:	e1e3      	b.n	8009eac <_dtoa_r+0xb9c>
 8009ae4:	001a      	movs	r2, r3
 8009ae6:	0001      	movs	r1, r0
 8009ae8:	9802      	ldr	r0, [sp, #8]
 8009aea:	f000 fec1 	bl	800a870 <__pow5mult>
 8009aee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8009af0:	9004      	str	r0, [sp, #16]
 8009af2:	2b01      	cmp	r3, #1
 8009af4:	dd00      	ble.n	8009af8 <_dtoa_r+0x7e8>
 8009af6:	e082      	b.n	8009bfe <_dtoa_r+0x8ee>
 8009af8:	2500      	movs	r5, #0
 8009afa:	9b06      	ldr	r3, [sp, #24]
 8009afc:	42ab      	cmp	r3, r5
 8009afe:	d10e      	bne.n	8009b1e <_dtoa_r+0x80e>
 8009b00:	9b07      	ldr	r3, [sp, #28]
 8009b02:	031b      	lsls	r3, r3, #12
 8009b04:	42ab      	cmp	r3, r5
 8009b06:	d10a      	bne.n	8009b1e <_dtoa_r+0x80e>
 8009b08:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009b0a:	9a07      	ldr	r2, [sp, #28]
 8009b0c:	4213      	tst	r3, r2
 8009b0e:	d006      	beq.n	8009b1e <_dtoa_r+0x80e>
 8009b10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009b12:	3501      	adds	r5, #1
 8009b14:	3301      	adds	r3, #1
 8009b16:	930a      	str	r3, [sp, #40]	; 0x28
 8009b18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009b1a:	3301      	adds	r3, #1
 8009b1c:	930b      	str	r3, [sp, #44]	; 0x2c
 8009b1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009b20:	2001      	movs	r0, #1
 8009b22:	2b00      	cmp	r3, #0
 8009b24:	d16c      	bne.n	8009c00 <_dtoa_r+0x8f0>
 8009b26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009b28:	1818      	adds	r0, r3, r0
 8009b2a:	231f      	movs	r3, #31
 8009b2c:	4018      	ands	r0, r3
 8009b2e:	d07e      	beq.n	8009c2e <_dtoa_r+0x91e>
 8009b30:	3301      	adds	r3, #1
 8009b32:	1a1b      	subs	r3, r3, r0
 8009b34:	2b04      	cmp	r3, #4
 8009b36:	dd70      	ble.n	8009c1a <_dtoa_r+0x90a>
 8009b38:	231c      	movs	r3, #28
 8009b3a:	1a18      	subs	r0, r3, r0
 8009b3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009b3e:	1824      	adds	r4, r4, r0
 8009b40:	181b      	adds	r3, r3, r0
 8009b42:	930a      	str	r3, [sp, #40]	; 0x28
 8009b44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009b46:	181b      	adds	r3, r3, r0
 8009b48:	930b      	str	r3, [sp, #44]	; 0x2c
 8009b4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009b4c:	2b00      	cmp	r3, #0
 8009b4e:	dd05      	ble.n	8009b5c <_dtoa_r+0x84c>
 8009b50:	001a      	movs	r2, r3
 8009b52:	9903      	ldr	r1, [sp, #12]
 8009b54:	9802      	ldr	r0, [sp, #8]
 8009b56:	f000 fedd 	bl	800a914 <__lshift>
 8009b5a:	9003      	str	r0, [sp, #12]
 8009b5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009b5e:	2b00      	cmp	r3, #0
 8009b60:	dd05      	ble.n	8009b6e <_dtoa_r+0x85e>
 8009b62:	001a      	movs	r2, r3
 8009b64:	9904      	ldr	r1, [sp, #16]
 8009b66:	9802      	ldr	r0, [sp, #8]
 8009b68:	f000 fed4 	bl	800a914 <__lshift>
 8009b6c:	9004      	str	r0, [sp, #16]
 8009b6e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8009b70:	2b00      	cmp	r3, #0
 8009b72:	d05e      	beq.n	8009c32 <_dtoa_r+0x922>
 8009b74:	9904      	ldr	r1, [sp, #16]
 8009b76:	9803      	ldr	r0, [sp, #12]
 8009b78:	f000 ff1e 	bl	800a9b8 <__mcmp>
 8009b7c:	2800      	cmp	r0, #0
 8009b7e:	da58      	bge.n	8009c32 <_dtoa_r+0x922>
 8009b80:	2300      	movs	r3, #0
 8009b82:	220a      	movs	r2, #10
 8009b84:	9903      	ldr	r1, [sp, #12]
 8009b86:	9802      	ldr	r0, [sp, #8]
 8009b88:	f000 fd52 	bl	800a630 <__multadd>
 8009b8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009b8e:	3f01      	subs	r7, #1
 8009b90:	9003      	str	r0, [sp, #12]
 8009b92:	2b00      	cmp	r3, #0
 8009b94:	d100      	bne.n	8009b98 <_dtoa_r+0x888>
 8009b96:	e190      	b.n	8009eba <_dtoa_r+0xbaa>
 8009b98:	2300      	movs	r3, #0
 8009b9a:	0031      	movs	r1, r6
 8009b9c:	220a      	movs	r2, #10
 8009b9e:	9802      	ldr	r0, [sp, #8]
 8009ba0:	f000 fd46 	bl	800a630 <__multadd>
 8009ba4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009ba6:	0006      	movs	r6, r0
 8009ba8:	2b00      	cmp	r3, #0
 8009baa:	dd00      	ble.n	8009bae <_dtoa_r+0x89e>
 8009bac:	e088      	b.n	8009cc0 <_dtoa_r+0x9b0>
 8009bae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8009bb0:	2b02      	cmp	r3, #2
 8009bb2:	dc00      	bgt.n	8009bb6 <_dtoa_r+0x8a6>
 8009bb4:	e084      	b.n	8009cc0 <_dtoa_r+0x9b0>
 8009bb6:	e044      	b.n	8009c42 <_dtoa_r+0x932>
 8009bb8:	2336      	movs	r3, #54	; 0x36
 8009bba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8009bbc:	1a9b      	subs	r3, r3, r2
 8009bbe:	e747      	b.n	8009a50 <_dtoa_r+0x740>
 8009bc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009bc2:	1e5d      	subs	r5, r3, #1
 8009bc4:	9b04      	ldr	r3, [sp, #16]
 8009bc6:	42ab      	cmp	r3, r5
 8009bc8:	db08      	blt.n	8009bdc <_dtoa_r+0x8cc>
 8009bca:	1b5d      	subs	r5, r3, r5
 8009bcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009bce:	2b00      	cmp	r3, #0
 8009bd0:	da0c      	bge.n	8009bec <_dtoa_r+0x8dc>
 8009bd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009bd4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009bd6:	1a9c      	subs	r4, r3, r2
 8009bd8:	2300      	movs	r3, #0
 8009bda:	e73b      	b.n	8009a54 <_dtoa_r+0x744>
 8009bdc:	9b04      	ldr	r3, [sp, #16]
 8009bde:	9504      	str	r5, [sp, #16]
 8009be0:	1aea      	subs	r2, r5, r3
 8009be2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009be4:	2500      	movs	r5, #0
 8009be6:	189b      	adds	r3, r3, r2
 8009be8:	9311      	str	r3, [sp, #68]	; 0x44
 8009bea:	e7ef      	b.n	8009bcc <_dtoa_r+0x8bc>
 8009bec:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8009bee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009bf0:	e730      	b.n	8009a54 <_dtoa_r+0x744>
 8009bf2:	9d04      	ldr	r5, [sp, #16]
 8009bf4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8009bf6:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8009bf8:	e737      	b.n	8009a6a <_dtoa_r+0x75a>
 8009bfa:	9a04      	ldr	r2, [sp, #16]
 8009bfc:	e764      	b.n	8009ac8 <_dtoa_r+0x7b8>
 8009bfe:	2500      	movs	r5, #0
 8009c00:	9b04      	ldr	r3, [sp, #16]
 8009c02:	9a04      	ldr	r2, [sp, #16]
 8009c04:	691b      	ldr	r3, [r3, #16]
 8009c06:	9310      	str	r3, [sp, #64]	; 0x40
 8009c08:	3303      	adds	r3, #3
 8009c0a:	009b      	lsls	r3, r3, #2
 8009c0c:	18d3      	adds	r3, r2, r3
 8009c0e:	6858      	ldr	r0, [r3, #4]
 8009c10:	f000 fd4c 	bl	800a6ac <__hi0bits>
 8009c14:	2320      	movs	r3, #32
 8009c16:	1a18      	subs	r0, r3, r0
 8009c18:	e785      	b.n	8009b26 <_dtoa_r+0x816>
 8009c1a:	2b04      	cmp	r3, #4
 8009c1c:	d095      	beq.n	8009b4a <_dtoa_r+0x83a>
 8009c1e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009c20:	331c      	adds	r3, #28
 8009c22:	18d2      	adds	r2, r2, r3
 8009c24:	920a      	str	r2, [sp, #40]	; 0x28
 8009c26:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009c28:	18e4      	adds	r4, r4, r3
 8009c2a:	18d3      	adds	r3, r2, r3
 8009c2c:	e78c      	b.n	8009b48 <_dtoa_r+0x838>
 8009c2e:	0003      	movs	r3, r0
 8009c30:	e7f5      	b.n	8009c1e <_dtoa_r+0x90e>
 8009c32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009c34:	2b00      	cmp	r3, #0
 8009c36:	dc3d      	bgt.n	8009cb4 <_dtoa_r+0x9a4>
 8009c38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8009c3a:	2b02      	cmp	r3, #2
 8009c3c:	dd3a      	ble.n	8009cb4 <_dtoa_r+0x9a4>
 8009c3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009c40:	930c      	str	r3, [sp, #48]	; 0x30
 8009c42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009c44:	2b00      	cmp	r3, #0
 8009c46:	d10c      	bne.n	8009c62 <_dtoa_r+0x952>
 8009c48:	9904      	ldr	r1, [sp, #16]
 8009c4a:	2205      	movs	r2, #5
 8009c4c:	9802      	ldr	r0, [sp, #8]
 8009c4e:	f000 fcef 	bl	800a630 <__multadd>
 8009c52:	9004      	str	r0, [sp, #16]
 8009c54:	0001      	movs	r1, r0
 8009c56:	9803      	ldr	r0, [sp, #12]
 8009c58:	f000 feae 	bl	800a9b8 <__mcmp>
 8009c5c:	2800      	cmp	r0, #0
 8009c5e:	dd00      	ble.n	8009c62 <_dtoa_r+0x952>
 8009c60:	e5af      	b.n	80097c2 <_dtoa_r+0x4b2>
 8009c62:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8009c64:	9d08      	ldr	r5, [sp, #32]
 8009c66:	43df      	mvns	r7, r3
 8009c68:	2300      	movs	r3, #0
 8009c6a:	9309      	str	r3, [sp, #36]	; 0x24
 8009c6c:	9904      	ldr	r1, [sp, #16]
 8009c6e:	9802      	ldr	r0, [sp, #8]
 8009c70:	f000 fcc5 	bl	800a5fe <_Bfree>
 8009c74:	2e00      	cmp	r6, #0
 8009c76:	d100      	bne.n	8009c7a <_dtoa_r+0x96a>
 8009c78:	e69b      	b.n	80099b2 <_dtoa_r+0x6a2>
 8009c7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009c7c:	2b00      	cmp	r3, #0
 8009c7e:	d005      	beq.n	8009c8c <_dtoa_r+0x97c>
 8009c80:	42b3      	cmp	r3, r6
 8009c82:	d003      	beq.n	8009c8c <_dtoa_r+0x97c>
 8009c84:	0019      	movs	r1, r3
 8009c86:	9802      	ldr	r0, [sp, #8]
 8009c88:	f000 fcb9 	bl	800a5fe <_Bfree>
 8009c8c:	0031      	movs	r1, r6
 8009c8e:	9802      	ldr	r0, [sp, #8]
 8009c90:	f000 fcb5 	bl	800a5fe <_Bfree>
 8009c94:	e68d      	b.n	80099b2 <_dtoa_r+0x6a2>
 8009c96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009c98:	9304      	str	r3, [sp, #16]
 8009c9a:	001e      	movs	r6, r3
 8009c9c:	e7e1      	b.n	8009c62 <_dtoa_r+0x952>
 8009c9e:	2300      	movs	r3, #0
 8009ca0:	e7fa      	b.n	8009c98 <_dtoa_r+0x988>
 8009ca2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009ca4:	0037      	movs	r7, r6
 8009ca6:	9304      	str	r3, [sp, #16]
 8009ca8:	001e      	movs	r6, r3
 8009caa:	e58a      	b.n	80097c2 <_dtoa_r+0x4b2>
 8009cac:	40240000 	.word	0x40240000
 8009cb0:	00000433 	.word	0x00000433
 8009cb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009cb6:	2b00      	cmp	r3, #0
 8009cb8:	d100      	bne.n	8009cbc <_dtoa_r+0x9ac>
 8009cba:	e0b2      	b.n	8009e22 <_dtoa_r+0xb12>
 8009cbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009cbe:	930c      	str	r3, [sp, #48]	; 0x30
 8009cc0:	2c00      	cmp	r4, #0
 8009cc2:	dd05      	ble.n	8009cd0 <_dtoa_r+0x9c0>
 8009cc4:	0031      	movs	r1, r6
 8009cc6:	0022      	movs	r2, r4
 8009cc8:	9802      	ldr	r0, [sp, #8]
 8009cca:	f000 fe23 	bl	800a914 <__lshift>
 8009cce:	0006      	movs	r6, r0
 8009cd0:	0030      	movs	r0, r6
 8009cd2:	2d00      	cmp	r5, #0
 8009cd4:	d011      	beq.n	8009cfa <_dtoa_r+0x9ea>
 8009cd6:	6871      	ldr	r1, [r6, #4]
 8009cd8:	9802      	ldr	r0, [sp, #8]
 8009cda:	f000 fc58 	bl	800a58e <_Balloc>
 8009cde:	0031      	movs	r1, r6
 8009ce0:	0004      	movs	r4, r0
 8009ce2:	6933      	ldr	r3, [r6, #16]
 8009ce4:	310c      	adds	r1, #12
 8009ce6:	1c9a      	adds	r2, r3, #2
 8009ce8:	0092      	lsls	r2, r2, #2
 8009cea:	300c      	adds	r0, #12
 8009cec:	f7fd faec 	bl	80072c8 <memcpy>
 8009cf0:	2201      	movs	r2, #1
 8009cf2:	0021      	movs	r1, r4
 8009cf4:	9802      	ldr	r0, [sp, #8]
 8009cf6:	f000 fe0d 	bl	800a914 <__lshift>
 8009cfa:	9609      	str	r6, [sp, #36]	; 0x24
 8009cfc:	0006      	movs	r6, r0
 8009cfe:	9b08      	ldr	r3, [sp, #32]
 8009d00:	930a      	str	r3, [sp, #40]	; 0x28
 8009d02:	9904      	ldr	r1, [sp, #16]
 8009d04:	9803      	ldr	r0, [sp, #12]
 8009d06:	f7ff fa7d 	bl	8009204 <quorem>
 8009d0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009d0c:	900d      	str	r0, [sp, #52]	; 0x34
 8009d0e:	0004      	movs	r4, r0
 8009d10:	9803      	ldr	r0, [sp, #12]
 8009d12:	f000 fe51 	bl	800a9b8 <__mcmp>
 8009d16:	0032      	movs	r2, r6
 8009d18:	9010      	str	r0, [sp, #64]	; 0x40
 8009d1a:	9904      	ldr	r1, [sp, #16]
 8009d1c:	9802      	ldr	r0, [sp, #8]
 8009d1e:	f000 fe65 	bl	800a9ec <__mdiff>
 8009d22:	2301      	movs	r3, #1
 8009d24:	930b      	str	r3, [sp, #44]	; 0x2c
 8009d26:	68c3      	ldr	r3, [r0, #12]
 8009d28:	3430      	adds	r4, #48	; 0x30
 8009d2a:	0005      	movs	r5, r0
 8009d2c:	2b00      	cmp	r3, #0
 8009d2e:	d104      	bne.n	8009d3a <_dtoa_r+0xa2a>
 8009d30:	0001      	movs	r1, r0
 8009d32:	9803      	ldr	r0, [sp, #12]
 8009d34:	f000 fe40 	bl	800a9b8 <__mcmp>
 8009d38:	900b      	str	r0, [sp, #44]	; 0x2c
 8009d3a:	0029      	movs	r1, r5
 8009d3c:	9802      	ldr	r0, [sp, #8]
 8009d3e:	f000 fc5e 	bl	800a5fe <_Bfree>
 8009d42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009d44:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8009d46:	4313      	orrs	r3, r2
 8009d48:	d10e      	bne.n	8009d68 <_dtoa_r+0xa58>
 8009d4a:	9a06      	ldr	r2, [sp, #24]
 8009d4c:	3301      	adds	r3, #1
 8009d4e:	4213      	tst	r3, r2
 8009d50:	d10a      	bne.n	8009d68 <_dtoa_r+0xa58>
 8009d52:	2c39      	cmp	r4, #57	; 0x39
 8009d54:	d026      	beq.n	8009da4 <_dtoa_r+0xa94>
 8009d56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009d58:	2b00      	cmp	r3, #0
 8009d5a:	dd01      	ble.n	8009d60 <_dtoa_r+0xa50>
 8009d5c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8009d5e:	3431      	adds	r4, #49	; 0x31
 8009d60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009d62:	1c5d      	adds	r5, r3, #1
 8009d64:	701c      	strb	r4, [r3, #0]
 8009d66:	e781      	b.n	8009c6c <_dtoa_r+0x95c>
 8009d68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009d6a:	2b00      	cmp	r3, #0
 8009d6c:	db07      	blt.n	8009d7e <_dtoa_r+0xa6e>
 8009d6e:	001d      	movs	r5, r3
 8009d70:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8009d72:	431d      	orrs	r5, r3
 8009d74:	d122      	bne.n	8009dbc <_dtoa_r+0xaac>
 8009d76:	2301      	movs	r3, #1
 8009d78:	9a06      	ldr	r2, [sp, #24]
 8009d7a:	4213      	tst	r3, r2
 8009d7c:	d11e      	bne.n	8009dbc <_dtoa_r+0xaac>
 8009d7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009d80:	2b00      	cmp	r3, #0
 8009d82:	dded      	ble.n	8009d60 <_dtoa_r+0xa50>
 8009d84:	9903      	ldr	r1, [sp, #12]
 8009d86:	2201      	movs	r2, #1
 8009d88:	9802      	ldr	r0, [sp, #8]
 8009d8a:	f000 fdc3 	bl	800a914 <__lshift>
 8009d8e:	9904      	ldr	r1, [sp, #16]
 8009d90:	9003      	str	r0, [sp, #12]
 8009d92:	f000 fe11 	bl	800a9b8 <__mcmp>
 8009d96:	2800      	cmp	r0, #0
 8009d98:	dc02      	bgt.n	8009da0 <_dtoa_r+0xa90>
 8009d9a:	d1e1      	bne.n	8009d60 <_dtoa_r+0xa50>
 8009d9c:	07e3      	lsls	r3, r4, #31
 8009d9e:	d5df      	bpl.n	8009d60 <_dtoa_r+0xa50>
 8009da0:	2c39      	cmp	r4, #57	; 0x39
 8009da2:	d1db      	bne.n	8009d5c <_dtoa_r+0xa4c>
 8009da4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009da6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009da8:	1c5d      	adds	r5, r3, #1
 8009daa:	2339      	movs	r3, #57	; 0x39
 8009dac:	7013      	strb	r3, [r2, #0]
 8009dae:	1e6b      	subs	r3, r5, #1
 8009db0:	781a      	ldrb	r2, [r3, #0]
 8009db2:	2a39      	cmp	r2, #57	; 0x39
 8009db4:	d067      	beq.n	8009e86 <_dtoa_r+0xb76>
 8009db6:	3201      	adds	r2, #1
 8009db8:	701a      	strb	r2, [r3, #0]
 8009dba:	e757      	b.n	8009c6c <_dtoa_r+0x95c>
 8009dbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009dbe:	1c5d      	adds	r5, r3, #1
 8009dc0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009dc2:	2b00      	cmp	r3, #0
 8009dc4:	dd04      	ble.n	8009dd0 <_dtoa_r+0xac0>
 8009dc6:	2c39      	cmp	r4, #57	; 0x39
 8009dc8:	d0ec      	beq.n	8009da4 <_dtoa_r+0xa94>
 8009dca:	3401      	adds	r4, #1
 8009dcc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009dce:	e7c9      	b.n	8009d64 <_dtoa_r+0xa54>
 8009dd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009dd2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009dd4:	701c      	strb	r4, [r3, #0]
 8009dd6:	9b08      	ldr	r3, [sp, #32]
 8009dd8:	1aeb      	subs	r3, r5, r3
 8009dda:	4293      	cmp	r3, r2
 8009ddc:	d03e      	beq.n	8009e5c <_dtoa_r+0xb4c>
 8009dde:	2300      	movs	r3, #0
 8009de0:	220a      	movs	r2, #10
 8009de2:	9903      	ldr	r1, [sp, #12]
 8009de4:	9802      	ldr	r0, [sp, #8]
 8009de6:	f000 fc23 	bl	800a630 <__multadd>
 8009dea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009dec:	9003      	str	r0, [sp, #12]
 8009dee:	42b3      	cmp	r3, r6
 8009df0:	d109      	bne.n	8009e06 <_dtoa_r+0xaf6>
 8009df2:	2300      	movs	r3, #0
 8009df4:	220a      	movs	r2, #10
 8009df6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009df8:	9802      	ldr	r0, [sp, #8]
 8009dfa:	f000 fc19 	bl	800a630 <__multadd>
 8009dfe:	9009      	str	r0, [sp, #36]	; 0x24
 8009e00:	0006      	movs	r6, r0
 8009e02:	950a      	str	r5, [sp, #40]	; 0x28
 8009e04:	e77d      	b.n	8009d02 <_dtoa_r+0x9f2>
 8009e06:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009e08:	2300      	movs	r3, #0
 8009e0a:	220a      	movs	r2, #10
 8009e0c:	9802      	ldr	r0, [sp, #8]
 8009e0e:	f000 fc0f 	bl	800a630 <__multadd>
 8009e12:	2300      	movs	r3, #0
 8009e14:	9009      	str	r0, [sp, #36]	; 0x24
 8009e16:	220a      	movs	r2, #10
 8009e18:	0031      	movs	r1, r6
 8009e1a:	9802      	ldr	r0, [sp, #8]
 8009e1c:	f000 fc08 	bl	800a630 <__multadd>
 8009e20:	e7ee      	b.n	8009e00 <_dtoa_r+0xaf0>
 8009e22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009e24:	930c      	str	r3, [sp, #48]	; 0x30
 8009e26:	9b08      	ldr	r3, [sp, #32]
 8009e28:	9306      	str	r3, [sp, #24]
 8009e2a:	9904      	ldr	r1, [sp, #16]
 8009e2c:	9803      	ldr	r0, [sp, #12]
 8009e2e:	f7ff f9e9 	bl	8009204 <quorem>
 8009e32:	9b06      	ldr	r3, [sp, #24]
 8009e34:	3030      	adds	r0, #48	; 0x30
 8009e36:	1c5d      	adds	r5, r3, #1
 8009e38:	7018      	strb	r0, [r3, #0]
 8009e3a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009e3c:	9b08      	ldr	r3, [sp, #32]
 8009e3e:	0004      	movs	r4, r0
 8009e40:	1aeb      	subs	r3, r5, r3
 8009e42:	429a      	cmp	r2, r3
 8009e44:	dd08      	ble.n	8009e58 <_dtoa_r+0xb48>
 8009e46:	2300      	movs	r3, #0
 8009e48:	220a      	movs	r2, #10
 8009e4a:	9903      	ldr	r1, [sp, #12]
 8009e4c:	9802      	ldr	r0, [sp, #8]
 8009e4e:	f000 fbef 	bl	800a630 <__multadd>
 8009e52:	9506      	str	r5, [sp, #24]
 8009e54:	9003      	str	r0, [sp, #12]
 8009e56:	e7e8      	b.n	8009e2a <_dtoa_r+0xb1a>
 8009e58:	2300      	movs	r3, #0
 8009e5a:	9309      	str	r3, [sp, #36]	; 0x24
 8009e5c:	9903      	ldr	r1, [sp, #12]
 8009e5e:	2201      	movs	r2, #1
 8009e60:	9802      	ldr	r0, [sp, #8]
 8009e62:	f000 fd57 	bl	800a914 <__lshift>
 8009e66:	9904      	ldr	r1, [sp, #16]
 8009e68:	9003      	str	r0, [sp, #12]
 8009e6a:	f000 fda5 	bl	800a9b8 <__mcmp>
 8009e6e:	2800      	cmp	r0, #0
 8009e70:	dc9d      	bgt.n	8009dae <_dtoa_r+0xa9e>
 8009e72:	d101      	bne.n	8009e78 <_dtoa_r+0xb68>
 8009e74:	07e3      	lsls	r3, r4, #31
 8009e76:	d49a      	bmi.n	8009dae <_dtoa_r+0xa9e>
 8009e78:	1e6b      	subs	r3, r5, #1
 8009e7a:	781a      	ldrb	r2, [r3, #0]
 8009e7c:	2a30      	cmp	r2, #48	; 0x30
 8009e7e:	d000      	beq.n	8009e82 <_dtoa_r+0xb72>
 8009e80:	e6f4      	b.n	8009c6c <_dtoa_r+0x95c>
 8009e82:	001d      	movs	r5, r3
 8009e84:	e7f8      	b.n	8009e78 <_dtoa_r+0xb68>
 8009e86:	9a08      	ldr	r2, [sp, #32]
 8009e88:	429a      	cmp	r2, r3
 8009e8a:	d103      	bne.n	8009e94 <_dtoa_r+0xb84>
 8009e8c:	2331      	movs	r3, #49	; 0x31
 8009e8e:	3701      	adds	r7, #1
 8009e90:	7013      	strb	r3, [r2, #0]
 8009e92:	e6eb      	b.n	8009c6c <_dtoa_r+0x95c>
 8009e94:	001d      	movs	r5, r3
 8009e96:	e78a      	b.n	8009dae <_dtoa_r+0xa9e>
 8009e98:	4b0b      	ldr	r3, [pc, #44]	; (8009ec8 <_dtoa_r+0xbb8>)
 8009e9a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8009e9c:	9308      	str	r3, [sp, #32]
 8009e9e:	4b0b      	ldr	r3, [pc, #44]	; (8009ecc <_dtoa_r+0xbbc>)
 8009ea0:	2a00      	cmp	r2, #0
 8009ea2:	d001      	beq.n	8009ea8 <_dtoa_r+0xb98>
 8009ea4:	f7ff fa77 	bl	8009396 <_dtoa_r+0x86>
 8009ea8:	f7ff fa77 	bl	800939a <_dtoa_r+0x8a>
 8009eac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8009eae:	2b01      	cmp	r3, #1
 8009eb0:	dc00      	bgt.n	8009eb4 <_dtoa_r+0xba4>
 8009eb2:	e621      	b.n	8009af8 <_dtoa_r+0x7e8>
 8009eb4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8009eb6:	2001      	movs	r0, #1
 8009eb8:	e635      	b.n	8009b26 <_dtoa_r+0x816>
 8009eba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009ebc:	2b00      	cmp	r3, #0
 8009ebe:	dcb2      	bgt.n	8009e26 <_dtoa_r+0xb16>
 8009ec0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8009ec2:	2b02      	cmp	r3, #2
 8009ec4:	ddaf      	ble.n	8009e26 <_dtoa_r+0xb16>
 8009ec6:	e6bc      	b.n	8009c42 <_dtoa_r+0x932>
 8009ec8:	0800d893 	.word	0x0800d893
 8009ecc:	0800d89b 	.word	0x0800d89b

08009ed0 <__sflush_r>:
 8009ed0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009ed2:	898a      	ldrh	r2, [r1, #12]
 8009ed4:	0005      	movs	r5, r0
 8009ed6:	000c      	movs	r4, r1
 8009ed8:	0713      	lsls	r3, r2, #28
 8009eda:	d460      	bmi.n	8009f9e <__sflush_r+0xce>
 8009edc:	684b      	ldr	r3, [r1, #4]
 8009ede:	2b00      	cmp	r3, #0
 8009ee0:	dc04      	bgt.n	8009eec <__sflush_r+0x1c>
 8009ee2:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8009ee4:	2b00      	cmp	r3, #0
 8009ee6:	dc01      	bgt.n	8009eec <__sflush_r+0x1c>
 8009ee8:	2000      	movs	r0, #0
 8009eea:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009eec:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8009eee:	2f00      	cmp	r7, #0
 8009ef0:	d0fa      	beq.n	8009ee8 <__sflush_r+0x18>
 8009ef2:	2300      	movs	r3, #0
 8009ef4:	682e      	ldr	r6, [r5, #0]
 8009ef6:	602b      	str	r3, [r5, #0]
 8009ef8:	2380      	movs	r3, #128	; 0x80
 8009efa:	015b      	lsls	r3, r3, #5
 8009efc:	6a21      	ldr	r1, [r4, #32]
 8009efe:	401a      	ands	r2, r3
 8009f00:	d034      	beq.n	8009f6c <__sflush_r+0x9c>
 8009f02:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8009f04:	89a3      	ldrh	r3, [r4, #12]
 8009f06:	075b      	lsls	r3, r3, #29
 8009f08:	d506      	bpl.n	8009f18 <__sflush_r+0x48>
 8009f0a:	6863      	ldr	r3, [r4, #4]
 8009f0c:	1ac0      	subs	r0, r0, r3
 8009f0e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8009f10:	2b00      	cmp	r3, #0
 8009f12:	d001      	beq.n	8009f18 <__sflush_r+0x48>
 8009f14:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009f16:	1ac0      	subs	r0, r0, r3
 8009f18:	0002      	movs	r2, r0
 8009f1a:	6a21      	ldr	r1, [r4, #32]
 8009f1c:	2300      	movs	r3, #0
 8009f1e:	0028      	movs	r0, r5
 8009f20:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8009f22:	47b8      	blx	r7
 8009f24:	89a1      	ldrh	r1, [r4, #12]
 8009f26:	1c43      	adds	r3, r0, #1
 8009f28:	d106      	bne.n	8009f38 <__sflush_r+0x68>
 8009f2a:	682b      	ldr	r3, [r5, #0]
 8009f2c:	2b1d      	cmp	r3, #29
 8009f2e:	d830      	bhi.n	8009f92 <__sflush_r+0xc2>
 8009f30:	4a2b      	ldr	r2, [pc, #172]	; (8009fe0 <__sflush_r+0x110>)
 8009f32:	40da      	lsrs	r2, r3
 8009f34:	07d3      	lsls	r3, r2, #31
 8009f36:	d52c      	bpl.n	8009f92 <__sflush_r+0xc2>
 8009f38:	2300      	movs	r3, #0
 8009f3a:	6063      	str	r3, [r4, #4]
 8009f3c:	6923      	ldr	r3, [r4, #16]
 8009f3e:	6023      	str	r3, [r4, #0]
 8009f40:	04cb      	lsls	r3, r1, #19
 8009f42:	d505      	bpl.n	8009f50 <__sflush_r+0x80>
 8009f44:	1c43      	adds	r3, r0, #1
 8009f46:	d102      	bne.n	8009f4e <__sflush_r+0x7e>
 8009f48:	682b      	ldr	r3, [r5, #0]
 8009f4a:	2b00      	cmp	r3, #0
 8009f4c:	d100      	bne.n	8009f50 <__sflush_r+0x80>
 8009f4e:	6560      	str	r0, [r4, #84]	; 0x54
 8009f50:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009f52:	602e      	str	r6, [r5, #0]
 8009f54:	2900      	cmp	r1, #0
 8009f56:	d0c7      	beq.n	8009ee8 <__sflush_r+0x18>
 8009f58:	0023      	movs	r3, r4
 8009f5a:	3344      	adds	r3, #68	; 0x44
 8009f5c:	4299      	cmp	r1, r3
 8009f5e:	d002      	beq.n	8009f66 <__sflush_r+0x96>
 8009f60:	0028      	movs	r0, r5
 8009f62:	f7fd f9c3 	bl	80072ec <_free_r>
 8009f66:	2000      	movs	r0, #0
 8009f68:	6360      	str	r0, [r4, #52]	; 0x34
 8009f6a:	e7be      	b.n	8009eea <__sflush_r+0x1a>
 8009f6c:	2301      	movs	r3, #1
 8009f6e:	0028      	movs	r0, r5
 8009f70:	47b8      	blx	r7
 8009f72:	1c43      	adds	r3, r0, #1
 8009f74:	d1c6      	bne.n	8009f04 <__sflush_r+0x34>
 8009f76:	682b      	ldr	r3, [r5, #0]
 8009f78:	2b00      	cmp	r3, #0
 8009f7a:	d0c3      	beq.n	8009f04 <__sflush_r+0x34>
 8009f7c:	2b1d      	cmp	r3, #29
 8009f7e:	d001      	beq.n	8009f84 <__sflush_r+0xb4>
 8009f80:	2b16      	cmp	r3, #22
 8009f82:	d101      	bne.n	8009f88 <__sflush_r+0xb8>
 8009f84:	602e      	str	r6, [r5, #0]
 8009f86:	e7af      	b.n	8009ee8 <__sflush_r+0x18>
 8009f88:	2340      	movs	r3, #64	; 0x40
 8009f8a:	89a2      	ldrh	r2, [r4, #12]
 8009f8c:	4313      	orrs	r3, r2
 8009f8e:	81a3      	strh	r3, [r4, #12]
 8009f90:	e7ab      	b.n	8009eea <__sflush_r+0x1a>
 8009f92:	2340      	movs	r3, #64	; 0x40
 8009f94:	430b      	orrs	r3, r1
 8009f96:	2001      	movs	r0, #1
 8009f98:	81a3      	strh	r3, [r4, #12]
 8009f9a:	4240      	negs	r0, r0
 8009f9c:	e7a5      	b.n	8009eea <__sflush_r+0x1a>
 8009f9e:	690f      	ldr	r7, [r1, #16]
 8009fa0:	2f00      	cmp	r7, #0
 8009fa2:	d0a1      	beq.n	8009ee8 <__sflush_r+0x18>
 8009fa4:	680b      	ldr	r3, [r1, #0]
 8009fa6:	600f      	str	r7, [r1, #0]
 8009fa8:	1bdb      	subs	r3, r3, r7
 8009faa:	9301      	str	r3, [sp, #4]
 8009fac:	2300      	movs	r3, #0
 8009fae:	0792      	lsls	r2, r2, #30
 8009fb0:	d100      	bne.n	8009fb4 <__sflush_r+0xe4>
 8009fb2:	694b      	ldr	r3, [r1, #20]
 8009fb4:	60a3      	str	r3, [r4, #8]
 8009fb6:	9b01      	ldr	r3, [sp, #4]
 8009fb8:	2b00      	cmp	r3, #0
 8009fba:	dc00      	bgt.n	8009fbe <__sflush_r+0xee>
 8009fbc:	e794      	b.n	8009ee8 <__sflush_r+0x18>
 8009fbe:	9b01      	ldr	r3, [sp, #4]
 8009fc0:	003a      	movs	r2, r7
 8009fc2:	6a21      	ldr	r1, [r4, #32]
 8009fc4:	0028      	movs	r0, r5
 8009fc6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8009fc8:	47b0      	blx	r6
 8009fca:	2800      	cmp	r0, #0
 8009fcc:	dc03      	bgt.n	8009fd6 <__sflush_r+0x106>
 8009fce:	2340      	movs	r3, #64	; 0x40
 8009fd0:	89a2      	ldrh	r2, [r4, #12]
 8009fd2:	4313      	orrs	r3, r2
 8009fd4:	e7df      	b.n	8009f96 <__sflush_r+0xc6>
 8009fd6:	9b01      	ldr	r3, [sp, #4]
 8009fd8:	183f      	adds	r7, r7, r0
 8009fda:	1a1b      	subs	r3, r3, r0
 8009fdc:	9301      	str	r3, [sp, #4]
 8009fde:	e7ea      	b.n	8009fb6 <__sflush_r+0xe6>
 8009fe0:	20400001 	.word	0x20400001

08009fe4 <_fflush_r>:
 8009fe4:	690b      	ldr	r3, [r1, #16]
 8009fe6:	b570      	push	{r4, r5, r6, lr}
 8009fe8:	0005      	movs	r5, r0
 8009fea:	000c      	movs	r4, r1
 8009fec:	2b00      	cmp	r3, #0
 8009fee:	d101      	bne.n	8009ff4 <_fflush_r+0x10>
 8009ff0:	2000      	movs	r0, #0
 8009ff2:	bd70      	pop	{r4, r5, r6, pc}
 8009ff4:	2800      	cmp	r0, #0
 8009ff6:	d004      	beq.n	800a002 <_fflush_r+0x1e>
 8009ff8:	6983      	ldr	r3, [r0, #24]
 8009ffa:	2b00      	cmp	r3, #0
 8009ffc:	d101      	bne.n	800a002 <_fflush_r+0x1e>
 8009ffe:	f000 f85f 	bl	800a0c0 <__sinit>
 800a002:	4b0b      	ldr	r3, [pc, #44]	; (800a030 <_fflush_r+0x4c>)
 800a004:	429c      	cmp	r4, r3
 800a006:	d109      	bne.n	800a01c <_fflush_r+0x38>
 800a008:	686c      	ldr	r4, [r5, #4]
 800a00a:	220c      	movs	r2, #12
 800a00c:	5ea3      	ldrsh	r3, [r4, r2]
 800a00e:	2b00      	cmp	r3, #0
 800a010:	d0ee      	beq.n	8009ff0 <_fflush_r+0xc>
 800a012:	0021      	movs	r1, r4
 800a014:	0028      	movs	r0, r5
 800a016:	f7ff ff5b 	bl	8009ed0 <__sflush_r>
 800a01a:	e7ea      	b.n	8009ff2 <_fflush_r+0xe>
 800a01c:	4b05      	ldr	r3, [pc, #20]	; (800a034 <_fflush_r+0x50>)
 800a01e:	429c      	cmp	r4, r3
 800a020:	d101      	bne.n	800a026 <_fflush_r+0x42>
 800a022:	68ac      	ldr	r4, [r5, #8]
 800a024:	e7f1      	b.n	800a00a <_fflush_r+0x26>
 800a026:	4b04      	ldr	r3, [pc, #16]	; (800a038 <_fflush_r+0x54>)
 800a028:	429c      	cmp	r4, r3
 800a02a:	d1ee      	bne.n	800a00a <_fflush_r+0x26>
 800a02c:	68ec      	ldr	r4, [r5, #12]
 800a02e:	e7ec      	b.n	800a00a <_fflush_r+0x26>
 800a030:	0800d8c0 	.word	0x0800d8c0
 800a034:	0800d8e0 	.word	0x0800d8e0
 800a038:	0800d8a0 	.word	0x0800d8a0

0800a03c <std>:
 800a03c:	2300      	movs	r3, #0
 800a03e:	b510      	push	{r4, lr}
 800a040:	0004      	movs	r4, r0
 800a042:	6003      	str	r3, [r0, #0]
 800a044:	6043      	str	r3, [r0, #4]
 800a046:	6083      	str	r3, [r0, #8]
 800a048:	8181      	strh	r1, [r0, #12]
 800a04a:	6643      	str	r3, [r0, #100]	; 0x64
 800a04c:	81c2      	strh	r2, [r0, #14]
 800a04e:	6103      	str	r3, [r0, #16]
 800a050:	6143      	str	r3, [r0, #20]
 800a052:	6183      	str	r3, [r0, #24]
 800a054:	0019      	movs	r1, r3
 800a056:	2208      	movs	r2, #8
 800a058:	305c      	adds	r0, #92	; 0x5c
 800a05a:	f7fd f93e 	bl	80072da <memset>
 800a05e:	4b05      	ldr	r3, [pc, #20]	; (800a074 <std+0x38>)
 800a060:	6224      	str	r4, [r4, #32]
 800a062:	6263      	str	r3, [r4, #36]	; 0x24
 800a064:	4b04      	ldr	r3, [pc, #16]	; (800a078 <std+0x3c>)
 800a066:	62a3      	str	r3, [r4, #40]	; 0x28
 800a068:	4b04      	ldr	r3, [pc, #16]	; (800a07c <std+0x40>)
 800a06a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a06c:	4b04      	ldr	r3, [pc, #16]	; (800a080 <std+0x44>)
 800a06e:	6323      	str	r3, [r4, #48]	; 0x30
 800a070:	bd10      	pop	{r4, pc}
 800a072:	46c0      	nop			; (mov r8, r8)
 800a074:	0800b169 	.word	0x0800b169
 800a078:	0800b195 	.word	0x0800b195
 800a07c:	0800b1cd 	.word	0x0800b1cd
 800a080:	0800b1f9 	.word	0x0800b1f9

0800a084 <_cleanup_r>:
 800a084:	b510      	push	{r4, lr}
 800a086:	4902      	ldr	r1, [pc, #8]	; (800a090 <_cleanup_r+0xc>)
 800a088:	f000 f88c 	bl	800a1a4 <_fwalk_reent>
 800a08c:	bd10      	pop	{r4, pc}
 800a08e:	46c0      	nop			; (mov r8, r8)
 800a090:	08009fe5 	.word	0x08009fe5

0800a094 <__sfmoreglue>:
 800a094:	b570      	push	{r4, r5, r6, lr}
 800a096:	2568      	movs	r5, #104	; 0x68
 800a098:	1e4a      	subs	r2, r1, #1
 800a09a:	4355      	muls	r5, r2
 800a09c:	000e      	movs	r6, r1
 800a09e:	0029      	movs	r1, r5
 800a0a0:	3174      	adds	r1, #116	; 0x74
 800a0a2:	f7fd f96d 	bl	8007380 <_malloc_r>
 800a0a6:	1e04      	subs	r4, r0, #0
 800a0a8:	d008      	beq.n	800a0bc <__sfmoreglue+0x28>
 800a0aa:	2100      	movs	r1, #0
 800a0ac:	002a      	movs	r2, r5
 800a0ae:	6001      	str	r1, [r0, #0]
 800a0b0:	6046      	str	r6, [r0, #4]
 800a0b2:	300c      	adds	r0, #12
 800a0b4:	60a0      	str	r0, [r4, #8]
 800a0b6:	3268      	adds	r2, #104	; 0x68
 800a0b8:	f7fd f90f 	bl	80072da <memset>
 800a0bc:	0020      	movs	r0, r4
 800a0be:	bd70      	pop	{r4, r5, r6, pc}

0800a0c0 <__sinit>:
 800a0c0:	6983      	ldr	r3, [r0, #24]
 800a0c2:	b513      	push	{r0, r1, r4, lr}
 800a0c4:	0004      	movs	r4, r0
 800a0c6:	2b00      	cmp	r3, #0
 800a0c8:	d128      	bne.n	800a11c <__sinit+0x5c>
 800a0ca:	6483      	str	r3, [r0, #72]	; 0x48
 800a0cc:	64c3      	str	r3, [r0, #76]	; 0x4c
 800a0ce:	6503      	str	r3, [r0, #80]	; 0x50
 800a0d0:	4b13      	ldr	r3, [pc, #76]	; (800a120 <__sinit+0x60>)
 800a0d2:	4a14      	ldr	r2, [pc, #80]	; (800a124 <__sinit+0x64>)
 800a0d4:	681b      	ldr	r3, [r3, #0]
 800a0d6:	6282      	str	r2, [r0, #40]	; 0x28
 800a0d8:	9301      	str	r3, [sp, #4]
 800a0da:	4298      	cmp	r0, r3
 800a0dc:	d101      	bne.n	800a0e2 <__sinit+0x22>
 800a0de:	2301      	movs	r3, #1
 800a0e0:	6183      	str	r3, [r0, #24]
 800a0e2:	0020      	movs	r0, r4
 800a0e4:	f000 f820 	bl	800a128 <__sfp>
 800a0e8:	6060      	str	r0, [r4, #4]
 800a0ea:	0020      	movs	r0, r4
 800a0ec:	f000 f81c 	bl	800a128 <__sfp>
 800a0f0:	60a0      	str	r0, [r4, #8]
 800a0f2:	0020      	movs	r0, r4
 800a0f4:	f000 f818 	bl	800a128 <__sfp>
 800a0f8:	2200      	movs	r2, #0
 800a0fa:	60e0      	str	r0, [r4, #12]
 800a0fc:	2104      	movs	r1, #4
 800a0fe:	6860      	ldr	r0, [r4, #4]
 800a100:	f7ff ff9c 	bl	800a03c <std>
 800a104:	2201      	movs	r2, #1
 800a106:	2109      	movs	r1, #9
 800a108:	68a0      	ldr	r0, [r4, #8]
 800a10a:	f7ff ff97 	bl	800a03c <std>
 800a10e:	2202      	movs	r2, #2
 800a110:	2112      	movs	r1, #18
 800a112:	68e0      	ldr	r0, [r4, #12]
 800a114:	f7ff ff92 	bl	800a03c <std>
 800a118:	2301      	movs	r3, #1
 800a11a:	61a3      	str	r3, [r4, #24]
 800a11c:	bd13      	pop	{r0, r1, r4, pc}
 800a11e:	46c0      	nop			; (mov r8, r8)
 800a120:	0800d540 	.word	0x0800d540
 800a124:	0800a085 	.word	0x0800a085

0800a128 <__sfp>:
 800a128:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a12a:	4b1c      	ldr	r3, [pc, #112]	; (800a19c <__sfp+0x74>)
 800a12c:	0007      	movs	r7, r0
 800a12e:	681e      	ldr	r6, [r3, #0]
 800a130:	69b3      	ldr	r3, [r6, #24]
 800a132:	2b00      	cmp	r3, #0
 800a134:	d102      	bne.n	800a13c <__sfp+0x14>
 800a136:	0030      	movs	r0, r6
 800a138:	f7ff ffc2 	bl	800a0c0 <__sinit>
 800a13c:	3648      	adds	r6, #72	; 0x48
 800a13e:	68b4      	ldr	r4, [r6, #8]
 800a140:	6873      	ldr	r3, [r6, #4]
 800a142:	3b01      	subs	r3, #1
 800a144:	d504      	bpl.n	800a150 <__sfp+0x28>
 800a146:	6833      	ldr	r3, [r6, #0]
 800a148:	2b00      	cmp	r3, #0
 800a14a:	d007      	beq.n	800a15c <__sfp+0x34>
 800a14c:	6836      	ldr	r6, [r6, #0]
 800a14e:	e7f6      	b.n	800a13e <__sfp+0x16>
 800a150:	220c      	movs	r2, #12
 800a152:	5ea5      	ldrsh	r5, [r4, r2]
 800a154:	2d00      	cmp	r5, #0
 800a156:	d00d      	beq.n	800a174 <__sfp+0x4c>
 800a158:	3468      	adds	r4, #104	; 0x68
 800a15a:	e7f2      	b.n	800a142 <__sfp+0x1a>
 800a15c:	2104      	movs	r1, #4
 800a15e:	0038      	movs	r0, r7
 800a160:	f7ff ff98 	bl	800a094 <__sfmoreglue>
 800a164:	6030      	str	r0, [r6, #0]
 800a166:	2800      	cmp	r0, #0
 800a168:	d1f0      	bne.n	800a14c <__sfp+0x24>
 800a16a:	230c      	movs	r3, #12
 800a16c:	0004      	movs	r4, r0
 800a16e:	603b      	str	r3, [r7, #0]
 800a170:	0020      	movs	r0, r4
 800a172:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a174:	0020      	movs	r0, r4
 800a176:	4b0a      	ldr	r3, [pc, #40]	; (800a1a0 <__sfp+0x78>)
 800a178:	6665      	str	r5, [r4, #100]	; 0x64
 800a17a:	6025      	str	r5, [r4, #0]
 800a17c:	6065      	str	r5, [r4, #4]
 800a17e:	60a5      	str	r5, [r4, #8]
 800a180:	60e3      	str	r3, [r4, #12]
 800a182:	6125      	str	r5, [r4, #16]
 800a184:	6165      	str	r5, [r4, #20]
 800a186:	61a5      	str	r5, [r4, #24]
 800a188:	2208      	movs	r2, #8
 800a18a:	0029      	movs	r1, r5
 800a18c:	305c      	adds	r0, #92	; 0x5c
 800a18e:	f7fd f8a4 	bl	80072da <memset>
 800a192:	6365      	str	r5, [r4, #52]	; 0x34
 800a194:	63a5      	str	r5, [r4, #56]	; 0x38
 800a196:	64a5      	str	r5, [r4, #72]	; 0x48
 800a198:	64e5      	str	r5, [r4, #76]	; 0x4c
 800a19a:	e7e9      	b.n	800a170 <__sfp+0x48>
 800a19c:	0800d540 	.word	0x0800d540
 800a1a0:	ffff0001 	.word	0xffff0001

0800a1a4 <_fwalk_reent>:
 800a1a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a1a6:	0004      	movs	r4, r0
 800a1a8:	0007      	movs	r7, r0
 800a1aa:	2600      	movs	r6, #0
 800a1ac:	9101      	str	r1, [sp, #4]
 800a1ae:	3448      	adds	r4, #72	; 0x48
 800a1b0:	2c00      	cmp	r4, #0
 800a1b2:	d101      	bne.n	800a1b8 <_fwalk_reent+0x14>
 800a1b4:	0030      	movs	r0, r6
 800a1b6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800a1b8:	6863      	ldr	r3, [r4, #4]
 800a1ba:	68a5      	ldr	r5, [r4, #8]
 800a1bc:	9300      	str	r3, [sp, #0]
 800a1be:	9b00      	ldr	r3, [sp, #0]
 800a1c0:	3b01      	subs	r3, #1
 800a1c2:	9300      	str	r3, [sp, #0]
 800a1c4:	d501      	bpl.n	800a1ca <_fwalk_reent+0x26>
 800a1c6:	6824      	ldr	r4, [r4, #0]
 800a1c8:	e7f2      	b.n	800a1b0 <_fwalk_reent+0xc>
 800a1ca:	89ab      	ldrh	r3, [r5, #12]
 800a1cc:	2b01      	cmp	r3, #1
 800a1ce:	d908      	bls.n	800a1e2 <_fwalk_reent+0x3e>
 800a1d0:	220e      	movs	r2, #14
 800a1d2:	5eab      	ldrsh	r3, [r5, r2]
 800a1d4:	3301      	adds	r3, #1
 800a1d6:	d004      	beq.n	800a1e2 <_fwalk_reent+0x3e>
 800a1d8:	0029      	movs	r1, r5
 800a1da:	0038      	movs	r0, r7
 800a1dc:	9b01      	ldr	r3, [sp, #4]
 800a1de:	4798      	blx	r3
 800a1e0:	4306      	orrs	r6, r0
 800a1e2:	3568      	adds	r5, #104	; 0x68
 800a1e4:	e7eb      	b.n	800a1be <_fwalk_reent+0x1a>
	...

0800a1e8 <_findenv_r>:
 800a1e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a1ea:	000e      	movs	r6, r1
 800a1ec:	b085      	sub	sp, #20
 800a1ee:	0007      	movs	r7, r0
 800a1f0:	9203      	str	r2, [sp, #12]
 800a1f2:	f001 f853 	bl	800b29c <__env_lock>
 800a1f6:	4c19      	ldr	r4, [pc, #100]	; (800a25c <_findenv_r+0x74>)
 800a1f8:	0033      	movs	r3, r6
 800a1fa:	6825      	ldr	r5, [r4, #0]
 800a1fc:	2d00      	cmp	r5, #0
 800a1fe:	d106      	bne.n	800a20e <_findenv_r+0x26>
 800a200:	0038      	movs	r0, r7
 800a202:	f001 f84c 	bl	800b29e <__env_unlock>
 800a206:	2000      	movs	r0, #0
 800a208:	b005      	add	sp, #20
 800a20a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a20c:	3301      	adds	r3, #1
 800a20e:	781a      	ldrb	r2, [r3, #0]
 800a210:	2a00      	cmp	r2, #0
 800a212:	d01f      	beq.n	800a254 <_findenv_r+0x6c>
 800a214:	2a3d      	cmp	r2, #61	; 0x3d
 800a216:	d1f9      	bne.n	800a20c <_findenv_r+0x24>
 800a218:	e7f2      	b.n	800a200 <_findenv_r+0x18>
 800a21a:	3504      	adds	r5, #4
 800a21c:	6828      	ldr	r0, [r5, #0]
 800a21e:	2800      	cmp	r0, #0
 800a220:	d0ee      	beq.n	800a200 <_findenv_r+0x18>
 800a222:	9a01      	ldr	r2, [sp, #4]
 800a224:	0031      	movs	r1, r6
 800a226:	f000 fff5 	bl	800b214 <strncmp>
 800a22a:	2800      	cmp	r0, #0
 800a22c:	d1f5      	bne.n	800a21a <_findenv_r+0x32>
 800a22e:	9a01      	ldr	r2, [sp, #4]
 800a230:	682b      	ldr	r3, [r5, #0]
 800a232:	4694      	mov	ip, r2
 800a234:	4463      	add	r3, ip
 800a236:	9302      	str	r3, [sp, #8]
 800a238:	781b      	ldrb	r3, [r3, #0]
 800a23a:	2b3d      	cmp	r3, #61	; 0x3d
 800a23c:	d1ed      	bne.n	800a21a <_findenv_r+0x32>
 800a23e:	6823      	ldr	r3, [r4, #0]
 800a240:	0038      	movs	r0, r7
 800a242:	1aed      	subs	r5, r5, r3
 800a244:	9b03      	ldr	r3, [sp, #12]
 800a246:	10ad      	asrs	r5, r5, #2
 800a248:	601d      	str	r5, [r3, #0]
 800a24a:	f001 f828 	bl	800b29e <__env_unlock>
 800a24e:	9802      	ldr	r0, [sp, #8]
 800a250:	3001      	adds	r0, #1
 800a252:	e7d9      	b.n	800a208 <_findenv_r+0x20>
 800a254:	1b9b      	subs	r3, r3, r6
 800a256:	9301      	str	r3, [sp, #4]
 800a258:	e7e0      	b.n	800a21c <_findenv_r+0x34>
 800a25a:	46c0      	nop			; (mov r8, r8)
 800a25c:	20000254 	.word	0x20000254

0800a260 <_getenv_r>:
 800a260:	b507      	push	{r0, r1, r2, lr}
 800a262:	aa01      	add	r2, sp, #4
 800a264:	f7ff ffc0 	bl	800a1e8 <_findenv_r>
 800a268:	bd0e      	pop	{r1, r2, r3, pc}
	...

0800a26c <_gettimeofday_r>:
 800a26c:	2300      	movs	r3, #0
 800a26e:	b570      	push	{r4, r5, r6, lr}
 800a270:	4c06      	ldr	r4, [pc, #24]	; (800a28c <_gettimeofday_r+0x20>)
 800a272:	0005      	movs	r5, r0
 800a274:	0008      	movs	r0, r1
 800a276:	0011      	movs	r1, r2
 800a278:	6023      	str	r3, [r4, #0]
 800a27a:	f001 fec1 	bl	800c000 <_gettimeofday>
 800a27e:	1c43      	adds	r3, r0, #1
 800a280:	d103      	bne.n	800a28a <_gettimeofday_r+0x1e>
 800a282:	6823      	ldr	r3, [r4, #0]
 800a284:	2b00      	cmp	r3, #0
 800a286:	d000      	beq.n	800a28a <_gettimeofday_r+0x1e>
 800a288:	602b      	str	r3, [r5, #0]
 800a28a:	bd70      	pop	{r4, r5, r6, pc}
 800a28c:	2000056c 	.word	0x2000056c

0800a290 <__gettzinfo>:
 800a290:	4800      	ldr	r0, [pc, #0]	; (800a294 <__gettzinfo+0x4>)
 800a292:	4770      	bx	lr
 800a294:	20000090 	.word	0x20000090

0800a298 <gmtime_r>:
 800a298:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a29a:	6806      	ldr	r6, [r0, #0]
 800a29c:	6847      	ldr	r7, [r0, #4]
 800a29e:	b085      	sub	sp, #20
 800a2a0:	4a59      	ldr	r2, [pc, #356]	; (800a408 <gmtime_r+0x170>)
 800a2a2:	2300      	movs	r3, #0
 800a2a4:	0030      	movs	r0, r6
 800a2a6:	000c      	movs	r4, r1
 800a2a8:	0039      	movs	r1, r7
 800a2aa:	f7f6 f941 	bl	8000530 <__aeabi_ldivmod>
 800a2ae:	4a57      	ldr	r2, [pc, #348]	; (800a40c <gmtime_r+0x174>)
 800a2b0:	9001      	str	r0, [sp, #4]
 800a2b2:	1885      	adds	r5, r0, r2
 800a2b4:	2300      	movs	r3, #0
 800a2b6:	0030      	movs	r0, r6
 800a2b8:	4a53      	ldr	r2, [pc, #332]	; (800a408 <gmtime_r+0x170>)
 800a2ba:	0039      	movs	r1, r7
 800a2bc:	f7f6 f938 	bl	8000530 <__aeabi_ldivmod>
 800a2c0:	1e16      	subs	r6, r2, #0
 800a2c2:	da06      	bge.n	800a2d2 <gmtime_r+0x3a>
 800a2c4:	4a52      	ldr	r2, [pc, #328]	; (800a410 <gmtime_r+0x178>)
 800a2c6:	4b50      	ldr	r3, [pc, #320]	; (800a408 <gmtime_r+0x170>)
 800a2c8:	4694      	mov	ip, r2
 800a2ca:	18f6      	adds	r6, r6, r3
 800a2cc:	9b01      	ldr	r3, [sp, #4]
 800a2ce:	4463      	add	r3, ip
 800a2d0:	001d      	movs	r5, r3
 800a2d2:	21e1      	movs	r1, #225	; 0xe1
 800a2d4:	0030      	movs	r0, r6
 800a2d6:	0109      	lsls	r1, r1, #4
 800a2d8:	f7f5 ffc6 	bl	8000268 <__divsi3>
 800a2dc:	21e1      	movs	r1, #225	; 0xe1
 800a2de:	60a0      	str	r0, [r4, #8]
 800a2e0:	0109      	lsls	r1, r1, #4
 800a2e2:	0030      	movs	r0, r6
 800a2e4:	f7f6 f8a6 	bl	8000434 <__aeabi_idivmod>
 800a2e8:	000e      	movs	r6, r1
 800a2ea:	213c      	movs	r1, #60	; 0x3c
 800a2ec:	0030      	movs	r0, r6
 800a2ee:	f7f5 ffbb 	bl	8000268 <__divsi3>
 800a2f2:	213c      	movs	r1, #60	; 0x3c
 800a2f4:	6060      	str	r0, [r4, #4]
 800a2f6:	0030      	movs	r0, r6
 800a2f8:	f7f6 f89c 	bl	8000434 <__aeabi_idivmod>
 800a2fc:	1ce8      	adds	r0, r5, #3
 800a2fe:	6021      	str	r1, [r4, #0]
 800a300:	2107      	movs	r1, #7
 800a302:	f7f6 f897 	bl	8000434 <__aeabi_idivmod>
 800a306:	2900      	cmp	r1, #0
 800a308:	da00      	bge.n	800a30c <gmtime_r+0x74>
 800a30a:	3107      	adds	r1, #7
 800a30c:	61a1      	str	r1, [r4, #24]
 800a30e:	1e28      	subs	r0, r5, #0
 800a310:	4940      	ldr	r1, [pc, #256]	; (800a414 <gmtime_r+0x17c>)
 800a312:	da01      	bge.n	800a318 <gmtime_r+0x80>
 800a314:	4b40      	ldr	r3, [pc, #256]	; (800a418 <gmtime_r+0x180>)
 800a316:	18e8      	adds	r0, r5, r3
 800a318:	f7f5 ffa6 	bl	8000268 <__divsi3>
 800a31c:	0007      	movs	r7, r0
 800a31e:	483f      	ldr	r0, [pc, #252]	; (800a41c <gmtime_r+0x184>)
 800a320:	493f      	ldr	r1, [pc, #252]	; (800a420 <gmtime_r+0x188>)
 800a322:	4378      	muls	r0, r7
 800a324:	1945      	adds	r5, r0, r5
 800a326:	0028      	movs	r0, r5
 800a328:	f7f5 ff14 	bl	8000154 <__udivsi3>
 800a32c:	493d      	ldr	r1, [pc, #244]	; (800a424 <gmtime_r+0x18c>)
 800a32e:	1946      	adds	r6, r0, r5
 800a330:	0028      	movs	r0, r5
 800a332:	f7f5 ff0f 	bl	8000154 <__udivsi3>
 800a336:	493c      	ldr	r1, [pc, #240]	; (800a428 <gmtime_r+0x190>)
 800a338:	1a36      	subs	r6, r6, r0
 800a33a:	0028      	movs	r0, r5
 800a33c:	f7f5 ff0a 	bl	8000154 <__udivsi3>
 800a340:	216e      	movs	r1, #110	; 0x6e
 800a342:	1a36      	subs	r6, r6, r0
 800a344:	31ff      	adds	r1, #255	; 0xff
 800a346:	0030      	movs	r0, r6
 800a348:	f7f5 ff04 	bl	8000154 <__udivsi3>
 800a34c:	4937      	ldr	r1, [pc, #220]	; (800a42c <gmtime_r+0x194>)
 800a34e:	9001      	str	r0, [sp, #4]
 800a350:	0030      	movs	r0, r6
 800a352:	f7f5 feff 	bl	8000154 <__udivsi3>
 800a356:	4933      	ldr	r1, [pc, #204]	; (800a424 <gmtime_r+0x18c>)
 800a358:	1945      	adds	r5, r0, r5
 800a35a:	0030      	movs	r0, r6
 800a35c:	f7f5 fefa 	bl	8000154 <__udivsi3>
 800a360:	216e      	movs	r1, #110	; 0x6e
 800a362:	9b01      	ldr	r3, [sp, #4]
 800a364:	31ff      	adds	r1, #255	; 0xff
 800a366:	4359      	muls	r1, r3
 800a368:	1a2d      	subs	r5, r5, r0
 800a36a:	1a6b      	subs	r3, r5, r1
 800a36c:	2605      	movs	r6, #5
 800a36e:	0018      	movs	r0, r3
 800a370:	4370      	muls	r0, r6
 800a372:	2199      	movs	r1, #153	; 0x99
 800a374:	3002      	adds	r0, #2
 800a376:	9302      	str	r3, [sp, #8]
 800a378:	f7f5 feec 	bl	8000154 <__udivsi3>
 800a37c:	0005      	movs	r5, r0
 800a37e:	2099      	movs	r0, #153	; 0x99
 800a380:	4368      	muls	r0, r5
 800a382:	9b02      	ldr	r3, [sp, #8]
 800a384:	0031      	movs	r1, r6
 800a386:	3301      	adds	r3, #1
 800a388:	3002      	adds	r0, #2
 800a38a:	9303      	str	r3, [sp, #12]
 800a38c:	f7f5 fee2 	bl	8000154 <__udivsi3>
 800a390:	9b03      	ldr	r3, [sp, #12]
 800a392:	3e03      	subs	r6, #3
 800a394:	1a1b      	subs	r3, r3, r0
 800a396:	9303      	str	r3, [sp, #12]
 800a398:	2d09      	cmp	r5, #9
 800a39a:	d900      	bls.n	800a39e <gmtime_r+0x106>
 800a39c:	3e0c      	subs	r6, #12
 800a39e:	23c8      	movs	r3, #200	; 0xc8
 800a3a0:	005b      	lsls	r3, r3, #1
 800a3a2:	435f      	muls	r7, r3
 800a3a4:	9b01      	ldr	r3, [sp, #4]
 800a3a6:	1976      	adds	r6, r6, r5
 800a3a8:	18ff      	adds	r7, r7, r3
 800a3aa:	2501      	movs	r5, #1
 800a3ac:	2300      	movs	r3, #0
 800a3ae:	42b5      	cmp	r5, r6
 800a3b0:	415b      	adcs	r3, r3
 800a3b2:	18ff      	adds	r7, r7, r3
 800a3b4:	2332      	movs	r3, #50	; 0x32
 800a3b6:	9a02      	ldr	r2, [sp, #8]
 800a3b8:	33ff      	adds	r3, #255	; 0xff
 800a3ba:	429a      	cmp	r2, r3
 800a3bc:	d90e      	bls.n	800a3dc <gmtime_r+0x144>
 800a3be:	0015      	movs	r5, r2
 800a3c0:	3d33      	subs	r5, #51	; 0x33
 800a3c2:	3dff      	subs	r5, #255	; 0xff
 800a3c4:	4b1a      	ldr	r3, [pc, #104]	; (800a430 <gmtime_r+0x198>)
 800a3c6:	0020      	movs	r0, r4
 800a3c8:	18ff      	adds	r7, r7, r3
 800a3ca:	9b03      	ldr	r3, [sp, #12]
 800a3cc:	61e5      	str	r5, [r4, #28]
 800a3ce:	60e3      	str	r3, [r4, #12]
 800a3d0:	2300      	movs	r3, #0
 800a3d2:	6167      	str	r7, [r4, #20]
 800a3d4:	6126      	str	r6, [r4, #16]
 800a3d6:	6223      	str	r3, [r4, #32]
 800a3d8:	b005      	add	sp, #20
 800a3da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a3dc:	9b01      	ldr	r3, [sp, #4]
 800a3de:	079b      	lsls	r3, r3, #30
 800a3e0:	d106      	bne.n	800a3f0 <gmtime_r+0x158>
 800a3e2:	2164      	movs	r1, #100	; 0x64
 800a3e4:	9801      	ldr	r0, [sp, #4]
 800a3e6:	f7f5 ff3b 	bl	8000260 <__aeabi_uidivmod>
 800a3ea:	0028      	movs	r0, r5
 800a3ec:	2900      	cmp	r1, #0
 800a3ee:	d106      	bne.n	800a3fe <gmtime_r+0x166>
 800a3f0:	21c8      	movs	r1, #200	; 0xc8
 800a3f2:	9801      	ldr	r0, [sp, #4]
 800a3f4:	0049      	lsls	r1, r1, #1
 800a3f6:	f7f5 ff33 	bl	8000260 <__aeabi_uidivmod>
 800a3fa:	4248      	negs	r0, r1
 800a3fc:	4148      	adcs	r0, r1
 800a3fe:	9d02      	ldr	r5, [sp, #8]
 800a400:	353b      	adds	r5, #59	; 0x3b
 800a402:	182d      	adds	r5, r5, r0
 800a404:	e7de      	b.n	800a3c4 <gmtime_r+0x12c>
 800a406:	46c0      	nop			; (mov r8, r8)
 800a408:	00015180 	.word	0x00015180
 800a40c:	000afa6c 	.word	0x000afa6c
 800a410:	000afa6b 	.word	0x000afa6b
 800a414:	00023ab1 	.word	0x00023ab1
 800a418:	fffdc550 	.word	0xfffdc550
 800a41c:	fffdc54f 	.word	0xfffdc54f
 800a420:	00008eac 	.word	0x00008eac
 800a424:	000005b4 	.word	0x000005b4
 800a428:	00023ab0 	.word	0x00023ab0
 800a42c:	00008e94 	.word	0x00008e94
 800a430:	fffff894 	.word	0xfffff894

0800a434 <labs>:
 800a434:	17c3      	asrs	r3, r0, #31
 800a436:	18c0      	adds	r0, r0, r3
 800a438:	4058      	eors	r0, r3
 800a43a:	4770      	bx	lr

0800a43c <__locale_ctype_ptr_l>:
 800a43c:	30ec      	adds	r0, #236	; 0xec
 800a43e:	6800      	ldr	r0, [r0, #0]
 800a440:	4770      	bx	lr
	...

0800a444 <__locale_ctype_ptr>:
 800a444:	4b04      	ldr	r3, [pc, #16]	; (800a458 <__locale_ctype_ptr+0x14>)
 800a446:	681b      	ldr	r3, [r3, #0]
 800a448:	6a1b      	ldr	r3, [r3, #32]
 800a44a:	2b00      	cmp	r3, #0
 800a44c:	d100      	bne.n	800a450 <__locale_ctype_ptr+0xc>
 800a44e:	4b03      	ldr	r3, [pc, #12]	; (800a45c <__locale_ctype_ptr+0x18>)
 800a450:	33ec      	adds	r3, #236	; 0xec
 800a452:	6818      	ldr	r0, [r3, #0]
 800a454:	4770      	bx	lr
 800a456:	46c0      	nop			; (mov r8, r8)
 800a458:	20000020 	.word	0x20000020
 800a45c:	200000e8 	.word	0x200000e8

0800a460 <_localeconv_r>:
 800a460:	4b03      	ldr	r3, [pc, #12]	; (800a470 <_localeconv_r+0x10>)
 800a462:	681b      	ldr	r3, [r3, #0]
 800a464:	6a18      	ldr	r0, [r3, #32]
 800a466:	2800      	cmp	r0, #0
 800a468:	d100      	bne.n	800a46c <_localeconv_r+0xc>
 800a46a:	4802      	ldr	r0, [pc, #8]	; (800a474 <_localeconv_r+0x14>)
 800a46c:	30f0      	adds	r0, #240	; 0xf0
 800a46e:	4770      	bx	lr
 800a470:	20000020 	.word	0x20000020
 800a474:	200000e8 	.word	0x200000e8

0800a478 <__swhatbuf_r>:
 800a478:	b570      	push	{r4, r5, r6, lr}
 800a47a:	000e      	movs	r6, r1
 800a47c:	001d      	movs	r5, r3
 800a47e:	230e      	movs	r3, #14
 800a480:	5ec9      	ldrsh	r1, [r1, r3]
 800a482:	b096      	sub	sp, #88	; 0x58
 800a484:	0014      	movs	r4, r2
 800a486:	2900      	cmp	r1, #0
 800a488:	da07      	bge.n	800a49a <__swhatbuf_r+0x22>
 800a48a:	2300      	movs	r3, #0
 800a48c:	602b      	str	r3, [r5, #0]
 800a48e:	89b3      	ldrh	r3, [r6, #12]
 800a490:	061b      	lsls	r3, r3, #24
 800a492:	d411      	bmi.n	800a4b8 <__swhatbuf_r+0x40>
 800a494:	2380      	movs	r3, #128	; 0x80
 800a496:	00db      	lsls	r3, r3, #3
 800a498:	e00f      	b.n	800a4ba <__swhatbuf_r+0x42>
 800a49a:	466a      	mov	r2, sp
 800a49c:	f000 ff00 	bl	800b2a0 <_fstat_r>
 800a4a0:	2800      	cmp	r0, #0
 800a4a2:	dbf2      	blt.n	800a48a <__swhatbuf_r+0x12>
 800a4a4:	22f0      	movs	r2, #240	; 0xf0
 800a4a6:	9b01      	ldr	r3, [sp, #4]
 800a4a8:	0212      	lsls	r2, r2, #8
 800a4aa:	4013      	ands	r3, r2
 800a4ac:	4a05      	ldr	r2, [pc, #20]	; (800a4c4 <__swhatbuf_r+0x4c>)
 800a4ae:	189b      	adds	r3, r3, r2
 800a4b0:	425a      	negs	r2, r3
 800a4b2:	4153      	adcs	r3, r2
 800a4b4:	602b      	str	r3, [r5, #0]
 800a4b6:	e7ed      	b.n	800a494 <__swhatbuf_r+0x1c>
 800a4b8:	2340      	movs	r3, #64	; 0x40
 800a4ba:	2000      	movs	r0, #0
 800a4bc:	6023      	str	r3, [r4, #0]
 800a4be:	b016      	add	sp, #88	; 0x58
 800a4c0:	bd70      	pop	{r4, r5, r6, pc}
 800a4c2:	46c0      	nop			; (mov r8, r8)
 800a4c4:	ffffe000 	.word	0xffffe000

0800a4c8 <__smakebuf_r>:
 800a4c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a4ca:	2602      	movs	r6, #2
 800a4cc:	898b      	ldrh	r3, [r1, #12]
 800a4ce:	0005      	movs	r5, r0
 800a4d0:	000c      	movs	r4, r1
 800a4d2:	4233      	tst	r3, r6
 800a4d4:	d006      	beq.n	800a4e4 <__smakebuf_r+0x1c>
 800a4d6:	0023      	movs	r3, r4
 800a4d8:	3347      	adds	r3, #71	; 0x47
 800a4da:	6023      	str	r3, [r4, #0]
 800a4dc:	6123      	str	r3, [r4, #16]
 800a4de:	2301      	movs	r3, #1
 800a4e0:	6163      	str	r3, [r4, #20]
 800a4e2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800a4e4:	ab01      	add	r3, sp, #4
 800a4e6:	466a      	mov	r2, sp
 800a4e8:	f7ff ffc6 	bl	800a478 <__swhatbuf_r>
 800a4ec:	9900      	ldr	r1, [sp, #0]
 800a4ee:	0007      	movs	r7, r0
 800a4f0:	0028      	movs	r0, r5
 800a4f2:	f7fc ff45 	bl	8007380 <_malloc_r>
 800a4f6:	2800      	cmp	r0, #0
 800a4f8:	d108      	bne.n	800a50c <__smakebuf_r+0x44>
 800a4fa:	220c      	movs	r2, #12
 800a4fc:	5ea3      	ldrsh	r3, [r4, r2]
 800a4fe:	059a      	lsls	r2, r3, #22
 800a500:	d4ef      	bmi.n	800a4e2 <__smakebuf_r+0x1a>
 800a502:	2203      	movs	r2, #3
 800a504:	4393      	bics	r3, r2
 800a506:	431e      	orrs	r6, r3
 800a508:	81a6      	strh	r6, [r4, #12]
 800a50a:	e7e4      	b.n	800a4d6 <__smakebuf_r+0xe>
 800a50c:	4b0f      	ldr	r3, [pc, #60]	; (800a54c <__smakebuf_r+0x84>)
 800a50e:	62ab      	str	r3, [r5, #40]	; 0x28
 800a510:	2380      	movs	r3, #128	; 0x80
 800a512:	89a2      	ldrh	r2, [r4, #12]
 800a514:	6020      	str	r0, [r4, #0]
 800a516:	4313      	orrs	r3, r2
 800a518:	81a3      	strh	r3, [r4, #12]
 800a51a:	9b00      	ldr	r3, [sp, #0]
 800a51c:	6120      	str	r0, [r4, #16]
 800a51e:	6163      	str	r3, [r4, #20]
 800a520:	9b01      	ldr	r3, [sp, #4]
 800a522:	2b00      	cmp	r3, #0
 800a524:	d00d      	beq.n	800a542 <__smakebuf_r+0x7a>
 800a526:	230e      	movs	r3, #14
 800a528:	5ee1      	ldrsh	r1, [r4, r3]
 800a52a:	0028      	movs	r0, r5
 800a52c:	f000 feca 	bl	800b2c4 <_isatty_r>
 800a530:	2800      	cmp	r0, #0
 800a532:	d006      	beq.n	800a542 <__smakebuf_r+0x7a>
 800a534:	2203      	movs	r2, #3
 800a536:	89a3      	ldrh	r3, [r4, #12]
 800a538:	4393      	bics	r3, r2
 800a53a:	001a      	movs	r2, r3
 800a53c:	2301      	movs	r3, #1
 800a53e:	4313      	orrs	r3, r2
 800a540:	81a3      	strh	r3, [r4, #12]
 800a542:	89a0      	ldrh	r0, [r4, #12]
 800a544:	4338      	orrs	r0, r7
 800a546:	81a0      	strh	r0, [r4, #12]
 800a548:	e7cb      	b.n	800a4e2 <__smakebuf_r+0x1a>
 800a54a:	46c0      	nop			; (mov r8, r8)
 800a54c:	0800a085 	.word	0x0800a085

0800a550 <__ascii_mbtowc>:
 800a550:	b082      	sub	sp, #8
 800a552:	2900      	cmp	r1, #0
 800a554:	d100      	bne.n	800a558 <__ascii_mbtowc+0x8>
 800a556:	a901      	add	r1, sp, #4
 800a558:	1e10      	subs	r0, r2, #0
 800a55a:	d006      	beq.n	800a56a <__ascii_mbtowc+0x1a>
 800a55c:	2b00      	cmp	r3, #0
 800a55e:	d006      	beq.n	800a56e <__ascii_mbtowc+0x1e>
 800a560:	7813      	ldrb	r3, [r2, #0]
 800a562:	600b      	str	r3, [r1, #0]
 800a564:	7810      	ldrb	r0, [r2, #0]
 800a566:	1e43      	subs	r3, r0, #1
 800a568:	4198      	sbcs	r0, r3
 800a56a:	b002      	add	sp, #8
 800a56c:	4770      	bx	lr
 800a56e:	2002      	movs	r0, #2
 800a570:	4240      	negs	r0, r0
 800a572:	e7fa      	b.n	800a56a <__ascii_mbtowc+0x1a>

0800a574 <memchr>:
 800a574:	b2c9      	uxtb	r1, r1
 800a576:	1882      	adds	r2, r0, r2
 800a578:	4290      	cmp	r0, r2
 800a57a:	d101      	bne.n	800a580 <memchr+0xc>
 800a57c:	2000      	movs	r0, #0
 800a57e:	4770      	bx	lr
 800a580:	7803      	ldrb	r3, [r0, #0]
 800a582:	428b      	cmp	r3, r1
 800a584:	d0fb      	beq.n	800a57e <memchr+0xa>
 800a586:	3001      	adds	r0, #1
 800a588:	e7f6      	b.n	800a578 <memchr+0x4>

0800a58a <__malloc_lock>:
 800a58a:	4770      	bx	lr

0800a58c <__malloc_unlock>:
 800a58c:	4770      	bx	lr

0800a58e <_Balloc>:
 800a58e:	b570      	push	{r4, r5, r6, lr}
 800a590:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800a592:	0004      	movs	r4, r0
 800a594:	000d      	movs	r5, r1
 800a596:	2e00      	cmp	r6, #0
 800a598:	d107      	bne.n	800a5aa <_Balloc+0x1c>
 800a59a:	2010      	movs	r0, #16
 800a59c:	f7fc fe80 	bl	80072a0 <malloc>
 800a5a0:	6260      	str	r0, [r4, #36]	; 0x24
 800a5a2:	6046      	str	r6, [r0, #4]
 800a5a4:	6086      	str	r6, [r0, #8]
 800a5a6:	6006      	str	r6, [r0, #0]
 800a5a8:	60c6      	str	r6, [r0, #12]
 800a5aa:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800a5ac:	68f3      	ldr	r3, [r6, #12]
 800a5ae:	2b00      	cmp	r3, #0
 800a5b0:	d013      	beq.n	800a5da <_Balloc+0x4c>
 800a5b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a5b4:	00aa      	lsls	r2, r5, #2
 800a5b6:	68db      	ldr	r3, [r3, #12]
 800a5b8:	189b      	adds	r3, r3, r2
 800a5ba:	6818      	ldr	r0, [r3, #0]
 800a5bc:	2800      	cmp	r0, #0
 800a5be:	d118      	bne.n	800a5f2 <_Balloc+0x64>
 800a5c0:	2101      	movs	r1, #1
 800a5c2:	000e      	movs	r6, r1
 800a5c4:	40ae      	lsls	r6, r5
 800a5c6:	1d72      	adds	r2, r6, #5
 800a5c8:	0092      	lsls	r2, r2, #2
 800a5ca:	0020      	movs	r0, r4
 800a5cc:	f000 fac6 	bl	800ab5c <_calloc_r>
 800a5d0:	2800      	cmp	r0, #0
 800a5d2:	d00c      	beq.n	800a5ee <_Balloc+0x60>
 800a5d4:	6045      	str	r5, [r0, #4]
 800a5d6:	6086      	str	r6, [r0, #8]
 800a5d8:	e00d      	b.n	800a5f6 <_Balloc+0x68>
 800a5da:	2221      	movs	r2, #33	; 0x21
 800a5dc:	2104      	movs	r1, #4
 800a5de:	0020      	movs	r0, r4
 800a5e0:	f000 fabc 	bl	800ab5c <_calloc_r>
 800a5e4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a5e6:	60f0      	str	r0, [r6, #12]
 800a5e8:	68db      	ldr	r3, [r3, #12]
 800a5ea:	2b00      	cmp	r3, #0
 800a5ec:	d1e1      	bne.n	800a5b2 <_Balloc+0x24>
 800a5ee:	2000      	movs	r0, #0
 800a5f0:	bd70      	pop	{r4, r5, r6, pc}
 800a5f2:	6802      	ldr	r2, [r0, #0]
 800a5f4:	601a      	str	r2, [r3, #0]
 800a5f6:	2300      	movs	r3, #0
 800a5f8:	6103      	str	r3, [r0, #16]
 800a5fa:	60c3      	str	r3, [r0, #12]
 800a5fc:	e7f8      	b.n	800a5f0 <_Balloc+0x62>

0800a5fe <_Bfree>:
 800a5fe:	b570      	push	{r4, r5, r6, lr}
 800a600:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800a602:	0006      	movs	r6, r0
 800a604:	000d      	movs	r5, r1
 800a606:	2c00      	cmp	r4, #0
 800a608:	d107      	bne.n	800a61a <_Bfree+0x1c>
 800a60a:	2010      	movs	r0, #16
 800a60c:	f7fc fe48 	bl	80072a0 <malloc>
 800a610:	6270      	str	r0, [r6, #36]	; 0x24
 800a612:	6044      	str	r4, [r0, #4]
 800a614:	6084      	str	r4, [r0, #8]
 800a616:	6004      	str	r4, [r0, #0]
 800a618:	60c4      	str	r4, [r0, #12]
 800a61a:	2d00      	cmp	r5, #0
 800a61c:	d007      	beq.n	800a62e <_Bfree+0x30>
 800a61e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800a620:	686a      	ldr	r2, [r5, #4]
 800a622:	68db      	ldr	r3, [r3, #12]
 800a624:	0092      	lsls	r2, r2, #2
 800a626:	189b      	adds	r3, r3, r2
 800a628:	681a      	ldr	r2, [r3, #0]
 800a62a:	602a      	str	r2, [r5, #0]
 800a62c:	601d      	str	r5, [r3, #0]
 800a62e:	bd70      	pop	{r4, r5, r6, pc}

0800a630 <__multadd>:
 800a630:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a632:	001e      	movs	r6, r3
 800a634:	2314      	movs	r3, #20
 800a636:	469c      	mov	ip, r3
 800a638:	0007      	movs	r7, r0
 800a63a:	000c      	movs	r4, r1
 800a63c:	2000      	movs	r0, #0
 800a63e:	690d      	ldr	r5, [r1, #16]
 800a640:	448c      	add	ip, r1
 800a642:	4663      	mov	r3, ip
 800a644:	681b      	ldr	r3, [r3, #0]
 800a646:	3001      	adds	r0, #1
 800a648:	b299      	uxth	r1, r3
 800a64a:	4663      	mov	r3, ip
 800a64c:	681b      	ldr	r3, [r3, #0]
 800a64e:	4351      	muls	r1, r2
 800a650:	0c1b      	lsrs	r3, r3, #16
 800a652:	4353      	muls	r3, r2
 800a654:	1989      	adds	r1, r1, r6
 800a656:	0c0e      	lsrs	r6, r1, #16
 800a658:	199b      	adds	r3, r3, r6
 800a65a:	b289      	uxth	r1, r1
 800a65c:	0c1e      	lsrs	r6, r3, #16
 800a65e:	041b      	lsls	r3, r3, #16
 800a660:	185b      	adds	r3, r3, r1
 800a662:	4661      	mov	r1, ip
 800a664:	c108      	stmia	r1!, {r3}
 800a666:	468c      	mov	ip, r1
 800a668:	4285      	cmp	r5, r0
 800a66a:	dcea      	bgt.n	800a642 <__multadd+0x12>
 800a66c:	2e00      	cmp	r6, #0
 800a66e:	d01b      	beq.n	800a6a8 <__multadd+0x78>
 800a670:	68a3      	ldr	r3, [r4, #8]
 800a672:	42ab      	cmp	r3, r5
 800a674:	dc12      	bgt.n	800a69c <__multadd+0x6c>
 800a676:	6863      	ldr	r3, [r4, #4]
 800a678:	0038      	movs	r0, r7
 800a67a:	1c59      	adds	r1, r3, #1
 800a67c:	f7ff ff87 	bl	800a58e <_Balloc>
 800a680:	0021      	movs	r1, r4
 800a682:	6923      	ldr	r3, [r4, #16]
 800a684:	9001      	str	r0, [sp, #4]
 800a686:	1c9a      	adds	r2, r3, #2
 800a688:	0092      	lsls	r2, r2, #2
 800a68a:	310c      	adds	r1, #12
 800a68c:	300c      	adds	r0, #12
 800a68e:	f7fc fe1b 	bl	80072c8 <memcpy>
 800a692:	0021      	movs	r1, r4
 800a694:	0038      	movs	r0, r7
 800a696:	f7ff ffb2 	bl	800a5fe <_Bfree>
 800a69a:	9c01      	ldr	r4, [sp, #4]
 800a69c:	1d2b      	adds	r3, r5, #4
 800a69e:	009b      	lsls	r3, r3, #2
 800a6a0:	18e3      	adds	r3, r4, r3
 800a6a2:	3501      	adds	r5, #1
 800a6a4:	605e      	str	r6, [r3, #4]
 800a6a6:	6125      	str	r5, [r4, #16]
 800a6a8:	0020      	movs	r0, r4
 800a6aa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800a6ac <__hi0bits>:
 800a6ac:	0003      	movs	r3, r0
 800a6ae:	0c02      	lsrs	r2, r0, #16
 800a6b0:	2000      	movs	r0, #0
 800a6b2:	4282      	cmp	r2, r0
 800a6b4:	d101      	bne.n	800a6ba <__hi0bits+0xe>
 800a6b6:	041b      	lsls	r3, r3, #16
 800a6b8:	3010      	adds	r0, #16
 800a6ba:	0e1a      	lsrs	r2, r3, #24
 800a6bc:	d101      	bne.n	800a6c2 <__hi0bits+0x16>
 800a6be:	3008      	adds	r0, #8
 800a6c0:	021b      	lsls	r3, r3, #8
 800a6c2:	0f1a      	lsrs	r2, r3, #28
 800a6c4:	d101      	bne.n	800a6ca <__hi0bits+0x1e>
 800a6c6:	3004      	adds	r0, #4
 800a6c8:	011b      	lsls	r3, r3, #4
 800a6ca:	0f9a      	lsrs	r2, r3, #30
 800a6cc:	d101      	bne.n	800a6d2 <__hi0bits+0x26>
 800a6ce:	3002      	adds	r0, #2
 800a6d0:	009b      	lsls	r3, r3, #2
 800a6d2:	2b00      	cmp	r3, #0
 800a6d4:	db03      	blt.n	800a6de <__hi0bits+0x32>
 800a6d6:	3001      	adds	r0, #1
 800a6d8:	005b      	lsls	r3, r3, #1
 800a6da:	d400      	bmi.n	800a6de <__hi0bits+0x32>
 800a6dc:	2020      	movs	r0, #32
 800a6de:	4770      	bx	lr

0800a6e0 <__lo0bits>:
 800a6e0:	2207      	movs	r2, #7
 800a6e2:	6803      	ldr	r3, [r0, #0]
 800a6e4:	b510      	push	{r4, lr}
 800a6e6:	0001      	movs	r1, r0
 800a6e8:	401a      	ands	r2, r3
 800a6ea:	d00d      	beq.n	800a708 <__lo0bits+0x28>
 800a6ec:	2401      	movs	r4, #1
 800a6ee:	2000      	movs	r0, #0
 800a6f0:	4223      	tst	r3, r4
 800a6f2:	d105      	bne.n	800a700 <__lo0bits+0x20>
 800a6f4:	3002      	adds	r0, #2
 800a6f6:	4203      	tst	r3, r0
 800a6f8:	d003      	beq.n	800a702 <__lo0bits+0x22>
 800a6fa:	40e3      	lsrs	r3, r4
 800a6fc:	0020      	movs	r0, r4
 800a6fe:	600b      	str	r3, [r1, #0]
 800a700:	bd10      	pop	{r4, pc}
 800a702:	089b      	lsrs	r3, r3, #2
 800a704:	600b      	str	r3, [r1, #0]
 800a706:	e7fb      	b.n	800a700 <__lo0bits+0x20>
 800a708:	b29c      	uxth	r4, r3
 800a70a:	0010      	movs	r0, r2
 800a70c:	2c00      	cmp	r4, #0
 800a70e:	d101      	bne.n	800a714 <__lo0bits+0x34>
 800a710:	2010      	movs	r0, #16
 800a712:	0c1b      	lsrs	r3, r3, #16
 800a714:	b2da      	uxtb	r2, r3
 800a716:	2a00      	cmp	r2, #0
 800a718:	d101      	bne.n	800a71e <__lo0bits+0x3e>
 800a71a:	3008      	adds	r0, #8
 800a71c:	0a1b      	lsrs	r3, r3, #8
 800a71e:	071a      	lsls	r2, r3, #28
 800a720:	d101      	bne.n	800a726 <__lo0bits+0x46>
 800a722:	3004      	adds	r0, #4
 800a724:	091b      	lsrs	r3, r3, #4
 800a726:	079a      	lsls	r2, r3, #30
 800a728:	d101      	bne.n	800a72e <__lo0bits+0x4e>
 800a72a:	3002      	adds	r0, #2
 800a72c:	089b      	lsrs	r3, r3, #2
 800a72e:	07da      	lsls	r2, r3, #31
 800a730:	d4e8      	bmi.n	800a704 <__lo0bits+0x24>
 800a732:	085b      	lsrs	r3, r3, #1
 800a734:	d001      	beq.n	800a73a <__lo0bits+0x5a>
 800a736:	3001      	adds	r0, #1
 800a738:	e7e4      	b.n	800a704 <__lo0bits+0x24>
 800a73a:	2020      	movs	r0, #32
 800a73c:	e7e0      	b.n	800a700 <__lo0bits+0x20>

0800a73e <__i2b>:
 800a73e:	b510      	push	{r4, lr}
 800a740:	000c      	movs	r4, r1
 800a742:	2101      	movs	r1, #1
 800a744:	f7ff ff23 	bl	800a58e <_Balloc>
 800a748:	2301      	movs	r3, #1
 800a74a:	6144      	str	r4, [r0, #20]
 800a74c:	6103      	str	r3, [r0, #16]
 800a74e:	bd10      	pop	{r4, pc}

0800a750 <__multiply>:
 800a750:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a752:	690b      	ldr	r3, [r1, #16]
 800a754:	0014      	movs	r4, r2
 800a756:	6912      	ldr	r2, [r2, #16]
 800a758:	b089      	sub	sp, #36	; 0x24
 800a75a:	000d      	movs	r5, r1
 800a75c:	4293      	cmp	r3, r2
 800a75e:	da01      	bge.n	800a764 <__multiply+0x14>
 800a760:	0025      	movs	r5, r4
 800a762:	000c      	movs	r4, r1
 800a764:	692f      	ldr	r7, [r5, #16]
 800a766:	6926      	ldr	r6, [r4, #16]
 800a768:	6869      	ldr	r1, [r5, #4]
 800a76a:	19bb      	adds	r3, r7, r6
 800a76c:	9302      	str	r3, [sp, #8]
 800a76e:	68ab      	ldr	r3, [r5, #8]
 800a770:	19ba      	adds	r2, r7, r6
 800a772:	4293      	cmp	r3, r2
 800a774:	da00      	bge.n	800a778 <__multiply+0x28>
 800a776:	3101      	adds	r1, #1
 800a778:	f7ff ff09 	bl	800a58e <_Balloc>
 800a77c:	0002      	movs	r2, r0
 800a77e:	19bb      	adds	r3, r7, r6
 800a780:	3214      	adds	r2, #20
 800a782:	009b      	lsls	r3, r3, #2
 800a784:	18d3      	adds	r3, r2, r3
 800a786:	469c      	mov	ip, r3
 800a788:	2100      	movs	r1, #0
 800a78a:	0013      	movs	r3, r2
 800a78c:	9004      	str	r0, [sp, #16]
 800a78e:	4563      	cmp	r3, ip
 800a790:	d31d      	bcc.n	800a7ce <__multiply+0x7e>
 800a792:	3514      	adds	r5, #20
 800a794:	00bf      	lsls	r7, r7, #2
 800a796:	19eb      	adds	r3, r5, r7
 800a798:	3414      	adds	r4, #20
 800a79a:	00b6      	lsls	r6, r6, #2
 800a79c:	9305      	str	r3, [sp, #20]
 800a79e:	19a3      	adds	r3, r4, r6
 800a7a0:	9503      	str	r5, [sp, #12]
 800a7a2:	9401      	str	r4, [sp, #4]
 800a7a4:	9307      	str	r3, [sp, #28]
 800a7a6:	9b07      	ldr	r3, [sp, #28]
 800a7a8:	9901      	ldr	r1, [sp, #4]
 800a7aa:	4299      	cmp	r1, r3
 800a7ac:	d311      	bcc.n	800a7d2 <__multiply+0x82>
 800a7ae:	9b02      	ldr	r3, [sp, #8]
 800a7b0:	2b00      	cmp	r3, #0
 800a7b2:	dd06      	ble.n	800a7c2 <__multiply+0x72>
 800a7b4:	2304      	movs	r3, #4
 800a7b6:	425b      	negs	r3, r3
 800a7b8:	449c      	add	ip, r3
 800a7ba:	4663      	mov	r3, ip
 800a7bc:	681b      	ldr	r3, [r3, #0]
 800a7be:	2b00      	cmp	r3, #0
 800a7c0:	d051      	beq.n	800a866 <__multiply+0x116>
 800a7c2:	9b04      	ldr	r3, [sp, #16]
 800a7c4:	9a02      	ldr	r2, [sp, #8]
 800a7c6:	0018      	movs	r0, r3
 800a7c8:	611a      	str	r2, [r3, #16]
 800a7ca:	b009      	add	sp, #36	; 0x24
 800a7cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a7ce:	c302      	stmia	r3!, {r1}
 800a7d0:	e7dd      	b.n	800a78e <__multiply+0x3e>
 800a7d2:	9b01      	ldr	r3, [sp, #4]
 800a7d4:	681b      	ldr	r3, [r3, #0]
 800a7d6:	b298      	uxth	r0, r3
 800a7d8:	2800      	cmp	r0, #0
 800a7da:	d01c      	beq.n	800a816 <__multiply+0xc6>
 800a7dc:	0015      	movs	r5, r2
 800a7de:	2600      	movs	r6, #0
 800a7e0:	9f03      	ldr	r7, [sp, #12]
 800a7e2:	cf02      	ldmia	r7!, {r1}
 800a7e4:	682c      	ldr	r4, [r5, #0]
 800a7e6:	b28b      	uxth	r3, r1
 800a7e8:	4343      	muls	r3, r0
 800a7ea:	0c09      	lsrs	r1, r1, #16
 800a7ec:	4341      	muls	r1, r0
 800a7ee:	b2a4      	uxth	r4, r4
 800a7f0:	191b      	adds	r3, r3, r4
 800a7f2:	199b      	adds	r3, r3, r6
 800a7f4:	000e      	movs	r6, r1
 800a7f6:	6829      	ldr	r1, [r5, #0]
 800a7f8:	9506      	str	r5, [sp, #24]
 800a7fa:	0c09      	lsrs	r1, r1, #16
 800a7fc:	1871      	adds	r1, r6, r1
 800a7fe:	0c1e      	lsrs	r6, r3, #16
 800a800:	1989      	adds	r1, r1, r6
 800a802:	0c0e      	lsrs	r6, r1, #16
 800a804:	b29b      	uxth	r3, r3
 800a806:	0409      	lsls	r1, r1, #16
 800a808:	430b      	orrs	r3, r1
 800a80a:	c508      	stmia	r5!, {r3}
 800a80c:	9b05      	ldr	r3, [sp, #20]
 800a80e:	42bb      	cmp	r3, r7
 800a810:	d8e7      	bhi.n	800a7e2 <__multiply+0x92>
 800a812:	9b06      	ldr	r3, [sp, #24]
 800a814:	605e      	str	r6, [r3, #4]
 800a816:	9b01      	ldr	r3, [sp, #4]
 800a818:	681b      	ldr	r3, [r3, #0]
 800a81a:	0c1d      	lsrs	r5, r3, #16
 800a81c:	d01e      	beq.n	800a85c <__multiply+0x10c>
 800a81e:	0010      	movs	r0, r2
 800a820:	2700      	movs	r7, #0
 800a822:	6813      	ldr	r3, [r2, #0]
 800a824:	9e03      	ldr	r6, [sp, #12]
 800a826:	6831      	ldr	r1, [r6, #0]
 800a828:	6804      	ldr	r4, [r0, #0]
 800a82a:	b289      	uxth	r1, r1
 800a82c:	4369      	muls	r1, r5
 800a82e:	0c24      	lsrs	r4, r4, #16
 800a830:	1909      	adds	r1, r1, r4
 800a832:	19c9      	adds	r1, r1, r7
 800a834:	040f      	lsls	r7, r1, #16
 800a836:	b29b      	uxth	r3, r3
 800a838:	433b      	orrs	r3, r7
 800a83a:	6003      	str	r3, [r0, #0]
 800a83c:	ce80      	ldmia	r6!, {r7}
 800a83e:	6843      	ldr	r3, [r0, #4]
 800a840:	0c3f      	lsrs	r7, r7, #16
 800a842:	436f      	muls	r7, r5
 800a844:	b29b      	uxth	r3, r3
 800a846:	18fb      	adds	r3, r7, r3
 800a848:	0c09      	lsrs	r1, r1, #16
 800a84a:	185b      	adds	r3, r3, r1
 800a84c:	9905      	ldr	r1, [sp, #20]
 800a84e:	9006      	str	r0, [sp, #24]
 800a850:	0c1f      	lsrs	r7, r3, #16
 800a852:	3004      	adds	r0, #4
 800a854:	42b1      	cmp	r1, r6
 800a856:	d8e6      	bhi.n	800a826 <__multiply+0xd6>
 800a858:	9906      	ldr	r1, [sp, #24]
 800a85a:	604b      	str	r3, [r1, #4]
 800a85c:	9b01      	ldr	r3, [sp, #4]
 800a85e:	3204      	adds	r2, #4
 800a860:	3304      	adds	r3, #4
 800a862:	9301      	str	r3, [sp, #4]
 800a864:	e79f      	b.n	800a7a6 <__multiply+0x56>
 800a866:	9b02      	ldr	r3, [sp, #8]
 800a868:	3b01      	subs	r3, #1
 800a86a:	9302      	str	r3, [sp, #8]
 800a86c:	e79f      	b.n	800a7ae <__multiply+0x5e>
	...

0800a870 <__pow5mult>:
 800a870:	2303      	movs	r3, #3
 800a872:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a874:	4013      	ands	r3, r2
 800a876:	0005      	movs	r5, r0
 800a878:	000e      	movs	r6, r1
 800a87a:	0014      	movs	r4, r2
 800a87c:	2b00      	cmp	r3, #0
 800a87e:	d008      	beq.n	800a892 <__pow5mult+0x22>
 800a880:	4922      	ldr	r1, [pc, #136]	; (800a90c <__pow5mult+0x9c>)
 800a882:	3b01      	subs	r3, #1
 800a884:	009a      	lsls	r2, r3, #2
 800a886:	5852      	ldr	r2, [r2, r1]
 800a888:	2300      	movs	r3, #0
 800a88a:	0031      	movs	r1, r6
 800a88c:	f7ff fed0 	bl	800a630 <__multadd>
 800a890:	0006      	movs	r6, r0
 800a892:	10a3      	asrs	r3, r4, #2
 800a894:	9301      	str	r3, [sp, #4]
 800a896:	d036      	beq.n	800a906 <__pow5mult+0x96>
 800a898:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 800a89a:	2c00      	cmp	r4, #0
 800a89c:	d107      	bne.n	800a8ae <__pow5mult+0x3e>
 800a89e:	2010      	movs	r0, #16
 800a8a0:	f7fc fcfe 	bl	80072a0 <malloc>
 800a8a4:	6268      	str	r0, [r5, #36]	; 0x24
 800a8a6:	6044      	str	r4, [r0, #4]
 800a8a8:	6084      	str	r4, [r0, #8]
 800a8aa:	6004      	str	r4, [r0, #0]
 800a8ac:	60c4      	str	r4, [r0, #12]
 800a8ae:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 800a8b0:	68bc      	ldr	r4, [r7, #8]
 800a8b2:	2c00      	cmp	r4, #0
 800a8b4:	d107      	bne.n	800a8c6 <__pow5mult+0x56>
 800a8b6:	4916      	ldr	r1, [pc, #88]	; (800a910 <__pow5mult+0xa0>)
 800a8b8:	0028      	movs	r0, r5
 800a8ba:	f7ff ff40 	bl	800a73e <__i2b>
 800a8be:	2300      	movs	r3, #0
 800a8c0:	0004      	movs	r4, r0
 800a8c2:	60b8      	str	r0, [r7, #8]
 800a8c4:	6003      	str	r3, [r0, #0]
 800a8c6:	2201      	movs	r2, #1
 800a8c8:	9b01      	ldr	r3, [sp, #4]
 800a8ca:	4213      	tst	r3, r2
 800a8cc:	d00a      	beq.n	800a8e4 <__pow5mult+0x74>
 800a8ce:	0031      	movs	r1, r6
 800a8d0:	0022      	movs	r2, r4
 800a8d2:	0028      	movs	r0, r5
 800a8d4:	f7ff ff3c 	bl	800a750 <__multiply>
 800a8d8:	0007      	movs	r7, r0
 800a8da:	0031      	movs	r1, r6
 800a8dc:	0028      	movs	r0, r5
 800a8de:	f7ff fe8e 	bl	800a5fe <_Bfree>
 800a8e2:	003e      	movs	r6, r7
 800a8e4:	9b01      	ldr	r3, [sp, #4]
 800a8e6:	105b      	asrs	r3, r3, #1
 800a8e8:	9301      	str	r3, [sp, #4]
 800a8ea:	d00c      	beq.n	800a906 <__pow5mult+0x96>
 800a8ec:	6820      	ldr	r0, [r4, #0]
 800a8ee:	2800      	cmp	r0, #0
 800a8f0:	d107      	bne.n	800a902 <__pow5mult+0x92>
 800a8f2:	0022      	movs	r2, r4
 800a8f4:	0021      	movs	r1, r4
 800a8f6:	0028      	movs	r0, r5
 800a8f8:	f7ff ff2a 	bl	800a750 <__multiply>
 800a8fc:	2300      	movs	r3, #0
 800a8fe:	6020      	str	r0, [r4, #0]
 800a900:	6003      	str	r3, [r0, #0]
 800a902:	0004      	movs	r4, r0
 800a904:	e7df      	b.n	800a8c6 <__pow5mult+0x56>
 800a906:	0030      	movs	r0, r6
 800a908:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800a90a:	46c0      	nop			; (mov r8, r8)
 800a90c:	0800da00 	.word	0x0800da00
 800a910:	00000271 	.word	0x00000271

0800a914 <__lshift>:
 800a914:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a916:	000d      	movs	r5, r1
 800a918:	0017      	movs	r7, r2
 800a91a:	692b      	ldr	r3, [r5, #16]
 800a91c:	1154      	asrs	r4, r2, #5
 800a91e:	b085      	sub	sp, #20
 800a920:	18e3      	adds	r3, r4, r3
 800a922:	9301      	str	r3, [sp, #4]
 800a924:	3301      	adds	r3, #1
 800a926:	9300      	str	r3, [sp, #0]
 800a928:	6849      	ldr	r1, [r1, #4]
 800a92a:	68ab      	ldr	r3, [r5, #8]
 800a92c:	9002      	str	r0, [sp, #8]
 800a92e:	9a00      	ldr	r2, [sp, #0]
 800a930:	4293      	cmp	r3, r2
 800a932:	db35      	blt.n	800a9a0 <__lshift+0x8c>
 800a934:	9802      	ldr	r0, [sp, #8]
 800a936:	f7ff fe2a 	bl	800a58e <_Balloc>
 800a93a:	2300      	movs	r3, #0
 800a93c:	0002      	movs	r2, r0
 800a93e:	0006      	movs	r6, r0
 800a940:	0019      	movs	r1, r3
 800a942:	3214      	adds	r2, #20
 800a944:	42a3      	cmp	r3, r4
 800a946:	db2e      	blt.n	800a9a6 <__lshift+0x92>
 800a948:	43e3      	mvns	r3, r4
 800a94a:	17db      	asrs	r3, r3, #31
 800a94c:	401c      	ands	r4, r3
 800a94e:	002b      	movs	r3, r5
 800a950:	00a4      	lsls	r4, r4, #2
 800a952:	1914      	adds	r4, r2, r4
 800a954:	692a      	ldr	r2, [r5, #16]
 800a956:	3314      	adds	r3, #20
 800a958:	0092      	lsls	r2, r2, #2
 800a95a:	189a      	adds	r2, r3, r2
 800a95c:	4694      	mov	ip, r2
 800a95e:	221f      	movs	r2, #31
 800a960:	4017      	ands	r7, r2
 800a962:	d024      	beq.n	800a9ae <__lshift+0x9a>
 800a964:	3201      	adds	r2, #1
 800a966:	1bd2      	subs	r2, r2, r7
 800a968:	9203      	str	r2, [sp, #12]
 800a96a:	2200      	movs	r2, #0
 800a96c:	6819      	ldr	r1, [r3, #0]
 800a96e:	0020      	movs	r0, r4
 800a970:	40b9      	lsls	r1, r7
 800a972:	430a      	orrs	r2, r1
 800a974:	c404      	stmia	r4!, {r2}
 800a976:	cb04      	ldmia	r3!, {r2}
 800a978:	9903      	ldr	r1, [sp, #12]
 800a97a:	40ca      	lsrs	r2, r1
 800a97c:	459c      	cmp	ip, r3
 800a97e:	d8f5      	bhi.n	800a96c <__lshift+0x58>
 800a980:	6042      	str	r2, [r0, #4]
 800a982:	2a00      	cmp	r2, #0
 800a984:	d002      	beq.n	800a98c <__lshift+0x78>
 800a986:	9b01      	ldr	r3, [sp, #4]
 800a988:	3302      	adds	r3, #2
 800a98a:	9300      	str	r3, [sp, #0]
 800a98c:	9b00      	ldr	r3, [sp, #0]
 800a98e:	9802      	ldr	r0, [sp, #8]
 800a990:	3b01      	subs	r3, #1
 800a992:	6133      	str	r3, [r6, #16]
 800a994:	0029      	movs	r1, r5
 800a996:	f7ff fe32 	bl	800a5fe <_Bfree>
 800a99a:	0030      	movs	r0, r6
 800a99c:	b005      	add	sp, #20
 800a99e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a9a0:	3101      	adds	r1, #1
 800a9a2:	005b      	lsls	r3, r3, #1
 800a9a4:	e7c3      	b.n	800a92e <__lshift+0x1a>
 800a9a6:	0098      	lsls	r0, r3, #2
 800a9a8:	5011      	str	r1, [r2, r0]
 800a9aa:	3301      	adds	r3, #1
 800a9ac:	e7ca      	b.n	800a944 <__lshift+0x30>
 800a9ae:	cb04      	ldmia	r3!, {r2}
 800a9b0:	c404      	stmia	r4!, {r2}
 800a9b2:	459c      	cmp	ip, r3
 800a9b4:	d8fb      	bhi.n	800a9ae <__lshift+0x9a>
 800a9b6:	e7e9      	b.n	800a98c <__lshift+0x78>

0800a9b8 <__mcmp>:
 800a9b8:	690a      	ldr	r2, [r1, #16]
 800a9ba:	6903      	ldr	r3, [r0, #16]
 800a9bc:	b530      	push	{r4, r5, lr}
 800a9be:	1a9b      	subs	r3, r3, r2
 800a9c0:	d10d      	bne.n	800a9de <__mcmp+0x26>
 800a9c2:	0092      	lsls	r2, r2, #2
 800a9c4:	3014      	adds	r0, #20
 800a9c6:	3114      	adds	r1, #20
 800a9c8:	1884      	adds	r4, r0, r2
 800a9ca:	1889      	adds	r1, r1, r2
 800a9cc:	3c04      	subs	r4, #4
 800a9ce:	3904      	subs	r1, #4
 800a9d0:	6825      	ldr	r5, [r4, #0]
 800a9d2:	680a      	ldr	r2, [r1, #0]
 800a9d4:	4295      	cmp	r5, r2
 800a9d6:	d004      	beq.n	800a9e2 <__mcmp+0x2a>
 800a9d8:	2301      	movs	r3, #1
 800a9da:	4295      	cmp	r5, r2
 800a9dc:	d304      	bcc.n	800a9e8 <__mcmp+0x30>
 800a9de:	0018      	movs	r0, r3
 800a9e0:	bd30      	pop	{r4, r5, pc}
 800a9e2:	42a0      	cmp	r0, r4
 800a9e4:	d3f2      	bcc.n	800a9cc <__mcmp+0x14>
 800a9e6:	e7fa      	b.n	800a9de <__mcmp+0x26>
 800a9e8:	425b      	negs	r3, r3
 800a9ea:	e7f8      	b.n	800a9de <__mcmp+0x26>

0800a9ec <__mdiff>:
 800a9ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a9ee:	000d      	movs	r5, r1
 800a9f0:	b085      	sub	sp, #20
 800a9f2:	0007      	movs	r7, r0
 800a9f4:	0011      	movs	r1, r2
 800a9f6:	0028      	movs	r0, r5
 800a9f8:	0014      	movs	r4, r2
 800a9fa:	f7ff ffdd 	bl	800a9b8 <__mcmp>
 800a9fe:	1e06      	subs	r6, r0, #0
 800aa00:	d108      	bne.n	800aa14 <__mdiff+0x28>
 800aa02:	0001      	movs	r1, r0
 800aa04:	0038      	movs	r0, r7
 800aa06:	f7ff fdc2 	bl	800a58e <_Balloc>
 800aa0a:	2301      	movs	r3, #1
 800aa0c:	6146      	str	r6, [r0, #20]
 800aa0e:	6103      	str	r3, [r0, #16]
 800aa10:	b005      	add	sp, #20
 800aa12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa14:	2301      	movs	r3, #1
 800aa16:	9301      	str	r3, [sp, #4]
 800aa18:	2800      	cmp	r0, #0
 800aa1a:	db04      	blt.n	800aa26 <__mdiff+0x3a>
 800aa1c:	0023      	movs	r3, r4
 800aa1e:	002c      	movs	r4, r5
 800aa20:	001d      	movs	r5, r3
 800aa22:	2300      	movs	r3, #0
 800aa24:	9301      	str	r3, [sp, #4]
 800aa26:	6861      	ldr	r1, [r4, #4]
 800aa28:	0038      	movs	r0, r7
 800aa2a:	f7ff fdb0 	bl	800a58e <_Balloc>
 800aa2e:	002f      	movs	r7, r5
 800aa30:	2200      	movs	r2, #0
 800aa32:	9b01      	ldr	r3, [sp, #4]
 800aa34:	6926      	ldr	r6, [r4, #16]
 800aa36:	60c3      	str	r3, [r0, #12]
 800aa38:	3414      	adds	r4, #20
 800aa3a:	00b3      	lsls	r3, r6, #2
 800aa3c:	18e3      	adds	r3, r4, r3
 800aa3e:	9302      	str	r3, [sp, #8]
 800aa40:	692b      	ldr	r3, [r5, #16]
 800aa42:	3714      	adds	r7, #20
 800aa44:	009b      	lsls	r3, r3, #2
 800aa46:	18fb      	adds	r3, r7, r3
 800aa48:	9303      	str	r3, [sp, #12]
 800aa4a:	0003      	movs	r3, r0
 800aa4c:	4694      	mov	ip, r2
 800aa4e:	3314      	adds	r3, #20
 800aa50:	cc20      	ldmia	r4!, {r5}
 800aa52:	cf04      	ldmia	r7!, {r2}
 800aa54:	9201      	str	r2, [sp, #4]
 800aa56:	b2aa      	uxth	r2, r5
 800aa58:	4494      	add	ip, r2
 800aa5a:	466a      	mov	r2, sp
 800aa5c:	4661      	mov	r1, ip
 800aa5e:	8892      	ldrh	r2, [r2, #4]
 800aa60:	0c2d      	lsrs	r5, r5, #16
 800aa62:	1a8a      	subs	r2, r1, r2
 800aa64:	9901      	ldr	r1, [sp, #4]
 800aa66:	0c09      	lsrs	r1, r1, #16
 800aa68:	1a69      	subs	r1, r5, r1
 800aa6a:	1415      	asrs	r5, r2, #16
 800aa6c:	1949      	adds	r1, r1, r5
 800aa6e:	140d      	asrs	r5, r1, #16
 800aa70:	b292      	uxth	r2, r2
 800aa72:	0409      	lsls	r1, r1, #16
 800aa74:	430a      	orrs	r2, r1
 800aa76:	601a      	str	r2, [r3, #0]
 800aa78:	9a03      	ldr	r2, [sp, #12]
 800aa7a:	46ac      	mov	ip, r5
 800aa7c:	3304      	adds	r3, #4
 800aa7e:	42ba      	cmp	r2, r7
 800aa80:	d8e6      	bhi.n	800aa50 <__mdiff+0x64>
 800aa82:	9902      	ldr	r1, [sp, #8]
 800aa84:	001a      	movs	r2, r3
 800aa86:	428c      	cmp	r4, r1
 800aa88:	d305      	bcc.n	800aa96 <__mdiff+0xaa>
 800aa8a:	3a04      	subs	r2, #4
 800aa8c:	6813      	ldr	r3, [r2, #0]
 800aa8e:	2b00      	cmp	r3, #0
 800aa90:	d00e      	beq.n	800aab0 <__mdiff+0xc4>
 800aa92:	6106      	str	r6, [r0, #16]
 800aa94:	e7bc      	b.n	800aa10 <__mdiff+0x24>
 800aa96:	cc04      	ldmia	r4!, {r2}
 800aa98:	b291      	uxth	r1, r2
 800aa9a:	4461      	add	r1, ip
 800aa9c:	140d      	asrs	r5, r1, #16
 800aa9e:	0c12      	lsrs	r2, r2, #16
 800aaa0:	1952      	adds	r2, r2, r5
 800aaa2:	1415      	asrs	r5, r2, #16
 800aaa4:	b289      	uxth	r1, r1
 800aaa6:	0412      	lsls	r2, r2, #16
 800aaa8:	430a      	orrs	r2, r1
 800aaaa:	46ac      	mov	ip, r5
 800aaac:	c304      	stmia	r3!, {r2}
 800aaae:	e7e8      	b.n	800aa82 <__mdiff+0x96>
 800aab0:	3e01      	subs	r6, #1
 800aab2:	e7ea      	b.n	800aa8a <__mdiff+0x9e>

0800aab4 <__d2b>:
 800aab4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800aab6:	001d      	movs	r5, r3
 800aab8:	2101      	movs	r1, #1
 800aaba:	0014      	movs	r4, r2
 800aabc:	9f08      	ldr	r7, [sp, #32]
 800aabe:	f7ff fd66 	bl	800a58e <_Balloc>
 800aac2:	032b      	lsls	r3, r5, #12
 800aac4:	006d      	lsls	r5, r5, #1
 800aac6:	0006      	movs	r6, r0
 800aac8:	0b1b      	lsrs	r3, r3, #12
 800aaca:	0d6d      	lsrs	r5, r5, #21
 800aacc:	d124      	bne.n	800ab18 <__d2b+0x64>
 800aace:	9301      	str	r3, [sp, #4]
 800aad0:	2c00      	cmp	r4, #0
 800aad2:	d027      	beq.n	800ab24 <__d2b+0x70>
 800aad4:	4668      	mov	r0, sp
 800aad6:	9400      	str	r4, [sp, #0]
 800aad8:	f7ff fe02 	bl	800a6e0 <__lo0bits>
 800aadc:	9c00      	ldr	r4, [sp, #0]
 800aade:	2800      	cmp	r0, #0
 800aae0:	d01e      	beq.n	800ab20 <__d2b+0x6c>
 800aae2:	9b01      	ldr	r3, [sp, #4]
 800aae4:	2120      	movs	r1, #32
 800aae6:	001a      	movs	r2, r3
 800aae8:	1a09      	subs	r1, r1, r0
 800aaea:	408a      	lsls	r2, r1
 800aaec:	40c3      	lsrs	r3, r0
 800aaee:	4322      	orrs	r2, r4
 800aaf0:	6172      	str	r2, [r6, #20]
 800aaf2:	9301      	str	r3, [sp, #4]
 800aaf4:	9c01      	ldr	r4, [sp, #4]
 800aaf6:	61b4      	str	r4, [r6, #24]
 800aaf8:	1e63      	subs	r3, r4, #1
 800aafa:	419c      	sbcs	r4, r3
 800aafc:	3401      	adds	r4, #1
 800aafe:	6134      	str	r4, [r6, #16]
 800ab00:	2d00      	cmp	r5, #0
 800ab02:	d018      	beq.n	800ab36 <__d2b+0x82>
 800ab04:	4b12      	ldr	r3, [pc, #72]	; (800ab50 <__d2b+0x9c>)
 800ab06:	18ed      	adds	r5, r5, r3
 800ab08:	2335      	movs	r3, #53	; 0x35
 800ab0a:	182d      	adds	r5, r5, r0
 800ab0c:	603d      	str	r5, [r7, #0]
 800ab0e:	1a18      	subs	r0, r3, r0
 800ab10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ab12:	6018      	str	r0, [r3, #0]
 800ab14:	0030      	movs	r0, r6
 800ab16:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800ab18:	2280      	movs	r2, #128	; 0x80
 800ab1a:	0352      	lsls	r2, r2, #13
 800ab1c:	4313      	orrs	r3, r2
 800ab1e:	e7d6      	b.n	800aace <__d2b+0x1a>
 800ab20:	6174      	str	r4, [r6, #20]
 800ab22:	e7e7      	b.n	800aaf4 <__d2b+0x40>
 800ab24:	a801      	add	r0, sp, #4
 800ab26:	f7ff fddb 	bl	800a6e0 <__lo0bits>
 800ab2a:	2401      	movs	r4, #1
 800ab2c:	9b01      	ldr	r3, [sp, #4]
 800ab2e:	6134      	str	r4, [r6, #16]
 800ab30:	6173      	str	r3, [r6, #20]
 800ab32:	3020      	adds	r0, #32
 800ab34:	e7e4      	b.n	800ab00 <__d2b+0x4c>
 800ab36:	4b07      	ldr	r3, [pc, #28]	; (800ab54 <__d2b+0xa0>)
 800ab38:	18c0      	adds	r0, r0, r3
 800ab3a:	4b07      	ldr	r3, [pc, #28]	; (800ab58 <__d2b+0xa4>)
 800ab3c:	6038      	str	r0, [r7, #0]
 800ab3e:	18e3      	adds	r3, r4, r3
 800ab40:	009b      	lsls	r3, r3, #2
 800ab42:	18f3      	adds	r3, r6, r3
 800ab44:	6958      	ldr	r0, [r3, #20]
 800ab46:	f7ff fdb1 	bl	800a6ac <__hi0bits>
 800ab4a:	0164      	lsls	r4, r4, #5
 800ab4c:	1a20      	subs	r0, r4, r0
 800ab4e:	e7df      	b.n	800ab10 <__d2b+0x5c>
 800ab50:	fffffbcd 	.word	0xfffffbcd
 800ab54:	fffffbce 	.word	0xfffffbce
 800ab58:	3fffffff 	.word	0x3fffffff

0800ab5c <_calloc_r>:
 800ab5c:	434a      	muls	r2, r1
 800ab5e:	b570      	push	{r4, r5, r6, lr}
 800ab60:	0011      	movs	r1, r2
 800ab62:	0014      	movs	r4, r2
 800ab64:	f7fc fc0c 	bl	8007380 <_malloc_r>
 800ab68:	1e05      	subs	r5, r0, #0
 800ab6a:	d003      	beq.n	800ab74 <_calloc_r+0x18>
 800ab6c:	0022      	movs	r2, r4
 800ab6e:	2100      	movs	r1, #0
 800ab70:	f7fc fbb3 	bl	80072da <memset>
 800ab74:	0028      	movs	r0, r5
 800ab76:	bd70      	pop	{r4, r5, r6, pc}

0800ab78 <__ssputs_r>:
 800ab78:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab7a:	688e      	ldr	r6, [r1, #8]
 800ab7c:	b085      	sub	sp, #20
 800ab7e:	0007      	movs	r7, r0
 800ab80:	000c      	movs	r4, r1
 800ab82:	9203      	str	r2, [sp, #12]
 800ab84:	9301      	str	r3, [sp, #4]
 800ab86:	429e      	cmp	r6, r3
 800ab88:	d83c      	bhi.n	800ac04 <__ssputs_r+0x8c>
 800ab8a:	2390      	movs	r3, #144	; 0x90
 800ab8c:	898a      	ldrh	r2, [r1, #12]
 800ab8e:	00db      	lsls	r3, r3, #3
 800ab90:	421a      	tst	r2, r3
 800ab92:	d034      	beq.n	800abfe <__ssputs_r+0x86>
 800ab94:	2503      	movs	r5, #3
 800ab96:	6909      	ldr	r1, [r1, #16]
 800ab98:	6823      	ldr	r3, [r4, #0]
 800ab9a:	1a5b      	subs	r3, r3, r1
 800ab9c:	9302      	str	r3, [sp, #8]
 800ab9e:	6963      	ldr	r3, [r4, #20]
 800aba0:	9802      	ldr	r0, [sp, #8]
 800aba2:	435d      	muls	r5, r3
 800aba4:	0feb      	lsrs	r3, r5, #31
 800aba6:	195d      	adds	r5, r3, r5
 800aba8:	9b01      	ldr	r3, [sp, #4]
 800abaa:	106d      	asrs	r5, r5, #1
 800abac:	3301      	adds	r3, #1
 800abae:	181b      	adds	r3, r3, r0
 800abb0:	42ab      	cmp	r3, r5
 800abb2:	d900      	bls.n	800abb6 <__ssputs_r+0x3e>
 800abb4:	001d      	movs	r5, r3
 800abb6:	0553      	lsls	r3, r2, #21
 800abb8:	d532      	bpl.n	800ac20 <__ssputs_r+0xa8>
 800abba:	0029      	movs	r1, r5
 800abbc:	0038      	movs	r0, r7
 800abbe:	f7fc fbdf 	bl	8007380 <_malloc_r>
 800abc2:	1e06      	subs	r6, r0, #0
 800abc4:	d109      	bne.n	800abda <__ssputs_r+0x62>
 800abc6:	230c      	movs	r3, #12
 800abc8:	603b      	str	r3, [r7, #0]
 800abca:	2340      	movs	r3, #64	; 0x40
 800abcc:	2001      	movs	r0, #1
 800abce:	89a2      	ldrh	r2, [r4, #12]
 800abd0:	4240      	negs	r0, r0
 800abd2:	4313      	orrs	r3, r2
 800abd4:	81a3      	strh	r3, [r4, #12]
 800abd6:	b005      	add	sp, #20
 800abd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800abda:	9a02      	ldr	r2, [sp, #8]
 800abdc:	6921      	ldr	r1, [r4, #16]
 800abde:	f7fc fb73 	bl	80072c8 <memcpy>
 800abe2:	89a3      	ldrh	r3, [r4, #12]
 800abe4:	4a14      	ldr	r2, [pc, #80]	; (800ac38 <__ssputs_r+0xc0>)
 800abe6:	401a      	ands	r2, r3
 800abe8:	2380      	movs	r3, #128	; 0x80
 800abea:	4313      	orrs	r3, r2
 800abec:	81a3      	strh	r3, [r4, #12]
 800abee:	9b02      	ldr	r3, [sp, #8]
 800abf0:	6126      	str	r6, [r4, #16]
 800abf2:	18f6      	adds	r6, r6, r3
 800abf4:	6026      	str	r6, [r4, #0]
 800abf6:	6165      	str	r5, [r4, #20]
 800abf8:	9e01      	ldr	r6, [sp, #4]
 800abfa:	1aed      	subs	r5, r5, r3
 800abfc:	60a5      	str	r5, [r4, #8]
 800abfe:	9b01      	ldr	r3, [sp, #4]
 800ac00:	429e      	cmp	r6, r3
 800ac02:	d900      	bls.n	800ac06 <__ssputs_r+0x8e>
 800ac04:	9e01      	ldr	r6, [sp, #4]
 800ac06:	0032      	movs	r2, r6
 800ac08:	9903      	ldr	r1, [sp, #12]
 800ac0a:	6820      	ldr	r0, [r4, #0]
 800ac0c:	f000 fb80 	bl	800b310 <memmove>
 800ac10:	68a3      	ldr	r3, [r4, #8]
 800ac12:	2000      	movs	r0, #0
 800ac14:	1b9b      	subs	r3, r3, r6
 800ac16:	60a3      	str	r3, [r4, #8]
 800ac18:	6823      	ldr	r3, [r4, #0]
 800ac1a:	199e      	adds	r6, r3, r6
 800ac1c:	6026      	str	r6, [r4, #0]
 800ac1e:	e7da      	b.n	800abd6 <__ssputs_r+0x5e>
 800ac20:	002a      	movs	r2, r5
 800ac22:	0038      	movs	r0, r7
 800ac24:	f000 fb87 	bl	800b336 <_realloc_r>
 800ac28:	1e06      	subs	r6, r0, #0
 800ac2a:	d1e0      	bne.n	800abee <__ssputs_r+0x76>
 800ac2c:	6921      	ldr	r1, [r4, #16]
 800ac2e:	0038      	movs	r0, r7
 800ac30:	f7fc fb5c 	bl	80072ec <_free_r>
 800ac34:	e7c7      	b.n	800abc6 <__ssputs_r+0x4e>
 800ac36:	46c0      	nop			; (mov r8, r8)
 800ac38:	fffffb7f 	.word	0xfffffb7f

0800ac3c <_svfiprintf_r>:
 800ac3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ac3e:	b0a1      	sub	sp, #132	; 0x84
 800ac40:	9003      	str	r0, [sp, #12]
 800ac42:	001d      	movs	r5, r3
 800ac44:	898b      	ldrh	r3, [r1, #12]
 800ac46:	000f      	movs	r7, r1
 800ac48:	0016      	movs	r6, r2
 800ac4a:	061b      	lsls	r3, r3, #24
 800ac4c:	d511      	bpl.n	800ac72 <_svfiprintf_r+0x36>
 800ac4e:	690b      	ldr	r3, [r1, #16]
 800ac50:	2b00      	cmp	r3, #0
 800ac52:	d10e      	bne.n	800ac72 <_svfiprintf_r+0x36>
 800ac54:	2140      	movs	r1, #64	; 0x40
 800ac56:	f7fc fb93 	bl	8007380 <_malloc_r>
 800ac5a:	6038      	str	r0, [r7, #0]
 800ac5c:	6138      	str	r0, [r7, #16]
 800ac5e:	2800      	cmp	r0, #0
 800ac60:	d105      	bne.n	800ac6e <_svfiprintf_r+0x32>
 800ac62:	230c      	movs	r3, #12
 800ac64:	9a03      	ldr	r2, [sp, #12]
 800ac66:	3801      	subs	r0, #1
 800ac68:	6013      	str	r3, [r2, #0]
 800ac6a:	b021      	add	sp, #132	; 0x84
 800ac6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac6e:	2340      	movs	r3, #64	; 0x40
 800ac70:	617b      	str	r3, [r7, #20]
 800ac72:	2300      	movs	r3, #0
 800ac74:	ac08      	add	r4, sp, #32
 800ac76:	6163      	str	r3, [r4, #20]
 800ac78:	3320      	adds	r3, #32
 800ac7a:	7663      	strb	r3, [r4, #25]
 800ac7c:	3310      	adds	r3, #16
 800ac7e:	76a3      	strb	r3, [r4, #26]
 800ac80:	9507      	str	r5, [sp, #28]
 800ac82:	0035      	movs	r5, r6
 800ac84:	782b      	ldrb	r3, [r5, #0]
 800ac86:	2b00      	cmp	r3, #0
 800ac88:	d001      	beq.n	800ac8e <_svfiprintf_r+0x52>
 800ac8a:	2b25      	cmp	r3, #37	; 0x25
 800ac8c:	d146      	bne.n	800ad1c <_svfiprintf_r+0xe0>
 800ac8e:	1bab      	subs	r3, r5, r6
 800ac90:	9305      	str	r3, [sp, #20]
 800ac92:	d00c      	beq.n	800acae <_svfiprintf_r+0x72>
 800ac94:	0032      	movs	r2, r6
 800ac96:	0039      	movs	r1, r7
 800ac98:	9803      	ldr	r0, [sp, #12]
 800ac9a:	f7ff ff6d 	bl	800ab78 <__ssputs_r>
 800ac9e:	1c43      	adds	r3, r0, #1
 800aca0:	d100      	bne.n	800aca4 <_svfiprintf_r+0x68>
 800aca2:	e0ae      	b.n	800ae02 <_svfiprintf_r+0x1c6>
 800aca4:	6962      	ldr	r2, [r4, #20]
 800aca6:	9b05      	ldr	r3, [sp, #20]
 800aca8:	4694      	mov	ip, r2
 800acaa:	4463      	add	r3, ip
 800acac:	6163      	str	r3, [r4, #20]
 800acae:	782b      	ldrb	r3, [r5, #0]
 800acb0:	2b00      	cmp	r3, #0
 800acb2:	d100      	bne.n	800acb6 <_svfiprintf_r+0x7a>
 800acb4:	e0a5      	b.n	800ae02 <_svfiprintf_r+0x1c6>
 800acb6:	2201      	movs	r2, #1
 800acb8:	2300      	movs	r3, #0
 800acba:	4252      	negs	r2, r2
 800acbc:	6062      	str	r2, [r4, #4]
 800acbe:	a904      	add	r1, sp, #16
 800acc0:	3254      	adds	r2, #84	; 0x54
 800acc2:	1852      	adds	r2, r2, r1
 800acc4:	1c6e      	adds	r6, r5, #1
 800acc6:	6023      	str	r3, [r4, #0]
 800acc8:	60e3      	str	r3, [r4, #12]
 800acca:	60a3      	str	r3, [r4, #8]
 800accc:	7013      	strb	r3, [r2, #0]
 800acce:	65a3      	str	r3, [r4, #88]	; 0x58
 800acd0:	7831      	ldrb	r1, [r6, #0]
 800acd2:	2205      	movs	r2, #5
 800acd4:	4853      	ldr	r0, [pc, #332]	; (800ae24 <_svfiprintf_r+0x1e8>)
 800acd6:	f7ff fc4d 	bl	800a574 <memchr>
 800acda:	1c75      	adds	r5, r6, #1
 800acdc:	2800      	cmp	r0, #0
 800acde:	d11f      	bne.n	800ad20 <_svfiprintf_r+0xe4>
 800ace0:	6822      	ldr	r2, [r4, #0]
 800ace2:	06d3      	lsls	r3, r2, #27
 800ace4:	d504      	bpl.n	800acf0 <_svfiprintf_r+0xb4>
 800ace6:	2353      	movs	r3, #83	; 0x53
 800ace8:	a904      	add	r1, sp, #16
 800acea:	185b      	adds	r3, r3, r1
 800acec:	2120      	movs	r1, #32
 800acee:	7019      	strb	r1, [r3, #0]
 800acf0:	0713      	lsls	r3, r2, #28
 800acf2:	d504      	bpl.n	800acfe <_svfiprintf_r+0xc2>
 800acf4:	2353      	movs	r3, #83	; 0x53
 800acf6:	a904      	add	r1, sp, #16
 800acf8:	185b      	adds	r3, r3, r1
 800acfa:	212b      	movs	r1, #43	; 0x2b
 800acfc:	7019      	strb	r1, [r3, #0]
 800acfe:	7833      	ldrb	r3, [r6, #0]
 800ad00:	2b2a      	cmp	r3, #42	; 0x2a
 800ad02:	d016      	beq.n	800ad32 <_svfiprintf_r+0xf6>
 800ad04:	0035      	movs	r5, r6
 800ad06:	2100      	movs	r1, #0
 800ad08:	200a      	movs	r0, #10
 800ad0a:	68e3      	ldr	r3, [r4, #12]
 800ad0c:	782a      	ldrb	r2, [r5, #0]
 800ad0e:	1c6e      	adds	r6, r5, #1
 800ad10:	3a30      	subs	r2, #48	; 0x30
 800ad12:	2a09      	cmp	r2, #9
 800ad14:	d94e      	bls.n	800adb4 <_svfiprintf_r+0x178>
 800ad16:	2900      	cmp	r1, #0
 800ad18:	d018      	beq.n	800ad4c <_svfiprintf_r+0x110>
 800ad1a:	e010      	b.n	800ad3e <_svfiprintf_r+0x102>
 800ad1c:	3501      	adds	r5, #1
 800ad1e:	e7b1      	b.n	800ac84 <_svfiprintf_r+0x48>
 800ad20:	4b40      	ldr	r3, [pc, #256]	; (800ae24 <_svfiprintf_r+0x1e8>)
 800ad22:	6822      	ldr	r2, [r4, #0]
 800ad24:	1ac0      	subs	r0, r0, r3
 800ad26:	2301      	movs	r3, #1
 800ad28:	4083      	lsls	r3, r0
 800ad2a:	4313      	orrs	r3, r2
 800ad2c:	6023      	str	r3, [r4, #0]
 800ad2e:	002e      	movs	r6, r5
 800ad30:	e7ce      	b.n	800acd0 <_svfiprintf_r+0x94>
 800ad32:	9b07      	ldr	r3, [sp, #28]
 800ad34:	1d19      	adds	r1, r3, #4
 800ad36:	681b      	ldr	r3, [r3, #0]
 800ad38:	9107      	str	r1, [sp, #28]
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	db01      	blt.n	800ad42 <_svfiprintf_r+0x106>
 800ad3e:	930b      	str	r3, [sp, #44]	; 0x2c
 800ad40:	e004      	b.n	800ad4c <_svfiprintf_r+0x110>
 800ad42:	425b      	negs	r3, r3
 800ad44:	60e3      	str	r3, [r4, #12]
 800ad46:	2302      	movs	r3, #2
 800ad48:	4313      	orrs	r3, r2
 800ad4a:	6023      	str	r3, [r4, #0]
 800ad4c:	782b      	ldrb	r3, [r5, #0]
 800ad4e:	2b2e      	cmp	r3, #46	; 0x2e
 800ad50:	d10a      	bne.n	800ad68 <_svfiprintf_r+0x12c>
 800ad52:	786b      	ldrb	r3, [r5, #1]
 800ad54:	2b2a      	cmp	r3, #42	; 0x2a
 800ad56:	d135      	bne.n	800adc4 <_svfiprintf_r+0x188>
 800ad58:	9b07      	ldr	r3, [sp, #28]
 800ad5a:	3502      	adds	r5, #2
 800ad5c:	1d1a      	adds	r2, r3, #4
 800ad5e:	681b      	ldr	r3, [r3, #0]
 800ad60:	9207      	str	r2, [sp, #28]
 800ad62:	2b00      	cmp	r3, #0
 800ad64:	db2b      	blt.n	800adbe <_svfiprintf_r+0x182>
 800ad66:	9309      	str	r3, [sp, #36]	; 0x24
 800ad68:	4e2f      	ldr	r6, [pc, #188]	; (800ae28 <_svfiprintf_r+0x1ec>)
 800ad6a:	7829      	ldrb	r1, [r5, #0]
 800ad6c:	2203      	movs	r2, #3
 800ad6e:	0030      	movs	r0, r6
 800ad70:	f7ff fc00 	bl	800a574 <memchr>
 800ad74:	2800      	cmp	r0, #0
 800ad76:	d006      	beq.n	800ad86 <_svfiprintf_r+0x14a>
 800ad78:	2340      	movs	r3, #64	; 0x40
 800ad7a:	1b80      	subs	r0, r0, r6
 800ad7c:	4083      	lsls	r3, r0
 800ad7e:	6822      	ldr	r2, [r4, #0]
 800ad80:	3501      	adds	r5, #1
 800ad82:	4313      	orrs	r3, r2
 800ad84:	6023      	str	r3, [r4, #0]
 800ad86:	7829      	ldrb	r1, [r5, #0]
 800ad88:	2206      	movs	r2, #6
 800ad8a:	4828      	ldr	r0, [pc, #160]	; (800ae2c <_svfiprintf_r+0x1f0>)
 800ad8c:	1c6e      	adds	r6, r5, #1
 800ad8e:	7621      	strb	r1, [r4, #24]
 800ad90:	f7ff fbf0 	bl	800a574 <memchr>
 800ad94:	2800      	cmp	r0, #0
 800ad96:	d03c      	beq.n	800ae12 <_svfiprintf_r+0x1d6>
 800ad98:	4b25      	ldr	r3, [pc, #148]	; (800ae30 <_svfiprintf_r+0x1f4>)
 800ad9a:	2b00      	cmp	r3, #0
 800ad9c:	d125      	bne.n	800adea <_svfiprintf_r+0x1ae>
 800ad9e:	2207      	movs	r2, #7
 800ada0:	9b07      	ldr	r3, [sp, #28]
 800ada2:	3307      	adds	r3, #7
 800ada4:	4393      	bics	r3, r2
 800ada6:	3308      	adds	r3, #8
 800ada8:	9307      	str	r3, [sp, #28]
 800adaa:	6963      	ldr	r3, [r4, #20]
 800adac:	9a04      	ldr	r2, [sp, #16]
 800adae:	189b      	adds	r3, r3, r2
 800adb0:	6163      	str	r3, [r4, #20]
 800adb2:	e766      	b.n	800ac82 <_svfiprintf_r+0x46>
 800adb4:	4343      	muls	r3, r0
 800adb6:	2101      	movs	r1, #1
 800adb8:	189b      	adds	r3, r3, r2
 800adba:	0035      	movs	r5, r6
 800adbc:	e7a6      	b.n	800ad0c <_svfiprintf_r+0xd0>
 800adbe:	2301      	movs	r3, #1
 800adc0:	425b      	negs	r3, r3
 800adc2:	e7d0      	b.n	800ad66 <_svfiprintf_r+0x12a>
 800adc4:	2300      	movs	r3, #0
 800adc6:	200a      	movs	r0, #10
 800adc8:	001a      	movs	r2, r3
 800adca:	3501      	adds	r5, #1
 800adcc:	6063      	str	r3, [r4, #4]
 800adce:	7829      	ldrb	r1, [r5, #0]
 800add0:	1c6e      	adds	r6, r5, #1
 800add2:	3930      	subs	r1, #48	; 0x30
 800add4:	2909      	cmp	r1, #9
 800add6:	d903      	bls.n	800ade0 <_svfiprintf_r+0x1a4>
 800add8:	2b00      	cmp	r3, #0
 800adda:	d0c5      	beq.n	800ad68 <_svfiprintf_r+0x12c>
 800addc:	9209      	str	r2, [sp, #36]	; 0x24
 800adde:	e7c3      	b.n	800ad68 <_svfiprintf_r+0x12c>
 800ade0:	4342      	muls	r2, r0
 800ade2:	2301      	movs	r3, #1
 800ade4:	1852      	adds	r2, r2, r1
 800ade6:	0035      	movs	r5, r6
 800ade8:	e7f1      	b.n	800adce <_svfiprintf_r+0x192>
 800adea:	ab07      	add	r3, sp, #28
 800adec:	9300      	str	r3, [sp, #0]
 800adee:	003a      	movs	r2, r7
 800adf0:	4b10      	ldr	r3, [pc, #64]	; (800ae34 <_svfiprintf_r+0x1f8>)
 800adf2:	0021      	movs	r1, r4
 800adf4:	9803      	ldr	r0, [sp, #12]
 800adf6:	f7fc fbbd 	bl	8007574 <_printf_float>
 800adfa:	9004      	str	r0, [sp, #16]
 800adfc:	9b04      	ldr	r3, [sp, #16]
 800adfe:	3301      	adds	r3, #1
 800ae00:	d1d3      	bne.n	800adaa <_svfiprintf_r+0x16e>
 800ae02:	89bb      	ldrh	r3, [r7, #12]
 800ae04:	980d      	ldr	r0, [sp, #52]	; 0x34
 800ae06:	065b      	lsls	r3, r3, #25
 800ae08:	d400      	bmi.n	800ae0c <_svfiprintf_r+0x1d0>
 800ae0a:	e72e      	b.n	800ac6a <_svfiprintf_r+0x2e>
 800ae0c:	2001      	movs	r0, #1
 800ae0e:	4240      	negs	r0, r0
 800ae10:	e72b      	b.n	800ac6a <_svfiprintf_r+0x2e>
 800ae12:	ab07      	add	r3, sp, #28
 800ae14:	9300      	str	r3, [sp, #0]
 800ae16:	003a      	movs	r2, r7
 800ae18:	4b06      	ldr	r3, [pc, #24]	; (800ae34 <_svfiprintf_r+0x1f8>)
 800ae1a:	0021      	movs	r1, r4
 800ae1c:	9803      	ldr	r0, [sp, #12]
 800ae1e:	f7fc fe63 	bl	8007ae8 <_printf_i>
 800ae22:	e7ea      	b.n	800adfa <_svfiprintf_r+0x1be>
 800ae24:	0800da0c 	.word	0x0800da0c
 800ae28:	0800da12 	.word	0x0800da12
 800ae2c:	0800da16 	.word	0x0800da16
 800ae30:	08007575 	.word	0x08007575
 800ae34:	0800ab79 	.word	0x0800ab79

0800ae38 <__sfputc_r>:
 800ae38:	6893      	ldr	r3, [r2, #8]
 800ae3a:	b510      	push	{r4, lr}
 800ae3c:	3b01      	subs	r3, #1
 800ae3e:	6093      	str	r3, [r2, #8]
 800ae40:	2b00      	cmp	r3, #0
 800ae42:	da04      	bge.n	800ae4e <__sfputc_r+0x16>
 800ae44:	6994      	ldr	r4, [r2, #24]
 800ae46:	42a3      	cmp	r3, r4
 800ae48:	db07      	blt.n	800ae5a <__sfputc_r+0x22>
 800ae4a:	290a      	cmp	r1, #10
 800ae4c:	d005      	beq.n	800ae5a <__sfputc_r+0x22>
 800ae4e:	6813      	ldr	r3, [r2, #0]
 800ae50:	1c58      	adds	r0, r3, #1
 800ae52:	6010      	str	r0, [r2, #0]
 800ae54:	7019      	strb	r1, [r3, #0]
 800ae56:	0008      	movs	r0, r1
 800ae58:	bd10      	pop	{r4, pc}
 800ae5a:	f7fe f903 	bl	8009064 <__swbuf_r>
 800ae5e:	0001      	movs	r1, r0
 800ae60:	e7f9      	b.n	800ae56 <__sfputc_r+0x1e>

0800ae62 <__sfputs_r>:
 800ae62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ae64:	0006      	movs	r6, r0
 800ae66:	000f      	movs	r7, r1
 800ae68:	0014      	movs	r4, r2
 800ae6a:	18d5      	adds	r5, r2, r3
 800ae6c:	42ac      	cmp	r4, r5
 800ae6e:	d101      	bne.n	800ae74 <__sfputs_r+0x12>
 800ae70:	2000      	movs	r0, #0
 800ae72:	e007      	b.n	800ae84 <__sfputs_r+0x22>
 800ae74:	7821      	ldrb	r1, [r4, #0]
 800ae76:	003a      	movs	r2, r7
 800ae78:	0030      	movs	r0, r6
 800ae7a:	f7ff ffdd 	bl	800ae38 <__sfputc_r>
 800ae7e:	3401      	adds	r4, #1
 800ae80:	1c43      	adds	r3, r0, #1
 800ae82:	d1f3      	bne.n	800ae6c <__sfputs_r+0xa>
 800ae84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800ae88 <_vfiprintf_r>:
 800ae88:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ae8a:	b0a1      	sub	sp, #132	; 0x84
 800ae8c:	9003      	str	r0, [sp, #12]
 800ae8e:	000f      	movs	r7, r1
 800ae90:	0016      	movs	r6, r2
 800ae92:	001d      	movs	r5, r3
 800ae94:	2800      	cmp	r0, #0
 800ae96:	d005      	beq.n	800aea4 <_vfiprintf_r+0x1c>
 800ae98:	6983      	ldr	r3, [r0, #24]
 800ae9a:	9305      	str	r3, [sp, #20]
 800ae9c:	2b00      	cmp	r3, #0
 800ae9e:	d101      	bne.n	800aea4 <_vfiprintf_r+0x1c>
 800aea0:	f7ff f90e 	bl	800a0c0 <__sinit>
 800aea4:	4b7b      	ldr	r3, [pc, #492]	; (800b094 <_vfiprintf_r+0x20c>)
 800aea6:	429f      	cmp	r7, r3
 800aea8:	d15c      	bne.n	800af64 <_vfiprintf_r+0xdc>
 800aeaa:	9b03      	ldr	r3, [sp, #12]
 800aeac:	685f      	ldr	r7, [r3, #4]
 800aeae:	89bb      	ldrh	r3, [r7, #12]
 800aeb0:	071b      	lsls	r3, r3, #28
 800aeb2:	d563      	bpl.n	800af7c <_vfiprintf_r+0xf4>
 800aeb4:	693b      	ldr	r3, [r7, #16]
 800aeb6:	2b00      	cmp	r3, #0
 800aeb8:	d060      	beq.n	800af7c <_vfiprintf_r+0xf4>
 800aeba:	2300      	movs	r3, #0
 800aebc:	ac08      	add	r4, sp, #32
 800aebe:	6163      	str	r3, [r4, #20]
 800aec0:	3320      	adds	r3, #32
 800aec2:	7663      	strb	r3, [r4, #25]
 800aec4:	3310      	adds	r3, #16
 800aec6:	76a3      	strb	r3, [r4, #26]
 800aec8:	9507      	str	r5, [sp, #28]
 800aeca:	0035      	movs	r5, r6
 800aecc:	782b      	ldrb	r3, [r5, #0]
 800aece:	2b00      	cmp	r3, #0
 800aed0:	d001      	beq.n	800aed6 <_vfiprintf_r+0x4e>
 800aed2:	2b25      	cmp	r3, #37	; 0x25
 800aed4:	d15c      	bne.n	800af90 <_vfiprintf_r+0x108>
 800aed6:	1bab      	subs	r3, r5, r6
 800aed8:	9305      	str	r3, [sp, #20]
 800aeda:	d00c      	beq.n	800aef6 <_vfiprintf_r+0x6e>
 800aedc:	0032      	movs	r2, r6
 800aede:	0039      	movs	r1, r7
 800aee0:	9803      	ldr	r0, [sp, #12]
 800aee2:	f7ff ffbe 	bl	800ae62 <__sfputs_r>
 800aee6:	1c43      	adds	r3, r0, #1
 800aee8:	d100      	bne.n	800aeec <_vfiprintf_r+0x64>
 800aeea:	e0c4      	b.n	800b076 <_vfiprintf_r+0x1ee>
 800aeec:	6962      	ldr	r2, [r4, #20]
 800aeee:	9b05      	ldr	r3, [sp, #20]
 800aef0:	4694      	mov	ip, r2
 800aef2:	4463      	add	r3, ip
 800aef4:	6163      	str	r3, [r4, #20]
 800aef6:	782b      	ldrb	r3, [r5, #0]
 800aef8:	2b00      	cmp	r3, #0
 800aefa:	d100      	bne.n	800aefe <_vfiprintf_r+0x76>
 800aefc:	e0bb      	b.n	800b076 <_vfiprintf_r+0x1ee>
 800aefe:	2201      	movs	r2, #1
 800af00:	2300      	movs	r3, #0
 800af02:	4252      	negs	r2, r2
 800af04:	6062      	str	r2, [r4, #4]
 800af06:	a904      	add	r1, sp, #16
 800af08:	3254      	adds	r2, #84	; 0x54
 800af0a:	1852      	adds	r2, r2, r1
 800af0c:	1c6e      	adds	r6, r5, #1
 800af0e:	6023      	str	r3, [r4, #0]
 800af10:	60e3      	str	r3, [r4, #12]
 800af12:	60a3      	str	r3, [r4, #8]
 800af14:	7013      	strb	r3, [r2, #0]
 800af16:	65a3      	str	r3, [r4, #88]	; 0x58
 800af18:	7831      	ldrb	r1, [r6, #0]
 800af1a:	2205      	movs	r2, #5
 800af1c:	485e      	ldr	r0, [pc, #376]	; (800b098 <_vfiprintf_r+0x210>)
 800af1e:	f7ff fb29 	bl	800a574 <memchr>
 800af22:	1c75      	adds	r5, r6, #1
 800af24:	2800      	cmp	r0, #0
 800af26:	d135      	bne.n	800af94 <_vfiprintf_r+0x10c>
 800af28:	6822      	ldr	r2, [r4, #0]
 800af2a:	06d3      	lsls	r3, r2, #27
 800af2c:	d504      	bpl.n	800af38 <_vfiprintf_r+0xb0>
 800af2e:	2353      	movs	r3, #83	; 0x53
 800af30:	a904      	add	r1, sp, #16
 800af32:	185b      	adds	r3, r3, r1
 800af34:	2120      	movs	r1, #32
 800af36:	7019      	strb	r1, [r3, #0]
 800af38:	0713      	lsls	r3, r2, #28
 800af3a:	d504      	bpl.n	800af46 <_vfiprintf_r+0xbe>
 800af3c:	2353      	movs	r3, #83	; 0x53
 800af3e:	a904      	add	r1, sp, #16
 800af40:	185b      	adds	r3, r3, r1
 800af42:	212b      	movs	r1, #43	; 0x2b
 800af44:	7019      	strb	r1, [r3, #0]
 800af46:	7833      	ldrb	r3, [r6, #0]
 800af48:	2b2a      	cmp	r3, #42	; 0x2a
 800af4a:	d02c      	beq.n	800afa6 <_vfiprintf_r+0x11e>
 800af4c:	0035      	movs	r5, r6
 800af4e:	2100      	movs	r1, #0
 800af50:	200a      	movs	r0, #10
 800af52:	68e3      	ldr	r3, [r4, #12]
 800af54:	782a      	ldrb	r2, [r5, #0]
 800af56:	1c6e      	adds	r6, r5, #1
 800af58:	3a30      	subs	r2, #48	; 0x30
 800af5a:	2a09      	cmp	r2, #9
 800af5c:	d964      	bls.n	800b028 <_vfiprintf_r+0x1a0>
 800af5e:	2900      	cmp	r1, #0
 800af60:	d02e      	beq.n	800afc0 <_vfiprintf_r+0x138>
 800af62:	e026      	b.n	800afb2 <_vfiprintf_r+0x12a>
 800af64:	4b4d      	ldr	r3, [pc, #308]	; (800b09c <_vfiprintf_r+0x214>)
 800af66:	429f      	cmp	r7, r3
 800af68:	d102      	bne.n	800af70 <_vfiprintf_r+0xe8>
 800af6a:	9b03      	ldr	r3, [sp, #12]
 800af6c:	689f      	ldr	r7, [r3, #8]
 800af6e:	e79e      	b.n	800aeae <_vfiprintf_r+0x26>
 800af70:	4b4b      	ldr	r3, [pc, #300]	; (800b0a0 <_vfiprintf_r+0x218>)
 800af72:	429f      	cmp	r7, r3
 800af74:	d19b      	bne.n	800aeae <_vfiprintf_r+0x26>
 800af76:	9b03      	ldr	r3, [sp, #12]
 800af78:	68df      	ldr	r7, [r3, #12]
 800af7a:	e798      	b.n	800aeae <_vfiprintf_r+0x26>
 800af7c:	0039      	movs	r1, r7
 800af7e:	9803      	ldr	r0, [sp, #12]
 800af80:	f7fe f8c6 	bl	8009110 <__swsetup_r>
 800af84:	2800      	cmp	r0, #0
 800af86:	d098      	beq.n	800aeba <_vfiprintf_r+0x32>
 800af88:	2001      	movs	r0, #1
 800af8a:	4240      	negs	r0, r0
 800af8c:	b021      	add	sp, #132	; 0x84
 800af8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800af90:	3501      	adds	r5, #1
 800af92:	e79b      	b.n	800aecc <_vfiprintf_r+0x44>
 800af94:	4b40      	ldr	r3, [pc, #256]	; (800b098 <_vfiprintf_r+0x210>)
 800af96:	6822      	ldr	r2, [r4, #0]
 800af98:	1ac0      	subs	r0, r0, r3
 800af9a:	2301      	movs	r3, #1
 800af9c:	4083      	lsls	r3, r0
 800af9e:	4313      	orrs	r3, r2
 800afa0:	6023      	str	r3, [r4, #0]
 800afa2:	002e      	movs	r6, r5
 800afa4:	e7b8      	b.n	800af18 <_vfiprintf_r+0x90>
 800afa6:	9b07      	ldr	r3, [sp, #28]
 800afa8:	1d19      	adds	r1, r3, #4
 800afaa:	681b      	ldr	r3, [r3, #0]
 800afac:	9107      	str	r1, [sp, #28]
 800afae:	2b00      	cmp	r3, #0
 800afb0:	db01      	blt.n	800afb6 <_vfiprintf_r+0x12e>
 800afb2:	930b      	str	r3, [sp, #44]	; 0x2c
 800afb4:	e004      	b.n	800afc0 <_vfiprintf_r+0x138>
 800afb6:	425b      	negs	r3, r3
 800afb8:	60e3      	str	r3, [r4, #12]
 800afba:	2302      	movs	r3, #2
 800afbc:	4313      	orrs	r3, r2
 800afbe:	6023      	str	r3, [r4, #0]
 800afc0:	782b      	ldrb	r3, [r5, #0]
 800afc2:	2b2e      	cmp	r3, #46	; 0x2e
 800afc4:	d10a      	bne.n	800afdc <_vfiprintf_r+0x154>
 800afc6:	786b      	ldrb	r3, [r5, #1]
 800afc8:	2b2a      	cmp	r3, #42	; 0x2a
 800afca:	d135      	bne.n	800b038 <_vfiprintf_r+0x1b0>
 800afcc:	9b07      	ldr	r3, [sp, #28]
 800afce:	3502      	adds	r5, #2
 800afd0:	1d1a      	adds	r2, r3, #4
 800afd2:	681b      	ldr	r3, [r3, #0]
 800afd4:	9207      	str	r2, [sp, #28]
 800afd6:	2b00      	cmp	r3, #0
 800afd8:	db2b      	blt.n	800b032 <_vfiprintf_r+0x1aa>
 800afda:	9309      	str	r3, [sp, #36]	; 0x24
 800afdc:	4e31      	ldr	r6, [pc, #196]	; (800b0a4 <_vfiprintf_r+0x21c>)
 800afde:	7829      	ldrb	r1, [r5, #0]
 800afe0:	2203      	movs	r2, #3
 800afe2:	0030      	movs	r0, r6
 800afe4:	f7ff fac6 	bl	800a574 <memchr>
 800afe8:	2800      	cmp	r0, #0
 800afea:	d006      	beq.n	800affa <_vfiprintf_r+0x172>
 800afec:	2340      	movs	r3, #64	; 0x40
 800afee:	1b80      	subs	r0, r0, r6
 800aff0:	4083      	lsls	r3, r0
 800aff2:	6822      	ldr	r2, [r4, #0]
 800aff4:	3501      	adds	r5, #1
 800aff6:	4313      	orrs	r3, r2
 800aff8:	6023      	str	r3, [r4, #0]
 800affa:	7829      	ldrb	r1, [r5, #0]
 800affc:	2206      	movs	r2, #6
 800affe:	482a      	ldr	r0, [pc, #168]	; (800b0a8 <_vfiprintf_r+0x220>)
 800b000:	1c6e      	adds	r6, r5, #1
 800b002:	7621      	strb	r1, [r4, #24]
 800b004:	f7ff fab6 	bl	800a574 <memchr>
 800b008:	2800      	cmp	r0, #0
 800b00a:	d03a      	beq.n	800b082 <_vfiprintf_r+0x1fa>
 800b00c:	4b27      	ldr	r3, [pc, #156]	; (800b0ac <_vfiprintf_r+0x224>)
 800b00e:	2b00      	cmp	r3, #0
 800b010:	d125      	bne.n	800b05e <_vfiprintf_r+0x1d6>
 800b012:	2207      	movs	r2, #7
 800b014:	9b07      	ldr	r3, [sp, #28]
 800b016:	3307      	adds	r3, #7
 800b018:	4393      	bics	r3, r2
 800b01a:	3308      	adds	r3, #8
 800b01c:	9307      	str	r3, [sp, #28]
 800b01e:	6963      	ldr	r3, [r4, #20]
 800b020:	9a04      	ldr	r2, [sp, #16]
 800b022:	189b      	adds	r3, r3, r2
 800b024:	6163      	str	r3, [r4, #20]
 800b026:	e750      	b.n	800aeca <_vfiprintf_r+0x42>
 800b028:	4343      	muls	r3, r0
 800b02a:	2101      	movs	r1, #1
 800b02c:	189b      	adds	r3, r3, r2
 800b02e:	0035      	movs	r5, r6
 800b030:	e790      	b.n	800af54 <_vfiprintf_r+0xcc>
 800b032:	2301      	movs	r3, #1
 800b034:	425b      	negs	r3, r3
 800b036:	e7d0      	b.n	800afda <_vfiprintf_r+0x152>
 800b038:	2300      	movs	r3, #0
 800b03a:	200a      	movs	r0, #10
 800b03c:	001a      	movs	r2, r3
 800b03e:	3501      	adds	r5, #1
 800b040:	6063      	str	r3, [r4, #4]
 800b042:	7829      	ldrb	r1, [r5, #0]
 800b044:	1c6e      	adds	r6, r5, #1
 800b046:	3930      	subs	r1, #48	; 0x30
 800b048:	2909      	cmp	r1, #9
 800b04a:	d903      	bls.n	800b054 <_vfiprintf_r+0x1cc>
 800b04c:	2b00      	cmp	r3, #0
 800b04e:	d0c5      	beq.n	800afdc <_vfiprintf_r+0x154>
 800b050:	9209      	str	r2, [sp, #36]	; 0x24
 800b052:	e7c3      	b.n	800afdc <_vfiprintf_r+0x154>
 800b054:	4342      	muls	r2, r0
 800b056:	2301      	movs	r3, #1
 800b058:	1852      	adds	r2, r2, r1
 800b05a:	0035      	movs	r5, r6
 800b05c:	e7f1      	b.n	800b042 <_vfiprintf_r+0x1ba>
 800b05e:	ab07      	add	r3, sp, #28
 800b060:	9300      	str	r3, [sp, #0]
 800b062:	003a      	movs	r2, r7
 800b064:	4b12      	ldr	r3, [pc, #72]	; (800b0b0 <_vfiprintf_r+0x228>)
 800b066:	0021      	movs	r1, r4
 800b068:	9803      	ldr	r0, [sp, #12]
 800b06a:	f7fc fa83 	bl	8007574 <_printf_float>
 800b06e:	9004      	str	r0, [sp, #16]
 800b070:	9b04      	ldr	r3, [sp, #16]
 800b072:	3301      	adds	r3, #1
 800b074:	d1d3      	bne.n	800b01e <_vfiprintf_r+0x196>
 800b076:	89bb      	ldrh	r3, [r7, #12]
 800b078:	065b      	lsls	r3, r3, #25
 800b07a:	d500      	bpl.n	800b07e <_vfiprintf_r+0x1f6>
 800b07c:	e784      	b.n	800af88 <_vfiprintf_r+0x100>
 800b07e:	980d      	ldr	r0, [sp, #52]	; 0x34
 800b080:	e784      	b.n	800af8c <_vfiprintf_r+0x104>
 800b082:	ab07      	add	r3, sp, #28
 800b084:	9300      	str	r3, [sp, #0]
 800b086:	003a      	movs	r2, r7
 800b088:	4b09      	ldr	r3, [pc, #36]	; (800b0b0 <_vfiprintf_r+0x228>)
 800b08a:	0021      	movs	r1, r4
 800b08c:	9803      	ldr	r0, [sp, #12]
 800b08e:	f7fc fd2b 	bl	8007ae8 <_printf_i>
 800b092:	e7ec      	b.n	800b06e <_vfiprintf_r+0x1e6>
 800b094:	0800d8c0 	.word	0x0800d8c0
 800b098:	0800da0c 	.word	0x0800da0c
 800b09c:	0800d8e0 	.word	0x0800d8e0
 800b0a0:	0800d8a0 	.word	0x0800d8a0
 800b0a4:	0800da12 	.word	0x0800da12
 800b0a8:	0800da16 	.word	0x0800da16
 800b0ac:	08007575 	.word	0x08007575
 800b0b0:	0800ae63 	.word	0x0800ae63

0800b0b4 <sniprintf>:
 800b0b4:	b40c      	push	{r2, r3}
 800b0b6:	b530      	push	{r4, r5, lr}
 800b0b8:	4b16      	ldr	r3, [pc, #88]	; (800b114 <sniprintf+0x60>)
 800b0ba:	b09d      	sub	sp, #116	; 0x74
 800b0bc:	1e0c      	subs	r4, r1, #0
 800b0be:	681d      	ldr	r5, [r3, #0]
 800b0c0:	da08      	bge.n	800b0d4 <sniprintf+0x20>
 800b0c2:	238b      	movs	r3, #139	; 0x8b
 800b0c4:	2001      	movs	r0, #1
 800b0c6:	602b      	str	r3, [r5, #0]
 800b0c8:	4240      	negs	r0, r0
 800b0ca:	b01d      	add	sp, #116	; 0x74
 800b0cc:	bc30      	pop	{r4, r5}
 800b0ce:	bc08      	pop	{r3}
 800b0d0:	b002      	add	sp, #8
 800b0d2:	4718      	bx	r3
 800b0d4:	2382      	movs	r3, #130	; 0x82
 800b0d6:	a902      	add	r1, sp, #8
 800b0d8:	009b      	lsls	r3, r3, #2
 800b0da:	818b      	strh	r3, [r1, #12]
 800b0dc:	2300      	movs	r3, #0
 800b0de:	9002      	str	r0, [sp, #8]
 800b0e0:	6108      	str	r0, [r1, #16]
 800b0e2:	429c      	cmp	r4, r3
 800b0e4:	d000      	beq.n	800b0e8 <sniprintf+0x34>
 800b0e6:	1e63      	subs	r3, r4, #1
 800b0e8:	608b      	str	r3, [r1, #8]
 800b0ea:	614b      	str	r3, [r1, #20]
 800b0ec:	2301      	movs	r3, #1
 800b0ee:	425b      	negs	r3, r3
 800b0f0:	81cb      	strh	r3, [r1, #14]
 800b0f2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b0f4:	ab21      	add	r3, sp, #132	; 0x84
 800b0f6:	0028      	movs	r0, r5
 800b0f8:	9301      	str	r3, [sp, #4]
 800b0fa:	f7ff fd9f 	bl	800ac3c <_svfiprintf_r>
 800b0fe:	1c43      	adds	r3, r0, #1
 800b100:	da01      	bge.n	800b106 <sniprintf+0x52>
 800b102:	238b      	movs	r3, #139	; 0x8b
 800b104:	602b      	str	r3, [r5, #0]
 800b106:	2c00      	cmp	r4, #0
 800b108:	d0df      	beq.n	800b0ca <sniprintf+0x16>
 800b10a:	2300      	movs	r3, #0
 800b10c:	9a02      	ldr	r2, [sp, #8]
 800b10e:	7013      	strb	r3, [r2, #0]
 800b110:	e7db      	b.n	800b0ca <sniprintf+0x16>
 800b112:	46c0      	nop			; (mov r8, r8)
 800b114:	20000020 	.word	0x20000020

0800b118 <siscanf>:
 800b118:	b40e      	push	{r1, r2, r3}
 800b11a:	2381      	movs	r3, #129	; 0x81
 800b11c:	b570      	push	{r4, r5, r6, lr}
 800b11e:	b09d      	sub	sp, #116	; 0x74
 800b120:	ac02      	add	r4, sp, #8
 800b122:	ad21      	add	r5, sp, #132	; 0x84
 800b124:	009b      	lsls	r3, r3, #2
 800b126:	cd40      	ldmia	r5!, {r6}
 800b128:	81a3      	strh	r3, [r4, #12]
 800b12a:	9002      	str	r0, [sp, #8]
 800b12c:	9006      	str	r0, [sp, #24]
 800b12e:	f7f4 ffeb 	bl	8000108 <strlen>
 800b132:	4b0b      	ldr	r3, [pc, #44]	; (800b160 <siscanf+0x48>)
 800b134:	6060      	str	r0, [r4, #4]
 800b136:	6263      	str	r3, [r4, #36]	; 0x24
 800b138:	2300      	movs	r3, #0
 800b13a:	6160      	str	r0, [r4, #20]
 800b13c:	4809      	ldr	r0, [pc, #36]	; (800b164 <siscanf+0x4c>)
 800b13e:	6363      	str	r3, [r4, #52]	; 0x34
 800b140:	64a3      	str	r3, [r4, #72]	; 0x48
 800b142:	3b01      	subs	r3, #1
 800b144:	81e3      	strh	r3, [r4, #14]
 800b146:	0032      	movs	r2, r6
 800b148:	002b      	movs	r3, r5
 800b14a:	0021      	movs	r1, r4
 800b14c:	6800      	ldr	r0, [r0, #0]
 800b14e:	9501      	str	r5, [sp, #4]
 800b150:	f000 f972 	bl	800b438 <__ssvfiscanf_r>
 800b154:	b01d      	add	sp, #116	; 0x74
 800b156:	bc70      	pop	{r4, r5, r6}
 800b158:	bc08      	pop	{r3}
 800b15a:	b003      	add	sp, #12
 800b15c:	4718      	bx	r3
 800b15e:	46c0      	nop			; (mov r8, r8)
 800b160:	0800b191 	.word	0x0800b191
 800b164:	20000020 	.word	0x20000020

0800b168 <__sread>:
 800b168:	b570      	push	{r4, r5, r6, lr}
 800b16a:	000c      	movs	r4, r1
 800b16c:	250e      	movs	r5, #14
 800b16e:	5f49      	ldrsh	r1, [r1, r5]
 800b170:	f000 fc38 	bl	800b9e4 <_read_r>
 800b174:	2800      	cmp	r0, #0
 800b176:	db03      	blt.n	800b180 <__sread+0x18>
 800b178:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800b17a:	181b      	adds	r3, r3, r0
 800b17c:	6563      	str	r3, [r4, #84]	; 0x54
 800b17e:	bd70      	pop	{r4, r5, r6, pc}
 800b180:	89a3      	ldrh	r3, [r4, #12]
 800b182:	4a02      	ldr	r2, [pc, #8]	; (800b18c <__sread+0x24>)
 800b184:	4013      	ands	r3, r2
 800b186:	81a3      	strh	r3, [r4, #12]
 800b188:	e7f9      	b.n	800b17e <__sread+0x16>
 800b18a:	46c0      	nop			; (mov r8, r8)
 800b18c:	ffffefff 	.word	0xffffefff

0800b190 <__seofread>:
 800b190:	2000      	movs	r0, #0
 800b192:	4770      	bx	lr

0800b194 <__swrite>:
 800b194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b196:	001f      	movs	r7, r3
 800b198:	898b      	ldrh	r3, [r1, #12]
 800b19a:	0005      	movs	r5, r0
 800b19c:	000c      	movs	r4, r1
 800b19e:	0016      	movs	r6, r2
 800b1a0:	05db      	lsls	r3, r3, #23
 800b1a2:	d505      	bpl.n	800b1b0 <__swrite+0x1c>
 800b1a4:	230e      	movs	r3, #14
 800b1a6:	5ec9      	ldrsh	r1, [r1, r3]
 800b1a8:	2200      	movs	r2, #0
 800b1aa:	2302      	movs	r3, #2
 800b1ac:	f000 f89c 	bl	800b2e8 <_lseek_r>
 800b1b0:	89a3      	ldrh	r3, [r4, #12]
 800b1b2:	4a05      	ldr	r2, [pc, #20]	; (800b1c8 <__swrite+0x34>)
 800b1b4:	0028      	movs	r0, r5
 800b1b6:	4013      	ands	r3, r2
 800b1b8:	81a3      	strh	r3, [r4, #12]
 800b1ba:	0032      	movs	r2, r6
 800b1bc:	230e      	movs	r3, #14
 800b1be:	5ee1      	ldrsh	r1, [r4, r3]
 800b1c0:	003b      	movs	r3, r7
 800b1c2:	f000 f845 	bl	800b250 <_write_r>
 800b1c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b1c8:	ffffefff 	.word	0xffffefff

0800b1cc <__sseek>:
 800b1cc:	b570      	push	{r4, r5, r6, lr}
 800b1ce:	000c      	movs	r4, r1
 800b1d0:	250e      	movs	r5, #14
 800b1d2:	5f49      	ldrsh	r1, [r1, r5]
 800b1d4:	f000 f888 	bl	800b2e8 <_lseek_r>
 800b1d8:	89a3      	ldrh	r3, [r4, #12]
 800b1da:	1c42      	adds	r2, r0, #1
 800b1dc:	d103      	bne.n	800b1e6 <__sseek+0x1a>
 800b1de:	4a05      	ldr	r2, [pc, #20]	; (800b1f4 <__sseek+0x28>)
 800b1e0:	4013      	ands	r3, r2
 800b1e2:	81a3      	strh	r3, [r4, #12]
 800b1e4:	bd70      	pop	{r4, r5, r6, pc}
 800b1e6:	2280      	movs	r2, #128	; 0x80
 800b1e8:	0152      	lsls	r2, r2, #5
 800b1ea:	4313      	orrs	r3, r2
 800b1ec:	81a3      	strh	r3, [r4, #12]
 800b1ee:	6560      	str	r0, [r4, #84]	; 0x54
 800b1f0:	e7f8      	b.n	800b1e4 <__sseek+0x18>
 800b1f2:	46c0      	nop			; (mov r8, r8)
 800b1f4:	ffffefff 	.word	0xffffefff

0800b1f8 <__sclose>:
 800b1f8:	b510      	push	{r4, lr}
 800b1fa:	230e      	movs	r3, #14
 800b1fc:	5ec9      	ldrsh	r1, [r1, r3]
 800b1fe:	f000 f83b 	bl	800b278 <_close_r>
 800b202:	bd10      	pop	{r4, pc}

0800b204 <strcpy>:
 800b204:	0003      	movs	r3, r0
 800b206:	780a      	ldrb	r2, [r1, #0]
 800b208:	3101      	adds	r1, #1
 800b20a:	701a      	strb	r2, [r3, #0]
 800b20c:	3301      	adds	r3, #1
 800b20e:	2a00      	cmp	r2, #0
 800b210:	d1f9      	bne.n	800b206 <strcpy+0x2>
 800b212:	4770      	bx	lr

0800b214 <strncmp>:
 800b214:	2300      	movs	r3, #0
 800b216:	b530      	push	{r4, r5, lr}
 800b218:	429a      	cmp	r2, r3
 800b21a:	d00a      	beq.n	800b232 <strncmp+0x1e>
 800b21c:	3a01      	subs	r2, #1
 800b21e:	5cc4      	ldrb	r4, [r0, r3]
 800b220:	5ccd      	ldrb	r5, [r1, r3]
 800b222:	42ac      	cmp	r4, r5
 800b224:	d104      	bne.n	800b230 <strncmp+0x1c>
 800b226:	4293      	cmp	r3, r2
 800b228:	d002      	beq.n	800b230 <strncmp+0x1c>
 800b22a:	3301      	adds	r3, #1
 800b22c:	2c00      	cmp	r4, #0
 800b22e:	d1f6      	bne.n	800b21e <strncmp+0xa>
 800b230:	1b63      	subs	r3, r4, r5
 800b232:	0018      	movs	r0, r3
 800b234:	bd30      	pop	{r4, r5, pc}

0800b236 <__ascii_wctomb>:
 800b236:	1e0b      	subs	r3, r1, #0
 800b238:	d004      	beq.n	800b244 <__ascii_wctomb+0xe>
 800b23a:	2aff      	cmp	r2, #255	; 0xff
 800b23c:	d904      	bls.n	800b248 <__ascii_wctomb+0x12>
 800b23e:	238a      	movs	r3, #138	; 0x8a
 800b240:	6003      	str	r3, [r0, #0]
 800b242:	3b8b      	subs	r3, #139	; 0x8b
 800b244:	0018      	movs	r0, r3
 800b246:	4770      	bx	lr
 800b248:	700a      	strb	r2, [r1, #0]
 800b24a:	2301      	movs	r3, #1
 800b24c:	e7fa      	b.n	800b244 <__ascii_wctomb+0xe>
	...

0800b250 <_write_r>:
 800b250:	b570      	push	{r4, r5, r6, lr}
 800b252:	0005      	movs	r5, r0
 800b254:	0008      	movs	r0, r1
 800b256:	0011      	movs	r1, r2
 800b258:	2200      	movs	r2, #0
 800b25a:	4c06      	ldr	r4, [pc, #24]	; (800b274 <_write_r+0x24>)
 800b25c:	6022      	str	r2, [r4, #0]
 800b25e:	001a      	movs	r2, r3
 800b260:	f000 fcfb 	bl	800bc5a <_write>
 800b264:	1c43      	adds	r3, r0, #1
 800b266:	d103      	bne.n	800b270 <_write_r+0x20>
 800b268:	6823      	ldr	r3, [r4, #0]
 800b26a:	2b00      	cmp	r3, #0
 800b26c:	d000      	beq.n	800b270 <_write_r+0x20>
 800b26e:	602b      	str	r3, [r5, #0]
 800b270:	bd70      	pop	{r4, r5, r6, pc}
 800b272:	46c0      	nop			; (mov r8, r8)
 800b274:	2000056c 	.word	0x2000056c

0800b278 <_close_r>:
 800b278:	2300      	movs	r3, #0
 800b27a:	b570      	push	{r4, r5, r6, lr}
 800b27c:	4c06      	ldr	r4, [pc, #24]	; (800b298 <_close_r+0x20>)
 800b27e:	0005      	movs	r5, r0
 800b280:	0008      	movs	r0, r1
 800b282:	6023      	str	r3, [r4, #0]
 800b284:	f000 fd14 	bl	800bcb0 <_close>
 800b288:	1c43      	adds	r3, r0, #1
 800b28a:	d103      	bne.n	800b294 <_close_r+0x1c>
 800b28c:	6823      	ldr	r3, [r4, #0]
 800b28e:	2b00      	cmp	r3, #0
 800b290:	d000      	beq.n	800b294 <_close_r+0x1c>
 800b292:	602b      	str	r3, [r5, #0]
 800b294:	bd70      	pop	{r4, r5, r6, pc}
 800b296:	46c0      	nop			; (mov r8, r8)
 800b298:	2000056c 	.word	0x2000056c

0800b29c <__env_lock>:
 800b29c:	4770      	bx	lr

0800b29e <__env_unlock>:
 800b29e:	4770      	bx	lr

0800b2a0 <_fstat_r>:
 800b2a0:	2300      	movs	r3, #0
 800b2a2:	b570      	push	{r4, r5, r6, lr}
 800b2a4:	4c06      	ldr	r4, [pc, #24]	; (800b2c0 <_fstat_r+0x20>)
 800b2a6:	0005      	movs	r5, r0
 800b2a8:	0008      	movs	r0, r1
 800b2aa:	0011      	movs	r1, r2
 800b2ac:	6023      	str	r3, [r4, #0]
 800b2ae:	f000 fd47 	bl	800bd40 <_fstat>
 800b2b2:	1c43      	adds	r3, r0, #1
 800b2b4:	d103      	bne.n	800b2be <_fstat_r+0x1e>
 800b2b6:	6823      	ldr	r3, [r4, #0]
 800b2b8:	2b00      	cmp	r3, #0
 800b2ba:	d000      	beq.n	800b2be <_fstat_r+0x1e>
 800b2bc:	602b      	str	r3, [r5, #0]
 800b2be:	bd70      	pop	{r4, r5, r6, pc}
 800b2c0:	2000056c 	.word	0x2000056c

0800b2c4 <_isatty_r>:
 800b2c4:	2300      	movs	r3, #0
 800b2c6:	b570      	push	{r4, r5, r6, lr}
 800b2c8:	4c06      	ldr	r4, [pc, #24]	; (800b2e4 <_isatty_r+0x20>)
 800b2ca:	0005      	movs	r5, r0
 800b2cc:	0008      	movs	r0, r1
 800b2ce:	6023      	str	r3, [r4, #0]
 800b2d0:	f000 feac 	bl	800c02c <_isatty>
 800b2d4:	1c43      	adds	r3, r0, #1
 800b2d6:	d103      	bne.n	800b2e0 <_isatty_r+0x1c>
 800b2d8:	6823      	ldr	r3, [r4, #0]
 800b2da:	2b00      	cmp	r3, #0
 800b2dc:	d000      	beq.n	800b2e0 <_isatty_r+0x1c>
 800b2de:	602b      	str	r3, [r5, #0]
 800b2e0:	bd70      	pop	{r4, r5, r6, pc}
 800b2e2:	46c0      	nop			; (mov r8, r8)
 800b2e4:	2000056c 	.word	0x2000056c

0800b2e8 <_lseek_r>:
 800b2e8:	b570      	push	{r4, r5, r6, lr}
 800b2ea:	0005      	movs	r5, r0
 800b2ec:	0008      	movs	r0, r1
 800b2ee:	0011      	movs	r1, r2
 800b2f0:	2200      	movs	r2, #0
 800b2f2:	4c06      	ldr	r4, [pc, #24]	; (800b30c <_lseek_r+0x24>)
 800b2f4:	6022      	str	r2, [r4, #0]
 800b2f6:	001a      	movs	r2, r3
 800b2f8:	f000 fc9b 	bl	800bc32 <_lseek>
 800b2fc:	1c43      	adds	r3, r0, #1
 800b2fe:	d103      	bne.n	800b308 <_lseek_r+0x20>
 800b300:	6823      	ldr	r3, [r4, #0]
 800b302:	2b00      	cmp	r3, #0
 800b304:	d000      	beq.n	800b308 <_lseek_r+0x20>
 800b306:	602b      	str	r3, [r5, #0]
 800b308:	bd70      	pop	{r4, r5, r6, pc}
 800b30a:	46c0      	nop			; (mov r8, r8)
 800b30c:	2000056c 	.word	0x2000056c

0800b310 <memmove>:
 800b310:	b510      	push	{r4, lr}
 800b312:	4288      	cmp	r0, r1
 800b314:	d902      	bls.n	800b31c <memmove+0xc>
 800b316:	188b      	adds	r3, r1, r2
 800b318:	4298      	cmp	r0, r3
 800b31a:	d303      	bcc.n	800b324 <memmove+0x14>
 800b31c:	2300      	movs	r3, #0
 800b31e:	e007      	b.n	800b330 <memmove+0x20>
 800b320:	5c8b      	ldrb	r3, [r1, r2]
 800b322:	5483      	strb	r3, [r0, r2]
 800b324:	3a01      	subs	r2, #1
 800b326:	d2fb      	bcs.n	800b320 <memmove+0x10>
 800b328:	bd10      	pop	{r4, pc}
 800b32a:	5ccc      	ldrb	r4, [r1, r3]
 800b32c:	54c4      	strb	r4, [r0, r3]
 800b32e:	3301      	adds	r3, #1
 800b330:	429a      	cmp	r2, r3
 800b332:	d1fa      	bne.n	800b32a <memmove+0x1a>
 800b334:	e7f8      	b.n	800b328 <memmove+0x18>

0800b336 <_realloc_r>:
 800b336:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b338:	0007      	movs	r7, r0
 800b33a:	000d      	movs	r5, r1
 800b33c:	0016      	movs	r6, r2
 800b33e:	2900      	cmp	r1, #0
 800b340:	d105      	bne.n	800b34e <_realloc_r+0x18>
 800b342:	0011      	movs	r1, r2
 800b344:	f7fc f81c 	bl	8007380 <_malloc_r>
 800b348:	0004      	movs	r4, r0
 800b34a:	0020      	movs	r0, r4
 800b34c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b34e:	2a00      	cmp	r2, #0
 800b350:	d103      	bne.n	800b35a <_realloc_r+0x24>
 800b352:	f7fb ffcb 	bl	80072ec <_free_r>
 800b356:	0034      	movs	r4, r6
 800b358:	e7f7      	b.n	800b34a <_realloc_r+0x14>
 800b35a:	f000 fbc5 	bl	800bae8 <_malloc_usable_size_r>
 800b35e:	002c      	movs	r4, r5
 800b360:	42b0      	cmp	r0, r6
 800b362:	d2f2      	bcs.n	800b34a <_realloc_r+0x14>
 800b364:	0031      	movs	r1, r6
 800b366:	0038      	movs	r0, r7
 800b368:	f7fc f80a 	bl	8007380 <_malloc_r>
 800b36c:	1e04      	subs	r4, r0, #0
 800b36e:	d0ec      	beq.n	800b34a <_realloc_r+0x14>
 800b370:	0029      	movs	r1, r5
 800b372:	0032      	movs	r2, r6
 800b374:	f7fb ffa8 	bl	80072c8 <memcpy>
 800b378:	0029      	movs	r1, r5
 800b37a:	0038      	movs	r0, r7
 800b37c:	f7fb ffb6 	bl	80072ec <_free_r>
 800b380:	e7e3      	b.n	800b34a <_realloc_r+0x14>

0800b382 <_sungetc_r>:
 800b382:	b570      	push	{r4, r5, r6, lr}
 800b384:	0014      	movs	r4, r2
 800b386:	1c4b      	adds	r3, r1, #1
 800b388:	d103      	bne.n	800b392 <_sungetc_r+0x10>
 800b38a:	2501      	movs	r5, #1
 800b38c:	426d      	negs	r5, r5
 800b38e:	0028      	movs	r0, r5
 800b390:	bd70      	pop	{r4, r5, r6, pc}
 800b392:	8993      	ldrh	r3, [r2, #12]
 800b394:	2220      	movs	r2, #32
 800b396:	4393      	bics	r3, r2
 800b398:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b39a:	81a3      	strh	r3, [r4, #12]
 800b39c:	b2ce      	uxtb	r6, r1
 800b39e:	b2cd      	uxtb	r5, r1
 800b3a0:	6863      	ldr	r3, [r4, #4]
 800b3a2:	2a00      	cmp	r2, #0
 800b3a4:	d010      	beq.n	800b3c8 <_sungetc_r+0x46>
 800b3a6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b3a8:	429a      	cmp	r2, r3
 800b3aa:	dd07      	ble.n	800b3bc <_sungetc_r+0x3a>
 800b3ac:	6823      	ldr	r3, [r4, #0]
 800b3ae:	3b01      	subs	r3, #1
 800b3b0:	6023      	str	r3, [r4, #0]
 800b3b2:	701e      	strb	r6, [r3, #0]
 800b3b4:	6863      	ldr	r3, [r4, #4]
 800b3b6:	3301      	adds	r3, #1
 800b3b8:	6063      	str	r3, [r4, #4]
 800b3ba:	e7e8      	b.n	800b38e <_sungetc_r+0xc>
 800b3bc:	0021      	movs	r1, r4
 800b3be:	f000 fb55 	bl	800ba6c <__submore>
 800b3c2:	2800      	cmp	r0, #0
 800b3c4:	d0f2      	beq.n	800b3ac <_sungetc_r+0x2a>
 800b3c6:	e7e0      	b.n	800b38a <_sungetc_r+0x8>
 800b3c8:	6921      	ldr	r1, [r4, #16]
 800b3ca:	6822      	ldr	r2, [r4, #0]
 800b3cc:	2900      	cmp	r1, #0
 800b3ce:	d007      	beq.n	800b3e0 <_sungetc_r+0x5e>
 800b3d0:	4291      	cmp	r1, r2
 800b3d2:	d205      	bcs.n	800b3e0 <_sungetc_r+0x5e>
 800b3d4:	1e51      	subs	r1, r2, #1
 800b3d6:	7808      	ldrb	r0, [r1, #0]
 800b3d8:	42a8      	cmp	r0, r5
 800b3da:	d101      	bne.n	800b3e0 <_sungetc_r+0x5e>
 800b3dc:	6021      	str	r1, [r4, #0]
 800b3de:	e7ea      	b.n	800b3b6 <_sungetc_r+0x34>
 800b3e0:	6423      	str	r3, [r4, #64]	; 0x40
 800b3e2:	0023      	movs	r3, r4
 800b3e4:	3344      	adds	r3, #68	; 0x44
 800b3e6:	6363      	str	r3, [r4, #52]	; 0x34
 800b3e8:	2303      	movs	r3, #3
 800b3ea:	63a3      	str	r3, [r4, #56]	; 0x38
 800b3ec:	0023      	movs	r3, r4
 800b3ee:	3346      	adds	r3, #70	; 0x46
 800b3f0:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b3f2:	701e      	strb	r6, [r3, #0]
 800b3f4:	6023      	str	r3, [r4, #0]
 800b3f6:	2301      	movs	r3, #1
 800b3f8:	e7de      	b.n	800b3b8 <_sungetc_r+0x36>

0800b3fa <__ssrefill_r>:
 800b3fa:	b510      	push	{r4, lr}
 800b3fc:	000c      	movs	r4, r1
 800b3fe:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800b400:	2900      	cmp	r1, #0
 800b402:	d00e      	beq.n	800b422 <__ssrefill_r+0x28>
 800b404:	0023      	movs	r3, r4
 800b406:	3344      	adds	r3, #68	; 0x44
 800b408:	4299      	cmp	r1, r3
 800b40a:	d001      	beq.n	800b410 <__ssrefill_r+0x16>
 800b40c:	f7fb ff6e 	bl	80072ec <_free_r>
 800b410:	2000      	movs	r0, #0
 800b412:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b414:	6360      	str	r0, [r4, #52]	; 0x34
 800b416:	6063      	str	r3, [r4, #4]
 800b418:	4283      	cmp	r3, r0
 800b41a:	d002      	beq.n	800b422 <__ssrefill_r+0x28>
 800b41c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b41e:	6023      	str	r3, [r4, #0]
 800b420:	bd10      	pop	{r4, pc}
 800b422:	6923      	ldr	r3, [r4, #16]
 800b424:	2001      	movs	r0, #1
 800b426:	6023      	str	r3, [r4, #0]
 800b428:	2300      	movs	r3, #0
 800b42a:	89a2      	ldrh	r2, [r4, #12]
 800b42c:	6063      	str	r3, [r4, #4]
 800b42e:	3320      	adds	r3, #32
 800b430:	4313      	orrs	r3, r2
 800b432:	81a3      	strh	r3, [r4, #12]
 800b434:	4240      	negs	r0, r0
 800b436:	e7f3      	b.n	800b420 <__ssrefill_r+0x26>

0800b438 <__ssvfiscanf_r>:
 800b438:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b43a:	0017      	movs	r7, r2
 800b43c:	2200      	movs	r2, #0
 800b43e:	4cb0      	ldr	r4, [pc, #704]	; (800b700 <__ssvfiscanf_r+0x2c8>)
 800b440:	25c0      	movs	r5, #192	; 0xc0
 800b442:	44a5      	add	sp, r4
 800b444:	9248      	str	r2, [sp, #288]	; 0x120
 800b446:	9249      	str	r2, [sp, #292]	; 0x124
 800b448:	aa05      	add	r2, sp, #20
 800b44a:	924a      	str	r2, [sp, #296]	; 0x128
 800b44c:	22be      	movs	r2, #190	; 0xbe
 800b44e:	000c      	movs	r4, r1
 800b450:	49ac      	ldr	r1, [pc, #688]	; (800b704 <__ssvfiscanf_r+0x2cc>)
 800b452:	9000      	str	r0, [sp, #0]
 800b454:	0052      	lsls	r2, r2, #1
 800b456:	a845      	add	r0, sp, #276	; 0x114
 800b458:	5081      	str	r1, [r0, r2]
 800b45a:	49ab      	ldr	r1, [pc, #684]	; (800b708 <__ssvfiscanf_r+0x2d0>)
 800b45c:	006d      	lsls	r5, r5, #1
 800b45e:	5141      	str	r1, [r0, r5]
 800b460:	9304      	str	r3, [sp, #16]
 800b462:	783b      	ldrb	r3, [r7, #0]
 800b464:	2b00      	cmp	r3, #0
 800b466:	d100      	bne.n	800b46a <__ssvfiscanf_r+0x32>
 800b468:	e148      	b.n	800b6fc <__ssvfiscanf_r+0x2c4>
 800b46a:	f7fe ffeb 	bl	800a444 <__locale_ctype_ptr>
 800b46e:	2208      	movs	r2, #8
 800b470:	783b      	ldrb	r3, [r7, #0]
 800b472:	1c7e      	adds	r6, r7, #1
 800b474:	18c0      	adds	r0, r0, r3
 800b476:	9301      	str	r3, [sp, #4]
 800b478:	7843      	ldrb	r3, [r0, #1]
 800b47a:	4013      	ands	r3, r2
 800b47c:	d020      	beq.n	800b4c0 <__ssvfiscanf_r+0x88>
 800b47e:	6863      	ldr	r3, [r4, #4]
 800b480:	2b00      	cmp	r3, #0
 800b482:	dd14      	ble.n	800b4ae <__ssvfiscanf_r+0x76>
 800b484:	f7fe ffde 	bl	800a444 <__locale_ctype_ptr>
 800b488:	2108      	movs	r1, #8
 800b48a:	6823      	ldr	r3, [r4, #0]
 800b48c:	781a      	ldrb	r2, [r3, #0]
 800b48e:	1880      	adds	r0, r0, r2
 800b490:	7842      	ldrb	r2, [r0, #1]
 800b492:	420a      	tst	r2, r1
 800b494:	d101      	bne.n	800b49a <__ssvfiscanf_r+0x62>
 800b496:	0037      	movs	r7, r6
 800b498:	e7e3      	b.n	800b462 <__ssvfiscanf_r+0x2a>
 800b49a:	9a49      	ldr	r2, [sp, #292]	; 0x124
 800b49c:	3301      	adds	r3, #1
 800b49e:	9201      	str	r2, [sp, #4]
 800b4a0:	3201      	adds	r2, #1
 800b4a2:	9249      	str	r2, [sp, #292]	; 0x124
 800b4a4:	6862      	ldr	r2, [r4, #4]
 800b4a6:	6023      	str	r3, [r4, #0]
 800b4a8:	3a01      	subs	r2, #1
 800b4aa:	6062      	str	r2, [r4, #4]
 800b4ac:	e7e7      	b.n	800b47e <__ssvfiscanf_r+0x46>
 800b4ae:	ab45      	add	r3, sp, #276	; 0x114
 800b4b0:	595b      	ldr	r3, [r3, r5]
 800b4b2:	0021      	movs	r1, r4
 800b4b4:	9800      	ldr	r0, [sp, #0]
 800b4b6:	9301      	str	r3, [sp, #4]
 800b4b8:	4798      	blx	r3
 800b4ba:	2800      	cmp	r0, #0
 800b4bc:	d0e2      	beq.n	800b484 <__ssvfiscanf_r+0x4c>
 800b4be:	e7ea      	b.n	800b496 <__ssvfiscanf_r+0x5e>
 800b4c0:	9a01      	ldr	r2, [sp, #4]
 800b4c2:	2a25      	cmp	r2, #37	; 0x25
 800b4c4:	d16d      	bne.n	800b5a2 <__ssvfiscanf_r+0x16a>
 800b4c6:	9347      	str	r3, [sp, #284]	; 0x11c
 800b4c8:	9345      	str	r3, [sp, #276]	; 0x114
 800b4ca:	787b      	ldrb	r3, [r7, #1]
 800b4cc:	2b2a      	cmp	r3, #42	; 0x2a
 800b4ce:	d102      	bne.n	800b4d6 <__ssvfiscanf_r+0x9e>
 800b4d0:	3b1a      	subs	r3, #26
 800b4d2:	9345      	str	r3, [sp, #276]	; 0x114
 800b4d4:	1cbe      	adds	r6, r7, #2
 800b4d6:	0037      	movs	r7, r6
 800b4d8:	220a      	movs	r2, #10
 800b4da:	7839      	ldrb	r1, [r7, #0]
 800b4dc:	1c7b      	adds	r3, r7, #1
 800b4de:	9302      	str	r3, [sp, #8]
 800b4e0:	000b      	movs	r3, r1
 800b4e2:	3b30      	subs	r3, #48	; 0x30
 800b4e4:	2b09      	cmp	r3, #9
 800b4e6:	d924      	bls.n	800b532 <__ssvfiscanf_r+0xfa>
 800b4e8:	4e88      	ldr	r6, [pc, #544]	; (800b70c <__ssvfiscanf_r+0x2d4>)
 800b4ea:	2203      	movs	r2, #3
 800b4ec:	0030      	movs	r0, r6
 800b4ee:	f7ff f841 	bl	800a574 <memchr>
 800b4f2:	2800      	cmp	r0, #0
 800b4f4:	d007      	beq.n	800b506 <__ssvfiscanf_r+0xce>
 800b4f6:	2301      	movs	r3, #1
 800b4f8:	1b80      	subs	r0, r0, r6
 800b4fa:	4083      	lsls	r3, r0
 800b4fc:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800b4fe:	9f02      	ldr	r7, [sp, #8]
 800b500:	4313      	orrs	r3, r2
 800b502:	9203      	str	r2, [sp, #12]
 800b504:	9345      	str	r3, [sp, #276]	; 0x114
 800b506:	783b      	ldrb	r3, [r7, #0]
 800b508:	1c7e      	adds	r6, r7, #1
 800b50a:	2b67      	cmp	r3, #103	; 0x67
 800b50c:	d835      	bhi.n	800b57a <__ssvfiscanf_r+0x142>
 800b50e:	2b65      	cmp	r3, #101	; 0x65
 800b510:	d300      	bcc.n	800b514 <__ssvfiscanf_r+0xdc>
 800b512:	e0b8      	b.n	800b686 <__ssvfiscanf_r+0x24e>
 800b514:	2b47      	cmp	r3, #71	; 0x47
 800b516:	d814      	bhi.n	800b542 <__ssvfiscanf_r+0x10a>
 800b518:	2b45      	cmp	r3, #69	; 0x45
 800b51a:	d300      	bcc.n	800b51e <__ssvfiscanf_r+0xe6>
 800b51c:	e0b3      	b.n	800b686 <__ssvfiscanf_r+0x24e>
 800b51e:	2b00      	cmp	r3, #0
 800b520:	d100      	bne.n	800b524 <__ssvfiscanf_r+0xec>
 800b522:	e0e8      	b.n	800b6f6 <__ssvfiscanf_r+0x2be>
 800b524:	2b25      	cmp	r3, #37	; 0x25
 800b526:	d03c      	beq.n	800b5a2 <__ssvfiscanf_r+0x16a>
 800b528:	2303      	movs	r3, #3
 800b52a:	934b      	str	r3, [sp, #300]	; 0x12c
 800b52c:	3307      	adds	r3, #7
 800b52e:	9346      	str	r3, [sp, #280]	; 0x118
 800b530:	e066      	b.n	800b600 <__ssvfiscanf_r+0x1c8>
 800b532:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 800b534:	9f02      	ldr	r7, [sp, #8]
 800b536:	9303      	str	r3, [sp, #12]
 800b538:	4353      	muls	r3, r2
 800b53a:	3b30      	subs	r3, #48	; 0x30
 800b53c:	1859      	adds	r1, r3, r1
 800b53e:	9147      	str	r1, [sp, #284]	; 0x11c
 800b540:	e7cb      	b.n	800b4da <__ssvfiscanf_r+0xa2>
 800b542:	2b5b      	cmp	r3, #91	; 0x5b
 800b544:	d100      	bne.n	800b548 <__ssvfiscanf_r+0x110>
 800b546:	e07a      	b.n	800b63e <__ssvfiscanf_r+0x206>
 800b548:	d810      	bhi.n	800b56c <__ssvfiscanf_r+0x134>
 800b54a:	2b58      	cmp	r3, #88	; 0x58
 800b54c:	d1ec      	bne.n	800b528 <__ssvfiscanf_r+0xf0>
 800b54e:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800b550:	9201      	str	r2, [sp, #4]
 800b552:	2280      	movs	r2, #128	; 0x80
 800b554:	9901      	ldr	r1, [sp, #4]
 800b556:	0092      	lsls	r2, r2, #2
 800b558:	430a      	orrs	r2, r1
 800b55a:	9245      	str	r2, [sp, #276]	; 0x114
 800b55c:	2210      	movs	r2, #16
 800b55e:	9246      	str	r2, [sp, #280]	; 0x118
 800b560:	226e      	movs	r2, #110	; 0x6e
 800b562:	429a      	cmp	r2, r3
 800b564:	419b      	sbcs	r3, r3
 800b566:	425b      	negs	r3, r3
 800b568:	3303      	adds	r3, #3
 800b56a:	e048      	b.n	800b5fe <__ssvfiscanf_r+0x1c6>
 800b56c:	2b63      	cmp	r3, #99	; 0x63
 800b56e:	d100      	bne.n	800b572 <__ssvfiscanf_r+0x13a>
 800b570:	e072      	b.n	800b658 <__ssvfiscanf_r+0x220>
 800b572:	2b64      	cmp	r3, #100	; 0x64
 800b574:	d1d8      	bne.n	800b528 <__ssvfiscanf_r+0xf0>
 800b576:	220a      	movs	r2, #10
 800b578:	e7f1      	b.n	800b55e <__ssvfiscanf_r+0x126>
 800b57a:	2b70      	cmp	r3, #112	; 0x70
 800b57c:	d035      	beq.n	800b5ea <__ssvfiscanf_r+0x1b2>
 800b57e:	d808      	bhi.n	800b592 <__ssvfiscanf_r+0x15a>
 800b580:	2b6e      	cmp	r3, #110	; 0x6e
 800b582:	d100      	bne.n	800b586 <__ssvfiscanf_r+0x14e>
 800b584:	e070      	b.n	800b668 <__ssvfiscanf_r+0x230>
 800b586:	d837      	bhi.n	800b5f8 <__ssvfiscanf_r+0x1c0>
 800b588:	2b69      	cmp	r3, #105	; 0x69
 800b58a:	d1cd      	bne.n	800b528 <__ssvfiscanf_r+0xf0>
 800b58c:	2300      	movs	r3, #0
 800b58e:	9346      	str	r3, [sp, #280]	; 0x118
 800b590:	e7ea      	b.n	800b568 <__ssvfiscanf_r+0x130>
 800b592:	2b75      	cmp	r3, #117	; 0x75
 800b594:	d0ef      	beq.n	800b576 <__ssvfiscanf_r+0x13e>
 800b596:	2b78      	cmp	r3, #120	; 0x78
 800b598:	d0d9      	beq.n	800b54e <__ssvfiscanf_r+0x116>
 800b59a:	2b73      	cmp	r3, #115	; 0x73
 800b59c:	d1c4      	bne.n	800b528 <__ssvfiscanf_r+0xf0>
 800b59e:	2302      	movs	r3, #2
 800b5a0:	e02d      	b.n	800b5fe <__ssvfiscanf_r+0x1c6>
 800b5a2:	6863      	ldr	r3, [r4, #4]
 800b5a4:	2b00      	cmp	r3, #0
 800b5a6:	dd0f      	ble.n	800b5c8 <__ssvfiscanf_r+0x190>
 800b5a8:	6823      	ldr	r3, [r4, #0]
 800b5aa:	9901      	ldr	r1, [sp, #4]
 800b5ac:	781a      	ldrb	r2, [r3, #0]
 800b5ae:	428a      	cmp	r2, r1
 800b5b0:	d000      	beq.n	800b5b4 <__ssvfiscanf_r+0x17c>
 800b5b2:	e0a3      	b.n	800b6fc <__ssvfiscanf_r+0x2c4>
 800b5b4:	3301      	adds	r3, #1
 800b5b6:	6862      	ldr	r2, [r4, #4]
 800b5b8:	6023      	str	r3, [r4, #0]
 800b5ba:	9b49      	ldr	r3, [sp, #292]	; 0x124
 800b5bc:	3a01      	subs	r2, #1
 800b5be:	9301      	str	r3, [sp, #4]
 800b5c0:	3301      	adds	r3, #1
 800b5c2:	6062      	str	r2, [r4, #4]
 800b5c4:	9349      	str	r3, [sp, #292]	; 0x124
 800b5c6:	e766      	b.n	800b496 <__ssvfiscanf_r+0x5e>
 800b5c8:	ab45      	add	r3, sp, #276	; 0x114
 800b5ca:	595b      	ldr	r3, [r3, r5]
 800b5cc:	0021      	movs	r1, r4
 800b5ce:	9800      	ldr	r0, [sp, #0]
 800b5d0:	9302      	str	r3, [sp, #8]
 800b5d2:	4798      	blx	r3
 800b5d4:	2800      	cmp	r0, #0
 800b5d6:	d0e7      	beq.n	800b5a8 <__ssvfiscanf_r+0x170>
 800b5d8:	9848      	ldr	r0, [sp, #288]	; 0x120
 800b5da:	2800      	cmp	r0, #0
 800b5dc:	d000      	beq.n	800b5e0 <__ssvfiscanf_r+0x1a8>
 800b5de:	e086      	b.n	800b6ee <__ssvfiscanf_r+0x2b6>
 800b5e0:	3801      	subs	r0, #1
 800b5e2:	23a7      	movs	r3, #167	; 0xa7
 800b5e4:	009b      	lsls	r3, r3, #2
 800b5e6:	449d      	add	sp, r3
 800b5e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b5ea:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800b5ec:	9201      	str	r2, [sp, #4]
 800b5ee:	2220      	movs	r2, #32
 800b5f0:	9901      	ldr	r1, [sp, #4]
 800b5f2:	430a      	orrs	r2, r1
 800b5f4:	9245      	str	r2, [sp, #276]	; 0x114
 800b5f6:	e7aa      	b.n	800b54e <__ssvfiscanf_r+0x116>
 800b5f8:	2308      	movs	r3, #8
 800b5fa:	9346      	str	r3, [sp, #280]	; 0x118
 800b5fc:	3b04      	subs	r3, #4
 800b5fe:	934b      	str	r3, [sp, #300]	; 0x12c
 800b600:	6863      	ldr	r3, [r4, #4]
 800b602:	2b00      	cmp	r3, #0
 800b604:	dd41      	ble.n	800b68a <__ssvfiscanf_r+0x252>
 800b606:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800b608:	9301      	str	r3, [sp, #4]
 800b60a:	065b      	lsls	r3, r3, #25
 800b60c:	d408      	bmi.n	800b620 <__ssvfiscanf_r+0x1e8>
 800b60e:	f7fe ff19 	bl	800a444 <__locale_ctype_ptr>
 800b612:	2108      	movs	r1, #8
 800b614:	6823      	ldr	r3, [r4, #0]
 800b616:	781a      	ldrb	r2, [r3, #0]
 800b618:	1880      	adds	r0, r0, r2
 800b61a:	7842      	ldrb	r2, [r0, #1]
 800b61c:	420a      	tst	r2, r1
 800b61e:	d13d      	bne.n	800b69c <__ssvfiscanf_r+0x264>
 800b620:	9b4b      	ldr	r3, [sp, #300]	; 0x12c
 800b622:	2b02      	cmp	r3, #2
 800b624:	dc4f      	bgt.n	800b6c6 <__ssvfiscanf_r+0x28e>
 800b626:	ab04      	add	r3, sp, #16
 800b628:	0022      	movs	r2, r4
 800b62a:	a945      	add	r1, sp, #276	; 0x114
 800b62c:	9800      	ldr	r0, [sp, #0]
 800b62e:	f000 f871 	bl	800b714 <_scanf_chars>
 800b632:	2801      	cmp	r0, #1
 800b634:	d062      	beq.n	800b6fc <__ssvfiscanf_r+0x2c4>
 800b636:	2802      	cmp	r0, #2
 800b638:	d000      	beq.n	800b63c <__ssvfiscanf_r+0x204>
 800b63a:	e72c      	b.n	800b496 <__ssvfiscanf_r+0x5e>
 800b63c:	e7cc      	b.n	800b5d8 <__ssvfiscanf_r+0x1a0>
 800b63e:	0031      	movs	r1, r6
 800b640:	a805      	add	r0, sp, #20
 800b642:	f000 f9e3 	bl	800ba0c <__sccl>
 800b646:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800b648:	0006      	movs	r6, r0
 800b64a:	9301      	str	r3, [sp, #4]
 800b64c:	2340      	movs	r3, #64	; 0x40
 800b64e:	9a01      	ldr	r2, [sp, #4]
 800b650:	4313      	orrs	r3, r2
 800b652:	9345      	str	r3, [sp, #276]	; 0x114
 800b654:	2301      	movs	r3, #1
 800b656:	e7d2      	b.n	800b5fe <__ssvfiscanf_r+0x1c6>
 800b658:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800b65a:	9301      	str	r3, [sp, #4]
 800b65c:	2340      	movs	r3, #64	; 0x40
 800b65e:	9a01      	ldr	r2, [sp, #4]
 800b660:	4313      	orrs	r3, r2
 800b662:	9345      	str	r3, [sp, #276]	; 0x114
 800b664:	2300      	movs	r3, #0
 800b666:	e7ca      	b.n	800b5fe <__ssvfiscanf_r+0x1c6>
 800b668:	9845      	ldr	r0, [sp, #276]	; 0x114
 800b66a:	06c3      	lsls	r3, r0, #27
 800b66c:	d500      	bpl.n	800b670 <__ssvfiscanf_r+0x238>
 800b66e:	e712      	b.n	800b496 <__ssvfiscanf_r+0x5e>
 800b670:	9b04      	ldr	r3, [sp, #16]
 800b672:	9a49      	ldr	r2, [sp, #292]	; 0x124
 800b674:	1d19      	adds	r1, r3, #4
 800b676:	9104      	str	r1, [sp, #16]
 800b678:	681b      	ldr	r3, [r3, #0]
 800b67a:	07c7      	lsls	r7, r0, #31
 800b67c:	d501      	bpl.n	800b682 <__ssvfiscanf_r+0x24a>
 800b67e:	801a      	strh	r2, [r3, #0]
 800b680:	e709      	b.n	800b496 <__ssvfiscanf_r+0x5e>
 800b682:	601a      	str	r2, [r3, #0]
 800b684:	e707      	b.n	800b496 <__ssvfiscanf_r+0x5e>
 800b686:	2305      	movs	r3, #5
 800b688:	e7b9      	b.n	800b5fe <__ssvfiscanf_r+0x1c6>
 800b68a:	ab45      	add	r3, sp, #276	; 0x114
 800b68c:	595b      	ldr	r3, [r3, r5]
 800b68e:	0021      	movs	r1, r4
 800b690:	9800      	ldr	r0, [sp, #0]
 800b692:	9301      	str	r3, [sp, #4]
 800b694:	4798      	blx	r3
 800b696:	2800      	cmp	r0, #0
 800b698:	d0b5      	beq.n	800b606 <__ssvfiscanf_r+0x1ce>
 800b69a:	e79d      	b.n	800b5d8 <__ssvfiscanf_r+0x1a0>
 800b69c:	9a49      	ldr	r2, [sp, #292]	; 0x124
 800b69e:	9201      	str	r2, [sp, #4]
 800b6a0:	3201      	adds	r2, #1
 800b6a2:	9249      	str	r2, [sp, #292]	; 0x124
 800b6a4:	6862      	ldr	r2, [r4, #4]
 800b6a6:	3a01      	subs	r2, #1
 800b6a8:	6062      	str	r2, [r4, #4]
 800b6aa:	2a00      	cmp	r2, #0
 800b6ac:	dd02      	ble.n	800b6b4 <__ssvfiscanf_r+0x27c>
 800b6ae:	3301      	adds	r3, #1
 800b6b0:	6023      	str	r3, [r4, #0]
 800b6b2:	e7ac      	b.n	800b60e <__ssvfiscanf_r+0x1d6>
 800b6b4:	ab45      	add	r3, sp, #276	; 0x114
 800b6b6:	595b      	ldr	r3, [r3, r5]
 800b6b8:	0021      	movs	r1, r4
 800b6ba:	9800      	ldr	r0, [sp, #0]
 800b6bc:	9301      	str	r3, [sp, #4]
 800b6be:	4798      	blx	r3
 800b6c0:	2800      	cmp	r0, #0
 800b6c2:	d0a4      	beq.n	800b60e <__ssvfiscanf_r+0x1d6>
 800b6c4:	e788      	b.n	800b5d8 <__ssvfiscanf_r+0x1a0>
 800b6c6:	2b04      	cmp	r3, #4
 800b6c8:	dc06      	bgt.n	800b6d8 <__ssvfiscanf_r+0x2a0>
 800b6ca:	ab04      	add	r3, sp, #16
 800b6cc:	0022      	movs	r2, r4
 800b6ce:	a945      	add	r1, sp, #276	; 0x114
 800b6d0:	9800      	ldr	r0, [sp, #0]
 800b6d2:	f000 f885 	bl	800b7e0 <_scanf_i>
 800b6d6:	e7ac      	b.n	800b632 <__ssvfiscanf_r+0x1fa>
 800b6d8:	4b0d      	ldr	r3, [pc, #52]	; (800b710 <__ssvfiscanf_r+0x2d8>)
 800b6da:	2b00      	cmp	r3, #0
 800b6dc:	d100      	bne.n	800b6e0 <__ssvfiscanf_r+0x2a8>
 800b6de:	e6da      	b.n	800b496 <__ssvfiscanf_r+0x5e>
 800b6e0:	ab04      	add	r3, sp, #16
 800b6e2:	0022      	movs	r2, r4
 800b6e4:	a945      	add	r1, sp, #276	; 0x114
 800b6e6:	9800      	ldr	r0, [sp, #0]
 800b6e8:	e000      	b.n	800b6ec <__ssvfiscanf_r+0x2b4>
 800b6ea:	bf00      	nop
 800b6ec:	e7a1      	b.n	800b632 <__ssvfiscanf_r+0x1fa>
 800b6ee:	89a3      	ldrh	r3, [r4, #12]
 800b6f0:	065b      	lsls	r3, r3, #25
 800b6f2:	d400      	bmi.n	800b6f6 <__ssvfiscanf_r+0x2be>
 800b6f4:	e775      	b.n	800b5e2 <__ssvfiscanf_r+0x1aa>
 800b6f6:	2001      	movs	r0, #1
 800b6f8:	4240      	negs	r0, r0
 800b6fa:	e772      	b.n	800b5e2 <__ssvfiscanf_r+0x1aa>
 800b6fc:	9848      	ldr	r0, [sp, #288]	; 0x120
 800b6fe:	e770      	b.n	800b5e2 <__ssvfiscanf_r+0x1aa>
 800b700:	fffffd64 	.word	0xfffffd64
 800b704:	0800b383 	.word	0x0800b383
 800b708:	0800b3fb 	.word	0x0800b3fb
 800b70c:	0800da12 	.word	0x0800da12
 800b710:	00000000 	.word	0x00000000

0800b714 <_scanf_chars>:
 800b714:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b716:	0015      	movs	r5, r2
 800b718:	688a      	ldr	r2, [r1, #8]
 800b71a:	9001      	str	r0, [sp, #4]
 800b71c:	000c      	movs	r4, r1
 800b71e:	2a00      	cmp	r2, #0
 800b720:	d104      	bne.n	800b72c <_scanf_chars+0x18>
 800b722:	698a      	ldr	r2, [r1, #24]
 800b724:	2a00      	cmp	r2, #0
 800b726:	d117      	bne.n	800b758 <_scanf_chars+0x44>
 800b728:	3201      	adds	r2, #1
 800b72a:	60a2      	str	r2, [r4, #8]
 800b72c:	6822      	ldr	r2, [r4, #0]
 800b72e:	06d2      	lsls	r2, r2, #27
 800b730:	d403      	bmi.n	800b73a <_scanf_chars+0x26>
 800b732:	681a      	ldr	r2, [r3, #0]
 800b734:	1d11      	adds	r1, r2, #4
 800b736:	6019      	str	r1, [r3, #0]
 800b738:	6817      	ldr	r7, [r2, #0]
 800b73a:	2600      	movs	r6, #0
 800b73c:	69a3      	ldr	r3, [r4, #24]
 800b73e:	2b00      	cmp	r3, #0
 800b740:	d01f      	beq.n	800b782 <_scanf_chars+0x6e>
 800b742:	2b01      	cmp	r3, #1
 800b744:	d10b      	bne.n	800b75e <_scanf_chars+0x4a>
 800b746:	682b      	ldr	r3, [r5, #0]
 800b748:	6962      	ldr	r2, [r4, #20]
 800b74a:	781b      	ldrb	r3, [r3, #0]
 800b74c:	5cd3      	ldrb	r3, [r2, r3]
 800b74e:	2b00      	cmp	r3, #0
 800b750:	d117      	bne.n	800b782 <_scanf_chars+0x6e>
 800b752:	2e00      	cmp	r6, #0
 800b754:	d133      	bne.n	800b7be <_scanf_chars+0xaa>
 800b756:	e009      	b.n	800b76c <_scanf_chars+0x58>
 800b758:	2201      	movs	r2, #1
 800b75a:	4252      	negs	r2, r2
 800b75c:	e7e5      	b.n	800b72a <_scanf_chars+0x16>
 800b75e:	2b02      	cmp	r3, #2
 800b760:	d006      	beq.n	800b770 <_scanf_chars+0x5c>
 800b762:	2e00      	cmp	r6, #0
 800b764:	d12b      	bne.n	800b7be <_scanf_chars+0xaa>
 800b766:	69a3      	ldr	r3, [r4, #24]
 800b768:	2b01      	cmp	r3, #1
 800b76a:	d128      	bne.n	800b7be <_scanf_chars+0xaa>
 800b76c:	2001      	movs	r0, #1
 800b76e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800b770:	f7fe fe68 	bl	800a444 <__locale_ctype_ptr>
 800b774:	2208      	movs	r2, #8
 800b776:	682b      	ldr	r3, [r5, #0]
 800b778:	781b      	ldrb	r3, [r3, #0]
 800b77a:	18c0      	adds	r0, r0, r3
 800b77c:	7843      	ldrb	r3, [r0, #1]
 800b77e:	4213      	tst	r3, r2
 800b780:	d1ef      	bne.n	800b762 <_scanf_chars+0x4e>
 800b782:	2210      	movs	r2, #16
 800b784:	6823      	ldr	r3, [r4, #0]
 800b786:	3601      	adds	r6, #1
 800b788:	4213      	tst	r3, r2
 800b78a:	d103      	bne.n	800b794 <_scanf_chars+0x80>
 800b78c:	682b      	ldr	r3, [r5, #0]
 800b78e:	781b      	ldrb	r3, [r3, #0]
 800b790:	703b      	strb	r3, [r7, #0]
 800b792:	3701      	adds	r7, #1
 800b794:	682a      	ldr	r2, [r5, #0]
 800b796:	686b      	ldr	r3, [r5, #4]
 800b798:	3201      	adds	r2, #1
 800b79a:	602a      	str	r2, [r5, #0]
 800b79c:	68a2      	ldr	r2, [r4, #8]
 800b79e:	3b01      	subs	r3, #1
 800b7a0:	3a01      	subs	r2, #1
 800b7a2:	606b      	str	r3, [r5, #4]
 800b7a4:	60a2      	str	r2, [r4, #8]
 800b7a6:	2a00      	cmp	r2, #0
 800b7a8:	d009      	beq.n	800b7be <_scanf_chars+0xaa>
 800b7aa:	2b00      	cmp	r3, #0
 800b7ac:	dcc6      	bgt.n	800b73c <_scanf_chars+0x28>
 800b7ae:	23c0      	movs	r3, #192	; 0xc0
 800b7b0:	005b      	lsls	r3, r3, #1
 800b7b2:	58e3      	ldr	r3, [r4, r3]
 800b7b4:	0029      	movs	r1, r5
 800b7b6:	9801      	ldr	r0, [sp, #4]
 800b7b8:	4798      	blx	r3
 800b7ba:	2800      	cmp	r0, #0
 800b7bc:	d0be      	beq.n	800b73c <_scanf_chars+0x28>
 800b7be:	2310      	movs	r3, #16
 800b7c0:	6822      	ldr	r2, [r4, #0]
 800b7c2:	4013      	ands	r3, r2
 800b7c4:	d106      	bne.n	800b7d4 <_scanf_chars+0xc0>
 800b7c6:	68e2      	ldr	r2, [r4, #12]
 800b7c8:	3201      	adds	r2, #1
 800b7ca:	60e2      	str	r2, [r4, #12]
 800b7cc:	69a2      	ldr	r2, [r4, #24]
 800b7ce:	2a00      	cmp	r2, #0
 800b7d0:	d000      	beq.n	800b7d4 <_scanf_chars+0xc0>
 800b7d2:	703b      	strb	r3, [r7, #0]
 800b7d4:	6923      	ldr	r3, [r4, #16]
 800b7d6:	2000      	movs	r0, #0
 800b7d8:	199e      	adds	r6, r3, r6
 800b7da:	6126      	str	r6, [r4, #16]
 800b7dc:	e7c7      	b.n	800b76e <_scanf_chars+0x5a>
	...

0800b7e0 <_scanf_i>:
 800b7e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b7e2:	000c      	movs	r4, r1
 800b7e4:	b08b      	sub	sp, #44	; 0x2c
 800b7e6:	9302      	str	r3, [sp, #8]
 800b7e8:	4b78      	ldr	r3, [pc, #480]	; (800b9cc <_scanf_i+0x1ec>)
 800b7ea:	9004      	str	r0, [sp, #16]
 800b7ec:	0016      	movs	r6, r2
 800b7ee:	aa07      	add	r2, sp, #28
 800b7f0:	cb23      	ldmia	r3!, {r0, r1, r5}
 800b7f2:	c223      	stmia	r2!, {r0, r1, r5}
 800b7f4:	4b76      	ldr	r3, [pc, #472]	; (800b9d0 <_scanf_i+0x1f0>)
 800b7f6:	9305      	str	r3, [sp, #20]
 800b7f8:	69a3      	ldr	r3, [r4, #24]
 800b7fa:	2b03      	cmp	r3, #3
 800b7fc:	d101      	bne.n	800b802 <_scanf_i+0x22>
 800b7fe:	4b75      	ldr	r3, [pc, #468]	; (800b9d4 <_scanf_i+0x1f4>)
 800b800:	9305      	str	r3, [sp, #20]
 800b802:	22ae      	movs	r2, #174	; 0xae
 800b804:	2000      	movs	r0, #0
 800b806:	68a3      	ldr	r3, [r4, #8]
 800b808:	0052      	lsls	r2, r2, #1
 800b80a:	1e59      	subs	r1, r3, #1
 800b80c:	9003      	str	r0, [sp, #12]
 800b80e:	4291      	cmp	r1, r2
 800b810:	d905      	bls.n	800b81e <_scanf_i+0x3e>
 800b812:	3b5e      	subs	r3, #94	; 0x5e
 800b814:	3bff      	subs	r3, #255	; 0xff
 800b816:	9303      	str	r3, [sp, #12]
 800b818:	235e      	movs	r3, #94	; 0x5e
 800b81a:	33ff      	adds	r3, #255	; 0xff
 800b81c:	60a3      	str	r3, [r4, #8]
 800b81e:	0023      	movs	r3, r4
 800b820:	331c      	adds	r3, #28
 800b822:	9301      	str	r3, [sp, #4]
 800b824:	23d0      	movs	r3, #208	; 0xd0
 800b826:	2700      	movs	r7, #0
 800b828:	6822      	ldr	r2, [r4, #0]
 800b82a:	011b      	lsls	r3, r3, #4
 800b82c:	4313      	orrs	r3, r2
 800b82e:	6023      	str	r3, [r4, #0]
 800b830:	9b01      	ldr	r3, [sp, #4]
 800b832:	9300      	str	r3, [sp, #0]
 800b834:	6833      	ldr	r3, [r6, #0]
 800b836:	a807      	add	r0, sp, #28
 800b838:	7819      	ldrb	r1, [r3, #0]
 800b83a:	00bb      	lsls	r3, r7, #2
 800b83c:	2202      	movs	r2, #2
 800b83e:	5818      	ldr	r0, [r3, r0]
 800b840:	f7fe fe98 	bl	800a574 <memchr>
 800b844:	2800      	cmp	r0, #0
 800b846:	d02b      	beq.n	800b8a0 <_scanf_i+0xc0>
 800b848:	2f01      	cmp	r7, #1
 800b84a:	d162      	bne.n	800b912 <_scanf_i+0x132>
 800b84c:	6863      	ldr	r3, [r4, #4]
 800b84e:	2b00      	cmp	r3, #0
 800b850:	d106      	bne.n	800b860 <_scanf_i+0x80>
 800b852:	3308      	adds	r3, #8
 800b854:	6822      	ldr	r2, [r4, #0]
 800b856:	6063      	str	r3, [r4, #4]
 800b858:	33f9      	adds	r3, #249	; 0xf9
 800b85a:	33ff      	adds	r3, #255	; 0xff
 800b85c:	4313      	orrs	r3, r2
 800b85e:	6023      	str	r3, [r4, #0]
 800b860:	4b5d      	ldr	r3, [pc, #372]	; (800b9d8 <_scanf_i+0x1f8>)
 800b862:	6822      	ldr	r2, [r4, #0]
 800b864:	4013      	ands	r3, r2
 800b866:	6023      	str	r3, [r4, #0]
 800b868:	68a3      	ldr	r3, [r4, #8]
 800b86a:	1e5a      	subs	r2, r3, #1
 800b86c:	60a2      	str	r2, [r4, #8]
 800b86e:	2b00      	cmp	r3, #0
 800b870:	d016      	beq.n	800b8a0 <_scanf_i+0xc0>
 800b872:	6833      	ldr	r3, [r6, #0]
 800b874:	1c5a      	adds	r2, r3, #1
 800b876:	6032      	str	r2, [r6, #0]
 800b878:	781b      	ldrb	r3, [r3, #0]
 800b87a:	9a00      	ldr	r2, [sp, #0]
 800b87c:	7013      	strb	r3, [r2, #0]
 800b87e:	6873      	ldr	r3, [r6, #4]
 800b880:	1c55      	adds	r5, r2, #1
 800b882:	3b01      	subs	r3, #1
 800b884:	6073      	str	r3, [r6, #4]
 800b886:	2b00      	cmp	r3, #0
 800b888:	dc09      	bgt.n	800b89e <_scanf_i+0xbe>
 800b88a:	23c0      	movs	r3, #192	; 0xc0
 800b88c:	005b      	lsls	r3, r3, #1
 800b88e:	58e3      	ldr	r3, [r4, r3]
 800b890:	0031      	movs	r1, r6
 800b892:	9804      	ldr	r0, [sp, #16]
 800b894:	9300      	str	r3, [sp, #0]
 800b896:	4798      	blx	r3
 800b898:	2800      	cmp	r0, #0
 800b89a:	d000      	beq.n	800b89e <_scanf_i+0xbe>
 800b89c:	e080      	b.n	800b9a0 <_scanf_i+0x1c0>
 800b89e:	9500      	str	r5, [sp, #0]
 800b8a0:	3701      	adds	r7, #1
 800b8a2:	2f03      	cmp	r7, #3
 800b8a4:	d1c6      	bne.n	800b834 <_scanf_i+0x54>
 800b8a6:	6863      	ldr	r3, [r4, #4]
 800b8a8:	2b00      	cmp	r3, #0
 800b8aa:	d101      	bne.n	800b8b0 <_scanf_i+0xd0>
 800b8ac:	330a      	adds	r3, #10
 800b8ae:	6063      	str	r3, [r4, #4]
 800b8b0:	2110      	movs	r1, #16
 800b8b2:	2700      	movs	r7, #0
 800b8b4:	6863      	ldr	r3, [r4, #4]
 800b8b6:	6960      	ldr	r0, [r4, #20]
 800b8b8:	1ac9      	subs	r1, r1, r3
 800b8ba:	4b48      	ldr	r3, [pc, #288]	; (800b9dc <_scanf_i+0x1fc>)
 800b8bc:	18c9      	adds	r1, r1, r3
 800b8be:	f000 f8a5 	bl	800ba0c <__sccl>
 800b8c2:	9d00      	ldr	r5, [sp, #0]
 800b8c4:	68a3      	ldr	r3, [r4, #8]
 800b8c6:	6822      	ldr	r2, [r4, #0]
 800b8c8:	9300      	str	r3, [sp, #0]
 800b8ca:	2b00      	cmp	r3, #0
 800b8cc:	d041      	beq.n	800b952 <_scanf_i+0x172>
 800b8ce:	6831      	ldr	r1, [r6, #0]
 800b8d0:	6963      	ldr	r3, [r4, #20]
 800b8d2:	7808      	ldrb	r0, [r1, #0]
 800b8d4:	5c1b      	ldrb	r3, [r3, r0]
 800b8d6:	2b00      	cmp	r3, #0
 800b8d8:	d03b      	beq.n	800b952 <_scanf_i+0x172>
 800b8da:	2830      	cmp	r0, #48	; 0x30
 800b8dc:	d129      	bne.n	800b932 <_scanf_i+0x152>
 800b8de:	2380      	movs	r3, #128	; 0x80
 800b8e0:	011b      	lsls	r3, r3, #4
 800b8e2:	421a      	tst	r2, r3
 800b8e4:	d025      	beq.n	800b932 <_scanf_i+0x152>
 800b8e6:	9b03      	ldr	r3, [sp, #12]
 800b8e8:	3701      	adds	r7, #1
 800b8ea:	2b00      	cmp	r3, #0
 800b8ec:	d005      	beq.n	800b8fa <_scanf_i+0x11a>
 800b8ee:	001a      	movs	r2, r3
 800b8f0:	9b00      	ldr	r3, [sp, #0]
 800b8f2:	3a01      	subs	r2, #1
 800b8f4:	3301      	adds	r3, #1
 800b8f6:	9203      	str	r2, [sp, #12]
 800b8f8:	60a3      	str	r3, [r4, #8]
 800b8fa:	6873      	ldr	r3, [r6, #4]
 800b8fc:	3b01      	subs	r3, #1
 800b8fe:	6073      	str	r3, [r6, #4]
 800b900:	2b00      	cmp	r3, #0
 800b902:	dd1d      	ble.n	800b940 <_scanf_i+0x160>
 800b904:	6833      	ldr	r3, [r6, #0]
 800b906:	3301      	adds	r3, #1
 800b908:	6033      	str	r3, [r6, #0]
 800b90a:	68a3      	ldr	r3, [r4, #8]
 800b90c:	3b01      	subs	r3, #1
 800b90e:	60a3      	str	r3, [r4, #8]
 800b910:	e7d8      	b.n	800b8c4 <_scanf_i+0xe4>
 800b912:	2f02      	cmp	r7, #2
 800b914:	d1a8      	bne.n	800b868 <_scanf_i+0x88>
 800b916:	21c0      	movs	r1, #192	; 0xc0
 800b918:	2380      	movs	r3, #128	; 0x80
 800b91a:	6822      	ldr	r2, [r4, #0]
 800b91c:	00c9      	lsls	r1, r1, #3
 800b91e:	4011      	ands	r1, r2
 800b920:	009b      	lsls	r3, r3, #2
 800b922:	4299      	cmp	r1, r3
 800b924:	d1bf      	bne.n	800b8a6 <_scanf_i+0xc6>
 800b926:	3bf1      	subs	r3, #241	; 0xf1
 800b928:	3bff      	subs	r3, #255	; 0xff
 800b92a:	6063      	str	r3, [r4, #4]
 800b92c:	33f0      	adds	r3, #240	; 0xf0
 800b92e:	4313      	orrs	r3, r2
 800b930:	e799      	b.n	800b866 <_scanf_i+0x86>
 800b932:	4b2b      	ldr	r3, [pc, #172]	; (800b9e0 <_scanf_i+0x200>)
 800b934:	4013      	ands	r3, r2
 800b936:	6023      	str	r3, [r4, #0]
 800b938:	780b      	ldrb	r3, [r1, #0]
 800b93a:	702b      	strb	r3, [r5, #0]
 800b93c:	3501      	adds	r5, #1
 800b93e:	e7dc      	b.n	800b8fa <_scanf_i+0x11a>
 800b940:	23c0      	movs	r3, #192	; 0xc0
 800b942:	005b      	lsls	r3, r3, #1
 800b944:	58e3      	ldr	r3, [r4, r3]
 800b946:	0031      	movs	r1, r6
 800b948:	9804      	ldr	r0, [sp, #16]
 800b94a:	9300      	str	r3, [sp, #0]
 800b94c:	4798      	blx	r3
 800b94e:	2800      	cmp	r0, #0
 800b950:	d0db      	beq.n	800b90a <_scanf_i+0x12a>
 800b952:	6823      	ldr	r3, [r4, #0]
 800b954:	05db      	lsls	r3, r3, #23
 800b956:	d50e      	bpl.n	800b976 <_scanf_i+0x196>
 800b958:	9b01      	ldr	r3, [sp, #4]
 800b95a:	429d      	cmp	r5, r3
 800b95c:	d907      	bls.n	800b96e <_scanf_i+0x18e>
 800b95e:	23be      	movs	r3, #190	; 0xbe
 800b960:	3d01      	subs	r5, #1
 800b962:	005b      	lsls	r3, r3, #1
 800b964:	7829      	ldrb	r1, [r5, #0]
 800b966:	58e3      	ldr	r3, [r4, r3]
 800b968:	0032      	movs	r2, r6
 800b96a:	9804      	ldr	r0, [sp, #16]
 800b96c:	4798      	blx	r3
 800b96e:	9b01      	ldr	r3, [sp, #4]
 800b970:	2001      	movs	r0, #1
 800b972:	429d      	cmp	r5, r3
 800b974:	d027      	beq.n	800b9c6 <_scanf_i+0x1e6>
 800b976:	2210      	movs	r2, #16
 800b978:	6823      	ldr	r3, [r4, #0]
 800b97a:	401a      	ands	r2, r3
 800b97c:	d11c      	bne.n	800b9b8 <_scanf_i+0x1d8>
 800b97e:	702a      	strb	r2, [r5, #0]
 800b980:	6863      	ldr	r3, [r4, #4]
 800b982:	9901      	ldr	r1, [sp, #4]
 800b984:	9804      	ldr	r0, [sp, #16]
 800b986:	9e05      	ldr	r6, [sp, #20]
 800b988:	47b0      	blx	r6
 800b98a:	9b02      	ldr	r3, [sp, #8]
 800b98c:	6821      	ldr	r1, [r4, #0]
 800b98e:	681b      	ldr	r3, [r3, #0]
 800b990:	068a      	lsls	r2, r1, #26
 800b992:	d507      	bpl.n	800b9a4 <_scanf_i+0x1c4>
 800b994:	1d1a      	adds	r2, r3, #4
 800b996:	9902      	ldr	r1, [sp, #8]
 800b998:	600a      	str	r2, [r1, #0]
 800b99a:	681b      	ldr	r3, [r3, #0]
 800b99c:	6018      	str	r0, [r3, #0]
 800b99e:	e008      	b.n	800b9b2 <_scanf_i+0x1d2>
 800b9a0:	2700      	movs	r7, #0
 800b9a2:	e7d6      	b.n	800b952 <_scanf_i+0x172>
 800b9a4:	1d1a      	adds	r2, r3, #4
 800b9a6:	07ce      	lsls	r6, r1, #31
 800b9a8:	d5f5      	bpl.n	800b996 <_scanf_i+0x1b6>
 800b9aa:	9902      	ldr	r1, [sp, #8]
 800b9ac:	600a      	str	r2, [r1, #0]
 800b9ae:	681b      	ldr	r3, [r3, #0]
 800b9b0:	8018      	strh	r0, [r3, #0]
 800b9b2:	68e3      	ldr	r3, [r4, #12]
 800b9b4:	3301      	adds	r3, #1
 800b9b6:	60e3      	str	r3, [r4, #12]
 800b9b8:	2000      	movs	r0, #0
 800b9ba:	9b01      	ldr	r3, [sp, #4]
 800b9bc:	1aed      	subs	r5, r5, r3
 800b9be:	6923      	ldr	r3, [r4, #16]
 800b9c0:	19ef      	adds	r7, r5, r7
 800b9c2:	19df      	adds	r7, r3, r7
 800b9c4:	6127      	str	r7, [r4, #16]
 800b9c6:	b00b      	add	sp, #44	; 0x2c
 800b9c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9ca:	46c0      	nop			; (mov r8, r8)
 800b9cc:	0800d3d8 	.word	0x0800d3d8
 800b9d0:	08008b79 	.word	0x08008b79
 800b9d4:	08008a29 	.word	0x08008a29
 800b9d8:	fffffaff 	.word	0xfffffaff
 800b9dc:	0800db1e 	.word	0x0800db1e
 800b9e0:	fffff6ff 	.word	0xfffff6ff

0800b9e4 <_read_r>:
 800b9e4:	b570      	push	{r4, r5, r6, lr}
 800b9e6:	0005      	movs	r5, r0
 800b9e8:	0008      	movs	r0, r1
 800b9ea:	0011      	movs	r1, r2
 800b9ec:	2200      	movs	r2, #0
 800b9ee:	4c06      	ldr	r4, [pc, #24]	; (800ba08 <_read_r+0x24>)
 800b9f0:	6022      	str	r2, [r4, #0]
 800b9f2:	001a      	movs	r2, r3
 800b9f4:	f000 f8c8 	bl	800bb88 <_read>
 800b9f8:	1c43      	adds	r3, r0, #1
 800b9fa:	d103      	bne.n	800ba04 <_read_r+0x20>
 800b9fc:	6823      	ldr	r3, [r4, #0]
 800b9fe:	2b00      	cmp	r3, #0
 800ba00:	d000      	beq.n	800ba04 <_read_r+0x20>
 800ba02:	602b      	str	r3, [r5, #0]
 800ba04:	bd70      	pop	{r4, r5, r6, pc}
 800ba06:	46c0      	nop			; (mov r8, r8)
 800ba08:	2000056c 	.word	0x2000056c

0800ba0c <__sccl>:
 800ba0c:	b570      	push	{r4, r5, r6, lr}
 800ba0e:	780b      	ldrb	r3, [r1, #0]
 800ba10:	0005      	movs	r5, r0
 800ba12:	2b5e      	cmp	r3, #94	; 0x5e
 800ba14:	d018      	beq.n	800ba48 <__sccl+0x3c>
 800ba16:	1c4a      	adds	r2, r1, #1
 800ba18:	2100      	movs	r1, #0
 800ba1a:	0028      	movs	r0, r5
 800ba1c:	1c6c      	adds	r4, r5, #1
 800ba1e:	34ff      	adds	r4, #255	; 0xff
 800ba20:	7001      	strb	r1, [r0, #0]
 800ba22:	3001      	adds	r0, #1
 800ba24:	42a0      	cmp	r0, r4
 800ba26:	d1fb      	bne.n	800ba20 <__sccl+0x14>
 800ba28:	1e50      	subs	r0, r2, #1
 800ba2a:	2b00      	cmp	r3, #0
 800ba2c:	d00b      	beq.n	800ba46 <__sccl+0x3a>
 800ba2e:	2001      	movs	r0, #1
 800ba30:	4041      	eors	r1, r0
 800ba32:	54e9      	strb	r1, [r5, r3]
 800ba34:	7814      	ldrb	r4, [r2, #0]
 800ba36:	1c50      	adds	r0, r2, #1
 800ba38:	2c2d      	cmp	r4, #45	; 0x2d
 800ba3a:	d00c      	beq.n	800ba56 <__sccl+0x4a>
 800ba3c:	2c5d      	cmp	r4, #93	; 0x5d
 800ba3e:	d002      	beq.n	800ba46 <__sccl+0x3a>
 800ba40:	2c00      	cmp	r4, #0
 800ba42:	d105      	bne.n	800ba50 <__sccl+0x44>
 800ba44:	0010      	movs	r0, r2
 800ba46:	bd70      	pop	{r4, r5, r6, pc}
 800ba48:	1c8a      	adds	r2, r1, #2
 800ba4a:	784b      	ldrb	r3, [r1, #1]
 800ba4c:	2101      	movs	r1, #1
 800ba4e:	e7e4      	b.n	800ba1a <__sccl+0xe>
 800ba50:	0023      	movs	r3, r4
 800ba52:	0002      	movs	r2, r0
 800ba54:	e7ed      	b.n	800ba32 <__sccl+0x26>
 800ba56:	7856      	ldrb	r6, [r2, #1]
 800ba58:	2e5d      	cmp	r6, #93	; 0x5d
 800ba5a:	d0f9      	beq.n	800ba50 <__sccl+0x44>
 800ba5c:	42b3      	cmp	r3, r6
 800ba5e:	dcf7      	bgt.n	800ba50 <__sccl+0x44>
 800ba60:	3202      	adds	r2, #2
 800ba62:	3301      	adds	r3, #1
 800ba64:	54e9      	strb	r1, [r5, r3]
 800ba66:	429e      	cmp	r6, r3
 800ba68:	dcfb      	bgt.n	800ba62 <__sccl+0x56>
 800ba6a:	e7e3      	b.n	800ba34 <__sccl+0x28>

0800ba6c <__submore>:
 800ba6c:	000b      	movs	r3, r1
 800ba6e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ba70:	6b4d      	ldr	r5, [r1, #52]	; 0x34
 800ba72:	3344      	adds	r3, #68	; 0x44
 800ba74:	000c      	movs	r4, r1
 800ba76:	429d      	cmp	r5, r3
 800ba78:	d11c      	bne.n	800bab4 <__submore+0x48>
 800ba7a:	2680      	movs	r6, #128	; 0x80
 800ba7c:	00f6      	lsls	r6, r6, #3
 800ba7e:	0031      	movs	r1, r6
 800ba80:	f7fb fc7e 	bl	8007380 <_malloc_r>
 800ba84:	2800      	cmp	r0, #0
 800ba86:	d102      	bne.n	800ba8e <__submore+0x22>
 800ba88:	2001      	movs	r0, #1
 800ba8a:	4240      	negs	r0, r0
 800ba8c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800ba8e:	0023      	movs	r3, r4
 800ba90:	6360      	str	r0, [r4, #52]	; 0x34
 800ba92:	63a6      	str	r6, [r4, #56]	; 0x38
 800ba94:	3346      	adds	r3, #70	; 0x46
 800ba96:	781a      	ldrb	r2, [r3, #0]
 800ba98:	4b10      	ldr	r3, [pc, #64]	; (800badc <__submore+0x70>)
 800ba9a:	54c2      	strb	r2, [r0, r3]
 800ba9c:	0023      	movs	r3, r4
 800ba9e:	3345      	adds	r3, #69	; 0x45
 800baa0:	781a      	ldrb	r2, [r3, #0]
 800baa2:	4b0f      	ldr	r3, [pc, #60]	; (800bae0 <__submore+0x74>)
 800baa4:	54c2      	strb	r2, [r0, r3]
 800baa6:	782a      	ldrb	r2, [r5, #0]
 800baa8:	4b0e      	ldr	r3, [pc, #56]	; (800bae4 <__submore+0x78>)
 800baaa:	54c2      	strb	r2, [r0, r3]
 800baac:	18c0      	adds	r0, r0, r3
 800baae:	6020      	str	r0, [r4, #0]
 800bab0:	2000      	movs	r0, #0
 800bab2:	e7eb      	b.n	800ba8c <__submore+0x20>
 800bab4:	6b8e      	ldr	r6, [r1, #56]	; 0x38
 800bab6:	0029      	movs	r1, r5
 800bab8:	0073      	lsls	r3, r6, #1
 800baba:	001a      	movs	r2, r3
 800babc:	9301      	str	r3, [sp, #4]
 800babe:	f7ff fc3a 	bl	800b336 <_realloc_r>
 800bac2:	1e05      	subs	r5, r0, #0
 800bac4:	d0e0      	beq.n	800ba88 <__submore+0x1c>
 800bac6:	1987      	adds	r7, r0, r6
 800bac8:	0001      	movs	r1, r0
 800baca:	0032      	movs	r2, r6
 800bacc:	0038      	movs	r0, r7
 800bace:	f7fb fbfb 	bl	80072c8 <memcpy>
 800bad2:	9b01      	ldr	r3, [sp, #4]
 800bad4:	6027      	str	r7, [r4, #0]
 800bad6:	6365      	str	r5, [r4, #52]	; 0x34
 800bad8:	63a3      	str	r3, [r4, #56]	; 0x38
 800bada:	e7e9      	b.n	800bab0 <__submore+0x44>
 800badc:	000003ff 	.word	0x000003ff
 800bae0:	000003fe 	.word	0x000003fe
 800bae4:	000003fd 	.word	0x000003fd

0800bae8 <_malloc_usable_size_r>:
 800bae8:	1f0b      	subs	r3, r1, #4
 800baea:	681b      	ldr	r3, [r3, #0]
 800baec:	1f18      	subs	r0, r3, #4
 800baee:	2b00      	cmp	r3, #0
 800baf0:	da01      	bge.n	800baf6 <_malloc_usable_size_r+0xe>
 800baf2:	580b      	ldr	r3, [r1, r0]
 800baf4:	18c0      	adds	r0, r0, r3
 800baf6:	4770      	bx	lr

0800baf8 <findslot>:
 800baf8:	4b0a      	ldr	r3, [pc, #40]	; (800bb24 <findslot+0x2c>)
 800bafa:	b510      	push	{r4, lr}
 800bafc:	0004      	movs	r4, r0
 800bafe:	6818      	ldr	r0, [r3, #0]
 800bb00:	2800      	cmp	r0, #0
 800bb02:	d004      	beq.n	800bb0e <findslot+0x16>
 800bb04:	6983      	ldr	r3, [r0, #24]
 800bb06:	2b00      	cmp	r3, #0
 800bb08:	d101      	bne.n	800bb0e <findslot+0x16>
 800bb0a:	f7fe fad9 	bl	800a0c0 <__sinit>
 800bb0e:	2000      	movs	r0, #0
 800bb10:	2c13      	cmp	r4, #19
 800bb12:	d805      	bhi.n	800bb20 <findslot+0x28>
 800bb14:	4b04      	ldr	r3, [pc, #16]	; (800bb28 <findslot+0x30>)
 800bb16:	00e4      	lsls	r4, r4, #3
 800bb18:	58e2      	ldr	r2, [r4, r3]
 800bb1a:	3201      	adds	r2, #1
 800bb1c:	d000      	beq.n	800bb20 <findslot+0x28>
 800bb1e:	18e0      	adds	r0, r4, r3
 800bb20:	bd10      	pop	{r4, pc}
 800bb22:	46c0      	nop			; (mov r8, r8)
 800bb24:	20000020 	.word	0x20000020
 800bb28:	200004cc 	.word	0x200004cc

0800bb2c <checkerror>:
 800bb2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb2e:	0005      	movs	r5, r0
 800bb30:	1c43      	adds	r3, r0, #1
 800bb32:	d109      	bne.n	800bb48 <checkerror+0x1c>
 800bb34:	f7fb fa82 	bl	800703c <__errno>
 800bb38:	2413      	movs	r4, #19
 800bb3a:	0006      	movs	r6, r0
 800bb3c:	2700      	movs	r7, #0
 800bb3e:	1c20      	adds	r0, r4, #0
 800bb40:	1c39      	adds	r1, r7, #0
 800bb42:	beab      	bkpt	0x00ab
 800bb44:	1c04      	adds	r4, r0, #0
 800bb46:	6034      	str	r4, [r6, #0]
 800bb48:	0028      	movs	r0, r5
 800bb4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bb4c <error>:
 800bb4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb4e:	0005      	movs	r5, r0
 800bb50:	f7fb fa74 	bl	800703c <__errno>
 800bb54:	2413      	movs	r4, #19
 800bb56:	0006      	movs	r6, r0
 800bb58:	2700      	movs	r7, #0
 800bb5a:	1c20      	adds	r0, r4, #0
 800bb5c:	1c39      	adds	r1, r7, #0
 800bb5e:	beab      	bkpt	0x00ab
 800bb60:	1c04      	adds	r4, r0, #0
 800bb62:	0028      	movs	r0, r5
 800bb64:	6034      	str	r4, [r6, #0]
 800bb66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bb68 <_swiread>:
 800bb68:	b530      	push	{r4, r5, lr}
 800bb6a:	b085      	sub	sp, #20
 800bb6c:	ad01      	add	r5, sp, #4
 800bb6e:	9001      	str	r0, [sp, #4]
 800bb70:	9102      	str	r1, [sp, #8]
 800bb72:	9203      	str	r2, [sp, #12]
 800bb74:	2406      	movs	r4, #6
 800bb76:	1c20      	adds	r0, r4, #0
 800bb78:	1c29      	adds	r1, r5, #0
 800bb7a:	beab      	bkpt	0x00ab
 800bb7c:	1c04      	adds	r4, r0, #0
 800bb7e:	0020      	movs	r0, r4
 800bb80:	f7ff ffd4 	bl	800bb2c <checkerror>
 800bb84:	b005      	add	sp, #20
 800bb86:	bd30      	pop	{r4, r5, pc}

0800bb88 <_read>:
 800bb88:	b570      	push	{r4, r5, r6, lr}
 800bb8a:	000e      	movs	r6, r1
 800bb8c:	0015      	movs	r5, r2
 800bb8e:	f7ff ffb3 	bl	800baf8 <findslot>
 800bb92:	1e04      	subs	r4, r0, #0
 800bb94:	d106      	bne.n	800bba4 <_read+0x1c>
 800bb96:	f7fb fa51 	bl	800703c <__errno>
 800bb9a:	2309      	movs	r3, #9
 800bb9c:	6003      	str	r3, [r0, #0]
 800bb9e:	2001      	movs	r0, #1
 800bba0:	4240      	negs	r0, r0
 800bba2:	bd70      	pop	{r4, r5, r6, pc}
 800bba4:	002a      	movs	r2, r5
 800bba6:	0031      	movs	r1, r6
 800bba8:	6800      	ldr	r0, [r0, #0]
 800bbaa:	f7ff ffdd 	bl	800bb68 <_swiread>
 800bbae:	1c43      	adds	r3, r0, #1
 800bbb0:	d0f7      	beq.n	800bba2 <_read+0x1a>
 800bbb2:	6863      	ldr	r3, [r4, #4]
 800bbb4:	1a28      	subs	r0, r5, r0
 800bbb6:	181b      	adds	r3, r3, r0
 800bbb8:	6063      	str	r3, [r4, #4]
 800bbba:	e7f2      	b.n	800bba2 <_read+0x1a>

0800bbbc <_swilseek>:
 800bbbc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bbbe:	000c      	movs	r4, r1
 800bbc0:	0016      	movs	r6, r2
 800bbc2:	f7ff ff99 	bl	800baf8 <findslot>
 800bbc6:	1e05      	subs	r5, r0, #0
 800bbc8:	d107      	bne.n	800bbda <_swilseek+0x1e>
 800bbca:	f7fb fa37 	bl	800703c <__errno>
 800bbce:	2309      	movs	r3, #9
 800bbd0:	6003      	str	r3, [r0, #0]
 800bbd2:	2401      	movs	r4, #1
 800bbd4:	4264      	negs	r4, r4
 800bbd6:	0020      	movs	r0, r4
 800bbd8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800bbda:	2e02      	cmp	r6, #2
 800bbdc:	d903      	bls.n	800bbe6 <_swilseek+0x2a>
 800bbde:	f7fb fa2d 	bl	800703c <__errno>
 800bbe2:	2316      	movs	r3, #22
 800bbe4:	e7f4      	b.n	800bbd0 <_swilseek+0x14>
 800bbe6:	2e01      	cmp	r6, #1
 800bbe8:	d112      	bne.n	800bc10 <_swilseek+0x54>
 800bbea:	6843      	ldr	r3, [r0, #4]
 800bbec:	18e4      	adds	r4, r4, r3
 800bbee:	d4f6      	bmi.n	800bbde <_swilseek+0x22>
 800bbf0:	466f      	mov	r7, sp
 800bbf2:	682b      	ldr	r3, [r5, #0]
 800bbf4:	260a      	movs	r6, #10
 800bbf6:	9300      	str	r3, [sp, #0]
 800bbf8:	607c      	str	r4, [r7, #4]
 800bbfa:	1c30      	adds	r0, r6, #0
 800bbfc:	1c39      	adds	r1, r7, #0
 800bbfe:	beab      	bkpt	0x00ab
 800bc00:	1c06      	adds	r6, r0, #0
 800bc02:	0030      	movs	r0, r6
 800bc04:	f7ff ff92 	bl	800bb2c <checkerror>
 800bc08:	2800      	cmp	r0, #0
 800bc0a:	dbe2      	blt.n	800bbd2 <_swilseek+0x16>
 800bc0c:	606c      	str	r4, [r5, #4]
 800bc0e:	e7e2      	b.n	800bbd6 <_swilseek+0x1a>
 800bc10:	2e02      	cmp	r6, #2
 800bc12:	d1ed      	bne.n	800bbf0 <_swilseek+0x34>
 800bc14:	6803      	ldr	r3, [r0, #0]
 800bc16:	466f      	mov	r7, sp
 800bc18:	9300      	str	r3, [sp, #0]
 800bc1a:	360a      	adds	r6, #10
 800bc1c:	1c30      	adds	r0, r6, #0
 800bc1e:	1c39      	adds	r1, r7, #0
 800bc20:	beab      	bkpt	0x00ab
 800bc22:	1c06      	adds	r6, r0, #0
 800bc24:	0030      	movs	r0, r6
 800bc26:	f7ff ff81 	bl	800bb2c <checkerror>
 800bc2a:	1824      	adds	r4, r4, r0
 800bc2c:	1c43      	adds	r3, r0, #1
 800bc2e:	d1df      	bne.n	800bbf0 <_swilseek+0x34>
 800bc30:	e7cf      	b.n	800bbd2 <_swilseek+0x16>

0800bc32 <_lseek>:
 800bc32:	b510      	push	{r4, lr}
 800bc34:	f7ff ffc2 	bl	800bbbc <_swilseek>
 800bc38:	bd10      	pop	{r4, pc}

0800bc3a <_swiwrite>:
 800bc3a:	b530      	push	{r4, r5, lr}
 800bc3c:	b085      	sub	sp, #20
 800bc3e:	ad01      	add	r5, sp, #4
 800bc40:	9001      	str	r0, [sp, #4]
 800bc42:	9102      	str	r1, [sp, #8]
 800bc44:	9203      	str	r2, [sp, #12]
 800bc46:	2405      	movs	r4, #5
 800bc48:	1c20      	adds	r0, r4, #0
 800bc4a:	1c29      	adds	r1, r5, #0
 800bc4c:	beab      	bkpt	0x00ab
 800bc4e:	1c04      	adds	r4, r0, #0
 800bc50:	0020      	movs	r0, r4
 800bc52:	f7ff ff6b 	bl	800bb2c <checkerror>
 800bc56:	b005      	add	sp, #20
 800bc58:	bd30      	pop	{r4, r5, pc}

0800bc5a <_write>:
 800bc5a:	b570      	push	{r4, r5, r6, lr}
 800bc5c:	000e      	movs	r6, r1
 800bc5e:	0015      	movs	r5, r2
 800bc60:	f7ff ff4a 	bl	800baf8 <findslot>
 800bc64:	1e04      	subs	r4, r0, #0
 800bc66:	d106      	bne.n	800bc76 <_write+0x1c>
 800bc68:	f7fb f9e8 	bl	800703c <__errno>
 800bc6c:	2309      	movs	r3, #9
 800bc6e:	6003      	str	r3, [r0, #0]
 800bc70:	2001      	movs	r0, #1
 800bc72:	4240      	negs	r0, r0
 800bc74:	e00f      	b.n	800bc96 <_write+0x3c>
 800bc76:	002a      	movs	r2, r5
 800bc78:	0031      	movs	r1, r6
 800bc7a:	6800      	ldr	r0, [r0, #0]
 800bc7c:	f7ff ffdd 	bl	800bc3a <_swiwrite>
 800bc80:	1e02      	subs	r2, r0, #0
 800bc82:	dbf5      	blt.n	800bc70 <_write+0x16>
 800bc84:	6863      	ldr	r3, [r4, #4]
 800bc86:	1a28      	subs	r0, r5, r0
 800bc88:	1819      	adds	r1, r3, r0
 800bc8a:	6061      	str	r1, [r4, #4]
 800bc8c:	42aa      	cmp	r2, r5
 800bc8e:	d102      	bne.n	800bc96 <_write+0x3c>
 800bc90:	2000      	movs	r0, #0
 800bc92:	f7ff ff5b 	bl	800bb4c <error>
 800bc96:	bd70      	pop	{r4, r5, r6, pc}

0800bc98 <_swiclose>:
 800bc98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bc9a:	2402      	movs	r4, #2
 800bc9c:	9001      	str	r0, [sp, #4]
 800bc9e:	ad01      	add	r5, sp, #4
 800bca0:	1c20      	adds	r0, r4, #0
 800bca2:	1c29      	adds	r1, r5, #0
 800bca4:	beab      	bkpt	0x00ab
 800bca6:	1c04      	adds	r4, r0, #0
 800bca8:	0020      	movs	r0, r4
 800bcaa:	f7ff ff3f 	bl	800bb2c <checkerror>
 800bcae:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800bcb0 <_close>:
 800bcb0:	b570      	push	{r4, r5, r6, lr}
 800bcb2:	0005      	movs	r5, r0
 800bcb4:	f7ff ff20 	bl	800baf8 <findslot>
 800bcb8:	1e04      	subs	r4, r0, #0
 800bcba:	d106      	bne.n	800bcca <_close+0x1a>
 800bcbc:	f7fb f9be 	bl	800703c <__errno>
 800bcc0:	2309      	movs	r3, #9
 800bcc2:	6003      	str	r3, [r0, #0]
 800bcc4:	2001      	movs	r0, #1
 800bcc6:	4240      	negs	r0, r0
 800bcc8:	bd70      	pop	{r4, r5, r6, pc}
 800bcca:	3d01      	subs	r5, #1
 800bccc:	2d01      	cmp	r5, #1
 800bcce:	d809      	bhi.n	800bce4 <_close+0x34>
 800bcd0:	4b09      	ldr	r3, [pc, #36]	; (800bcf8 <_close+0x48>)
 800bcd2:	689a      	ldr	r2, [r3, #8]
 800bcd4:	691b      	ldr	r3, [r3, #16]
 800bcd6:	429a      	cmp	r2, r3
 800bcd8:	d104      	bne.n	800bce4 <_close+0x34>
 800bcda:	2301      	movs	r3, #1
 800bcdc:	425b      	negs	r3, r3
 800bcde:	6003      	str	r3, [r0, #0]
 800bce0:	2000      	movs	r0, #0
 800bce2:	e7f1      	b.n	800bcc8 <_close+0x18>
 800bce4:	6820      	ldr	r0, [r4, #0]
 800bce6:	f7ff ffd7 	bl	800bc98 <_swiclose>
 800bcea:	2800      	cmp	r0, #0
 800bcec:	d1ec      	bne.n	800bcc8 <_close+0x18>
 800bcee:	2301      	movs	r3, #1
 800bcf0:	425b      	negs	r3, r3
 800bcf2:	6023      	str	r3, [r4, #0]
 800bcf4:	e7e8      	b.n	800bcc8 <_close+0x18>
 800bcf6:	46c0      	nop			; (mov r8, r8)
 800bcf8:	200004cc 	.word	0x200004cc

0800bcfc <_swistat>:
 800bcfc:	b570      	push	{r4, r5, r6, lr}
 800bcfe:	000c      	movs	r4, r1
 800bd00:	f7ff fefa 	bl	800baf8 <findslot>
 800bd04:	1e06      	subs	r6, r0, #0
 800bd06:	d106      	bne.n	800bd16 <_swistat+0x1a>
 800bd08:	f7fb f998 	bl	800703c <__errno>
 800bd0c:	2309      	movs	r3, #9
 800bd0e:	6003      	str	r3, [r0, #0]
 800bd10:	2001      	movs	r0, #1
 800bd12:	4240      	negs	r0, r0
 800bd14:	bd70      	pop	{r4, r5, r6, pc}
 800bd16:	2380      	movs	r3, #128	; 0x80
 800bd18:	6862      	ldr	r2, [r4, #4]
 800bd1a:	019b      	lsls	r3, r3, #6
 800bd1c:	4313      	orrs	r3, r2
 800bd1e:	6063      	str	r3, [r4, #4]
 800bd20:	2380      	movs	r3, #128	; 0x80
 800bd22:	00db      	lsls	r3, r3, #3
 800bd24:	6463      	str	r3, [r4, #68]	; 0x44
 800bd26:	250c      	movs	r5, #12
 800bd28:	1c28      	adds	r0, r5, #0
 800bd2a:	1c31      	adds	r1, r6, #0
 800bd2c:	beab      	bkpt	0x00ab
 800bd2e:	1c05      	adds	r5, r0, #0
 800bd30:	0028      	movs	r0, r5
 800bd32:	f7ff fefb 	bl	800bb2c <checkerror>
 800bd36:	1c43      	adds	r3, r0, #1
 800bd38:	d0ec      	beq.n	800bd14 <_swistat+0x18>
 800bd3a:	6120      	str	r0, [r4, #16]
 800bd3c:	2000      	movs	r0, #0
 800bd3e:	e7e9      	b.n	800bd14 <_swistat+0x18>

0800bd40 <_fstat>:
 800bd40:	b570      	push	{r4, r5, r6, lr}
 800bd42:	000c      	movs	r4, r1
 800bd44:	0005      	movs	r5, r0
 800bd46:	2258      	movs	r2, #88	; 0x58
 800bd48:	2100      	movs	r1, #0
 800bd4a:	0020      	movs	r0, r4
 800bd4c:	f7fb fac5 	bl	80072da <memset>
 800bd50:	0028      	movs	r0, r5
 800bd52:	0021      	movs	r1, r4
 800bd54:	f7ff ffd2 	bl	800bcfc <_swistat>
 800bd58:	bd70      	pop	{r4, r5, r6, pc}

0800bd5a <_stat>:
 800bd5a:	b570      	push	{r4, r5, r6, lr}
 800bd5c:	000d      	movs	r5, r1
 800bd5e:	0004      	movs	r4, r0
 800bd60:	2258      	movs	r2, #88	; 0x58
 800bd62:	2100      	movs	r1, #0
 800bd64:	0028      	movs	r0, r5
 800bd66:	f7fb fab8 	bl	80072da <memset>
 800bd6a:	0020      	movs	r0, r4
 800bd6c:	2100      	movs	r1, #0
 800bd6e:	f000 f813 	bl	800bd98 <_swiopen>
 800bd72:	0004      	movs	r4, r0
 800bd74:	1c43      	adds	r3, r0, #1
 800bd76:	d00c      	beq.n	800bd92 <_stat+0x38>
 800bd78:	2381      	movs	r3, #129	; 0x81
 800bd7a:	686a      	ldr	r2, [r5, #4]
 800bd7c:	021b      	lsls	r3, r3, #8
 800bd7e:	4313      	orrs	r3, r2
 800bd80:	606b      	str	r3, [r5, #4]
 800bd82:	0029      	movs	r1, r5
 800bd84:	f7ff ffba 	bl	800bcfc <_swistat>
 800bd88:	0005      	movs	r5, r0
 800bd8a:	0020      	movs	r0, r4
 800bd8c:	f7ff ff90 	bl	800bcb0 <_close>
 800bd90:	002c      	movs	r4, r5
 800bd92:	0020      	movs	r0, r4
 800bd94:	bd70      	pop	{r4, r5, r6, pc}
	...

0800bd98 <_swiopen>:
 800bd98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd9a:	000d      	movs	r5, r1
 800bd9c:	2700      	movs	r7, #0
 800bd9e:	b099      	sub	sp, #100	; 0x64
 800bda0:	9000      	str	r0, [sp, #0]
 800bda2:	00fb      	lsls	r3, r7, #3
 800bda4:	9301      	str	r3, [sp, #4]
 800bda6:	4b29      	ldr	r3, [pc, #164]	; (800be4c <_swiopen+0xb4>)
 800bda8:	00fa      	lsls	r2, r7, #3
 800bdaa:	589c      	ldr	r4, [r3, r2]
 800bdac:	1c63      	adds	r3, r4, #1
 800bdae:	d038      	beq.n	800be22 <_swiopen+0x8a>
 800bdb0:	3701      	adds	r7, #1
 800bdb2:	2f14      	cmp	r7, #20
 800bdb4:	d1f5      	bne.n	800bda2 <_swiopen+0xa>
 800bdb6:	f7fb f941 	bl	800703c <__errno>
 800bdba:	2401      	movs	r4, #1
 800bdbc:	2318      	movs	r3, #24
 800bdbe:	4264      	negs	r4, r4
 800bdc0:	6003      	str	r3, [r0, #0]
 800bdc2:	e03f      	b.n	800be44 <_swiopen+0xac>
 800bdc4:	2302      	movs	r3, #2
 800bdc6:	03ec      	lsls	r4, r5, #15
 800bdc8:	0fe4      	lsrs	r4, r4, #31
 800bdca:	421d      	tst	r5, r3
 800bdcc:	d000      	beq.n	800bdd0 <_swiopen+0x38>
 800bdce:	431c      	orrs	r4, r3
 800bdd0:	4b1f      	ldr	r3, [pc, #124]	; (800be50 <_swiopen+0xb8>)
 800bdd2:	421d      	tst	r5, r3
 800bdd4:	d001      	beq.n	800bdda <_swiopen+0x42>
 800bdd6:	2304      	movs	r3, #4
 800bdd8:	431c      	orrs	r4, r3
 800bdda:	2308      	movs	r3, #8
 800bddc:	421d      	tst	r5, r3
 800bdde:	d002      	beq.n	800bde6 <_swiopen+0x4e>
 800bde0:	2204      	movs	r2, #4
 800bde2:	4394      	bics	r4, r2
 800bde4:	431c      	orrs	r4, r3
 800bde6:	9b00      	ldr	r3, [sp, #0]
 800bde8:	0018      	movs	r0, r3
 800bdea:	9302      	str	r3, [sp, #8]
 800bdec:	f7f4 f98c 	bl	8000108 <strlen>
 800bdf0:	6074      	str	r4, [r6, #4]
 800bdf2:	60b0      	str	r0, [r6, #8]
 800bdf4:	2401      	movs	r4, #1
 800bdf6:	1c20      	adds	r0, r4, #0
 800bdf8:	1c31      	adds	r1, r6, #0
 800bdfa:	beab      	bkpt	0x00ab
 800bdfc:	1c06      	adds	r6, r0, #0
 800bdfe:	2e00      	cmp	r6, #0
 800be00:	db0a      	blt.n	800be18 <_swiopen+0x80>
 800be02:	4b12      	ldr	r3, [pc, #72]	; (800be4c <_swiopen+0xb4>)
 800be04:	00fa      	lsls	r2, r7, #3
 800be06:	509e      	str	r6, [r3, r2]
 800be08:	0013      	movs	r3, r2
 800be0a:	4a10      	ldr	r2, [pc, #64]	; (800be4c <_swiopen+0xb4>)
 800be0c:	003c      	movs	r4, r7
 800be0e:	4694      	mov	ip, r2
 800be10:	2200      	movs	r2, #0
 800be12:	4463      	add	r3, ip
 800be14:	605a      	str	r2, [r3, #4]
 800be16:	e015      	b.n	800be44 <_swiopen+0xac>
 800be18:	0030      	movs	r0, r6
 800be1a:	f7ff fe97 	bl	800bb4c <error>
 800be1e:	0004      	movs	r4, r0
 800be20:	e010      	b.n	800be44 <_swiopen+0xac>
 800be22:	23a0      	movs	r3, #160	; 0xa0
 800be24:	002a      	movs	r2, r5
 800be26:	011b      	lsls	r3, r3, #4
 800be28:	401a      	ands	r2, r3
 800be2a:	ae02      	add	r6, sp, #8
 800be2c:	429a      	cmp	r2, r3
 800be2e:	d1c9      	bne.n	800bdc4 <_swiopen+0x2c>
 800be30:	0031      	movs	r1, r6
 800be32:	9800      	ldr	r0, [sp, #0]
 800be34:	f7ff ff91 	bl	800bd5a <_stat>
 800be38:	1c43      	adds	r3, r0, #1
 800be3a:	d0c3      	beq.n	800bdc4 <_swiopen+0x2c>
 800be3c:	f7fb f8fe 	bl	800703c <__errno>
 800be40:	2311      	movs	r3, #17
 800be42:	6003      	str	r3, [r0, #0]
 800be44:	0020      	movs	r0, r4
 800be46:	b019      	add	sp, #100	; 0x64
 800be48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800be4a:	46c0      	nop			; (mov r8, r8)
 800be4c:	200004cc 	.word	0x200004cc
 800be50:	00000601 	.word	0x00000601

0800be54 <_get_semihosting_exts>:
 800be54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be56:	b085      	sub	sp, #20
 800be58:	9000      	str	r0, [sp, #0]
 800be5a:	9101      	str	r1, [sp, #4]
 800be5c:	4827      	ldr	r0, [pc, #156]	; (800befc <_get_semihosting_exts+0xa8>)
 800be5e:	2100      	movs	r1, #0
 800be60:	0015      	movs	r5, r2
 800be62:	f7ff ff99 	bl	800bd98 <_swiopen>
 800be66:	0004      	movs	r4, r0
 800be68:	002a      	movs	r2, r5
 800be6a:	2100      	movs	r1, #0
 800be6c:	9800      	ldr	r0, [sp, #0]
 800be6e:	f7fb fa34 	bl	80072da <memset>
 800be72:	1c63      	adds	r3, r4, #1
 800be74:	d015      	beq.n	800bea2 <_get_semihosting_exts+0x4e>
 800be76:	0020      	movs	r0, r4
 800be78:	f7ff fe3e 	bl	800baf8 <findslot>
 800be7c:	260c      	movs	r6, #12
 800be7e:	0007      	movs	r7, r0
 800be80:	1c30      	adds	r0, r6, #0
 800be82:	1c39      	adds	r1, r7, #0
 800be84:	beab      	bkpt	0x00ab
 800be86:	1c06      	adds	r6, r0, #0
 800be88:	0030      	movs	r0, r6
 800be8a:	f7ff fe4f 	bl	800bb2c <checkerror>
 800be8e:	2803      	cmp	r0, #3
 800be90:	dd02      	ble.n	800be98 <_get_semihosting_exts+0x44>
 800be92:	3803      	subs	r0, #3
 800be94:	42a8      	cmp	r0, r5
 800be96:	dc07      	bgt.n	800bea8 <_get_semihosting_exts+0x54>
 800be98:	0020      	movs	r0, r4
 800be9a:	2401      	movs	r4, #1
 800be9c:	f7ff ff08 	bl	800bcb0 <_close>
 800bea0:	4264      	negs	r4, r4
 800bea2:	0020      	movs	r0, r4
 800bea4:	b005      	add	sp, #20
 800bea6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bea8:	ae03      	add	r6, sp, #12
 800beaa:	2204      	movs	r2, #4
 800beac:	0031      	movs	r1, r6
 800beae:	0020      	movs	r0, r4
 800beb0:	f7ff fe6a 	bl	800bb88 <_read>
 800beb4:	2803      	cmp	r0, #3
 800beb6:	ddef      	ble.n	800be98 <_get_semihosting_exts+0x44>
 800beb8:	7833      	ldrb	r3, [r6, #0]
 800beba:	2b53      	cmp	r3, #83	; 0x53
 800bebc:	d1ec      	bne.n	800be98 <_get_semihosting_exts+0x44>
 800bebe:	7873      	ldrb	r3, [r6, #1]
 800bec0:	2b48      	cmp	r3, #72	; 0x48
 800bec2:	d1e9      	bne.n	800be98 <_get_semihosting_exts+0x44>
 800bec4:	78b3      	ldrb	r3, [r6, #2]
 800bec6:	2b46      	cmp	r3, #70	; 0x46
 800bec8:	d1e6      	bne.n	800be98 <_get_semihosting_exts+0x44>
 800beca:	78f3      	ldrb	r3, [r6, #3]
 800becc:	2b42      	cmp	r3, #66	; 0x42
 800bece:	d1e3      	bne.n	800be98 <_get_semihosting_exts+0x44>
 800bed0:	2201      	movs	r2, #1
 800bed2:	9901      	ldr	r1, [sp, #4]
 800bed4:	0020      	movs	r0, r4
 800bed6:	f7ff fe71 	bl	800bbbc <_swilseek>
 800beda:	2800      	cmp	r0, #0
 800bedc:	dbdc      	blt.n	800be98 <_get_semihosting_exts+0x44>
 800bede:	002a      	movs	r2, r5
 800bee0:	9900      	ldr	r1, [sp, #0]
 800bee2:	0020      	movs	r0, r4
 800bee4:	f7ff fe50 	bl	800bb88 <_read>
 800bee8:	0005      	movs	r5, r0
 800beea:	0020      	movs	r0, r4
 800beec:	f7ff fee0 	bl	800bcb0 <_close>
 800bef0:	0028      	movs	r0, r5
 800bef2:	f7ff fe1b 	bl	800bb2c <checkerror>
 800bef6:	0004      	movs	r4, r0
 800bef8:	e7d3      	b.n	800bea2 <_get_semihosting_exts+0x4e>
 800befa:	46c0      	nop			; (mov r8, r8)
 800befc:	0800db39 	.word	0x0800db39

0800bf00 <initialise_semihosting_exts>:
 800bf00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bf02:	2401      	movs	r4, #1
 800bf04:	2100      	movs	r1, #0
 800bf06:	4e09      	ldr	r6, [pc, #36]	; (800bf2c <initialise_semihosting_exts+0x2c>)
 800bf08:	4d09      	ldr	r5, [pc, #36]	; (800bf30 <initialise_semihosting_exts+0x30>)
 800bf0a:	af01      	add	r7, sp, #4
 800bf0c:	0022      	movs	r2, r4
 800bf0e:	0038      	movs	r0, r7
 800bf10:	6031      	str	r1, [r6, #0]
 800bf12:	602c      	str	r4, [r5, #0]
 800bf14:	f7ff ff9e 	bl	800be54 <_get_semihosting_exts>
 800bf18:	2800      	cmp	r0, #0
 800bf1a:	dd05      	ble.n	800bf28 <initialise_semihosting_exts+0x28>
 800bf1c:	2202      	movs	r2, #2
 800bf1e:	783b      	ldrb	r3, [r7, #0]
 800bf20:	401c      	ands	r4, r3
 800bf22:	4013      	ands	r3, r2
 800bf24:	6034      	str	r4, [r6, #0]
 800bf26:	602b      	str	r3, [r5, #0]
 800bf28:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800bf2a:	46c0      	nop			; (mov r8, r8)
 800bf2c:	20000258 	.word	0x20000258
 800bf30:	2000025c 	.word	0x2000025c

0800bf34 <_has_ext_stdout_stderr>:
 800bf34:	b510      	push	{r4, lr}
 800bf36:	4c04      	ldr	r4, [pc, #16]	; (800bf48 <_has_ext_stdout_stderr+0x14>)
 800bf38:	6823      	ldr	r3, [r4, #0]
 800bf3a:	2b00      	cmp	r3, #0
 800bf3c:	da01      	bge.n	800bf42 <_has_ext_stdout_stderr+0xe>
 800bf3e:	f7ff ffdf 	bl	800bf00 <initialise_semihosting_exts>
 800bf42:	6820      	ldr	r0, [r4, #0]
 800bf44:	bd10      	pop	{r4, pc}
 800bf46:	46c0      	nop			; (mov r8, r8)
 800bf48:	2000025c 	.word	0x2000025c

0800bf4c <initialise_monitor_handles>:
 800bf4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf4e:	4b27      	ldr	r3, [pc, #156]	; (800bfec <initialise_monitor_handles+0xa0>)
 800bf50:	b085      	sub	sp, #20
 800bf52:	9301      	str	r3, [sp, #4]
 800bf54:	2500      	movs	r5, #0
 800bf56:	2303      	movs	r3, #3
 800bf58:	ac01      	add	r4, sp, #4
 800bf5a:	60a3      	str	r3, [r4, #8]
 800bf5c:	2701      	movs	r7, #1
 800bf5e:	6065      	str	r5, [r4, #4]
 800bf60:	1c38      	adds	r0, r7, #0
 800bf62:	1c21      	adds	r1, r4, #0
 800bf64:	beab      	bkpt	0x00ab
 800bf66:	1c07      	adds	r7, r0, #0
 800bf68:	2101      	movs	r1, #1
 800bf6a:	4b21      	ldr	r3, [pc, #132]	; (800bff0 <initialise_monitor_handles+0xa4>)
 800bf6c:	4249      	negs	r1, r1
 800bf6e:	601f      	str	r7, [r3, #0]
 800bf70:	002b      	movs	r3, r5
 800bf72:	4d20      	ldr	r5, [pc, #128]	; (800bff4 <initialise_monitor_handles+0xa8>)
 800bf74:	00da      	lsls	r2, r3, #3
 800bf76:	3301      	adds	r3, #1
 800bf78:	50a9      	str	r1, [r5, r2]
 800bf7a:	2b14      	cmp	r3, #20
 800bf7c:	d1fa      	bne.n	800bf74 <initialise_monitor_handles+0x28>
 800bf7e:	f7ff ffd9 	bl	800bf34 <_has_ext_stdout_stderr>
 800bf82:	2800      	cmp	r0, #0
 800bf84:	d018      	beq.n	800bfb8 <initialise_monitor_handles+0x6c>
 800bf86:	4b19      	ldr	r3, [pc, #100]	; (800bfec <initialise_monitor_handles+0xa0>)
 800bf88:	2701      	movs	r7, #1
 800bf8a:	9301      	str	r3, [sp, #4]
 800bf8c:	2303      	movs	r3, #3
 800bf8e:	60a3      	str	r3, [r4, #8]
 800bf90:	3301      	adds	r3, #1
 800bf92:	6063      	str	r3, [r4, #4]
 800bf94:	1c38      	adds	r0, r7, #0
 800bf96:	1c21      	adds	r1, r4, #0
 800bf98:	beab      	bkpt	0x00ab
 800bf9a:	1c06      	adds	r6, r0, #0
 800bf9c:	4b16      	ldr	r3, [pc, #88]	; (800bff8 <initialise_monitor_handles+0xac>)
 800bf9e:	4a13      	ldr	r2, [pc, #76]	; (800bfec <initialise_monitor_handles+0xa0>)
 800bfa0:	601e      	str	r6, [r3, #0]
 800bfa2:	2303      	movs	r3, #3
 800bfa4:	9201      	str	r2, [sp, #4]
 800bfa6:	60a3      	str	r3, [r4, #8]
 800bfa8:	3305      	adds	r3, #5
 800bfaa:	6063      	str	r3, [r4, #4]
 800bfac:	1c38      	adds	r0, r7, #0
 800bfae:	1c21      	adds	r1, r4, #0
 800bfb0:	beab      	bkpt	0x00ab
 800bfb2:	1c04      	adds	r4, r0, #0
 800bfb4:	4b11      	ldr	r3, [pc, #68]	; (800bffc <initialise_monitor_handles+0xb0>)
 800bfb6:	601c      	str	r4, [r3, #0]
 800bfb8:	4f10      	ldr	r7, [pc, #64]	; (800bffc <initialise_monitor_handles+0xb0>)
 800bfba:	683b      	ldr	r3, [r7, #0]
 800bfbc:	3301      	adds	r3, #1
 800bfbe:	d102      	bne.n	800bfc6 <initialise_monitor_handles+0x7a>
 800bfc0:	4b0d      	ldr	r3, [pc, #52]	; (800bff8 <initialise_monitor_handles+0xac>)
 800bfc2:	681b      	ldr	r3, [r3, #0]
 800bfc4:	603b      	str	r3, [r7, #0]
 800bfc6:	2400      	movs	r4, #0
 800bfc8:	4b09      	ldr	r3, [pc, #36]	; (800bff0 <initialise_monitor_handles+0xa4>)
 800bfca:	606c      	str	r4, [r5, #4]
 800bfcc:	681b      	ldr	r3, [r3, #0]
 800bfce:	602b      	str	r3, [r5, #0]
 800bfd0:	f7ff ffb0 	bl	800bf34 <_has_ext_stdout_stderr>
 800bfd4:	42a0      	cmp	r0, r4
 800bfd6:	d006      	beq.n	800bfe6 <initialise_monitor_handles+0x9a>
 800bfd8:	4b07      	ldr	r3, [pc, #28]	; (800bff8 <initialise_monitor_handles+0xac>)
 800bfda:	60ec      	str	r4, [r5, #12]
 800bfdc:	681b      	ldr	r3, [r3, #0]
 800bfde:	616c      	str	r4, [r5, #20]
 800bfe0:	60ab      	str	r3, [r5, #8]
 800bfe2:	683b      	ldr	r3, [r7, #0]
 800bfe4:	612b      	str	r3, [r5, #16]
 800bfe6:	b005      	add	sp, #20
 800bfe8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bfea:	46c0      	nop			; (mov r8, r8)
 800bfec:	0800db4f 	.word	0x0800db4f
 800bff0:	200004c4 	.word	0x200004c4
 800bff4:	200004cc 	.word	0x200004cc
 800bff8:	200004c8 	.word	0x200004c8
 800bffc:	200004c0 	.word	0x200004c0

0800c000 <_gettimeofday>:
 800c000:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c002:	0005      	movs	r5, r0
 800c004:	000e      	movs	r6, r1
 800c006:	2800      	cmp	r0, #0
 800c008:	d009      	beq.n	800c01e <_gettimeofday+0x1e>
 800c00a:	2700      	movs	r7, #0
 800c00c:	2411      	movs	r4, #17
 800c00e:	1c20      	adds	r0, r4, #0
 800c010:	1c39      	adds	r1, r7, #0
 800c012:	beab      	bkpt	0x00ab
 800c014:	1c04      	adds	r4, r0, #0
 800c016:	602c      	str	r4, [r5, #0]
 800c018:	17e4      	asrs	r4, r4, #31
 800c01a:	606c      	str	r4, [r5, #4]
 800c01c:	60af      	str	r7, [r5, #8]
 800c01e:	2e00      	cmp	r6, #0
 800c020:	d002      	beq.n	800c028 <_gettimeofday+0x28>
 800c022:	2300      	movs	r3, #0
 800c024:	6033      	str	r3, [r6, #0]
 800c026:	6073      	str	r3, [r6, #4]
 800c028:	2000      	movs	r0, #0
 800c02a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c02c <_isatty>:
 800c02c:	b570      	push	{r4, r5, r6, lr}
 800c02e:	f7ff fd63 	bl	800baf8 <findslot>
 800c032:	2509      	movs	r5, #9
 800c034:	1e04      	subs	r4, r0, #0
 800c036:	d104      	bne.n	800c042 <_isatty+0x16>
 800c038:	f7fb f800 	bl	800703c <__errno>
 800c03c:	6005      	str	r5, [r0, #0]
 800c03e:	0020      	movs	r0, r4
 800c040:	bd70      	pop	{r4, r5, r6, pc}
 800c042:	1c28      	adds	r0, r5, #0
 800c044:	1c21      	adds	r1, r4, #0
 800c046:	beab      	bkpt	0x00ab
 800c048:	1c04      	adds	r4, r0, #0
 800c04a:	0020      	movs	r0, r4
 800c04c:	2c01      	cmp	r4, #1
 800c04e:	d0f7      	beq.n	800c040 <_isatty+0x14>
 800c050:	f7fa fff4 	bl	800703c <__errno>
 800c054:	2400      	movs	r4, #0
 800c056:	0006      	movs	r6, r0
 800c058:	2513      	movs	r5, #19
 800c05a:	1c28      	adds	r0, r5, #0
 800c05c:	1c21      	adds	r1, r4, #0
 800c05e:	beab      	bkpt	0x00ab
 800c060:	1c05      	adds	r5, r0, #0
 800c062:	6035      	str	r5, [r6, #0]
 800c064:	e7eb      	b.n	800c03e <_isatty+0x12>
	...

0800c068 <floorf>:
 800c068:	b570      	push	{r4, r5, r6, lr}
 800c06a:	0045      	lsls	r5, r0, #1
 800c06c:	086e      	lsrs	r6, r5, #1
 800c06e:	0e2d      	lsrs	r5, r5, #24
 800c070:	3d7f      	subs	r5, #127	; 0x7f
 800c072:	0004      	movs	r4, r0
 800c074:	2d16      	cmp	r5, #22
 800c076:	dc24      	bgt.n	800c0c2 <floorf+0x5a>
 800c078:	2d00      	cmp	r5, #0
 800c07a:	da0e      	bge.n	800c09a <floorf+0x32>
 800c07c:	4915      	ldr	r1, [pc, #84]	; (800c0d4 <floorf+0x6c>)
 800c07e:	f7f4 faf7 	bl	8000670 <__aeabi_fadd>
 800c082:	2100      	movs	r1, #0
 800c084:	f7f4 fa40 	bl	8000508 <__aeabi_fcmpgt>
 800c088:	2800      	cmp	r0, #0
 800c08a:	d004      	beq.n	800c096 <floorf+0x2e>
 800c08c:	2c00      	cmp	r4, #0
 800c08e:	da1f      	bge.n	800c0d0 <floorf+0x68>
 800c090:	2e00      	cmp	r6, #0
 800c092:	d000      	beq.n	800c096 <floorf+0x2e>
 800c094:	4c10      	ldr	r4, [pc, #64]	; (800c0d8 <floorf+0x70>)
 800c096:	1c20      	adds	r0, r4, #0
 800c098:	e019      	b.n	800c0ce <floorf+0x66>
 800c09a:	4e10      	ldr	r6, [pc, #64]	; (800c0dc <floorf+0x74>)
 800c09c:	412e      	asrs	r6, r5
 800c09e:	4206      	tst	r6, r0
 800c0a0:	d015      	beq.n	800c0ce <floorf+0x66>
 800c0a2:	490c      	ldr	r1, [pc, #48]	; (800c0d4 <floorf+0x6c>)
 800c0a4:	f7f4 fae4 	bl	8000670 <__aeabi_fadd>
 800c0a8:	2100      	movs	r1, #0
 800c0aa:	f7f4 fa2d 	bl	8000508 <__aeabi_fcmpgt>
 800c0ae:	2800      	cmp	r0, #0
 800c0b0:	d0f1      	beq.n	800c096 <floorf+0x2e>
 800c0b2:	2c00      	cmp	r4, #0
 800c0b4:	da03      	bge.n	800c0be <floorf+0x56>
 800c0b6:	2380      	movs	r3, #128	; 0x80
 800c0b8:	041b      	lsls	r3, r3, #16
 800c0ba:	412b      	asrs	r3, r5
 800c0bc:	18e4      	adds	r4, r4, r3
 800c0be:	43b4      	bics	r4, r6
 800c0c0:	e7e9      	b.n	800c096 <floorf+0x2e>
 800c0c2:	4b07      	ldr	r3, [pc, #28]	; (800c0e0 <floorf+0x78>)
 800c0c4:	429e      	cmp	r6, r3
 800c0c6:	d902      	bls.n	800c0ce <floorf+0x66>
 800c0c8:	1c01      	adds	r1, r0, #0
 800c0ca:	f7f4 fad1 	bl	8000670 <__aeabi_fadd>
 800c0ce:	bd70      	pop	{r4, r5, r6, pc}
 800c0d0:	2400      	movs	r4, #0
 800c0d2:	e7e0      	b.n	800c096 <floorf+0x2e>
 800c0d4:	7149f2ca 	.word	0x7149f2ca
 800c0d8:	bf800000 	.word	0xbf800000
 800c0dc:	007fffff 	.word	0x007fffff
 800c0e0:	7f7fffff 	.word	0x7f7fffff

0800c0e4 <roundf>:
 800c0e4:	0dc3      	lsrs	r3, r0, #23
 800c0e6:	b2db      	uxtb	r3, r3
 800c0e8:	3b7f      	subs	r3, #127	; 0x7f
 800c0ea:	b510      	push	{r4, lr}
 800c0ec:	0002      	movs	r2, r0
 800c0ee:	2b16      	cmp	r3, #22
 800c0f0:	dc13      	bgt.n	800c11a <roundf+0x36>
 800c0f2:	2b00      	cmp	r3, #0
 800c0f4:	da07      	bge.n	800c106 <roundf+0x22>
 800c0f6:	0fc0      	lsrs	r0, r0, #31
 800c0f8:	07c0      	lsls	r0, r0, #31
 800c0fa:	3301      	adds	r3, #1
 800c0fc:	d102      	bne.n	800c104 <roundf+0x20>
 800c0fe:	23fe      	movs	r3, #254	; 0xfe
 800c100:	059b      	lsls	r3, r3, #22
 800c102:	4318      	orrs	r0, r3
 800c104:	bd10      	pop	{r4, pc}
 800c106:	4908      	ldr	r1, [pc, #32]	; (800c128 <roundf+0x44>)
 800c108:	4119      	asrs	r1, r3
 800c10a:	4201      	tst	r1, r0
 800c10c:	d0fa      	beq.n	800c104 <roundf+0x20>
 800c10e:	2080      	movs	r0, #128	; 0x80
 800c110:	03c0      	lsls	r0, r0, #15
 800c112:	4118      	asrs	r0, r3
 800c114:	1880      	adds	r0, r0, r2
 800c116:	4388      	bics	r0, r1
 800c118:	e7f4      	b.n	800c104 <roundf+0x20>
 800c11a:	2b80      	cmp	r3, #128	; 0x80
 800c11c:	d1f2      	bne.n	800c104 <roundf+0x20>
 800c11e:	1c01      	adds	r1, r0, #0
 800c120:	f7f4 faa6 	bl	8000670 <__aeabi_fadd>
 800c124:	e7ee      	b.n	800c104 <roundf+0x20>
 800c126:	46c0      	nop			; (mov r8, r8)
 800c128:	007fffff 	.word	0x007fffff

0800c12c <_init>:
 800c12c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c12e:	46c0      	nop			; (mov r8, r8)
 800c130:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c132:	bc08      	pop	{r3}
 800c134:	469e      	mov	lr, r3
 800c136:	4770      	bx	lr

0800c138 <_fini>:
 800c138:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c13a:	46c0      	nop			; (mov r8, r8)
 800c13c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c13e:	bc08      	pop	{r3}
 800c140:	469e      	mov	lr, r3
 800c142:	4770      	bx	lr
