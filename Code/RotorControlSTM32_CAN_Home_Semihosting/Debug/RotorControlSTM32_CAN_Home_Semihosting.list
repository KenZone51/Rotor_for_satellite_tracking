
RotorControlSTM32_CAN_Home_Semihosting.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000865c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000011b0  08008720  08008720  00018720  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080098d0  080098d0  000201f0  2**0
                  CONTENTS
  4 .ARM          00000000  080098d0  080098d0  000201f0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080098d0  080098d0  000201f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080098d0  080098d0  000198d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080098d4  080098d4  000198d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f0  20000000  080098d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000284  200001f0  08009ac8  000201f0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000474  08009ac8  00020474  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201f0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001f96  00000000  00000000  00020218  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000004b4  00000000  00000000  000221ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000e8  00000000  00000000  00022668  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000c0  00000000  00000000  00022750  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000e0da  00000000  00000000  00022810  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001043  00000000  00000000  000308ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0004614c  00000000  00000000  0003192d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00077a79  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000018dc  00000000  00000000  00077af4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001f0 	.word	0x200001f0
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08008704 	.word	0x08008704

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001f4 	.word	0x200001f4
 8000104:	08008704 	.word	0x08008704

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__udivsi3>:
 800012c:	2200      	movs	r2, #0
 800012e:	0843      	lsrs	r3, r0, #1
 8000130:	428b      	cmp	r3, r1
 8000132:	d374      	bcc.n	800021e <__udivsi3+0xf2>
 8000134:	0903      	lsrs	r3, r0, #4
 8000136:	428b      	cmp	r3, r1
 8000138:	d35f      	bcc.n	80001fa <__udivsi3+0xce>
 800013a:	0a03      	lsrs	r3, r0, #8
 800013c:	428b      	cmp	r3, r1
 800013e:	d344      	bcc.n	80001ca <__udivsi3+0x9e>
 8000140:	0b03      	lsrs	r3, r0, #12
 8000142:	428b      	cmp	r3, r1
 8000144:	d328      	bcc.n	8000198 <__udivsi3+0x6c>
 8000146:	0c03      	lsrs	r3, r0, #16
 8000148:	428b      	cmp	r3, r1
 800014a:	d30d      	bcc.n	8000168 <__udivsi3+0x3c>
 800014c:	22ff      	movs	r2, #255	; 0xff
 800014e:	0209      	lsls	r1, r1, #8
 8000150:	ba12      	rev	r2, r2
 8000152:	0c03      	lsrs	r3, r0, #16
 8000154:	428b      	cmp	r3, r1
 8000156:	d302      	bcc.n	800015e <__udivsi3+0x32>
 8000158:	1212      	asrs	r2, r2, #8
 800015a:	0209      	lsls	r1, r1, #8
 800015c:	d065      	beq.n	800022a <__udivsi3+0xfe>
 800015e:	0b03      	lsrs	r3, r0, #12
 8000160:	428b      	cmp	r3, r1
 8000162:	d319      	bcc.n	8000198 <__udivsi3+0x6c>
 8000164:	e000      	b.n	8000168 <__udivsi3+0x3c>
 8000166:	0a09      	lsrs	r1, r1, #8
 8000168:	0bc3      	lsrs	r3, r0, #15
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x46>
 800016e:	03cb      	lsls	r3, r1, #15
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0b83      	lsrs	r3, r0, #14
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x52>
 800017a:	038b      	lsls	r3, r1, #14
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0b43      	lsrs	r3, r0, #13
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x5e>
 8000186:	034b      	lsls	r3, r1, #13
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0b03      	lsrs	r3, r0, #12
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x6a>
 8000192:	030b      	lsls	r3, r1, #12
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0ac3      	lsrs	r3, r0, #11
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x76>
 800019e:	02cb      	lsls	r3, r1, #11
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	0a83      	lsrs	r3, r0, #10
 80001a6:	428b      	cmp	r3, r1
 80001a8:	d301      	bcc.n	80001ae <__udivsi3+0x82>
 80001aa:	028b      	lsls	r3, r1, #10
 80001ac:	1ac0      	subs	r0, r0, r3
 80001ae:	4152      	adcs	r2, r2
 80001b0:	0a43      	lsrs	r3, r0, #9
 80001b2:	428b      	cmp	r3, r1
 80001b4:	d301      	bcc.n	80001ba <__udivsi3+0x8e>
 80001b6:	024b      	lsls	r3, r1, #9
 80001b8:	1ac0      	subs	r0, r0, r3
 80001ba:	4152      	adcs	r2, r2
 80001bc:	0a03      	lsrs	r3, r0, #8
 80001be:	428b      	cmp	r3, r1
 80001c0:	d301      	bcc.n	80001c6 <__udivsi3+0x9a>
 80001c2:	020b      	lsls	r3, r1, #8
 80001c4:	1ac0      	subs	r0, r0, r3
 80001c6:	4152      	adcs	r2, r2
 80001c8:	d2cd      	bcs.n	8000166 <__udivsi3+0x3a>
 80001ca:	09c3      	lsrs	r3, r0, #7
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xa8>
 80001d0:	01cb      	lsls	r3, r1, #7
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0983      	lsrs	r3, r0, #6
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xb4>
 80001dc:	018b      	lsls	r3, r1, #6
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0943      	lsrs	r3, r0, #5
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xc0>
 80001e8:	014b      	lsls	r3, r1, #5
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0903      	lsrs	r3, r0, #4
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xcc>
 80001f4:	010b      	lsls	r3, r1, #4
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	08c3      	lsrs	r3, r0, #3
 80001fc:	428b      	cmp	r3, r1
 80001fe:	d301      	bcc.n	8000204 <__udivsi3+0xd8>
 8000200:	00cb      	lsls	r3, r1, #3
 8000202:	1ac0      	subs	r0, r0, r3
 8000204:	4152      	adcs	r2, r2
 8000206:	0883      	lsrs	r3, r0, #2
 8000208:	428b      	cmp	r3, r1
 800020a:	d301      	bcc.n	8000210 <__udivsi3+0xe4>
 800020c:	008b      	lsls	r3, r1, #2
 800020e:	1ac0      	subs	r0, r0, r3
 8000210:	4152      	adcs	r2, r2
 8000212:	0843      	lsrs	r3, r0, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d301      	bcc.n	800021c <__udivsi3+0xf0>
 8000218:	004b      	lsls	r3, r1, #1
 800021a:	1ac0      	subs	r0, r0, r3
 800021c:	4152      	adcs	r2, r2
 800021e:	1a41      	subs	r1, r0, r1
 8000220:	d200      	bcs.n	8000224 <__udivsi3+0xf8>
 8000222:	4601      	mov	r1, r0
 8000224:	4152      	adcs	r2, r2
 8000226:	4610      	mov	r0, r2
 8000228:	4770      	bx	lr
 800022a:	e7ff      	b.n	800022c <__udivsi3+0x100>
 800022c:	b501      	push	{r0, lr}
 800022e:	2000      	movs	r0, #0
 8000230:	f000 f8f0 	bl	8000414 <__aeabi_idiv0>
 8000234:	bd02      	pop	{r1, pc}
 8000236:	46c0      	nop			; (mov r8, r8)

08000238 <__aeabi_uidivmod>:
 8000238:	2900      	cmp	r1, #0
 800023a:	d0f7      	beq.n	800022c <__udivsi3+0x100>
 800023c:	e776      	b.n	800012c <__udivsi3>
 800023e:	4770      	bx	lr

08000240 <__divsi3>:
 8000240:	4603      	mov	r3, r0
 8000242:	430b      	orrs	r3, r1
 8000244:	d47f      	bmi.n	8000346 <__divsi3+0x106>
 8000246:	2200      	movs	r2, #0
 8000248:	0843      	lsrs	r3, r0, #1
 800024a:	428b      	cmp	r3, r1
 800024c:	d374      	bcc.n	8000338 <__divsi3+0xf8>
 800024e:	0903      	lsrs	r3, r0, #4
 8000250:	428b      	cmp	r3, r1
 8000252:	d35f      	bcc.n	8000314 <__divsi3+0xd4>
 8000254:	0a03      	lsrs	r3, r0, #8
 8000256:	428b      	cmp	r3, r1
 8000258:	d344      	bcc.n	80002e4 <__divsi3+0xa4>
 800025a:	0b03      	lsrs	r3, r0, #12
 800025c:	428b      	cmp	r3, r1
 800025e:	d328      	bcc.n	80002b2 <__divsi3+0x72>
 8000260:	0c03      	lsrs	r3, r0, #16
 8000262:	428b      	cmp	r3, r1
 8000264:	d30d      	bcc.n	8000282 <__divsi3+0x42>
 8000266:	22ff      	movs	r2, #255	; 0xff
 8000268:	0209      	lsls	r1, r1, #8
 800026a:	ba12      	rev	r2, r2
 800026c:	0c03      	lsrs	r3, r0, #16
 800026e:	428b      	cmp	r3, r1
 8000270:	d302      	bcc.n	8000278 <__divsi3+0x38>
 8000272:	1212      	asrs	r2, r2, #8
 8000274:	0209      	lsls	r1, r1, #8
 8000276:	d065      	beq.n	8000344 <__divsi3+0x104>
 8000278:	0b03      	lsrs	r3, r0, #12
 800027a:	428b      	cmp	r3, r1
 800027c:	d319      	bcc.n	80002b2 <__divsi3+0x72>
 800027e:	e000      	b.n	8000282 <__divsi3+0x42>
 8000280:	0a09      	lsrs	r1, r1, #8
 8000282:	0bc3      	lsrs	r3, r0, #15
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x4c>
 8000288:	03cb      	lsls	r3, r1, #15
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0b83      	lsrs	r3, r0, #14
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x58>
 8000294:	038b      	lsls	r3, r1, #14
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0b43      	lsrs	r3, r0, #13
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x64>
 80002a0:	034b      	lsls	r3, r1, #13
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0b03      	lsrs	r3, r0, #12
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x70>
 80002ac:	030b      	lsls	r3, r1, #12
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0ac3      	lsrs	r3, r0, #11
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0x7c>
 80002b8:	02cb      	lsls	r3, r1, #11
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	0a83      	lsrs	r3, r0, #10
 80002c0:	428b      	cmp	r3, r1
 80002c2:	d301      	bcc.n	80002c8 <__divsi3+0x88>
 80002c4:	028b      	lsls	r3, r1, #10
 80002c6:	1ac0      	subs	r0, r0, r3
 80002c8:	4152      	adcs	r2, r2
 80002ca:	0a43      	lsrs	r3, r0, #9
 80002cc:	428b      	cmp	r3, r1
 80002ce:	d301      	bcc.n	80002d4 <__divsi3+0x94>
 80002d0:	024b      	lsls	r3, r1, #9
 80002d2:	1ac0      	subs	r0, r0, r3
 80002d4:	4152      	adcs	r2, r2
 80002d6:	0a03      	lsrs	r3, r0, #8
 80002d8:	428b      	cmp	r3, r1
 80002da:	d301      	bcc.n	80002e0 <__divsi3+0xa0>
 80002dc:	020b      	lsls	r3, r1, #8
 80002de:	1ac0      	subs	r0, r0, r3
 80002e0:	4152      	adcs	r2, r2
 80002e2:	d2cd      	bcs.n	8000280 <__divsi3+0x40>
 80002e4:	09c3      	lsrs	r3, r0, #7
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xae>
 80002ea:	01cb      	lsls	r3, r1, #7
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	0983      	lsrs	r3, r0, #6
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xba>
 80002f6:	018b      	lsls	r3, r1, #6
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0943      	lsrs	r3, r0, #5
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xc6>
 8000302:	014b      	lsls	r3, r1, #5
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0903      	lsrs	r3, r0, #4
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xd2>
 800030e:	010b      	lsls	r3, r1, #4
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	08c3      	lsrs	r3, r0, #3
 8000316:	428b      	cmp	r3, r1
 8000318:	d301      	bcc.n	800031e <__divsi3+0xde>
 800031a:	00cb      	lsls	r3, r1, #3
 800031c:	1ac0      	subs	r0, r0, r3
 800031e:	4152      	adcs	r2, r2
 8000320:	0883      	lsrs	r3, r0, #2
 8000322:	428b      	cmp	r3, r1
 8000324:	d301      	bcc.n	800032a <__divsi3+0xea>
 8000326:	008b      	lsls	r3, r1, #2
 8000328:	1ac0      	subs	r0, r0, r3
 800032a:	4152      	adcs	r2, r2
 800032c:	0843      	lsrs	r3, r0, #1
 800032e:	428b      	cmp	r3, r1
 8000330:	d301      	bcc.n	8000336 <__divsi3+0xf6>
 8000332:	004b      	lsls	r3, r1, #1
 8000334:	1ac0      	subs	r0, r0, r3
 8000336:	4152      	adcs	r2, r2
 8000338:	1a41      	subs	r1, r0, r1
 800033a:	d200      	bcs.n	800033e <__divsi3+0xfe>
 800033c:	4601      	mov	r1, r0
 800033e:	4152      	adcs	r2, r2
 8000340:	4610      	mov	r0, r2
 8000342:	4770      	bx	lr
 8000344:	e05d      	b.n	8000402 <__divsi3+0x1c2>
 8000346:	0fca      	lsrs	r2, r1, #31
 8000348:	d000      	beq.n	800034c <__divsi3+0x10c>
 800034a:	4249      	negs	r1, r1
 800034c:	1003      	asrs	r3, r0, #32
 800034e:	d300      	bcc.n	8000352 <__divsi3+0x112>
 8000350:	4240      	negs	r0, r0
 8000352:	4053      	eors	r3, r2
 8000354:	2200      	movs	r2, #0
 8000356:	469c      	mov	ip, r3
 8000358:	0903      	lsrs	r3, r0, #4
 800035a:	428b      	cmp	r3, r1
 800035c:	d32d      	bcc.n	80003ba <__divsi3+0x17a>
 800035e:	0a03      	lsrs	r3, r0, #8
 8000360:	428b      	cmp	r3, r1
 8000362:	d312      	bcc.n	800038a <__divsi3+0x14a>
 8000364:	22fc      	movs	r2, #252	; 0xfc
 8000366:	0189      	lsls	r1, r1, #6
 8000368:	ba12      	rev	r2, r2
 800036a:	0a03      	lsrs	r3, r0, #8
 800036c:	428b      	cmp	r3, r1
 800036e:	d30c      	bcc.n	800038a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	1192      	asrs	r2, r2, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d308      	bcc.n	800038a <__divsi3+0x14a>
 8000378:	0189      	lsls	r1, r1, #6
 800037a:	1192      	asrs	r2, r2, #6
 800037c:	428b      	cmp	r3, r1
 800037e:	d304      	bcc.n	800038a <__divsi3+0x14a>
 8000380:	0189      	lsls	r1, r1, #6
 8000382:	d03a      	beq.n	80003fa <__divsi3+0x1ba>
 8000384:	1192      	asrs	r2, r2, #6
 8000386:	e000      	b.n	800038a <__divsi3+0x14a>
 8000388:	0989      	lsrs	r1, r1, #6
 800038a:	09c3      	lsrs	r3, r0, #7
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x154>
 8000390:	01cb      	lsls	r3, r1, #7
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	0983      	lsrs	r3, r0, #6
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x160>
 800039c:	018b      	lsls	r3, r1, #6
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0943      	lsrs	r3, r0, #5
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x16c>
 80003a8:	014b      	lsls	r3, r1, #5
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	0903      	lsrs	r3, r0, #4
 80003b0:	428b      	cmp	r3, r1
 80003b2:	d301      	bcc.n	80003b8 <__divsi3+0x178>
 80003b4:	010b      	lsls	r3, r1, #4
 80003b6:	1ac0      	subs	r0, r0, r3
 80003b8:	4152      	adcs	r2, r2
 80003ba:	08c3      	lsrs	r3, r0, #3
 80003bc:	428b      	cmp	r3, r1
 80003be:	d301      	bcc.n	80003c4 <__divsi3+0x184>
 80003c0:	00cb      	lsls	r3, r1, #3
 80003c2:	1ac0      	subs	r0, r0, r3
 80003c4:	4152      	adcs	r2, r2
 80003c6:	0883      	lsrs	r3, r0, #2
 80003c8:	428b      	cmp	r3, r1
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x190>
 80003cc:	008b      	lsls	r3, r1, #2
 80003ce:	1ac0      	subs	r0, r0, r3
 80003d0:	4152      	adcs	r2, r2
 80003d2:	d2d9      	bcs.n	8000388 <__divsi3+0x148>
 80003d4:	0843      	lsrs	r3, r0, #1
 80003d6:	428b      	cmp	r3, r1
 80003d8:	d301      	bcc.n	80003de <__divsi3+0x19e>
 80003da:	004b      	lsls	r3, r1, #1
 80003dc:	1ac0      	subs	r0, r0, r3
 80003de:	4152      	adcs	r2, r2
 80003e0:	1a41      	subs	r1, r0, r1
 80003e2:	d200      	bcs.n	80003e6 <__divsi3+0x1a6>
 80003e4:	4601      	mov	r1, r0
 80003e6:	4663      	mov	r3, ip
 80003e8:	4152      	adcs	r2, r2
 80003ea:	105b      	asrs	r3, r3, #1
 80003ec:	4610      	mov	r0, r2
 80003ee:	d301      	bcc.n	80003f4 <__divsi3+0x1b4>
 80003f0:	4240      	negs	r0, r0
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d500      	bpl.n	80003f8 <__divsi3+0x1b8>
 80003f6:	4249      	negs	r1, r1
 80003f8:	4770      	bx	lr
 80003fa:	4663      	mov	r3, ip
 80003fc:	105b      	asrs	r3, r3, #1
 80003fe:	d300      	bcc.n	8000402 <__divsi3+0x1c2>
 8000400:	4240      	negs	r0, r0
 8000402:	b501      	push	{r0, lr}
 8000404:	2000      	movs	r0, #0
 8000406:	f000 f805 	bl	8000414 <__aeabi_idiv0>
 800040a:	bd02      	pop	{r1, pc}

0800040c <__aeabi_idivmod>:
 800040c:	2900      	cmp	r1, #0
 800040e:	d0f8      	beq.n	8000402 <__divsi3+0x1c2>
 8000410:	e716      	b.n	8000240 <__divsi3>
 8000412:	4770      	bx	lr

08000414 <__aeabi_idiv0>:
 8000414:	4770      	bx	lr
 8000416:	46c0      	nop			; (mov r8, r8)

08000418 <__aeabi_cdrcmple>:
 8000418:	4684      	mov	ip, r0
 800041a:	1c10      	adds	r0, r2, #0
 800041c:	4662      	mov	r2, ip
 800041e:	468c      	mov	ip, r1
 8000420:	1c19      	adds	r1, r3, #0
 8000422:	4663      	mov	r3, ip
 8000424:	e000      	b.n	8000428 <__aeabi_cdcmpeq>
 8000426:	46c0      	nop			; (mov r8, r8)

08000428 <__aeabi_cdcmpeq>:
 8000428:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800042a:	f001 fdf1 	bl	8002010 <__ledf2>
 800042e:	2800      	cmp	r0, #0
 8000430:	d401      	bmi.n	8000436 <__aeabi_cdcmpeq+0xe>
 8000432:	2100      	movs	r1, #0
 8000434:	42c8      	cmn	r0, r1
 8000436:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000438 <__aeabi_dcmpeq>:
 8000438:	b510      	push	{r4, lr}
 800043a:	f001 fd49 	bl	8001ed0 <__eqdf2>
 800043e:	4240      	negs	r0, r0
 8000440:	3001      	adds	r0, #1
 8000442:	bd10      	pop	{r4, pc}

08000444 <__aeabi_dcmplt>:
 8000444:	b510      	push	{r4, lr}
 8000446:	f001 fde3 	bl	8002010 <__ledf2>
 800044a:	2800      	cmp	r0, #0
 800044c:	db01      	blt.n	8000452 <__aeabi_dcmplt+0xe>
 800044e:	2000      	movs	r0, #0
 8000450:	bd10      	pop	{r4, pc}
 8000452:	2001      	movs	r0, #1
 8000454:	bd10      	pop	{r4, pc}
 8000456:	46c0      	nop			; (mov r8, r8)

08000458 <__aeabi_dcmple>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 fdd9 	bl	8002010 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	dd01      	ble.n	8000466 <__aeabi_dcmple+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmpgt>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 fd6b 	bl	8001f48 <__gedf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dc01      	bgt.n	800047a <__aeabi_dcmpgt+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpge>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 fd61 	bl	8001f48 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	da01      	bge.n	800048e <__aeabi_dcmpge+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_cfrcmple>:
 8000494:	4684      	mov	ip, r0
 8000496:	1c08      	adds	r0, r1, #0
 8000498:	4661      	mov	r1, ip
 800049a:	e7ff      	b.n	800049c <__aeabi_cfcmpeq>

0800049c <__aeabi_cfcmpeq>:
 800049c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800049e:	f000 fb73 	bl	8000b88 <__lesf2>
 80004a2:	2800      	cmp	r0, #0
 80004a4:	d401      	bmi.n	80004aa <__aeabi_cfcmpeq+0xe>
 80004a6:	2100      	movs	r1, #0
 80004a8:	42c8      	cmn	r0, r1
 80004aa:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004ac <__aeabi_fcmpeq>:
 80004ac:	b510      	push	{r4, lr}
 80004ae:	f000 faf5 	bl	8000a9c <__eqsf2>
 80004b2:	4240      	negs	r0, r0
 80004b4:	3001      	adds	r0, #1
 80004b6:	bd10      	pop	{r4, pc}

080004b8 <__aeabi_fcmplt>:
 80004b8:	b510      	push	{r4, lr}
 80004ba:	f000 fb65 	bl	8000b88 <__lesf2>
 80004be:	2800      	cmp	r0, #0
 80004c0:	db01      	blt.n	80004c6 <__aeabi_fcmplt+0xe>
 80004c2:	2000      	movs	r0, #0
 80004c4:	bd10      	pop	{r4, pc}
 80004c6:	2001      	movs	r0, #1
 80004c8:	bd10      	pop	{r4, pc}
 80004ca:	46c0      	nop			; (mov r8, r8)

080004cc <__aeabi_fcmple>:
 80004cc:	b510      	push	{r4, lr}
 80004ce:	f000 fb5b 	bl	8000b88 <__lesf2>
 80004d2:	2800      	cmp	r0, #0
 80004d4:	dd01      	ble.n	80004da <__aeabi_fcmple+0xe>
 80004d6:	2000      	movs	r0, #0
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	2001      	movs	r0, #1
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	46c0      	nop			; (mov r8, r8)

080004e0 <__aeabi_fcmpgt>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	f000 fb03 	bl	8000aec <__gesf2>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	dc01      	bgt.n	80004ee <__aeabi_fcmpgt+0xe>
 80004ea:	2000      	movs	r0, #0
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	2001      	movs	r0, #1
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	46c0      	nop			; (mov r8, r8)

080004f4 <__aeabi_fcmpge>:
 80004f4:	b510      	push	{r4, lr}
 80004f6:	f000 faf9 	bl	8000aec <__gesf2>
 80004fa:	2800      	cmp	r0, #0
 80004fc:	da01      	bge.n	8000502 <__aeabi_fcmpge+0xe>
 80004fe:	2000      	movs	r0, #0
 8000500:	bd10      	pop	{r4, pc}
 8000502:	2001      	movs	r0, #1
 8000504:	bd10      	pop	{r4, pc}
 8000506:	46c0      	nop			; (mov r8, r8)

08000508 <__aeabi_d2uiz>:
 8000508:	b570      	push	{r4, r5, r6, lr}
 800050a:	2200      	movs	r2, #0
 800050c:	4b0c      	ldr	r3, [pc, #48]	; (8000540 <__aeabi_d2uiz+0x38>)
 800050e:	0004      	movs	r4, r0
 8000510:	000d      	movs	r5, r1
 8000512:	f7ff ffb5 	bl	8000480 <__aeabi_dcmpge>
 8000516:	2800      	cmp	r0, #0
 8000518:	d104      	bne.n	8000524 <__aeabi_d2uiz+0x1c>
 800051a:	0020      	movs	r0, r4
 800051c:	0029      	movs	r1, r5
 800051e:	f002 fbb5 	bl	8002c8c <__aeabi_d2iz>
 8000522:	bd70      	pop	{r4, r5, r6, pc}
 8000524:	4b06      	ldr	r3, [pc, #24]	; (8000540 <__aeabi_d2uiz+0x38>)
 8000526:	2200      	movs	r2, #0
 8000528:	0020      	movs	r0, r4
 800052a:	0029      	movs	r1, r5
 800052c:	f002 f84a 	bl	80025c4 <__aeabi_dsub>
 8000530:	f002 fbac 	bl	8002c8c <__aeabi_d2iz>
 8000534:	2380      	movs	r3, #128	; 0x80
 8000536:	061b      	lsls	r3, r3, #24
 8000538:	469c      	mov	ip, r3
 800053a:	4460      	add	r0, ip
 800053c:	e7f1      	b.n	8000522 <__aeabi_d2uiz+0x1a>
 800053e:	46c0      	nop			; (mov r8, r8)
 8000540:	41e00000 	.word	0x41e00000

08000544 <__aeabi_fadd>:
 8000544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000546:	4647      	mov	r7, r8
 8000548:	46ce      	mov	lr, r9
 800054a:	0243      	lsls	r3, r0, #9
 800054c:	0a5b      	lsrs	r3, r3, #9
 800054e:	0044      	lsls	r4, r0, #1
 8000550:	0fc2      	lsrs	r2, r0, #31
 8000552:	469c      	mov	ip, r3
 8000554:	0048      	lsls	r0, r1, #1
 8000556:	00dd      	lsls	r5, r3, #3
 8000558:	024b      	lsls	r3, r1, #9
 800055a:	0e24      	lsrs	r4, r4, #24
 800055c:	0a5b      	lsrs	r3, r3, #9
 800055e:	0e00      	lsrs	r0, r0, #24
 8000560:	b580      	push	{r7, lr}
 8000562:	4698      	mov	r8, r3
 8000564:	0026      	movs	r6, r4
 8000566:	4691      	mov	r9, r2
 8000568:	0fc9      	lsrs	r1, r1, #31
 800056a:	00db      	lsls	r3, r3, #3
 800056c:	1a27      	subs	r7, r4, r0
 800056e:	428a      	cmp	r2, r1
 8000570:	d029      	beq.n	80005c6 <__aeabi_fadd+0x82>
 8000572:	2f00      	cmp	r7, #0
 8000574:	dd15      	ble.n	80005a2 <__aeabi_fadd+0x5e>
 8000576:	2800      	cmp	r0, #0
 8000578:	d14a      	bne.n	8000610 <__aeabi_fadd+0xcc>
 800057a:	2b00      	cmp	r3, #0
 800057c:	d000      	beq.n	8000580 <__aeabi_fadd+0x3c>
 800057e:	e095      	b.n	80006ac <__aeabi_fadd+0x168>
 8000580:	08ed      	lsrs	r5, r5, #3
 8000582:	2cff      	cmp	r4, #255	; 0xff
 8000584:	d100      	bne.n	8000588 <__aeabi_fadd+0x44>
 8000586:	e088      	b.n	800069a <__aeabi_fadd+0x156>
 8000588:	026b      	lsls	r3, r5, #9
 800058a:	0a5b      	lsrs	r3, r3, #9
 800058c:	b2e6      	uxtb	r6, r4
 800058e:	025b      	lsls	r3, r3, #9
 8000590:	05f6      	lsls	r6, r6, #23
 8000592:	0a58      	lsrs	r0, r3, #9
 8000594:	4330      	orrs	r0, r6
 8000596:	07d2      	lsls	r2, r2, #31
 8000598:	4310      	orrs	r0, r2
 800059a:	bc0c      	pop	{r2, r3}
 800059c:	4690      	mov	r8, r2
 800059e:	4699      	mov	r9, r3
 80005a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005a2:	2f00      	cmp	r7, #0
 80005a4:	d000      	beq.n	80005a8 <__aeabi_fadd+0x64>
 80005a6:	e087      	b.n	80006b8 <__aeabi_fadd+0x174>
 80005a8:	1c60      	adds	r0, r4, #1
 80005aa:	b2c0      	uxtb	r0, r0
 80005ac:	2801      	cmp	r0, #1
 80005ae:	dc00      	bgt.n	80005b2 <__aeabi_fadd+0x6e>
 80005b0:	e0b6      	b.n	8000720 <__aeabi_fadd+0x1dc>
 80005b2:	1aee      	subs	r6, r5, r3
 80005b4:	0172      	lsls	r2, r6, #5
 80005b6:	d500      	bpl.n	80005ba <__aeabi_fadd+0x76>
 80005b8:	e0c5      	b.n	8000746 <__aeabi_fadd+0x202>
 80005ba:	2e00      	cmp	r6, #0
 80005bc:	d13d      	bne.n	800063a <__aeabi_fadd+0xf6>
 80005be:	2200      	movs	r2, #0
 80005c0:	2600      	movs	r6, #0
 80005c2:	2300      	movs	r3, #0
 80005c4:	e7e3      	b.n	800058e <__aeabi_fadd+0x4a>
 80005c6:	2f00      	cmp	r7, #0
 80005c8:	dc00      	bgt.n	80005cc <__aeabi_fadd+0x88>
 80005ca:	e096      	b.n	80006fa <__aeabi_fadd+0x1b6>
 80005cc:	2800      	cmp	r0, #0
 80005ce:	d05d      	beq.n	800068c <__aeabi_fadd+0x148>
 80005d0:	2cff      	cmp	r4, #255	; 0xff
 80005d2:	d060      	beq.n	8000696 <__aeabi_fadd+0x152>
 80005d4:	2280      	movs	r2, #128	; 0x80
 80005d6:	04d2      	lsls	r2, r2, #19
 80005d8:	4313      	orrs	r3, r2
 80005da:	2f1b      	cmp	r7, #27
 80005dc:	dd00      	ble.n	80005e0 <__aeabi_fadd+0x9c>
 80005de:	e0ec      	b.n	80007ba <__aeabi_fadd+0x276>
 80005e0:	2220      	movs	r2, #32
 80005e2:	1bd2      	subs	r2, r2, r7
 80005e4:	0018      	movs	r0, r3
 80005e6:	4093      	lsls	r3, r2
 80005e8:	40f8      	lsrs	r0, r7
 80005ea:	1e5a      	subs	r2, r3, #1
 80005ec:	4193      	sbcs	r3, r2
 80005ee:	4303      	orrs	r3, r0
 80005f0:	18ed      	adds	r5, r5, r3
 80005f2:	016b      	lsls	r3, r5, #5
 80005f4:	d57b      	bpl.n	80006ee <__aeabi_fadd+0x1aa>
 80005f6:	3401      	adds	r4, #1
 80005f8:	2cff      	cmp	r4, #255	; 0xff
 80005fa:	d100      	bne.n	80005fe <__aeabi_fadd+0xba>
 80005fc:	e0b7      	b.n	800076e <__aeabi_fadd+0x22a>
 80005fe:	2201      	movs	r2, #1
 8000600:	2607      	movs	r6, #7
 8000602:	402a      	ands	r2, r5
 8000604:	086b      	lsrs	r3, r5, #1
 8000606:	4d9a      	ldr	r5, [pc, #616]	; (8000870 <__aeabi_fadd+0x32c>)
 8000608:	401d      	ands	r5, r3
 800060a:	4315      	orrs	r5, r2
 800060c:	402e      	ands	r6, r5
 800060e:	e029      	b.n	8000664 <__aeabi_fadd+0x120>
 8000610:	2cff      	cmp	r4, #255	; 0xff
 8000612:	d0b5      	beq.n	8000580 <__aeabi_fadd+0x3c>
 8000614:	2280      	movs	r2, #128	; 0x80
 8000616:	04d2      	lsls	r2, r2, #19
 8000618:	4313      	orrs	r3, r2
 800061a:	2f1b      	cmp	r7, #27
 800061c:	dd00      	ble.n	8000620 <__aeabi_fadd+0xdc>
 800061e:	e0b2      	b.n	8000786 <__aeabi_fadd+0x242>
 8000620:	2220      	movs	r2, #32
 8000622:	1bd2      	subs	r2, r2, r7
 8000624:	0019      	movs	r1, r3
 8000626:	4093      	lsls	r3, r2
 8000628:	40f9      	lsrs	r1, r7
 800062a:	1e5a      	subs	r2, r3, #1
 800062c:	4193      	sbcs	r3, r2
 800062e:	430b      	orrs	r3, r1
 8000630:	1aed      	subs	r5, r5, r3
 8000632:	016b      	lsls	r3, r5, #5
 8000634:	d55b      	bpl.n	80006ee <__aeabi_fadd+0x1aa>
 8000636:	01ad      	lsls	r5, r5, #6
 8000638:	09ae      	lsrs	r6, r5, #6
 800063a:	0030      	movs	r0, r6
 800063c:	f002 fc9e 	bl	8002f7c <__clzsi2>
 8000640:	3805      	subs	r0, #5
 8000642:	4086      	lsls	r6, r0
 8000644:	4284      	cmp	r4, r0
 8000646:	dc65      	bgt.n	8000714 <__aeabi_fadd+0x1d0>
 8000648:	1b04      	subs	r4, r0, r4
 800064a:	0033      	movs	r3, r6
 800064c:	2020      	movs	r0, #32
 800064e:	3401      	adds	r4, #1
 8000650:	40e3      	lsrs	r3, r4
 8000652:	1b04      	subs	r4, r0, r4
 8000654:	40a6      	lsls	r6, r4
 8000656:	1e75      	subs	r5, r6, #1
 8000658:	41ae      	sbcs	r6, r5
 800065a:	4333      	orrs	r3, r6
 800065c:	2607      	movs	r6, #7
 800065e:	001d      	movs	r5, r3
 8000660:	2400      	movs	r4, #0
 8000662:	401e      	ands	r6, r3
 8000664:	2201      	movs	r2, #1
 8000666:	464b      	mov	r3, r9
 8000668:	401a      	ands	r2, r3
 800066a:	2e00      	cmp	r6, #0
 800066c:	d004      	beq.n	8000678 <__aeabi_fadd+0x134>
 800066e:	230f      	movs	r3, #15
 8000670:	402b      	ands	r3, r5
 8000672:	2b04      	cmp	r3, #4
 8000674:	d000      	beq.n	8000678 <__aeabi_fadd+0x134>
 8000676:	3504      	adds	r5, #4
 8000678:	016b      	lsls	r3, r5, #5
 800067a:	d400      	bmi.n	800067e <__aeabi_fadd+0x13a>
 800067c:	e780      	b.n	8000580 <__aeabi_fadd+0x3c>
 800067e:	3401      	adds	r4, #1
 8000680:	b2e6      	uxtb	r6, r4
 8000682:	2cff      	cmp	r4, #255	; 0xff
 8000684:	d12f      	bne.n	80006e6 <__aeabi_fadd+0x1a2>
 8000686:	26ff      	movs	r6, #255	; 0xff
 8000688:	2300      	movs	r3, #0
 800068a:	e780      	b.n	800058e <__aeabi_fadd+0x4a>
 800068c:	2b00      	cmp	r3, #0
 800068e:	d152      	bne.n	8000736 <__aeabi_fadd+0x1f2>
 8000690:	2cff      	cmp	r4, #255	; 0xff
 8000692:	d000      	beq.n	8000696 <__aeabi_fadd+0x152>
 8000694:	e774      	b.n	8000580 <__aeabi_fadd+0x3c>
 8000696:	000a      	movs	r2, r1
 8000698:	08ed      	lsrs	r5, r5, #3
 800069a:	2d00      	cmp	r5, #0
 800069c:	d0f3      	beq.n	8000686 <__aeabi_fadd+0x142>
 800069e:	2380      	movs	r3, #128	; 0x80
 80006a0:	03db      	lsls	r3, r3, #15
 80006a2:	432b      	orrs	r3, r5
 80006a4:	025b      	lsls	r3, r3, #9
 80006a6:	0a5b      	lsrs	r3, r3, #9
 80006a8:	26ff      	movs	r6, #255	; 0xff
 80006aa:	e770      	b.n	800058e <__aeabi_fadd+0x4a>
 80006ac:	3f01      	subs	r7, #1
 80006ae:	2f00      	cmp	r7, #0
 80006b0:	d0be      	beq.n	8000630 <__aeabi_fadd+0xec>
 80006b2:	2cff      	cmp	r4, #255	; 0xff
 80006b4:	d1b1      	bne.n	800061a <__aeabi_fadd+0xd6>
 80006b6:	e763      	b.n	8000580 <__aeabi_fadd+0x3c>
 80006b8:	2c00      	cmp	r4, #0
 80006ba:	d047      	beq.n	800074c <__aeabi_fadd+0x208>
 80006bc:	28ff      	cmp	r0, #255	; 0xff
 80006be:	d069      	beq.n	8000794 <__aeabi_fadd+0x250>
 80006c0:	2480      	movs	r4, #128	; 0x80
 80006c2:	04e4      	lsls	r4, r4, #19
 80006c4:	427a      	negs	r2, r7
 80006c6:	4325      	orrs	r5, r4
 80006c8:	2a1b      	cmp	r2, #27
 80006ca:	dd00      	ble.n	80006ce <__aeabi_fadd+0x18a>
 80006cc:	e0c5      	b.n	800085a <__aeabi_fadd+0x316>
 80006ce:	002c      	movs	r4, r5
 80006d0:	2620      	movs	r6, #32
 80006d2:	40d4      	lsrs	r4, r2
 80006d4:	1ab2      	subs	r2, r6, r2
 80006d6:	4095      	lsls	r5, r2
 80006d8:	1e6a      	subs	r2, r5, #1
 80006da:	4195      	sbcs	r5, r2
 80006dc:	4325      	orrs	r5, r4
 80006de:	1b5d      	subs	r5, r3, r5
 80006e0:	0004      	movs	r4, r0
 80006e2:	4689      	mov	r9, r1
 80006e4:	e7a5      	b.n	8000632 <__aeabi_fadd+0xee>
 80006e6:	01ab      	lsls	r3, r5, #6
 80006e8:	0a5b      	lsrs	r3, r3, #9
 80006ea:	e750      	b.n	800058e <__aeabi_fadd+0x4a>
 80006ec:	2400      	movs	r4, #0
 80006ee:	2201      	movs	r2, #1
 80006f0:	464b      	mov	r3, r9
 80006f2:	401a      	ands	r2, r3
 80006f4:	076b      	lsls	r3, r5, #29
 80006f6:	d1ba      	bne.n	800066e <__aeabi_fadd+0x12a>
 80006f8:	e742      	b.n	8000580 <__aeabi_fadd+0x3c>
 80006fa:	2f00      	cmp	r7, #0
 80006fc:	d13b      	bne.n	8000776 <__aeabi_fadd+0x232>
 80006fe:	3401      	adds	r4, #1
 8000700:	b2e0      	uxtb	r0, r4
 8000702:	2801      	cmp	r0, #1
 8000704:	dd4a      	ble.n	800079c <__aeabi_fadd+0x258>
 8000706:	2cff      	cmp	r4, #255	; 0xff
 8000708:	d0bd      	beq.n	8000686 <__aeabi_fadd+0x142>
 800070a:	2607      	movs	r6, #7
 800070c:	18ed      	adds	r5, r5, r3
 800070e:	086d      	lsrs	r5, r5, #1
 8000710:	402e      	ands	r6, r5
 8000712:	e7a7      	b.n	8000664 <__aeabi_fadd+0x120>
 8000714:	2307      	movs	r3, #7
 8000716:	4d57      	ldr	r5, [pc, #348]	; (8000874 <__aeabi_fadd+0x330>)
 8000718:	1a24      	subs	r4, r4, r0
 800071a:	4035      	ands	r5, r6
 800071c:	401e      	ands	r6, r3
 800071e:	e7a1      	b.n	8000664 <__aeabi_fadd+0x120>
 8000720:	2c00      	cmp	r4, #0
 8000722:	d11b      	bne.n	800075c <__aeabi_fadd+0x218>
 8000724:	2d00      	cmp	r5, #0
 8000726:	d16e      	bne.n	8000806 <__aeabi_fadd+0x2c2>
 8000728:	2b00      	cmp	r3, #0
 800072a:	d100      	bne.n	800072e <__aeabi_fadd+0x1ea>
 800072c:	e09a      	b.n	8000864 <__aeabi_fadd+0x320>
 800072e:	000a      	movs	r2, r1
 8000730:	001d      	movs	r5, r3
 8000732:	003c      	movs	r4, r7
 8000734:	e724      	b.n	8000580 <__aeabi_fadd+0x3c>
 8000736:	3f01      	subs	r7, #1
 8000738:	2f00      	cmp	r7, #0
 800073a:	d100      	bne.n	800073e <__aeabi_fadd+0x1fa>
 800073c:	e758      	b.n	80005f0 <__aeabi_fadd+0xac>
 800073e:	2cff      	cmp	r4, #255	; 0xff
 8000740:	d000      	beq.n	8000744 <__aeabi_fadd+0x200>
 8000742:	e74a      	b.n	80005da <__aeabi_fadd+0x96>
 8000744:	e7a7      	b.n	8000696 <__aeabi_fadd+0x152>
 8000746:	1b5e      	subs	r6, r3, r5
 8000748:	4689      	mov	r9, r1
 800074a:	e776      	b.n	800063a <__aeabi_fadd+0xf6>
 800074c:	2d00      	cmp	r5, #0
 800074e:	d11c      	bne.n	800078a <__aeabi_fadd+0x246>
 8000750:	000a      	movs	r2, r1
 8000752:	28ff      	cmp	r0, #255	; 0xff
 8000754:	d01f      	beq.n	8000796 <__aeabi_fadd+0x252>
 8000756:	0004      	movs	r4, r0
 8000758:	001d      	movs	r5, r3
 800075a:	e711      	b.n	8000580 <__aeabi_fadd+0x3c>
 800075c:	2d00      	cmp	r5, #0
 800075e:	d15d      	bne.n	800081c <__aeabi_fadd+0x2d8>
 8000760:	2b00      	cmp	r3, #0
 8000762:	d117      	bne.n	8000794 <__aeabi_fadd+0x250>
 8000764:	2380      	movs	r3, #128	; 0x80
 8000766:	2200      	movs	r2, #0
 8000768:	03db      	lsls	r3, r3, #15
 800076a:	26ff      	movs	r6, #255	; 0xff
 800076c:	e70f      	b.n	800058e <__aeabi_fadd+0x4a>
 800076e:	000a      	movs	r2, r1
 8000770:	26ff      	movs	r6, #255	; 0xff
 8000772:	2300      	movs	r3, #0
 8000774:	e70b      	b.n	800058e <__aeabi_fadd+0x4a>
 8000776:	2c00      	cmp	r4, #0
 8000778:	d121      	bne.n	80007be <__aeabi_fadd+0x27a>
 800077a:	2d00      	cmp	r5, #0
 800077c:	d166      	bne.n	800084c <__aeabi_fadd+0x308>
 800077e:	28ff      	cmp	r0, #255	; 0xff
 8000780:	d1e9      	bne.n	8000756 <__aeabi_fadd+0x212>
 8000782:	001d      	movs	r5, r3
 8000784:	e787      	b.n	8000696 <__aeabi_fadd+0x152>
 8000786:	2301      	movs	r3, #1
 8000788:	e752      	b.n	8000630 <__aeabi_fadd+0xec>
 800078a:	1c7a      	adds	r2, r7, #1
 800078c:	d0a7      	beq.n	80006de <__aeabi_fadd+0x19a>
 800078e:	43fa      	mvns	r2, r7
 8000790:	28ff      	cmp	r0, #255	; 0xff
 8000792:	d199      	bne.n	80006c8 <__aeabi_fadd+0x184>
 8000794:	000a      	movs	r2, r1
 8000796:	001d      	movs	r5, r3
 8000798:	24ff      	movs	r4, #255	; 0xff
 800079a:	e6f1      	b.n	8000580 <__aeabi_fadd+0x3c>
 800079c:	2e00      	cmp	r6, #0
 800079e:	d121      	bne.n	80007e4 <__aeabi_fadd+0x2a0>
 80007a0:	2d00      	cmp	r5, #0
 80007a2:	d04f      	beq.n	8000844 <__aeabi_fadd+0x300>
 80007a4:	2b00      	cmp	r3, #0
 80007a6:	d04c      	beq.n	8000842 <__aeabi_fadd+0x2fe>
 80007a8:	18ed      	adds	r5, r5, r3
 80007aa:	016b      	lsls	r3, r5, #5
 80007ac:	d59e      	bpl.n	80006ec <__aeabi_fadd+0x1a8>
 80007ae:	4b31      	ldr	r3, [pc, #196]	; (8000874 <__aeabi_fadd+0x330>)
 80007b0:	3607      	adds	r6, #7
 80007b2:	402e      	ands	r6, r5
 80007b4:	2401      	movs	r4, #1
 80007b6:	401d      	ands	r5, r3
 80007b8:	e754      	b.n	8000664 <__aeabi_fadd+0x120>
 80007ba:	2301      	movs	r3, #1
 80007bc:	e718      	b.n	80005f0 <__aeabi_fadd+0xac>
 80007be:	28ff      	cmp	r0, #255	; 0xff
 80007c0:	d0df      	beq.n	8000782 <__aeabi_fadd+0x23e>
 80007c2:	2480      	movs	r4, #128	; 0x80
 80007c4:	04e4      	lsls	r4, r4, #19
 80007c6:	427f      	negs	r7, r7
 80007c8:	4325      	orrs	r5, r4
 80007ca:	2f1b      	cmp	r7, #27
 80007cc:	dc4d      	bgt.n	800086a <__aeabi_fadd+0x326>
 80007ce:	2620      	movs	r6, #32
 80007d0:	1bf6      	subs	r6, r6, r7
 80007d2:	002c      	movs	r4, r5
 80007d4:	40b5      	lsls	r5, r6
 80007d6:	40fc      	lsrs	r4, r7
 80007d8:	1e6a      	subs	r2, r5, #1
 80007da:	4195      	sbcs	r5, r2
 80007dc:	4325      	orrs	r5, r4
 80007de:	18ed      	adds	r5, r5, r3
 80007e0:	0004      	movs	r4, r0
 80007e2:	e706      	b.n	80005f2 <__aeabi_fadd+0xae>
 80007e4:	2d00      	cmp	r5, #0
 80007e6:	d0cc      	beq.n	8000782 <__aeabi_fadd+0x23e>
 80007e8:	2b00      	cmp	r3, #0
 80007ea:	d100      	bne.n	80007ee <__aeabi_fadd+0x2aa>
 80007ec:	e753      	b.n	8000696 <__aeabi_fadd+0x152>
 80007ee:	2180      	movs	r1, #128	; 0x80
 80007f0:	4660      	mov	r0, ip
 80007f2:	03c9      	lsls	r1, r1, #15
 80007f4:	4208      	tst	r0, r1
 80007f6:	d003      	beq.n	8000800 <__aeabi_fadd+0x2bc>
 80007f8:	4640      	mov	r0, r8
 80007fa:	4208      	tst	r0, r1
 80007fc:	d100      	bne.n	8000800 <__aeabi_fadd+0x2bc>
 80007fe:	001d      	movs	r5, r3
 8000800:	2101      	movs	r1, #1
 8000802:	4011      	ands	r1, r2
 8000804:	e747      	b.n	8000696 <__aeabi_fadd+0x152>
 8000806:	2b00      	cmp	r3, #0
 8000808:	d100      	bne.n	800080c <__aeabi_fadd+0x2c8>
 800080a:	e6b9      	b.n	8000580 <__aeabi_fadd+0x3c>
 800080c:	1aea      	subs	r2, r5, r3
 800080e:	0150      	lsls	r0, r2, #5
 8000810:	d525      	bpl.n	800085e <__aeabi_fadd+0x31a>
 8000812:	2607      	movs	r6, #7
 8000814:	1b5d      	subs	r5, r3, r5
 8000816:	402e      	ands	r6, r5
 8000818:	4689      	mov	r9, r1
 800081a:	e723      	b.n	8000664 <__aeabi_fadd+0x120>
 800081c:	24ff      	movs	r4, #255	; 0xff
 800081e:	2b00      	cmp	r3, #0
 8000820:	d100      	bne.n	8000824 <__aeabi_fadd+0x2e0>
 8000822:	e6ad      	b.n	8000580 <__aeabi_fadd+0x3c>
 8000824:	2280      	movs	r2, #128	; 0x80
 8000826:	4660      	mov	r0, ip
 8000828:	03d2      	lsls	r2, r2, #15
 800082a:	4210      	tst	r0, r2
 800082c:	d004      	beq.n	8000838 <__aeabi_fadd+0x2f4>
 800082e:	4640      	mov	r0, r8
 8000830:	4210      	tst	r0, r2
 8000832:	d101      	bne.n	8000838 <__aeabi_fadd+0x2f4>
 8000834:	001d      	movs	r5, r3
 8000836:	4689      	mov	r9, r1
 8000838:	2201      	movs	r2, #1
 800083a:	464b      	mov	r3, r9
 800083c:	24ff      	movs	r4, #255	; 0xff
 800083e:	401a      	ands	r2, r3
 8000840:	e69e      	b.n	8000580 <__aeabi_fadd+0x3c>
 8000842:	002b      	movs	r3, r5
 8000844:	08dd      	lsrs	r5, r3, #3
 8000846:	000a      	movs	r2, r1
 8000848:	2400      	movs	r4, #0
 800084a:	e69d      	b.n	8000588 <__aeabi_fadd+0x44>
 800084c:	1c7a      	adds	r2, r7, #1
 800084e:	d0c6      	beq.n	80007de <__aeabi_fadd+0x29a>
 8000850:	43ff      	mvns	r7, r7
 8000852:	28ff      	cmp	r0, #255	; 0xff
 8000854:	d1b9      	bne.n	80007ca <__aeabi_fadd+0x286>
 8000856:	001d      	movs	r5, r3
 8000858:	e71d      	b.n	8000696 <__aeabi_fadd+0x152>
 800085a:	2501      	movs	r5, #1
 800085c:	e73f      	b.n	80006de <__aeabi_fadd+0x19a>
 800085e:	1e15      	subs	r5, r2, #0
 8000860:	d000      	beq.n	8000864 <__aeabi_fadd+0x320>
 8000862:	e744      	b.n	80006ee <__aeabi_fadd+0x1aa>
 8000864:	2200      	movs	r2, #0
 8000866:	2300      	movs	r3, #0
 8000868:	e691      	b.n	800058e <__aeabi_fadd+0x4a>
 800086a:	2501      	movs	r5, #1
 800086c:	e7b7      	b.n	80007de <__aeabi_fadd+0x29a>
 800086e:	46c0      	nop			; (mov r8, r8)
 8000870:	7dffffff 	.word	0x7dffffff
 8000874:	fbffffff 	.word	0xfbffffff

08000878 <__aeabi_fdiv>:
 8000878:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800087a:	4657      	mov	r7, sl
 800087c:	464e      	mov	r6, r9
 800087e:	4645      	mov	r5, r8
 8000880:	46de      	mov	lr, fp
 8000882:	0244      	lsls	r4, r0, #9
 8000884:	b5e0      	push	{r5, r6, r7, lr}
 8000886:	0046      	lsls	r6, r0, #1
 8000888:	4688      	mov	r8, r1
 800088a:	0a64      	lsrs	r4, r4, #9
 800088c:	0e36      	lsrs	r6, r6, #24
 800088e:	0fc7      	lsrs	r7, r0, #31
 8000890:	2e00      	cmp	r6, #0
 8000892:	d063      	beq.n	800095c <__aeabi_fdiv+0xe4>
 8000894:	2eff      	cmp	r6, #255	; 0xff
 8000896:	d024      	beq.n	80008e2 <__aeabi_fdiv+0x6a>
 8000898:	2380      	movs	r3, #128	; 0x80
 800089a:	00e4      	lsls	r4, r4, #3
 800089c:	04db      	lsls	r3, r3, #19
 800089e:	431c      	orrs	r4, r3
 80008a0:	2300      	movs	r3, #0
 80008a2:	4699      	mov	r9, r3
 80008a4:	469b      	mov	fp, r3
 80008a6:	3e7f      	subs	r6, #127	; 0x7f
 80008a8:	4643      	mov	r3, r8
 80008aa:	4642      	mov	r2, r8
 80008ac:	025d      	lsls	r5, r3, #9
 80008ae:	0fd2      	lsrs	r2, r2, #31
 80008b0:	005b      	lsls	r3, r3, #1
 80008b2:	0a6d      	lsrs	r5, r5, #9
 80008b4:	0e1b      	lsrs	r3, r3, #24
 80008b6:	4690      	mov	r8, r2
 80008b8:	4692      	mov	sl, r2
 80008ba:	d065      	beq.n	8000988 <__aeabi_fdiv+0x110>
 80008bc:	2bff      	cmp	r3, #255	; 0xff
 80008be:	d055      	beq.n	800096c <__aeabi_fdiv+0xf4>
 80008c0:	2280      	movs	r2, #128	; 0x80
 80008c2:	2100      	movs	r1, #0
 80008c4:	00ed      	lsls	r5, r5, #3
 80008c6:	04d2      	lsls	r2, r2, #19
 80008c8:	3b7f      	subs	r3, #127	; 0x7f
 80008ca:	4315      	orrs	r5, r2
 80008cc:	1af6      	subs	r6, r6, r3
 80008ce:	4643      	mov	r3, r8
 80008d0:	464a      	mov	r2, r9
 80008d2:	407b      	eors	r3, r7
 80008d4:	2a0f      	cmp	r2, #15
 80008d6:	d900      	bls.n	80008da <__aeabi_fdiv+0x62>
 80008d8:	e08d      	b.n	80009f6 <__aeabi_fdiv+0x17e>
 80008da:	486d      	ldr	r0, [pc, #436]	; (8000a90 <__aeabi_fdiv+0x218>)
 80008dc:	0092      	lsls	r2, r2, #2
 80008de:	5882      	ldr	r2, [r0, r2]
 80008e0:	4697      	mov	pc, r2
 80008e2:	2c00      	cmp	r4, #0
 80008e4:	d154      	bne.n	8000990 <__aeabi_fdiv+0x118>
 80008e6:	2308      	movs	r3, #8
 80008e8:	4699      	mov	r9, r3
 80008ea:	3b06      	subs	r3, #6
 80008ec:	26ff      	movs	r6, #255	; 0xff
 80008ee:	469b      	mov	fp, r3
 80008f0:	e7da      	b.n	80008a8 <__aeabi_fdiv+0x30>
 80008f2:	2500      	movs	r5, #0
 80008f4:	4653      	mov	r3, sl
 80008f6:	2902      	cmp	r1, #2
 80008f8:	d01b      	beq.n	8000932 <__aeabi_fdiv+0xba>
 80008fa:	2903      	cmp	r1, #3
 80008fc:	d100      	bne.n	8000900 <__aeabi_fdiv+0x88>
 80008fe:	e0bf      	b.n	8000a80 <__aeabi_fdiv+0x208>
 8000900:	2901      	cmp	r1, #1
 8000902:	d028      	beq.n	8000956 <__aeabi_fdiv+0xde>
 8000904:	0030      	movs	r0, r6
 8000906:	307f      	adds	r0, #127	; 0x7f
 8000908:	2800      	cmp	r0, #0
 800090a:	dd20      	ble.n	800094e <__aeabi_fdiv+0xd6>
 800090c:	076a      	lsls	r2, r5, #29
 800090e:	d004      	beq.n	800091a <__aeabi_fdiv+0xa2>
 8000910:	220f      	movs	r2, #15
 8000912:	402a      	ands	r2, r5
 8000914:	2a04      	cmp	r2, #4
 8000916:	d000      	beq.n	800091a <__aeabi_fdiv+0xa2>
 8000918:	3504      	adds	r5, #4
 800091a:	012a      	lsls	r2, r5, #4
 800091c:	d503      	bpl.n	8000926 <__aeabi_fdiv+0xae>
 800091e:	0030      	movs	r0, r6
 8000920:	4a5c      	ldr	r2, [pc, #368]	; (8000a94 <__aeabi_fdiv+0x21c>)
 8000922:	3080      	adds	r0, #128	; 0x80
 8000924:	4015      	ands	r5, r2
 8000926:	28fe      	cmp	r0, #254	; 0xfe
 8000928:	dc03      	bgt.n	8000932 <__aeabi_fdiv+0xba>
 800092a:	01ac      	lsls	r4, r5, #6
 800092c:	0a64      	lsrs	r4, r4, #9
 800092e:	b2c2      	uxtb	r2, r0
 8000930:	e001      	b.n	8000936 <__aeabi_fdiv+0xbe>
 8000932:	22ff      	movs	r2, #255	; 0xff
 8000934:	2400      	movs	r4, #0
 8000936:	0264      	lsls	r4, r4, #9
 8000938:	05d2      	lsls	r2, r2, #23
 800093a:	0a60      	lsrs	r0, r4, #9
 800093c:	07db      	lsls	r3, r3, #31
 800093e:	4310      	orrs	r0, r2
 8000940:	4318      	orrs	r0, r3
 8000942:	bc3c      	pop	{r2, r3, r4, r5}
 8000944:	4690      	mov	r8, r2
 8000946:	4699      	mov	r9, r3
 8000948:	46a2      	mov	sl, r4
 800094a:	46ab      	mov	fp, r5
 800094c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800094e:	2201      	movs	r2, #1
 8000950:	1a10      	subs	r0, r2, r0
 8000952:	281b      	cmp	r0, #27
 8000954:	dd7c      	ble.n	8000a50 <__aeabi_fdiv+0x1d8>
 8000956:	2200      	movs	r2, #0
 8000958:	2400      	movs	r4, #0
 800095a:	e7ec      	b.n	8000936 <__aeabi_fdiv+0xbe>
 800095c:	2c00      	cmp	r4, #0
 800095e:	d11d      	bne.n	800099c <__aeabi_fdiv+0x124>
 8000960:	2304      	movs	r3, #4
 8000962:	4699      	mov	r9, r3
 8000964:	3b03      	subs	r3, #3
 8000966:	2600      	movs	r6, #0
 8000968:	469b      	mov	fp, r3
 800096a:	e79d      	b.n	80008a8 <__aeabi_fdiv+0x30>
 800096c:	3eff      	subs	r6, #255	; 0xff
 800096e:	2d00      	cmp	r5, #0
 8000970:	d120      	bne.n	80009b4 <__aeabi_fdiv+0x13c>
 8000972:	2102      	movs	r1, #2
 8000974:	4643      	mov	r3, r8
 8000976:	464a      	mov	r2, r9
 8000978:	407b      	eors	r3, r7
 800097a:	430a      	orrs	r2, r1
 800097c:	2a0f      	cmp	r2, #15
 800097e:	d8d8      	bhi.n	8000932 <__aeabi_fdiv+0xba>
 8000980:	4845      	ldr	r0, [pc, #276]	; (8000a98 <__aeabi_fdiv+0x220>)
 8000982:	0092      	lsls	r2, r2, #2
 8000984:	5882      	ldr	r2, [r0, r2]
 8000986:	4697      	mov	pc, r2
 8000988:	2d00      	cmp	r5, #0
 800098a:	d119      	bne.n	80009c0 <__aeabi_fdiv+0x148>
 800098c:	2101      	movs	r1, #1
 800098e:	e7f1      	b.n	8000974 <__aeabi_fdiv+0xfc>
 8000990:	230c      	movs	r3, #12
 8000992:	4699      	mov	r9, r3
 8000994:	3b09      	subs	r3, #9
 8000996:	26ff      	movs	r6, #255	; 0xff
 8000998:	469b      	mov	fp, r3
 800099a:	e785      	b.n	80008a8 <__aeabi_fdiv+0x30>
 800099c:	0020      	movs	r0, r4
 800099e:	f002 faed 	bl	8002f7c <__clzsi2>
 80009a2:	2676      	movs	r6, #118	; 0x76
 80009a4:	1f43      	subs	r3, r0, #5
 80009a6:	409c      	lsls	r4, r3
 80009a8:	2300      	movs	r3, #0
 80009aa:	4276      	negs	r6, r6
 80009ac:	1a36      	subs	r6, r6, r0
 80009ae:	4699      	mov	r9, r3
 80009b0:	469b      	mov	fp, r3
 80009b2:	e779      	b.n	80008a8 <__aeabi_fdiv+0x30>
 80009b4:	464a      	mov	r2, r9
 80009b6:	2303      	movs	r3, #3
 80009b8:	431a      	orrs	r2, r3
 80009ba:	4691      	mov	r9, r2
 80009bc:	2103      	movs	r1, #3
 80009be:	e786      	b.n	80008ce <__aeabi_fdiv+0x56>
 80009c0:	0028      	movs	r0, r5
 80009c2:	f002 fadb 	bl	8002f7c <__clzsi2>
 80009c6:	1f43      	subs	r3, r0, #5
 80009c8:	1836      	adds	r6, r6, r0
 80009ca:	409d      	lsls	r5, r3
 80009cc:	3676      	adds	r6, #118	; 0x76
 80009ce:	2100      	movs	r1, #0
 80009d0:	e77d      	b.n	80008ce <__aeabi_fdiv+0x56>
 80009d2:	2480      	movs	r4, #128	; 0x80
 80009d4:	2300      	movs	r3, #0
 80009d6:	03e4      	lsls	r4, r4, #15
 80009d8:	22ff      	movs	r2, #255	; 0xff
 80009da:	e7ac      	b.n	8000936 <__aeabi_fdiv+0xbe>
 80009dc:	2500      	movs	r5, #0
 80009de:	2380      	movs	r3, #128	; 0x80
 80009e0:	03db      	lsls	r3, r3, #15
 80009e2:	421c      	tst	r4, r3
 80009e4:	d028      	beq.n	8000a38 <__aeabi_fdiv+0x1c0>
 80009e6:	421d      	tst	r5, r3
 80009e8:	d126      	bne.n	8000a38 <__aeabi_fdiv+0x1c0>
 80009ea:	432b      	orrs	r3, r5
 80009ec:	025c      	lsls	r4, r3, #9
 80009ee:	0a64      	lsrs	r4, r4, #9
 80009f0:	4643      	mov	r3, r8
 80009f2:	22ff      	movs	r2, #255	; 0xff
 80009f4:	e79f      	b.n	8000936 <__aeabi_fdiv+0xbe>
 80009f6:	0162      	lsls	r2, r4, #5
 80009f8:	016c      	lsls	r4, r5, #5
 80009fa:	42a2      	cmp	r2, r4
 80009fc:	d224      	bcs.n	8000a48 <__aeabi_fdiv+0x1d0>
 80009fe:	211b      	movs	r1, #27
 8000a00:	2500      	movs	r5, #0
 8000a02:	3e01      	subs	r6, #1
 8000a04:	2701      	movs	r7, #1
 8000a06:	0010      	movs	r0, r2
 8000a08:	006d      	lsls	r5, r5, #1
 8000a0a:	0052      	lsls	r2, r2, #1
 8000a0c:	2800      	cmp	r0, #0
 8000a0e:	db01      	blt.n	8000a14 <__aeabi_fdiv+0x19c>
 8000a10:	4294      	cmp	r4, r2
 8000a12:	d801      	bhi.n	8000a18 <__aeabi_fdiv+0x1a0>
 8000a14:	1b12      	subs	r2, r2, r4
 8000a16:	433d      	orrs	r5, r7
 8000a18:	3901      	subs	r1, #1
 8000a1a:	2900      	cmp	r1, #0
 8000a1c:	d1f3      	bne.n	8000a06 <__aeabi_fdiv+0x18e>
 8000a1e:	0014      	movs	r4, r2
 8000a20:	1e62      	subs	r2, r4, #1
 8000a22:	4194      	sbcs	r4, r2
 8000a24:	4325      	orrs	r5, r4
 8000a26:	e76d      	b.n	8000904 <__aeabi_fdiv+0x8c>
 8000a28:	46ba      	mov	sl, r7
 8000a2a:	4659      	mov	r1, fp
 8000a2c:	0025      	movs	r5, r4
 8000a2e:	4653      	mov	r3, sl
 8000a30:	2902      	cmp	r1, #2
 8000a32:	d000      	beq.n	8000a36 <__aeabi_fdiv+0x1be>
 8000a34:	e761      	b.n	80008fa <__aeabi_fdiv+0x82>
 8000a36:	e77c      	b.n	8000932 <__aeabi_fdiv+0xba>
 8000a38:	2380      	movs	r3, #128	; 0x80
 8000a3a:	03db      	lsls	r3, r3, #15
 8000a3c:	431c      	orrs	r4, r3
 8000a3e:	0264      	lsls	r4, r4, #9
 8000a40:	0a64      	lsrs	r4, r4, #9
 8000a42:	003b      	movs	r3, r7
 8000a44:	22ff      	movs	r2, #255	; 0xff
 8000a46:	e776      	b.n	8000936 <__aeabi_fdiv+0xbe>
 8000a48:	1b12      	subs	r2, r2, r4
 8000a4a:	211a      	movs	r1, #26
 8000a4c:	2501      	movs	r5, #1
 8000a4e:	e7d9      	b.n	8000a04 <__aeabi_fdiv+0x18c>
 8000a50:	369e      	adds	r6, #158	; 0x9e
 8000a52:	002a      	movs	r2, r5
 8000a54:	40b5      	lsls	r5, r6
 8000a56:	002c      	movs	r4, r5
 8000a58:	40c2      	lsrs	r2, r0
 8000a5a:	1e65      	subs	r5, r4, #1
 8000a5c:	41ac      	sbcs	r4, r5
 8000a5e:	4314      	orrs	r4, r2
 8000a60:	0762      	lsls	r2, r4, #29
 8000a62:	d004      	beq.n	8000a6e <__aeabi_fdiv+0x1f6>
 8000a64:	220f      	movs	r2, #15
 8000a66:	4022      	ands	r2, r4
 8000a68:	2a04      	cmp	r2, #4
 8000a6a:	d000      	beq.n	8000a6e <__aeabi_fdiv+0x1f6>
 8000a6c:	3404      	adds	r4, #4
 8000a6e:	0162      	lsls	r2, r4, #5
 8000a70:	d403      	bmi.n	8000a7a <__aeabi_fdiv+0x202>
 8000a72:	01a4      	lsls	r4, r4, #6
 8000a74:	0a64      	lsrs	r4, r4, #9
 8000a76:	2200      	movs	r2, #0
 8000a78:	e75d      	b.n	8000936 <__aeabi_fdiv+0xbe>
 8000a7a:	2201      	movs	r2, #1
 8000a7c:	2400      	movs	r4, #0
 8000a7e:	e75a      	b.n	8000936 <__aeabi_fdiv+0xbe>
 8000a80:	2480      	movs	r4, #128	; 0x80
 8000a82:	03e4      	lsls	r4, r4, #15
 8000a84:	432c      	orrs	r4, r5
 8000a86:	0264      	lsls	r4, r4, #9
 8000a88:	0a64      	lsrs	r4, r4, #9
 8000a8a:	22ff      	movs	r2, #255	; 0xff
 8000a8c:	e753      	b.n	8000936 <__aeabi_fdiv+0xbe>
 8000a8e:	46c0      	nop			; (mov r8, r8)
 8000a90:	08009494 	.word	0x08009494
 8000a94:	f7ffffff 	.word	0xf7ffffff
 8000a98:	080094d4 	.word	0x080094d4

08000a9c <__eqsf2>:
 8000a9c:	b570      	push	{r4, r5, r6, lr}
 8000a9e:	0042      	lsls	r2, r0, #1
 8000aa0:	024e      	lsls	r6, r1, #9
 8000aa2:	004c      	lsls	r4, r1, #1
 8000aa4:	0245      	lsls	r5, r0, #9
 8000aa6:	0a6d      	lsrs	r5, r5, #9
 8000aa8:	0e12      	lsrs	r2, r2, #24
 8000aaa:	0fc3      	lsrs	r3, r0, #31
 8000aac:	0a76      	lsrs	r6, r6, #9
 8000aae:	0e24      	lsrs	r4, r4, #24
 8000ab0:	0fc9      	lsrs	r1, r1, #31
 8000ab2:	2aff      	cmp	r2, #255	; 0xff
 8000ab4:	d00f      	beq.n	8000ad6 <__eqsf2+0x3a>
 8000ab6:	2cff      	cmp	r4, #255	; 0xff
 8000ab8:	d011      	beq.n	8000ade <__eqsf2+0x42>
 8000aba:	2001      	movs	r0, #1
 8000abc:	42a2      	cmp	r2, r4
 8000abe:	d000      	beq.n	8000ac2 <__eqsf2+0x26>
 8000ac0:	bd70      	pop	{r4, r5, r6, pc}
 8000ac2:	42b5      	cmp	r5, r6
 8000ac4:	d1fc      	bne.n	8000ac0 <__eqsf2+0x24>
 8000ac6:	428b      	cmp	r3, r1
 8000ac8:	d00d      	beq.n	8000ae6 <__eqsf2+0x4a>
 8000aca:	2a00      	cmp	r2, #0
 8000acc:	d1f8      	bne.n	8000ac0 <__eqsf2+0x24>
 8000ace:	0028      	movs	r0, r5
 8000ad0:	1e45      	subs	r5, r0, #1
 8000ad2:	41a8      	sbcs	r0, r5
 8000ad4:	e7f4      	b.n	8000ac0 <__eqsf2+0x24>
 8000ad6:	2001      	movs	r0, #1
 8000ad8:	2d00      	cmp	r5, #0
 8000ada:	d1f1      	bne.n	8000ac0 <__eqsf2+0x24>
 8000adc:	e7eb      	b.n	8000ab6 <__eqsf2+0x1a>
 8000ade:	2001      	movs	r0, #1
 8000ae0:	2e00      	cmp	r6, #0
 8000ae2:	d1ed      	bne.n	8000ac0 <__eqsf2+0x24>
 8000ae4:	e7e9      	b.n	8000aba <__eqsf2+0x1e>
 8000ae6:	2000      	movs	r0, #0
 8000ae8:	e7ea      	b.n	8000ac0 <__eqsf2+0x24>
 8000aea:	46c0      	nop			; (mov r8, r8)

08000aec <__gesf2>:
 8000aec:	b570      	push	{r4, r5, r6, lr}
 8000aee:	004a      	lsls	r2, r1, #1
 8000af0:	024e      	lsls	r6, r1, #9
 8000af2:	0245      	lsls	r5, r0, #9
 8000af4:	0044      	lsls	r4, r0, #1
 8000af6:	0a6d      	lsrs	r5, r5, #9
 8000af8:	0e24      	lsrs	r4, r4, #24
 8000afa:	0fc3      	lsrs	r3, r0, #31
 8000afc:	0a76      	lsrs	r6, r6, #9
 8000afe:	0e12      	lsrs	r2, r2, #24
 8000b00:	0fc9      	lsrs	r1, r1, #31
 8000b02:	2cff      	cmp	r4, #255	; 0xff
 8000b04:	d015      	beq.n	8000b32 <__gesf2+0x46>
 8000b06:	2aff      	cmp	r2, #255	; 0xff
 8000b08:	d00e      	beq.n	8000b28 <__gesf2+0x3c>
 8000b0a:	2c00      	cmp	r4, #0
 8000b0c:	d115      	bne.n	8000b3a <__gesf2+0x4e>
 8000b0e:	2a00      	cmp	r2, #0
 8000b10:	d101      	bne.n	8000b16 <__gesf2+0x2a>
 8000b12:	2e00      	cmp	r6, #0
 8000b14:	d01c      	beq.n	8000b50 <__gesf2+0x64>
 8000b16:	2d00      	cmp	r5, #0
 8000b18:	d014      	beq.n	8000b44 <__gesf2+0x58>
 8000b1a:	428b      	cmp	r3, r1
 8000b1c:	d027      	beq.n	8000b6e <__gesf2+0x82>
 8000b1e:	2002      	movs	r0, #2
 8000b20:	3b01      	subs	r3, #1
 8000b22:	4018      	ands	r0, r3
 8000b24:	3801      	subs	r0, #1
 8000b26:	bd70      	pop	{r4, r5, r6, pc}
 8000b28:	2e00      	cmp	r6, #0
 8000b2a:	d0ee      	beq.n	8000b0a <__gesf2+0x1e>
 8000b2c:	2002      	movs	r0, #2
 8000b2e:	4240      	negs	r0, r0
 8000b30:	e7f9      	b.n	8000b26 <__gesf2+0x3a>
 8000b32:	2d00      	cmp	r5, #0
 8000b34:	d1fa      	bne.n	8000b2c <__gesf2+0x40>
 8000b36:	2aff      	cmp	r2, #255	; 0xff
 8000b38:	d00e      	beq.n	8000b58 <__gesf2+0x6c>
 8000b3a:	2a00      	cmp	r2, #0
 8000b3c:	d10e      	bne.n	8000b5c <__gesf2+0x70>
 8000b3e:	2e00      	cmp	r6, #0
 8000b40:	d0ed      	beq.n	8000b1e <__gesf2+0x32>
 8000b42:	e00b      	b.n	8000b5c <__gesf2+0x70>
 8000b44:	2301      	movs	r3, #1
 8000b46:	3901      	subs	r1, #1
 8000b48:	4399      	bics	r1, r3
 8000b4a:	0008      	movs	r0, r1
 8000b4c:	3001      	adds	r0, #1
 8000b4e:	e7ea      	b.n	8000b26 <__gesf2+0x3a>
 8000b50:	2000      	movs	r0, #0
 8000b52:	2d00      	cmp	r5, #0
 8000b54:	d0e7      	beq.n	8000b26 <__gesf2+0x3a>
 8000b56:	e7e2      	b.n	8000b1e <__gesf2+0x32>
 8000b58:	2e00      	cmp	r6, #0
 8000b5a:	d1e7      	bne.n	8000b2c <__gesf2+0x40>
 8000b5c:	428b      	cmp	r3, r1
 8000b5e:	d1de      	bne.n	8000b1e <__gesf2+0x32>
 8000b60:	4294      	cmp	r4, r2
 8000b62:	dd05      	ble.n	8000b70 <__gesf2+0x84>
 8000b64:	2102      	movs	r1, #2
 8000b66:	1e58      	subs	r0, r3, #1
 8000b68:	4008      	ands	r0, r1
 8000b6a:	3801      	subs	r0, #1
 8000b6c:	e7db      	b.n	8000b26 <__gesf2+0x3a>
 8000b6e:	2400      	movs	r4, #0
 8000b70:	42a2      	cmp	r2, r4
 8000b72:	dc04      	bgt.n	8000b7e <__gesf2+0x92>
 8000b74:	42b5      	cmp	r5, r6
 8000b76:	d8d2      	bhi.n	8000b1e <__gesf2+0x32>
 8000b78:	2000      	movs	r0, #0
 8000b7a:	42b5      	cmp	r5, r6
 8000b7c:	d2d3      	bcs.n	8000b26 <__gesf2+0x3a>
 8000b7e:	1e58      	subs	r0, r3, #1
 8000b80:	2301      	movs	r3, #1
 8000b82:	4398      	bics	r0, r3
 8000b84:	3001      	adds	r0, #1
 8000b86:	e7ce      	b.n	8000b26 <__gesf2+0x3a>

08000b88 <__lesf2>:
 8000b88:	b530      	push	{r4, r5, lr}
 8000b8a:	0042      	lsls	r2, r0, #1
 8000b8c:	0244      	lsls	r4, r0, #9
 8000b8e:	024d      	lsls	r5, r1, #9
 8000b90:	0fc3      	lsrs	r3, r0, #31
 8000b92:	0048      	lsls	r0, r1, #1
 8000b94:	0a64      	lsrs	r4, r4, #9
 8000b96:	0e12      	lsrs	r2, r2, #24
 8000b98:	0a6d      	lsrs	r5, r5, #9
 8000b9a:	0e00      	lsrs	r0, r0, #24
 8000b9c:	0fc9      	lsrs	r1, r1, #31
 8000b9e:	2aff      	cmp	r2, #255	; 0xff
 8000ba0:	d012      	beq.n	8000bc8 <__lesf2+0x40>
 8000ba2:	28ff      	cmp	r0, #255	; 0xff
 8000ba4:	d00c      	beq.n	8000bc0 <__lesf2+0x38>
 8000ba6:	2a00      	cmp	r2, #0
 8000ba8:	d112      	bne.n	8000bd0 <__lesf2+0x48>
 8000baa:	2800      	cmp	r0, #0
 8000bac:	d119      	bne.n	8000be2 <__lesf2+0x5a>
 8000bae:	2d00      	cmp	r5, #0
 8000bb0:	d117      	bne.n	8000be2 <__lesf2+0x5a>
 8000bb2:	2c00      	cmp	r4, #0
 8000bb4:	d02b      	beq.n	8000c0e <__lesf2+0x86>
 8000bb6:	2002      	movs	r0, #2
 8000bb8:	3b01      	subs	r3, #1
 8000bba:	4018      	ands	r0, r3
 8000bbc:	3801      	subs	r0, #1
 8000bbe:	e026      	b.n	8000c0e <__lesf2+0x86>
 8000bc0:	2d00      	cmp	r5, #0
 8000bc2:	d0f0      	beq.n	8000ba6 <__lesf2+0x1e>
 8000bc4:	2002      	movs	r0, #2
 8000bc6:	e022      	b.n	8000c0e <__lesf2+0x86>
 8000bc8:	2c00      	cmp	r4, #0
 8000bca:	d1fb      	bne.n	8000bc4 <__lesf2+0x3c>
 8000bcc:	28ff      	cmp	r0, #255	; 0xff
 8000bce:	d01f      	beq.n	8000c10 <__lesf2+0x88>
 8000bd0:	2800      	cmp	r0, #0
 8000bd2:	d11f      	bne.n	8000c14 <__lesf2+0x8c>
 8000bd4:	2d00      	cmp	r5, #0
 8000bd6:	d11d      	bne.n	8000c14 <__lesf2+0x8c>
 8000bd8:	2002      	movs	r0, #2
 8000bda:	3b01      	subs	r3, #1
 8000bdc:	4018      	ands	r0, r3
 8000bde:	3801      	subs	r0, #1
 8000be0:	e015      	b.n	8000c0e <__lesf2+0x86>
 8000be2:	2c00      	cmp	r4, #0
 8000be4:	d00e      	beq.n	8000c04 <__lesf2+0x7c>
 8000be6:	428b      	cmp	r3, r1
 8000be8:	d1e5      	bne.n	8000bb6 <__lesf2+0x2e>
 8000bea:	2200      	movs	r2, #0
 8000bec:	4290      	cmp	r0, r2
 8000bee:	dc04      	bgt.n	8000bfa <__lesf2+0x72>
 8000bf0:	42ac      	cmp	r4, r5
 8000bf2:	d8e0      	bhi.n	8000bb6 <__lesf2+0x2e>
 8000bf4:	2000      	movs	r0, #0
 8000bf6:	42ac      	cmp	r4, r5
 8000bf8:	d209      	bcs.n	8000c0e <__lesf2+0x86>
 8000bfa:	1e58      	subs	r0, r3, #1
 8000bfc:	2301      	movs	r3, #1
 8000bfe:	4398      	bics	r0, r3
 8000c00:	3001      	adds	r0, #1
 8000c02:	e004      	b.n	8000c0e <__lesf2+0x86>
 8000c04:	2301      	movs	r3, #1
 8000c06:	3901      	subs	r1, #1
 8000c08:	4399      	bics	r1, r3
 8000c0a:	0008      	movs	r0, r1
 8000c0c:	3001      	adds	r0, #1
 8000c0e:	bd30      	pop	{r4, r5, pc}
 8000c10:	2d00      	cmp	r5, #0
 8000c12:	d1d7      	bne.n	8000bc4 <__lesf2+0x3c>
 8000c14:	428b      	cmp	r3, r1
 8000c16:	d1ce      	bne.n	8000bb6 <__lesf2+0x2e>
 8000c18:	4282      	cmp	r2, r0
 8000c1a:	dde7      	ble.n	8000bec <__lesf2+0x64>
 8000c1c:	2102      	movs	r1, #2
 8000c1e:	1e58      	subs	r0, r3, #1
 8000c20:	4008      	ands	r0, r1
 8000c22:	3801      	subs	r0, #1
 8000c24:	e7f3      	b.n	8000c0e <__lesf2+0x86>
 8000c26:	46c0      	nop			; (mov r8, r8)

08000c28 <__aeabi_fmul>:
 8000c28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c2a:	464e      	mov	r6, r9
 8000c2c:	4657      	mov	r7, sl
 8000c2e:	4645      	mov	r5, r8
 8000c30:	46de      	mov	lr, fp
 8000c32:	b5e0      	push	{r5, r6, r7, lr}
 8000c34:	0243      	lsls	r3, r0, #9
 8000c36:	0a5b      	lsrs	r3, r3, #9
 8000c38:	0045      	lsls	r5, r0, #1
 8000c3a:	b083      	sub	sp, #12
 8000c3c:	1c0f      	adds	r7, r1, #0
 8000c3e:	4699      	mov	r9, r3
 8000c40:	0e2d      	lsrs	r5, r5, #24
 8000c42:	0fc6      	lsrs	r6, r0, #31
 8000c44:	2d00      	cmp	r5, #0
 8000c46:	d057      	beq.n	8000cf8 <__aeabi_fmul+0xd0>
 8000c48:	2dff      	cmp	r5, #255	; 0xff
 8000c4a:	d024      	beq.n	8000c96 <__aeabi_fmul+0x6e>
 8000c4c:	2080      	movs	r0, #128	; 0x80
 8000c4e:	00db      	lsls	r3, r3, #3
 8000c50:	04c0      	lsls	r0, r0, #19
 8000c52:	4318      	orrs	r0, r3
 8000c54:	2300      	movs	r3, #0
 8000c56:	4681      	mov	r9, r0
 8000c58:	469a      	mov	sl, r3
 8000c5a:	469b      	mov	fp, r3
 8000c5c:	3d7f      	subs	r5, #127	; 0x7f
 8000c5e:	027c      	lsls	r4, r7, #9
 8000c60:	007a      	lsls	r2, r7, #1
 8000c62:	0ffb      	lsrs	r3, r7, #31
 8000c64:	0a64      	lsrs	r4, r4, #9
 8000c66:	0e12      	lsrs	r2, r2, #24
 8000c68:	4698      	mov	r8, r3
 8000c6a:	d023      	beq.n	8000cb4 <__aeabi_fmul+0x8c>
 8000c6c:	2aff      	cmp	r2, #255	; 0xff
 8000c6e:	d04b      	beq.n	8000d08 <__aeabi_fmul+0xe0>
 8000c70:	00e3      	lsls	r3, r4, #3
 8000c72:	2480      	movs	r4, #128	; 0x80
 8000c74:	2000      	movs	r0, #0
 8000c76:	04e4      	lsls	r4, r4, #19
 8000c78:	3a7f      	subs	r2, #127	; 0x7f
 8000c7a:	431c      	orrs	r4, r3
 8000c7c:	18ad      	adds	r5, r5, r2
 8000c7e:	1c6b      	adds	r3, r5, #1
 8000c80:	4647      	mov	r7, r8
 8000c82:	9301      	str	r3, [sp, #4]
 8000c84:	4653      	mov	r3, sl
 8000c86:	4077      	eors	r7, r6
 8000c88:	003a      	movs	r2, r7
 8000c8a:	2b0f      	cmp	r3, #15
 8000c8c:	d848      	bhi.n	8000d20 <__aeabi_fmul+0xf8>
 8000c8e:	497d      	ldr	r1, [pc, #500]	; (8000e84 <__aeabi_fmul+0x25c>)
 8000c90:	009b      	lsls	r3, r3, #2
 8000c92:	58cb      	ldr	r3, [r1, r3]
 8000c94:	469f      	mov	pc, r3
 8000c96:	2b00      	cmp	r3, #0
 8000c98:	d000      	beq.n	8000c9c <__aeabi_fmul+0x74>
 8000c9a:	e085      	b.n	8000da8 <__aeabi_fmul+0x180>
 8000c9c:	3308      	adds	r3, #8
 8000c9e:	469a      	mov	sl, r3
 8000ca0:	3b06      	subs	r3, #6
 8000ca2:	469b      	mov	fp, r3
 8000ca4:	027c      	lsls	r4, r7, #9
 8000ca6:	007a      	lsls	r2, r7, #1
 8000ca8:	0ffb      	lsrs	r3, r7, #31
 8000caa:	25ff      	movs	r5, #255	; 0xff
 8000cac:	0a64      	lsrs	r4, r4, #9
 8000cae:	0e12      	lsrs	r2, r2, #24
 8000cb0:	4698      	mov	r8, r3
 8000cb2:	d1db      	bne.n	8000c6c <__aeabi_fmul+0x44>
 8000cb4:	2c00      	cmp	r4, #0
 8000cb6:	d000      	beq.n	8000cba <__aeabi_fmul+0x92>
 8000cb8:	e090      	b.n	8000ddc <__aeabi_fmul+0x1b4>
 8000cba:	4652      	mov	r2, sl
 8000cbc:	2301      	movs	r3, #1
 8000cbe:	431a      	orrs	r2, r3
 8000cc0:	4692      	mov	sl, r2
 8000cc2:	2001      	movs	r0, #1
 8000cc4:	e7db      	b.n	8000c7e <__aeabi_fmul+0x56>
 8000cc6:	464c      	mov	r4, r9
 8000cc8:	4658      	mov	r0, fp
 8000cca:	0017      	movs	r7, r2
 8000ccc:	2802      	cmp	r0, #2
 8000cce:	d024      	beq.n	8000d1a <__aeabi_fmul+0xf2>
 8000cd0:	2803      	cmp	r0, #3
 8000cd2:	d100      	bne.n	8000cd6 <__aeabi_fmul+0xae>
 8000cd4:	e0cf      	b.n	8000e76 <__aeabi_fmul+0x24e>
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	2300      	movs	r3, #0
 8000cda:	2801      	cmp	r0, #1
 8000cdc:	d14d      	bne.n	8000d7a <__aeabi_fmul+0x152>
 8000cde:	0258      	lsls	r0, r3, #9
 8000ce0:	05d2      	lsls	r2, r2, #23
 8000ce2:	0a40      	lsrs	r0, r0, #9
 8000ce4:	07ff      	lsls	r7, r7, #31
 8000ce6:	4310      	orrs	r0, r2
 8000ce8:	4338      	orrs	r0, r7
 8000cea:	b003      	add	sp, #12
 8000cec:	bc3c      	pop	{r2, r3, r4, r5}
 8000cee:	4690      	mov	r8, r2
 8000cf0:	4699      	mov	r9, r3
 8000cf2:	46a2      	mov	sl, r4
 8000cf4:	46ab      	mov	fp, r5
 8000cf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cf8:	2b00      	cmp	r3, #0
 8000cfa:	d15b      	bne.n	8000db4 <__aeabi_fmul+0x18c>
 8000cfc:	2304      	movs	r3, #4
 8000cfe:	469a      	mov	sl, r3
 8000d00:	3b03      	subs	r3, #3
 8000d02:	2500      	movs	r5, #0
 8000d04:	469b      	mov	fp, r3
 8000d06:	e7aa      	b.n	8000c5e <__aeabi_fmul+0x36>
 8000d08:	35ff      	adds	r5, #255	; 0xff
 8000d0a:	2c00      	cmp	r4, #0
 8000d0c:	d160      	bne.n	8000dd0 <__aeabi_fmul+0x1a8>
 8000d0e:	4652      	mov	r2, sl
 8000d10:	2302      	movs	r3, #2
 8000d12:	431a      	orrs	r2, r3
 8000d14:	4692      	mov	sl, r2
 8000d16:	2002      	movs	r0, #2
 8000d18:	e7b1      	b.n	8000c7e <__aeabi_fmul+0x56>
 8000d1a:	22ff      	movs	r2, #255	; 0xff
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	e7de      	b.n	8000cde <__aeabi_fmul+0xb6>
 8000d20:	464b      	mov	r3, r9
 8000d22:	0c1b      	lsrs	r3, r3, #16
 8000d24:	469c      	mov	ip, r3
 8000d26:	464b      	mov	r3, r9
 8000d28:	0426      	lsls	r6, r4, #16
 8000d2a:	0c36      	lsrs	r6, r6, #16
 8000d2c:	0418      	lsls	r0, r3, #16
 8000d2e:	4661      	mov	r1, ip
 8000d30:	0033      	movs	r3, r6
 8000d32:	0c22      	lsrs	r2, r4, #16
 8000d34:	4664      	mov	r4, ip
 8000d36:	0c00      	lsrs	r0, r0, #16
 8000d38:	4343      	muls	r3, r0
 8000d3a:	434e      	muls	r6, r1
 8000d3c:	4350      	muls	r0, r2
 8000d3e:	4354      	muls	r4, r2
 8000d40:	1980      	adds	r0, r0, r6
 8000d42:	0c1a      	lsrs	r2, r3, #16
 8000d44:	1812      	adds	r2, r2, r0
 8000d46:	4296      	cmp	r6, r2
 8000d48:	d903      	bls.n	8000d52 <__aeabi_fmul+0x12a>
 8000d4a:	2180      	movs	r1, #128	; 0x80
 8000d4c:	0249      	lsls	r1, r1, #9
 8000d4e:	468c      	mov	ip, r1
 8000d50:	4464      	add	r4, ip
 8000d52:	041b      	lsls	r3, r3, #16
 8000d54:	0c1b      	lsrs	r3, r3, #16
 8000d56:	0410      	lsls	r0, r2, #16
 8000d58:	18c0      	adds	r0, r0, r3
 8000d5a:	0183      	lsls	r3, r0, #6
 8000d5c:	1e5e      	subs	r6, r3, #1
 8000d5e:	41b3      	sbcs	r3, r6
 8000d60:	0e80      	lsrs	r0, r0, #26
 8000d62:	4318      	orrs	r0, r3
 8000d64:	0c13      	lsrs	r3, r2, #16
 8000d66:	191b      	adds	r3, r3, r4
 8000d68:	019b      	lsls	r3, r3, #6
 8000d6a:	4303      	orrs	r3, r0
 8000d6c:	001c      	movs	r4, r3
 8000d6e:	0123      	lsls	r3, r4, #4
 8000d70:	d579      	bpl.n	8000e66 <__aeabi_fmul+0x23e>
 8000d72:	2301      	movs	r3, #1
 8000d74:	0862      	lsrs	r2, r4, #1
 8000d76:	401c      	ands	r4, r3
 8000d78:	4314      	orrs	r4, r2
 8000d7a:	9a01      	ldr	r2, [sp, #4]
 8000d7c:	327f      	adds	r2, #127	; 0x7f
 8000d7e:	2a00      	cmp	r2, #0
 8000d80:	dd4d      	ble.n	8000e1e <__aeabi_fmul+0x1f6>
 8000d82:	0763      	lsls	r3, r4, #29
 8000d84:	d004      	beq.n	8000d90 <__aeabi_fmul+0x168>
 8000d86:	230f      	movs	r3, #15
 8000d88:	4023      	ands	r3, r4
 8000d8a:	2b04      	cmp	r3, #4
 8000d8c:	d000      	beq.n	8000d90 <__aeabi_fmul+0x168>
 8000d8e:	3404      	adds	r4, #4
 8000d90:	0123      	lsls	r3, r4, #4
 8000d92:	d503      	bpl.n	8000d9c <__aeabi_fmul+0x174>
 8000d94:	4b3c      	ldr	r3, [pc, #240]	; (8000e88 <__aeabi_fmul+0x260>)
 8000d96:	9a01      	ldr	r2, [sp, #4]
 8000d98:	401c      	ands	r4, r3
 8000d9a:	3280      	adds	r2, #128	; 0x80
 8000d9c:	2afe      	cmp	r2, #254	; 0xfe
 8000d9e:	dcbc      	bgt.n	8000d1a <__aeabi_fmul+0xf2>
 8000da0:	01a3      	lsls	r3, r4, #6
 8000da2:	0a5b      	lsrs	r3, r3, #9
 8000da4:	b2d2      	uxtb	r2, r2
 8000da6:	e79a      	b.n	8000cde <__aeabi_fmul+0xb6>
 8000da8:	230c      	movs	r3, #12
 8000daa:	469a      	mov	sl, r3
 8000dac:	3b09      	subs	r3, #9
 8000dae:	25ff      	movs	r5, #255	; 0xff
 8000db0:	469b      	mov	fp, r3
 8000db2:	e754      	b.n	8000c5e <__aeabi_fmul+0x36>
 8000db4:	0018      	movs	r0, r3
 8000db6:	f002 f8e1 	bl	8002f7c <__clzsi2>
 8000dba:	464a      	mov	r2, r9
 8000dbc:	1f43      	subs	r3, r0, #5
 8000dbe:	2576      	movs	r5, #118	; 0x76
 8000dc0:	409a      	lsls	r2, r3
 8000dc2:	2300      	movs	r3, #0
 8000dc4:	426d      	negs	r5, r5
 8000dc6:	4691      	mov	r9, r2
 8000dc8:	1a2d      	subs	r5, r5, r0
 8000dca:	469a      	mov	sl, r3
 8000dcc:	469b      	mov	fp, r3
 8000dce:	e746      	b.n	8000c5e <__aeabi_fmul+0x36>
 8000dd0:	4652      	mov	r2, sl
 8000dd2:	2303      	movs	r3, #3
 8000dd4:	431a      	orrs	r2, r3
 8000dd6:	4692      	mov	sl, r2
 8000dd8:	2003      	movs	r0, #3
 8000dda:	e750      	b.n	8000c7e <__aeabi_fmul+0x56>
 8000ddc:	0020      	movs	r0, r4
 8000dde:	f002 f8cd 	bl	8002f7c <__clzsi2>
 8000de2:	1f43      	subs	r3, r0, #5
 8000de4:	1a2d      	subs	r5, r5, r0
 8000de6:	409c      	lsls	r4, r3
 8000de8:	3d76      	subs	r5, #118	; 0x76
 8000dea:	2000      	movs	r0, #0
 8000dec:	e747      	b.n	8000c7e <__aeabi_fmul+0x56>
 8000dee:	2380      	movs	r3, #128	; 0x80
 8000df0:	2700      	movs	r7, #0
 8000df2:	03db      	lsls	r3, r3, #15
 8000df4:	22ff      	movs	r2, #255	; 0xff
 8000df6:	e772      	b.n	8000cde <__aeabi_fmul+0xb6>
 8000df8:	4642      	mov	r2, r8
 8000dfa:	e766      	b.n	8000cca <__aeabi_fmul+0xa2>
 8000dfc:	464c      	mov	r4, r9
 8000dfe:	0032      	movs	r2, r6
 8000e00:	4658      	mov	r0, fp
 8000e02:	e762      	b.n	8000cca <__aeabi_fmul+0xa2>
 8000e04:	2380      	movs	r3, #128	; 0x80
 8000e06:	464a      	mov	r2, r9
 8000e08:	03db      	lsls	r3, r3, #15
 8000e0a:	421a      	tst	r2, r3
 8000e0c:	d022      	beq.n	8000e54 <__aeabi_fmul+0x22c>
 8000e0e:	421c      	tst	r4, r3
 8000e10:	d120      	bne.n	8000e54 <__aeabi_fmul+0x22c>
 8000e12:	4323      	orrs	r3, r4
 8000e14:	025b      	lsls	r3, r3, #9
 8000e16:	0a5b      	lsrs	r3, r3, #9
 8000e18:	4647      	mov	r7, r8
 8000e1a:	22ff      	movs	r2, #255	; 0xff
 8000e1c:	e75f      	b.n	8000cde <__aeabi_fmul+0xb6>
 8000e1e:	2301      	movs	r3, #1
 8000e20:	1a9a      	subs	r2, r3, r2
 8000e22:	2a1b      	cmp	r2, #27
 8000e24:	dc21      	bgt.n	8000e6a <__aeabi_fmul+0x242>
 8000e26:	0023      	movs	r3, r4
 8000e28:	9901      	ldr	r1, [sp, #4]
 8000e2a:	40d3      	lsrs	r3, r2
 8000e2c:	319e      	adds	r1, #158	; 0x9e
 8000e2e:	408c      	lsls	r4, r1
 8000e30:	001a      	movs	r2, r3
 8000e32:	0023      	movs	r3, r4
 8000e34:	1e5c      	subs	r4, r3, #1
 8000e36:	41a3      	sbcs	r3, r4
 8000e38:	4313      	orrs	r3, r2
 8000e3a:	075a      	lsls	r2, r3, #29
 8000e3c:	d004      	beq.n	8000e48 <__aeabi_fmul+0x220>
 8000e3e:	220f      	movs	r2, #15
 8000e40:	401a      	ands	r2, r3
 8000e42:	2a04      	cmp	r2, #4
 8000e44:	d000      	beq.n	8000e48 <__aeabi_fmul+0x220>
 8000e46:	3304      	adds	r3, #4
 8000e48:	015a      	lsls	r2, r3, #5
 8000e4a:	d411      	bmi.n	8000e70 <__aeabi_fmul+0x248>
 8000e4c:	019b      	lsls	r3, r3, #6
 8000e4e:	0a5b      	lsrs	r3, r3, #9
 8000e50:	2200      	movs	r2, #0
 8000e52:	e744      	b.n	8000cde <__aeabi_fmul+0xb6>
 8000e54:	2380      	movs	r3, #128	; 0x80
 8000e56:	464a      	mov	r2, r9
 8000e58:	03db      	lsls	r3, r3, #15
 8000e5a:	4313      	orrs	r3, r2
 8000e5c:	025b      	lsls	r3, r3, #9
 8000e5e:	0a5b      	lsrs	r3, r3, #9
 8000e60:	0037      	movs	r7, r6
 8000e62:	22ff      	movs	r2, #255	; 0xff
 8000e64:	e73b      	b.n	8000cde <__aeabi_fmul+0xb6>
 8000e66:	9501      	str	r5, [sp, #4]
 8000e68:	e787      	b.n	8000d7a <__aeabi_fmul+0x152>
 8000e6a:	2200      	movs	r2, #0
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	e736      	b.n	8000cde <__aeabi_fmul+0xb6>
 8000e70:	2201      	movs	r2, #1
 8000e72:	2300      	movs	r3, #0
 8000e74:	e733      	b.n	8000cde <__aeabi_fmul+0xb6>
 8000e76:	2380      	movs	r3, #128	; 0x80
 8000e78:	03db      	lsls	r3, r3, #15
 8000e7a:	4323      	orrs	r3, r4
 8000e7c:	025b      	lsls	r3, r3, #9
 8000e7e:	0a5b      	lsrs	r3, r3, #9
 8000e80:	22ff      	movs	r2, #255	; 0xff
 8000e82:	e72c      	b.n	8000cde <__aeabi_fmul+0xb6>
 8000e84:	08009514 	.word	0x08009514
 8000e88:	f7ffffff 	.word	0xf7ffffff

08000e8c <__aeabi_fsub>:
 8000e8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e8e:	4647      	mov	r7, r8
 8000e90:	46ce      	mov	lr, r9
 8000e92:	0044      	lsls	r4, r0, #1
 8000e94:	0fc2      	lsrs	r2, r0, #31
 8000e96:	b580      	push	{r7, lr}
 8000e98:	0247      	lsls	r7, r0, #9
 8000e9a:	0248      	lsls	r0, r1, #9
 8000e9c:	0a40      	lsrs	r0, r0, #9
 8000e9e:	4684      	mov	ip, r0
 8000ea0:	4666      	mov	r6, ip
 8000ea2:	0048      	lsls	r0, r1, #1
 8000ea4:	0a7f      	lsrs	r7, r7, #9
 8000ea6:	0e24      	lsrs	r4, r4, #24
 8000ea8:	00f6      	lsls	r6, r6, #3
 8000eaa:	0025      	movs	r5, r4
 8000eac:	4690      	mov	r8, r2
 8000eae:	00fb      	lsls	r3, r7, #3
 8000eb0:	0e00      	lsrs	r0, r0, #24
 8000eb2:	0fc9      	lsrs	r1, r1, #31
 8000eb4:	46b1      	mov	r9, r6
 8000eb6:	28ff      	cmp	r0, #255	; 0xff
 8000eb8:	d100      	bne.n	8000ebc <__aeabi_fsub+0x30>
 8000eba:	e085      	b.n	8000fc8 <__aeabi_fsub+0x13c>
 8000ebc:	2601      	movs	r6, #1
 8000ebe:	4071      	eors	r1, r6
 8000ec0:	1a26      	subs	r6, r4, r0
 8000ec2:	4291      	cmp	r1, r2
 8000ec4:	d057      	beq.n	8000f76 <__aeabi_fsub+0xea>
 8000ec6:	2e00      	cmp	r6, #0
 8000ec8:	dd43      	ble.n	8000f52 <__aeabi_fsub+0xc6>
 8000eca:	2800      	cmp	r0, #0
 8000ecc:	d000      	beq.n	8000ed0 <__aeabi_fsub+0x44>
 8000ece:	e07f      	b.n	8000fd0 <__aeabi_fsub+0x144>
 8000ed0:	4649      	mov	r1, r9
 8000ed2:	2900      	cmp	r1, #0
 8000ed4:	d100      	bne.n	8000ed8 <__aeabi_fsub+0x4c>
 8000ed6:	e0aa      	b.n	800102e <__aeabi_fsub+0x1a2>
 8000ed8:	3e01      	subs	r6, #1
 8000eda:	2e00      	cmp	r6, #0
 8000edc:	d000      	beq.n	8000ee0 <__aeabi_fsub+0x54>
 8000ede:	e0f7      	b.n	80010d0 <__aeabi_fsub+0x244>
 8000ee0:	1a5b      	subs	r3, r3, r1
 8000ee2:	015a      	lsls	r2, r3, #5
 8000ee4:	d400      	bmi.n	8000ee8 <__aeabi_fsub+0x5c>
 8000ee6:	e08b      	b.n	8001000 <__aeabi_fsub+0x174>
 8000ee8:	019b      	lsls	r3, r3, #6
 8000eea:	099c      	lsrs	r4, r3, #6
 8000eec:	0020      	movs	r0, r4
 8000eee:	f002 f845 	bl	8002f7c <__clzsi2>
 8000ef2:	3805      	subs	r0, #5
 8000ef4:	4084      	lsls	r4, r0
 8000ef6:	4285      	cmp	r5, r0
 8000ef8:	dd00      	ble.n	8000efc <__aeabi_fsub+0x70>
 8000efa:	e0d3      	b.n	80010a4 <__aeabi_fsub+0x218>
 8000efc:	1b45      	subs	r5, r0, r5
 8000efe:	0023      	movs	r3, r4
 8000f00:	2020      	movs	r0, #32
 8000f02:	3501      	adds	r5, #1
 8000f04:	40eb      	lsrs	r3, r5
 8000f06:	1b45      	subs	r5, r0, r5
 8000f08:	40ac      	lsls	r4, r5
 8000f0a:	1e62      	subs	r2, r4, #1
 8000f0c:	4194      	sbcs	r4, r2
 8000f0e:	4323      	orrs	r3, r4
 8000f10:	2407      	movs	r4, #7
 8000f12:	2500      	movs	r5, #0
 8000f14:	401c      	ands	r4, r3
 8000f16:	2201      	movs	r2, #1
 8000f18:	4641      	mov	r1, r8
 8000f1a:	400a      	ands	r2, r1
 8000f1c:	2c00      	cmp	r4, #0
 8000f1e:	d004      	beq.n	8000f2a <__aeabi_fsub+0x9e>
 8000f20:	210f      	movs	r1, #15
 8000f22:	4019      	ands	r1, r3
 8000f24:	2904      	cmp	r1, #4
 8000f26:	d000      	beq.n	8000f2a <__aeabi_fsub+0x9e>
 8000f28:	3304      	adds	r3, #4
 8000f2a:	0159      	lsls	r1, r3, #5
 8000f2c:	d400      	bmi.n	8000f30 <__aeabi_fsub+0xa4>
 8000f2e:	e080      	b.n	8001032 <__aeabi_fsub+0x1a6>
 8000f30:	3501      	adds	r5, #1
 8000f32:	b2ec      	uxtb	r4, r5
 8000f34:	2dff      	cmp	r5, #255	; 0xff
 8000f36:	d000      	beq.n	8000f3a <__aeabi_fsub+0xae>
 8000f38:	e0a3      	b.n	8001082 <__aeabi_fsub+0x1f6>
 8000f3a:	24ff      	movs	r4, #255	; 0xff
 8000f3c:	2300      	movs	r3, #0
 8000f3e:	025b      	lsls	r3, r3, #9
 8000f40:	05e4      	lsls	r4, r4, #23
 8000f42:	0a58      	lsrs	r0, r3, #9
 8000f44:	07d2      	lsls	r2, r2, #31
 8000f46:	4320      	orrs	r0, r4
 8000f48:	4310      	orrs	r0, r2
 8000f4a:	bc0c      	pop	{r2, r3}
 8000f4c:	4690      	mov	r8, r2
 8000f4e:	4699      	mov	r9, r3
 8000f50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f52:	2e00      	cmp	r6, #0
 8000f54:	d174      	bne.n	8001040 <__aeabi_fsub+0x1b4>
 8000f56:	1c60      	adds	r0, r4, #1
 8000f58:	b2c0      	uxtb	r0, r0
 8000f5a:	2801      	cmp	r0, #1
 8000f5c:	dc00      	bgt.n	8000f60 <__aeabi_fsub+0xd4>
 8000f5e:	e0a7      	b.n	80010b0 <__aeabi_fsub+0x224>
 8000f60:	464a      	mov	r2, r9
 8000f62:	1a9c      	subs	r4, r3, r2
 8000f64:	0162      	lsls	r2, r4, #5
 8000f66:	d500      	bpl.n	8000f6a <__aeabi_fsub+0xde>
 8000f68:	e0b6      	b.n	80010d8 <__aeabi_fsub+0x24c>
 8000f6a:	2c00      	cmp	r4, #0
 8000f6c:	d1be      	bne.n	8000eec <__aeabi_fsub+0x60>
 8000f6e:	2200      	movs	r2, #0
 8000f70:	2400      	movs	r4, #0
 8000f72:	2300      	movs	r3, #0
 8000f74:	e7e3      	b.n	8000f3e <__aeabi_fsub+0xb2>
 8000f76:	2e00      	cmp	r6, #0
 8000f78:	dc00      	bgt.n	8000f7c <__aeabi_fsub+0xf0>
 8000f7a:	e085      	b.n	8001088 <__aeabi_fsub+0x1fc>
 8000f7c:	2800      	cmp	r0, #0
 8000f7e:	d046      	beq.n	800100e <__aeabi_fsub+0x182>
 8000f80:	2cff      	cmp	r4, #255	; 0xff
 8000f82:	d049      	beq.n	8001018 <__aeabi_fsub+0x18c>
 8000f84:	2280      	movs	r2, #128	; 0x80
 8000f86:	4648      	mov	r0, r9
 8000f88:	04d2      	lsls	r2, r2, #19
 8000f8a:	4310      	orrs	r0, r2
 8000f8c:	4681      	mov	r9, r0
 8000f8e:	2201      	movs	r2, #1
 8000f90:	2e1b      	cmp	r6, #27
 8000f92:	dc09      	bgt.n	8000fa8 <__aeabi_fsub+0x11c>
 8000f94:	2020      	movs	r0, #32
 8000f96:	464c      	mov	r4, r9
 8000f98:	1b80      	subs	r0, r0, r6
 8000f9a:	4084      	lsls	r4, r0
 8000f9c:	464a      	mov	r2, r9
 8000f9e:	0020      	movs	r0, r4
 8000fa0:	40f2      	lsrs	r2, r6
 8000fa2:	1e44      	subs	r4, r0, #1
 8000fa4:	41a0      	sbcs	r0, r4
 8000fa6:	4302      	orrs	r2, r0
 8000fa8:	189b      	adds	r3, r3, r2
 8000faa:	015a      	lsls	r2, r3, #5
 8000fac:	d528      	bpl.n	8001000 <__aeabi_fsub+0x174>
 8000fae:	3501      	adds	r5, #1
 8000fb0:	2dff      	cmp	r5, #255	; 0xff
 8000fb2:	d100      	bne.n	8000fb6 <__aeabi_fsub+0x12a>
 8000fb4:	e0a8      	b.n	8001108 <__aeabi_fsub+0x27c>
 8000fb6:	2201      	movs	r2, #1
 8000fb8:	2407      	movs	r4, #7
 8000fba:	4994      	ldr	r1, [pc, #592]	; (800120c <__aeabi_fsub+0x380>)
 8000fbc:	401a      	ands	r2, r3
 8000fbe:	085b      	lsrs	r3, r3, #1
 8000fc0:	400b      	ands	r3, r1
 8000fc2:	4313      	orrs	r3, r2
 8000fc4:	401c      	ands	r4, r3
 8000fc6:	e7a6      	b.n	8000f16 <__aeabi_fsub+0x8a>
 8000fc8:	2e00      	cmp	r6, #0
 8000fca:	d000      	beq.n	8000fce <__aeabi_fsub+0x142>
 8000fcc:	e778      	b.n	8000ec0 <__aeabi_fsub+0x34>
 8000fce:	e775      	b.n	8000ebc <__aeabi_fsub+0x30>
 8000fd0:	2cff      	cmp	r4, #255	; 0xff
 8000fd2:	d054      	beq.n	800107e <__aeabi_fsub+0x1f2>
 8000fd4:	2280      	movs	r2, #128	; 0x80
 8000fd6:	4649      	mov	r1, r9
 8000fd8:	04d2      	lsls	r2, r2, #19
 8000fda:	4311      	orrs	r1, r2
 8000fdc:	4689      	mov	r9, r1
 8000fde:	2201      	movs	r2, #1
 8000fe0:	2e1b      	cmp	r6, #27
 8000fe2:	dc09      	bgt.n	8000ff8 <__aeabi_fsub+0x16c>
 8000fe4:	2120      	movs	r1, #32
 8000fe6:	4648      	mov	r0, r9
 8000fe8:	1b89      	subs	r1, r1, r6
 8000fea:	4088      	lsls	r0, r1
 8000fec:	464a      	mov	r2, r9
 8000fee:	0001      	movs	r1, r0
 8000ff0:	40f2      	lsrs	r2, r6
 8000ff2:	1e48      	subs	r0, r1, #1
 8000ff4:	4181      	sbcs	r1, r0
 8000ff6:	430a      	orrs	r2, r1
 8000ff8:	1a9b      	subs	r3, r3, r2
 8000ffa:	015a      	lsls	r2, r3, #5
 8000ffc:	d500      	bpl.n	8001000 <__aeabi_fsub+0x174>
 8000ffe:	e773      	b.n	8000ee8 <__aeabi_fsub+0x5c>
 8001000:	2201      	movs	r2, #1
 8001002:	4641      	mov	r1, r8
 8001004:	400a      	ands	r2, r1
 8001006:	0759      	lsls	r1, r3, #29
 8001008:	d000      	beq.n	800100c <__aeabi_fsub+0x180>
 800100a:	e789      	b.n	8000f20 <__aeabi_fsub+0x94>
 800100c:	e011      	b.n	8001032 <__aeabi_fsub+0x1a6>
 800100e:	4648      	mov	r0, r9
 8001010:	2800      	cmp	r0, #0
 8001012:	d158      	bne.n	80010c6 <__aeabi_fsub+0x23a>
 8001014:	2cff      	cmp	r4, #255	; 0xff
 8001016:	d10c      	bne.n	8001032 <__aeabi_fsub+0x1a6>
 8001018:	08db      	lsrs	r3, r3, #3
 800101a:	2b00      	cmp	r3, #0
 800101c:	d100      	bne.n	8001020 <__aeabi_fsub+0x194>
 800101e:	e78c      	b.n	8000f3a <__aeabi_fsub+0xae>
 8001020:	2080      	movs	r0, #128	; 0x80
 8001022:	03c0      	lsls	r0, r0, #15
 8001024:	4303      	orrs	r3, r0
 8001026:	025b      	lsls	r3, r3, #9
 8001028:	0a5b      	lsrs	r3, r3, #9
 800102a:	24ff      	movs	r4, #255	; 0xff
 800102c:	e787      	b.n	8000f3e <__aeabi_fsub+0xb2>
 800102e:	2cff      	cmp	r4, #255	; 0xff
 8001030:	d025      	beq.n	800107e <__aeabi_fsub+0x1f2>
 8001032:	08db      	lsrs	r3, r3, #3
 8001034:	2dff      	cmp	r5, #255	; 0xff
 8001036:	d0f0      	beq.n	800101a <__aeabi_fsub+0x18e>
 8001038:	025b      	lsls	r3, r3, #9
 800103a:	0a5b      	lsrs	r3, r3, #9
 800103c:	b2ec      	uxtb	r4, r5
 800103e:	e77e      	b.n	8000f3e <__aeabi_fsub+0xb2>
 8001040:	2c00      	cmp	r4, #0
 8001042:	d04d      	beq.n	80010e0 <__aeabi_fsub+0x254>
 8001044:	28ff      	cmp	r0, #255	; 0xff
 8001046:	d018      	beq.n	800107a <__aeabi_fsub+0x1ee>
 8001048:	2480      	movs	r4, #128	; 0x80
 800104a:	04e4      	lsls	r4, r4, #19
 800104c:	4272      	negs	r2, r6
 800104e:	4323      	orrs	r3, r4
 8001050:	2a1b      	cmp	r2, #27
 8001052:	dd00      	ble.n	8001056 <__aeabi_fsub+0x1ca>
 8001054:	e0c4      	b.n	80011e0 <__aeabi_fsub+0x354>
 8001056:	001c      	movs	r4, r3
 8001058:	2520      	movs	r5, #32
 800105a:	40d4      	lsrs	r4, r2
 800105c:	1aaa      	subs	r2, r5, r2
 800105e:	4093      	lsls	r3, r2
 8001060:	1e5a      	subs	r2, r3, #1
 8001062:	4193      	sbcs	r3, r2
 8001064:	4323      	orrs	r3, r4
 8001066:	464a      	mov	r2, r9
 8001068:	0005      	movs	r5, r0
 800106a:	1ad3      	subs	r3, r2, r3
 800106c:	4688      	mov	r8, r1
 800106e:	e738      	b.n	8000ee2 <__aeabi_fsub+0x56>
 8001070:	1c72      	adds	r2, r6, #1
 8001072:	d0f8      	beq.n	8001066 <__aeabi_fsub+0x1da>
 8001074:	43f2      	mvns	r2, r6
 8001076:	28ff      	cmp	r0, #255	; 0xff
 8001078:	d1ea      	bne.n	8001050 <__aeabi_fsub+0x1c4>
 800107a:	000a      	movs	r2, r1
 800107c:	464b      	mov	r3, r9
 800107e:	25ff      	movs	r5, #255	; 0xff
 8001080:	e7d7      	b.n	8001032 <__aeabi_fsub+0x1a6>
 8001082:	019b      	lsls	r3, r3, #6
 8001084:	0a5b      	lsrs	r3, r3, #9
 8001086:	e75a      	b.n	8000f3e <__aeabi_fsub+0xb2>
 8001088:	2e00      	cmp	r6, #0
 800108a:	d141      	bne.n	8001110 <__aeabi_fsub+0x284>
 800108c:	1c65      	adds	r5, r4, #1
 800108e:	b2e9      	uxtb	r1, r5
 8001090:	2901      	cmp	r1, #1
 8001092:	dd45      	ble.n	8001120 <__aeabi_fsub+0x294>
 8001094:	2dff      	cmp	r5, #255	; 0xff
 8001096:	d100      	bne.n	800109a <__aeabi_fsub+0x20e>
 8001098:	e74f      	b.n	8000f3a <__aeabi_fsub+0xae>
 800109a:	2407      	movs	r4, #7
 800109c:	444b      	add	r3, r9
 800109e:	085b      	lsrs	r3, r3, #1
 80010a0:	401c      	ands	r4, r3
 80010a2:	e738      	b.n	8000f16 <__aeabi_fsub+0x8a>
 80010a4:	2207      	movs	r2, #7
 80010a6:	4b5a      	ldr	r3, [pc, #360]	; (8001210 <__aeabi_fsub+0x384>)
 80010a8:	1a2d      	subs	r5, r5, r0
 80010aa:	4023      	ands	r3, r4
 80010ac:	4014      	ands	r4, r2
 80010ae:	e732      	b.n	8000f16 <__aeabi_fsub+0x8a>
 80010b0:	2c00      	cmp	r4, #0
 80010b2:	d11d      	bne.n	80010f0 <__aeabi_fsub+0x264>
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d17a      	bne.n	80011ae <__aeabi_fsub+0x322>
 80010b8:	464b      	mov	r3, r9
 80010ba:	2b00      	cmp	r3, #0
 80010bc:	d100      	bne.n	80010c0 <__aeabi_fsub+0x234>
 80010be:	e091      	b.n	80011e4 <__aeabi_fsub+0x358>
 80010c0:	000a      	movs	r2, r1
 80010c2:	2500      	movs	r5, #0
 80010c4:	e7b5      	b.n	8001032 <__aeabi_fsub+0x1a6>
 80010c6:	3e01      	subs	r6, #1
 80010c8:	2e00      	cmp	r6, #0
 80010ca:	d119      	bne.n	8001100 <__aeabi_fsub+0x274>
 80010cc:	444b      	add	r3, r9
 80010ce:	e76c      	b.n	8000faa <__aeabi_fsub+0x11e>
 80010d0:	2cff      	cmp	r4, #255	; 0xff
 80010d2:	d184      	bne.n	8000fde <__aeabi_fsub+0x152>
 80010d4:	25ff      	movs	r5, #255	; 0xff
 80010d6:	e7ac      	b.n	8001032 <__aeabi_fsub+0x1a6>
 80010d8:	464a      	mov	r2, r9
 80010da:	4688      	mov	r8, r1
 80010dc:	1ad4      	subs	r4, r2, r3
 80010de:	e705      	b.n	8000eec <__aeabi_fsub+0x60>
 80010e0:	2b00      	cmp	r3, #0
 80010e2:	d1c5      	bne.n	8001070 <__aeabi_fsub+0x1e4>
 80010e4:	000a      	movs	r2, r1
 80010e6:	28ff      	cmp	r0, #255	; 0xff
 80010e8:	d0c8      	beq.n	800107c <__aeabi_fsub+0x1f0>
 80010ea:	0005      	movs	r5, r0
 80010ec:	464b      	mov	r3, r9
 80010ee:	e7a0      	b.n	8001032 <__aeabi_fsub+0x1a6>
 80010f0:	2b00      	cmp	r3, #0
 80010f2:	d149      	bne.n	8001188 <__aeabi_fsub+0x2fc>
 80010f4:	464b      	mov	r3, r9
 80010f6:	2b00      	cmp	r3, #0
 80010f8:	d077      	beq.n	80011ea <__aeabi_fsub+0x35e>
 80010fa:	000a      	movs	r2, r1
 80010fc:	25ff      	movs	r5, #255	; 0xff
 80010fe:	e798      	b.n	8001032 <__aeabi_fsub+0x1a6>
 8001100:	2cff      	cmp	r4, #255	; 0xff
 8001102:	d000      	beq.n	8001106 <__aeabi_fsub+0x27a>
 8001104:	e743      	b.n	8000f8e <__aeabi_fsub+0x102>
 8001106:	e787      	b.n	8001018 <__aeabi_fsub+0x18c>
 8001108:	000a      	movs	r2, r1
 800110a:	24ff      	movs	r4, #255	; 0xff
 800110c:	2300      	movs	r3, #0
 800110e:	e716      	b.n	8000f3e <__aeabi_fsub+0xb2>
 8001110:	2c00      	cmp	r4, #0
 8001112:	d115      	bne.n	8001140 <__aeabi_fsub+0x2b4>
 8001114:	2b00      	cmp	r3, #0
 8001116:	d157      	bne.n	80011c8 <__aeabi_fsub+0x33c>
 8001118:	28ff      	cmp	r0, #255	; 0xff
 800111a:	d1e6      	bne.n	80010ea <__aeabi_fsub+0x25e>
 800111c:	464b      	mov	r3, r9
 800111e:	e77b      	b.n	8001018 <__aeabi_fsub+0x18c>
 8001120:	2c00      	cmp	r4, #0
 8001122:	d120      	bne.n	8001166 <__aeabi_fsub+0x2da>
 8001124:	2b00      	cmp	r3, #0
 8001126:	d057      	beq.n	80011d8 <__aeabi_fsub+0x34c>
 8001128:	4649      	mov	r1, r9
 800112a:	2900      	cmp	r1, #0
 800112c:	d053      	beq.n	80011d6 <__aeabi_fsub+0x34a>
 800112e:	444b      	add	r3, r9
 8001130:	015a      	lsls	r2, r3, #5
 8001132:	d568      	bpl.n	8001206 <__aeabi_fsub+0x37a>
 8001134:	2407      	movs	r4, #7
 8001136:	4a36      	ldr	r2, [pc, #216]	; (8001210 <__aeabi_fsub+0x384>)
 8001138:	401c      	ands	r4, r3
 800113a:	2501      	movs	r5, #1
 800113c:	4013      	ands	r3, r2
 800113e:	e6ea      	b.n	8000f16 <__aeabi_fsub+0x8a>
 8001140:	28ff      	cmp	r0, #255	; 0xff
 8001142:	d0eb      	beq.n	800111c <__aeabi_fsub+0x290>
 8001144:	2280      	movs	r2, #128	; 0x80
 8001146:	04d2      	lsls	r2, r2, #19
 8001148:	4276      	negs	r6, r6
 800114a:	4313      	orrs	r3, r2
 800114c:	2e1b      	cmp	r6, #27
 800114e:	dc53      	bgt.n	80011f8 <__aeabi_fsub+0x36c>
 8001150:	2520      	movs	r5, #32
 8001152:	1bad      	subs	r5, r5, r6
 8001154:	001a      	movs	r2, r3
 8001156:	40ab      	lsls	r3, r5
 8001158:	40f2      	lsrs	r2, r6
 800115a:	1e5c      	subs	r4, r3, #1
 800115c:	41a3      	sbcs	r3, r4
 800115e:	4313      	orrs	r3, r2
 8001160:	444b      	add	r3, r9
 8001162:	0005      	movs	r5, r0
 8001164:	e721      	b.n	8000faa <__aeabi_fsub+0x11e>
 8001166:	2b00      	cmp	r3, #0
 8001168:	d0d8      	beq.n	800111c <__aeabi_fsub+0x290>
 800116a:	4649      	mov	r1, r9
 800116c:	2900      	cmp	r1, #0
 800116e:	d100      	bne.n	8001172 <__aeabi_fsub+0x2e6>
 8001170:	e752      	b.n	8001018 <__aeabi_fsub+0x18c>
 8001172:	2180      	movs	r1, #128	; 0x80
 8001174:	03c9      	lsls	r1, r1, #15
 8001176:	420f      	tst	r7, r1
 8001178:	d100      	bne.n	800117c <__aeabi_fsub+0x2f0>
 800117a:	e74d      	b.n	8001018 <__aeabi_fsub+0x18c>
 800117c:	4660      	mov	r0, ip
 800117e:	4208      	tst	r0, r1
 8001180:	d000      	beq.n	8001184 <__aeabi_fsub+0x2f8>
 8001182:	e749      	b.n	8001018 <__aeabi_fsub+0x18c>
 8001184:	464b      	mov	r3, r9
 8001186:	e747      	b.n	8001018 <__aeabi_fsub+0x18c>
 8001188:	4648      	mov	r0, r9
 800118a:	25ff      	movs	r5, #255	; 0xff
 800118c:	2800      	cmp	r0, #0
 800118e:	d100      	bne.n	8001192 <__aeabi_fsub+0x306>
 8001190:	e74f      	b.n	8001032 <__aeabi_fsub+0x1a6>
 8001192:	2280      	movs	r2, #128	; 0x80
 8001194:	03d2      	lsls	r2, r2, #15
 8001196:	4217      	tst	r7, r2
 8001198:	d004      	beq.n	80011a4 <__aeabi_fsub+0x318>
 800119a:	4660      	mov	r0, ip
 800119c:	4210      	tst	r0, r2
 800119e:	d101      	bne.n	80011a4 <__aeabi_fsub+0x318>
 80011a0:	464b      	mov	r3, r9
 80011a2:	4688      	mov	r8, r1
 80011a4:	2201      	movs	r2, #1
 80011a6:	4641      	mov	r1, r8
 80011a8:	25ff      	movs	r5, #255	; 0xff
 80011aa:	400a      	ands	r2, r1
 80011ac:	e741      	b.n	8001032 <__aeabi_fsub+0x1a6>
 80011ae:	4648      	mov	r0, r9
 80011b0:	2800      	cmp	r0, #0
 80011b2:	d01f      	beq.n	80011f4 <__aeabi_fsub+0x368>
 80011b4:	1a1a      	subs	r2, r3, r0
 80011b6:	0150      	lsls	r0, r2, #5
 80011b8:	d520      	bpl.n	80011fc <__aeabi_fsub+0x370>
 80011ba:	464a      	mov	r2, r9
 80011bc:	2407      	movs	r4, #7
 80011be:	1ad3      	subs	r3, r2, r3
 80011c0:	401c      	ands	r4, r3
 80011c2:	4688      	mov	r8, r1
 80011c4:	2500      	movs	r5, #0
 80011c6:	e6a6      	b.n	8000f16 <__aeabi_fsub+0x8a>
 80011c8:	1c74      	adds	r4, r6, #1
 80011ca:	d0c9      	beq.n	8001160 <__aeabi_fsub+0x2d4>
 80011cc:	43f6      	mvns	r6, r6
 80011ce:	28ff      	cmp	r0, #255	; 0xff
 80011d0:	d1bc      	bne.n	800114c <__aeabi_fsub+0x2c0>
 80011d2:	464b      	mov	r3, r9
 80011d4:	e720      	b.n	8001018 <__aeabi_fsub+0x18c>
 80011d6:	4699      	mov	r9, r3
 80011d8:	464b      	mov	r3, r9
 80011da:	2500      	movs	r5, #0
 80011dc:	08db      	lsrs	r3, r3, #3
 80011de:	e72b      	b.n	8001038 <__aeabi_fsub+0x1ac>
 80011e0:	2301      	movs	r3, #1
 80011e2:	e740      	b.n	8001066 <__aeabi_fsub+0x1da>
 80011e4:	2200      	movs	r2, #0
 80011e6:	2300      	movs	r3, #0
 80011e8:	e6a9      	b.n	8000f3e <__aeabi_fsub+0xb2>
 80011ea:	2380      	movs	r3, #128	; 0x80
 80011ec:	2200      	movs	r2, #0
 80011ee:	03db      	lsls	r3, r3, #15
 80011f0:	24ff      	movs	r4, #255	; 0xff
 80011f2:	e6a4      	b.n	8000f3e <__aeabi_fsub+0xb2>
 80011f4:	2500      	movs	r5, #0
 80011f6:	e71c      	b.n	8001032 <__aeabi_fsub+0x1a6>
 80011f8:	2301      	movs	r3, #1
 80011fa:	e7b1      	b.n	8001160 <__aeabi_fsub+0x2d4>
 80011fc:	2a00      	cmp	r2, #0
 80011fe:	d0f1      	beq.n	80011e4 <__aeabi_fsub+0x358>
 8001200:	0013      	movs	r3, r2
 8001202:	2500      	movs	r5, #0
 8001204:	e6fc      	b.n	8001000 <__aeabi_fsub+0x174>
 8001206:	2500      	movs	r5, #0
 8001208:	e6fa      	b.n	8001000 <__aeabi_fsub+0x174>
 800120a:	46c0      	nop			; (mov r8, r8)
 800120c:	7dffffff 	.word	0x7dffffff
 8001210:	fbffffff 	.word	0xfbffffff

08001214 <__aeabi_ui2f>:
 8001214:	b570      	push	{r4, r5, r6, lr}
 8001216:	1e04      	subs	r4, r0, #0
 8001218:	d034      	beq.n	8001284 <__aeabi_ui2f+0x70>
 800121a:	f001 feaf 	bl	8002f7c <__clzsi2>
 800121e:	229e      	movs	r2, #158	; 0x9e
 8001220:	1a12      	subs	r2, r2, r0
 8001222:	2a96      	cmp	r2, #150	; 0x96
 8001224:	dc07      	bgt.n	8001236 <__aeabi_ui2f+0x22>
 8001226:	b2d2      	uxtb	r2, r2
 8001228:	2808      	cmp	r0, #8
 800122a:	dd2e      	ble.n	800128a <__aeabi_ui2f+0x76>
 800122c:	3808      	subs	r0, #8
 800122e:	4084      	lsls	r4, r0
 8001230:	0260      	lsls	r0, r4, #9
 8001232:	0a40      	lsrs	r0, r0, #9
 8001234:	e021      	b.n	800127a <__aeabi_ui2f+0x66>
 8001236:	2a99      	cmp	r2, #153	; 0x99
 8001238:	dd09      	ble.n	800124e <__aeabi_ui2f+0x3a>
 800123a:	0003      	movs	r3, r0
 800123c:	0021      	movs	r1, r4
 800123e:	331b      	adds	r3, #27
 8001240:	4099      	lsls	r1, r3
 8001242:	1e4b      	subs	r3, r1, #1
 8001244:	4199      	sbcs	r1, r3
 8001246:	2305      	movs	r3, #5
 8001248:	1a1b      	subs	r3, r3, r0
 800124a:	40dc      	lsrs	r4, r3
 800124c:	430c      	orrs	r4, r1
 800124e:	2805      	cmp	r0, #5
 8001250:	dd01      	ble.n	8001256 <__aeabi_ui2f+0x42>
 8001252:	1f43      	subs	r3, r0, #5
 8001254:	409c      	lsls	r4, r3
 8001256:	0023      	movs	r3, r4
 8001258:	490d      	ldr	r1, [pc, #52]	; (8001290 <__aeabi_ui2f+0x7c>)
 800125a:	400b      	ands	r3, r1
 800125c:	0765      	lsls	r5, r4, #29
 800125e:	d009      	beq.n	8001274 <__aeabi_ui2f+0x60>
 8001260:	250f      	movs	r5, #15
 8001262:	402c      	ands	r4, r5
 8001264:	2c04      	cmp	r4, #4
 8001266:	d005      	beq.n	8001274 <__aeabi_ui2f+0x60>
 8001268:	3304      	adds	r3, #4
 800126a:	015c      	lsls	r4, r3, #5
 800126c:	d502      	bpl.n	8001274 <__aeabi_ui2f+0x60>
 800126e:	229f      	movs	r2, #159	; 0x9f
 8001270:	400b      	ands	r3, r1
 8001272:	1a12      	subs	r2, r2, r0
 8001274:	019b      	lsls	r3, r3, #6
 8001276:	0a58      	lsrs	r0, r3, #9
 8001278:	b2d2      	uxtb	r2, r2
 800127a:	0240      	lsls	r0, r0, #9
 800127c:	05d2      	lsls	r2, r2, #23
 800127e:	0a40      	lsrs	r0, r0, #9
 8001280:	4310      	orrs	r0, r2
 8001282:	bd70      	pop	{r4, r5, r6, pc}
 8001284:	2200      	movs	r2, #0
 8001286:	2000      	movs	r0, #0
 8001288:	e7f7      	b.n	800127a <__aeabi_ui2f+0x66>
 800128a:	0260      	lsls	r0, r4, #9
 800128c:	0a40      	lsrs	r0, r0, #9
 800128e:	e7f4      	b.n	800127a <__aeabi_ui2f+0x66>
 8001290:	fbffffff 	.word	0xfbffffff

08001294 <__aeabi_dadd>:
 8001294:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001296:	464f      	mov	r7, r9
 8001298:	4646      	mov	r6, r8
 800129a:	46d6      	mov	lr, sl
 800129c:	000c      	movs	r4, r1
 800129e:	0309      	lsls	r1, r1, #12
 80012a0:	b5c0      	push	{r6, r7, lr}
 80012a2:	0a49      	lsrs	r1, r1, #9
 80012a4:	0f47      	lsrs	r7, r0, #29
 80012a6:	005e      	lsls	r6, r3, #1
 80012a8:	4339      	orrs	r1, r7
 80012aa:	031f      	lsls	r7, r3, #12
 80012ac:	0fdb      	lsrs	r3, r3, #31
 80012ae:	469c      	mov	ip, r3
 80012b0:	0065      	lsls	r5, r4, #1
 80012b2:	0a7b      	lsrs	r3, r7, #9
 80012b4:	0f57      	lsrs	r7, r2, #29
 80012b6:	431f      	orrs	r7, r3
 80012b8:	0d6d      	lsrs	r5, r5, #21
 80012ba:	0fe4      	lsrs	r4, r4, #31
 80012bc:	0d76      	lsrs	r6, r6, #21
 80012be:	46a1      	mov	r9, r4
 80012c0:	00c0      	lsls	r0, r0, #3
 80012c2:	46b8      	mov	r8, r7
 80012c4:	00d2      	lsls	r2, r2, #3
 80012c6:	1bab      	subs	r3, r5, r6
 80012c8:	4564      	cmp	r4, ip
 80012ca:	d07b      	beq.n	80013c4 <__aeabi_dadd+0x130>
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	dd5f      	ble.n	8001390 <__aeabi_dadd+0xfc>
 80012d0:	2e00      	cmp	r6, #0
 80012d2:	d000      	beq.n	80012d6 <__aeabi_dadd+0x42>
 80012d4:	e0a4      	b.n	8001420 <__aeabi_dadd+0x18c>
 80012d6:	003e      	movs	r6, r7
 80012d8:	4316      	orrs	r6, r2
 80012da:	d100      	bne.n	80012de <__aeabi_dadd+0x4a>
 80012dc:	e112      	b.n	8001504 <__aeabi_dadd+0x270>
 80012de:	1e5e      	subs	r6, r3, #1
 80012e0:	2e00      	cmp	r6, #0
 80012e2:	d000      	beq.n	80012e6 <__aeabi_dadd+0x52>
 80012e4:	e19e      	b.n	8001624 <__aeabi_dadd+0x390>
 80012e6:	1a87      	subs	r7, r0, r2
 80012e8:	4643      	mov	r3, r8
 80012ea:	42b8      	cmp	r0, r7
 80012ec:	4180      	sbcs	r0, r0
 80012ee:	2501      	movs	r5, #1
 80012f0:	1ac9      	subs	r1, r1, r3
 80012f2:	4240      	negs	r0, r0
 80012f4:	1a09      	subs	r1, r1, r0
 80012f6:	020b      	lsls	r3, r1, #8
 80012f8:	d400      	bmi.n	80012fc <__aeabi_dadd+0x68>
 80012fa:	e131      	b.n	8001560 <__aeabi_dadd+0x2cc>
 80012fc:	0249      	lsls	r1, r1, #9
 80012fe:	0a4e      	lsrs	r6, r1, #9
 8001300:	2e00      	cmp	r6, #0
 8001302:	d100      	bne.n	8001306 <__aeabi_dadd+0x72>
 8001304:	e16e      	b.n	80015e4 <__aeabi_dadd+0x350>
 8001306:	0030      	movs	r0, r6
 8001308:	f001 fe38 	bl	8002f7c <__clzsi2>
 800130c:	0003      	movs	r3, r0
 800130e:	3b08      	subs	r3, #8
 8001310:	2b1f      	cmp	r3, #31
 8001312:	dd00      	ble.n	8001316 <__aeabi_dadd+0x82>
 8001314:	e161      	b.n	80015da <__aeabi_dadd+0x346>
 8001316:	2220      	movs	r2, #32
 8001318:	0039      	movs	r1, r7
 800131a:	1ad2      	subs	r2, r2, r3
 800131c:	409e      	lsls	r6, r3
 800131e:	40d1      	lsrs	r1, r2
 8001320:	409f      	lsls	r7, r3
 8001322:	430e      	orrs	r6, r1
 8001324:	429d      	cmp	r5, r3
 8001326:	dd00      	ble.n	800132a <__aeabi_dadd+0x96>
 8001328:	e151      	b.n	80015ce <__aeabi_dadd+0x33a>
 800132a:	1b5d      	subs	r5, r3, r5
 800132c:	1c6b      	adds	r3, r5, #1
 800132e:	2b1f      	cmp	r3, #31
 8001330:	dd00      	ble.n	8001334 <__aeabi_dadd+0xa0>
 8001332:	e17c      	b.n	800162e <__aeabi_dadd+0x39a>
 8001334:	2120      	movs	r1, #32
 8001336:	1ac9      	subs	r1, r1, r3
 8001338:	003d      	movs	r5, r7
 800133a:	0030      	movs	r0, r6
 800133c:	408f      	lsls	r7, r1
 800133e:	4088      	lsls	r0, r1
 8001340:	40dd      	lsrs	r5, r3
 8001342:	1e79      	subs	r1, r7, #1
 8001344:	418f      	sbcs	r7, r1
 8001346:	0031      	movs	r1, r6
 8001348:	2207      	movs	r2, #7
 800134a:	4328      	orrs	r0, r5
 800134c:	40d9      	lsrs	r1, r3
 800134e:	2500      	movs	r5, #0
 8001350:	4307      	orrs	r7, r0
 8001352:	403a      	ands	r2, r7
 8001354:	2a00      	cmp	r2, #0
 8001356:	d009      	beq.n	800136c <__aeabi_dadd+0xd8>
 8001358:	230f      	movs	r3, #15
 800135a:	403b      	ands	r3, r7
 800135c:	2b04      	cmp	r3, #4
 800135e:	d005      	beq.n	800136c <__aeabi_dadd+0xd8>
 8001360:	1d3b      	adds	r3, r7, #4
 8001362:	42bb      	cmp	r3, r7
 8001364:	41bf      	sbcs	r7, r7
 8001366:	427f      	negs	r7, r7
 8001368:	19c9      	adds	r1, r1, r7
 800136a:	001f      	movs	r7, r3
 800136c:	020b      	lsls	r3, r1, #8
 800136e:	d400      	bmi.n	8001372 <__aeabi_dadd+0xde>
 8001370:	e226      	b.n	80017c0 <__aeabi_dadd+0x52c>
 8001372:	1c6a      	adds	r2, r5, #1
 8001374:	4bc6      	ldr	r3, [pc, #792]	; (8001690 <__aeabi_dadd+0x3fc>)
 8001376:	0555      	lsls	r5, r2, #21
 8001378:	0d6d      	lsrs	r5, r5, #21
 800137a:	429a      	cmp	r2, r3
 800137c:	d100      	bne.n	8001380 <__aeabi_dadd+0xec>
 800137e:	e106      	b.n	800158e <__aeabi_dadd+0x2fa>
 8001380:	4ac4      	ldr	r2, [pc, #784]	; (8001694 <__aeabi_dadd+0x400>)
 8001382:	08ff      	lsrs	r7, r7, #3
 8001384:	400a      	ands	r2, r1
 8001386:	0753      	lsls	r3, r2, #29
 8001388:	0252      	lsls	r2, r2, #9
 800138a:	433b      	orrs	r3, r7
 800138c:	0b12      	lsrs	r2, r2, #12
 800138e:	e08e      	b.n	80014ae <__aeabi_dadd+0x21a>
 8001390:	2b00      	cmp	r3, #0
 8001392:	d000      	beq.n	8001396 <__aeabi_dadd+0x102>
 8001394:	e0b8      	b.n	8001508 <__aeabi_dadd+0x274>
 8001396:	1c6b      	adds	r3, r5, #1
 8001398:	055b      	lsls	r3, r3, #21
 800139a:	0d5b      	lsrs	r3, r3, #21
 800139c:	2b01      	cmp	r3, #1
 800139e:	dc00      	bgt.n	80013a2 <__aeabi_dadd+0x10e>
 80013a0:	e130      	b.n	8001604 <__aeabi_dadd+0x370>
 80013a2:	1a87      	subs	r7, r0, r2
 80013a4:	4643      	mov	r3, r8
 80013a6:	42b8      	cmp	r0, r7
 80013a8:	41b6      	sbcs	r6, r6
 80013aa:	1acb      	subs	r3, r1, r3
 80013ac:	4276      	negs	r6, r6
 80013ae:	1b9e      	subs	r6, r3, r6
 80013b0:	0233      	lsls	r3, r6, #8
 80013b2:	d500      	bpl.n	80013b6 <__aeabi_dadd+0x122>
 80013b4:	e14c      	b.n	8001650 <__aeabi_dadd+0x3bc>
 80013b6:	003b      	movs	r3, r7
 80013b8:	4333      	orrs	r3, r6
 80013ba:	d1a1      	bne.n	8001300 <__aeabi_dadd+0x6c>
 80013bc:	2200      	movs	r2, #0
 80013be:	2400      	movs	r4, #0
 80013c0:	2500      	movs	r5, #0
 80013c2:	e070      	b.n	80014a6 <__aeabi_dadd+0x212>
 80013c4:	2b00      	cmp	r3, #0
 80013c6:	dc00      	bgt.n	80013ca <__aeabi_dadd+0x136>
 80013c8:	e0e5      	b.n	8001596 <__aeabi_dadd+0x302>
 80013ca:	2e00      	cmp	r6, #0
 80013cc:	d100      	bne.n	80013d0 <__aeabi_dadd+0x13c>
 80013ce:	e083      	b.n	80014d8 <__aeabi_dadd+0x244>
 80013d0:	4eaf      	ldr	r6, [pc, #700]	; (8001690 <__aeabi_dadd+0x3fc>)
 80013d2:	42b5      	cmp	r5, r6
 80013d4:	d060      	beq.n	8001498 <__aeabi_dadd+0x204>
 80013d6:	2680      	movs	r6, #128	; 0x80
 80013d8:	0436      	lsls	r6, r6, #16
 80013da:	4337      	orrs	r7, r6
 80013dc:	46b8      	mov	r8, r7
 80013de:	2b38      	cmp	r3, #56	; 0x38
 80013e0:	dc00      	bgt.n	80013e4 <__aeabi_dadd+0x150>
 80013e2:	e13e      	b.n	8001662 <__aeabi_dadd+0x3ce>
 80013e4:	4643      	mov	r3, r8
 80013e6:	4313      	orrs	r3, r2
 80013e8:	001f      	movs	r7, r3
 80013ea:	1e7a      	subs	r2, r7, #1
 80013ec:	4197      	sbcs	r7, r2
 80013ee:	183f      	adds	r7, r7, r0
 80013f0:	4287      	cmp	r7, r0
 80013f2:	4180      	sbcs	r0, r0
 80013f4:	4240      	negs	r0, r0
 80013f6:	1809      	adds	r1, r1, r0
 80013f8:	020b      	lsls	r3, r1, #8
 80013fa:	d400      	bmi.n	80013fe <__aeabi_dadd+0x16a>
 80013fc:	e0b0      	b.n	8001560 <__aeabi_dadd+0x2cc>
 80013fe:	4ba4      	ldr	r3, [pc, #656]	; (8001690 <__aeabi_dadd+0x3fc>)
 8001400:	3501      	adds	r5, #1
 8001402:	429d      	cmp	r5, r3
 8001404:	d100      	bne.n	8001408 <__aeabi_dadd+0x174>
 8001406:	e0c3      	b.n	8001590 <__aeabi_dadd+0x2fc>
 8001408:	4aa2      	ldr	r2, [pc, #648]	; (8001694 <__aeabi_dadd+0x400>)
 800140a:	087b      	lsrs	r3, r7, #1
 800140c:	400a      	ands	r2, r1
 800140e:	2101      	movs	r1, #1
 8001410:	400f      	ands	r7, r1
 8001412:	431f      	orrs	r7, r3
 8001414:	0851      	lsrs	r1, r2, #1
 8001416:	07d3      	lsls	r3, r2, #31
 8001418:	2207      	movs	r2, #7
 800141a:	431f      	orrs	r7, r3
 800141c:	403a      	ands	r2, r7
 800141e:	e799      	b.n	8001354 <__aeabi_dadd+0xc0>
 8001420:	4e9b      	ldr	r6, [pc, #620]	; (8001690 <__aeabi_dadd+0x3fc>)
 8001422:	42b5      	cmp	r5, r6
 8001424:	d038      	beq.n	8001498 <__aeabi_dadd+0x204>
 8001426:	2680      	movs	r6, #128	; 0x80
 8001428:	0436      	lsls	r6, r6, #16
 800142a:	4337      	orrs	r7, r6
 800142c:	46b8      	mov	r8, r7
 800142e:	2b38      	cmp	r3, #56	; 0x38
 8001430:	dd00      	ble.n	8001434 <__aeabi_dadd+0x1a0>
 8001432:	e0dc      	b.n	80015ee <__aeabi_dadd+0x35a>
 8001434:	2b1f      	cmp	r3, #31
 8001436:	dc00      	bgt.n	800143a <__aeabi_dadd+0x1a6>
 8001438:	e130      	b.n	800169c <__aeabi_dadd+0x408>
 800143a:	001e      	movs	r6, r3
 800143c:	4647      	mov	r7, r8
 800143e:	3e20      	subs	r6, #32
 8001440:	40f7      	lsrs	r7, r6
 8001442:	46bc      	mov	ip, r7
 8001444:	2b20      	cmp	r3, #32
 8001446:	d004      	beq.n	8001452 <__aeabi_dadd+0x1be>
 8001448:	2640      	movs	r6, #64	; 0x40
 800144a:	1af3      	subs	r3, r6, r3
 800144c:	4646      	mov	r6, r8
 800144e:	409e      	lsls	r6, r3
 8001450:	4332      	orrs	r2, r6
 8001452:	0017      	movs	r7, r2
 8001454:	4663      	mov	r3, ip
 8001456:	1e7a      	subs	r2, r7, #1
 8001458:	4197      	sbcs	r7, r2
 800145a:	431f      	orrs	r7, r3
 800145c:	e0cc      	b.n	80015f8 <__aeabi_dadd+0x364>
 800145e:	2b00      	cmp	r3, #0
 8001460:	d100      	bne.n	8001464 <__aeabi_dadd+0x1d0>
 8001462:	e204      	b.n	800186e <__aeabi_dadd+0x5da>
 8001464:	4643      	mov	r3, r8
 8001466:	4313      	orrs	r3, r2
 8001468:	d100      	bne.n	800146c <__aeabi_dadd+0x1d8>
 800146a:	e159      	b.n	8001720 <__aeabi_dadd+0x48c>
 800146c:	074b      	lsls	r3, r1, #29
 800146e:	08c0      	lsrs	r0, r0, #3
 8001470:	4318      	orrs	r0, r3
 8001472:	2380      	movs	r3, #128	; 0x80
 8001474:	08c9      	lsrs	r1, r1, #3
 8001476:	031b      	lsls	r3, r3, #12
 8001478:	4219      	tst	r1, r3
 800147a:	d008      	beq.n	800148e <__aeabi_dadd+0x1fa>
 800147c:	4645      	mov	r5, r8
 800147e:	08ed      	lsrs	r5, r5, #3
 8001480:	421d      	tst	r5, r3
 8001482:	d104      	bne.n	800148e <__aeabi_dadd+0x1fa>
 8001484:	4643      	mov	r3, r8
 8001486:	08d0      	lsrs	r0, r2, #3
 8001488:	0759      	lsls	r1, r3, #29
 800148a:	4308      	orrs	r0, r1
 800148c:	0029      	movs	r1, r5
 800148e:	0f42      	lsrs	r2, r0, #29
 8001490:	00c9      	lsls	r1, r1, #3
 8001492:	4d7f      	ldr	r5, [pc, #508]	; (8001690 <__aeabi_dadd+0x3fc>)
 8001494:	4311      	orrs	r1, r2
 8001496:	00c0      	lsls	r0, r0, #3
 8001498:	074b      	lsls	r3, r1, #29
 800149a:	08ca      	lsrs	r2, r1, #3
 800149c:	497c      	ldr	r1, [pc, #496]	; (8001690 <__aeabi_dadd+0x3fc>)
 800149e:	08c0      	lsrs	r0, r0, #3
 80014a0:	4303      	orrs	r3, r0
 80014a2:	428d      	cmp	r5, r1
 80014a4:	d068      	beq.n	8001578 <__aeabi_dadd+0x2e4>
 80014a6:	0312      	lsls	r2, r2, #12
 80014a8:	056d      	lsls	r5, r5, #21
 80014aa:	0b12      	lsrs	r2, r2, #12
 80014ac:	0d6d      	lsrs	r5, r5, #21
 80014ae:	2100      	movs	r1, #0
 80014b0:	0312      	lsls	r2, r2, #12
 80014b2:	0018      	movs	r0, r3
 80014b4:	0b13      	lsrs	r3, r2, #12
 80014b6:	0d0a      	lsrs	r2, r1, #20
 80014b8:	0512      	lsls	r2, r2, #20
 80014ba:	431a      	orrs	r2, r3
 80014bc:	4b76      	ldr	r3, [pc, #472]	; (8001698 <__aeabi_dadd+0x404>)
 80014be:	052d      	lsls	r5, r5, #20
 80014c0:	4013      	ands	r3, r2
 80014c2:	432b      	orrs	r3, r5
 80014c4:	005b      	lsls	r3, r3, #1
 80014c6:	07e4      	lsls	r4, r4, #31
 80014c8:	085b      	lsrs	r3, r3, #1
 80014ca:	4323      	orrs	r3, r4
 80014cc:	0019      	movs	r1, r3
 80014ce:	bc1c      	pop	{r2, r3, r4}
 80014d0:	4690      	mov	r8, r2
 80014d2:	4699      	mov	r9, r3
 80014d4:	46a2      	mov	sl, r4
 80014d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014d8:	003e      	movs	r6, r7
 80014da:	4316      	orrs	r6, r2
 80014dc:	d012      	beq.n	8001504 <__aeabi_dadd+0x270>
 80014de:	1e5e      	subs	r6, r3, #1
 80014e0:	2e00      	cmp	r6, #0
 80014e2:	d000      	beq.n	80014e6 <__aeabi_dadd+0x252>
 80014e4:	e100      	b.n	80016e8 <__aeabi_dadd+0x454>
 80014e6:	1887      	adds	r7, r0, r2
 80014e8:	4287      	cmp	r7, r0
 80014ea:	4180      	sbcs	r0, r0
 80014ec:	4441      	add	r1, r8
 80014ee:	4240      	negs	r0, r0
 80014f0:	1809      	adds	r1, r1, r0
 80014f2:	2501      	movs	r5, #1
 80014f4:	020b      	lsls	r3, r1, #8
 80014f6:	d533      	bpl.n	8001560 <__aeabi_dadd+0x2cc>
 80014f8:	2502      	movs	r5, #2
 80014fa:	e785      	b.n	8001408 <__aeabi_dadd+0x174>
 80014fc:	4664      	mov	r4, ip
 80014fe:	0033      	movs	r3, r6
 8001500:	4641      	mov	r1, r8
 8001502:	0010      	movs	r0, r2
 8001504:	001d      	movs	r5, r3
 8001506:	e7c7      	b.n	8001498 <__aeabi_dadd+0x204>
 8001508:	2d00      	cmp	r5, #0
 800150a:	d000      	beq.n	800150e <__aeabi_dadd+0x27a>
 800150c:	e0da      	b.n	80016c4 <__aeabi_dadd+0x430>
 800150e:	000c      	movs	r4, r1
 8001510:	4304      	orrs	r4, r0
 8001512:	d0f3      	beq.n	80014fc <__aeabi_dadd+0x268>
 8001514:	1c5c      	adds	r4, r3, #1
 8001516:	d100      	bne.n	800151a <__aeabi_dadd+0x286>
 8001518:	e19f      	b.n	800185a <__aeabi_dadd+0x5c6>
 800151a:	4c5d      	ldr	r4, [pc, #372]	; (8001690 <__aeabi_dadd+0x3fc>)
 800151c:	42a6      	cmp	r6, r4
 800151e:	d100      	bne.n	8001522 <__aeabi_dadd+0x28e>
 8001520:	e12f      	b.n	8001782 <__aeabi_dadd+0x4ee>
 8001522:	43db      	mvns	r3, r3
 8001524:	2b38      	cmp	r3, #56	; 0x38
 8001526:	dd00      	ble.n	800152a <__aeabi_dadd+0x296>
 8001528:	e166      	b.n	80017f8 <__aeabi_dadd+0x564>
 800152a:	2b1f      	cmp	r3, #31
 800152c:	dd00      	ble.n	8001530 <__aeabi_dadd+0x29c>
 800152e:	e183      	b.n	8001838 <__aeabi_dadd+0x5a4>
 8001530:	2420      	movs	r4, #32
 8001532:	0005      	movs	r5, r0
 8001534:	1ae4      	subs	r4, r4, r3
 8001536:	000f      	movs	r7, r1
 8001538:	40dd      	lsrs	r5, r3
 800153a:	40d9      	lsrs	r1, r3
 800153c:	40a0      	lsls	r0, r4
 800153e:	4643      	mov	r3, r8
 8001540:	40a7      	lsls	r7, r4
 8001542:	1a5b      	subs	r3, r3, r1
 8001544:	1e44      	subs	r4, r0, #1
 8001546:	41a0      	sbcs	r0, r4
 8001548:	4698      	mov	r8, r3
 800154a:	432f      	orrs	r7, r5
 800154c:	4338      	orrs	r0, r7
 800154e:	1a17      	subs	r7, r2, r0
 8001550:	42ba      	cmp	r2, r7
 8001552:	4192      	sbcs	r2, r2
 8001554:	4643      	mov	r3, r8
 8001556:	4252      	negs	r2, r2
 8001558:	1a99      	subs	r1, r3, r2
 800155a:	4664      	mov	r4, ip
 800155c:	0035      	movs	r5, r6
 800155e:	e6ca      	b.n	80012f6 <__aeabi_dadd+0x62>
 8001560:	2207      	movs	r2, #7
 8001562:	403a      	ands	r2, r7
 8001564:	2a00      	cmp	r2, #0
 8001566:	d000      	beq.n	800156a <__aeabi_dadd+0x2d6>
 8001568:	e6f6      	b.n	8001358 <__aeabi_dadd+0xc4>
 800156a:	074b      	lsls	r3, r1, #29
 800156c:	08ca      	lsrs	r2, r1, #3
 800156e:	4948      	ldr	r1, [pc, #288]	; (8001690 <__aeabi_dadd+0x3fc>)
 8001570:	08ff      	lsrs	r7, r7, #3
 8001572:	433b      	orrs	r3, r7
 8001574:	428d      	cmp	r5, r1
 8001576:	d196      	bne.n	80014a6 <__aeabi_dadd+0x212>
 8001578:	0019      	movs	r1, r3
 800157a:	4311      	orrs	r1, r2
 800157c:	d100      	bne.n	8001580 <__aeabi_dadd+0x2ec>
 800157e:	e19e      	b.n	80018be <__aeabi_dadd+0x62a>
 8001580:	2180      	movs	r1, #128	; 0x80
 8001582:	0309      	lsls	r1, r1, #12
 8001584:	430a      	orrs	r2, r1
 8001586:	0312      	lsls	r2, r2, #12
 8001588:	0b12      	lsrs	r2, r2, #12
 800158a:	4d41      	ldr	r5, [pc, #260]	; (8001690 <__aeabi_dadd+0x3fc>)
 800158c:	e78f      	b.n	80014ae <__aeabi_dadd+0x21a>
 800158e:	0015      	movs	r5, r2
 8001590:	2200      	movs	r2, #0
 8001592:	2300      	movs	r3, #0
 8001594:	e78b      	b.n	80014ae <__aeabi_dadd+0x21a>
 8001596:	2b00      	cmp	r3, #0
 8001598:	d000      	beq.n	800159c <__aeabi_dadd+0x308>
 800159a:	e0c7      	b.n	800172c <__aeabi_dadd+0x498>
 800159c:	1c6b      	adds	r3, r5, #1
 800159e:	055f      	lsls	r7, r3, #21
 80015a0:	0d7f      	lsrs	r7, r7, #21
 80015a2:	2f01      	cmp	r7, #1
 80015a4:	dc00      	bgt.n	80015a8 <__aeabi_dadd+0x314>
 80015a6:	e0f1      	b.n	800178c <__aeabi_dadd+0x4f8>
 80015a8:	4d39      	ldr	r5, [pc, #228]	; (8001690 <__aeabi_dadd+0x3fc>)
 80015aa:	42ab      	cmp	r3, r5
 80015ac:	d100      	bne.n	80015b0 <__aeabi_dadd+0x31c>
 80015ae:	e0b9      	b.n	8001724 <__aeabi_dadd+0x490>
 80015b0:	1885      	adds	r5, r0, r2
 80015b2:	000a      	movs	r2, r1
 80015b4:	4285      	cmp	r5, r0
 80015b6:	4189      	sbcs	r1, r1
 80015b8:	4442      	add	r2, r8
 80015ba:	4249      	negs	r1, r1
 80015bc:	1851      	adds	r1, r2, r1
 80015be:	2207      	movs	r2, #7
 80015c0:	07cf      	lsls	r7, r1, #31
 80015c2:	086d      	lsrs	r5, r5, #1
 80015c4:	432f      	orrs	r7, r5
 80015c6:	0849      	lsrs	r1, r1, #1
 80015c8:	403a      	ands	r2, r7
 80015ca:	001d      	movs	r5, r3
 80015cc:	e6c2      	b.n	8001354 <__aeabi_dadd+0xc0>
 80015ce:	2207      	movs	r2, #7
 80015d0:	4930      	ldr	r1, [pc, #192]	; (8001694 <__aeabi_dadd+0x400>)
 80015d2:	1aed      	subs	r5, r5, r3
 80015d4:	4031      	ands	r1, r6
 80015d6:	403a      	ands	r2, r7
 80015d8:	e6bc      	b.n	8001354 <__aeabi_dadd+0xc0>
 80015da:	003e      	movs	r6, r7
 80015dc:	3828      	subs	r0, #40	; 0x28
 80015de:	4086      	lsls	r6, r0
 80015e0:	2700      	movs	r7, #0
 80015e2:	e69f      	b.n	8001324 <__aeabi_dadd+0x90>
 80015e4:	0038      	movs	r0, r7
 80015e6:	f001 fcc9 	bl	8002f7c <__clzsi2>
 80015ea:	3020      	adds	r0, #32
 80015ec:	e68e      	b.n	800130c <__aeabi_dadd+0x78>
 80015ee:	4643      	mov	r3, r8
 80015f0:	4313      	orrs	r3, r2
 80015f2:	001f      	movs	r7, r3
 80015f4:	1e7a      	subs	r2, r7, #1
 80015f6:	4197      	sbcs	r7, r2
 80015f8:	1bc7      	subs	r7, r0, r7
 80015fa:	42b8      	cmp	r0, r7
 80015fc:	4180      	sbcs	r0, r0
 80015fe:	4240      	negs	r0, r0
 8001600:	1a09      	subs	r1, r1, r0
 8001602:	e678      	b.n	80012f6 <__aeabi_dadd+0x62>
 8001604:	000e      	movs	r6, r1
 8001606:	003b      	movs	r3, r7
 8001608:	4306      	orrs	r6, r0
 800160a:	4313      	orrs	r3, r2
 800160c:	2d00      	cmp	r5, #0
 800160e:	d161      	bne.n	80016d4 <__aeabi_dadd+0x440>
 8001610:	2e00      	cmp	r6, #0
 8001612:	d000      	beq.n	8001616 <__aeabi_dadd+0x382>
 8001614:	e0f4      	b.n	8001800 <__aeabi_dadd+0x56c>
 8001616:	2b00      	cmp	r3, #0
 8001618:	d100      	bne.n	800161c <__aeabi_dadd+0x388>
 800161a:	e11b      	b.n	8001854 <__aeabi_dadd+0x5c0>
 800161c:	4664      	mov	r4, ip
 800161e:	0039      	movs	r1, r7
 8001620:	0010      	movs	r0, r2
 8001622:	e739      	b.n	8001498 <__aeabi_dadd+0x204>
 8001624:	4f1a      	ldr	r7, [pc, #104]	; (8001690 <__aeabi_dadd+0x3fc>)
 8001626:	42bb      	cmp	r3, r7
 8001628:	d07a      	beq.n	8001720 <__aeabi_dadd+0x48c>
 800162a:	0033      	movs	r3, r6
 800162c:	e6ff      	b.n	800142e <__aeabi_dadd+0x19a>
 800162e:	0030      	movs	r0, r6
 8001630:	3d1f      	subs	r5, #31
 8001632:	40e8      	lsrs	r0, r5
 8001634:	2b20      	cmp	r3, #32
 8001636:	d003      	beq.n	8001640 <__aeabi_dadd+0x3ac>
 8001638:	2140      	movs	r1, #64	; 0x40
 800163a:	1acb      	subs	r3, r1, r3
 800163c:	409e      	lsls	r6, r3
 800163e:	4337      	orrs	r7, r6
 8001640:	1e7b      	subs	r3, r7, #1
 8001642:	419f      	sbcs	r7, r3
 8001644:	2207      	movs	r2, #7
 8001646:	4307      	orrs	r7, r0
 8001648:	403a      	ands	r2, r7
 800164a:	2100      	movs	r1, #0
 800164c:	2500      	movs	r5, #0
 800164e:	e789      	b.n	8001564 <__aeabi_dadd+0x2d0>
 8001650:	1a17      	subs	r7, r2, r0
 8001652:	4643      	mov	r3, r8
 8001654:	42ba      	cmp	r2, r7
 8001656:	41b6      	sbcs	r6, r6
 8001658:	1a59      	subs	r1, r3, r1
 800165a:	4276      	negs	r6, r6
 800165c:	1b8e      	subs	r6, r1, r6
 800165e:	4664      	mov	r4, ip
 8001660:	e64e      	b.n	8001300 <__aeabi_dadd+0x6c>
 8001662:	2b1f      	cmp	r3, #31
 8001664:	dd00      	ble.n	8001668 <__aeabi_dadd+0x3d4>
 8001666:	e0ad      	b.n	80017c4 <__aeabi_dadd+0x530>
 8001668:	2620      	movs	r6, #32
 800166a:	4647      	mov	r7, r8
 800166c:	1af6      	subs	r6, r6, r3
 800166e:	40b7      	lsls	r7, r6
 8001670:	46b9      	mov	r9, r7
 8001672:	0017      	movs	r7, r2
 8001674:	46b2      	mov	sl, r6
 8001676:	40df      	lsrs	r7, r3
 8001678:	464e      	mov	r6, r9
 800167a:	433e      	orrs	r6, r7
 800167c:	0037      	movs	r7, r6
 800167e:	4656      	mov	r6, sl
 8001680:	40b2      	lsls	r2, r6
 8001682:	1e56      	subs	r6, r2, #1
 8001684:	41b2      	sbcs	r2, r6
 8001686:	4317      	orrs	r7, r2
 8001688:	4642      	mov	r2, r8
 800168a:	40da      	lsrs	r2, r3
 800168c:	1889      	adds	r1, r1, r2
 800168e:	e6ae      	b.n	80013ee <__aeabi_dadd+0x15a>
 8001690:	000007ff 	.word	0x000007ff
 8001694:	ff7fffff 	.word	0xff7fffff
 8001698:	800fffff 	.word	0x800fffff
 800169c:	2620      	movs	r6, #32
 800169e:	4647      	mov	r7, r8
 80016a0:	1af6      	subs	r6, r6, r3
 80016a2:	40b7      	lsls	r7, r6
 80016a4:	46b9      	mov	r9, r7
 80016a6:	0017      	movs	r7, r2
 80016a8:	46b2      	mov	sl, r6
 80016aa:	40df      	lsrs	r7, r3
 80016ac:	464e      	mov	r6, r9
 80016ae:	433e      	orrs	r6, r7
 80016b0:	0037      	movs	r7, r6
 80016b2:	4656      	mov	r6, sl
 80016b4:	40b2      	lsls	r2, r6
 80016b6:	1e56      	subs	r6, r2, #1
 80016b8:	41b2      	sbcs	r2, r6
 80016ba:	4317      	orrs	r7, r2
 80016bc:	4642      	mov	r2, r8
 80016be:	40da      	lsrs	r2, r3
 80016c0:	1a89      	subs	r1, r1, r2
 80016c2:	e799      	b.n	80015f8 <__aeabi_dadd+0x364>
 80016c4:	4c7f      	ldr	r4, [pc, #508]	; (80018c4 <__aeabi_dadd+0x630>)
 80016c6:	42a6      	cmp	r6, r4
 80016c8:	d05b      	beq.n	8001782 <__aeabi_dadd+0x4ee>
 80016ca:	2480      	movs	r4, #128	; 0x80
 80016cc:	0424      	lsls	r4, r4, #16
 80016ce:	425b      	negs	r3, r3
 80016d0:	4321      	orrs	r1, r4
 80016d2:	e727      	b.n	8001524 <__aeabi_dadd+0x290>
 80016d4:	2e00      	cmp	r6, #0
 80016d6:	d10c      	bne.n	80016f2 <__aeabi_dadd+0x45e>
 80016d8:	2b00      	cmp	r3, #0
 80016da:	d100      	bne.n	80016de <__aeabi_dadd+0x44a>
 80016dc:	e0cb      	b.n	8001876 <__aeabi_dadd+0x5e2>
 80016de:	4664      	mov	r4, ip
 80016e0:	0039      	movs	r1, r7
 80016e2:	0010      	movs	r0, r2
 80016e4:	4d77      	ldr	r5, [pc, #476]	; (80018c4 <__aeabi_dadd+0x630>)
 80016e6:	e6d7      	b.n	8001498 <__aeabi_dadd+0x204>
 80016e8:	4f76      	ldr	r7, [pc, #472]	; (80018c4 <__aeabi_dadd+0x630>)
 80016ea:	42bb      	cmp	r3, r7
 80016ec:	d018      	beq.n	8001720 <__aeabi_dadd+0x48c>
 80016ee:	0033      	movs	r3, r6
 80016f0:	e675      	b.n	80013de <__aeabi_dadd+0x14a>
 80016f2:	2b00      	cmp	r3, #0
 80016f4:	d014      	beq.n	8001720 <__aeabi_dadd+0x48c>
 80016f6:	074b      	lsls	r3, r1, #29
 80016f8:	08c0      	lsrs	r0, r0, #3
 80016fa:	4318      	orrs	r0, r3
 80016fc:	2380      	movs	r3, #128	; 0x80
 80016fe:	08c9      	lsrs	r1, r1, #3
 8001700:	031b      	lsls	r3, r3, #12
 8001702:	4219      	tst	r1, r3
 8001704:	d007      	beq.n	8001716 <__aeabi_dadd+0x482>
 8001706:	08fc      	lsrs	r4, r7, #3
 8001708:	421c      	tst	r4, r3
 800170a:	d104      	bne.n	8001716 <__aeabi_dadd+0x482>
 800170c:	0779      	lsls	r1, r7, #29
 800170e:	08d0      	lsrs	r0, r2, #3
 8001710:	4308      	orrs	r0, r1
 8001712:	46e1      	mov	r9, ip
 8001714:	0021      	movs	r1, r4
 8001716:	464c      	mov	r4, r9
 8001718:	0f42      	lsrs	r2, r0, #29
 800171a:	00c9      	lsls	r1, r1, #3
 800171c:	4311      	orrs	r1, r2
 800171e:	00c0      	lsls	r0, r0, #3
 8001720:	4d68      	ldr	r5, [pc, #416]	; (80018c4 <__aeabi_dadd+0x630>)
 8001722:	e6b9      	b.n	8001498 <__aeabi_dadd+0x204>
 8001724:	001d      	movs	r5, r3
 8001726:	2200      	movs	r2, #0
 8001728:	2300      	movs	r3, #0
 800172a:	e6c0      	b.n	80014ae <__aeabi_dadd+0x21a>
 800172c:	2d00      	cmp	r5, #0
 800172e:	d15b      	bne.n	80017e8 <__aeabi_dadd+0x554>
 8001730:	000d      	movs	r5, r1
 8001732:	4305      	orrs	r5, r0
 8001734:	d100      	bne.n	8001738 <__aeabi_dadd+0x4a4>
 8001736:	e6e2      	b.n	80014fe <__aeabi_dadd+0x26a>
 8001738:	1c5d      	adds	r5, r3, #1
 800173a:	d100      	bne.n	800173e <__aeabi_dadd+0x4aa>
 800173c:	e0b0      	b.n	80018a0 <__aeabi_dadd+0x60c>
 800173e:	4d61      	ldr	r5, [pc, #388]	; (80018c4 <__aeabi_dadd+0x630>)
 8001740:	42ae      	cmp	r6, r5
 8001742:	d01f      	beq.n	8001784 <__aeabi_dadd+0x4f0>
 8001744:	43db      	mvns	r3, r3
 8001746:	2b38      	cmp	r3, #56	; 0x38
 8001748:	dc71      	bgt.n	800182e <__aeabi_dadd+0x59a>
 800174a:	2b1f      	cmp	r3, #31
 800174c:	dd00      	ble.n	8001750 <__aeabi_dadd+0x4bc>
 800174e:	e096      	b.n	800187e <__aeabi_dadd+0x5ea>
 8001750:	2520      	movs	r5, #32
 8001752:	000f      	movs	r7, r1
 8001754:	1aed      	subs	r5, r5, r3
 8001756:	40af      	lsls	r7, r5
 8001758:	46b9      	mov	r9, r7
 800175a:	0007      	movs	r7, r0
 800175c:	46aa      	mov	sl, r5
 800175e:	40df      	lsrs	r7, r3
 8001760:	464d      	mov	r5, r9
 8001762:	433d      	orrs	r5, r7
 8001764:	002f      	movs	r7, r5
 8001766:	4655      	mov	r5, sl
 8001768:	40a8      	lsls	r0, r5
 800176a:	40d9      	lsrs	r1, r3
 800176c:	1e45      	subs	r5, r0, #1
 800176e:	41a8      	sbcs	r0, r5
 8001770:	4488      	add	r8, r1
 8001772:	4307      	orrs	r7, r0
 8001774:	18bf      	adds	r7, r7, r2
 8001776:	4297      	cmp	r7, r2
 8001778:	4192      	sbcs	r2, r2
 800177a:	4251      	negs	r1, r2
 800177c:	4441      	add	r1, r8
 800177e:	0035      	movs	r5, r6
 8001780:	e63a      	b.n	80013f8 <__aeabi_dadd+0x164>
 8001782:	4664      	mov	r4, ip
 8001784:	0035      	movs	r5, r6
 8001786:	4641      	mov	r1, r8
 8001788:	0010      	movs	r0, r2
 800178a:	e685      	b.n	8001498 <__aeabi_dadd+0x204>
 800178c:	000b      	movs	r3, r1
 800178e:	4303      	orrs	r3, r0
 8001790:	2d00      	cmp	r5, #0
 8001792:	d000      	beq.n	8001796 <__aeabi_dadd+0x502>
 8001794:	e663      	b.n	800145e <__aeabi_dadd+0x1ca>
 8001796:	2b00      	cmp	r3, #0
 8001798:	d0f5      	beq.n	8001786 <__aeabi_dadd+0x4f2>
 800179a:	4643      	mov	r3, r8
 800179c:	4313      	orrs	r3, r2
 800179e:	d100      	bne.n	80017a2 <__aeabi_dadd+0x50e>
 80017a0:	e67a      	b.n	8001498 <__aeabi_dadd+0x204>
 80017a2:	1887      	adds	r7, r0, r2
 80017a4:	4287      	cmp	r7, r0
 80017a6:	4180      	sbcs	r0, r0
 80017a8:	2207      	movs	r2, #7
 80017aa:	4441      	add	r1, r8
 80017ac:	4240      	negs	r0, r0
 80017ae:	1809      	adds	r1, r1, r0
 80017b0:	403a      	ands	r2, r7
 80017b2:	020b      	lsls	r3, r1, #8
 80017b4:	d400      	bmi.n	80017b8 <__aeabi_dadd+0x524>
 80017b6:	e6d5      	b.n	8001564 <__aeabi_dadd+0x2d0>
 80017b8:	4b43      	ldr	r3, [pc, #268]	; (80018c8 <__aeabi_dadd+0x634>)
 80017ba:	3501      	adds	r5, #1
 80017bc:	4019      	ands	r1, r3
 80017be:	e5c9      	b.n	8001354 <__aeabi_dadd+0xc0>
 80017c0:	0038      	movs	r0, r7
 80017c2:	e669      	b.n	8001498 <__aeabi_dadd+0x204>
 80017c4:	001e      	movs	r6, r3
 80017c6:	4647      	mov	r7, r8
 80017c8:	3e20      	subs	r6, #32
 80017ca:	40f7      	lsrs	r7, r6
 80017cc:	46bc      	mov	ip, r7
 80017ce:	2b20      	cmp	r3, #32
 80017d0:	d004      	beq.n	80017dc <__aeabi_dadd+0x548>
 80017d2:	2640      	movs	r6, #64	; 0x40
 80017d4:	1af3      	subs	r3, r6, r3
 80017d6:	4646      	mov	r6, r8
 80017d8:	409e      	lsls	r6, r3
 80017da:	4332      	orrs	r2, r6
 80017dc:	0017      	movs	r7, r2
 80017de:	4663      	mov	r3, ip
 80017e0:	1e7a      	subs	r2, r7, #1
 80017e2:	4197      	sbcs	r7, r2
 80017e4:	431f      	orrs	r7, r3
 80017e6:	e602      	b.n	80013ee <__aeabi_dadd+0x15a>
 80017e8:	4d36      	ldr	r5, [pc, #216]	; (80018c4 <__aeabi_dadd+0x630>)
 80017ea:	42ae      	cmp	r6, r5
 80017ec:	d0ca      	beq.n	8001784 <__aeabi_dadd+0x4f0>
 80017ee:	2580      	movs	r5, #128	; 0x80
 80017f0:	042d      	lsls	r5, r5, #16
 80017f2:	425b      	negs	r3, r3
 80017f4:	4329      	orrs	r1, r5
 80017f6:	e7a6      	b.n	8001746 <__aeabi_dadd+0x4b2>
 80017f8:	4308      	orrs	r0, r1
 80017fa:	1e41      	subs	r1, r0, #1
 80017fc:	4188      	sbcs	r0, r1
 80017fe:	e6a6      	b.n	800154e <__aeabi_dadd+0x2ba>
 8001800:	2b00      	cmp	r3, #0
 8001802:	d100      	bne.n	8001806 <__aeabi_dadd+0x572>
 8001804:	e648      	b.n	8001498 <__aeabi_dadd+0x204>
 8001806:	1a87      	subs	r7, r0, r2
 8001808:	4643      	mov	r3, r8
 800180a:	42b8      	cmp	r0, r7
 800180c:	41b6      	sbcs	r6, r6
 800180e:	1acb      	subs	r3, r1, r3
 8001810:	4276      	negs	r6, r6
 8001812:	1b9e      	subs	r6, r3, r6
 8001814:	0233      	lsls	r3, r6, #8
 8001816:	d54b      	bpl.n	80018b0 <__aeabi_dadd+0x61c>
 8001818:	1a17      	subs	r7, r2, r0
 800181a:	4643      	mov	r3, r8
 800181c:	42ba      	cmp	r2, r7
 800181e:	4192      	sbcs	r2, r2
 8001820:	1a59      	subs	r1, r3, r1
 8001822:	4252      	negs	r2, r2
 8001824:	1a89      	subs	r1, r1, r2
 8001826:	2207      	movs	r2, #7
 8001828:	4664      	mov	r4, ip
 800182a:	403a      	ands	r2, r7
 800182c:	e592      	b.n	8001354 <__aeabi_dadd+0xc0>
 800182e:	4301      	orrs	r1, r0
 8001830:	000f      	movs	r7, r1
 8001832:	1e79      	subs	r1, r7, #1
 8001834:	418f      	sbcs	r7, r1
 8001836:	e79d      	b.n	8001774 <__aeabi_dadd+0x4e0>
 8001838:	001c      	movs	r4, r3
 800183a:	000f      	movs	r7, r1
 800183c:	3c20      	subs	r4, #32
 800183e:	40e7      	lsrs	r7, r4
 8001840:	2b20      	cmp	r3, #32
 8001842:	d003      	beq.n	800184c <__aeabi_dadd+0x5b8>
 8001844:	2440      	movs	r4, #64	; 0x40
 8001846:	1ae3      	subs	r3, r4, r3
 8001848:	4099      	lsls	r1, r3
 800184a:	4308      	orrs	r0, r1
 800184c:	1e41      	subs	r1, r0, #1
 800184e:	4188      	sbcs	r0, r1
 8001850:	4338      	orrs	r0, r7
 8001852:	e67c      	b.n	800154e <__aeabi_dadd+0x2ba>
 8001854:	2200      	movs	r2, #0
 8001856:	2400      	movs	r4, #0
 8001858:	e625      	b.n	80014a6 <__aeabi_dadd+0x212>
 800185a:	1a17      	subs	r7, r2, r0
 800185c:	4643      	mov	r3, r8
 800185e:	42ba      	cmp	r2, r7
 8001860:	4192      	sbcs	r2, r2
 8001862:	1a59      	subs	r1, r3, r1
 8001864:	4252      	negs	r2, r2
 8001866:	1a89      	subs	r1, r1, r2
 8001868:	4664      	mov	r4, ip
 800186a:	0035      	movs	r5, r6
 800186c:	e543      	b.n	80012f6 <__aeabi_dadd+0x62>
 800186e:	4641      	mov	r1, r8
 8001870:	0010      	movs	r0, r2
 8001872:	4d14      	ldr	r5, [pc, #80]	; (80018c4 <__aeabi_dadd+0x630>)
 8001874:	e610      	b.n	8001498 <__aeabi_dadd+0x204>
 8001876:	2280      	movs	r2, #128	; 0x80
 8001878:	2400      	movs	r4, #0
 800187a:	0312      	lsls	r2, r2, #12
 800187c:	e680      	b.n	8001580 <__aeabi_dadd+0x2ec>
 800187e:	001d      	movs	r5, r3
 8001880:	000f      	movs	r7, r1
 8001882:	3d20      	subs	r5, #32
 8001884:	40ef      	lsrs	r7, r5
 8001886:	46bc      	mov	ip, r7
 8001888:	2b20      	cmp	r3, #32
 800188a:	d003      	beq.n	8001894 <__aeabi_dadd+0x600>
 800188c:	2540      	movs	r5, #64	; 0x40
 800188e:	1aeb      	subs	r3, r5, r3
 8001890:	4099      	lsls	r1, r3
 8001892:	4308      	orrs	r0, r1
 8001894:	0007      	movs	r7, r0
 8001896:	4663      	mov	r3, ip
 8001898:	1e78      	subs	r0, r7, #1
 800189a:	4187      	sbcs	r7, r0
 800189c:	431f      	orrs	r7, r3
 800189e:	e769      	b.n	8001774 <__aeabi_dadd+0x4e0>
 80018a0:	1887      	adds	r7, r0, r2
 80018a2:	4297      	cmp	r7, r2
 80018a4:	419b      	sbcs	r3, r3
 80018a6:	4441      	add	r1, r8
 80018a8:	425b      	negs	r3, r3
 80018aa:	18c9      	adds	r1, r1, r3
 80018ac:	0035      	movs	r5, r6
 80018ae:	e5a3      	b.n	80013f8 <__aeabi_dadd+0x164>
 80018b0:	003b      	movs	r3, r7
 80018b2:	4333      	orrs	r3, r6
 80018b4:	d0ce      	beq.n	8001854 <__aeabi_dadd+0x5c0>
 80018b6:	2207      	movs	r2, #7
 80018b8:	0031      	movs	r1, r6
 80018ba:	403a      	ands	r2, r7
 80018bc:	e652      	b.n	8001564 <__aeabi_dadd+0x2d0>
 80018be:	2300      	movs	r3, #0
 80018c0:	001a      	movs	r2, r3
 80018c2:	e5f4      	b.n	80014ae <__aeabi_dadd+0x21a>
 80018c4:	000007ff 	.word	0x000007ff
 80018c8:	ff7fffff 	.word	0xff7fffff

080018cc <__aeabi_ddiv>:
 80018cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018ce:	4657      	mov	r7, sl
 80018d0:	46de      	mov	lr, fp
 80018d2:	464e      	mov	r6, r9
 80018d4:	4645      	mov	r5, r8
 80018d6:	b5e0      	push	{r5, r6, r7, lr}
 80018d8:	4683      	mov	fp, r0
 80018da:	0007      	movs	r7, r0
 80018dc:	030e      	lsls	r6, r1, #12
 80018de:	0048      	lsls	r0, r1, #1
 80018e0:	b085      	sub	sp, #20
 80018e2:	4692      	mov	sl, r2
 80018e4:	001c      	movs	r4, r3
 80018e6:	0b36      	lsrs	r6, r6, #12
 80018e8:	0d40      	lsrs	r0, r0, #21
 80018ea:	0fcd      	lsrs	r5, r1, #31
 80018ec:	2800      	cmp	r0, #0
 80018ee:	d100      	bne.n	80018f2 <__aeabi_ddiv+0x26>
 80018f0:	e09d      	b.n	8001a2e <__aeabi_ddiv+0x162>
 80018f2:	4b95      	ldr	r3, [pc, #596]	; (8001b48 <__aeabi_ddiv+0x27c>)
 80018f4:	4298      	cmp	r0, r3
 80018f6:	d039      	beq.n	800196c <__aeabi_ddiv+0xa0>
 80018f8:	2380      	movs	r3, #128	; 0x80
 80018fa:	00f6      	lsls	r6, r6, #3
 80018fc:	041b      	lsls	r3, r3, #16
 80018fe:	431e      	orrs	r6, r3
 8001900:	4a92      	ldr	r2, [pc, #584]	; (8001b4c <__aeabi_ddiv+0x280>)
 8001902:	0f7b      	lsrs	r3, r7, #29
 8001904:	4333      	orrs	r3, r6
 8001906:	4699      	mov	r9, r3
 8001908:	4694      	mov	ip, r2
 800190a:	0003      	movs	r3, r0
 800190c:	4463      	add	r3, ip
 800190e:	9300      	str	r3, [sp, #0]
 8001910:	2300      	movs	r3, #0
 8001912:	2600      	movs	r6, #0
 8001914:	00ff      	lsls	r7, r7, #3
 8001916:	9302      	str	r3, [sp, #8]
 8001918:	0323      	lsls	r3, r4, #12
 800191a:	0b1b      	lsrs	r3, r3, #12
 800191c:	4698      	mov	r8, r3
 800191e:	0063      	lsls	r3, r4, #1
 8001920:	0fe4      	lsrs	r4, r4, #31
 8001922:	4652      	mov	r2, sl
 8001924:	0d5b      	lsrs	r3, r3, #21
 8001926:	9401      	str	r4, [sp, #4]
 8001928:	d100      	bne.n	800192c <__aeabi_ddiv+0x60>
 800192a:	e0b3      	b.n	8001a94 <__aeabi_ddiv+0x1c8>
 800192c:	4986      	ldr	r1, [pc, #536]	; (8001b48 <__aeabi_ddiv+0x27c>)
 800192e:	428b      	cmp	r3, r1
 8001930:	d100      	bne.n	8001934 <__aeabi_ddiv+0x68>
 8001932:	e09e      	b.n	8001a72 <__aeabi_ddiv+0x1a6>
 8001934:	4642      	mov	r2, r8
 8001936:	00d1      	lsls	r1, r2, #3
 8001938:	2280      	movs	r2, #128	; 0x80
 800193a:	0412      	lsls	r2, r2, #16
 800193c:	430a      	orrs	r2, r1
 800193e:	4651      	mov	r1, sl
 8001940:	0f49      	lsrs	r1, r1, #29
 8001942:	4311      	orrs	r1, r2
 8001944:	468b      	mov	fp, r1
 8001946:	4981      	ldr	r1, [pc, #516]	; (8001b4c <__aeabi_ddiv+0x280>)
 8001948:	4652      	mov	r2, sl
 800194a:	468c      	mov	ip, r1
 800194c:	9900      	ldr	r1, [sp, #0]
 800194e:	4463      	add	r3, ip
 8001950:	1acb      	subs	r3, r1, r3
 8001952:	2100      	movs	r1, #0
 8001954:	00d2      	lsls	r2, r2, #3
 8001956:	9300      	str	r3, [sp, #0]
 8001958:	002b      	movs	r3, r5
 800195a:	4063      	eors	r3, r4
 800195c:	469a      	mov	sl, r3
 800195e:	2e0f      	cmp	r6, #15
 8001960:	d900      	bls.n	8001964 <__aeabi_ddiv+0x98>
 8001962:	e105      	b.n	8001b70 <__aeabi_ddiv+0x2a4>
 8001964:	4b7a      	ldr	r3, [pc, #488]	; (8001b50 <__aeabi_ddiv+0x284>)
 8001966:	00b6      	lsls	r6, r6, #2
 8001968:	599b      	ldr	r3, [r3, r6]
 800196a:	469f      	mov	pc, r3
 800196c:	465b      	mov	r3, fp
 800196e:	4333      	orrs	r3, r6
 8001970:	4699      	mov	r9, r3
 8001972:	d000      	beq.n	8001976 <__aeabi_ddiv+0xaa>
 8001974:	e0b8      	b.n	8001ae8 <__aeabi_ddiv+0x21c>
 8001976:	2302      	movs	r3, #2
 8001978:	2608      	movs	r6, #8
 800197a:	2700      	movs	r7, #0
 800197c:	9000      	str	r0, [sp, #0]
 800197e:	9302      	str	r3, [sp, #8]
 8001980:	e7ca      	b.n	8001918 <__aeabi_ddiv+0x4c>
 8001982:	46cb      	mov	fp, r9
 8001984:	003a      	movs	r2, r7
 8001986:	9902      	ldr	r1, [sp, #8]
 8001988:	9501      	str	r5, [sp, #4]
 800198a:	9b01      	ldr	r3, [sp, #4]
 800198c:	469a      	mov	sl, r3
 800198e:	2902      	cmp	r1, #2
 8001990:	d027      	beq.n	80019e2 <__aeabi_ddiv+0x116>
 8001992:	2903      	cmp	r1, #3
 8001994:	d100      	bne.n	8001998 <__aeabi_ddiv+0xcc>
 8001996:	e280      	b.n	8001e9a <__aeabi_ddiv+0x5ce>
 8001998:	2901      	cmp	r1, #1
 800199a:	d044      	beq.n	8001a26 <__aeabi_ddiv+0x15a>
 800199c:	496d      	ldr	r1, [pc, #436]	; (8001b54 <__aeabi_ddiv+0x288>)
 800199e:	9b00      	ldr	r3, [sp, #0]
 80019a0:	468c      	mov	ip, r1
 80019a2:	4463      	add	r3, ip
 80019a4:	001c      	movs	r4, r3
 80019a6:	2c00      	cmp	r4, #0
 80019a8:	dd38      	ble.n	8001a1c <__aeabi_ddiv+0x150>
 80019aa:	0753      	lsls	r3, r2, #29
 80019ac:	d000      	beq.n	80019b0 <__aeabi_ddiv+0xe4>
 80019ae:	e213      	b.n	8001dd8 <__aeabi_ddiv+0x50c>
 80019b0:	08d2      	lsrs	r2, r2, #3
 80019b2:	465b      	mov	r3, fp
 80019b4:	01db      	lsls	r3, r3, #7
 80019b6:	d509      	bpl.n	80019cc <__aeabi_ddiv+0x100>
 80019b8:	4659      	mov	r1, fp
 80019ba:	4b67      	ldr	r3, [pc, #412]	; (8001b58 <__aeabi_ddiv+0x28c>)
 80019bc:	4019      	ands	r1, r3
 80019be:	468b      	mov	fp, r1
 80019c0:	2180      	movs	r1, #128	; 0x80
 80019c2:	00c9      	lsls	r1, r1, #3
 80019c4:	468c      	mov	ip, r1
 80019c6:	9b00      	ldr	r3, [sp, #0]
 80019c8:	4463      	add	r3, ip
 80019ca:	001c      	movs	r4, r3
 80019cc:	4b63      	ldr	r3, [pc, #396]	; (8001b5c <__aeabi_ddiv+0x290>)
 80019ce:	429c      	cmp	r4, r3
 80019d0:	dc07      	bgt.n	80019e2 <__aeabi_ddiv+0x116>
 80019d2:	465b      	mov	r3, fp
 80019d4:	0564      	lsls	r4, r4, #21
 80019d6:	075f      	lsls	r7, r3, #29
 80019d8:	025b      	lsls	r3, r3, #9
 80019da:	4317      	orrs	r7, r2
 80019dc:	0b1b      	lsrs	r3, r3, #12
 80019de:	0d62      	lsrs	r2, r4, #21
 80019e0:	e002      	b.n	80019e8 <__aeabi_ddiv+0x11c>
 80019e2:	2300      	movs	r3, #0
 80019e4:	2700      	movs	r7, #0
 80019e6:	4a58      	ldr	r2, [pc, #352]	; (8001b48 <__aeabi_ddiv+0x27c>)
 80019e8:	2100      	movs	r1, #0
 80019ea:	031b      	lsls	r3, r3, #12
 80019ec:	0b1c      	lsrs	r4, r3, #12
 80019ee:	0d0b      	lsrs	r3, r1, #20
 80019f0:	051b      	lsls	r3, r3, #20
 80019f2:	4323      	orrs	r3, r4
 80019f4:	0514      	lsls	r4, r2, #20
 80019f6:	4a5a      	ldr	r2, [pc, #360]	; (8001b60 <__aeabi_ddiv+0x294>)
 80019f8:	0038      	movs	r0, r7
 80019fa:	4013      	ands	r3, r2
 80019fc:	431c      	orrs	r4, r3
 80019fe:	4653      	mov	r3, sl
 8001a00:	0064      	lsls	r4, r4, #1
 8001a02:	07db      	lsls	r3, r3, #31
 8001a04:	0864      	lsrs	r4, r4, #1
 8001a06:	431c      	orrs	r4, r3
 8001a08:	0021      	movs	r1, r4
 8001a0a:	b005      	add	sp, #20
 8001a0c:	bc3c      	pop	{r2, r3, r4, r5}
 8001a0e:	4690      	mov	r8, r2
 8001a10:	4699      	mov	r9, r3
 8001a12:	46a2      	mov	sl, r4
 8001a14:	46ab      	mov	fp, r5
 8001a16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a18:	2201      	movs	r2, #1
 8001a1a:	4252      	negs	r2, r2
 8001a1c:	2301      	movs	r3, #1
 8001a1e:	1b1b      	subs	r3, r3, r4
 8001a20:	2b38      	cmp	r3, #56	; 0x38
 8001a22:	dc00      	bgt.n	8001a26 <__aeabi_ddiv+0x15a>
 8001a24:	e1ad      	b.n	8001d82 <__aeabi_ddiv+0x4b6>
 8001a26:	2200      	movs	r2, #0
 8001a28:	2300      	movs	r3, #0
 8001a2a:	2700      	movs	r7, #0
 8001a2c:	e7dc      	b.n	80019e8 <__aeabi_ddiv+0x11c>
 8001a2e:	465b      	mov	r3, fp
 8001a30:	4333      	orrs	r3, r6
 8001a32:	4699      	mov	r9, r3
 8001a34:	d05e      	beq.n	8001af4 <__aeabi_ddiv+0x228>
 8001a36:	2e00      	cmp	r6, #0
 8001a38:	d100      	bne.n	8001a3c <__aeabi_ddiv+0x170>
 8001a3a:	e18a      	b.n	8001d52 <__aeabi_ddiv+0x486>
 8001a3c:	0030      	movs	r0, r6
 8001a3e:	f001 fa9d 	bl	8002f7c <__clzsi2>
 8001a42:	0003      	movs	r3, r0
 8001a44:	3b0b      	subs	r3, #11
 8001a46:	2b1c      	cmp	r3, #28
 8001a48:	dd00      	ble.n	8001a4c <__aeabi_ddiv+0x180>
 8001a4a:	e17b      	b.n	8001d44 <__aeabi_ddiv+0x478>
 8001a4c:	221d      	movs	r2, #29
 8001a4e:	1ad3      	subs	r3, r2, r3
 8001a50:	465a      	mov	r2, fp
 8001a52:	0001      	movs	r1, r0
 8001a54:	40da      	lsrs	r2, r3
 8001a56:	3908      	subs	r1, #8
 8001a58:	408e      	lsls	r6, r1
 8001a5a:	0013      	movs	r3, r2
 8001a5c:	465f      	mov	r7, fp
 8001a5e:	4333      	orrs	r3, r6
 8001a60:	4699      	mov	r9, r3
 8001a62:	408f      	lsls	r7, r1
 8001a64:	4b3f      	ldr	r3, [pc, #252]	; (8001b64 <__aeabi_ddiv+0x298>)
 8001a66:	2600      	movs	r6, #0
 8001a68:	1a1b      	subs	r3, r3, r0
 8001a6a:	9300      	str	r3, [sp, #0]
 8001a6c:	2300      	movs	r3, #0
 8001a6e:	9302      	str	r3, [sp, #8]
 8001a70:	e752      	b.n	8001918 <__aeabi_ddiv+0x4c>
 8001a72:	4641      	mov	r1, r8
 8001a74:	4653      	mov	r3, sl
 8001a76:	430b      	orrs	r3, r1
 8001a78:	493b      	ldr	r1, [pc, #236]	; (8001b68 <__aeabi_ddiv+0x29c>)
 8001a7a:	469b      	mov	fp, r3
 8001a7c:	468c      	mov	ip, r1
 8001a7e:	9b00      	ldr	r3, [sp, #0]
 8001a80:	4463      	add	r3, ip
 8001a82:	9300      	str	r3, [sp, #0]
 8001a84:	465b      	mov	r3, fp
 8001a86:	2b00      	cmp	r3, #0
 8001a88:	d13b      	bne.n	8001b02 <__aeabi_ddiv+0x236>
 8001a8a:	2302      	movs	r3, #2
 8001a8c:	2200      	movs	r2, #0
 8001a8e:	431e      	orrs	r6, r3
 8001a90:	2102      	movs	r1, #2
 8001a92:	e761      	b.n	8001958 <__aeabi_ddiv+0x8c>
 8001a94:	4643      	mov	r3, r8
 8001a96:	4313      	orrs	r3, r2
 8001a98:	469b      	mov	fp, r3
 8001a9a:	d037      	beq.n	8001b0c <__aeabi_ddiv+0x240>
 8001a9c:	4643      	mov	r3, r8
 8001a9e:	2b00      	cmp	r3, #0
 8001aa0:	d100      	bne.n	8001aa4 <__aeabi_ddiv+0x1d8>
 8001aa2:	e162      	b.n	8001d6a <__aeabi_ddiv+0x49e>
 8001aa4:	4640      	mov	r0, r8
 8001aa6:	f001 fa69 	bl	8002f7c <__clzsi2>
 8001aaa:	0003      	movs	r3, r0
 8001aac:	3b0b      	subs	r3, #11
 8001aae:	2b1c      	cmp	r3, #28
 8001ab0:	dd00      	ble.n	8001ab4 <__aeabi_ddiv+0x1e8>
 8001ab2:	e153      	b.n	8001d5c <__aeabi_ddiv+0x490>
 8001ab4:	0002      	movs	r2, r0
 8001ab6:	4641      	mov	r1, r8
 8001ab8:	3a08      	subs	r2, #8
 8001aba:	4091      	lsls	r1, r2
 8001abc:	4688      	mov	r8, r1
 8001abe:	211d      	movs	r1, #29
 8001ac0:	1acb      	subs	r3, r1, r3
 8001ac2:	4651      	mov	r1, sl
 8001ac4:	40d9      	lsrs	r1, r3
 8001ac6:	000b      	movs	r3, r1
 8001ac8:	4641      	mov	r1, r8
 8001aca:	430b      	orrs	r3, r1
 8001acc:	469b      	mov	fp, r3
 8001ace:	4653      	mov	r3, sl
 8001ad0:	4093      	lsls	r3, r2
 8001ad2:	001a      	movs	r2, r3
 8001ad4:	9b00      	ldr	r3, [sp, #0]
 8001ad6:	4925      	ldr	r1, [pc, #148]	; (8001b6c <__aeabi_ddiv+0x2a0>)
 8001ad8:	469c      	mov	ip, r3
 8001ada:	4460      	add	r0, ip
 8001adc:	0003      	movs	r3, r0
 8001ade:	468c      	mov	ip, r1
 8001ae0:	4463      	add	r3, ip
 8001ae2:	9300      	str	r3, [sp, #0]
 8001ae4:	2100      	movs	r1, #0
 8001ae6:	e737      	b.n	8001958 <__aeabi_ddiv+0x8c>
 8001ae8:	2303      	movs	r3, #3
 8001aea:	46b1      	mov	r9, r6
 8001aec:	9000      	str	r0, [sp, #0]
 8001aee:	260c      	movs	r6, #12
 8001af0:	9302      	str	r3, [sp, #8]
 8001af2:	e711      	b.n	8001918 <__aeabi_ddiv+0x4c>
 8001af4:	2300      	movs	r3, #0
 8001af6:	9300      	str	r3, [sp, #0]
 8001af8:	3301      	adds	r3, #1
 8001afa:	2604      	movs	r6, #4
 8001afc:	2700      	movs	r7, #0
 8001afe:	9302      	str	r3, [sp, #8]
 8001b00:	e70a      	b.n	8001918 <__aeabi_ddiv+0x4c>
 8001b02:	2303      	movs	r3, #3
 8001b04:	46c3      	mov	fp, r8
 8001b06:	431e      	orrs	r6, r3
 8001b08:	2103      	movs	r1, #3
 8001b0a:	e725      	b.n	8001958 <__aeabi_ddiv+0x8c>
 8001b0c:	3301      	adds	r3, #1
 8001b0e:	431e      	orrs	r6, r3
 8001b10:	2200      	movs	r2, #0
 8001b12:	2101      	movs	r1, #1
 8001b14:	e720      	b.n	8001958 <__aeabi_ddiv+0x8c>
 8001b16:	2300      	movs	r3, #0
 8001b18:	469a      	mov	sl, r3
 8001b1a:	2380      	movs	r3, #128	; 0x80
 8001b1c:	2700      	movs	r7, #0
 8001b1e:	031b      	lsls	r3, r3, #12
 8001b20:	4a09      	ldr	r2, [pc, #36]	; (8001b48 <__aeabi_ddiv+0x27c>)
 8001b22:	e761      	b.n	80019e8 <__aeabi_ddiv+0x11c>
 8001b24:	2380      	movs	r3, #128	; 0x80
 8001b26:	4649      	mov	r1, r9
 8001b28:	031b      	lsls	r3, r3, #12
 8001b2a:	4219      	tst	r1, r3
 8001b2c:	d100      	bne.n	8001b30 <__aeabi_ddiv+0x264>
 8001b2e:	e0e2      	b.n	8001cf6 <__aeabi_ddiv+0x42a>
 8001b30:	4659      	mov	r1, fp
 8001b32:	4219      	tst	r1, r3
 8001b34:	d000      	beq.n	8001b38 <__aeabi_ddiv+0x26c>
 8001b36:	e0de      	b.n	8001cf6 <__aeabi_ddiv+0x42a>
 8001b38:	430b      	orrs	r3, r1
 8001b3a:	031b      	lsls	r3, r3, #12
 8001b3c:	0017      	movs	r7, r2
 8001b3e:	0b1b      	lsrs	r3, r3, #12
 8001b40:	46a2      	mov	sl, r4
 8001b42:	4a01      	ldr	r2, [pc, #4]	; (8001b48 <__aeabi_ddiv+0x27c>)
 8001b44:	e750      	b.n	80019e8 <__aeabi_ddiv+0x11c>
 8001b46:	46c0      	nop			; (mov r8, r8)
 8001b48:	000007ff 	.word	0x000007ff
 8001b4c:	fffffc01 	.word	0xfffffc01
 8001b50:	08009554 	.word	0x08009554
 8001b54:	000003ff 	.word	0x000003ff
 8001b58:	feffffff 	.word	0xfeffffff
 8001b5c:	000007fe 	.word	0x000007fe
 8001b60:	800fffff 	.word	0x800fffff
 8001b64:	fffffc0d 	.word	0xfffffc0d
 8001b68:	fffff801 	.word	0xfffff801
 8001b6c:	000003f3 	.word	0x000003f3
 8001b70:	45d9      	cmp	r9, fp
 8001b72:	d900      	bls.n	8001b76 <__aeabi_ddiv+0x2aa>
 8001b74:	e0cb      	b.n	8001d0e <__aeabi_ddiv+0x442>
 8001b76:	d100      	bne.n	8001b7a <__aeabi_ddiv+0x2ae>
 8001b78:	e0c6      	b.n	8001d08 <__aeabi_ddiv+0x43c>
 8001b7a:	003c      	movs	r4, r7
 8001b7c:	4648      	mov	r0, r9
 8001b7e:	2700      	movs	r7, #0
 8001b80:	9b00      	ldr	r3, [sp, #0]
 8001b82:	3b01      	subs	r3, #1
 8001b84:	9300      	str	r3, [sp, #0]
 8001b86:	465b      	mov	r3, fp
 8001b88:	0e16      	lsrs	r6, r2, #24
 8001b8a:	021b      	lsls	r3, r3, #8
 8001b8c:	431e      	orrs	r6, r3
 8001b8e:	0213      	lsls	r3, r2, #8
 8001b90:	4698      	mov	r8, r3
 8001b92:	0433      	lsls	r3, r6, #16
 8001b94:	0c1b      	lsrs	r3, r3, #16
 8001b96:	4699      	mov	r9, r3
 8001b98:	0c31      	lsrs	r1, r6, #16
 8001b9a:	9101      	str	r1, [sp, #4]
 8001b9c:	f7fe fb4c 	bl	8000238 <__aeabi_uidivmod>
 8001ba0:	464a      	mov	r2, r9
 8001ba2:	4342      	muls	r2, r0
 8001ba4:	040b      	lsls	r3, r1, #16
 8001ba6:	0c21      	lsrs	r1, r4, #16
 8001ba8:	0005      	movs	r5, r0
 8001baa:	4319      	orrs	r1, r3
 8001bac:	428a      	cmp	r2, r1
 8001bae:	d907      	bls.n	8001bc0 <__aeabi_ddiv+0x2f4>
 8001bb0:	1989      	adds	r1, r1, r6
 8001bb2:	3d01      	subs	r5, #1
 8001bb4:	428e      	cmp	r6, r1
 8001bb6:	d803      	bhi.n	8001bc0 <__aeabi_ddiv+0x2f4>
 8001bb8:	428a      	cmp	r2, r1
 8001bba:	d901      	bls.n	8001bc0 <__aeabi_ddiv+0x2f4>
 8001bbc:	1e85      	subs	r5, r0, #2
 8001bbe:	1989      	adds	r1, r1, r6
 8001bc0:	1a88      	subs	r0, r1, r2
 8001bc2:	9901      	ldr	r1, [sp, #4]
 8001bc4:	f7fe fb38 	bl	8000238 <__aeabi_uidivmod>
 8001bc8:	0409      	lsls	r1, r1, #16
 8001bca:	468c      	mov	ip, r1
 8001bcc:	464a      	mov	r2, r9
 8001bce:	0421      	lsls	r1, r4, #16
 8001bd0:	4664      	mov	r4, ip
 8001bd2:	4342      	muls	r2, r0
 8001bd4:	0c09      	lsrs	r1, r1, #16
 8001bd6:	0003      	movs	r3, r0
 8001bd8:	4321      	orrs	r1, r4
 8001bda:	428a      	cmp	r2, r1
 8001bdc:	d904      	bls.n	8001be8 <__aeabi_ddiv+0x31c>
 8001bde:	1989      	adds	r1, r1, r6
 8001be0:	3b01      	subs	r3, #1
 8001be2:	428e      	cmp	r6, r1
 8001be4:	d800      	bhi.n	8001be8 <__aeabi_ddiv+0x31c>
 8001be6:	e0f1      	b.n	8001dcc <__aeabi_ddiv+0x500>
 8001be8:	042d      	lsls	r5, r5, #16
 8001bea:	431d      	orrs	r5, r3
 8001bec:	46ab      	mov	fp, r5
 8001bee:	4643      	mov	r3, r8
 8001bf0:	1a89      	subs	r1, r1, r2
 8001bf2:	4642      	mov	r2, r8
 8001bf4:	0c28      	lsrs	r0, r5, #16
 8001bf6:	0412      	lsls	r2, r2, #16
 8001bf8:	0c1d      	lsrs	r5, r3, #16
 8001bfa:	465b      	mov	r3, fp
 8001bfc:	0c14      	lsrs	r4, r2, #16
 8001bfe:	0022      	movs	r2, r4
 8001c00:	041b      	lsls	r3, r3, #16
 8001c02:	0c1b      	lsrs	r3, r3, #16
 8001c04:	435a      	muls	r2, r3
 8001c06:	9403      	str	r4, [sp, #12]
 8001c08:	436b      	muls	r3, r5
 8001c0a:	4344      	muls	r4, r0
 8001c0c:	9502      	str	r5, [sp, #8]
 8001c0e:	4368      	muls	r0, r5
 8001c10:	191b      	adds	r3, r3, r4
 8001c12:	0c15      	lsrs	r5, r2, #16
 8001c14:	18eb      	adds	r3, r5, r3
 8001c16:	429c      	cmp	r4, r3
 8001c18:	d903      	bls.n	8001c22 <__aeabi_ddiv+0x356>
 8001c1a:	2480      	movs	r4, #128	; 0x80
 8001c1c:	0264      	lsls	r4, r4, #9
 8001c1e:	46a4      	mov	ip, r4
 8001c20:	4460      	add	r0, ip
 8001c22:	0c1c      	lsrs	r4, r3, #16
 8001c24:	0415      	lsls	r5, r2, #16
 8001c26:	041b      	lsls	r3, r3, #16
 8001c28:	0c2d      	lsrs	r5, r5, #16
 8001c2a:	1820      	adds	r0, r4, r0
 8001c2c:	195d      	adds	r5, r3, r5
 8001c2e:	4281      	cmp	r1, r0
 8001c30:	d377      	bcc.n	8001d22 <__aeabi_ddiv+0x456>
 8001c32:	d073      	beq.n	8001d1c <__aeabi_ddiv+0x450>
 8001c34:	1a0c      	subs	r4, r1, r0
 8001c36:	4aa2      	ldr	r2, [pc, #648]	; (8001ec0 <__aeabi_ddiv+0x5f4>)
 8001c38:	1b7d      	subs	r5, r7, r5
 8001c3a:	42af      	cmp	r7, r5
 8001c3c:	41bf      	sbcs	r7, r7
 8001c3e:	4694      	mov	ip, r2
 8001c40:	9b00      	ldr	r3, [sp, #0]
 8001c42:	427f      	negs	r7, r7
 8001c44:	4463      	add	r3, ip
 8001c46:	1be0      	subs	r0, r4, r7
 8001c48:	001c      	movs	r4, r3
 8001c4a:	4286      	cmp	r6, r0
 8001c4c:	d100      	bne.n	8001c50 <__aeabi_ddiv+0x384>
 8001c4e:	e0db      	b.n	8001e08 <__aeabi_ddiv+0x53c>
 8001c50:	9901      	ldr	r1, [sp, #4]
 8001c52:	f7fe faf1 	bl	8000238 <__aeabi_uidivmod>
 8001c56:	464a      	mov	r2, r9
 8001c58:	4342      	muls	r2, r0
 8001c5a:	040b      	lsls	r3, r1, #16
 8001c5c:	0c29      	lsrs	r1, r5, #16
 8001c5e:	0007      	movs	r7, r0
 8001c60:	4319      	orrs	r1, r3
 8001c62:	428a      	cmp	r2, r1
 8001c64:	d907      	bls.n	8001c76 <__aeabi_ddiv+0x3aa>
 8001c66:	1989      	adds	r1, r1, r6
 8001c68:	3f01      	subs	r7, #1
 8001c6a:	428e      	cmp	r6, r1
 8001c6c:	d803      	bhi.n	8001c76 <__aeabi_ddiv+0x3aa>
 8001c6e:	428a      	cmp	r2, r1
 8001c70:	d901      	bls.n	8001c76 <__aeabi_ddiv+0x3aa>
 8001c72:	1e87      	subs	r7, r0, #2
 8001c74:	1989      	adds	r1, r1, r6
 8001c76:	1a88      	subs	r0, r1, r2
 8001c78:	9901      	ldr	r1, [sp, #4]
 8001c7a:	f7fe fadd 	bl	8000238 <__aeabi_uidivmod>
 8001c7e:	0409      	lsls	r1, r1, #16
 8001c80:	464a      	mov	r2, r9
 8001c82:	4689      	mov	r9, r1
 8001c84:	0429      	lsls	r1, r5, #16
 8001c86:	464d      	mov	r5, r9
 8001c88:	4342      	muls	r2, r0
 8001c8a:	0c09      	lsrs	r1, r1, #16
 8001c8c:	0003      	movs	r3, r0
 8001c8e:	4329      	orrs	r1, r5
 8001c90:	428a      	cmp	r2, r1
 8001c92:	d907      	bls.n	8001ca4 <__aeabi_ddiv+0x3d8>
 8001c94:	1989      	adds	r1, r1, r6
 8001c96:	3b01      	subs	r3, #1
 8001c98:	428e      	cmp	r6, r1
 8001c9a:	d803      	bhi.n	8001ca4 <__aeabi_ddiv+0x3d8>
 8001c9c:	428a      	cmp	r2, r1
 8001c9e:	d901      	bls.n	8001ca4 <__aeabi_ddiv+0x3d8>
 8001ca0:	1e83      	subs	r3, r0, #2
 8001ca2:	1989      	adds	r1, r1, r6
 8001ca4:	043f      	lsls	r7, r7, #16
 8001ca6:	1a89      	subs	r1, r1, r2
 8001ca8:	003a      	movs	r2, r7
 8001caa:	9f03      	ldr	r7, [sp, #12]
 8001cac:	431a      	orrs	r2, r3
 8001cae:	0038      	movs	r0, r7
 8001cb0:	0413      	lsls	r3, r2, #16
 8001cb2:	0c1b      	lsrs	r3, r3, #16
 8001cb4:	4358      	muls	r0, r3
 8001cb6:	4681      	mov	r9, r0
 8001cb8:	9802      	ldr	r0, [sp, #8]
 8001cba:	0c15      	lsrs	r5, r2, #16
 8001cbc:	436f      	muls	r7, r5
 8001cbe:	4343      	muls	r3, r0
 8001cc0:	4345      	muls	r5, r0
 8001cc2:	4648      	mov	r0, r9
 8001cc4:	0c00      	lsrs	r0, r0, #16
 8001cc6:	4684      	mov	ip, r0
 8001cc8:	19db      	adds	r3, r3, r7
 8001cca:	4463      	add	r3, ip
 8001ccc:	429f      	cmp	r7, r3
 8001cce:	d903      	bls.n	8001cd8 <__aeabi_ddiv+0x40c>
 8001cd0:	2080      	movs	r0, #128	; 0x80
 8001cd2:	0240      	lsls	r0, r0, #9
 8001cd4:	4684      	mov	ip, r0
 8001cd6:	4465      	add	r5, ip
 8001cd8:	4648      	mov	r0, r9
 8001cda:	0c1f      	lsrs	r7, r3, #16
 8001cdc:	0400      	lsls	r0, r0, #16
 8001cde:	041b      	lsls	r3, r3, #16
 8001ce0:	0c00      	lsrs	r0, r0, #16
 8001ce2:	197d      	adds	r5, r7, r5
 8001ce4:	1818      	adds	r0, r3, r0
 8001ce6:	42a9      	cmp	r1, r5
 8001ce8:	d200      	bcs.n	8001cec <__aeabi_ddiv+0x420>
 8001cea:	e084      	b.n	8001df6 <__aeabi_ddiv+0x52a>
 8001cec:	d100      	bne.n	8001cf0 <__aeabi_ddiv+0x424>
 8001cee:	e07f      	b.n	8001df0 <__aeabi_ddiv+0x524>
 8001cf0:	2301      	movs	r3, #1
 8001cf2:	431a      	orrs	r2, r3
 8001cf4:	e657      	b.n	80019a6 <__aeabi_ddiv+0xda>
 8001cf6:	2380      	movs	r3, #128	; 0x80
 8001cf8:	464a      	mov	r2, r9
 8001cfa:	031b      	lsls	r3, r3, #12
 8001cfc:	4313      	orrs	r3, r2
 8001cfe:	031b      	lsls	r3, r3, #12
 8001d00:	0b1b      	lsrs	r3, r3, #12
 8001d02:	46aa      	mov	sl, r5
 8001d04:	4a6f      	ldr	r2, [pc, #444]	; (8001ec4 <__aeabi_ddiv+0x5f8>)
 8001d06:	e66f      	b.n	80019e8 <__aeabi_ddiv+0x11c>
 8001d08:	42ba      	cmp	r2, r7
 8001d0a:	d900      	bls.n	8001d0e <__aeabi_ddiv+0x442>
 8001d0c:	e735      	b.n	8001b7a <__aeabi_ddiv+0x2ae>
 8001d0e:	464b      	mov	r3, r9
 8001d10:	07dc      	lsls	r4, r3, #31
 8001d12:	0858      	lsrs	r0, r3, #1
 8001d14:	087b      	lsrs	r3, r7, #1
 8001d16:	431c      	orrs	r4, r3
 8001d18:	07ff      	lsls	r7, r7, #31
 8001d1a:	e734      	b.n	8001b86 <__aeabi_ddiv+0x2ba>
 8001d1c:	2400      	movs	r4, #0
 8001d1e:	42af      	cmp	r7, r5
 8001d20:	d289      	bcs.n	8001c36 <__aeabi_ddiv+0x36a>
 8001d22:	4447      	add	r7, r8
 8001d24:	4547      	cmp	r7, r8
 8001d26:	41a4      	sbcs	r4, r4
 8001d28:	465b      	mov	r3, fp
 8001d2a:	4264      	negs	r4, r4
 8001d2c:	19a4      	adds	r4, r4, r6
 8001d2e:	1864      	adds	r4, r4, r1
 8001d30:	3b01      	subs	r3, #1
 8001d32:	42a6      	cmp	r6, r4
 8001d34:	d21e      	bcs.n	8001d74 <__aeabi_ddiv+0x4a8>
 8001d36:	42a0      	cmp	r0, r4
 8001d38:	d86d      	bhi.n	8001e16 <__aeabi_ddiv+0x54a>
 8001d3a:	d100      	bne.n	8001d3e <__aeabi_ddiv+0x472>
 8001d3c:	e0b6      	b.n	8001eac <__aeabi_ddiv+0x5e0>
 8001d3e:	1a24      	subs	r4, r4, r0
 8001d40:	469b      	mov	fp, r3
 8001d42:	e778      	b.n	8001c36 <__aeabi_ddiv+0x36a>
 8001d44:	0003      	movs	r3, r0
 8001d46:	465a      	mov	r2, fp
 8001d48:	3b28      	subs	r3, #40	; 0x28
 8001d4a:	409a      	lsls	r2, r3
 8001d4c:	2700      	movs	r7, #0
 8001d4e:	4691      	mov	r9, r2
 8001d50:	e688      	b.n	8001a64 <__aeabi_ddiv+0x198>
 8001d52:	4658      	mov	r0, fp
 8001d54:	f001 f912 	bl	8002f7c <__clzsi2>
 8001d58:	3020      	adds	r0, #32
 8001d5a:	e672      	b.n	8001a42 <__aeabi_ddiv+0x176>
 8001d5c:	0003      	movs	r3, r0
 8001d5e:	4652      	mov	r2, sl
 8001d60:	3b28      	subs	r3, #40	; 0x28
 8001d62:	409a      	lsls	r2, r3
 8001d64:	4693      	mov	fp, r2
 8001d66:	2200      	movs	r2, #0
 8001d68:	e6b4      	b.n	8001ad4 <__aeabi_ddiv+0x208>
 8001d6a:	4650      	mov	r0, sl
 8001d6c:	f001 f906 	bl	8002f7c <__clzsi2>
 8001d70:	3020      	adds	r0, #32
 8001d72:	e69a      	b.n	8001aaa <__aeabi_ddiv+0x1de>
 8001d74:	42a6      	cmp	r6, r4
 8001d76:	d1e2      	bne.n	8001d3e <__aeabi_ddiv+0x472>
 8001d78:	45b8      	cmp	r8, r7
 8001d7a:	d9dc      	bls.n	8001d36 <__aeabi_ddiv+0x46a>
 8001d7c:	1a34      	subs	r4, r6, r0
 8001d7e:	469b      	mov	fp, r3
 8001d80:	e759      	b.n	8001c36 <__aeabi_ddiv+0x36a>
 8001d82:	2b1f      	cmp	r3, #31
 8001d84:	dc65      	bgt.n	8001e52 <__aeabi_ddiv+0x586>
 8001d86:	4c50      	ldr	r4, [pc, #320]	; (8001ec8 <__aeabi_ddiv+0x5fc>)
 8001d88:	9900      	ldr	r1, [sp, #0]
 8001d8a:	46a4      	mov	ip, r4
 8001d8c:	465c      	mov	r4, fp
 8001d8e:	4461      	add	r1, ip
 8001d90:	0008      	movs	r0, r1
 8001d92:	408c      	lsls	r4, r1
 8001d94:	0011      	movs	r1, r2
 8001d96:	4082      	lsls	r2, r0
 8001d98:	40d9      	lsrs	r1, r3
 8001d9a:	1e50      	subs	r0, r2, #1
 8001d9c:	4182      	sbcs	r2, r0
 8001d9e:	430c      	orrs	r4, r1
 8001da0:	4314      	orrs	r4, r2
 8001da2:	465a      	mov	r2, fp
 8001da4:	40da      	lsrs	r2, r3
 8001da6:	0013      	movs	r3, r2
 8001da8:	0762      	lsls	r2, r4, #29
 8001daa:	d009      	beq.n	8001dc0 <__aeabi_ddiv+0x4f4>
 8001dac:	220f      	movs	r2, #15
 8001dae:	4022      	ands	r2, r4
 8001db0:	2a04      	cmp	r2, #4
 8001db2:	d005      	beq.n	8001dc0 <__aeabi_ddiv+0x4f4>
 8001db4:	0022      	movs	r2, r4
 8001db6:	1d14      	adds	r4, r2, #4
 8001db8:	4294      	cmp	r4, r2
 8001dba:	4189      	sbcs	r1, r1
 8001dbc:	4249      	negs	r1, r1
 8001dbe:	185b      	adds	r3, r3, r1
 8001dc0:	021a      	lsls	r2, r3, #8
 8001dc2:	d562      	bpl.n	8001e8a <__aeabi_ddiv+0x5be>
 8001dc4:	2201      	movs	r2, #1
 8001dc6:	2300      	movs	r3, #0
 8001dc8:	2700      	movs	r7, #0
 8001dca:	e60d      	b.n	80019e8 <__aeabi_ddiv+0x11c>
 8001dcc:	428a      	cmp	r2, r1
 8001dce:	d800      	bhi.n	8001dd2 <__aeabi_ddiv+0x506>
 8001dd0:	e70a      	b.n	8001be8 <__aeabi_ddiv+0x31c>
 8001dd2:	1e83      	subs	r3, r0, #2
 8001dd4:	1989      	adds	r1, r1, r6
 8001dd6:	e707      	b.n	8001be8 <__aeabi_ddiv+0x31c>
 8001dd8:	230f      	movs	r3, #15
 8001dda:	4013      	ands	r3, r2
 8001ddc:	2b04      	cmp	r3, #4
 8001dde:	d100      	bne.n	8001de2 <__aeabi_ddiv+0x516>
 8001de0:	e5e6      	b.n	80019b0 <__aeabi_ddiv+0xe4>
 8001de2:	1d17      	adds	r7, r2, #4
 8001de4:	4297      	cmp	r7, r2
 8001de6:	4192      	sbcs	r2, r2
 8001de8:	4253      	negs	r3, r2
 8001dea:	449b      	add	fp, r3
 8001dec:	08fa      	lsrs	r2, r7, #3
 8001dee:	e5e0      	b.n	80019b2 <__aeabi_ddiv+0xe6>
 8001df0:	2800      	cmp	r0, #0
 8001df2:	d100      	bne.n	8001df6 <__aeabi_ddiv+0x52a>
 8001df4:	e5d7      	b.n	80019a6 <__aeabi_ddiv+0xda>
 8001df6:	1871      	adds	r1, r6, r1
 8001df8:	1e53      	subs	r3, r2, #1
 8001dfa:	42b1      	cmp	r1, r6
 8001dfc:	d327      	bcc.n	8001e4e <__aeabi_ddiv+0x582>
 8001dfe:	42a9      	cmp	r1, r5
 8001e00:	d315      	bcc.n	8001e2e <__aeabi_ddiv+0x562>
 8001e02:	d058      	beq.n	8001eb6 <__aeabi_ddiv+0x5ea>
 8001e04:	001a      	movs	r2, r3
 8001e06:	e773      	b.n	8001cf0 <__aeabi_ddiv+0x424>
 8001e08:	2b00      	cmp	r3, #0
 8001e0a:	dc00      	bgt.n	8001e0e <__aeabi_ddiv+0x542>
 8001e0c:	e604      	b.n	8001a18 <__aeabi_ddiv+0x14c>
 8001e0e:	2301      	movs	r3, #1
 8001e10:	2200      	movs	r2, #0
 8001e12:	449b      	add	fp, r3
 8001e14:	e5cd      	b.n	80019b2 <__aeabi_ddiv+0xe6>
 8001e16:	2302      	movs	r3, #2
 8001e18:	4447      	add	r7, r8
 8001e1a:	4547      	cmp	r7, r8
 8001e1c:	4189      	sbcs	r1, r1
 8001e1e:	425b      	negs	r3, r3
 8001e20:	469c      	mov	ip, r3
 8001e22:	4249      	negs	r1, r1
 8001e24:	1989      	adds	r1, r1, r6
 8001e26:	190c      	adds	r4, r1, r4
 8001e28:	44e3      	add	fp, ip
 8001e2a:	1a24      	subs	r4, r4, r0
 8001e2c:	e703      	b.n	8001c36 <__aeabi_ddiv+0x36a>
 8001e2e:	4643      	mov	r3, r8
 8001e30:	005f      	lsls	r7, r3, #1
 8001e32:	4547      	cmp	r7, r8
 8001e34:	419b      	sbcs	r3, r3
 8001e36:	46b8      	mov	r8, r7
 8001e38:	425b      	negs	r3, r3
 8001e3a:	199e      	adds	r6, r3, r6
 8001e3c:	3a02      	subs	r2, #2
 8001e3e:	1989      	adds	r1, r1, r6
 8001e40:	42a9      	cmp	r1, r5
 8001e42:	d000      	beq.n	8001e46 <__aeabi_ddiv+0x57a>
 8001e44:	e754      	b.n	8001cf0 <__aeabi_ddiv+0x424>
 8001e46:	4540      	cmp	r0, r8
 8001e48:	d000      	beq.n	8001e4c <__aeabi_ddiv+0x580>
 8001e4a:	e751      	b.n	8001cf0 <__aeabi_ddiv+0x424>
 8001e4c:	e5ab      	b.n	80019a6 <__aeabi_ddiv+0xda>
 8001e4e:	001a      	movs	r2, r3
 8001e50:	e7f6      	b.n	8001e40 <__aeabi_ddiv+0x574>
 8001e52:	211f      	movs	r1, #31
 8001e54:	465f      	mov	r7, fp
 8001e56:	4249      	negs	r1, r1
 8001e58:	1b0c      	subs	r4, r1, r4
 8001e5a:	40e7      	lsrs	r7, r4
 8001e5c:	2b20      	cmp	r3, #32
 8001e5e:	d007      	beq.n	8001e70 <__aeabi_ddiv+0x5a4>
 8001e60:	491a      	ldr	r1, [pc, #104]	; (8001ecc <__aeabi_ddiv+0x600>)
 8001e62:	9b00      	ldr	r3, [sp, #0]
 8001e64:	468c      	mov	ip, r1
 8001e66:	4463      	add	r3, ip
 8001e68:	0018      	movs	r0, r3
 8001e6a:	465b      	mov	r3, fp
 8001e6c:	4083      	lsls	r3, r0
 8001e6e:	431a      	orrs	r2, r3
 8001e70:	1e50      	subs	r0, r2, #1
 8001e72:	4182      	sbcs	r2, r0
 8001e74:	433a      	orrs	r2, r7
 8001e76:	2707      	movs	r7, #7
 8001e78:	2300      	movs	r3, #0
 8001e7a:	4017      	ands	r7, r2
 8001e7c:	d009      	beq.n	8001e92 <__aeabi_ddiv+0x5c6>
 8001e7e:	210f      	movs	r1, #15
 8001e80:	2300      	movs	r3, #0
 8001e82:	4011      	ands	r1, r2
 8001e84:	0014      	movs	r4, r2
 8001e86:	2904      	cmp	r1, #4
 8001e88:	d195      	bne.n	8001db6 <__aeabi_ddiv+0x4ea>
 8001e8a:	0022      	movs	r2, r4
 8001e8c:	075f      	lsls	r7, r3, #29
 8001e8e:	025b      	lsls	r3, r3, #9
 8001e90:	0b1b      	lsrs	r3, r3, #12
 8001e92:	08d2      	lsrs	r2, r2, #3
 8001e94:	4317      	orrs	r7, r2
 8001e96:	2200      	movs	r2, #0
 8001e98:	e5a6      	b.n	80019e8 <__aeabi_ddiv+0x11c>
 8001e9a:	2380      	movs	r3, #128	; 0x80
 8001e9c:	4659      	mov	r1, fp
 8001e9e:	031b      	lsls	r3, r3, #12
 8001ea0:	430b      	orrs	r3, r1
 8001ea2:	031b      	lsls	r3, r3, #12
 8001ea4:	0017      	movs	r7, r2
 8001ea6:	0b1b      	lsrs	r3, r3, #12
 8001ea8:	4a06      	ldr	r2, [pc, #24]	; (8001ec4 <__aeabi_ddiv+0x5f8>)
 8001eaa:	e59d      	b.n	80019e8 <__aeabi_ddiv+0x11c>
 8001eac:	42bd      	cmp	r5, r7
 8001eae:	d8b2      	bhi.n	8001e16 <__aeabi_ddiv+0x54a>
 8001eb0:	469b      	mov	fp, r3
 8001eb2:	2400      	movs	r4, #0
 8001eb4:	e6bf      	b.n	8001c36 <__aeabi_ddiv+0x36a>
 8001eb6:	4580      	cmp	r8, r0
 8001eb8:	d3b9      	bcc.n	8001e2e <__aeabi_ddiv+0x562>
 8001eba:	001a      	movs	r2, r3
 8001ebc:	e7c3      	b.n	8001e46 <__aeabi_ddiv+0x57a>
 8001ebe:	46c0      	nop			; (mov r8, r8)
 8001ec0:	000003ff 	.word	0x000003ff
 8001ec4:	000007ff 	.word	0x000007ff
 8001ec8:	0000041e 	.word	0x0000041e
 8001ecc:	0000043e 	.word	0x0000043e

08001ed0 <__eqdf2>:
 8001ed0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001ed2:	464f      	mov	r7, r9
 8001ed4:	4646      	mov	r6, r8
 8001ed6:	46d6      	mov	lr, sl
 8001ed8:	4684      	mov	ip, r0
 8001eda:	b5c0      	push	{r6, r7, lr}
 8001edc:	4680      	mov	r8, r0
 8001ede:	4e19      	ldr	r6, [pc, #100]	; (8001f44 <__eqdf2+0x74>)
 8001ee0:	0318      	lsls	r0, r3, #12
 8001ee2:	030f      	lsls	r7, r1, #12
 8001ee4:	004d      	lsls	r5, r1, #1
 8001ee6:	0b00      	lsrs	r0, r0, #12
 8001ee8:	005c      	lsls	r4, r3, #1
 8001eea:	4682      	mov	sl, r0
 8001eec:	0b3f      	lsrs	r7, r7, #12
 8001eee:	0d6d      	lsrs	r5, r5, #21
 8001ef0:	0fc9      	lsrs	r1, r1, #31
 8001ef2:	4691      	mov	r9, r2
 8001ef4:	0d64      	lsrs	r4, r4, #21
 8001ef6:	0fdb      	lsrs	r3, r3, #31
 8001ef8:	2001      	movs	r0, #1
 8001efa:	42b5      	cmp	r5, r6
 8001efc:	d00a      	beq.n	8001f14 <__eqdf2+0x44>
 8001efe:	42b4      	cmp	r4, r6
 8001f00:	d003      	beq.n	8001f0a <__eqdf2+0x3a>
 8001f02:	42a5      	cmp	r5, r4
 8001f04:	d101      	bne.n	8001f0a <__eqdf2+0x3a>
 8001f06:	4557      	cmp	r7, sl
 8001f08:	d00c      	beq.n	8001f24 <__eqdf2+0x54>
 8001f0a:	bc1c      	pop	{r2, r3, r4}
 8001f0c:	4690      	mov	r8, r2
 8001f0e:	4699      	mov	r9, r3
 8001f10:	46a2      	mov	sl, r4
 8001f12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f14:	4666      	mov	r6, ip
 8001f16:	433e      	orrs	r6, r7
 8001f18:	d1f7      	bne.n	8001f0a <__eqdf2+0x3a>
 8001f1a:	42ac      	cmp	r4, r5
 8001f1c:	d1f5      	bne.n	8001f0a <__eqdf2+0x3a>
 8001f1e:	4654      	mov	r4, sl
 8001f20:	4314      	orrs	r4, r2
 8001f22:	d1f2      	bne.n	8001f0a <__eqdf2+0x3a>
 8001f24:	2001      	movs	r0, #1
 8001f26:	45c8      	cmp	r8, r9
 8001f28:	d1ef      	bne.n	8001f0a <__eqdf2+0x3a>
 8001f2a:	4299      	cmp	r1, r3
 8001f2c:	d007      	beq.n	8001f3e <__eqdf2+0x6e>
 8001f2e:	2d00      	cmp	r5, #0
 8001f30:	d1eb      	bne.n	8001f0a <__eqdf2+0x3a>
 8001f32:	4663      	mov	r3, ip
 8001f34:	431f      	orrs	r7, r3
 8001f36:	0038      	movs	r0, r7
 8001f38:	1e47      	subs	r7, r0, #1
 8001f3a:	41b8      	sbcs	r0, r7
 8001f3c:	e7e5      	b.n	8001f0a <__eqdf2+0x3a>
 8001f3e:	2000      	movs	r0, #0
 8001f40:	e7e3      	b.n	8001f0a <__eqdf2+0x3a>
 8001f42:	46c0      	nop			; (mov r8, r8)
 8001f44:	000007ff 	.word	0x000007ff

08001f48 <__gedf2>:
 8001f48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f4a:	464f      	mov	r7, r9
 8001f4c:	4646      	mov	r6, r8
 8001f4e:	46d6      	mov	lr, sl
 8001f50:	004d      	lsls	r5, r1, #1
 8001f52:	b5c0      	push	{r6, r7, lr}
 8001f54:	030e      	lsls	r6, r1, #12
 8001f56:	0fc9      	lsrs	r1, r1, #31
 8001f58:	468a      	mov	sl, r1
 8001f5a:	492c      	ldr	r1, [pc, #176]	; (800200c <__gedf2+0xc4>)
 8001f5c:	031f      	lsls	r7, r3, #12
 8001f5e:	005c      	lsls	r4, r3, #1
 8001f60:	4680      	mov	r8, r0
 8001f62:	0b36      	lsrs	r6, r6, #12
 8001f64:	0d6d      	lsrs	r5, r5, #21
 8001f66:	4691      	mov	r9, r2
 8001f68:	0b3f      	lsrs	r7, r7, #12
 8001f6a:	0d64      	lsrs	r4, r4, #21
 8001f6c:	0fdb      	lsrs	r3, r3, #31
 8001f6e:	428d      	cmp	r5, r1
 8001f70:	d01e      	beq.n	8001fb0 <__gedf2+0x68>
 8001f72:	428c      	cmp	r4, r1
 8001f74:	d016      	beq.n	8001fa4 <__gedf2+0x5c>
 8001f76:	2d00      	cmp	r5, #0
 8001f78:	d11e      	bne.n	8001fb8 <__gedf2+0x70>
 8001f7a:	4330      	orrs	r0, r6
 8001f7c:	4684      	mov	ip, r0
 8001f7e:	2c00      	cmp	r4, #0
 8001f80:	d101      	bne.n	8001f86 <__gedf2+0x3e>
 8001f82:	433a      	orrs	r2, r7
 8001f84:	d023      	beq.n	8001fce <__gedf2+0x86>
 8001f86:	4662      	mov	r2, ip
 8001f88:	2a00      	cmp	r2, #0
 8001f8a:	d01a      	beq.n	8001fc2 <__gedf2+0x7a>
 8001f8c:	459a      	cmp	sl, r3
 8001f8e:	d029      	beq.n	8001fe4 <__gedf2+0x9c>
 8001f90:	4651      	mov	r1, sl
 8001f92:	2002      	movs	r0, #2
 8001f94:	3901      	subs	r1, #1
 8001f96:	4008      	ands	r0, r1
 8001f98:	3801      	subs	r0, #1
 8001f9a:	bc1c      	pop	{r2, r3, r4}
 8001f9c:	4690      	mov	r8, r2
 8001f9e:	4699      	mov	r9, r3
 8001fa0:	46a2      	mov	sl, r4
 8001fa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001fa4:	0039      	movs	r1, r7
 8001fa6:	4311      	orrs	r1, r2
 8001fa8:	d0e5      	beq.n	8001f76 <__gedf2+0x2e>
 8001faa:	2002      	movs	r0, #2
 8001fac:	4240      	negs	r0, r0
 8001fae:	e7f4      	b.n	8001f9a <__gedf2+0x52>
 8001fb0:	4330      	orrs	r0, r6
 8001fb2:	d1fa      	bne.n	8001faa <__gedf2+0x62>
 8001fb4:	42ac      	cmp	r4, r5
 8001fb6:	d00f      	beq.n	8001fd8 <__gedf2+0x90>
 8001fb8:	2c00      	cmp	r4, #0
 8001fba:	d10f      	bne.n	8001fdc <__gedf2+0x94>
 8001fbc:	433a      	orrs	r2, r7
 8001fbe:	d0e7      	beq.n	8001f90 <__gedf2+0x48>
 8001fc0:	e00c      	b.n	8001fdc <__gedf2+0x94>
 8001fc2:	2201      	movs	r2, #1
 8001fc4:	3b01      	subs	r3, #1
 8001fc6:	4393      	bics	r3, r2
 8001fc8:	0018      	movs	r0, r3
 8001fca:	3001      	adds	r0, #1
 8001fcc:	e7e5      	b.n	8001f9a <__gedf2+0x52>
 8001fce:	4663      	mov	r3, ip
 8001fd0:	2000      	movs	r0, #0
 8001fd2:	2b00      	cmp	r3, #0
 8001fd4:	d0e1      	beq.n	8001f9a <__gedf2+0x52>
 8001fd6:	e7db      	b.n	8001f90 <__gedf2+0x48>
 8001fd8:	433a      	orrs	r2, r7
 8001fda:	d1e6      	bne.n	8001faa <__gedf2+0x62>
 8001fdc:	459a      	cmp	sl, r3
 8001fde:	d1d7      	bne.n	8001f90 <__gedf2+0x48>
 8001fe0:	42a5      	cmp	r5, r4
 8001fe2:	dcd5      	bgt.n	8001f90 <__gedf2+0x48>
 8001fe4:	42a5      	cmp	r5, r4
 8001fe6:	db05      	blt.n	8001ff4 <__gedf2+0xac>
 8001fe8:	42be      	cmp	r6, r7
 8001fea:	d8d1      	bhi.n	8001f90 <__gedf2+0x48>
 8001fec:	d008      	beq.n	8002000 <__gedf2+0xb8>
 8001fee:	2000      	movs	r0, #0
 8001ff0:	42be      	cmp	r6, r7
 8001ff2:	d2d2      	bcs.n	8001f9a <__gedf2+0x52>
 8001ff4:	4650      	mov	r0, sl
 8001ff6:	2301      	movs	r3, #1
 8001ff8:	3801      	subs	r0, #1
 8001ffa:	4398      	bics	r0, r3
 8001ffc:	3001      	adds	r0, #1
 8001ffe:	e7cc      	b.n	8001f9a <__gedf2+0x52>
 8002000:	45c8      	cmp	r8, r9
 8002002:	d8c5      	bhi.n	8001f90 <__gedf2+0x48>
 8002004:	2000      	movs	r0, #0
 8002006:	45c8      	cmp	r8, r9
 8002008:	d3f4      	bcc.n	8001ff4 <__gedf2+0xac>
 800200a:	e7c6      	b.n	8001f9a <__gedf2+0x52>
 800200c:	000007ff 	.word	0x000007ff

08002010 <__ledf2>:
 8002010:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002012:	464f      	mov	r7, r9
 8002014:	4646      	mov	r6, r8
 8002016:	46d6      	mov	lr, sl
 8002018:	004d      	lsls	r5, r1, #1
 800201a:	b5c0      	push	{r6, r7, lr}
 800201c:	030e      	lsls	r6, r1, #12
 800201e:	0fc9      	lsrs	r1, r1, #31
 8002020:	468a      	mov	sl, r1
 8002022:	492e      	ldr	r1, [pc, #184]	; (80020dc <__ledf2+0xcc>)
 8002024:	031f      	lsls	r7, r3, #12
 8002026:	005c      	lsls	r4, r3, #1
 8002028:	4680      	mov	r8, r0
 800202a:	0b36      	lsrs	r6, r6, #12
 800202c:	0d6d      	lsrs	r5, r5, #21
 800202e:	4691      	mov	r9, r2
 8002030:	0b3f      	lsrs	r7, r7, #12
 8002032:	0d64      	lsrs	r4, r4, #21
 8002034:	0fdb      	lsrs	r3, r3, #31
 8002036:	428d      	cmp	r5, r1
 8002038:	d018      	beq.n	800206c <__ledf2+0x5c>
 800203a:	428c      	cmp	r4, r1
 800203c:	d011      	beq.n	8002062 <__ledf2+0x52>
 800203e:	2d00      	cmp	r5, #0
 8002040:	d118      	bne.n	8002074 <__ledf2+0x64>
 8002042:	4330      	orrs	r0, r6
 8002044:	4684      	mov	ip, r0
 8002046:	2c00      	cmp	r4, #0
 8002048:	d11e      	bne.n	8002088 <__ledf2+0x78>
 800204a:	433a      	orrs	r2, r7
 800204c:	d11c      	bne.n	8002088 <__ledf2+0x78>
 800204e:	4663      	mov	r3, ip
 8002050:	2000      	movs	r0, #0
 8002052:	2b00      	cmp	r3, #0
 8002054:	d030      	beq.n	80020b8 <__ledf2+0xa8>
 8002056:	4651      	mov	r1, sl
 8002058:	2002      	movs	r0, #2
 800205a:	3901      	subs	r1, #1
 800205c:	4008      	ands	r0, r1
 800205e:	3801      	subs	r0, #1
 8002060:	e02a      	b.n	80020b8 <__ledf2+0xa8>
 8002062:	0039      	movs	r1, r7
 8002064:	4311      	orrs	r1, r2
 8002066:	d0ea      	beq.n	800203e <__ledf2+0x2e>
 8002068:	2002      	movs	r0, #2
 800206a:	e025      	b.n	80020b8 <__ledf2+0xa8>
 800206c:	4330      	orrs	r0, r6
 800206e:	d1fb      	bne.n	8002068 <__ledf2+0x58>
 8002070:	42ac      	cmp	r4, r5
 8002072:	d026      	beq.n	80020c2 <__ledf2+0xb2>
 8002074:	2c00      	cmp	r4, #0
 8002076:	d126      	bne.n	80020c6 <__ledf2+0xb6>
 8002078:	433a      	orrs	r2, r7
 800207a:	d124      	bne.n	80020c6 <__ledf2+0xb6>
 800207c:	4651      	mov	r1, sl
 800207e:	2002      	movs	r0, #2
 8002080:	3901      	subs	r1, #1
 8002082:	4008      	ands	r0, r1
 8002084:	3801      	subs	r0, #1
 8002086:	e017      	b.n	80020b8 <__ledf2+0xa8>
 8002088:	4662      	mov	r2, ip
 800208a:	2a00      	cmp	r2, #0
 800208c:	d00f      	beq.n	80020ae <__ledf2+0x9e>
 800208e:	459a      	cmp	sl, r3
 8002090:	d1e1      	bne.n	8002056 <__ledf2+0x46>
 8002092:	42a5      	cmp	r5, r4
 8002094:	db05      	blt.n	80020a2 <__ledf2+0x92>
 8002096:	42be      	cmp	r6, r7
 8002098:	d8dd      	bhi.n	8002056 <__ledf2+0x46>
 800209a:	d019      	beq.n	80020d0 <__ledf2+0xc0>
 800209c:	2000      	movs	r0, #0
 800209e:	42be      	cmp	r6, r7
 80020a0:	d20a      	bcs.n	80020b8 <__ledf2+0xa8>
 80020a2:	4650      	mov	r0, sl
 80020a4:	2301      	movs	r3, #1
 80020a6:	3801      	subs	r0, #1
 80020a8:	4398      	bics	r0, r3
 80020aa:	3001      	adds	r0, #1
 80020ac:	e004      	b.n	80020b8 <__ledf2+0xa8>
 80020ae:	2201      	movs	r2, #1
 80020b0:	3b01      	subs	r3, #1
 80020b2:	4393      	bics	r3, r2
 80020b4:	0018      	movs	r0, r3
 80020b6:	3001      	adds	r0, #1
 80020b8:	bc1c      	pop	{r2, r3, r4}
 80020ba:	4690      	mov	r8, r2
 80020bc:	4699      	mov	r9, r3
 80020be:	46a2      	mov	sl, r4
 80020c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020c2:	433a      	orrs	r2, r7
 80020c4:	d1d0      	bne.n	8002068 <__ledf2+0x58>
 80020c6:	459a      	cmp	sl, r3
 80020c8:	d1c5      	bne.n	8002056 <__ledf2+0x46>
 80020ca:	42a5      	cmp	r5, r4
 80020cc:	dcc3      	bgt.n	8002056 <__ledf2+0x46>
 80020ce:	e7e0      	b.n	8002092 <__ledf2+0x82>
 80020d0:	45c8      	cmp	r8, r9
 80020d2:	d8c0      	bhi.n	8002056 <__ledf2+0x46>
 80020d4:	2000      	movs	r0, #0
 80020d6:	45c8      	cmp	r8, r9
 80020d8:	d3e3      	bcc.n	80020a2 <__ledf2+0x92>
 80020da:	e7ed      	b.n	80020b8 <__ledf2+0xa8>
 80020dc:	000007ff 	.word	0x000007ff

080020e0 <__aeabi_dmul>:
 80020e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020e2:	4657      	mov	r7, sl
 80020e4:	46de      	mov	lr, fp
 80020e6:	464e      	mov	r6, r9
 80020e8:	4645      	mov	r5, r8
 80020ea:	b5e0      	push	{r5, r6, r7, lr}
 80020ec:	4683      	mov	fp, r0
 80020ee:	0006      	movs	r6, r0
 80020f0:	030f      	lsls	r7, r1, #12
 80020f2:	0048      	lsls	r0, r1, #1
 80020f4:	b087      	sub	sp, #28
 80020f6:	4692      	mov	sl, r2
 80020f8:	001d      	movs	r5, r3
 80020fa:	0b3f      	lsrs	r7, r7, #12
 80020fc:	0d40      	lsrs	r0, r0, #21
 80020fe:	0fcc      	lsrs	r4, r1, #31
 8002100:	2800      	cmp	r0, #0
 8002102:	d100      	bne.n	8002106 <__aeabi_dmul+0x26>
 8002104:	e06f      	b.n	80021e6 <__aeabi_dmul+0x106>
 8002106:	4bde      	ldr	r3, [pc, #888]	; (8002480 <__aeabi_dmul+0x3a0>)
 8002108:	4298      	cmp	r0, r3
 800210a:	d038      	beq.n	800217e <__aeabi_dmul+0x9e>
 800210c:	2380      	movs	r3, #128	; 0x80
 800210e:	00ff      	lsls	r7, r7, #3
 8002110:	041b      	lsls	r3, r3, #16
 8002112:	431f      	orrs	r7, r3
 8002114:	0f73      	lsrs	r3, r6, #29
 8002116:	433b      	orrs	r3, r7
 8002118:	9301      	str	r3, [sp, #4]
 800211a:	4bda      	ldr	r3, [pc, #872]	; (8002484 <__aeabi_dmul+0x3a4>)
 800211c:	2700      	movs	r7, #0
 800211e:	4699      	mov	r9, r3
 8002120:	2300      	movs	r3, #0
 8002122:	469b      	mov	fp, r3
 8002124:	00f6      	lsls	r6, r6, #3
 8002126:	4481      	add	r9, r0
 8002128:	032b      	lsls	r3, r5, #12
 800212a:	0069      	lsls	r1, r5, #1
 800212c:	0b1b      	lsrs	r3, r3, #12
 800212e:	4652      	mov	r2, sl
 8002130:	4698      	mov	r8, r3
 8002132:	0d49      	lsrs	r1, r1, #21
 8002134:	0fed      	lsrs	r5, r5, #31
 8002136:	2900      	cmp	r1, #0
 8002138:	d100      	bne.n	800213c <__aeabi_dmul+0x5c>
 800213a:	e085      	b.n	8002248 <__aeabi_dmul+0x168>
 800213c:	4bd0      	ldr	r3, [pc, #832]	; (8002480 <__aeabi_dmul+0x3a0>)
 800213e:	4299      	cmp	r1, r3
 8002140:	d100      	bne.n	8002144 <__aeabi_dmul+0x64>
 8002142:	e073      	b.n	800222c <__aeabi_dmul+0x14c>
 8002144:	4643      	mov	r3, r8
 8002146:	00da      	lsls	r2, r3, #3
 8002148:	2380      	movs	r3, #128	; 0x80
 800214a:	041b      	lsls	r3, r3, #16
 800214c:	4313      	orrs	r3, r2
 800214e:	4652      	mov	r2, sl
 8002150:	48cc      	ldr	r0, [pc, #816]	; (8002484 <__aeabi_dmul+0x3a4>)
 8002152:	0f52      	lsrs	r2, r2, #29
 8002154:	4684      	mov	ip, r0
 8002156:	4313      	orrs	r3, r2
 8002158:	4652      	mov	r2, sl
 800215a:	2000      	movs	r0, #0
 800215c:	4461      	add	r1, ip
 800215e:	00d2      	lsls	r2, r2, #3
 8002160:	4489      	add	r9, r1
 8002162:	0021      	movs	r1, r4
 8002164:	4069      	eors	r1, r5
 8002166:	9100      	str	r1, [sp, #0]
 8002168:	468c      	mov	ip, r1
 800216a:	2101      	movs	r1, #1
 800216c:	4449      	add	r1, r9
 800216e:	468a      	mov	sl, r1
 8002170:	2f0f      	cmp	r7, #15
 8002172:	d900      	bls.n	8002176 <__aeabi_dmul+0x96>
 8002174:	e090      	b.n	8002298 <__aeabi_dmul+0x1b8>
 8002176:	49c4      	ldr	r1, [pc, #784]	; (8002488 <__aeabi_dmul+0x3a8>)
 8002178:	00bf      	lsls	r7, r7, #2
 800217a:	59cf      	ldr	r7, [r1, r7]
 800217c:	46bf      	mov	pc, r7
 800217e:	465b      	mov	r3, fp
 8002180:	433b      	orrs	r3, r7
 8002182:	9301      	str	r3, [sp, #4]
 8002184:	d000      	beq.n	8002188 <__aeabi_dmul+0xa8>
 8002186:	e16a      	b.n	800245e <__aeabi_dmul+0x37e>
 8002188:	2302      	movs	r3, #2
 800218a:	2708      	movs	r7, #8
 800218c:	2600      	movs	r6, #0
 800218e:	4681      	mov	r9, r0
 8002190:	469b      	mov	fp, r3
 8002192:	e7c9      	b.n	8002128 <__aeabi_dmul+0x48>
 8002194:	0032      	movs	r2, r6
 8002196:	4658      	mov	r0, fp
 8002198:	9b01      	ldr	r3, [sp, #4]
 800219a:	4661      	mov	r1, ip
 800219c:	9100      	str	r1, [sp, #0]
 800219e:	2802      	cmp	r0, #2
 80021a0:	d100      	bne.n	80021a4 <__aeabi_dmul+0xc4>
 80021a2:	e075      	b.n	8002290 <__aeabi_dmul+0x1b0>
 80021a4:	2803      	cmp	r0, #3
 80021a6:	d100      	bne.n	80021aa <__aeabi_dmul+0xca>
 80021a8:	e1fe      	b.n	80025a8 <__aeabi_dmul+0x4c8>
 80021aa:	2801      	cmp	r0, #1
 80021ac:	d000      	beq.n	80021b0 <__aeabi_dmul+0xd0>
 80021ae:	e12c      	b.n	800240a <__aeabi_dmul+0x32a>
 80021b0:	2300      	movs	r3, #0
 80021b2:	2700      	movs	r7, #0
 80021b4:	2600      	movs	r6, #0
 80021b6:	2500      	movs	r5, #0
 80021b8:	033f      	lsls	r7, r7, #12
 80021ba:	0d2a      	lsrs	r2, r5, #20
 80021bc:	0b3f      	lsrs	r7, r7, #12
 80021be:	48b3      	ldr	r0, [pc, #716]	; (800248c <__aeabi_dmul+0x3ac>)
 80021c0:	0512      	lsls	r2, r2, #20
 80021c2:	433a      	orrs	r2, r7
 80021c4:	4002      	ands	r2, r0
 80021c6:	051b      	lsls	r3, r3, #20
 80021c8:	4313      	orrs	r3, r2
 80021ca:	9a00      	ldr	r2, [sp, #0]
 80021cc:	005b      	lsls	r3, r3, #1
 80021ce:	07d1      	lsls	r1, r2, #31
 80021d0:	085b      	lsrs	r3, r3, #1
 80021d2:	430b      	orrs	r3, r1
 80021d4:	0030      	movs	r0, r6
 80021d6:	0019      	movs	r1, r3
 80021d8:	b007      	add	sp, #28
 80021da:	bc3c      	pop	{r2, r3, r4, r5}
 80021dc:	4690      	mov	r8, r2
 80021de:	4699      	mov	r9, r3
 80021e0:	46a2      	mov	sl, r4
 80021e2:	46ab      	mov	fp, r5
 80021e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021e6:	465b      	mov	r3, fp
 80021e8:	433b      	orrs	r3, r7
 80021ea:	9301      	str	r3, [sp, #4]
 80021ec:	d100      	bne.n	80021f0 <__aeabi_dmul+0x110>
 80021ee:	e12f      	b.n	8002450 <__aeabi_dmul+0x370>
 80021f0:	2f00      	cmp	r7, #0
 80021f2:	d100      	bne.n	80021f6 <__aeabi_dmul+0x116>
 80021f4:	e1a5      	b.n	8002542 <__aeabi_dmul+0x462>
 80021f6:	0038      	movs	r0, r7
 80021f8:	f000 fec0 	bl	8002f7c <__clzsi2>
 80021fc:	0003      	movs	r3, r0
 80021fe:	3b0b      	subs	r3, #11
 8002200:	2b1c      	cmp	r3, #28
 8002202:	dd00      	ble.n	8002206 <__aeabi_dmul+0x126>
 8002204:	e196      	b.n	8002534 <__aeabi_dmul+0x454>
 8002206:	221d      	movs	r2, #29
 8002208:	1ad3      	subs	r3, r2, r3
 800220a:	465a      	mov	r2, fp
 800220c:	0001      	movs	r1, r0
 800220e:	40da      	lsrs	r2, r3
 8002210:	465e      	mov	r6, fp
 8002212:	3908      	subs	r1, #8
 8002214:	408f      	lsls	r7, r1
 8002216:	0013      	movs	r3, r2
 8002218:	408e      	lsls	r6, r1
 800221a:	433b      	orrs	r3, r7
 800221c:	9301      	str	r3, [sp, #4]
 800221e:	4b9c      	ldr	r3, [pc, #624]	; (8002490 <__aeabi_dmul+0x3b0>)
 8002220:	2700      	movs	r7, #0
 8002222:	1a1b      	subs	r3, r3, r0
 8002224:	4699      	mov	r9, r3
 8002226:	2300      	movs	r3, #0
 8002228:	469b      	mov	fp, r3
 800222a:	e77d      	b.n	8002128 <__aeabi_dmul+0x48>
 800222c:	4641      	mov	r1, r8
 800222e:	4653      	mov	r3, sl
 8002230:	430b      	orrs	r3, r1
 8002232:	4993      	ldr	r1, [pc, #588]	; (8002480 <__aeabi_dmul+0x3a0>)
 8002234:	468c      	mov	ip, r1
 8002236:	44e1      	add	r9, ip
 8002238:	2b00      	cmp	r3, #0
 800223a:	d000      	beq.n	800223e <__aeabi_dmul+0x15e>
 800223c:	e11a      	b.n	8002474 <__aeabi_dmul+0x394>
 800223e:	2202      	movs	r2, #2
 8002240:	2002      	movs	r0, #2
 8002242:	4317      	orrs	r7, r2
 8002244:	2200      	movs	r2, #0
 8002246:	e78c      	b.n	8002162 <__aeabi_dmul+0x82>
 8002248:	4313      	orrs	r3, r2
 800224a:	d100      	bne.n	800224e <__aeabi_dmul+0x16e>
 800224c:	e10d      	b.n	800246a <__aeabi_dmul+0x38a>
 800224e:	4643      	mov	r3, r8
 8002250:	2b00      	cmp	r3, #0
 8002252:	d100      	bne.n	8002256 <__aeabi_dmul+0x176>
 8002254:	e181      	b.n	800255a <__aeabi_dmul+0x47a>
 8002256:	4640      	mov	r0, r8
 8002258:	f000 fe90 	bl	8002f7c <__clzsi2>
 800225c:	0002      	movs	r2, r0
 800225e:	3a0b      	subs	r2, #11
 8002260:	2a1c      	cmp	r2, #28
 8002262:	dd00      	ble.n	8002266 <__aeabi_dmul+0x186>
 8002264:	e172      	b.n	800254c <__aeabi_dmul+0x46c>
 8002266:	0001      	movs	r1, r0
 8002268:	4643      	mov	r3, r8
 800226a:	3908      	subs	r1, #8
 800226c:	408b      	lsls	r3, r1
 800226e:	4698      	mov	r8, r3
 8002270:	231d      	movs	r3, #29
 8002272:	1a9a      	subs	r2, r3, r2
 8002274:	4653      	mov	r3, sl
 8002276:	40d3      	lsrs	r3, r2
 8002278:	001a      	movs	r2, r3
 800227a:	4643      	mov	r3, r8
 800227c:	4313      	orrs	r3, r2
 800227e:	4652      	mov	r2, sl
 8002280:	408a      	lsls	r2, r1
 8002282:	4649      	mov	r1, r9
 8002284:	1a08      	subs	r0, r1, r0
 8002286:	4982      	ldr	r1, [pc, #520]	; (8002490 <__aeabi_dmul+0x3b0>)
 8002288:	4689      	mov	r9, r1
 800228a:	4481      	add	r9, r0
 800228c:	2000      	movs	r0, #0
 800228e:	e768      	b.n	8002162 <__aeabi_dmul+0x82>
 8002290:	4b7b      	ldr	r3, [pc, #492]	; (8002480 <__aeabi_dmul+0x3a0>)
 8002292:	2700      	movs	r7, #0
 8002294:	2600      	movs	r6, #0
 8002296:	e78e      	b.n	80021b6 <__aeabi_dmul+0xd6>
 8002298:	0c14      	lsrs	r4, r2, #16
 800229a:	0412      	lsls	r2, r2, #16
 800229c:	0c12      	lsrs	r2, r2, #16
 800229e:	0011      	movs	r1, r2
 80022a0:	0c37      	lsrs	r7, r6, #16
 80022a2:	0436      	lsls	r6, r6, #16
 80022a4:	0c35      	lsrs	r5, r6, #16
 80022a6:	4379      	muls	r1, r7
 80022a8:	0028      	movs	r0, r5
 80022aa:	468c      	mov	ip, r1
 80022ac:	002e      	movs	r6, r5
 80022ae:	4360      	muls	r0, r4
 80022b0:	4460      	add	r0, ip
 80022b2:	4683      	mov	fp, r0
 80022b4:	4356      	muls	r6, r2
 80022b6:	0021      	movs	r1, r4
 80022b8:	0c30      	lsrs	r0, r6, #16
 80022ba:	4680      	mov	r8, r0
 80022bc:	4658      	mov	r0, fp
 80022be:	4379      	muls	r1, r7
 80022c0:	4440      	add	r0, r8
 80022c2:	9102      	str	r1, [sp, #8]
 80022c4:	4584      	cmp	ip, r0
 80022c6:	d906      	bls.n	80022d6 <__aeabi_dmul+0x1f6>
 80022c8:	4688      	mov	r8, r1
 80022ca:	2180      	movs	r1, #128	; 0x80
 80022cc:	0249      	lsls	r1, r1, #9
 80022ce:	468c      	mov	ip, r1
 80022d0:	44e0      	add	r8, ip
 80022d2:	4641      	mov	r1, r8
 80022d4:	9102      	str	r1, [sp, #8]
 80022d6:	0436      	lsls	r6, r6, #16
 80022d8:	0c01      	lsrs	r1, r0, #16
 80022da:	0c36      	lsrs	r6, r6, #16
 80022dc:	0400      	lsls	r0, r0, #16
 80022de:	468b      	mov	fp, r1
 80022e0:	1981      	adds	r1, r0, r6
 80022e2:	0c1e      	lsrs	r6, r3, #16
 80022e4:	041b      	lsls	r3, r3, #16
 80022e6:	0c1b      	lsrs	r3, r3, #16
 80022e8:	9103      	str	r1, [sp, #12]
 80022ea:	0019      	movs	r1, r3
 80022ec:	4379      	muls	r1, r7
 80022ee:	468c      	mov	ip, r1
 80022f0:	0028      	movs	r0, r5
 80022f2:	4375      	muls	r5, r6
 80022f4:	4465      	add	r5, ip
 80022f6:	46a8      	mov	r8, r5
 80022f8:	4358      	muls	r0, r3
 80022fa:	0c05      	lsrs	r5, r0, #16
 80022fc:	4445      	add	r5, r8
 80022fe:	4377      	muls	r7, r6
 8002300:	42a9      	cmp	r1, r5
 8002302:	d903      	bls.n	800230c <__aeabi_dmul+0x22c>
 8002304:	2180      	movs	r1, #128	; 0x80
 8002306:	0249      	lsls	r1, r1, #9
 8002308:	468c      	mov	ip, r1
 800230a:	4467      	add	r7, ip
 800230c:	0c29      	lsrs	r1, r5, #16
 800230e:	468c      	mov	ip, r1
 8002310:	0039      	movs	r1, r7
 8002312:	0400      	lsls	r0, r0, #16
 8002314:	0c00      	lsrs	r0, r0, #16
 8002316:	042d      	lsls	r5, r5, #16
 8002318:	182d      	adds	r5, r5, r0
 800231a:	4461      	add	r1, ip
 800231c:	44ab      	add	fp, r5
 800231e:	9105      	str	r1, [sp, #20]
 8002320:	4659      	mov	r1, fp
 8002322:	9104      	str	r1, [sp, #16]
 8002324:	9901      	ldr	r1, [sp, #4]
 8002326:	040f      	lsls	r7, r1, #16
 8002328:	0c3f      	lsrs	r7, r7, #16
 800232a:	0c08      	lsrs	r0, r1, #16
 800232c:	0039      	movs	r1, r7
 800232e:	4351      	muls	r1, r2
 8002330:	4342      	muls	r2, r0
 8002332:	4690      	mov	r8, r2
 8002334:	0002      	movs	r2, r0
 8002336:	468c      	mov	ip, r1
 8002338:	0c09      	lsrs	r1, r1, #16
 800233a:	468b      	mov	fp, r1
 800233c:	4362      	muls	r2, r4
 800233e:	437c      	muls	r4, r7
 8002340:	4444      	add	r4, r8
 8002342:	445c      	add	r4, fp
 8002344:	45a0      	cmp	r8, r4
 8002346:	d903      	bls.n	8002350 <__aeabi_dmul+0x270>
 8002348:	2180      	movs	r1, #128	; 0x80
 800234a:	0249      	lsls	r1, r1, #9
 800234c:	4688      	mov	r8, r1
 800234e:	4442      	add	r2, r8
 8002350:	0c21      	lsrs	r1, r4, #16
 8002352:	4688      	mov	r8, r1
 8002354:	4661      	mov	r1, ip
 8002356:	0409      	lsls	r1, r1, #16
 8002358:	0c09      	lsrs	r1, r1, #16
 800235a:	468c      	mov	ip, r1
 800235c:	0039      	movs	r1, r7
 800235e:	4359      	muls	r1, r3
 8002360:	4343      	muls	r3, r0
 8002362:	4370      	muls	r0, r6
 8002364:	437e      	muls	r6, r7
 8002366:	0c0f      	lsrs	r7, r1, #16
 8002368:	18f6      	adds	r6, r6, r3
 800236a:	0424      	lsls	r4, r4, #16
 800236c:	19be      	adds	r6, r7, r6
 800236e:	4464      	add	r4, ip
 8002370:	4442      	add	r2, r8
 8002372:	468c      	mov	ip, r1
 8002374:	42b3      	cmp	r3, r6
 8002376:	d903      	bls.n	8002380 <__aeabi_dmul+0x2a0>
 8002378:	2380      	movs	r3, #128	; 0x80
 800237a:	025b      	lsls	r3, r3, #9
 800237c:	4698      	mov	r8, r3
 800237e:	4440      	add	r0, r8
 8002380:	9b02      	ldr	r3, [sp, #8]
 8002382:	4661      	mov	r1, ip
 8002384:	4698      	mov	r8, r3
 8002386:	9b04      	ldr	r3, [sp, #16]
 8002388:	0437      	lsls	r7, r6, #16
 800238a:	4443      	add	r3, r8
 800238c:	469b      	mov	fp, r3
 800238e:	45ab      	cmp	fp, r5
 8002390:	41ad      	sbcs	r5, r5
 8002392:	426b      	negs	r3, r5
 8002394:	040d      	lsls	r5, r1, #16
 8002396:	9905      	ldr	r1, [sp, #20]
 8002398:	0c2d      	lsrs	r5, r5, #16
 800239a:	468c      	mov	ip, r1
 800239c:	197f      	adds	r7, r7, r5
 800239e:	4467      	add	r7, ip
 80023a0:	18fd      	adds	r5, r7, r3
 80023a2:	46a8      	mov	r8, r5
 80023a4:	465d      	mov	r5, fp
 80023a6:	192d      	adds	r5, r5, r4
 80023a8:	42a5      	cmp	r5, r4
 80023aa:	41a4      	sbcs	r4, r4
 80023ac:	4693      	mov	fp, r2
 80023ae:	4264      	negs	r4, r4
 80023b0:	46a4      	mov	ip, r4
 80023b2:	44c3      	add	fp, r8
 80023b4:	44dc      	add	ip, fp
 80023b6:	428f      	cmp	r7, r1
 80023b8:	41bf      	sbcs	r7, r7
 80023ba:	4598      	cmp	r8, r3
 80023bc:	419b      	sbcs	r3, r3
 80023be:	4593      	cmp	fp, r2
 80023c0:	4192      	sbcs	r2, r2
 80023c2:	45a4      	cmp	ip, r4
 80023c4:	41a4      	sbcs	r4, r4
 80023c6:	425b      	negs	r3, r3
 80023c8:	427f      	negs	r7, r7
 80023ca:	431f      	orrs	r7, r3
 80023cc:	0c36      	lsrs	r6, r6, #16
 80023ce:	4252      	negs	r2, r2
 80023d0:	4264      	negs	r4, r4
 80023d2:	19bf      	adds	r7, r7, r6
 80023d4:	4322      	orrs	r2, r4
 80023d6:	18bf      	adds	r7, r7, r2
 80023d8:	4662      	mov	r2, ip
 80023da:	1838      	adds	r0, r7, r0
 80023dc:	0243      	lsls	r3, r0, #9
 80023de:	0dd2      	lsrs	r2, r2, #23
 80023e0:	9903      	ldr	r1, [sp, #12]
 80023e2:	4313      	orrs	r3, r2
 80023e4:	026a      	lsls	r2, r5, #9
 80023e6:	430a      	orrs	r2, r1
 80023e8:	1e50      	subs	r0, r2, #1
 80023ea:	4182      	sbcs	r2, r0
 80023ec:	4661      	mov	r1, ip
 80023ee:	0ded      	lsrs	r5, r5, #23
 80023f0:	432a      	orrs	r2, r5
 80023f2:	024e      	lsls	r6, r1, #9
 80023f4:	4332      	orrs	r2, r6
 80023f6:	01d9      	lsls	r1, r3, #7
 80023f8:	d400      	bmi.n	80023fc <__aeabi_dmul+0x31c>
 80023fa:	e0b3      	b.n	8002564 <__aeabi_dmul+0x484>
 80023fc:	2601      	movs	r6, #1
 80023fe:	0850      	lsrs	r0, r2, #1
 8002400:	4032      	ands	r2, r6
 8002402:	4302      	orrs	r2, r0
 8002404:	07de      	lsls	r6, r3, #31
 8002406:	4332      	orrs	r2, r6
 8002408:	085b      	lsrs	r3, r3, #1
 800240a:	4c22      	ldr	r4, [pc, #136]	; (8002494 <__aeabi_dmul+0x3b4>)
 800240c:	4454      	add	r4, sl
 800240e:	2c00      	cmp	r4, #0
 8002410:	dd62      	ble.n	80024d8 <__aeabi_dmul+0x3f8>
 8002412:	0751      	lsls	r1, r2, #29
 8002414:	d009      	beq.n	800242a <__aeabi_dmul+0x34a>
 8002416:	200f      	movs	r0, #15
 8002418:	4010      	ands	r0, r2
 800241a:	2804      	cmp	r0, #4
 800241c:	d005      	beq.n	800242a <__aeabi_dmul+0x34a>
 800241e:	1d10      	adds	r0, r2, #4
 8002420:	4290      	cmp	r0, r2
 8002422:	4192      	sbcs	r2, r2
 8002424:	4252      	negs	r2, r2
 8002426:	189b      	adds	r3, r3, r2
 8002428:	0002      	movs	r2, r0
 800242a:	01d9      	lsls	r1, r3, #7
 800242c:	d504      	bpl.n	8002438 <__aeabi_dmul+0x358>
 800242e:	2480      	movs	r4, #128	; 0x80
 8002430:	4819      	ldr	r0, [pc, #100]	; (8002498 <__aeabi_dmul+0x3b8>)
 8002432:	00e4      	lsls	r4, r4, #3
 8002434:	4003      	ands	r3, r0
 8002436:	4454      	add	r4, sl
 8002438:	4818      	ldr	r0, [pc, #96]	; (800249c <__aeabi_dmul+0x3bc>)
 800243a:	4284      	cmp	r4, r0
 800243c:	dd00      	ble.n	8002440 <__aeabi_dmul+0x360>
 800243e:	e727      	b.n	8002290 <__aeabi_dmul+0x1b0>
 8002440:	075e      	lsls	r6, r3, #29
 8002442:	025b      	lsls	r3, r3, #9
 8002444:	08d2      	lsrs	r2, r2, #3
 8002446:	0b1f      	lsrs	r7, r3, #12
 8002448:	0563      	lsls	r3, r4, #21
 800244a:	4316      	orrs	r6, r2
 800244c:	0d5b      	lsrs	r3, r3, #21
 800244e:	e6b2      	b.n	80021b6 <__aeabi_dmul+0xd6>
 8002450:	2300      	movs	r3, #0
 8002452:	4699      	mov	r9, r3
 8002454:	3301      	adds	r3, #1
 8002456:	2704      	movs	r7, #4
 8002458:	2600      	movs	r6, #0
 800245a:	469b      	mov	fp, r3
 800245c:	e664      	b.n	8002128 <__aeabi_dmul+0x48>
 800245e:	2303      	movs	r3, #3
 8002460:	9701      	str	r7, [sp, #4]
 8002462:	4681      	mov	r9, r0
 8002464:	270c      	movs	r7, #12
 8002466:	469b      	mov	fp, r3
 8002468:	e65e      	b.n	8002128 <__aeabi_dmul+0x48>
 800246a:	2201      	movs	r2, #1
 800246c:	2001      	movs	r0, #1
 800246e:	4317      	orrs	r7, r2
 8002470:	2200      	movs	r2, #0
 8002472:	e676      	b.n	8002162 <__aeabi_dmul+0x82>
 8002474:	2303      	movs	r3, #3
 8002476:	2003      	movs	r0, #3
 8002478:	431f      	orrs	r7, r3
 800247a:	4643      	mov	r3, r8
 800247c:	e671      	b.n	8002162 <__aeabi_dmul+0x82>
 800247e:	46c0      	nop			; (mov r8, r8)
 8002480:	000007ff 	.word	0x000007ff
 8002484:	fffffc01 	.word	0xfffffc01
 8002488:	08009594 	.word	0x08009594
 800248c:	800fffff 	.word	0x800fffff
 8002490:	fffffc0d 	.word	0xfffffc0d
 8002494:	000003ff 	.word	0x000003ff
 8002498:	feffffff 	.word	0xfeffffff
 800249c:	000007fe 	.word	0x000007fe
 80024a0:	2300      	movs	r3, #0
 80024a2:	2780      	movs	r7, #128	; 0x80
 80024a4:	9300      	str	r3, [sp, #0]
 80024a6:	033f      	lsls	r7, r7, #12
 80024a8:	2600      	movs	r6, #0
 80024aa:	4b43      	ldr	r3, [pc, #268]	; (80025b8 <__aeabi_dmul+0x4d8>)
 80024ac:	e683      	b.n	80021b6 <__aeabi_dmul+0xd6>
 80024ae:	9b01      	ldr	r3, [sp, #4]
 80024b0:	0032      	movs	r2, r6
 80024b2:	46a4      	mov	ip, r4
 80024b4:	4658      	mov	r0, fp
 80024b6:	e670      	b.n	800219a <__aeabi_dmul+0xba>
 80024b8:	46ac      	mov	ip, r5
 80024ba:	e66e      	b.n	800219a <__aeabi_dmul+0xba>
 80024bc:	2780      	movs	r7, #128	; 0x80
 80024be:	9901      	ldr	r1, [sp, #4]
 80024c0:	033f      	lsls	r7, r7, #12
 80024c2:	4239      	tst	r1, r7
 80024c4:	d02d      	beq.n	8002522 <__aeabi_dmul+0x442>
 80024c6:	423b      	tst	r3, r7
 80024c8:	d12b      	bne.n	8002522 <__aeabi_dmul+0x442>
 80024ca:	431f      	orrs	r7, r3
 80024cc:	033f      	lsls	r7, r7, #12
 80024ce:	0b3f      	lsrs	r7, r7, #12
 80024d0:	9500      	str	r5, [sp, #0]
 80024d2:	0016      	movs	r6, r2
 80024d4:	4b38      	ldr	r3, [pc, #224]	; (80025b8 <__aeabi_dmul+0x4d8>)
 80024d6:	e66e      	b.n	80021b6 <__aeabi_dmul+0xd6>
 80024d8:	2501      	movs	r5, #1
 80024da:	1b2d      	subs	r5, r5, r4
 80024dc:	2d38      	cmp	r5, #56	; 0x38
 80024de:	dd00      	ble.n	80024e2 <__aeabi_dmul+0x402>
 80024e0:	e666      	b.n	80021b0 <__aeabi_dmul+0xd0>
 80024e2:	2d1f      	cmp	r5, #31
 80024e4:	dc40      	bgt.n	8002568 <__aeabi_dmul+0x488>
 80024e6:	4835      	ldr	r0, [pc, #212]	; (80025bc <__aeabi_dmul+0x4dc>)
 80024e8:	001c      	movs	r4, r3
 80024ea:	4450      	add	r0, sl
 80024ec:	0016      	movs	r6, r2
 80024ee:	4082      	lsls	r2, r0
 80024f0:	4084      	lsls	r4, r0
 80024f2:	40ee      	lsrs	r6, r5
 80024f4:	1e50      	subs	r0, r2, #1
 80024f6:	4182      	sbcs	r2, r0
 80024f8:	4334      	orrs	r4, r6
 80024fa:	4314      	orrs	r4, r2
 80024fc:	40eb      	lsrs	r3, r5
 80024fe:	0762      	lsls	r2, r4, #29
 8002500:	d009      	beq.n	8002516 <__aeabi_dmul+0x436>
 8002502:	220f      	movs	r2, #15
 8002504:	4022      	ands	r2, r4
 8002506:	2a04      	cmp	r2, #4
 8002508:	d005      	beq.n	8002516 <__aeabi_dmul+0x436>
 800250a:	0022      	movs	r2, r4
 800250c:	1d14      	adds	r4, r2, #4
 800250e:	4294      	cmp	r4, r2
 8002510:	4180      	sbcs	r0, r0
 8002512:	4240      	negs	r0, r0
 8002514:	181b      	adds	r3, r3, r0
 8002516:	021a      	lsls	r2, r3, #8
 8002518:	d53e      	bpl.n	8002598 <__aeabi_dmul+0x4b8>
 800251a:	2301      	movs	r3, #1
 800251c:	2700      	movs	r7, #0
 800251e:	2600      	movs	r6, #0
 8002520:	e649      	b.n	80021b6 <__aeabi_dmul+0xd6>
 8002522:	2780      	movs	r7, #128	; 0x80
 8002524:	9b01      	ldr	r3, [sp, #4]
 8002526:	033f      	lsls	r7, r7, #12
 8002528:	431f      	orrs	r7, r3
 800252a:	033f      	lsls	r7, r7, #12
 800252c:	0b3f      	lsrs	r7, r7, #12
 800252e:	9400      	str	r4, [sp, #0]
 8002530:	4b21      	ldr	r3, [pc, #132]	; (80025b8 <__aeabi_dmul+0x4d8>)
 8002532:	e640      	b.n	80021b6 <__aeabi_dmul+0xd6>
 8002534:	0003      	movs	r3, r0
 8002536:	465a      	mov	r2, fp
 8002538:	3b28      	subs	r3, #40	; 0x28
 800253a:	409a      	lsls	r2, r3
 800253c:	2600      	movs	r6, #0
 800253e:	9201      	str	r2, [sp, #4]
 8002540:	e66d      	b.n	800221e <__aeabi_dmul+0x13e>
 8002542:	4658      	mov	r0, fp
 8002544:	f000 fd1a 	bl	8002f7c <__clzsi2>
 8002548:	3020      	adds	r0, #32
 800254a:	e657      	b.n	80021fc <__aeabi_dmul+0x11c>
 800254c:	0003      	movs	r3, r0
 800254e:	4652      	mov	r2, sl
 8002550:	3b28      	subs	r3, #40	; 0x28
 8002552:	409a      	lsls	r2, r3
 8002554:	0013      	movs	r3, r2
 8002556:	2200      	movs	r2, #0
 8002558:	e693      	b.n	8002282 <__aeabi_dmul+0x1a2>
 800255a:	4650      	mov	r0, sl
 800255c:	f000 fd0e 	bl	8002f7c <__clzsi2>
 8002560:	3020      	adds	r0, #32
 8002562:	e67b      	b.n	800225c <__aeabi_dmul+0x17c>
 8002564:	46ca      	mov	sl, r9
 8002566:	e750      	b.n	800240a <__aeabi_dmul+0x32a>
 8002568:	201f      	movs	r0, #31
 800256a:	001e      	movs	r6, r3
 800256c:	4240      	negs	r0, r0
 800256e:	1b04      	subs	r4, r0, r4
 8002570:	40e6      	lsrs	r6, r4
 8002572:	2d20      	cmp	r5, #32
 8002574:	d003      	beq.n	800257e <__aeabi_dmul+0x49e>
 8002576:	4c12      	ldr	r4, [pc, #72]	; (80025c0 <__aeabi_dmul+0x4e0>)
 8002578:	4454      	add	r4, sl
 800257a:	40a3      	lsls	r3, r4
 800257c:	431a      	orrs	r2, r3
 800257e:	1e50      	subs	r0, r2, #1
 8002580:	4182      	sbcs	r2, r0
 8002582:	4332      	orrs	r2, r6
 8002584:	2607      	movs	r6, #7
 8002586:	2700      	movs	r7, #0
 8002588:	4016      	ands	r6, r2
 800258a:	d009      	beq.n	80025a0 <__aeabi_dmul+0x4c0>
 800258c:	200f      	movs	r0, #15
 800258e:	2300      	movs	r3, #0
 8002590:	4010      	ands	r0, r2
 8002592:	0014      	movs	r4, r2
 8002594:	2804      	cmp	r0, #4
 8002596:	d1b9      	bne.n	800250c <__aeabi_dmul+0x42c>
 8002598:	0022      	movs	r2, r4
 800259a:	075e      	lsls	r6, r3, #29
 800259c:	025b      	lsls	r3, r3, #9
 800259e:	0b1f      	lsrs	r7, r3, #12
 80025a0:	08d2      	lsrs	r2, r2, #3
 80025a2:	4316      	orrs	r6, r2
 80025a4:	2300      	movs	r3, #0
 80025a6:	e606      	b.n	80021b6 <__aeabi_dmul+0xd6>
 80025a8:	2780      	movs	r7, #128	; 0x80
 80025aa:	033f      	lsls	r7, r7, #12
 80025ac:	431f      	orrs	r7, r3
 80025ae:	033f      	lsls	r7, r7, #12
 80025b0:	0b3f      	lsrs	r7, r7, #12
 80025b2:	0016      	movs	r6, r2
 80025b4:	4b00      	ldr	r3, [pc, #0]	; (80025b8 <__aeabi_dmul+0x4d8>)
 80025b6:	e5fe      	b.n	80021b6 <__aeabi_dmul+0xd6>
 80025b8:	000007ff 	.word	0x000007ff
 80025bc:	0000041e 	.word	0x0000041e
 80025c0:	0000043e 	.word	0x0000043e

080025c4 <__aeabi_dsub>:
 80025c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80025c6:	4657      	mov	r7, sl
 80025c8:	464e      	mov	r6, r9
 80025ca:	4645      	mov	r5, r8
 80025cc:	46de      	mov	lr, fp
 80025ce:	000c      	movs	r4, r1
 80025d0:	0309      	lsls	r1, r1, #12
 80025d2:	b5e0      	push	{r5, r6, r7, lr}
 80025d4:	0a49      	lsrs	r1, r1, #9
 80025d6:	0f46      	lsrs	r6, r0, #29
 80025d8:	005f      	lsls	r7, r3, #1
 80025da:	4331      	orrs	r1, r6
 80025dc:	031e      	lsls	r6, r3, #12
 80025de:	0fdb      	lsrs	r3, r3, #31
 80025e0:	0a76      	lsrs	r6, r6, #9
 80025e2:	469b      	mov	fp, r3
 80025e4:	0f53      	lsrs	r3, r2, #29
 80025e6:	4333      	orrs	r3, r6
 80025e8:	4ec8      	ldr	r6, [pc, #800]	; (800290c <__aeabi_dsub+0x348>)
 80025ea:	0065      	lsls	r5, r4, #1
 80025ec:	00c0      	lsls	r0, r0, #3
 80025ee:	0fe4      	lsrs	r4, r4, #31
 80025f0:	00d2      	lsls	r2, r2, #3
 80025f2:	0d6d      	lsrs	r5, r5, #21
 80025f4:	46a2      	mov	sl, r4
 80025f6:	4681      	mov	r9, r0
 80025f8:	0d7f      	lsrs	r7, r7, #21
 80025fa:	469c      	mov	ip, r3
 80025fc:	4690      	mov	r8, r2
 80025fe:	42b7      	cmp	r7, r6
 8002600:	d100      	bne.n	8002604 <__aeabi_dsub+0x40>
 8002602:	e0b9      	b.n	8002778 <__aeabi_dsub+0x1b4>
 8002604:	465b      	mov	r3, fp
 8002606:	2601      	movs	r6, #1
 8002608:	4073      	eors	r3, r6
 800260a:	469b      	mov	fp, r3
 800260c:	1bee      	subs	r6, r5, r7
 800260e:	45a3      	cmp	fp, r4
 8002610:	d100      	bne.n	8002614 <__aeabi_dsub+0x50>
 8002612:	e083      	b.n	800271c <__aeabi_dsub+0x158>
 8002614:	2e00      	cmp	r6, #0
 8002616:	dd63      	ble.n	80026e0 <__aeabi_dsub+0x11c>
 8002618:	2f00      	cmp	r7, #0
 800261a:	d000      	beq.n	800261e <__aeabi_dsub+0x5a>
 800261c:	e0b1      	b.n	8002782 <__aeabi_dsub+0x1be>
 800261e:	4663      	mov	r3, ip
 8002620:	4313      	orrs	r3, r2
 8002622:	d100      	bne.n	8002626 <__aeabi_dsub+0x62>
 8002624:	e123      	b.n	800286e <__aeabi_dsub+0x2aa>
 8002626:	1e73      	subs	r3, r6, #1
 8002628:	2b00      	cmp	r3, #0
 800262a:	d000      	beq.n	800262e <__aeabi_dsub+0x6a>
 800262c:	e1ba      	b.n	80029a4 <__aeabi_dsub+0x3e0>
 800262e:	1a86      	subs	r6, r0, r2
 8002630:	4663      	mov	r3, ip
 8002632:	42b0      	cmp	r0, r6
 8002634:	4180      	sbcs	r0, r0
 8002636:	2501      	movs	r5, #1
 8002638:	1ac9      	subs	r1, r1, r3
 800263a:	4240      	negs	r0, r0
 800263c:	1a09      	subs	r1, r1, r0
 800263e:	020b      	lsls	r3, r1, #8
 8002640:	d400      	bmi.n	8002644 <__aeabi_dsub+0x80>
 8002642:	e147      	b.n	80028d4 <__aeabi_dsub+0x310>
 8002644:	0249      	lsls	r1, r1, #9
 8002646:	0a4b      	lsrs	r3, r1, #9
 8002648:	4698      	mov	r8, r3
 800264a:	4643      	mov	r3, r8
 800264c:	2b00      	cmp	r3, #0
 800264e:	d100      	bne.n	8002652 <__aeabi_dsub+0x8e>
 8002650:	e189      	b.n	8002966 <__aeabi_dsub+0x3a2>
 8002652:	4640      	mov	r0, r8
 8002654:	f000 fc92 	bl	8002f7c <__clzsi2>
 8002658:	0003      	movs	r3, r0
 800265a:	3b08      	subs	r3, #8
 800265c:	2b1f      	cmp	r3, #31
 800265e:	dd00      	ble.n	8002662 <__aeabi_dsub+0x9e>
 8002660:	e17c      	b.n	800295c <__aeabi_dsub+0x398>
 8002662:	2220      	movs	r2, #32
 8002664:	0030      	movs	r0, r6
 8002666:	1ad2      	subs	r2, r2, r3
 8002668:	4641      	mov	r1, r8
 800266a:	40d0      	lsrs	r0, r2
 800266c:	4099      	lsls	r1, r3
 800266e:	0002      	movs	r2, r0
 8002670:	409e      	lsls	r6, r3
 8002672:	430a      	orrs	r2, r1
 8002674:	429d      	cmp	r5, r3
 8002676:	dd00      	ble.n	800267a <__aeabi_dsub+0xb6>
 8002678:	e16a      	b.n	8002950 <__aeabi_dsub+0x38c>
 800267a:	1b5d      	subs	r5, r3, r5
 800267c:	1c6b      	adds	r3, r5, #1
 800267e:	2b1f      	cmp	r3, #31
 8002680:	dd00      	ble.n	8002684 <__aeabi_dsub+0xc0>
 8002682:	e194      	b.n	80029ae <__aeabi_dsub+0x3ea>
 8002684:	2120      	movs	r1, #32
 8002686:	0010      	movs	r0, r2
 8002688:	0035      	movs	r5, r6
 800268a:	1ac9      	subs	r1, r1, r3
 800268c:	408e      	lsls	r6, r1
 800268e:	40da      	lsrs	r2, r3
 8002690:	4088      	lsls	r0, r1
 8002692:	40dd      	lsrs	r5, r3
 8002694:	1e71      	subs	r1, r6, #1
 8002696:	418e      	sbcs	r6, r1
 8002698:	0011      	movs	r1, r2
 800269a:	2207      	movs	r2, #7
 800269c:	4328      	orrs	r0, r5
 800269e:	2500      	movs	r5, #0
 80026a0:	4306      	orrs	r6, r0
 80026a2:	4032      	ands	r2, r6
 80026a4:	2a00      	cmp	r2, #0
 80026a6:	d009      	beq.n	80026bc <__aeabi_dsub+0xf8>
 80026a8:	230f      	movs	r3, #15
 80026aa:	4033      	ands	r3, r6
 80026ac:	2b04      	cmp	r3, #4
 80026ae:	d005      	beq.n	80026bc <__aeabi_dsub+0xf8>
 80026b0:	1d33      	adds	r3, r6, #4
 80026b2:	42b3      	cmp	r3, r6
 80026b4:	41b6      	sbcs	r6, r6
 80026b6:	4276      	negs	r6, r6
 80026b8:	1989      	adds	r1, r1, r6
 80026ba:	001e      	movs	r6, r3
 80026bc:	020b      	lsls	r3, r1, #8
 80026be:	d400      	bmi.n	80026c2 <__aeabi_dsub+0xfe>
 80026c0:	e23d      	b.n	8002b3e <__aeabi_dsub+0x57a>
 80026c2:	1c6a      	adds	r2, r5, #1
 80026c4:	4b91      	ldr	r3, [pc, #580]	; (800290c <__aeabi_dsub+0x348>)
 80026c6:	0555      	lsls	r5, r2, #21
 80026c8:	0d6d      	lsrs	r5, r5, #21
 80026ca:	429a      	cmp	r2, r3
 80026cc:	d100      	bne.n	80026d0 <__aeabi_dsub+0x10c>
 80026ce:	e119      	b.n	8002904 <__aeabi_dsub+0x340>
 80026d0:	4a8f      	ldr	r2, [pc, #572]	; (8002910 <__aeabi_dsub+0x34c>)
 80026d2:	08f6      	lsrs	r6, r6, #3
 80026d4:	400a      	ands	r2, r1
 80026d6:	0757      	lsls	r7, r2, #29
 80026d8:	0252      	lsls	r2, r2, #9
 80026da:	4337      	orrs	r7, r6
 80026dc:	0b12      	lsrs	r2, r2, #12
 80026de:	e09b      	b.n	8002818 <__aeabi_dsub+0x254>
 80026e0:	2e00      	cmp	r6, #0
 80026e2:	d000      	beq.n	80026e6 <__aeabi_dsub+0x122>
 80026e4:	e0c5      	b.n	8002872 <__aeabi_dsub+0x2ae>
 80026e6:	1c6e      	adds	r6, r5, #1
 80026e8:	0576      	lsls	r6, r6, #21
 80026ea:	0d76      	lsrs	r6, r6, #21
 80026ec:	2e01      	cmp	r6, #1
 80026ee:	dc00      	bgt.n	80026f2 <__aeabi_dsub+0x12e>
 80026f0:	e148      	b.n	8002984 <__aeabi_dsub+0x3c0>
 80026f2:	4667      	mov	r7, ip
 80026f4:	1a86      	subs	r6, r0, r2
 80026f6:	1bcb      	subs	r3, r1, r7
 80026f8:	42b0      	cmp	r0, r6
 80026fa:	41bf      	sbcs	r7, r7
 80026fc:	427f      	negs	r7, r7
 80026fe:	46b8      	mov	r8, r7
 8002700:	001f      	movs	r7, r3
 8002702:	4643      	mov	r3, r8
 8002704:	1aff      	subs	r7, r7, r3
 8002706:	003b      	movs	r3, r7
 8002708:	46b8      	mov	r8, r7
 800270a:	021b      	lsls	r3, r3, #8
 800270c:	d500      	bpl.n	8002710 <__aeabi_dsub+0x14c>
 800270e:	e15f      	b.n	80029d0 <__aeabi_dsub+0x40c>
 8002710:	4337      	orrs	r7, r6
 8002712:	d19a      	bne.n	800264a <__aeabi_dsub+0x86>
 8002714:	2200      	movs	r2, #0
 8002716:	2400      	movs	r4, #0
 8002718:	2500      	movs	r5, #0
 800271a:	e079      	b.n	8002810 <__aeabi_dsub+0x24c>
 800271c:	2e00      	cmp	r6, #0
 800271e:	dc00      	bgt.n	8002722 <__aeabi_dsub+0x15e>
 8002720:	e0fa      	b.n	8002918 <__aeabi_dsub+0x354>
 8002722:	2f00      	cmp	r7, #0
 8002724:	d100      	bne.n	8002728 <__aeabi_dsub+0x164>
 8002726:	e08d      	b.n	8002844 <__aeabi_dsub+0x280>
 8002728:	4b78      	ldr	r3, [pc, #480]	; (800290c <__aeabi_dsub+0x348>)
 800272a:	429d      	cmp	r5, r3
 800272c:	d067      	beq.n	80027fe <__aeabi_dsub+0x23a>
 800272e:	2380      	movs	r3, #128	; 0x80
 8002730:	4667      	mov	r7, ip
 8002732:	041b      	lsls	r3, r3, #16
 8002734:	431f      	orrs	r7, r3
 8002736:	46bc      	mov	ip, r7
 8002738:	2e38      	cmp	r6, #56	; 0x38
 800273a:	dc00      	bgt.n	800273e <__aeabi_dsub+0x17a>
 800273c:	e152      	b.n	80029e4 <__aeabi_dsub+0x420>
 800273e:	4663      	mov	r3, ip
 8002740:	4313      	orrs	r3, r2
 8002742:	1e5a      	subs	r2, r3, #1
 8002744:	4193      	sbcs	r3, r2
 8002746:	181e      	adds	r6, r3, r0
 8002748:	4286      	cmp	r6, r0
 800274a:	4180      	sbcs	r0, r0
 800274c:	4240      	negs	r0, r0
 800274e:	1809      	adds	r1, r1, r0
 8002750:	020b      	lsls	r3, r1, #8
 8002752:	d400      	bmi.n	8002756 <__aeabi_dsub+0x192>
 8002754:	e0be      	b.n	80028d4 <__aeabi_dsub+0x310>
 8002756:	4b6d      	ldr	r3, [pc, #436]	; (800290c <__aeabi_dsub+0x348>)
 8002758:	3501      	adds	r5, #1
 800275a:	429d      	cmp	r5, r3
 800275c:	d100      	bne.n	8002760 <__aeabi_dsub+0x19c>
 800275e:	e0d2      	b.n	8002906 <__aeabi_dsub+0x342>
 8002760:	4a6b      	ldr	r2, [pc, #428]	; (8002910 <__aeabi_dsub+0x34c>)
 8002762:	0873      	lsrs	r3, r6, #1
 8002764:	400a      	ands	r2, r1
 8002766:	2101      	movs	r1, #1
 8002768:	400e      	ands	r6, r1
 800276a:	431e      	orrs	r6, r3
 800276c:	0851      	lsrs	r1, r2, #1
 800276e:	07d3      	lsls	r3, r2, #31
 8002770:	2207      	movs	r2, #7
 8002772:	431e      	orrs	r6, r3
 8002774:	4032      	ands	r2, r6
 8002776:	e795      	b.n	80026a4 <__aeabi_dsub+0xe0>
 8002778:	001e      	movs	r6, r3
 800277a:	4316      	orrs	r6, r2
 800277c:	d000      	beq.n	8002780 <__aeabi_dsub+0x1bc>
 800277e:	e745      	b.n	800260c <__aeabi_dsub+0x48>
 8002780:	e740      	b.n	8002604 <__aeabi_dsub+0x40>
 8002782:	4b62      	ldr	r3, [pc, #392]	; (800290c <__aeabi_dsub+0x348>)
 8002784:	429d      	cmp	r5, r3
 8002786:	d03a      	beq.n	80027fe <__aeabi_dsub+0x23a>
 8002788:	2380      	movs	r3, #128	; 0x80
 800278a:	4667      	mov	r7, ip
 800278c:	041b      	lsls	r3, r3, #16
 800278e:	431f      	orrs	r7, r3
 8002790:	46bc      	mov	ip, r7
 8002792:	2e38      	cmp	r6, #56	; 0x38
 8002794:	dd00      	ble.n	8002798 <__aeabi_dsub+0x1d4>
 8002796:	e0eb      	b.n	8002970 <__aeabi_dsub+0x3ac>
 8002798:	2e1f      	cmp	r6, #31
 800279a:	dc00      	bgt.n	800279e <__aeabi_dsub+0x1da>
 800279c:	e13a      	b.n	8002a14 <__aeabi_dsub+0x450>
 800279e:	0033      	movs	r3, r6
 80027a0:	4667      	mov	r7, ip
 80027a2:	3b20      	subs	r3, #32
 80027a4:	40df      	lsrs	r7, r3
 80027a6:	003b      	movs	r3, r7
 80027a8:	2e20      	cmp	r6, #32
 80027aa:	d005      	beq.n	80027b8 <__aeabi_dsub+0x1f4>
 80027ac:	2740      	movs	r7, #64	; 0x40
 80027ae:	1bbf      	subs	r7, r7, r6
 80027b0:	4666      	mov	r6, ip
 80027b2:	40be      	lsls	r6, r7
 80027b4:	4332      	orrs	r2, r6
 80027b6:	4690      	mov	r8, r2
 80027b8:	4646      	mov	r6, r8
 80027ba:	1e72      	subs	r2, r6, #1
 80027bc:	4196      	sbcs	r6, r2
 80027be:	4333      	orrs	r3, r6
 80027c0:	e0da      	b.n	8002978 <__aeabi_dsub+0x3b4>
 80027c2:	2b00      	cmp	r3, #0
 80027c4:	d100      	bne.n	80027c8 <__aeabi_dsub+0x204>
 80027c6:	e214      	b.n	8002bf2 <__aeabi_dsub+0x62e>
 80027c8:	4663      	mov	r3, ip
 80027ca:	4313      	orrs	r3, r2
 80027cc:	d100      	bne.n	80027d0 <__aeabi_dsub+0x20c>
 80027ce:	e168      	b.n	8002aa2 <__aeabi_dsub+0x4de>
 80027d0:	2380      	movs	r3, #128	; 0x80
 80027d2:	074e      	lsls	r6, r1, #29
 80027d4:	08c0      	lsrs	r0, r0, #3
 80027d6:	08c9      	lsrs	r1, r1, #3
 80027d8:	031b      	lsls	r3, r3, #12
 80027da:	4306      	orrs	r6, r0
 80027dc:	4219      	tst	r1, r3
 80027de:	d008      	beq.n	80027f2 <__aeabi_dsub+0x22e>
 80027e0:	4660      	mov	r0, ip
 80027e2:	08c0      	lsrs	r0, r0, #3
 80027e4:	4218      	tst	r0, r3
 80027e6:	d104      	bne.n	80027f2 <__aeabi_dsub+0x22e>
 80027e8:	4663      	mov	r3, ip
 80027ea:	0001      	movs	r1, r0
 80027ec:	08d2      	lsrs	r2, r2, #3
 80027ee:	075e      	lsls	r6, r3, #29
 80027f0:	4316      	orrs	r6, r2
 80027f2:	00f3      	lsls	r3, r6, #3
 80027f4:	4699      	mov	r9, r3
 80027f6:	00c9      	lsls	r1, r1, #3
 80027f8:	0f72      	lsrs	r2, r6, #29
 80027fa:	4d44      	ldr	r5, [pc, #272]	; (800290c <__aeabi_dsub+0x348>)
 80027fc:	4311      	orrs	r1, r2
 80027fe:	464b      	mov	r3, r9
 8002800:	08de      	lsrs	r6, r3, #3
 8002802:	4b42      	ldr	r3, [pc, #264]	; (800290c <__aeabi_dsub+0x348>)
 8002804:	074f      	lsls	r7, r1, #29
 8002806:	4337      	orrs	r7, r6
 8002808:	08ca      	lsrs	r2, r1, #3
 800280a:	429d      	cmp	r5, r3
 800280c:	d100      	bne.n	8002810 <__aeabi_dsub+0x24c>
 800280e:	e06e      	b.n	80028ee <__aeabi_dsub+0x32a>
 8002810:	0312      	lsls	r2, r2, #12
 8002812:	056d      	lsls	r5, r5, #21
 8002814:	0b12      	lsrs	r2, r2, #12
 8002816:	0d6d      	lsrs	r5, r5, #21
 8002818:	2100      	movs	r1, #0
 800281a:	0312      	lsls	r2, r2, #12
 800281c:	0b13      	lsrs	r3, r2, #12
 800281e:	0d0a      	lsrs	r2, r1, #20
 8002820:	0512      	lsls	r2, r2, #20
 8002822:	431a      	orrs	r2, r3
 8002824:	4b3b      	ldr	r3, [pc, #236]	; (8002914 <__aeabi_dsub+0x350>)
 8002826:	052d      	lsls	r5, r5, #20
 8002828:	4013      	ands	r3, r2
 800282a:	432b      	orrs	r3, r5
 800282c:	005b      	lsls	r3, r3, #1
 800282e:	07e4      	lsls	r4, r4, #31
 8002830:	085b      	lsrs	r3, r3, #1
 8002832:	4323      	orrs	r3, r4
 8002834:	0038      	movs	r0, r7
 8002836:	0019      	movs	r1, r3
 8002838:	bc3c      	pop	{r2, r3, r4, r5}
 800283a:	4690      	mov	r8, r2
 800283c:	4699      	mov	r9, r3
 800283e:	46a2      	mov	sl, r4
 8002840:	46ab      	mov	fp, r5
 8002842:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002844:	4663      	mov	r3, ip
 8002846:	4313      	orrs	r3, r2
 8002848:	d011      	beq.n	800286e <__aeabi_dsub+0x2aa>
 800284a:	1e73      	subs	r3, r6, #1
 800284c:	2b00      	cmp	r3, #0
 800284e:	d000      	beq.n	8002852 <__aeabi_dsub+0x28e>
 8002850:	e107      	b.n	8002a62 <__aeabi_dsub+0x49e>
 8002852:	1886      	adds	r6, r0, r2
 8002854:	4286      	cmp	r6, r0
 8002856:	4180      	sbcs	r0, r0
 8002858:	4461      	add	r1, ip
 800285a:	4240      	negs	r0, r0
 800285c:	1809      	adds	r1, r1, r0
 800285e:	2501      	movs	r5, #1
 8002860:	020b      	lsls	r3, r1, #8
 8002862:	d537      	bpl.n	80028d4 <__aeabi_dsub+0x310>
 8002864:	2502      	movs	r5, #2
 8002866:	e77b      	b.n	8002760 <__aeabi_dsub+0x19c>
 8002868:	003e      	movs	r6, r7
 800286a:	4661      	mov	r1, ip
 800286c:	4691      	mov	r9, r2
 800286e:	0035      	movs	r5, r6
 8002870:	e7c5      	b.n	80027fe <__aeabi_dsub+0x23a>
 8002872:	465c      	mov	r4, fp
 8002874:	2d00      	cmp	r5, #0
 8002876:	d000      	beq.n	800287a <__aeabi_dsub+0x2b6>
 8002878:	e0e1      	b.n	8002a3e <__aeabi_dsub+0x47a>
 800287a:	000b      	movs	r3, r1
 800287c:	4303      	orrs	r3, r0
 800287e:	d0f3      	beq.n	8002868 <__aeabi_dsub+0x2a4>
 8002880:	1c73      	adds	r3, r6, #1
 8002882:	d100      	bne.n	8002886 <__aeabi_dsub+0x2c2>
 8002884:	e1ac      	b.n	8002be0 <__aeabi_dsub+0x61c>
 8002886:	4b21      	ldr	r3, [pc, #132]	; (800290c <__aeabi_dsub+0x348>)
 8002888:	429f      	cmp	r7, r3
 800288a:	d100      	bne.n	800288e <__aeabi_dsub+0x2ca>
 800288c:	e13a      	b.n	8002b04 <__aeabi_dsub+0x540>
 800288e:	43f3      	mvns	r3, r6
 8002890:	2b38      	cmp	r3, #56	; 0x38
 8002892:	dd00      	ble.n	8002896 <__aeabi_dsub+0x2d2>
 8002894:	e16f      	b.n	8002b76 <__aeabi_dsub+0x5b2>
 8002896:	2b1f      	cmp	r3, #31
 8002898:	dd00      	ble.n	800289c <__aeabi_dsub+0x2d8>
 800289a:	e18c      	b.n	8002bb6 <__aeabi_dsub+0x5f2>
 800289c:	2520      	movs	r5, #32
 800289e:	000e      	movs	r6, r1
 80028a0:	1aed      	subs	r5, r5, r3
 80028a2:	40ae      	lsls	r6, r5
 80028a4:	46b0      	mov	r8, r6
 80028a6:	0006      	movs	r6, r0
 80028a8:	46aa      	mov	sl, r5
 80028aa:	40de      	lsrs	r6, r3
 80028ac:	4645      	mov	r5, r8
 80028ae:	4335      	orrs	r5, r6
 80028b0:	002e      	movs	r6, r5
 80028b2:	4655      	mov	r5, sl
 80028b4:	40d9      	lsrs	r1, r3
 80028b6:	40a8      	lsls	r0, r5
 80028b8:	4663      	mov	r3, ip
 80028ba:	1e45      	subs	r5, r0, #1
 80028bc:	41a8      	sbcs	r0, r5
 80028be:	1a5b      	subs	r3, r3, r1
 80028c0:	469c      	mov	ip, r3
 80028c2:	4330      	orrs	r0, r6
 80028c4:	1a16      	subs	r6, r2, r0
 80028c6:	42b2      	cmp	r2, r6
 80028c8:	4192      	sbcs	r2, r2
 80028ca:	4663      	mov	r3, ip
 80028cc:	4252      	negs	r2, r2
 80028ce:	1a99      	subs	r1, r3, r2
 80028d0:	003d      	movs	r5, r7
 80028d2:	e6b4      	b.n	800263e <__aeabi_dsub+0x7a>
 80028d4:	2207      	movs	r2, #7
 80028d6:	4032      	ands	r2, r6
 80028d8:	2a00      	cmp	r2, #0
 80028da:	d000      	beq.n	80028de <__aeabi_dsub+0x31a>
 80028dc:	e6e4      	b.n	80026a8 <__aeabi_dsub+0xe4>
 80028de:	4b0b      	ldr	r3, [pc, #44]	; (800290c <__aeabi_dsub+0x348>)
 80028e0:	08f6      	lsrs	r6, r6, #3
 80028e2:	074f      	lsls	r7, r1, #29
 80028e4:	4337      	orrs	r7, r6
 80028e6:	08ca      	lsrs	r2, r1, #3
 80028e8:	429d      	cmp	r5, r3
 80028ea:	d000      	beq.n	80028ee <__aeabi_dsub+0x32a>
 80028ec:	e790      	b.n	8002810 <__aeabi_dsub+0x24c>
 80028ee:	003b      	movs	r3, r7
 80028f0:	4313      	orrs	r3, r2
 80028f2:	d100      	bne.n	80028f6 <__aeabi_dsub+0x332>
 80028f4:	e1a6      	b.n	8002c44 <__aeabi_dsub+0x680>
 80028f6:	2380      	movs	r3, #128	; 0x80
 80028f8:	031b      	lsls	r3, r3, #12
 80028fa:	431a      	orrs	r2, r3
 80028fc:	0312      	lsls	r2, r2, #12
 80028fe:	0b12      	lsrs	r2, r2, #12
 8002900:	4d02      	ldr	r5, [pc, #8]	; (800290c <__aeabi_dsub+0x348>)
 8002902:	e789      	b.n	8002818 <__aeabi_dsub+0x254>
 8002904:	0015      	movs	r5, r2
 8002906:	2200      	movs	r2, #0
 8002908:	2700      	movs	r7, #0
 800290a:	e785      	b.n	8002818 <__aeabi_dsub+0x254>
 800290c:	000007ff 	.word	0x000007ff
 8002910:	ff7fffff 	.word	0xff7fffff
 8002914:	800fffff 	.word	0x800fffff
 8002918:	2e00      	cmp	r6, #0
 800291a:	d000      	beq.n	800291e <__aeabi_dsub+0x35a>
 800291c:	e0c7      	b.n	8002aae <__aeabi_dsub+0x4ea>
 800291e:	1c6b      	adds	r3, r5, #1
 8002920:	055e      	lsls	r6, r3, #21
 8002922:	0d76      	lsrs	r6, r6, #21
 8002924:	2e01      	cmp	r6, #1
 8002926:	dc00      	bgt.n	800292a <__aeabi_dsub+0x366>
 8002928:	e0f0      	b.n	8002b0c <__aeabi_dsub+0x548>
 800292a:	4dc8      	ldr	r5, [pc, #800]	; (8002c4c <__aeabi_dsub+0x688>)
 800292c:	42ab      	cmp	r3, r5
 800292e:	d100      	bne.n	8002932 <__aeabi_dsub+0x36e>
 8002930:	e0b9      	b.n	8002aa6 <__aeabi_dsub+0x4e2>
 8002932:	1885      	adds	r5, r0, r2
 8002934:	000a      	movs	r2, r1
 8002936:	4285      	cmp	r5, r0
 8002938:	4189      	sbcs	r1, r1
 800293a:	4462      	add	r2, ip
 800293c:	4249      	negs	r1, r1
 800293e:	1851      	adds	r1, r2, r1
 8002940:	2207      	movs	r2, #7
 8002942:	07ce      	lsls	r6, r1, #31
 8002944:	086d      	lsrs	r5, r5, #1
 8002946:	432e      	orrs	r6, r5
 8002948:	0849      	lsrs	r1, r1, #1
 800294a:	4032      	ands	r2, r6
 800294c:	001d      	movs	r5, r3
 800294e:	e6a9      	b.n	80026a4 <__aeabi_dsub+0xe0>
 8002950:	49bf      	ldr	r1, [pc, #764]	; (8002c50 <__aeabi_dsub+0x68c>)
 8002952:	1aed      	subs	r5, r5, r3
 8002954:	4011      	ands	r1, r2
 8002956:	2207      	movs	r2, #7
 8002958:	4032      	ands	r2, r6
 800295a:	e6a3      	b.n	80026a4 <__aeabi_dsub+0xe0>
 800295c:	0032      	movs	r2, r6
 800295e:	3828      	subs	r0, #40	; 0x28
 8002960:	4082      	lsls	r2, r0
 8002962:	2600      	movs	r6, #0
 8002964:	e686      	b.n	8002674 <__aeabi_dsub+0xb0>
 8002966:	0030      	movs	r0, r6
 8002968:	f000 fb08 	bl	8002f7c <__clzsi2>
 800296c:	3020      	adds	r0, #32
 800296e:	e673      	b.n	8002658 <__aeabi_dsub+0x94>
 8002970:	4663      	mov	r3, ip
 8002972:	4313      	orrs	r3, r2
 8002974:	1e5a      	subs	r2, r3, #1
 8002976:	4193      	sbcs	r3, r2
 8002978:	1ac6      	subs	r6, r0, r3
 800297a:	42b0      	cmp	r0, r6
 800297c:	4180      	sbcs	r0, r0
 800297e:	4240      	negs	r0, r0
 8002980:	1a09      	subs	r1, r1, r0
 8002982:	e65c      	b.n	800263e <__aeabi_dsub+0x7a>
 8002984:	000e      	movs	r6, r1
 8002986:	4667      	mov	r7, ip
 8002988:	4306      	orrs	r6, r0
 800298a:	4317      	orrs	r7, r2
 800298c:	2d00      	cmp	r5, #0
 800298e:	d15e      	bne.n	8002a4e <__aeabi_dsub+0x48a>
 8002990:	2e00      	cmp	r6, #0
 8002992:	d000      	beq.n	8002996 <__aeabi_dsub+0x3d2>
 8002994:	e0f3      	b.n	8002b7e <__aeabi_dsub+0x5ba>
 8002996:	2f00      	cmp	r7, #0
 8002998:	d100      	bne.n	800299c <__aeabi_dsub+0x3d8>
 800299a:	e11e      	b.n	8002bda <__aeabi_dsub+0x616>
 800299c:	465c      	mov	r4, fp
 800299e:	4661      	mov	r1, ip
 80029a0:	4691      	mov	r9, r2
 80029a2:	e72c      	b.n	80027fe <__aeabi_dsub+0x23a>
 80029a4:	4fa9      	ldr	r7, [pc, #676]	; (8002c4c <__aeabi_dsub+0x688>)
 80029a6:	42be      	cmp	r6, r7
 80029a8:	d07b      	beq.n	8002aa2 <__aeabi_dsub+0x4de>
 80029aa:	001e      	movs	r6, r3
 80029ac:	e6f1      	b.n	8002792 <__aeabi_dsub+0x1ce>
 80029ae:	0010      	movs	r0, r2
 80029b0:	3d1f      	subs	r5, #31
 80029b2:	40e8      	lsrs	r0, r5
 80029b4:	2b20      	cmp	r3, #32
 80029b6:	d003      	beq.n	80029c0 <__aeabi_dsub+0x3fc>
 80029b8:	2140      	movs	r1, #64	; 0x40
 80029ba:	1acb      	subs	r3, r1, r3
 80029bc:	409a      	lsls	r2, r3
 80029be:	4316      	orrs	r6, r2
 80029c0:	1e73      	subs	r3, r6, #1
 80029c2:	419e      	sbcs	r6, r3
 80029c4:	2207      	movs	r2, #7
 80029c6:	4306      	orrs	r6, r0
 80029c8:	4032      	ands	r2, r6
 80029ca:	2100      	movs	r1, #0
 80029cc:	2500      	movs	r5, #0
 80029ce:	e783      	b.n	80028d8 <__aeabi_dsub+0x314>
 80029d0:	1a16      	subs	r6, r2, r0
 80029d2:	4663      	mov	r3, ip
 80029d4:	42b2      	cmp	r2, r6
 80029d6:	4180      	sbcs	r0, r0
 80029d8:	1a59      	subs	r1, r3, r1
 80029da:	4240      	negs	r0, r0
 80029dc:	1a0b      	subs	r3, r1, r0
 80029de:	4698      	mov	r8, r3
 80029e0:	465c      	mov	r4, fp
 80029e2:	e632      	b.n	800264a <__aeabi_dsub+0x86>
 80029e4:	2e1f      	cmp	r6, #31
 80029e6:	dd00      	ble.n	80029ea <__aeabi_dsub+0x426>
 80029e8:	e0ab      	b.n	8002b42 <__aeabi_dsub+0x57e>
 80029ea:	2720      	movs	r7, #32
 80029ec:	1bbb      	subs	r3, r7, r6
 80029ee:	469a      	mov	sl, r3
 80029f0:	4663      	mov	r3, ip
 80029f2:	4657      	mov	r7, sl
 80029f4:	40bb      	lsls	r3, r7
 80029f6:	4699      	mov	r9, r3
 80029f8:	0013      	movs	r3, r2
 80029fa:	464f      	mov	r7, r9
 80029fc:	40f3      	lsrs	r3, r6
 80029fe:	431f      	orrs	r7, r3
 8002a00:	003b      	movs	r3, r7
 8002a02:	4657      	mov	r7, sl
 8002a04:	40ba      	lsls	r2, r7
 8002a06:	1e57      	subs	r7, r2, #1
 8002a08:	41ba      	sbcs	r2, r7
 8002a0a:	4313      	orrs	r3, r2
 8002a0c:	4662      	mov	r2, ip
 8002a0e:	40f2      	lsrs	r2, r6
 8002a10:	1889      	adds	r1, r1, r2
 8002a12:	e698      	b.n	8002746 <__aeabi_dsub+0x182>
 8002a14:	2720      	movs	r7, #32
 8002a16:	1bbb      	subs	r3, r7, r6
 8002a18:	469a      	mov	sl, r3
 8002a1a:	4663      	mov	r3, ip
 8002a1c:	4657      	mov	r7, sl
 8002a1e:	40bb      	lsls	r3, r7
 8002a20:	4699      	mov	r9, r3
 8002a22:	0013      	movs	r3, r2
 8002a24:	464f      	mov	r7, r9
 8002a26:	40f3      	lsrs	r3, r6
 8002a28:	431f      	orrs	r7, r3
 8002a2a:	003b      	movs	r3, r7
 8002a2c:	4657      	mov	r7, sl
 8002a2e:	40ba      	lsls	r2, r7
 8002a30:	1e57      	subs	r7, r2, #1
 8002a32:	41ba      	sbcs	r2, r7
 8002a34:	4313      	orrs	r3, r2
 8002a36:	4662      	mov	r2, ip
 8002a38:	40f2      	lsrs	r2, r6
 8002a3a:	1a89      	subs	r1, r1, r2
 8002a3c:	e79c      	b.n	8002978 <__aeabi_dsub+0x3b4>
 8002a3e:	4b83      	ldr	r3, [pc, #524]	; (8002c4c <__aeabi_dsub+0x688>)
 8002a40:	429f      	cmp	r7, r3
 8002a42:	d05f      	beq.n	8002b04 <__aeabi_dsub+0x540>
 8002a44:	2580      	movs	r5, #128	; 0x80
 8002a46:	042d      	lsls	r5, r5, #16
 8002a48:	4273      	negs	r3, r6
 8002a4a:	4329      	orrs	r1, r5
 8002a4c:	e720      	b.n	8002890 <__aeabi_dsub+0x2cc>
 8002a4e:	2e00      	cmp	r6, #0
 8002a50:	d10c      	bne.n	8002a6c <__aeabi_dsub+0x4a8>
 8002a52:	2f00      	cmp	r7, #0
 8002a54:	d100      	bne.n	8002a58 <__aeabi_dsub+0x494>
 8002a56:	e0d0      	b.n	8002bfa <__aeabi_dsub+0x636>
 8002a58:	465c      	mov	r4, fp
 8002a5a:	4661      	mov	r1, ip
 8002a5c:	4691      	mov	r9, r2
 8002a5e:	4d7b      	ldr	r5, [pc, #492]	; (8002c4c <__aeabi_dsub+0x688>)
 8002a60:	e6cd      	b.n	80027fe <__aeabi_dsub+0x23a>
 8002a62:	4f7a      	ldr	r7, [pc, #488]	; (8002c4c <__aeabi_dsub+0x688>)
 8002a64:	42be      	cmp	r6, r7
 8002a66:	d01c      	beq.n	8002aa2 <__aeabi_dsub+0x4de>
 8002a68:	001e      	movs	r6, r3
 8002a6a:	e665      	b.n	8002738 <__aeabi_dsub+0x174>
 8002a6c:	2f00      	cmp	r7, #0
 8002a6e:	d018      	beq.n	8002aa2 <__aeabi_dsub+0x4de>
 8002a70:	08c0      	lsrs	r0, r0, #3
 8002a72:	074e      	lsls	r6, r1, #29
 8002a74:	4306      	orrs	r6, r0
 8002a76:	2080      	movs	r0, #128	; 0x80
 8002a78:	08c9      	lsrs	r1, r1, #3
 8002a7a:	0300      	lsls	r0, r0, #12
 8002a7c:	4201      	tst	r1, r0
 8002a7e:	d008      	beq.n	8002a92 <__aeabi_dsub+0x4ce>
 8002a80:	4663      	mov	r3, ip
 8002a82:	08dc      	lsrs	r4, r3, #3
 8002a84:	4204      	tst	r4, r0
 8002a86:	d104      	bne.n	8002a92 <__aeabi_dsub+0x4ce>
 8002a88:	0021      	movs	r1, r4
 8002a8a:	46da      	mov	sl, fp
 8002a8c:	08d2      	lsrs	r2, r2, #3
 8002a8e:	075e      	lsls	r6, r3, #29
 8002a90:	4316      	orrs	r6, r2
 8002a92:	00f3      	lsls	r3, r6, #3
 8002a94:	4699      	mov	r9, r3
 8002a96:	2401      	movs	r4, #1
 8002a98:	4653      	mov	r3, sl
 8002a9a:	00c9      	lsls	r1, r1, #3
 8002a9c:	0f72      	lsrs	r2, r6, #29
 8002a9e:	4311      	orrs	r1, r2
 8002aa0:	401c      	ands	r4, r3
 8002aa2:	4d6a      	ldr	r5, [pc, #424]	; (8002c4c <__aeabi_dsub+0x688>)
 8002aa4:	e6ab      	b.n	80027fe <__aeabi_dsub+0x23a>
 8002aa6:	001d      	movs	r5, r3
 8002aa8:	2200      	movs	r2, #0
 8002aaa:	2700      	movs	r7, #0
 8002aac:	e6b4      	b.n	8002818 <__aeabi_dsub+0x254>
 8002aae:	2d00      	cmp	r5, #0
 8002ab0:	d159      	bne.n	8002b66 <__aeabi_dsub+0x5a2>
 8002ab2:	000b      	movs	r3, r1
 8002ab4:	4303      	orrs	r3, r0
 8002ab6:	d100      	bne.n	8002aba <__aeabi_dsub+0x4f6>
 8002ab8:	e6d6      	b.n	8002868 <__aeabi_dsub+0x2a4>
 8002aba:	1c73      	adds	r3, r6, #1
 8002abc:	d100      	bne.n	8002ac0 <__aeabi_dsub+0x4fc>
 8002abe:	e0b2      	b.n	8002c26 <__aeabi_dsub+0x662>
 8002ac0:	4b62      	ldr	r3, [pc, #392]	; (8002c4c <__aeabi_dsub+0x688>)
 8002ac2:	429f      	cmp	r7, r3
 8002ac4:	d01e      	beq.n	8002b04 <__aeabi_dsub+0x540>
 8002ac6:	43f3      	mvns	r3, r6
 8002ac8:	2b38      	cmp	r3, #56	; 0x38
 8002aca:	dc6f      	bgt.n	8002bac <__aeabi_dsub+0x5e8>
 8002acc:	2b1f      	cmp	r3, #31
 8002ace:	dd00      	ble.n	8002ad2 <__aeabi_dsub+0x50e>
 8002ad0:	e097      	b.n	8002c02 <__aeabi_dsub+0x63e>
 8002ad2:	2520      	movs	r5, #32
 8002ad4:	000e      	movs	r6, r1
 8002ad6:	1aed      	subs	r5, r5, r3
 8002ad8:	40ae      	lsls	r6, r5
 8002ada:	46b0      	mov	r8, r6
 8002adc:	0006      	movs	r6, r0
 8002ade:	46aa      	mov	sl, r5
 8002ae0:	40de      	lsrs	r6, r3
 8002ae2:	4645      	mov	r5, r8
 8002ae4:	4335      	orrs	r5, r6
 8002ae6:	002e      	movs	r6, r5
 8002ae8:	4655      	mov	r5, sl
 8002aea:	40a8      	lsls	r0, r5
 8002aec:	40d9      	lsrs	r1, r3
 8002aee:	1e45      	subs	r5, r0, #1
 8002af0:	41a8      	sbcs	r0, r5
 8002af2:	448c      	add	ip, r1
 8002af4:	4306      	orrs	r6, r0
 8002af6:	18b6      	adds	r6, r6, r2
 8002af8:	4296      	cmp	r6, r2
 8002afa:	4192      	sbcs	r2, r2
 8002afc:	4251      	negs	r1, r2
 8002afe:	4461      	add	r1, ip
 8002b00:	003d      	movs	r5, r7
 8002b02:	e625      	b.n	8002750 <__aeabi_dsub+0x18c>
 8002b04:	003d      	movs	r5, r7
 8002b06:	4661      	mov	r1, ip
 8002b08:	4691      	mov	r9, r2
 8002b0a:	e678      	b.n	80027fe <__aeabi_dsub+0x23a>
 8002b0c:	000b      	movs	r3, r1
 8002b0e:	4303      	orrs	r3, r0
 8002b10:	2d00      	cmp	r5, #0
 8002b12:	d000      	beq.n	8002b16 <__aeabi_dsub+0x552>
 8002b14:	e655      	b.n	80027c2 <__aeabi_dsub+0x1fe>
 8002b16:	2b00      	cmp	r3, #0
 8002b18:	d0f5      	beq.n	8002b06 <__aeabi_dsub+0x542>
 8002b1a:	4663      	mov	r3, ip
 8002b1c:	4313      	orrs	r3, r2
 8002b1e:	d100      	bne.n	8002b22 <__aeabi_dsub+0x55e>
 8002b20:	e66d      	b.n	80027fe <__aeabi_dsub+0x23a>
 8002b22:	1886      	adds	r6, r0, r2
 8002b24:	4286      	cmp	r6, r0
 8002b26:	4180      	sbcs	r0, r0
 8002b28:	4461      	add	r1, ip
 8002b2a:	4240      	negs	r0, r0
 8002b2c:	1809      	adds	r1, r1, r0
 8002b2e:	2200      	movs	r2, #0
 8002b30:	020b      	lsls	r3, r1, #8
 8002b32:	d400      	bmi.n	8002b36 <__aeabi_dsub+0x572>
 8002b34:	e6d0      	b.n	80028d8 <__aeabi_dsub+0x314>
 8002b36:	4b46      	ldr	r3, [pc, #280]	; (8002c50 <__aeabi_dsub+0x68c>)
 8002b38:	3501      	adds	r5, #1
 8002b3a:	4019      	ands	r1, r3
 8002b3c:	e5b2      	b.n	80026a4 <__aeabi_dsub+0xe0>
 8002b3e:	46b1      	mov	r9, r6
 8002b40:	e65d      	b.n	80027fe <__aeabi_dsub+0x23a>
 8002b42:	0033      	movs	r3, r6
 8002b44:	4667      	mov	r7, ip
 8002b46:	3b20      	subs	r3, #32
 8002b48:	40df      	lsrs	r7, r3
 8002b4a:	003b      	movs	r3, r7
 8002b4c:	2e20      	cmp	r6, #32
 8002b4e:	d005      	beq.n	8002b5c <__aeabi_dsub+0x598>
 8002b50:	2740      	movs	r7, #64	; 0x40
 8002b52:	1bbf      	subs	r7, r7, r6
 8002b54:	4666      	mov	r6, ip
 8002b56:	40be      	lsls	r6, r7
 8002b58:	4332      	orrs	r2, r6
 8002b5a:	4690      	mov	r8, r2
 8002b5c:	4646      	mov	r6, r8
 8002b5e:	1e72      	subs	r2, r6, #1
 8002b60:	4196      	sbcs	r6, r2
 8002b62:	4333      	orrs	r3, r6
 8002b64:	e5ef      	b.n	8002746 <__aeabi_dsub+0x182>
 8002b66:	4b39      	ldr	r3, [pc, #228]	; (8002c4c <__aeabi_dsub+0x688>)
 8002b68:	429f      	cmp	r7, r3
 8002b6a:	d0cb      	beq.n	8002b04 <__aeabi_dsub+0x540>
 8002b6c:	2580      	movs	r5, #128	; 0x80
 8002b6e:	042d      	lsls	r5, r5, #16
 8002b70:	4273      	negs	r3, r6
 8002b72:	4329      	orrs	r1, r5
 8002b74:	e7a8      	b.n	8002ac8 <__aeabi_dsub+0x504>
 8002b76:	4308      	orrs	r0, r1
 8002b78:	1e41      	subs	r1, r0, #1
 8002b7a:	4188      	sbcs	r0, r1
 8002b7c:	e6a2      	b.n	80028c4 <__aeabi_dsub+0x300>
 8002b7e:	2f00      	cmp	r7, #0
 8002b80:	d100      	bne.n	8002b84 <__aeabi_dsub+0x5c0>
 8002b82:	e63c      	b.n	80027fe <__aeabi_dsub+0x23a>
 8002b84:	4663      	mov	r3, ip
 8002b86:	1a86      	subs	r6, r0, r2
 8002b88:	1acf      	subs	r7, r1, r3
 8002b8a:	42b0      	cmp	r0, r6
 8002b8c:	419b      	sbcs	r3, r3
 8002b8e:	425b      	negs	r3, r3
 8002b90:	1afb      	subs	r3, r7, r3
 8002b92:	4698      	mov	r8, r3
 8002b94:	021b      	lsls	r3, r3, #8
 8002b96:	d54e      	bpl.n	8002c36 <__aeabi_dsub+0x672>
 8002b98:	1a16      	subs	r6, r2, r0
 8002b9a:	4663      	mov	r3, ip
 8002b9c:	42b2      	cmp	r2, r6
 8002b9e:	4192      	sbcs	r2, r2
 8002ba0:	1a59      	subs	r1, r3, r1
 8002ba2:	4252      	negs	r2, r2
 8002ba4:	1a89      	subs	r1, r1, r2
 8002ba6:	465c      	mov	r4, fp
 8002ba8:	2200      	movs	r2, #0
 8002baa:	e57b      	b.n	80026a4 <__aeabi_dsub+0xe0>
 8002bac:	4301      	orrs	r1, r0
 8002bae:	000e      	movs	r6, r1
 8002bb0:	1e71      	subs	r1, r6, #1
 8002bb2:	418e      	sbcs	r6, r1
 8002bb4:	e79f      	b.n	8002af6 <__aeabi_dsub+0x532>
 8002bb6:	001d      	movs	r5, r3
 8002bb8:	000e      	movs	r6, r1
 8002bba:	3d20      	subs	r5, #32
 8002bbc:	40ee      	lsrs	r6, r5
 8002bbe:	46b0      	mov	r8, r6
 8002bc0:	2b20      	cmp	r3, #32
 8002bc2:	d004      	beq.n	8002bce <__aeabi_dsub+0x60a>
 8002bc4:	2540      	movs	r5, #64	; 0x40
 8002bc6:	1aeb      	subs	r3, r5, r3
 8002bc8:	4099      	lsls	r1, r3
 8002bca:	4308      	orrs	r0, r1
 8002bcc:	4681      	mov	r9, r0
 8002bce:	4648      	mov	r0, r9
 8002bd0:	4643      	mov	r3, r8
 8002bd2:	1e41      	subs	r1, r0, #1
 8002bd4:	4188      	sbcs	r0, r1
 8002bd6:	4318      	orrs	r0, r3
 8002bd8:	e674      	b.n	80028c4 <__aeabi_dsub+0x300>
 8002bda:	2200      	movs	r2, #0
 8002bdc:	2400      	movs	r4, #0
 8002bde:	e617      	b.n	8002810 <__aeabi_dsub+0x24c>
 8002be0:	1a16      	subs	r6, r2, r0
 8002be2:	4663      	mov	r3, ip
 8002be4:	42b2      	cmp	r2, r6
 8002be6:	4192      	sbcs	r2, r2
 8002be8:	1a59      	subs	r1, r3, r1
 8002bea:	4252      	negs	r2, r2
 8002bec:	1a89      	subs	r1, r1, r2
 8002bee:	003d      	movs	r5, r7
 8002bf0:	e525      	b.n	800263e <__aeabi_dsub+0x7a>
 8002bf2:	4661      	mov	r1, ip
 8002bf4:	4691      	mov	r9, r2
 8002bf6:	4d15      	ldr	r5, [pc, #84]	; (8002c4c <__aeabi_dsub+0x688>)
 8002bf8:	e601      	b.n	80027fe <__aeabi_dsub+0x23a>
 8002bfa:	2280      	movs	r2, #128	; 0x80
 8002bfc:	2400      	movs	r4, #0
 8002bfe:	0312      	lsls	r2, r2, #12
 8002c00:	e679      	b.n	80028f6 <__aeabi_dsub+0x332>
 8002c02:	001d      	movs	r5, r3
 8002c04:	000e      	movs	r6, r1
 8002c06:	3d20      	subs	r5, #32
 8002c08:	40ee      	lsrs	r6, r5
 8002c0a:	46b0      	mov	r8, r6
 8002c0c:	2b20      	cmp	r3, #32
 8002c0e:	d004      	beq.n	8002c1a <__aeabi_dsub+0x656>
 8002c10:	2540      	movs	r5, #64	; 0x40
 8002c12:	1aeb      	subs	r3, r5, r3
 8002c14:	4099      	lsls	r1, r3
 8002c16:	4308      	orrs	r0, r1
 8002c18:	4681      	mov	r9, r0
 8002c1a:	464e      	mov	r6, r9
 8002c1c:	4643      	mov	r3, r8
 8002c1e:	1e71      	subs	r1, r6, #1
 8002c20:	418e      	sbcs	r6, r1
 8002c22:	431e      	orrs	r6, r3
 8002c24:	e767      	b.n	8002af6 <__aeabi_dsub+0x532>
 8002c26:	1886      	adds	r6, r0, r2
 8002c28:	4296      	cmp	r6, r2
 8002c2a:	419b      	sbcs	r3, r3
 8002c2c:	4461      	add	r1, ip
 8002c2e:	425b      	negs	r3, r3
 8002c30:	18c9      	adds	r1, r1, r3
 8002c32:	003d      	movs	r5, r7
 8002c34:	e58c      	b.n	8002750 <__aeabi_dsub+0x18c>
 8002c36:	4647      	mov	r7, r8
 8002c38:	4337      	orrs	r7, r6
 8002c3a:	d0ce      	beq.n	8002bda <__aeabi_dsub+0x616>
 8002c3c:	2207      	movs	r2, #7
 8002c3e:	4641      	mov	r1, r8
 8002c40:	4032      	ands	r2, r6
 8002c42:	e649      	b.n	80028d8 <__aeabi_dsub+0x314>
 8002c44:	2700      	movs	r7, #0
 8002c46:	003a      	movs	r2, r7
 8002c48:	e5e6      	b.n	8002818 <__aeabi_dsub+0x254>
 8002c4a:	46c0      	nop			; (mov r8, r8)
 8002c4c:	000007ff 	.word	0x000007ff
 8002c50:	ff7fffff 	.word	0xff7fffff

08002c54 <__aeabi_dcmpun>:
 8002c54:	b570      	push	{r4, r5, r6, lr}
 8002c56:	4e0c      	ldr	r6, [pc, #48]	; (8002c88 <__aeabi_dcmpun+0x34>)
 8002c58:	030d      	lsls	r5, r1, #12
 8002c5a:	031c      	lsls	r4, r3, #12
 8002c5c:	0049      	lsls	r1, r1, #1
 8002c5e:	005b      	lsls	r3, r3, #1
 8002c60:	0b2d      	lsrs	r5, r5, #12
 8002c62:	0d49      	lsrs	r1, r1, #21
 8002c64:	0b24      	lsrs	r4, r4, #12
 8002c66:	0d5b      	lsrs	r3, r3, #21
 8002c68:	42b1      	cmp	r1, r6
 8002c6a:	d008      	beq.n	8002c7e <__aeabi_dcmpun+0x2a>
 8002c6c:	4906      	ldr	r1, [pc, #24]	; (8002c88 <__aeabi_dcmpun+0x34>)
 8002c6e:	2000      	movs	r0, #0
 8002c70:	428b      	cmp	r3, r1
 8002c72:	d103      	bne.n	8002c7c <__aeabi_dcmpun+0x28>
 8002c74:	4314      	orrs	r4, r2
 8002c76:	0020      	movs	r0, r4
 8002c78:	1e44      	subs	r4, r0, #1
 8002c7a:	41a0      	sbcs	r0, r4
 8002c7c:	bd70      	pop	{r4, r5, r6, pc}
 8002c7e:	4305      	orrs	r5, r0
 8002c80:	2001      	movs	r0, #1
 8002c82:	2d00      	cmp	r5, #0
 8002c84:	d1fa      	bne.n	8002c7c <__aeabi_dcmpun+0x28>
 8002c86:	e7f1      	b.n	8002c6c <__aeabi_dcmpun+0x18>
 8002c88:	000007ff 	.word	0x000007ff

08002c8c <__aeabi_d2iz>:
 8002c8c:	b530      	push	{r4, r5, lr}
 8002c8e:	4d14      	ldr	r5, [pc, #80]	; (8002ce0 <__aeabi_d2iz+0x54>)
 8002c90:	030a      	lsls	r2, r1, #12
 8002c92:	004b      	lsls	r3, r1, #1
 8002c94:	0b12      	lsrs	r2, r2, #12
 8002c96:	0d5b      	lsrs	r3, r3, #21
 8002c98:	0fc9      	lsrs	r1, r1, #31
 8002c9a:	2400      	movs	r4, #0
 8002c9c:	42ab      	cmp	r3, r5
 8002c9e:	dd11      	ble.n	8002cc4 <__aeabi_d2iz+0x38>
 8002ca0:	4c10      	ldr	r4, [pc, #64]	; (8002ce4 <__aeabi_d2iz+0x58>)
 8002ca2:	42a3      	cmp	r3, r4
 8002ca4:	dc10      	bgt.n	8002cc8 <__aeabi_d2iz+0x3c>
 8002ca6:	2480      	movs	r4, #128	; 0x80
 8002ca8:	0364      	lsls	r4, r4, #13
 8002caa:	4322      	orrs	r2, r4
 8002cac:	4c0e      	ldr	r4, [pc, #56]	; (8002ce8 <__aeabi_d2iz+0x5c>)
 8002cae:	1ae4      	subs	r4, r4, r3
 8002cb0:	2c1f      	cmp	r4, #31
 8002cb2:	dd0c      	ble.n	8002cce <__aeabi_d2iz+0x42>
 8002cb4:	480d      	ldr	r0, [pc, #52]	; (8002cec <__aeabi_d2iz+0x60>)
 8002cb6:	1ac3      	subs	r3, r0, r3
 8002cb8:	40da      	lsrs	r2, r3
 8002cba:	0013      	movs	r3, r2
 8002cbc:	425c      	negs	r4, r3
 8002cbe:	2900      	cmp	r1, #0
 8002cc0:	d100      	bne.n	8002cc4 <__aeabi_d2iz+0x38>
 8002cc2:	001c      	movs	r4, r3
 8002cc4:	0020      	movs	r0, r4
 8002cc6:	bd30      	pop	{r4, r5, pc}
 8002cc8:	4b09      	ldr	r3, [pc, #36]	; (8002cf0 <__aeabi_d2iz+0x64>)
 8002cca:	18cc      	adds	r4, r1, r3
 8002ccc:	e7fa      	b.n	8002cc4 <__aeabi_d2iz+0x38>
 8002cce:	4d09      	ldr	r5, [pc, #36]	; (8002cf4 <__aeabi_d2iz+0x68>)
 8002cd0:	40e0      	lsrs	r0, r4
 8002cd2:	46ac      	mov	ip, r5
 8002cd4:	4463      	add	r3, ip
 8002cd6:	409a      	lsls	r2, r3
 8002cd8:	0013      	movs	r3, r2
 8002cda:	4303      	orrs	r3, r0
 8002cdc:	e7ee      	b.n	8002cbc <__aeabi_d2iz+0x30>
 8002cde:	46c0      	nop			; (mov r8, r8)
 8002ce0:	000003fe 	.word	0x000003fe
 8002ce4:	0000041d 	.word	0x0000041d
 8002ce8:	00000433 	.word	0x00000433
 8002cec:	00000413 	.word	0x00000413
 8002cf0:	7fffffff 	.word	0x7fffffff
 8002cf4:	fffffbed 	.word	0xfffffbed

08002cf8 <__aeabi_i2d>:
 8002cf8:	b570      	push	{r4, r5, r6, lr}
 8002cfa:	2800      	cmp	r0, #0
 8002cfc:	d02d      	beq.n	8002d5a <__aeabi_i2d+0x62>
 8002cfe:	17c3      	asrs	r3, r0, #31
 8002d00:	18c5      	adds	r5, r0, r3
 8002d02:	405d      	eors	r5, r3
 8002d04:	0fc4      	lsrs	r4, r0, #31
 8002d06:	0028      	movs	r0, r5
 8002d08:	f000 f938 	bl	8002f7c <__clzsi2>
 8002d0c:	4b15      	ldr	r3, [pc, #84]	; (8002d64 <__aeabi_i2d+0x6c>)
 8002d0e:	1a1b      	subs	r3, r3, r0
 8002d10:	055b      	lsls	r3, r3, #21
 8002d12:	0d5b      	lsrs	r3, r3, #21
 8002d14:	280a      	cmp	r0, #10
 8002d16:	dd15      	ble.n	8002d44 <__aeabi_i2d+0x4c>
 8002d18:	380b      	subs	r0, #11
 8002d1a:	4085      	lsls	r5, r0
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	032d      	lsls	r5, r5, #12
 8002d20:	0b2d      	lsrs	r5, r5, #12
 8002d22:	2100      	movs	r1, #0
 8002d24:	0010      	movs	r0, r2
 8002d26:	032d      	lsls	r5, r5, #12
 8002d28:	0d0a      	lsrs	r2, r1, #20
 8002d2a:	0b2d      	lsrs	r5, r5, #12
 8002d2c:	0512      	lsls	r2, r2, #20
 8002d2e:	432a      	orrs	r2, r5
 8002d30:	4d0d      	ldr	r5, [pc, #52]	; (8002d68 <__aeabi_i2d+0x70>)
 8002d32:	051b      	lsls	r3, r3, #20
 8002d34:	402a      	ands	r2, r5
 8002d36:	4313      	orrs	r3, r2
 8002d38:	005b      	lsls	r3, r3, #1
 8002d3a:	07e4      	lsls	r4, r4, #31
 8002d3c:	085b      	lsrs	r3, r3, #1
 8002d3e:	4323      	orrs	r3, r4
 8002d40:	0019      	movs	r1, r3
 8002d42:	bd70      	pop	{r4, r5, r6, pc}
 8002d44:	0002      	movs	r2, r0
 8002d46:	0029      	movs	r1, r5
 8002d48:	3215      	adds	r2, #21
 8002d4a:	4091      	lsls	r1, r2
 8002d4c:	000a      	movs	r2, r1
 8002d4e:	210b      	movs	r1, #11
 8002d50:	1a08      	subs	r0, r1, r0
 8002d52:	40c5      	lsrs	r5, r0
 8002d54:	032d      	lsls	r5, r5, #12
 8002d56:	0b2d      	lsrs	r5, r5, #12
 8002d58:	e7e3      	b.n	8002d22 <__aeabi_i2d+0x2a>
 8002d5a:	2400      	movs	r4, #0
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	2500      	movs	r5, #0
 8002d60:	2200      	movs	r2, #0
 8002d62:	e7de      	b.n	8002d22 <__aeabi_i2d+0x2a>
 8002d64:	0000041e 	.word	0x0000041e
 8002d68:	800fffff 	.word	0x800fffff

08002d6c <__aeabi_ui2d>:
 8002d6c:	b510      	push	{r4, lr}
 8002d6e:	1e04      	subs	r4, r0, #0
 8002d70:	d025      	beq.n	8002dbe <__aeabi_ui2d+0x52>
 8002d72:	f000 f903 	bl	8002f7c <__clzsi2>
 8002d76:	4b14      	ldr	r3, [pc, #80]	; (8002dc8 <__aeabi_ui2d+0x5c>)
 8002d78:	1a1b      	subs	r3, r3, r0
 8002d7a:	055b      	lsls	r3, r3, #21
 8002d7c:	0d5b      	lsrs	r3, r3, #21
 8002d7e:	280a      	cmp	r0, #10
 8002d80:	dd12      	ble.n	8002da8 <__aeabi_ui2d+0x3c>
 8002d82:	380b      	subs	r0, #11
 8002d84:	4084      	lsls	r4, r0
 8002d86:	2200      	movs	r2, #0
 8002d88:	0324      	lsls	r4, r4, #12
 8002d8a:	0b24      	lsrs	r4, r4, #12
 8002d8c:	2100      	movs	r1, #0
 8002d8e:	0010      	movs	r0, r2
 8002d90:	0324      	lsls	r4, r4, #12
 8002d92:	0d0a      	lsrs	r2, r1, #20
 8002d94:	0b24      	lsrs	r4, r4, #12
 8002d96:	0512      	lsls	r2, r2, #20
 8002d98:	4322      	orrs	r2, r4
 8002d9a:	4c0c      	ldr	r4, [pc, #48]	; (8002dcc <__aeabi_ui2d+0x60>)
 8002d9c:	051b      	lsls	r3, r3, #20
 8002d9e:	4022      	ands	r2, r4
 8002da0:	4313      	orrs	r3, r2
 8002da2:	005b      	lsls	r3, r3, #1
 8002da4:	0859      	lsrs	r1, r3, #1
 8002da6:	bd10      	pop	{r4, pc}
 8002da8:	0002      	movs	r2, r0
 8002daa:	0021      	movs	r1, r4
 8002dac:	3215      	adds	r2, #21
 8002dae:	4091      	lsls	r1, r2
 8002db0:	000a      	movs	r2, r1
 8002db2:	210b      	movs	r1, #11
 8002db4:	1a08      	subs	r0, r1, r0
 8002db6:	40c4      	lsrs	r4, r0
 8002db8:	0324      	lsls	r4, r4, #12
 8002dba:	0b24      	lsrs	r4, r4, #12
 8002dbc:	e7e6      	b.n	8002d8c <__aeabi_ui2d+0x20>
 8002dbe:	2300      	movs	r3, #0
 8002dc0:	2400      	movs	r4, #0
 8002dc2:	2200      	movs	r2, #0
 8002dc4:	e7e2      	b.n	8002d8c <__aeabi_ui2d+0x20>
 8002dc6:	46c0      	nop			; (mov r8, r8)
 8002dc8:	0000041e 	.word	0x0000041e
 8002dcc:	800fffff 	.word	0x800fffff

08002dd0 <__aeabi_f2d>:
 8002dd0:	0041      	lsls	r1, r0, #1
 8002dd2:	0e09      	lsrs	r1, r1, #24
 8002dd4:	1c4b      	adds	r3, r1, #1
 8002dd6:	b570      	push	{r4, r5, r6, lr}
 8002dd8:	b2db      	uxtb	r3, r3
 8002dda:	0246      	lsls	r6, r0, #9
 8002ddc:	0a75      	lsrs	r5, r6, #9
 8002dde:	0fc4      	lsrs	r4, r0, #31
 8002de0:	2b01      	cmp	r3, #1
 8002de2:	dd14      	ble.n	8002e0e <__aeabi_f2d+0x3e>
 8002de4:	23e0      	movs	r3, #224	; 0xe0
 8002de6:	009b      	lsls	r3, r3, #2
 8002de8:	076d      	lsls	r5, r5, #29
 8002dea:	0b36      	lsrs	r6, r6, #12
 8002dec:	18cb      	adds	r3, r1, r3
 8002dee:	2100      	movs	r1, #0
 8002df0:	0d0a      	lsrs	r2, r1, #20
 8002df2:	0028      	movs	r0, r5
 8002df4:	0512      	lsls	r2, r2, #20
 8002df6:	4d1c      	ldr	r5, [pc, #112]	; (8002e68 <__aeabi_f2d+0x98>)
 8002df8:	4332      	orrs	r2, r6
 8002dfa:	055b      	lsls	r3, r3, #21
 8002dfc:	402a      	ands	r2, r5
 8002dfe:	085b      	lsrs	r3, r3, #1
 8002e00:	4313      	orrs	r3, r2
 8002e02:	005b      	lsls	r3, r3, #1
 8002e04:	07e4      	lsls	r4, r4, #31
 8002e06:	085b      	lsrs	r3, r3, #1
 8002e08:	4323      	orrs	r3, r4
 8002e0a:	0019      	movs	r1, r3
 8002e0c:	bd70      	pop	{r4, r5, r6, pc}
 8002e0e:	2900      	cmp	r1, #0
 8002e10:	d114      	bne.n	8002e3c <__aeabi_f2d+0x6c>
 8002e12:	2d00      	cmp	r5, #0
 8002e14:	d01e      	beq.n	8002e54 <__aeabi_f2d+0x84>
 8002e16:	0028      	movs	r0, r5
 8002e18:	f000 f8b0 	bl	8002f7c <__clzsi2>
 8002e1c:	280a      	cmp	r0, #10
 8002e1e:	dc1c      	bgt.n	8002e5a <__aeabi_f2d+0x8a>
 8002e20:	230b      	movs	r3, #11
 8002e22:	002a      	movs	r2, r5
 8002e24:	1a1b      	subs	r3, r3, r0
 8002e26:	40da      	lsrs	r2, r3
 8002e28:	0003      	movs	r3, r0
 8002e2a:	3315      	adds	r3, #21
 8002e2c:	409d      	lsls	r5, r3
 8002e2e:	4b0f      	ldr	r3, [pc, #60]	; (8002e6c <__aeabi_f2d+0x9c>)
 8002e30:	0312      	lsls	r2, r2, #12
 8002e32:	1a1b      	subs	r3, r3, r0
 8002e34:	055b      	lsls	r3, r3, #21
 8002e36:	0b16      	lsrs	r6, r2, #12
 8002e38:	0d5b      	lsrs	r3, r3, #21
 8002e3a:	e7d8      	b.n	8002dee <__aeabi_f2d+0x1e>
 8002e3c:	2d00      	cmp	r5, #0
 8002e3e:	d006      	beq.n	8002e4e <__aeabi_f2d+0x7e>
 8002e40:	0b32      	lsrs	r2, r6, #12
 8002e42:	2680      	movs	r6, #128	; 0x80
 8002e44:	0336      	lsls	r6, r6, #12
 8002e46:	076d      	lsls	r5, r5, #29
 8002e48:	4316      	orrs	r6, r2
 8002e4a:	4b09      	ldr	r3, [pc, #36]	; (8002e70 <__aeabi_f2d+0xa0>)
 8002e4c:	e7cf      	b.n	8002dee <__aeabi_f2d+0x1e>
 8002e4e:	4b08      	ldr	r3, [pc, #32]	; (8002e70 <__aeabi_f2d+0xa0>)
 8002e50:	2600      	movs	r6, #0
 8002e52:	e7cc      	b.n	8002dee <__aeabi_f2d+0x1e>
 8002e54:	2300      	movs	r3, #0
 8002e56:	2600      	movs	r6, #0
 8002e58:	e7c9      	b.n	8002dee <__aeabi_f2d+0x1e>
 8002e5a:	0003      	movs	r3, r0
 8002e5c:	002a      	movs	r2, r5
 8002e5e:	3b0b      	subs	r3, #11
 8002e60:	409a      	lsls	r2, r3
 8002e62:	2500      	movs	r5, #0
 8002e64:	e7e3      	b.n	8002e2e <__aeabi_f2d+0x5e>
 8002e66:	46c0      	nop			; (mov r8, r8)
 8002e68:	800fffff 	.word	0x800fffff
 8002e6c:	00000389 	.word	0x00000389
 8002e70:	000007ff 	.word	0x000007ff

08002e74 <__aeabi_d2f>:
 8002e74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002e76:	004c      	lsls	r4, r1, #1
 8002e78:	0d64      	lsrs	r4, r4, #21
 8002e7a:	030b      	lsls	r3, r1, #12
 8002e7c:	1c62      	adds	r2, r4, #1
 8002e7e:	0a5b      	lsrs	r3, r3, #9
 8002e80:	0f46      	lsrs	r6, r0, #29
 8002e82:	0552      	lsls	r2, r2, #21
 8002e84:	0fc9      	lsrs	r1, r1, #31
 8002e86:	431e      	orrs	r6, r3
 8002e88:	00c5      	lsls	r5, r0, #3
 8002e8a:	0d52      	lsrs	r2, r2, #21
 8002e8c:	2a01      	cmp	r2, #1
 8002e8e:	dd29      	ble.n	8002ee4 <__aeabi_d2f+0x70>
 8002e90:	4b37      	ldr	r3, [pc, #220]	; (8002f70 <__aeabi_d2f+0xfc>)
 8002e92:	18e7      	adds	r7, r4, r3
 8002e94:	2ffe      	cmp	r7, #254	; 0xfe
 8002e96:	dc1c      	bgt.n	8002ed2 <__aeabi_d2f+0x5e>
 8002e98:	2f00      	cmp	r7, #0
 8002e9a:	dd3b      	ble.n	8002f14 <__aeabi_d2f+0xa0>
 8002e9c:	0180      	lsls	r0, r0, #6
 8002e9e:	1e43      	subs	r3, r0, #1
 8002ea0:	4198      	sbcs	r0, r3
 8002ea2:	2207      	movs	r2, #7
 8002ea4:	00f3      	lsls	r3, r6, #3
 8002ea6:	0f6d      	lsrs	r5, r5, #29
 8002ea8:	4303      	orrs	r3, r0
 8002eaa:	432b      	orrs	r3, r5
 8002eac:	401a      	ands	r2, r3
 8002eae:	2a00      	cmp	r2, #0
 8002eb0:	d004      	beq.n	8002ebc <__aeabi_d2f+0x48>
 8002eb2:	220f      	movs	r2, #15
 8002eb4:	401a      	ands	r2, r3
 8002eb6:	2a04      	cmp	r2, #4
 8002eb8:	d000      	beq.n	8002ebc <__aeabi_d2f+0x48>
 8002eba:	3304      	adds	r3, #4
 8002ebc:	2280      	movs	r2, #128	; 0x80
 8002ebe:	04d2      	lsls	r2, r2, #19
 8002ec0:	401a      	ands	r2, r3
 8002ec2:	d024      	beq.n	8002f0e <__aeabi_d2f+0x9a>
 8002ec4:	3701      	adds	r7, #1
 8002ec6:	b2fa      	uxtb	r2, r7
 8002ec8:	2fff      	cmp	r7, #255	; 0xff
 8002eca:	d002      	beq.n	8002ed2 <__aeabi_d2f+0x5e>
 8002ecc:	019b      	lsls	r3, r3, #6
 8002ece:	0a58      	lsrs	r0, r3, #9
 8002ed0:	e001      	b.n	8002ed6 <__aeabi_d2f+0x62>
 8002ed2:	22ff      	movs	r2, #255	; 0xff
 8002ed4:	2000      	movs	r0, #0
 8002ed6:	0240      	lsls	r0, r0, #9
 8002ed8:	05d2      	lsls	r2, r2, #23
 8002eda:	0a40      	lsrs	r0, r0, #9
 8002edc:	07c9      	lsls	r1, r1, #31
 8002ede:	4310      	orrs	r0, r2
 8002ee0:	4308      	orrs	r0, r1
 8002ee2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002ee4:	4335      	orrs	r5, r6
 8002ee6:	2c00      	cmp	r4, #0
 8002ee8:	d104      	bne.n	8002ef4 <__aeabi_d2f+0x80>
 8002eea:	2d00      	cmp	r5, #0
 8002eec:	d10a      	bne.n	8002f04 <__aeabi_d2f+0x90>
 8002eee:	2200      	movs	r2, #0
 8002ef0:	2000      	movs	r0, #0
 8002ef2:	e7f0      	b.n	8002ed6 <__aeabi_d2f+0x62>
 8002ef4:	2d00      	cmp	r5, #0
 8002ef6:	d0ec      	beq.n	8002ed2 <__aeabi_d2f+0x5e>
 8002ef8:	2080      	movs	r0, #128	; 0x80
 8002efa:	03c0      	lsls	r0, r0, #15
 8002efc:	4330      	orrs	r0, r6
 8002efe:	22ff      	movs	r2, #255	; 0xff
 8002f00:	e7e9      	b.n	8002ed6 <__aeabi_d2f+0x62>
 8002f02:	2400      	movs	r4, #0
 8002f04:	2300      	movs	r3, #0
 8002f06:	025b      	lsls	r3, r3, #9
 8002f08:	0a58      	lsrs	r0, r3, #9
 8002f0a:	b2e2      	uxtb	r2, r4
 8002f0c:	e7e3      	b.n	8002ed6 <__aeabi_d2f+0x62>
 8002f0e:	08db      	lsrs	r3, r3, #3
 8002f10:	003c      	movs	r4, r7
 8002f12:	e7f8      	b.n	8002f06 <__aeabi_d2f+0x92>
 8002f14:	003b      	movs	r3, r7
 8002f16:	3317      	adds	r3, #23
 8002f18:	dbf3      	blt.n	8002f02 <__aeabi_d2f+0x8e>
 8002f1a:	2380      	movs	r3, #128	; 0x80
 8002f1c:	041b      	lsls	r3, r3, #16
 8002f1e:	4333      	orrs	r3, r6
 8002f20:	261e      	movs	r6, #30
 8002f22:	1bf6      	subs	r6, r6, r7
 8002f24:	2e1f      	cmp	r6, #31
 8002f26:	dd14      	ble.n	8002f52 <__aeabi_d2f+0xde>
 8002f28:	2202      	movs	r2, #2
 8002f2a:	4252      	negs	r2, r2
 8002f2c:	1bd7      	subs	r7, r2, r7
 8002f2e:	001a      	movs	r2, r3
 8002f30:	40fa      	lsrs	r2, r7
 8002f32:	0017      	movs	r7, r2
 8002f34:	2e20      	cmp	r6, #32
 8002f36:	d004      	beq.n	8002f42 <__aeabi_d2f+0xce>
 8002f38:	4a0e      	ldr	r2, [pc, #56]	; (8002f74 <__aeabi_d2f+0x100>)
 8002f3a:	4694      	mov	ip, r2
 8002f3c:	4464      	add	r4, ip
 8002f3e:	40a3      	lsls	r3, r4
 8002f40:	431d      	orrs	r5, r3
 8002f42:	002b      	movs	r3, r5
 8002f44:	1e5d      	subs	r5, r3, #1
 8002f46:	41ab      	sbcs	r3, r5
 8002f48:	2207      	movs	r2, #7
 8002f4a:	433b      	orrs	r3, r7
 8002f4c:	401a      	ands	r2, r3
 8002f4e:	2700      	movs	r7, #0
 8002f50:	e7ad      	b.n	8002eae <__aeabi_d2f+0x3a>
 8002f52:	4a09      	ldr	r2, [pc, #36]	; (8002f78 <__aeabi_d2f+0x104>)
 8002f54:	0028      	movs	r0, r5
 8002f56:	18a2      	adds	r2, r4, r2
 8002f58:	4095      	lsls	r5, r2
 8002f5a:	4093      	lsls	r3, r2
 8002f5c:	1e6c      	subs	r4, r5, #1
 8002f5e:	41a5      	sbcs	r5, r4
 8002f60:	40f0      	lsrs	r0, r6
 8002f62:	2207      	movs	r2, #7
 8002f64:	432b      	orrs	r3, r5
 8002f66:	4303      	orrs	r3, r0
 8002f68:	401a      	ands	r2, r3
 8002f6a:	2700      	movs	r7, #0
 8002f6c:	e79f      	b.n	8002eae <__aeabi_d2f+0x3a>
 8002f6e:	46c0      	nop			; (mov r8, r8)
 8002f70:	fffffc80 	.word	0xfffffc80
 8002f74:	fffffca2 	.word	0xfffffca2
 8002f78:	fffffc82 	.word	0xfffffc82

08002f7c <__clzsi2>:
 8002f7c:	211c      	movs	r1, #28
 8002f7e:	2301      	movs	r3, #1
 8002f80:	041b      	lsls	r3, r3, #16
 8002f82:	4298      	cmp	r0, r3
 8002f84:	d301      	bcc.n	8002f8a <__clzsi2+0xe>
 8002f86:	0c00      	lsrs	r0, r0, #16
 8002f88:	3910      	subs	r1, #16
 8002f8a:	0a1b      	lsrs	r3, r3, #8
 8002f8c:	4298      	cmp	r0, r3
 8002f8e:	d301      	bcc.n	8002f94 <__clzsi2+0x18>
 8002f90:	0a00      	lsrs	r0, r0, #8
 8002f92:	3908      	subs	r1, #8
 8002f94:	091b      	lsrs	r3, r3, #4
 8002f96:	4298      	cmp	r0, r3
 8002f98:	d301      	bcc.n	8002f9e <__clzsi2+0x22>
 8002f9a:	0900      	lsrs	r0, r0, #4
 8002f9c:	3904      	subs	r1, #4
 8002f9e:	a202      	add	r2, pc, #8	; (adr r2, 8002fa8 <__clzsi2+0x2c>)
 8002fa0:	5c10      	ldrb	r0, [r2, r0]
 8002fa2:	1840      	adds	r0, r0, r1
 8002fa4:	4770      	bx	lr
 8002fa6:	46c0      	nop			; (mov r8, r8)
 8002fa8:	02020304 	.word	0x02020304
 8002fac:	01010101 	.word	0x01010101
	...

08002fb8 <__NVIC_EnableIRQ>:
  \brief   Enable Interrupt
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn){
 8002fb8:	b580      	push	{r7, lr}
 8002fba:	b082      	sub	sp, #8
 8002fbc:	af00      	add	r7, sp, #0
 8002fbe:	0002      	movs	r2, r0
 8002fc0:	1dfb      	adds	r3, r7, #7
 8002fc2:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002fc4:	1dfb      	adds	r3, r7, #7
 8002fc6:	781b      	ldrb	r3, [r3, #0]
 8002fc8:	2b7f      	cmp	r3, #127	; 0x7f
 8002fca:	d809      	bhi.n	8002fe0 <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002fcc:	1dfb      	adds	r3, r7, #7
 8002fce:	781b      	ldrb	r3, [r3, #0]
 8002fd0:	001a      	movs	r2, r3
 8002fd2:	231f      	movs	r3, #31
 8002fd4:	401a      	ands	r2, r3
 8002fd6:	4b04      	ldr	r3, [pc, #16]	; (8002fe8 <__NVIC_EnableIRQ+0x30>)
 8002fd8:	2101      	movs	r1, #1
 8002fda:	4091      	lsls	r1, r2
 8002fdc:	000a      	movs	r2, r1
 8002fde:	601a      	str	r2, [r3, #0]
  }
}
 8002fe0:	46c0      	nop			; (mov r8, r8)
 8002fe2:	46bd      	mov	sp, r7
 8002fe4:	b002      	add	sp, #8
 8002fe6:	bd80      	pop	{r7, pc}
 8002fe8:	e000e100 	.word	0xe000e100

08002fec <__NVIC_SetPriority>:
           or negative to specify a processor exception.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority){
 8002fec:	b590      	push	{r4, r7, lr}
 8002fee:	b083      	sub	sp, #12
 8002ff0:	af00      	add	r7, sp, #0
 8002ff2:	0002      	movs	r2, r0
 8002ff4:	6039      	str	r1, [r7, #0]
 8002ff6:	1dfb      	adds	r3, r7, #7
 8002ff8:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002ffa:	1dfb      	adds	r3, r7, #7
 8002ffc:	781b      	ldrb	r3, [r3, #0]
 8002ffe:	2b7f      	cmp	r3, #127	; 0x7f
 8003000:	d828      	bhi.n	8003054 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)] = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003002:	4a2f      	ldr	r2, [pc, #188]	; (80030c0 <__NVIC_SetPriority+0xd4>)
 8003004:	1dfb      	adds	r3, r7, #7
 8003006:	781b      	ldrb	r3, [r3, #0]
 8003008:	b25b      	sxtb	r3, r3
 800300a:	089b      	lsrs	r3, r3, #2
 800300c:	33c0      	adds	r3, #192	; 0xc0
 800300e:	009b      	lsls	r3, r3, #2
 8003010:	589b      	ldr	r3, [r3, r2]
 8003012:	1dfa      	adds	r2, r7, #7
 8003014:	7812      	ldrb	r2, [r2, #0]
 8003016:	0011      	movs	r1, r2
 8003018:	2203      	movs	r2, #3
 800301a:	400a      	ands	r2, r1
 800301c:	00d2      	lsls	r2, r2, #3
 800301e:	21ff      	movs	r1, #255	; 0xff
 8003020:	4091      	lsls	r1, r2
 8003022:	000a      	movs	r2, r1
 8003024:	43d2      	mvns	r2, r2
 8003026:	401a      	ands	r2, r3
 8003028:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800302a:	683b      	ldr	r3, [r7, #0]
 800302c:	019b      	lsls	r3, r3, #6
 800302e:	22ff      	movs	r2, #255	; 0xff
 8003030:	401a      	ands	r2, r3
 8003032:	1dfb      	adds	r3, r7, #7
 8003034:	781b      	ldrb	r3, [r3, #0]
 8003036:	0018      	movs	r0, r3
 8003038:	2303      	movs	r3, #3
 800303a:	4003      	ands	r3, r0
 800303c:	00db      	lsls	r3, r3, #3
 800303e:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)] = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003040:	481f      	ldr	r0, [pc, #124]	; (80030c0 <__NVIC_SetPriority+0xd4>)
 8003042:	1dfb      	adds	r3, r7, #7
 8003044:	781b      	ldrb	r3, [r3, #0]
 8003046:	b25b      	sxtb	r3, r3
 8003048:	089b      	lsrs	r3, r3, #2
 800304a:	430a      	orrs	r2, r1
 800304c:	33c0      	adds	r3, #192	; 0xc0
 800304e:	009b      	lsls	r3, r3, #2
 8003050:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8003052:	e031      	b.n	80030b8 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003054:	4a1b      	ldr	r2, [pc, #108]	; (80030c4 <__NVIC_SetPriority+0xd8>)
 8003056:	1dfb      	adds	r3, r7, #7
 8003058:	781b      	ldrb	r3, [r3, #0]
 800305a:	0019      	movs	r1, r3
 800305c:	230f      	movs	r3, #15
 800305e:	400b      	ands	r3, r1
 8003060:	3b08      	subs	r3, #8
 8003062:	089b      	lsrs	r3, r3, #2
 8003064:	3306      	adds	r3, #6
 8003066:	009b      	lsls	r3, r3, #2
 8003068:	18d3      	adds	r3, r2, r3
 800306a:	3304      	adds	r3, #4
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	1dfa      	adds	r2, r7, #7
 8003070:	7812      	ldrb	r2, [r2, #0]
 8003072:	0011      	movs	r1, r2
 8003074:	2203      	movs	r2, #3
 8003076:	400a      	ands	r2, r1
 8003078:	00d2      	lsls	r2, r2, #3
 800307a:	21ff      	movs	r1, #255	; 0xff
 800307c:	4091      	lsls	r1, r2
 800307e:	000a      	movs	r2, r1
 8003080:	43d2      	mvns	r2, r2
 8003082:	401a      	ands	r2, r3
 8003084:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003086:	683b      	ldr	r3, [r7, #0]
 8003088:	019b      	lsls	r3, r3, #6
 800308a:	22ff      	movs	r2, #255	; 0xff
 800308c:	401a      	ands	r2, r3
 800308e:	1dfb      	adds	r3, r7, #7
 8003090:	781b      	ldrb	r3, [r3, #0]
 8003092:	0018      	movs	r0, r3
 8003094:	2303      	movs	r3, #3
 8003096:	4003      	ands	r3, r0
 8003098:	00db      	lsls	r3, r3, #3
 800309a:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800309c:	4809      	ldr	r0, [pc, #36]	; (80030c4 <__NVIC_SetPriority+0xd8>)
 800309e:	1dfb      	adds	r3, r7, #7
 80030a0:	781b      	ldrb	r3, [r3, #0]
 80030a2:	001c      	movs	r4, r3
 80030a4:	230f      	movs	r3, #15
 80030a6:	4023      	ands	r3, r4
 80030a8:	3b08      	subs	r3, #8
 80030aa:	089b      	lsrs	r3, r3, #2
 80030ac:	430a      	orrs	r2, r1
 80030ae:	3306      	adds	r3, #6
 80030b0:	009b      	lsls	r3, r3, #2
 80030b2:	18c3      	adds	r3, r0, r3
 80030b4:	3304      	adds	r3, #4
 80030b6:	601a      	str	r2, [r3, #0]
}
 80030b8:	46c0      	nop			; (mov r8, r8)
 80030ba:	46bd      	mov	sp, r7
 80030bc:	b003      	add	sp, #12
 80030be:	bd90      	pop	{r4, r7, pc}
 80030c0:	e000e100 	.word	0xe000e100
 80030c4:	e000ed00 	.word	0xe000ed00

080030c8 <canFilterConfig>:
/*                                                                            */
/******************************************************************************/

/******************* Configure the CAN to filter the data frames from the RPI ********************/

void canFilterConfig(){
 80030c8:	b580      	push	{r7, lr}
 80030ca:	af00      	add	r7, sp, #0

  printf("********** CAN FILTER CONFIGURATION **********\r\n");
 80030cc:	4bfd      	ldr	r3, [pc, #1012]	; (80034c4 <canFilterConfig+0x3fc>)
 80030ce:	0018      	movs	r0, r3
 80030d0:	f002 fea8 	bl	8005e24 <puts>

  // Enter filter initialization mode
  CAN->FMR |= CAN_FMR_FINIT; // 0: Active filters mode, 1: Initialization mode for the filters
 80030d4:	4afc      	ldr	r2, [pc, #1008]	; (80034c8 <canFilterConfig+0x400>)
 80030d6:	2380      	movs	r3, #128	; 0x80
 80030d8:	009b      	lsls	r3, r3, #2
 80030da:	58d3      	ldr	r3, [r2, r3]
 80030dc:	49fa      	ldr	r1, [pc, #1000]	; (80034c8 <canFilterConfig+0x400>)
 80030de:	2201      	movs	r2, #1
 80030e0:	431a      	orrs	r2, r3
 80030e2:	2380      	movs	r3, #128	; 0x80
 80030e4:	009b      	lsls	r3, r3, #2
 80030e6:	50ca      	str	r2, [r1, r3]

  // Identifier mode for the filters 0 to 5
  CAN->FM1R |= CAN_FM1R_FBM0 | CAN_FM1R_FBM1 | CAN_FM1R_FBM2 | CAN_FM1R_FBM3 | CAN_FM1R_FBM4 | CAN_FM1R_FBM5;  // 0: Mask mode, 1: Identifier mode
 80030e8:	4af7      	ldr	r2, [pc, #988]	; (80034c8 <canFilterConfig+0x400>)
 80030ea:	2381      	movs	r3, #129	; 0x81
 80030ec:	009b      	lsls	r3, r3, #2
 80030ee:	58d3      	ldr	r3, [r2, r3]
 80030f0:	49f5      	ldr	r1, [pc, #980]	; (80034c8 <canFilterConfig+0x400>)
 80030f2:	223f      	movs	r2, #63	; 0x3f
 80030f4:	431a      	orrs	r2, r3
 80030f6:	2381      	movs	r3, #129	; 0x81
 80030f8:	009b      	lsls	r3, r3, #2
 80030fa:	50ca      	str	r2, [r1, r3]

  // Identifier mode for the filters 6 to 11
  CAN->FM1R |= CAN_FM1R_FBM6 | CAN_FM1R_FBM7 | CAN_FM1R_FBM8 | CAN_FM1R_FBM9 | CAN_FM1R_FBM10 | CAN_FM1R_FBM11;  // 0: Mask mode, 1: Identifier mode
 80030fc:	4af2      	ldr	r2, [pc, #968]	; (80034c8 <canFilterConfig+0x400>)
 80030fe:	2381      	movs	r3, #129	; 0x81
 8003100:	009b      	lsls	r3, r3, #2
 8003102:	58d3      	ldr	r3, [r2, r3]
 8003104:	49f0      	ldr	r1, [pc, #960]	; (80034c8 <canFilterConfig+0x400>)
 8003106:	22fc      	movs	r2, #252	; 0xfc
 8003108:	0112      	lsls	r2, r2, #4
 800310a:	431a      	orrs	r2, r3
 800310c:	2381      	movs	r3, #129	; 0x81
 800310e:	009b      	lsls	r3, r3, #2
 8003110:	50ca      	str	r2, [r1, r3]

  // Single 32-bit scale configuration mode for the filters 0 to 5
  CAN->FS1R |= CAN_FS1R_FSC0 | CAN_FS1R_FSC1 | CAN_FS1R_FSC2 | CAN_FS1R_FSC3 | CAN_FS1R_FSC4 | CAN_FS1R_FSC5; // 0: Dual 16-bit scale configuration, 1: Single 32-bit scale configuration
 8003112:	4aed      	ldr	r2, [pc, #948]	; (80034c8 <canFilterConfig+0x400>)
 8003114:	2383      	movs	r3, #131	; 0x83
 8003116:	009b      	lsls	r3, r3, #2
 8003118:	58d3      	ldr	r3, [r2, r3]
 800311a:	49eb      	ldr	r1, [pc, #940]	; (80034c8 <canFilterConfig+0x400>)
 800311c:	223f      	movs	r2, #63	; 0x3f
 800311e:	431a      	orrs	r2, r3
 8003120:	2383      	movs	r3, #131	; 0x83
 8003122:	009b      	lsls	r3, r3, #2
 8003124:	50ca      	str	r2, [r1, r3]

  // Single 32-bit scale configuration mode for the filters 6 to 11
  CAN->FS1R |= CAN_FS1R_FSC6 | CAN_FS1R_FSC7 | CAN_FS1R_FSC8 | CAN_FS1R_FSC9 | CAN_FS1R_FSC10 | CAN_FS1R_FSC11; // 0: Dual 16-bit scale configuration, 1: Single 32-bit scale configuration
 8003126:	4ae8      	ldr	r2, [pc, #928]	; (80034c8 <canFilterConfig+0x400>)
 8003128:	2383      	movs	r3, #131	; 0x83
 800312a:	009b      	lsls	r3, r3, #2
 800312c:	58d3      	ldr	r3, [r2, r3]
 800312e:	49e6      	ldr	r1, [pc, #920]	; (80034c8 <canFilterConfig+0x400>)
 8003130:	22fc      	movs	r2, #252	; 0xfc
 8003132:	0112      	lsls	r2, r2, #4
 8003134:	431a      	orrs	r2, r3
 8003136:	2383      	movs	r3, #131	; 0x83
 8003138:	009b      	lsls	r3, r3, #2
 800313a:	50ca      	str	r2, [r1, r3]

  // The message passing through the filter 0 to 5 will be stored in the FIFO 0
  CAN->FFA1R &= ~CAN_FFA1R_FFA0_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 800313c:	4ae2      	ldr	r2, [pc, #904]	; (80034c8 <canFilterConfig+0x400>)
 800313e:	2385      	movs	r3, #133	; 0x85
 8003140:	009b      	lsls	r3, r3, #2
 8003142:	58d3      	ldr	r3, [r2, r3]
 8003144:	49e0      	ldr	r1, [pc, #896]	; (80034c8 <canFilterConfig+0x400>)
 8003146:	2201      	movs	r2, #1
 8003148:	4393      	bics	r3, r2
 800314a:	001a      	movs	r2, r3
 800314c:	2385      	movs	r3, #133	; 0x85
 800314e:	009b      	lsls	r3, r3, #2
 8003150:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA1_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003152:	4add      	ldr	r2, [pc, #884]	; (80034c8 <canFilterConfig+0x400>)
 8003154:	2385      	movs	r3, #133	; 0x85
 8003156:	009b      	lsls	r3, r3, #2
 8003158:	58d3      	ldr	r3, [r2, r3]
 800315a:	49db      	ldr	r1, [pc, #876]	; (80034c8 <canFilterConfig+0x400>)
 800315c:	2202      	movs	r2, #2
 800315e:	4393      	bics	r3, r2
 8003160:	001a      	movs	r2, r3
 8003162:	2385      	movs	r3, #133	; 0x85
 8003164:	009b      	lsls	r3, r3, #2
 8003166:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA2_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003168:	4ad7      	ldr	r2, [pc, #860]	; (80034c8 <canFilterConfig+0x400>)
 800316a:	2385      	movs	r3, #133	; 0x85
 800316c:	009b      	lsls	r3, r3, #2
 800316e:	58d3      	ldr	r3, [r2, r3]
 8003170:	49d5      	ldr	r1, [pc, #852]	; (80034c8 <canFilterConfig+0x400>)
 8003172:	2204      	movs	r2, #4
 8003174:	4393      	bics	r3, r2
 8003176:	001a      	movs	r2, r3
 8003178:	2385      	movs	r3, #133	; 0x85
 800317a:	009b      	lsls	r3, r3, #2
 800317c:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA3_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 800317e:	4ad2      	ldr	r2, [pc, #840]	; (80034c8 <canFilterConfig+0x400>)
 8003180:	2385      	movs	r3, #133	; 0x85
 8003182:	009b      	lsls	r3, r3, #2
 8003184:	58d3      	ldr	r3, [r2, r3]
 8003186:	49d0      	ldr	r1, [pc, #832]	; (80034c8 <canFilterConfig+0x400>)
 8003188:	2208      	movs	r2, #8
 800318a:	4393      	bics	r3, r2
 800318c:	001a      	movs	r2, r3
 800318e:	2385      	movs	r3, #133	; 0x85
 8003190:	009b      	lsls	r3, r3, #2
 8003192:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA4_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003194:	4acc      	ldr	r2, [pc, #816]	; (80034c8 <canFilterConfig+0x400>)
 8003196:	2385      	movs	r3, #133	; 0x85
 8003198:	009b      	lsls	r3, r3, #2
 800319a:	58d3      	ldr	r3, [r2, r3]
 800319c:	49ca      	ldr	r1, [pc, #808]	; (80034c8 <canFilterConfig+0x400>)
 800319e:	2210      	movs	r2, #16
 80031a0:	4393      	bics	r3, r2
 80031a2:	001a      	movs	r2, r3
 80031a4:	2385      	movs	r3, #133	; 0x85
 80031a6:	009b      	lsls	r3, r3, #2
 80031a8:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA5_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80031aa:	4ac7      	ldr	r2, [pc, #796]	; (80034c8 <canFilterConfig+0x400>)
 80031ac:	2385      	movs	r3, #133	; 0x85
 80031ae:	009b      	lsls	r3, r3, #2
 80031b0:	58d3      	ldr	r3, [r2, r3]
 80031b2:	49c5      	ldr	r1, [pc, #788]	; (80034c8 <canFilterConfig+0x400>)
 80031b4:	2220      	movs	r2, #32
 80031b6:	4393      	bics	r3, r2
 80031b8:	001a      	movs	r2, r3
 80031ba:	2385      	movs	r3, #133	; 0x85
 80031bc:	009b      	lsls	r3, r3, #2
 80031be:	50ca      	str	r2, [r1, r3]

  CAN->FFA1R |= CAN_FFA1R_FFA6_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80031c0:	4ac1      	ldr	r2, [pc, #772]	; (80034c8 <canFilterConfig+0x400>)
 80031c2:	2385      	movs	r3, #133	; 0x85
 80031c4:	009b      	lsls	r3, r3, #2
 80031c6:	58d3      	ldr	r3, [r2, r3]
 80031c8:	49bf      	ldr	r1, [pc, #764]	; (80034c8 <canFilterConfig+0x400>)
 80031ca:	2240      	movs	r2, #64	; 0x40
 80031cc:	431a      	orrs	r2, r3
 80031ce:	2385      	movs	r3, #133	; 0x85
 80031d0:	009b      	lsls	r3, r3, #2
 80031d2:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA7_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80031d4:	4abc      	ldr	r2, [pc, #752]	; (80034c8 <canFilterConfig+0x400>)
 80031d6:	2385      	movs	r3, #133	; 0x85
 80031d8:	009b      	lsls	r3, r3, #2
 80031da:	58d3      	ldr	r3, [r2, r3]
 80031dc:	49ba      	ldr	r1, [pc, #744]	; (80034c8 <canFilterConfig+0x400>)
 80031de:	2280      	movs	r2, #128	; 0x80
 80031e0:	431a      	orrs	r2, r3
 80031e2:	2385      	movs	r3, #133	; 0x85
 80031e4:	009b      	lsls	r3, r3, #2
 80031e6:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA8_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80031e8:	4ab7      	ldr	r2, [pc, #732]	; (80034c8 <canFilterConfig+0x400>)
 80031ea:	2385      	movs	r3, #133	; 0x85
 80031ec:	009b      	lsls	r3, r3, #2
 80031ee:	58d3      	ldr	r3, [r2, r3]
 80031f0:	49b5      	ldr	r1, [pc, #724]	; (80034c8 <canFilterConfig+0x400>)
 80031f2:	2280      	movs	r2, #128	; 0x80
 80031f4:	0052      	lsls	r2, r2, #1
 80031f6:	431a      	orrs	r2, r3
 80031f8:	2385      	movs	r3, #133	; 0x85
 80031fa:	009b      	lsls	r3, r3, #2
 80031fc:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA9_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80031fe:	4ab2      	ldr	r2, [pc, #712]	; (80034c8 <canFilterConfig+0x400>)
 8003200:	2385      	movs	r3, #133	; 0x85
 8003202:	009b      	lsls	r3, r3, #2
 8003204:	58d3      	ldr	r3, [r2, r3]
 8003206:	49b0      	ldr	r1, [pc, #704]	; (80034c8 <canFilterConfig+0x400>)
 8003208:	2280      	movs	r2, #128	; 0x80
 800320a:	0092      	lsls	r2, r2, #2
 800320c:	431a      	orrs	r2, r3
 800320e:	2385      	movs	r3, #133	; 0x85
 8003210:	009b      	lsls	r3, r3, #2
 8003212:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA10_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003214:	4aac      	ldr	r2, [pc, #688]	; (80034c8 <canFilterConfig+0x400>)
 8003216:	2385      	movs	r3, #133	; 0x85
 8003218:	009b      	lsls	r3, r3, #2
 800321a:	58d3      	ldr	r3, [r2, r3]
 800321c:	49aa      	ldr	r1, [pc, #680]	; (80034c8 <canFilterConfig+0x400>)
 800321e:	2280      	movs	r2, #128	; 0x80
 8003220:	00d2      	lsls	r2, r2, #3
 8003222:	431a      	orrs	r2, r3
 8003224:	2385      	movs	r3, #133	; 0x85
 8003226:	009b      	lsls	r3, r3, #2
 8003228:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA11_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 800322a:	4aa7      	ldr	r2, [pc, #668]	; (80034c8 <canFilterConfig+0x400>)
 800322c:	2385      	movs	r3, #133	; 0x85
 800322e:	009b      	lsls	r3, r3, #2
 8003230:	58d3      	ldr	r3, [r2, r3]
 8003232:	49a5      	ldr	r1, [pc, #660]	; (80034c8 <canFilterConfig+0x400>)
 8003234:	2280      	movs	r2, #128	; 0x80
 8003236:	0112      	lsls	r2, r2, #4
 8003238:	431a      	orrs	r2, r3
 800323a:	2385      	movs	r3, #133	; 0x85
 800323c:	009b      	lsls	r3, r3, #2
 800323e:	50ca      	str	r2, [r1, r3]

  // Activate filter 0 to 5
  CAN->FA1R |= CAN_FA1R_FACT0 | CAN_FA1R_FACT1 | CAN_FA1R_FACT2 | CAN_FA1R_FACT3 | CAN_FA1R_FACT4 | CAN_FA1R_FACT5;
 8003240:	4aa1      	ldr	r2, [pc, #644]	; (80034c8 <canFilterConfig+0x400>)
 8003242:	2387      	movs	r3, #135	; 0x87
 8003244:	009b      	lsls	r3, r3, #2
 8003246:	58d3      	ldr	r3, [r2, r3]
 8003248:	499f      	ldr	r1, [pc, #636]	; (80034c8 <canFilterConfig+0x400>)
 800324a:	223f      	movs	r2, #63	; 0x3f
 800324c:	431a      	orrs	r2, r3
 800324e:	2387      	movs	r3, #135	; 0x87
 8003250:	009b      	lsls	r3, r3, #2
 8003252:	50ca      	str	r2, [r1, r3]

  // Activate filter 6 to 11
  CAN->FA1R |= CAN_FA1R_FACT6 | CAN_FA1R_FACT7 | CAN_FA1R_FACT8 | CAN_FA1R_FACT9 | CAN_FA1R_FACT10 | CAN_FA1R_FACT11;
 8003254:	4a9c      	ldr	r2, [pc, #624]	; (80034c8 <canFilterConfig+0x400>)
 8003256:	2387      	movs	r3, #135	; 0x87
 8003258:	009b      	lsls	r3, r3, #2
 800325a:	58d3      	ldr	r3, [r2, r3]
 800325c:	499a      	ldr	r1, [pc, #616]	; (80034c8 <canFilterConfig+0x400>)
 800325e:	22fc      	movs	r2, #252	; 0xfc
 8003260:	0112      	lsls	r2, r2, #4
 8003262:	431a      	orrs	r2, r3
 8003264:	2387      	movs	r3, #135	; 0x87
 8003266:	009b      	lsls	r3, r3, #2
 8003268:	50ca      	str	r2, [r1, r3]
  /********** FIFO 0 **********/
  /* Filter bank 0 register 1 and filter bank 0 register 2 are both identifier registers */
  /* The data frames will be accepted only if the ID is between 0x01 and 0x06 */

  // Filter bank 0 register 1
  CAN->sFilterRegister[0].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800326a:	4a97      	ldr	r2, [pc, #604]	; (80034c8 <canFilterConfig+0x400>)
 800326c:	2390      	movs	r3, #144	; 0x90
 800326e:	009b      	lsls	r3, r3, #2
 8003270:	58d3      	ldr	r3, [r2, r3]
 8003272:	4a95      	ldr	r2, [pc, #596]	; (80034c8 <canFilterConfig+0x400>)
 8003274:	2390      	movs	r3, #144	; 0x90
 8003276:	009b      	lsls	r3, r3, #2
 8003278:	2100      	movs	r1, #0
 800327a:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[0].FR1 |= (0x01 << CAN_F0R1_FB21_Pos); // Identifier is 0x01
 800327c:	4a92      	ldr	r2, [pc, #584]	; (80034c8 <canFilterConfig+0x400>)
 800327e:	2390      	movs	r3, #144	; 0x90
 8003280:	009b      	lsls	r3, r3, #2
 8003282:	58d3      	ldr	r3, [r2, r3]
 8003284:	4990      	ldr	r1, [pc, #576]	; (80034c8 <canFilterConfig+0x400>)
 8003286:	2280      	movs	r2, #128	; 0x80
 8003288:	0392      	lsls	r2, r2, #14
 800328a:	431a      	orrs	r2, r3
 800328c:	2390      	movs	r3, #144	; 0x90
 800328e:	009b      	lsls	r3, r3, #2
 8003290:	50ca      	str	r2, [r1, r3]

  // Filter bank 0 register 2
  CAN->sFilterRegister[0].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003292:	4a8d      	ldr	r2, [pc, #564]	; (80034c8 <canFilterConfig+0x400>)
 8003294:	2391      	movs	r3, #145	; 0x91
 8003296:	009b      	lsls	r3, r3, #2
 8003298:	58d3      	ldr	r3, [r2, r3]
 800329a:	4a8b      	ldr	r2, [pc, #556]	; (80034c8 <canFilterConfig+0x400>)
 800329c:	2391      	movs	r3, #145	; 0x91
 800329e:	009b      	lsls	r3, r3, #2
 80032a0:	2100      	movs	r1, #0
 80032a2:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[0].FR2 |= (0x01 << CAN_F0R2_FB21_Pos); // Identifier is 0x01
 80032a4:	4a88      	ldr	r2, [pc, #544]	; (80034c8 <canFilterConfig+0x400>)
 80032a6:	2391      	movs	r3, #145	; 0x91
 80032a8:	009b      	lsls	r3, r3, #2
 80032aa:	58d3      	ldr	r3, [r2, r3]
 80032ac:	4986      	ldr	r1, [pc, #536]	; (80034c8 <canFilterConfig+0x400>)
 80032ae:	2280      	movs	r2, #128	; 0x80
 80032b0:	0392      	lsls	r2, r2, #14
 80032b2:	431a      	orrs	r2, r3
 80032b4:	2391      	movs	r3, #145	; 0x91
 80032b6:	009b      	lsls	r3, r3, #2
 80032b8:	50ca      	str	r2, [r1, r3]

  // Filter bank 1 register 1
  CAN->sFilterRegister[1].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80032ba:	4a83      	ldr	r2, [pc, #524]	; (80034c8 <canFilterConfig+0x400>)
 80032bc:	2392      	movs	r3, #146	; 0x92
 80032be:	009b      	lsls	r3, r3, #2
 80032c0:	58d3      	ldr	r3, [r2, r3]
 80032c2:	4a81      	ldr	r2, [pc, #516]	; (80034c8 <canFilterConfig+0x400>)
 80032c4:	2392      	movs	r3, #146	; 0x92
 80032c6:	009b      	lsls	r3, r3, #2
 80032c8:	2100      	movs	r1, #0
 80032ca:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[1].FR1 |= (0x02 << CAN_F0R1_FB21_Pos); // Identifier is 0x02
 80032cc:	4a7e      	ldr	r2, [pc, #504]	; (80034c8 <canFilterConfig+0x400>)
 80032ce:	2392      	movs	r3, #146	; 0x92
 80032d0:	009b      	lsls	r3, r3, #2
 80032d2:	58d3      	ldr	r3, [r2, r3]
 80032d4:	497c      	ldr	r1, [pc, #496]	; (80034c8 <canFilterConfig+0x400>)
 80032d6:	2280      	movs	r2, #128	; 0x80
 80032d8:	03d2      	lsls	r2, r2, #15
 80032da:	431a      	orrs	r2, r3
 80032dc:	2392      	movs	r3, #146	; 0x92
 80032de:	009b      	lsls	r3, r3, #2
 80032e0:	50ca      	str	r2, [r1, r3]

  // Filter bank 1 register 2
  CAN->sFilterRegister[1].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80032e2:	4a79      	ldr	r2, [pc, #484]	; (80034c8 <canFilterConfig+0x400>)
 80032e4:	2393      	movs	r3, #147	; 0x93
 80032e6:	009b      	lsls	r3, r3, #2
 80032e8:	58d3      	ldr	r3, [r2, r3]
 80032ea:	4a77      	ldr	r2, [pc, #476]	; (80034c8 <canFilterConfig+0x400>)
 80032ec:	2393      	movs	r3, #147	; 0x93
 80032ee:	009b      	lsls	r3, r3, #2
 80032f0:	2100      	movs	r1, #0
 80032f2:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[1].FR2 |= (0x02 << CAN_F0R2_FB21_Pos); // Identifier is 0x02
 80032f4:	4a74      	ldr	r2, [pc, #464]	; (80034c8 <canFilterConfig+0x400>)
 80032f6:	2393      	movs	r3, #147	; 0x93
 80032f8:	009b      	lsls	r3, r3, #2
 80032fa:	58d3      	ldr	r3, [r2, r3]
 80032fc:	4972      	ldr	r1, [pc, #456]	; (80034c8 <canFilterConfig+0x400>)
 80032fe:	2280      	movs	r2, #128	; 0x80
 8003300:	03d2      	lsls	r2, r2, #15
 8003302:	431a      	orrs	r2, r3
 8003304:	2393      	movs	r3, #147	; 0x93
 8003306:	009b      	lsls	r3, r3, #2
 8003308:	50ca      	str	r2, [r1, r3]

  // Filter bank 2 register 1
  CAN->sFilterRegister[2].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800330a:	4a6f      	ldr	r2, [pc, #444]	; (80034c8 <canFilterConfig+0x400>)
 800330c:	2394      	movs	r3, #148	; 0x94
 800330e:	009b      	lsls	r3, r3, #2
 8003310:	58d3      	ldr	r3, [r2, r3]
 8003312:	4a6d      	ldr	r2, [pc, #436]	; (80034c8 <canFilterConfig+0x400>)
 8003314:	2394      	movs	r3, #148	; 0x94
 8003316:	009b      	lsls	r3, r3, #2
 8003318:	2100      	movs	r1, #0
 800331a:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[2].FR1 |= (0x03 << CAN_F0R1_FB21_Pos); // Identifier is 0x03
 800331c:	4a6a      	ldr	r2, [pc, #424]	; (80034c8 <canFilterConfig+0x400>)
 800331e:	2394      	movs	r3, #148	; 0x94
 8003320:	009b      	lsls	r3, r3, #2
 8003322:	58d3      	ldr	r3, [r2, r3]
 8003324:	4968      	ldr	r1, [pc, #416]	; (80034c8 <canFilterConfig+0x400>)
 8003326:	22c0      	movs	r2, #192	; 0xc0
 8003328:	03d2      	lsls	r2, r2, #15
 800332a:	431a      	orrs	r2, r3
 800332c:	2394      	movs	r3, #148	; 0x94
 800332e:	009b      	lsls	r3, r3, #2
 8003330:	50ca      	str	r2, [r1, r3]

  // Filter bank 2 register 2
  CAN->sFilterRegister[2].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003332:	4a65      	ldr	r2, [pc, #404]	; (80034c8 <canFilterConfig+0x400>)
 8003334:	2395      	movs	r3, #149	; 0x95
 8003336:	009b      	lsls	r3, r3, #2
 8003338:	58d3      	ldr	r3, [r2, r3]
 800333a:	4a63      	ldr	r2, [pc, #396]	; (80034c8 <canFilterConfig+0x400>)
 800333c:	2395      	movs	r3, #149	; 0x95
 800333e:	009b      	lsls	r3, r3, #2
 8003340:	2100      	movs	r1, #0
 8003342:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[2].FR2 |= (0x03 << CAN_F0R2_FB21_Pos); // Identifier is 0x03
 8003344:	4a60      	ldr	r2, [pc, #384]	; (80034c8 <canFilterConfig+0x400>)
 8003346:	2395      	movs	r3, #149	; 0x95
 8003348:	009b      	lsls	r3, r3, #2
 800334a:	58d3      	ldr	r3, [r2, r3]
 800334c:	495e      	ldr	r1, [pc, #376]	; (80034c8 <canFilterConfig+0x400>)
 800334e:	22c0      	movs	r2, #192	; 0xc0
 8003350:	03d2      	lsls	r2, r2, #15
 8003352:	431a      	orrs	r2, r3
 8003354:	2395      	movs	r3, #149	; 0x95
 8003356:	009b      	lsls	r3, r3, #2
 8003358:	50ca      	str	r2, [r1, r3]

  // Filter bank 3 register 1
  CAN->sFilterRegister[3].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800335a:	4a5b      	ldr	r2, [pc, #364]	; (80034c8 <canFilterConfig+0x400>)
 800335c:	2396      	movs	r3, #150	; 0x96
 800335e:	009b      	lsls	r3, r3, #2
 8003360:	58d3      	ldr	r3, [r2, r3]
 8003362:	4a59      	ldr	r2, [pc, #356]	; (80034c8 <canFilterConfig+0x400>)
 8003364:	2396      	movs	r3, #150	; 0x96
 8003366:	009b      	lsls	r3, r3, #2
 8003368:	2100      	movs	r1, #0
 800336a:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[3].FR1 |= (0x04 << CAN_F0R1_FB21_Pos); // Identifier is 0x04
 800336c:	4a56      	ldr	r2, [pc, #344]	; (80034c8 <canFilterConfig+0x400>)
 800336e:	2396      	movs	r3, #150	; 0x96
 8003370:	009b      	lsls	r3, r3, #2
 8003372:	58d3      	ldr	r3, [r2, r3]
 8003374:	4954      	ldr	r1, [pc, #336]	; (80034c8 <canFilterConfig+0x400>)
 8003376:	2280      	movs	r2, #128	; 0x80
 8003378:	0412      	lsls	r2, r2, #16
 800337a:	431a      	orrs	r2, r3
 800337c:	2396      	movs	r3, #150	; 0x96
 800337e:	009b      	lsls	r3, r3, #2
 8003380:	50ca      	str	r2, [r1, r3]

  // Filter bank 3 register 2
  CAN->sFilterRegister[3].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003382:	4a51      	ldr	r2, [pc, #324]	; (80034c8 <canFilterConfig+0x400>)
 8003384:	2397      	movs	r3, #151	; 0x97
 8003386:	009b      	lsls	r3, r3, #2
 8003388:	58d3      	ldr	r3, [r2, r3]
 800338a:	4a4f      	ldr	r2, [pc, #316]	; (80034c8 <canFilterConfig+0x400>)
 800338c:	2397      	movs	r3, #151	; 0x97
 800338e:	009b      	lsls	r3, r3, #2
 8003390:	2100      	movs	r1, #0
 8003392:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[3].FR2 |= (0x04 << CAN_F0R2_FB21_Pos); // Identifier is 0x04
 8003394:	4a4c      	ldr	r2, [pc, #304]	; (80034c8 <canFilterConfig+0x400>)
 8003396:	2397      	movs	r3, #151	; 0x97
 8003398:	009b      	lsls	r3, r3, #2
 800339a:	58d3      	ldr	r3, [r2, r3]
 800339c:	494a      	ldr	r1, [pc, #296]	; (80034c8 <canFilterConfig+0x400>)
 800339e:	2280      	movs	r2, #128	; 0x80
 80033a0:	0412      	lsls	r2, r2, #16
 80033a2:	431a      	orrs	r2, r3
 80033a4:	2397      	movs	r3, #151	; 0x97
 80033a6:	009b      	lsls	r3, r3, #2
 80033a8:	50ca      	str	r2, [r1, r3]

  // Filter bank 4 register 1
  CAN->sFilterRegister[4].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80033aa:	4a47      	ldr	r2, [pc, #284]	; (80034c8 <canFilterConfig+0x400>)
 80033ac:	2398      	movs	r3, #152	; 0x98
 80033ae:	009b      	lsls	r3, r3, #2
 80033b0:	58d3      	ldr	r3, [r2, r3]
 80033b2:	4a45      	ldr	r2, [pc, #276]	; (80034c8 <canFilterConfig+0x400>)
 80033b4:	2398      	movs	r3, #152	; 0x98
 80033b6:	009b      	lsls	r3, r3, #2
 80033b8:	2100      	movs	r1, #0
 80033ba:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[4].FR1 |= (0x05 << CAN_F0R1_FB21_Pos); // Identifier is 0x05
 80033bc:	4a42      	ldr	r2, [pc, #264]	; (80034c8 <canFilterConfig+0x400>)
 80033be:	2398      	movs	r3, #152	; 0x98
 80033c0:	009b      	lsls	r3, r3, #2
 80033c2:	58d3      	ldr	r3, [r2, r3]
 80033c4:	4940      	ldr	r1, [pc, #256]	; (80034c8 <canFilterConfig+0x400>)
 80033c6:	22a0      	movs	r2, #160	; 0xa0
 80033c8:	0412      	lsls	r2, r2, #16
 80033ca:	431a      	orrs	r2, r3
 80033cc:	2398      	movs	r3, #152	; 0x98
 80033ce:	009b      	lsls	r3, r3, #2
 80033d0:	50ca      	str	r2, [r1, r3]

  // Filter bank 4 register 2
  CAN->sFilterRegister[4].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80033d2:	4a3d      	ldr	r2, [pc, #244]	; (80034c8 <canFilterConfig+0x400>)
 80033d4:	2399      	movs	r3, #153	; 0x99
 80033d6:	009b      	lsls	r3, r3, #2
 80033d8:	58d3      	ldr	r3, [r2, r3]
 80033da:	4a3b      	ldr	r2, [pc, #236]	; (80034c8 <canFilterConfig+0x400>)
 80033dc:	2399      	movs	r3, #153	; 0x99
 80033de:	009b      	lsls	r3, r3, #2
 80033e0:	2100      	movs	r1, #0
 80033e2:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[4].FR2 |= (0x05 << CAN_F0R2_FB21_Pos); // Identifier is 0x05
 80033e4:	4a38      	ldr	r2, [pc, #224]	; (80034c8 <canFilterConfig+0x400>)
 80033e6:	2399      	movs	r3, #153	; 0x99
 80033e8:	009b      	lsls	r3, r3, #2
 80033ea:	58d3      	ldr	r3, [r2, r3]
 80033ec:	4936      	ldr	r1, [pc, #216]	; (80034c8 <canFilterConfig+0x400>)
 80033ee:	22a0      	movs	r2, #160	; 0xa0
 80033f0:	0412      	lsls	r2, r2, #16
 80033f2:	431a      	orrs	r2, r3
 80033f4:	2399      	movs	r3, #153	; 0x99
 80033f6:	009b      	lsls	r3, r3, #2
 80033f8:	50ca      	str	r2, [r1, r3]

  // Filter bank 5 register 1
  CAN->sFilterRegister[5].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80033fa:	4a33      	ldr	r2, [pc, #204]	; (80034c8 <canFilterConfig+0x400>)
 80033fc:	239a      	movs	r3, #154	; 0x9a
 80033fe:	009b      	lsls	r3, r3, #2
 8003400:	58d3      	ldr	r3, [r2, r3]
 8003402:	4a31      	ldr	r2, [pc, #196]	; (80034c8 <canFilterConfig+0x400>)
 8003404:	239a      	movs	r3, #154	; 0x9a
 8003406:	009b      	lsls	r3, r3, #2
 8003408:	2100      	movs	r1, #0
 800340a:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[5].FR1 |= (0x06 << CAN_F0R1_FB21_Pos); // Identifier is 0x06
 800340c:	4a2e      	ldr	r2, [pc, #184]	; (80034c8 <canFilterConfig+0x400>)
 800340e:	239a      	movs	r3, #154	; 0x9a
 8003410:	009b      	lsls	r3, r3, #2
 8003412:	58d3      	ldr	r3, [r2, r3]
 8003414:	492c      	ldr	r1, [pc, #176]	; (80034c8 <canFilterConfig+0x400>)
 8003416:	22c0      	movs	r2, #192	; 0xc0
 8003418:	0412      	lsls	r2, r2, #16
 800341a:	431a      	orrs	r2, r3
 800341c:	239a      	movs	r3, #154	; 0x9a
 800341e:	009b      	lsls	r3, r3, #2
 8003420:	50ca      	str	r2, [r1, r3]

  // Filter bank 5 register 2
  CAN->sFilterRegister[5].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003422:	4a29      	ldr	r2, [pc, #164]	; (80034c8 <canFilterConfig+0x400>)
 8003424:	239b      	movs	r3, #155	; 0x9b
 8003426:	009b      	lsls	r3, r3, #2
 8003428:	58d3      	ldr	r3, [r2, r3]
 800342a:	4a27      	ldr	r2, [pc, #156]	; (80034c8 <canFilterConfig+0x400>)
 800342c:	239b      	movs	r3, #155	; 0x9b
 800342e:	009b      	lsls	r3, r3, #2
 8003430:	2100      	movs	r1, #0
 8003432:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[5].FR2 |= (0x06 << CAN_F0R2_FB21_Pos); // Identifier is 0x06
 8003434:	4a24      	ldr	r2, [pc, #144]	; (80034c8 <canFilterConfig+0x400>)
 8003436:	239b      	movs	r3, #155	; 0x9b
 8003438:	009b      	lsls	r3, r3, #2
 800343a:	58d3      	ldr	r3, [r2, r3]
 800343c:	4922      	ldr	r1, [pc, #136]	; (80034c8 <canFilterConfig+0x400>)
 800343e:	22c0      	movs	r2, #192	; 0xc0
 8003440:	0412      	lsls	r2, r2, #16
 8003442:	431a      	orrs	r2, r3
 8003444:	239b      	movs	r3, #155	; 0x9b
 8003446:	009b      	lsls	r3, r3, #2
 8003448:	50ca      	str	r2, [r1, r3]

  /* Filter bank 0 register 1 and filter bank 0 register 2 are both identifier registers */
  /* The data frames will be accepted only if the ID is between 0x01 and 0x06 */

  // Filter bank 6 register 1
  CAN->sFilterRegister[6].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800344a:	4a1f      	ldr	r2, [pc, #124]	; (80034c8 <canFilterConfig+0x400>)
 800344c:	239c      	movs	r3, #156	; 0x9c
 800344e:	009b      	lsls	r3, r3, #2
 8003450:	58d3      	ldr	r3, [r2, r3]
 8003452:	4a1d      	ldr	r2, [pc, #116]	; (80034c8 <canFilterConfig+0x400>)
 8003454:	239c      	movs	r3, #156	; 0x9c
 8003456:	009b      	lsls	r3, r3, #2
 8003458:	2100      	movs	r1, #0
 800345a:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[6].FR1 |= (0x01 << CAN_F0R1_FB21_Pos); // Identifier is 0x01
 800345c:	4a1a      	ldr	r2, [pc, #104]	; (80034c8 <canFilterConfig+0x400>)
 800345e:	239c      	movs	r3, #156	; 0x9c
 8003460:	009b      	lsls	r3, r3, #2
 8003462:	58d3      	ldr	r3, [r2, r3]
 8003464:	4918      	ldr	r1, [pc, #96]	; (80034c8 <canFilterConfig+0x400>)
 8003466:	2280      	movs	r2, #128	; 0x80
 8003468:	0392      	lsls	r2, r2, #14
 800346a:	431a      	orrs	r2, r3
 800346c:	239c      	movs	r3, #156	; 0x9c
 800346e:	009b      	lsls	r3, r3, #2
 8003470:	50ca      	str	r2, [r1, r3]

  // Filter bank 6 register 2
  CAN->sFilterRegister[6].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003472:	4a15      	ldr	r2, [pc, #84]	; (80034c8 <canFilterConfig+0x400>)
 8003474:	239d      	movs	r3, #157	; 0x9d
 8003476:	009b      	lsls	r3, r3, #2
 8003478:	58d3      	ldr	r3, [r2, r3]
 800347a:	4a13      	ldr	r2, [pc, #76]	; (80034c8 <canFilterConfig+0x400>)
 800347c:	239d      	movs	r3, #157	; 0x9d
 800347e:	009b      	lsls	r3, r3, #2
 8003480:	2100      	movs	r1, #0
 8003482:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[6].FR2 |= (0x01 << CAN_F0R2_FB21_Pos); // Identifier is 0x01
 8003484:	4a10      	ldr	r2, [pc, #64]	; (80034c8 <canFilterConfig+0x400>)
 8003486:	239d      	movs	r3, #157	; 0x9d
 8003488:	009b      	lsls	r3, r3, #2
 800348a:	58d3      	ldr	r3, [r2, r3]
 800348c:	490e      	ldr	r1, [pc, #56]	; (80034c8 <canFilterConfig+0x400>)
 800348e:	2280      	movs	r2, #128	; 0x80
 8003490:	0392      	lsls	r2, r2, #14
 8003492:	431a      	orrs	r2, r3
 8003494:	239d      	movs	r3, #157	; 0x9d
 8003496:	009b      	lsls	r3, r3, #2
 8003498:	50ca      	str	r2, [r1, r3]

  // Filter bank 7 register 1
  CAN->sFilterRegister[7].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800349a:	4a0b      	ldr	r2, [pc, #44]	; (80034c8 <canFilterConfig+0x400>)
 800349c:	239e      	movs	r3, #158	; 0x9e
 800349e:	009b      	lsls	r3, r3, #2
 80034a0:	58d3      	ldr	r3, [r2, r3]
 80034a2:	4a09      	ldr	r2, [pc, #36]	; (80034c8 <canFilterConfig+0x400>)
 80034a4:	239e      	movs	r3, #158	; 0x9e
 80034a6:	009b      	lsls	r3, r3, #2
 80034a8:	2100      	movs	r1, #0
 80034aa:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[7].FR1 |= (0x02 << CAN_F0R1_FB21_Pos); // Identifier is 0x02
 80034ac:	4a06      	ldr	r2, [pc, #24]	; (80034c8 <canFilterConfig+0x400>)
 80034ae:	239e      	movs	r3, #158	; 0x9e
 80034b0:	009b      	lsls	r3, r3, #2
 80034b2:	58d3      	ldr	r3, [r2, r3]
 80034b4:	4904      	ldr	r1, [pc, #16]	; (80034c8 <canFilterConfig+0x400>)
 80034b6:	2280      	movs	r2, #128	; 0x80
 80034b8:	03d2      	lsls	r2, r2, #15
 80034ba:	431a      	orrs	r2, r3
 80034bc:	239e      	movs	r3, #158	; 0x9e
 80034be:	009b      	lsls	r3, r3, #2
 80034c0:	50ca      	str	r2, [r1, r3]
 80034c2:	e003      	b.n	80034cc <canFilterConfig+0x404>
 80034c4:	08008720 	.word	0x08008720
 80034c8:	40006400 	.word	0x40006400

  // Filter bank 7 register 2
  CAN->sFilterRegister[7].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80034cc:	4a62      	ldr	r2, [pc, #392]	; (8003658 <canFilterConfig+0x590>)
 80034ce:	239f      	movs	r3, #159	; 0x9f
 80034d0:	009b      	lsls	r3, r3, #2
 80034d2:	58d3      	ldr	r3, [r2, r3]
 80034d4:	4a60      	ldr	r2, [pc, #384]	; (8003658 <canFilterConfig+0x590>)
 80034d6:	239f      	movs	r3, #159	; 0x9f
 80034d8:	009b      	lsls	r3, r3, #2
 80034da:	2100      	movs	r1, #0
 80034dc:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[7].FR2 |= (0x02 << CAN_F0R2_FB21_Pos); // Identifier is 0x02
 80034de:	4a5e      	ldr	r2, [pc, #376]	; (8003658 <canFilterConfig+0x590>)
 80034e0:	239f      	movs	r3, #159	; 0x9f
 80034e2:	009b      	lsls	r3, r3, #2
 80034e4:	58d3      	ldr	r3, [r2, r3]
 80034e6:	495c      	ldr	r1, [pc, #368]	; (8003658 <canFilterConfig+0x590>)
 80034e8:	2280      	movs	r2, #128	; 0x80
 80034ea:	03d2      	lsls	r2, r2, #15
 80034ec:	431a      	orrs	r2, r3
 80034ee:	239f      	movs	r3, #159	; 0x9f
 80034f0:	009b      	lsls	r3, r3, #2
 80034f2:	50ca      	str	r2, [r1, r3]

  // Filter bank 8 register 1
  CAN->sFilterRegister[8].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80034f4:	4a58      	ldr	r2, [pc, #352]	; (8003658 <canFilterConfig+0x590>)
 80034f6:	23a0      	movs	r3, #160	; 0xa0
 80034f8:	009b      	lsls	r3, r3, #2
 80034fa:	58d3      	ldr	r3, [r2, r3]
 80034fc:	4a56      	ldr	r2, [pc, #344]	; (8003658 <canFilterConfig+0x590>)
 80034fe:	23a0      	movs	r3, #160	; 0xa0
 8003500:	009b      	lsls	r3, r3, #2
 8003502:	2100      	movs	r1, #0
 8003504:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[8].FR1 |= (0x03 << CAN_F0R1_FB21_Pos); // Identifier is 0x03
 8003506:	4a54      	ldr	r2, [pc, #336]	; (8003658 <canFilterConfig+0x590>)
 8003508:	23a0      	movs	r3, #160	; 0xa0
 800350a:	009b      	lsls	r3, r3, #2
 800350c:	58d3      	ldr	r3, [r2, r3]
 800350e:	4952      	ldr	r1, [pc, #328]	; (8003658 <canFilterConfig+0x590>)
 8003510:	22c0      	movs	r2, #192	; 0xc0
 8003512:	03d2      	lsls	r2, r2, #15
 8003514:	431a      	orrs	r2, r3
 8003516:	23a0      	movs	r3, #160	; 0xa0
 8003518:	009b      	lsls	r3, r3, #2
 800351a:	50ca      	str	r2, [r1, r3]

  // Filter bank 8 register 2
  CAN->sFilterRegister[8].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 800351c:	4a4e      	ldr	r2, [pc, #312]	; (8003658 <canFilterConfig+0x590>)
 800351e:	23a1      	movs	r3, #161	; 0xa1
 8003520:	009b      	lsls	r3, r3, #2
 8003522:	58d3      	ldr	r3, [r2, r3]
 8003524:	4a4c      	ldr	r2, [pc, #304]	; (8003658 <canFilterConfig+0x590>)
 8003526:	23a1      	movs	r3, #161	; 0xa1
 8003528:	009b      	lsls	r3, r3, #2
 800352a:	2100      	movs	r1, #0
 800352c:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[8].FR2 |= (0x03 << CAN_F0R2_FB21_Pos); // Identifier is 0x03
 800352e:	4a4a      	ldr	r2, [pc, #296]	; (8003658 <canFilterConfig+0x590>)
 8003530:	23a1      	movs	r3, #161	; 0xa1
 8003532:	009b      	lsls	r3, r3, #2
 8003534:	58d3      	ldr	r3, [r2, r3]
 8003536:	4948      	ldr	r1, [pc, #288]	; (8003658 <canFilterConfig+0x590>)
 8003538:	22c0      	movs	r2, #192	; 0xc0
 800353a:	03d2      	lsls	r2, r2, #15
 800353c:	431a      	orrs	r2, r3
 800353e:	23a1      	movs	r3, #161	; 0xa1
 8003540:	009b      	lsls	r3, r3, #2
 8003542:	50ca      	str	r2, [r1, r3]

  // Filter bank 9 register 1
  CAN->sFilterRegister[9].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 8003544:	4a44      	ldr	r2, [pc, #272]	; (8003658 <canFilterConfig+0x590>)
 8003546:	23a2      	movs	r3, #162	; 0xa2
 8003548:	009b      	lsls	r3, r3, #2
 800354a:	58d3      	ldr	r3, [r2, r3]
 800354c:	4a42      	ldr	r2, [pc, #264]	; (8003658 <canFilterConfig+0x590>)
 800354e:	23a2      	movs	r3, #162	; 0xa2
 8003550:	009b      	lsls	r3, r3, #2
 8003552:	2100      	movs	r1, #0
 8003554:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[9].FR1 |= (0x04 << CAN_F0R1_FB21_Pos); // Identifier is 0x04
 8003556:	4a40      	ldr	r2, [pc, #256]	; (8003658 <canFilterConfig+0x590>)
 8003558:	23a2      	movs	r3, #162	; 0xa2
 800355a:	009b      	lsls	r3, r3, #2
 800355c:	58d3      	ldr	r3, [r2, r3]
 800355e:	493e      	ldr	r1, [pc, #248]	; (8003658 <canFilterConfig+0x590>)
 8003560:	2280      	movs	r2, #128	; 0x80
 8003562:	0412      	lsls	r2, r2, #16
 8003564:	431a      	orrs	r2, r3
 8003566:	23a2      	movs	r3, #162	; 0xa2
 8003568:	009b      	lsls	r3, r3, #2
 800356a:	50ca      	str	r2, [r1, r3]

  // Filter bank 9 register 2
  CAN->sFilterRegister[9].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 800356c:	4a3a      	ldr	r2, [pc, #232]	; (8003658 <canFilterConfig+0x590>)
 800356e:	23a3      	movs	r3, #163	; 0xa3
 8003570:	009b      	lsls	r3, r3, #2
 8003572:	58d3      	ldr	r3, [r2, r3]
 8003574:	4a38      	ldr	r2, [pc, #224]	; (8003658 <canFilterConfig+0x590>)
 8003576:	23a3      	movs	r3, #163	; 0xa3
 8003578:	009b      	lsls	r3, r3, #2
 800357a:	2100      	movs	r1, #0
 800357c:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[9].FR2 |= (0x04 << CAN_F0R2_FB21_Pos); // Identifier is 0x04
 800357e:	4a36      	ldr	r2, [pc, #216]	; (8003658 <canFilterConfig+0x590>)
 8003580:	23a3      	movs	r3, #163	; 0xa3
 8003582:	009b      	lsls	r3, r3, #2
 8003584:	58d3      	ldr	r3, [r2, r3]
 8003586:	4934      	ldr	r1, [pc, #208]	; (8003658 <canFilterConfig+0x590>)
 8003588:	2280      	movs	r2, #128	; 0x80
 800358a:	0412      	lsls	r2, r2, #16
 800358c:	431a      	orrs	r2, r3
 800358e:	23a3      	movs	r3, #163	; 0xa3
 8003590:	009b      	lsls	r3, r3, #2
 8003592:	50ca      	str	r2, [r1, r3]

  // Filter bank 10 register 1
  CAN->sFilterRegister[10].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 8003594:	4a30      	ldr	r2, [pc, #192]	; (8003658 <canFilterConfig+0x590>)
 8003596:	23a4      	movs	r3, #164	; 0xa4
 8003598:	009b      	lsls	r3, r3, #2
 800359a:	58d3      	ldr	r3, [r2, r3]
 800359c:	4a2e      	ldr	r2, [pc, #184]	; (8003658 <canFilterConfig+0x590>)
 800359e:	23a4      	movs	r3, #164	; 0xa4
 80035a0:	009b      	lsls	r3, r3, #2
 80035a2:	2100      	movs	r1, #0
 80035a4:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[10].FR1 |= (0x05 << CAN_F0R1_FB21_Pos); // Identifier is 0x05
 80035a6:	4a2c      	ldr	r2, [pc, #176]	; (8003658 <canFilterConfig+0x590>)
 80035a8:	23a4      	movs	r3, #164	; 0xa4
 80035aa:	009b      	lsls	r3, r3, #2
 80035ac:	58d3      	ldr	r3, [r2, r3]
 80035ae:	492a      	ldr	r1, [pc, #168]	; (8003658 <canFilterConfig+0x590>)
 80035b0:	22a0      	movs	r2, #160	; 0xa0
 80035b2:	0412      	lsls	r2, r2, #16
 80035b4:	431a      	orrs	r2, r3
 80035b6:	23a4      	movs	r3, #164	; 0xa4
 80035b8:	009b      	lsls	r3, r3, #2
 80035ba:	50ca      	str	r2, [r1, r3]

  // Filter bank 10 register 2
  CAN->sFilterRegister[10].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80035bc:	4a26      	ldr	r2, [pc, #152]	; (8003658 <canFilterConfig+0x590>)
 80035be:	23a5      	movs	r3, #165	; 0xa5
 80035c0:	009b      	lsls	r3, r3, #2
 80035c2:	58d3      	ldr	r3, [r2, r3]
 80035c4:	4a24      	ldr	r2, [pc, #144]	; (8003658 <canFilterConfig+0x590>)
 80035c6:	23a5      	movs	r3, #165	; 0xa5
 80035c8:	009b      	lsls	r3, r3, #2
 80035ca:	2100      	movs	r1, #0
 80035cc:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[10].FR2 |= (0x05 << CAN_F0R2_FB21_Pos); // Identifier is 0x05
 80035ce:	4a22      	ldr	r2, [pc, #136]	; (8003658 <canFilterConfig+0x590>)
 80035d0:	23a5      	movs	r3, #165	; 0xa5
 80035d2:	009b      	lsls	r3, r3, #2
 80035d4:	58d3      	ldr	r3, [r2, r3]
 80035d6:	4920      	ldr	r1, [pc, #128]	; (8003658 <canFilterConfig+0x590>)
 80035d8:	22a0      	movs	r2, #160	; 0xa0
 80035da:	0412      	lsls	r2, r2, #16
 80035dc:	431a      	orrs	r2, r3
 80035de:	23a5      	movs	r3, #165	; 0xa5
 80035e0:	009b      	lsls	r3, r3, #2
 80035e2:	50ca      	str	r2, [r1, r3]

  // Filter bank 11 register 1
  CAN->sFilterRegister[11].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80035e4:	4a1c      	ldr	r2, [pc, #112]	; (8003658 <canFilterConfig+0x590>)
 80035e6:	23a6      	movs	r3, #166	; 0xa6
 80035e8:	009b      	lsls	r3, r3, #2
 80035ea:	58d3      	ldr	r3, [r2, r3]
 80035ec:	4a1a      	ldr	r2, [pc, #104]	; (8003658 <canFilterConfig+0x590>)
 80035ee:	23a6      	movs	r3, #166	; 0xa6
 80035f0:	009b      	lsls	r3, r3, #2
 80035f2:	2100      	movs	r1, #0
 80035f4:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[11].FR1 |= (0x06 << CAN_F0R1_FB21_Pos); // Identifier is 0x06
 80035f6:	4a18      	ldr	r2, [pc, #96]	; (8003658 <canFilterConfig+0x590>)
 80035f8:	23a6      	movs	r3, #166	; 0xa6
 80035fa:	009b      	lsls	r3, r3, #2
 80035fc:	58d3      	ldr	r3, [r2, r3]
 80035fe:	4916      	ldr	r1, [pc, #88]	; (8003658 <canFilterConfig+0x590>)
 8003600:	22c0      	movs	r2, #192	; 0xc0
 8003602:	0412      	lsls	r2, r2, #16
 8003604:	431a      	orrs	r2, r3
 8003606:	23a6      	movs	r3, #166	; 0xa6
 8003608:	009b      	lsls	r3, r3, #2
 800360a:	50ca      	str	r2, [r1, r3]

  // Filter bank 5 register 2
  CAN->sFilterRegister[11].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 800360c:	4a12      	ldr	r2, [pc, #72]	; (8003658 <canFilterConfig+0x590>)
 800360e:	23a7      	movs	r3, #167	; 0xa7
 8003610:	009b      	lsls	r3, r3, #2
 8003612:	58d3      	ldr	r3, [r2, r3]
 8003614:	4a10      	ldr	r2, [pc, #64]	; (8003658 <canFilterConfig+0x590>)
 8003616:	23a7      	movs	r3, #167	; 0xa7
 8003618:	009b      	lsls	r3, r3, #2
 800361a:	2100      	movs	r1, #0
 800361c:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[11].FR2 |= (0x06 << CAN_F0R2_FB21_Pos); // Identifier is 0x06
 800361e:	4a0e      	ldr	r2, [pc, #56]	; (8003658 <canFilterConfig+0x590>)
 8003620:	23a7      	movs	r3, #167	; 0xa7
 8003622:	009b      	lsls	r3, r3, #2
 8003624:	58d3      	ldr	r3, [r2, r3]
 8003626:	490c      	ldr	r1, [pc, #48]	; (8003658 <canFilterConfig+0x590>)
 8003628:	22c0      	movs	r2, #192	; 0xc0
 800362a:	0412      	lsls	r2, r2, #16
 800362c:	431a      	orrs	r2, r3
 800362e:	23a7      	movs	r3, #167	; 0xa7
 8003630:	009b      	lsls	r3, r3, #2
 8003632:	50ca      	str	r2, [r1, r3]

  // Leave filter initialization mode
  CAN->FMR &=~ CAN_FMR_FINIT;
 8003634:	4a08      	ldr	r2, [pc, #32]	; (8003658 <canFilterConfig+0x590>)
 8003636:	2380      	movs	r3, #128	; 0x80
 8003638:	009b      	lsls	r3, r3, #2
 800363a:	58d3      	ldr	r3, [r2, r3]
 800363c:	4906      	ldr	r1, [pc, #24]	; (8003658 <canFilterConfig+0x590>)
 800363e:	2201      	movs	r2, #1
 8003640:	4393      	bics	r3, r2
 8003642:	001a      	movs	r2, r3
 8003644:	2380      	movs	r3, #128	; 0x80
 8003646:	009b      	lsls	r3, r3, #2
 8003648:	50ca      	str	r2, [r1, r3]

  printf("CAN FILTER CONFIGURATION OK\r\n");
 800364a:	4b04      	ldr	r3, [pc, #16]	; (800365c <canFilterConfig+0x594>)
 800364c:	0018      	movs	r0, r3
 800364e:	f002 fbe9 	bl	8005e24 <puts>

}
 8003652:	46c0      	nop			; (mov r8, r8)
 8003654:	46bd      	mov	sp, r7
 8003656:	bd80      	pop	{r7, pc}
 8003658:	40006400 	.word	0x40006400
 800365c:	08008750 	.word	0x08008750

08003660 <canInit>:

/******************* Initialize the CAN peripheral ********************/

void canInit(){
 8003660:	b580      	push	{r7, lr}
 8003662:	af00      	add	r7, sp, #0

  printf("********** CAN INITIALIZATION **********\r\n");
 8003664:	4ba1      	ldr	r3, [pc, #644]	; (80038ec <canInit+0x28c>)
 8003666:	0018      	movs	r0, r3
 8003668:	f002 fbdc 	bl	8005e24 <puts>

  // Enable the clock for the GPIOA at 8 Mhz
  RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 800366c:	4ba0      	ldr	r3, [pc, #640]	; (80038f0 <canInit+0x290>)
 800366e:	695a      	ldr	r2, [r3, #20]
 8003670:	4b9f      	ldr	r3, [pc, #636]	; (80038f0 <canInit+0x290>)
 8003672:	2180      	movs	r1, #128	; 0x80
 8003674:	0289      	lsls	r1, r1, #10
 8003676:	430a      	orrs	r2, r1
 8003678:	615a      	str	r2, [r3, #20]

  // Enable the clock for the CAN at 8 Mhz
  RCC->APB1ENR |= RCC_APB1ENR_CANEN;
 800367a:	4b9d      	ldr	r3, [pc, #628]	; (80038f0 <canInit+0x290>)
 800367c:	69da      	ldr	r2, [r3, #28]
 800367e:	4b9c      	ldr	r3, [pc, #624]	; (80038f0 <canInit+0x290>)
 8003680:	2180      	movs	r1, #128	; 0x80
 8003682:	0489      	lsls	r1, r1, #18
 8003684:	430a      	orrs	r2, r1
 8003686:	61da      	str	r2, [r3, #28]

  /* PA12 is the TX pin and PA11 is the RX pin */

  // Activate PA12 mode to alternate function
  GPIOA->MODER &= ~GPIO_MODER_MODER12_Msk; // Clear
 8003688:	2390      	movs	r3, #144	; 0x90
 800368a:	05db      	lsls	r3, r3, #23
 800368c:	681a      	ldr	r2, [r3, #0]
 800368e:	2390      	movs	r3, #144	; 0x90
 8003690:	05db      	lsls	r3, r3, #23
 8003692:	4998      	ldr	r1, [pc, #608]	; (80038f4 <canInit+0x294>)
 8003694:	400a      	ands	r2, r1
 8003696:	601a      	str	r2, [r3, #0]
  GPIOA->MODER |= (0x02 <<GPIO_MODER_MODER12_Pos); // 00: Input mode (reset state), 01: General purpose output mode, 10 : Alternate function mode, 11: Analog mode
 8003698:	2390      	movs	r3, #144	; 0x90
 800369a:	05db      	lsls	r3, r3, #23
 800369c:	681a      	ldr	r2, [r3, #0]
 800369e:	2390      	movs	r3, #144	; 0x90
 80036a0:	05db      	lsls	r3, r3, #23
 80036a2:	2180      	movs	r1, #128	; 0x80
 80036a4:	0489      	lsls	r1, r1, #18
 80036a6:	430a      	orrs	r2, r1
 80036a8:	601a      	str	r2, [r3, #0]

  // Configure PA12 as High-Speed Output
  GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR12_Msk;
 80036aa:	2390      	movs	r3, #144	; 0x90
 80036ac:	05db      	lsls	r3, r3, #23
 80036ae:	689a      	ldr	r2, [r3, #8]
 80036b0:	2390      	movs	r3, #144	; 0x90
 80036b2:	05db      	lsls	r3, r3, #23
 80036b4:	498f      	ldr	r1, [pc, #572]	; (80038f4 <canInit+0x294>)
 80036b6:	400a      	ands	r2, r1
 80036b8:	609a      	str	r2, [r3, #8]
  GPIOA->OSPEEDR |= (0x03 <<GPIO_OSPEEDR_OSPEEDR12_Pos); // x0: Low speed, 01: Medium speed, 11: High speed
 80036ba:	2390      	movs	r3, #144	; 0x90
 80036bc:	05db      	lsls	r3, r3, #23
 80036be:	689a      	ldr	r2, [r3, #8]
 80036c0:	2390      	movs	r3, #144	; 0x90
 80036c2:	05db      	lsls	r3, r3, #23
 80036c4:	21c0      	movs	r1, #192	; 0xc0
 80036c6:	0489      	lsls	r1, r1, #18
 80036c8:	430a      	orrs	r2, r1
 80036ca:	609a      	str	r2, [r3, #8]

  // Disable PA12 Pull-up/Pull-down
  GPIOA->PUPDR &= ~GPIO_PUPDR_PUPDR12_Msk; // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 80036cc:	2390      	movs	r3, #144	; 0x90
 80036ce:	05db      	lsls	r3, r3, #23
 80036d0:	68da      	ldr	r2, [r3, #12]
 80036d2:	2390      	movs	r3, #144	; 0x90
 80036d4:	05db      	lsls	r3, r3, #23
 80036d6:	4987      	ldr	r1, [pc, #540]	; (80038f4 <canInit+0x294>)
 80036d8:	400a      	ands	r2, r1
 80036da:	60da      	str	r2, [r3, #12]

  // Alternative mapping for PA12
  GPIOA->AFR[1] &= ~GPIO_AFRH_AFSEL12_Msk; // Clear
 80036dc:	2390      	movs	r3, #144	; 0x90
 80036de:	05db      	lsls	r3, r3, #23
 80036e0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80036e2:	2390      	movs	r3, #144	; 0x90
 80036e4:	05db      	lsls	r3, r3, #23
 80036e6:	4984      	ldr	r1, [pc, #528]	; (80038f8 <canInit+0x298>)
 80036e8:	400a      	ands	r2, r1
 80036ea:	625a      	str	r2, [r3, #36]	; 0x24
  GPIOA->AFR[1] |= (0x04 << GPIO_AFRH_AFSEL12_Pos); // Alternate function as TX pin for the CAN
 80036ec:	2390      	movs	r3, #144	; 0x90
 80036ee:	05db      	lsls	r3, r3, #23
 80036f0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80036f2:	2390      	movs	r3, #144	; 0x90
 80036f4:	05db      	lsls	r3, r3, #23
 80036f6:	2180      	movs	r1, #128	; 0x80
 80036f8:	02c9      	lsls	r1, r1, #11
 80036fa:	430a      	orrs	r2, r1
 80036fc:	625a      	str	r2, [r3, #36]	; 0x24

  //Activate PA11 mode to alternate function
  GPIOA->MODER &= ~GPIO_MODER_MODER11_Msk; // Clear
 80036fe:	2390      	movs	r3, #144	; 0x90
 8003700:	05db      	lsls	r3, r3, #23
 8003702:	681a      	ldr	r2, [r3, #0]
 8003704:	2390      	movs	r3, #144	; 0x90
 8003706:	05db      	lsls	r3, r3, #23
 8003708:	497c      	ldr	r1, [pc, #496]	; (80038fc <canInit+0x29c>)
 800370a:	400a      	ands	r2, r1
 800370c:	601a      	str	r2, [r3, #0]
  GPIOA->MODER |= (0x02 <<GPIO_MODER_MODER11_Pos); // 00: Input mode (reset state), 01: General purpose output mode, 10 : Alternate function mode, 11: Analog mode
 800370e:	2390      	movs	r3, #144	; 0x90
 8003710:	05db      	lsls	r3, r3, #23
 8003712:	681a      	ldr	r2, [r3, #0]
 8003714:	2390      	movs	r3, #144	; 0x90
 8003716:	05db      	lsls	r3, r3, #23
 8003718:	2180      	movs	r1, #128	; 0x80
 800371a:	0409      	lsls	r1, r1, #16
 800371c:	430a      	orrs	r2, r1
 800371e:	601a      	str	r2, [r3, #0]

  // Configure PA11 as High-Speed Output
  GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR11_Msk; // Clear
 8003720:	2390      	movs	r3, #144	; 0x90
 8003722:	05db      	lsls	r3, r3, #23
 8003724:	689a      	ldr	r2, [r3, #8]
 8003726:	2390      	movs	r3, #144	; 0x90
 8003728:	05db      	lsls	r3, r3, #23
 800372a:	4974      	ldr	r1, [pc, #464]	; (80038fc <canInit+0x29c>)
 800372c:	400a      	ands	r2, r1
 800372e:	609a      	str	r2, [r3, #8]
  GPIOA->OSPEEDR |= (0x03 <<GPIO_OSPEEDR_OSPEEDR11_Pos); // x0: Low speed, 01: Medium speed, 11: High speed
 8003730:	2390      	movs	r3, #144	; 0x90
 8003732:	05db      	lsls	r3, r3, #23
 8003734:	689a      	ldr	r2, [r3, #8]
 8003736:	2390      	movs	r3, #144	; 0x90
 8003738:	05db      	lsls	r3, r3, #23
 800373a:	21c0      	movs	r1, #192	; 0xc0
 800373c:	0409      	lsls	r1, r1, #16
 800373e:	430a      	orrs	r2, r1
 8003740:	609a      	str	r2, [r3, #8]

  // Disable PA11 Pull-up/Pull-down
  GPIOA->PUPDR &= ~GPIO_PUPDR_PUPDR11_Msk; // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8003742:	2390      	movs	r3, #144	; 0x90
 8003744:	05db      	lsls	r3, r3, #23
 8003746:	68da      	ldr	r2, [r3, #12]
 8003748:	2390      	movs	r3, #144	; 0x90
 800374a:	05db      	lsls	r3, r3, #23
 800374c:	496b      	ldr	r1, [pc, #428]	; (80038fc <canInit+0x29c>)
 800374e:	400a      	ands	r2, r1
 8003750:	60da      	str	r2, [r3, #12]

  // Alternative mapping for PA11
  GPIOA->AFR[1] &= ~GPIO_AFRH_AFSEL11_Msk; // Clear
 8003752:	2390      	movs	r3, #144	; 0x90
 8003754:	05db      	lsls	r3, r3, #23
 8003756:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003758:	2390      	movs	r3, #144	; 0x90
 800375a:	05db      	lsls	r3, r3, #23
 800375c:	4968      	ldr	r1, [pc, #416]	; (8003900 <canInit+0x2a0>)
 800375e:	400a      	ands	r2, r1
 8003760:	625a      	str	r2, [r3, #36]	; 0x24
  GPIOA->AFR[1] |= (0x04 << GPIO_AFRH_AFSEL11_Pos); // Alternate function as RX pin for the CAN
 8003762:	2390      	movs	r3, #144	; 0x90
 8003764:	05db      	lsls	r3, r3, #23
 8003766:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003768:	2390      	movs	r3, #144	; 0x90
 800376a:	05db      	lsls	r3, r3, #23
 800376c:	2180      	movs	r1, #128	; 0x80
 800376e:	01c9      	lsls	r1, r1, #7
 8003770:	430a      	orrs	r2, r1
 8003772:	625a      	str	r2, [r3, #36]	; 0x24

  // Exit freeze mode while using DEBUG
  CAN->MCR &= ~CAN_MCR_DBF_Msk;
 8003774:	4b63      	ldr	r3, [pc, #396]	; (8003904 <canInit+0x2a4>)
 8003776:	681a      	ldr	r2, [r3, #0]
 8003778:	4b62      	ldr	r3, [pc, #392]	; (8003904 <canInit+0x2a4>)
 800377a:	4963      	ldr	r1, [pc, #396]	; (8003908 <canInit+0x2a8>)
 800377c:	400a      	ands	r2, r1
 800377e:	601a      	str	r2, [r3, #0]

  // Initialization request for the CAN
  CAN->MCR |= CAN_MCR_INRQ;
 8003780:	4b60      	ldr	r3, [pc, #384]	; (8003904 <canInit+0x2a4>)
 8003782:	681a      	ldr	r2, [r3, #0]
 8003784:	4b5f      	ldr	r3, [pc, #380]	; (8003904 <canInit+0x2a4>)
 8003786:	2101      	movs	r1, #1
 8003788:	430a      	orrs	r2, r1
 800378a:	601a      	str	r2, [r3, #0]

  while ( (CAN->MSR & CAN_MSR_INAK) != CAN_MSR_INAK){
 800378c:	e003      	b.n	8003796 <canInit+0x136>

    printf("Wait until INAK bit is set to enter in can initialization mode\r\n");
 800378e:	4b5f      	ldr	r3, [pc, #380]	; (800390c <canInit+0x2ac>)
 8003790:	0018      	movs	r0, r3
 8003792:	f002 fb47 	bl	8005e24 <puts>
  while ( (CAN->MSR & CAN_MSR_INAK) != CAN_MSR_INAK){
 8003796:	4b5b      	ldr	r3, [pc, #364]	; (8003904 <canInit+0x2a4>)
 8003798:	685b      	ldr	r3, [r3, #4]
 800379a:	2201      	movs	r2, #1
 800379c:	4013      	ands	r3, r2
 800379e:	2b01      	cmp	r3, #1
 80037a0:	d1f5      	bne.n	800378e <canInit+0x12e>
  } // Wait until we reach initialization mode

  // Exit from sleep mode
  CAN->MCR &= ~CAN_MCR_SLEEP;
 80037a2:	4b58      	ldr	r3, [pc, #352]	; (8003904 <canInit+0x2a4>)
 80037a4:	681a      	ldr	r2, [r3, #0]
 80037a6:	4b57      	ldr	r3, [pc, #348]	; (8003904 <canInit+0x2a4>)
 80037a8:	2102      	movs	r1, #2
 80037aa:	438a      	bics	r2, r1
 80037ac:	601a      	str	r2, [r3, #0]

  // Time triggered mode disable
  CAN->MCR &= ~CAN_MCR_TTCM;
 80037ae:	4b55      	ldr	r3, [pc, #340]	; (8003904 <canInit+0x2a4>)
 80037b0:	681a      	ldr	r2, [r3, #0]
 80037b2:	4b54      	ldr	r3, [pc, #336]	; (8003904 <canInit+0x2a4>)
 80037b4:	2180      	movs	r1, #128	; 0x80
 80037b6:	438a      	bics	r2, r1
 80037b8:	601a      	str	r2, [r3, #0]

  // Automatic retransmission diseable
  CAN->MCR |= CAN_MCR_NART;
 80037ba:	4b52      	ldr	r3, [pc, #328]	; (8003904 <canInit+0x2a4>)
 80037bc:	681a      	ldr	r2, [r3, #0]
 80037be:	4b51      	ldr	r3, [pc, #324]	; (8003904 <canInit+0x2a4>)
 80037c0:	2110      	movs	r1, #16
 80037c2:	430a      	orrs	r2, r1
 80037c4:	601a      	str	r2, [r3, #0]

  // Receive fifo locked disable
  CAN->MCR &= ~CAN_MCR_RFLM;
 80037c6:	4b4f      	ldr	r3, [pc, #316]	; (8003904 <canInit+0x2a4>)
 80037c8:	681a      	ldr	r2, [r3, #0]
 80037ca:	4b4e      	ldr	r3, [pc, #312]	; (8003904 <canInit+0x2a4>)
 80037cc:	2108      	movs	r1, #8
 80037ce:	438a      	bics	r2, r1
 80037d0:	601a      	str	r2, [r3, #0]

  // Auto wake up disable
  CAN->MCR &= ~CAN_MCR_AWUM;
 80037d2:	4b4c      	ldr	r3, [pc, #304]	; (8003904 <canInit+0x2a4>)
 80037d4:	681a      	ldr	r2, [r3, #0]
 80037d6:	4b4b      	ldr	r3, [pc, #300]	; (8003904 <canInit+0x2a4>)
 80037d8:	2120      	movs	r1, #32
 80037da:	438a      	bics	r2, r1
 80037dc:	601a      	str	r2, [r3, #0]

  // Transmit fifo priority disable
  CAN->MCR &= ~CAN_MCR_TXFP;
 80037de:	4b49      	ldr	r3, [pc, #292]	; (8003904 <canInit+0x2a4>)
 80037e0:	681a      	ldr	r2, [r3, #0]
 80037e2:	4b48      	ldr	r3, [pc, #288]	; (8003904 <canInit+0x2a4>)
 80037e4:	2104      	movs	r1, #4
 80037e6:	438a      	bics	r2, r1
 80037e8:	601a      	str	r2, [r3, #0]

  // Normal mode
  CAN->BTR &= ~CAN_BTR_LBKM_Msk; // 0: Loop Back Mode disabled, 1: Loop Back Mode enabled
 80037ea:	4b46      	ldr	r3, [pc, #280]	; (8003904 <canInit+0x2a4>)
 80037ec:	69da      	ldr	r2, [r3, #28]
 80037ee:	4b45      	ldr	r3, [pc, #276]	; (8003904 <canInit+0x2a4>)
 80037f0:	4947      	ldr	r1, [pc, #284]	; (8003910 <canInit+0x2b0>)
 80037f2:	400a      	ands	r2, r1
 80037f4:	61da      	str	r2, [r3, #28]
  CAN->BTR &= ~CAN_BTR_SILM_Msk; // 0: Normal operation, 1: Silent Mode
 80037f6:	4b43      	ldr	r3, [pc, #268]	; (8003904 <canInit+0x2a4>)
 80037f8:	69da      	ldr	r2, [r3, #28]
 80037fa:	4b42      	ldr	r3, [pc, #264]	; (8003904 <canInit+0x2a4>)
 80037fc:	0052      	lsls	r2, r2, #1
 80037fe:	0852      	lsrs	r2, r2, #1
 8003800:	61da      	str	r2, [r3, #28]

  /* The bit timing are given from this website : http://www.bittiming.can-wiki.info */

  // Synchronization segment of 1 TQ
  CAN->BTR &= ~CAN_BTR_SJW_Msk;
 8003802:	4b40      	ldr	r3, [pc, #256]	; (8003904 <canInit+0x2a4>)
 8003804:	69da      	ldr	r2, [r3, #28]
 8003806:	4b3f      	ldr	r3, [pc, #252]	; (8003904 <canInit+0x2a4>)
 8003808:	493a      	ldr	r1, [pc, #232]	; (80038f4 <canInit+0x294>)
 800380a:	400a      	ands	r2, r1
 800380c:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x01 - 0x01) << CAN_BTR_SJW_Pos );
 800380e:	4a3d      	ldr	r2, [pc, #244]	; (8003904 <canInit+0x2a4>)
 8003810:	4b3c      	ldr	r3, [pc, #240]	; (8003904 <canInit+0x2a4>)
 8003812:	69d2      	ldr	r2, [r2, #28]
 8003814:	61da      	str	r2, [r3, #28]

  // Prescaler of 1
  CAN->BTR &= ~CAN_BTR_BRP_Msk;
 8003816:	4b3b      	ldr	r3, [pc, #236]	; (8003904 <canInit+0x2a4>)
 8003818:	69da      	ldr	r2, [r3, #28]
 800381a:	4b3a      	ldr	r3, [pc, #232]	; (8003904 <canInit+0x2a4>)
 800381c:	0a92      	lsrs	r2, r2, #10
 800381e:	0292      	lsls	r2, r2, #10
 8003820:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x01 - 0x01) << CAN_BTR_BRP_Pos );
 8003822:	4a38      	ldr	r2, [pc, #224]	; (8003904 <canInit+0x2a4>)
 8003824:	4b37      	ldr	r3, [pc, #220]	; (8003904 <canInit+0x2a4>)
 8003826:	69d2      	ldr	r2, [r2, #28]
 8003828:	61da      	str	r2, [r3, #28]

  // Segment 2 of 2 TQ
  CAN->BTR &= ~CAN_BTR_TS2_Msk; // Clear
 800382a:	4b36      	ldr	r3, [pc, #216]	; (8003904 <canInit+0x2a4>)
 800382c:	69da      	ldr	r2, [r3, #28]
 800382e:	4b35      	ldr	r3, [pc, #212]	; (8003904 <canInit+0x2a4>)
 8003830:	4938      	ldr	r1, [pc, #224]	; (8003914 <canInit+0x2b4>)
 8003832:	400a      	ands	r2, r1
 8003834:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x02 - 0x01) << CAN_BTR_TS2_Pos );
 8003836:	4b33      	ldr	r3, [pc, #204]	; (8003904 <canInit+0x2a4>)
 8003838:	69da      	ldr	r2, [r3, #28]
 800383a:	4b32      	ldr	r3, [pc, #200]	; (8003904 <canInit+0x2a4>)
 800383c:	2180      	movs	r1, #128	; 0x80
 800383e:	0349      	lsls	r1, r1, #13
 8003840:	430a      	orrs	r2, r1
 8003842:	61da      	str	r2, [r3, #28]

  // Segment 1 of 13 TQ
  CAN->BTR &= ~CAN_BTR_TS1_Msk; // Clear
 8003844:	4b2f      	ldr	r3, [pc, #188]	; (8003904 <canInit+0x2a4>)
 8003846:	69da      	ldr	r2, [r3, #28]
 8003848:	4b2e      	ldr	r3, [pc, #184]	; (8003904 <canInit+0x2a4>)
 800384a:	492b      	ldr	r1, [pc, #172]	; (80038f8 <canInit+0x298>)
 800384c:	400a      	ands	r2, r1
 800384e:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x0D - 0x01) << CAN_BTR_TS1_Pos );
 8003850:	4b2c      	ldr	r3, [pc, #176]	; (8003904 <canInit+0x2a4>)
 8003852:	69da      	ldr	r2, [r3, #28]
 8003854:	4b2b      	ldr	r3, [pc, #172]	; (8003904 <canInit+0x2a4>)
 8003856:	21c0      	movs	r1, #192	; 0xc0
 8003858:	0309      	lsls	r1, r1, #12
 800385a:	430a      	orrs	r2, r1
 800385c:	61da      	str	r2, [r3, #28]

  canFilterConfig();
 800385e:	f7ff fc33 	bl	80030c8 <canFilterConfig>

  // Configure the sources of interruption
  CAN->IER |= CAN_IER_TMEIE; // Interruption on completed transmission request (ok, arbitration loss, abort and error)
 8003862:	4b28      	ldr	r3, [pc, #160]	; (8003904 <canInit+0x2a4>)
 8003864:	695a      	ldr	r2, [r3, #20]
 8003866:	4b27      	ldr	r3, [pc, #156]	; (8003904 <canInit+0x2a4>)
 8003868:	2101      	movs	r1, #1
 800386a:	430a      	orrs	r2, r1
 800386c:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FMPIE0; // Interruption on message pending into the fifo 0
 800386e:	4b25      	ldr	r3, [pc, #148]	; (8003904 <canInit+0x2a4>)
 8003870:	695a      	ldr	r2, [r3, #20]
 8003872:	4b24      	ldr	r3, [pc, #144]	; (8003904 <canInit+0x2a4>)
 8003874:	2102      	movs	r1, #2
 8003876:	430a      	orrs	r2, r1
 8003878:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FMPIE1; // Interruption on message pending into the fifo 1
 800387a:	4b22      	ldr	r3, [pc, #136]	; (8003904 <canInit+0x2a4>)
 800387c:	695a      	ldr	r2, [r3, #20]
 800387e:	4b21      	ldr	r3, [pc, #132]	; (8003904 <canInit+0x2a4>)
 8003880:	2110      	movs	r1, #16
 8003882:	430a      	orrs	r2, r1
 8003884:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FOVIE0; // Interruption on message overrun into the fifo 0
 8003886:	4b1f      	ldr	r3, [pc, #124]	; (8003904 <canInit+0x2a4>)
 8003888:	695a      	ldr	r2, [r3, #20]
 800388a:	4b1e      	ldr	r3, [pc, #120]	; (8003904 <canInit+0x2a4>)
 800388c:	2108      	movs	r1, #8
 800388e:	430a      	orrs	r2, r1
 8003890:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FOVIE1; // Interruption on message overrun into the fifo 1
 8003892:	4b1c      	ldr	r3, [pc, #112]	; (8003904 <canInit+0x2a4>)
 8003894:	695a      	ldr	r2, [r3, #20]
 8003896:	4b1b      	ldr	r3, [pc, #108]	; (8003904 <canInit+0x2a4>)
 8003898:	2140      	movs	r1, #64	; 0x40
 800389a:	430a      	orrs	r2, r1
 800389c:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_ERRIE; // Interruption on error
 800389e:	4b19      	ldr	r3, [pc, #100]	; (8003904 <canInit+0x2a4>)
 80038a0:	695a      	ldr	r2, [r3, #20]
 80038a2:	4b18      	ldr	r3, [pc, #96]	; (8003904 <canInit+0x2a4>)
 80038a4:	2180      	movs	r1, #128	; 0x80
 80038a6:	0209      	lsls	r1, r1, #8
 80038a8:	430a      	orrs	r2, r1
 80038aa:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_LECIE; // Interruption on last error code
 80038ac:	4b15      	ldr	r3, [pc, #84]	; (8003904 <canInit+0x2a4>)
 80038ae:	695a      	ldr	r2, [r3, #20]
 80038b0:	4b14      	ldr	r3, [pc, #80]	; (8003904 <canInit+0x2a4>)
 80038b2:	2180      	movs	r1, #128	; 0x80
 80038b4:	0109      	lsls	r1, r1, #4
 80038b6:	430a      	orrs	r2, r1
 80038b8:	615a      	str	r2, [r3, #20]


  // Request exit from initialization mode
  CAN->MCR &= ~CAN_MCR_INRQ;
 80038ba:	4b12      	ldr	r3, [pc, #72]	; (8003904 <canInit+0x2a4>)
 80038bc:	681a      	ldr	r2, [r3, #0]
 80038be:	4b11      	ldr	r3, [pc, #68]	; (8003904 <canInit+0x2a4>)
 80038c0:	2101      	movs	r1, #1
 80038c2:	438a      	bics	r2, r1
 80038c4:	601a      	str	r2, [r3, #0]

  while ((CAN->MSR & CAN_MSR_INAK) == CAN_MSR_INAK){
 80038c6:	e003      	b.n	80038d0 <canInit+0x270>
    printf("Wait until INAK bit is clear to exit from can initialization mode\r\n");
 80038c8:	4b13      	ldr	r3, [pc, #76]	; (8003918 <canInit+0x2b8>)
 80038ca:	0018      	movs	r0, r3
 80038cc:	f002 faaa 	bl	8005e24 <puts>
  while ((CAN->MSR & CAN_MSR_INAK) == CAN_MSR_INAK){
 80038d0:	4b0c      	ldr	r3, [pc, #48]	; (8003904 <canInit+0x2a4>)
 80038d2:	685b      	ldr	r3, [r3, #4]
 80038d4:	2201      	movs	r2, #1
 80038d6:	4013      	ands	r3, r2
 80038d8:	2b01      	cmp	r3, #1
 80038da:	d0f5      	beq.n	80038c8 <canInit+0x268>
  } // Wait until we quit initialization mode

  printf("CAN INITIALIZATION OK\r\n");
 80038dc:	4b0f      	ldr	r3, [pc, #60]	; (800391c <canInit+0x2bc>)
 80038de:	0018      	movs	r0, r3
 80038e0:	f002 faa0 	bl	8005e24 <puts>

}
 80038e4:	46c0      	nop			; (mov r8, r8)
 80038e6:	46bd      	mov	sp, r7
 80038e8:	bd80      	pop	{r7, pc}
 80038ea:	46c0      	nop			; (mov r8, r8)
 80038ec:	08008770 	.word	0x08008770
 80038f0:	40021000 	.word	0x40021000
 80038f4:	fcffffff 	.word	0xfcffffff
 80038f8:	fff0ffff 	.word	0xfff0ffff
 80038fc:	ff3fffff 	.word	0xff3fffff
 8003900:	ffff0fff 	.word	0xffff0fff
 8003904:	40006400 	.word	0x40006400
 8003908:	fffeffff 	.word	0xfffeffff
 800390c:	0800879c 	.word	0x0800879c
 8003910:	bfffffff 	.word	0xbfffffff
 8003914:	ff8fffff 	.word	0xff8fffff
 8003918:	080087dc 	.word	0x080087dc
 800391c:	08008820 	.word	0x08008820

08003920 <sendRemoteFrame>:

/******************* Send remote frames to the RPI in order to get information about the 4 next passes ********************/

void sendRemoteFrame(){
 8003920:	b580      	push	{r7, lr}
 8003922:	b082      	sub	sp, #8
 8003924:	af00      	add	r7, sp, #0

	nextRemoteFrameId = (numberOfDataFrameReceived >= 6) ? ( ( numberOfDataFrameReceived % 6 ) + 1 ) : (numberOfDataFrameReceived + 1);
 8003926:	4b54      	ldr	r3, [pc, #336]	; (8003a78 <sendRemoteFrame+0x158>)
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	2b05      	cmp	r3, #5
 800392c:	d908      	bls.n	8003940 <sendRemoteFrame+0x20>
 800392e:	4b52      	ldr	r3, [pc, #328]	; (8003a78 <sendRemoteFrame+0x158>)
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	2106      	movs	r1, #6
 8003934:	0018      	movs	r0, r3
 8003936:	f7fc fc7f 	bl	8000238 <__aeabi_uidivmod>
 800393a:	000b      	movs	r3, r1
 800393c:	1c5a      	adds	r2, r3, #1
 800393e:	e002      	b.n	8003946 <sendRemoteFrame+0x26>
 8003940:	4b4d      	ldr	r3, [pc, #308]	; (8003a78 <sendRemoteFrame+0x158>)
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	1c5a      	adds	r2, r3, #1
 8003946:	4b4d      	ldr	r3, [pc, #308]	; (8003a7c <sendRemoteFrame+0x15c>)
 8003948:	601a      	str	r2, [r3, #0]

	printf("********** SEND REMOTE FRAME WITH ID N°%ld **********\r\n", nextRemoteFrameId);
 800394a:	4b4c      	ldr	r3, [pc, #304]	; (8003a7c <sendRemoteFrame+0x15c>)
 800394c:	681a      	ldr	r2, [r3, #0]
 800394e:	4b4c      	ldr	r3, [pc, #304]	; (8003a80 <sendRemoteFrame+0x160>)
 8003950:	0011      	movs	r1, r2
 8003952:	0018      	movs	r0, r3
 8003954:	f002 f9ec 	bl	8005d30 <iprintf>

	uint32_t emptyMailbox;

	// Check that all the Tx mailboxes are not full
	if ( ( (CAN->TSR & CAN_TSR_TME0) != 0U ) || ( (CAN->TSR & CAN_TSR_TME1) != 0U ) || ( (CAN->TSR & CAN_TSR_TME2) != 0U) ){
 8003958:	4b4a      	ldr	r3, [pc, #296]	; (8003a84 <sendRemoteFrame+0x164>)
 800395a:	689a      	ldr	r2, [r3, #8]
 800395c:	2380      	movs	r3, #128	; 0x80
 800395e:	04db      	lsls	r3, r3, #19
 8003960:	4013      	ands	r3, r2
 8003962:	d10b      	bne.n	800397c <sendRemoteFrame+0x5c>
 8003964:	4b47      	ldr	r3, [pc, #284]	; (8003a84 <sendRemoteFrame+0x164>)
 8003966:	689a      	ldr	r2, [r3, #8]
 8003968:	2380      	movs	r3, #128	; 0x80
 800396a:	051b      	lsls	r3, r3, #20
 800396c:	4013      	ands	r3, r2
 800396e:	d105      	bne.n	800397c <sendRemoteFrame+0x5c>
 8003970:	4b44      	ldr	r3, [pc, #272]	; (8003a84 <sendRemoteFrame+0x164>)
 8003972:	689a      	ldr	r2, [r3, #8]
 8003974:	2380      	movs	r3, #128	; 0x80
 8003976:	055b      	lsls	r3, r3, #21
 8003978:	4013      	ands	r3, r2
 800397a:	d074      	beq.n	8003a66 <sendRemoteFrame+0x146>

		// Select an empty transmit mailbox
		emptyMailbox = (CAN->TSR & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 800397c:	4b41      	ldr	r3, [pc, #260]	; (8003a84 <sendRemoteFrame+0x164>)
 800397e:	689b      	ldr	r3, [r3, #8]
 8003980:	0e1b      	lsrs	r3, r3, #24
 8003982:	2203      	movs	r2, #3
 8003984:	4013      	ands	r3, r2
 8003986:	607b      	str	r3, [r7, #4]

		printf("The transmit mailbox selected for the ID n°%ld is mailbox %ld\r\n", nextRemoteFrameId, emptyMailbox);
 8003988:	4b3c      	ldr	r3, [pc, #240]	; (8003a7c <sendRemoteFrame+0x15c>)
 800398a:	6819      	ldr	r1, [r3, #0]
 800398c:	687a      	ldr	r2, [r7, #4]
 800398e:	4b3e      	ldr	r3, [pc, #248]	; (8003a88 <sendRemoteFrame+0x168>)
 8003990:	0018      	movs	r0, r3
 8003992:	f002 f9cd 	bl	8005d30 <iprintf>

		// IDE bit set to 0 because we use format CAN Strandard format (2.0A)
		CAN->sTxMailBox[emptyMailbox].TIR &= ~(0x01 << 2); // Set bit 2 to 0
 8003996:	4a3b      	ldr	r2, [pc, #236]	; (8003a84 <sendRemoteFrame+0x164>)
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	3318      	adds	r3, #24
 800399c:	011b      	lsls	r3, r3, #4
 800399e:	589b      	ldr	r3, [r3, r2]
 80039a0:	4938      	ldr	r1, [pc, #224]	; (8003a84 <sendRemoteFrame+0x164>)
 80039a2:	2204      	movs	r2, #4
 80039a4:	4393      	bics	r3, r2
 80039a6:	001a      	movs	r2, r3
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	3318      	adds	r3, #24
 80039ac:	011b      	lsls	r3, r3, #4
 80039ae:	505a      	str	r2, [r3, r1]

		// RTR bit set to 1 because we send a request frame
		CAN->sTxMailBox[emptyMailbox].TIR |= (0x01 << 1); // Set bit 1 to 1
 80039b0:	4a34      	ldr	r2, [pc, #208]	; (8003a84 <sendRemoteFrame+0x164>)
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	3318      	adds	r3, #24
 80039b6:	011b      	lsls	r3, r3, #4
 80039b8:	589b      	ldr	r3, [r3, r2]
 80039ba:	4932      	ldr	r1, [pc, #200]	; (8003a84 <sendRemoteFrame+0x164>)
 80039bc:	2202      	movs	r2, #2
 80039be:	431a      	orrs	r2, r3
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	3318      	adds	r3, #24
 80039c4:	011b      	lsls	r3, r3, #4
 80039c6:	505a      	str	r2, [r3, r1]

		// Set the identifier field according to the parameter "nextRemoteFrameId"
		CAN->sTxMailBox[emptyMailbox].TIR &= ~(0x00003FFFF << 3); // Clear bits 3 to 20
 80039c8:	4a2e      	ldr	r2, [pc, #184]	; (8003a84 <sendRemoteFrame+0x164>)
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	3318      	adds	r3, #24
 80039ce:	011b      	lsls	r3, r3, #4
 80039d0:	589b      	ldr	r3, [r3, r2]
 80039d2:	492c      	ldr	r1, [pc, #176]	; (8003a84 <sendRemoteFrame+0x164>)
 80039d4:	4a2d      	ldr	r2, [pc, #180]	; (8003a8c <sendRemoteFrame+0x16c>)
 80039d6:	401a      	ands	r2, r3
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	3318      	adds	r3, #24
 80039dc:	011b      	lsls	r3, r3, #4
 80039de:	505a      	str	r2, [r3, r1]
		CAN->sTxMailBox[emptyMailbox].TIR &= ~(0x000007FF << 21); // Clear bits 21 to 31
 80039e0:	4a28      	ldr	r2, [pc, #160]	; (8003a84 <sendRemoteFrame+0x164>)
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	3318      	adds	r3, #24
 80039e6:	011b      	lsls	r3, r3, #4
 80039e8:	589b      	ldr	r3, [r3, r2]
 80039ea:	4926      	ldr	r1, [pc, #152]	; (8003a84 <sendRemoteFrame+0x164>)
 80039ec:	02db      	lsls	r3, r3, #11
 80039ee:	0ada      	lsrs	r2, r3, #11
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	3318      	adds	r3, #24
 80039f4:	011b      	lsls	r3, r3, #4
 80039f6:	505a      	str	r2, [r3, r1]
		CAN->sTxMailBox[emptyMailbox].TIR = ( (uint32_t) nextRemoteFrameId << 21);
 80039f8:	4b20      	ldr	r3, [pc, #128]	; (8003a7c <sendRemoteFrame+0x15c>)
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	4921      	ldr	r1, [pc, #132]	; (8003a84 <sendRemoteFrame+0x164>)
 80039fe:	055a      	lsls	r2, r3, #21
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	3318      	adds	r3, #24
 8003a04:	011b      	lsls	r3, r3, #4
 8003a06:	505a      	str	r2, [r3, r1]

		// Size of the data frame according to the parameter "nbBytesCanFrame"
		CAN->sTxMailBox[emptyMailbox].TDTR &= ~(0xFFFFFFFF << 0); // Clear bits 0 to 3
 8003a08:	4a1e      	ldr	r2, [pc, #120]	; (8003a84 <sendRemoteFrame+0x164>)
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	3318      	adds	r3, #24
 8003a0e:	011b      	lsls	r3, r3, #4
 8003a10:	18d3      	adds	r3, r2, r3
 8003a12:	3304      	adds	r3, #4
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	4a1b      	ldr	r2, [pc, #108]	; (8003a84 <sendRemoteFrame+0x164>)
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	3318      	adds	r3, #24
 8003a1c:	011b      	lsls	r3, r3, #4
 8003a1e:	18d3      	adds	r3, r2, r3
 8003a20:	3304      	adds	r3, #4
 8003a22:	2200      	movs	r2, #0
 8003a24:	601a      	str	r2, [r3, #0]
		CAN->sTxMailBox[emptyMailbox].TDTR |= ( ( (uint32_t) nbBytesCanFrame[nextRemoteFrameId - 1] ) << 0);
 8003a26:	4a17      	ldr	r2, [pc, #92]	; (8003a84 <sendRemoteFrame+0x164>)
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	3318      	adds	r3, #24
 8003a2c:	011b      	lsls	r3, r3, #4
 8003a2e:	18d3      	adds	r3, r2, r3
 8003a30:	3304      	adds	r3, #4
 8003a32:	681a      	ldr	r2, [r3, #0]
 8003a34:	4b11      	ldr	r3, [pc, #68]	; (8003a7c <sendRemoteFrame+0x15c>)
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	1e59      	subs	r1, r3, #1
 8003a3a:	4b15      	ldr	r3, [pc, #84]	; (8003a90 <sendRemoteFrame+0x170>)
 8003a3c:	0089      	lsls	r1, r1, #2
 8003a3e:	58cb      	ldr	r3, [r1, r3]
 8003a40:	4910      	ldr	r1, [pc, #64]	; (8003a84 <sendRemoteFrame+0x164>)
 8003a42:	431a      	orrs	r2, r3
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	3318      	adds	r3, #24
 8003a48:	011b      	lsls	r3, r3, #4
 8003a4a:	18cb      	adds	r3, r1, r3
 8003a4c:	3304      	adds	r3, #4
 8003a4e:	601a      	str	r2, [r3, #0]

		// Ask for transmission request : TXRQ = 1
		CAN->sTxMailBox[0].TIR |= CAN_TI0R_TXRQ;
 8003a50:	4a0c      	ldr	r2, [pc, #48]	; (8003a84 <sendRemoteFrame+0x164>)
 8003a52:	23c0      	movs	r3, #192	; 0xc0
 8003a54:	005b      	lsls	r3, r3, #1
 8003a56:	58d3      	ldr	r3, [r2, r3]
 8003a58:	490a      	ldr	r1, [pc, #40]	; (8003a84 <sendRemoteFrame+0x164>)
 8003a5a:	2201      	movs	r2, #1
 8003a5c:	431a      	orrs	r2, r3
 8003a5e:	23c0      	movs	r3, #192	; 0xc0
 8003a60:	005b      	lsls	r3, r3, #1
 8003a62:	50ca      	str	r2, [r1, r3]
 8003a64:	e003      	b.n	8003a6e <sendRemoteFrame+0x14e>

	}

	else{

		printf("All the mailbox are full\r\n");
 8003a66:	4b0b      	ldr	r3, [pc, #44]	; (8003a94 <sendRemoteFrame+0x174>)
 8003a68:	0018      	movs	r0, r3
 8003a6a:	f002 f9db 	bl	8005e24 <puts>
	}

}
 8003a6e:	46c0      	nop			; (mov r8, r8)
 8003a70:	46bd      	mov	sp, r7
 8003a72:	b002      	add	sp, #8
 8003a74:	bd80      	pop	{r7, pc}
 8003a76:	46c0      	nop			; (mov r8, r8)
 8003a78:	2000020c 	.word	0x2000020c
 8003a7c:	20000210 	.word	0x20000210
 8003a80:	08008838 	.word	0x08008838
 8003a84:	40006400 	.word	0x40006400
 8003a88:	08008874 	.word	0x08008874
 8003a8c:	ffe00007 	.word	0xffe00007
 8003a90:	20000000 	.word	0x20000000
 8003a94:	080088b8 	.word	0x080088b8

08003a98 <concat>:

/*******************  Concatenate to integer into one  ********************/

int concat(int a, int b){
 8003a98:	b5b0      	push	{r4, r5, r7, lr}
 8003a9a:	b08e      	sub	sp, #56	; 0x38
 8003a9c:	af00      	add	r7, sp, #0
 8003a9e:	6078      	str	r0, [r7, #4]
 8003aa0:	6039      	str	r1, [r7, #0]

	char s1[20];
	char s2[20];

    // Convert both the integers to string
    sprintf(s1, "%d", a);
 8003aa2:	687a      	ldr	r2, [r7, #4]
 8003aa4:	490e      	ldr	r1, [pc, #56]	; (8003ae0 <concat+0x48>)
 8003aa6:	2420      	movs	r4, #32
 8003aa8:	193b      	adds	r3, r7, r4
 8003aaa:	0018      	movs	r0, r3
 8003aac:	f002 f9c4 	bl	8005e38 <siprintf>
    sprintf(s2, "%d", b);
 8003ab0:	683a      	ldr	r2, [r7, #0]
 8003ab2:	490b      	ldr	r1, [pc, #44]	; (8003ae0 <concat+0x48>)
 8003ab4:	250c      	movs	r5, #12
 8003ab6:	197b      	adds	r3, r7, r5
 8003ab8:	0018      	movs	r0, r3
 8003aba:	f002 f9bd 	bl	8005e38 <siprintf>

    // Concatenate both strings
    strcat(s1, s2);
 8003abe:	197a      	adds	r2, r7, r5
 8003ac0:	193b      	adds	r3, r7, r4
 8003ac2:	0011      	movs	r1, r2
 8003ac4:	0018      	movs	r0, r3
 8003ac6:	f002 f9d7 	bl	8005e78 <strcat>

    // Convert the concatenated string
    // to integer
    int c = atoi(s1);
 8003aca:	193b      	adds	r3, r7, r4
 8003acc:	0018      	movs	r0, r3
 8003ace:	f001 fc98 	bl	8005402 <atoi>
 8003ad2:	0003      	movs	r3, r0
 8003ad4:	637b      	str	r3, [r7, #52]	; 0x34

    // return the formed integer
    return c;
 8003ad6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
}
 8003ad8:	0018      	movs	r0, r3
 8003ada:	46bd      	mov	sp, r7
 8003adc:	b00e      	add	sp, #56	; 0x38
 8003ade:	bdb0      	pop	{r4, r5, r7, pc}
 8003ae0:	080088d4 	.word	0x080088d4

08003ae4 <receiveDataFrame>:

/******************* Receive data frames from the RPI in order to get information about the 4 next passes ********************/

void receiveDataFrame(){
 8003ae4:	b5b0      	push	{r4, r5, r7, lr}
 8003ae6:	b088      	sub	sp, #32
 8003ae8:	af00      	add	r7, sp, #0

	passNumberToUpdate = (numberOfDataFrameReceived < 6) ? 0 : ( (numberOfDataFrameReceived < 12) ? 1 : ( (numberOfDataFrameReceived < 18) ? 2 : 3) );
 8003aea:	4bb8      	ldr	r3, [pc, #736]	; (8003dcc <receiveDataFrame+0x2e8>)
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	2b05      	cmp	r3, #5
 8003af0:	d90d      	bls.n	8003b0e <receiveDataFrame+0x2a>
 8003af2:	4bb6      	ldr	r3, [pc, #728]	; (8003dcc <receiveDataFrame+0x2e8>)
 8003af4:	681b      	ldr	r3, [r3, #0]
 8003af6:	2b0b      	cmp	r3, #11
 8003af8:	d907      	bls.n	8003b0a <receiveDataFrame+0x26>
 8003afa:	4bb4      	ldr	r3, [pc, #720]	; (8003dcc <receiveDataFrame+0x2e8>)
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	2b11      	cmp	r3, #17
 8003b00:	d801      	bhi.n	8003b06 <receiveDataFrame+0x22>
 8003b02:	2302      	movs	r3, #2
 8003b04:	e004      	b.n	8003b10 <receiveDataFrame+0x2c>
 8003b06:	2303      	movs	r3, #3
 8003b08:	e002      	b.n	8003b10 <receiveDataFrame+0x2c>
 8003b0a:	2301      	movs	r3, #1
 8003b0c:	e000      	b.n	8003b10 <receiveDataFrame+0x2c>
 8003b0e:	2300      	movs	r3, #0
 8003b10:	4aaf      	ldr	r2, [pc, #700]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003b12:	6013      	str	r3, [r2, #0]
	nextDataFrameId = (numberOfDataFrameReceived >= 6) ? ( ( numberOfDataFrameReceived % 6 ) + 1 ) : (numberOfDataFrameReceived + 1);
 8003b14:	4bad      	ldr	r3, [pc, #692]	; (8003dcc <receiveDataFrame+0x2e8>)
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	2b05      	cmp	r3, #5
 8003b1a:	d908      	bls.n	8003b2e <receiveDataFrame+0x4a>
 8003b1c:	4bab      	ldr	r3, [pc, #684]	; (8003dcc <receiveDataFrame+0x2e8>)
 8003b1e:	681b      	ldr	r3, [r3, #0]
 8003b20:	2106      	movs	r1, #6
 8003b22:	0018      	movs	r0, r3
 8003b24:	f7fc fb88 	bl	8000238 <__aeabi_uidivmod>
 8003b28:	000b      	movs	r3, r1
 8003b2a:	1c5a      	adds	r2, r3, #1
 8003b2c:	e002      	b.n	8003b34 <receiveDataFrame+0x50>
 8003b2e:	4ba7      	ldr	r3, [pc, #668]	; (8003dcc <receiveDataFrame+0x2e8>)
 8003b30:	681b      	ldr	r3, [r3, #0]
 8003b32:	1c5a      	adds	r2, r3, #1
 8003b34:	4ba7      	ldr	r3, [pc, #668]	; (8003dd4 <receiveDataFrame+0x2f0>)
 8003b36:	601a      	str	r2, [r3, #0]

	// Get the fifo number where the data frame is stored
	uint32_t fifoNumber = ((CAN->RF0R & CAN_RF0R_FMP0) != 0U) ? 0 : 1;
 8003b38:	4ba7      	ldr	r3, [pc, #668]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003b3a:	68db      	ldr	r3, [r3, #12]
 8003b3c:	2203      	movs	r2, #3
 8003b3e:	4013      	ands	r3, r2
 8003b40:	425a      	negs	r2, r3
 8003b42:	4153      	adcs	r3, r2
 8003b44:	b2db      	uxtb	r3, r3
 8003b46:	61fb      	str	r3, [r7, #28]
	printf("The data frame was store into the fifo %ld \r\n", fifoNumber);
 8003b48:	69fa      	ldr	r2, [r7, #28]
 8003b4a:	4ba4      	ldr	r3, [pc, #656]	; (8003ddc <receiveDataFrame+0x2f8>)
 8003b4c:	0011      	movs	r1, r2
 8003b4e:	0018      	movs	r0, r3
 8003b50:	f002 f8ee 	bl	8005d30 <iprintf>

	// Get the id of the received data frame
	uint32_t receivedDataFrameId = (CAN_RI0R_STID & CAN->sFIFOMailBox[fifoNumber].RIR) >> CAN_TI0R_STID_Pos;
 8003b54:	4aa0      	ldr	r2, [pc, #640]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003b56:	69fb      	ldr	r3, [r7, #28]
 8003b58:	331b      	adds	r3, #27
 8003b5a:	011b      	lsls	r3, r3, #4
 8003b5c:	589b      	ldr	r3, [r3, r2]
 8003b5e:	0d5b      	lsrs	r3, r3, #21
 8003b60:	055b      	lsls	r3, r3, #21
 8003b62:	0d5b      	lsrs	r3, r3, #21
 8003b64:	61bb      	str	r3, [r7, #24]
	printf("The identifier received for the data frame is %ld \r\n", receivedDataFrameId);
 8003b66:	69ba      	ldr	r2, [r7, #24]
 8003b68:	4b9d      	ldr	r3, [pc, #628]	; (8003de0 <receiveDataFrame+0x2fc>)
 8003b6a:	0011      	movs	r1, r2
 8003b6c:	0018      	movs	r0, r3
 8003b6e:	f002 f8df 	bl	8005d30 <iprintf>

	// Check if the identifier from the received data frame and the supposed next id to receive are the same
	if(receivedDataFrameId == nextDataFrameId){
 8003b72:	4b98      	ldr	r3, [pc, #608]	; (8003dd4 <receiveDataFrame+0x2f0>)
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	69ba      	ldr	r2, [r7, #24]
 8003b78:	429a      	cmp	r2, r3
 8003b7a:	d001      	beq.n	8003b80 <receiveDataFrame+0x9c>
 8003b7c:	f000 fdc0 	bl	8004700 <receiveDataFrame+0xc1c>

		// Get the size of the received data frame
	    uint32_t receivedDataFrameDlc = (CAN_RDT0R_DLC & CAN->sFIFOMailBox[fifoNumber].RDTR) >> CAN_RDT0R_DLC_Pos;
 8003b80:	4a95      	ldr	r2, [pc, #596]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003b82:	69fb      	ldr	r3, [r7, #28]
 8003b84:	331b      	adds	r3, #27
 8003b86:	011b      	lsls	r3, r3, #4
 8003b88:	18d3      	adds	r3, r2, r3
 8003b8a:	3304      	adds	r3, #4
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	220f      	movs	r2, #15
 8003b90:	4013      	ands	r3, r2
 8003b92:	617b      	str	r3, [r7, #20]
	    printf("The size from the received data frame is %ld bytes \r\n",receivedDataFrameDlc);
 8003b94:	697a      	ldr	r2, [r7, #20]
 8003b96:	4b93      	ldr	r3, [pc, #588]	; (8003de4 <receiveDataFrame+0x300>)
 8003b98:	0011      	movs	r1, r2
 8003b9a:	0018      	movs	r0, r3
 8003b9c:	f002 f8c8 	bl	8005d30 <iprintf>

	    // Check if the data lenght received and the supposed next data lenght to receive are same
	    if(receivedDataFrameDlc == (nbBytesCanFrame[nextDataFrameId - 1])){
 8003ba0:	4b8c      	ldr	r3, [pc, #560]	; (8003dd4 <receiveDataFrame+0x2f0>)
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	1e5a      	subs	r2, r3, #1
 8003ba6:	4b90      	ldr	r3, [pc, #576]	; (8003de8 <receiveDataFrame+0x304>)
 8003ba8:	0092      	lsls	r2, r2, #2
 8003baa:	58d3      	ldr	r3, [r2, r3]
 8003bac:	697a      	ldr	r2, [r7, #20]
 8003bae:	429a      	cmp	r2, r3
 8003bb0:	d001      	beq.n	8003bb6 <receiveDataFrame+0xd2>
 8003bb2:	f000 fda0 	bl	80046f6 <receiveDataFrame+0xc12>

	    	printf("The received data frame has the right size \r\n");
 8003bb6:	4b8d      	ldr	r3, [pc, #564]	; (8003dec <receiveDataFrame+0x308>)
 8003bb8:	0018      	movs	r0, r3
 8003bba:	f002 f933 	bl	8005e24 <puts>

	    	printf("********** RECEIVE DATA FRAME WITH ID N°%ld FOR PASS N°%ld **********\r\n", nextDataFrameId, (passNumberToUpdate + 1));
 8003bbe:	4b85      	ldr	r3, [pc, #532]	; (8003dd4 <receiveDataFrame+0x2f0>)
 8003bc0:	6819      	ldr	r1, [r3, #0]
 8003bc2:	4b83      	ldr	r3, [pc, #524]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	1c5a      	adds	r2, r3, #1
 8003bc8:	4b89      	ldr	r3, [pc, #548]	; (8003df0 <receiveDataFrame+0x30c>)
 8003bca:	0018      	movs	r0, r3
 8003bcc:	f002 f8b0 	bl	8005d30 <iprintf>

	    	switch (nextDataFrameId){
 8003bd0:	4b80      	ldr	r3, [pc, #512]	; (8003dd4 <receiveDataFrame+0x2f0>)
 8003bd2:	681b      	ldr	r3, [r3, #0]
 8003bd4:	2b06      	cmp	r3, #6
 8003bd6:	d901      	bls.n	8003bdc <receiveDataFrame+0xf8>
 8003bd8:	f000 fd87 	bl	80046ea <receiveDataFrame+0xc06>
 8003bdc:	009a      	lsls	r2, r3, #2
 8003bde:	4b85      	ldr	r3, [pc, #532]	; (8003df4 <receiveDataFrame+0x310>)
 8003be0:	18d3      	adds	r3, r2, r3
 8003be2:	681b      	ldr	r3, [r3, #0]
 8003be4:	469f      	mov	pc, r3
	    		uint32_t hundreds, milli, minuteUnit, minuteTeens, second;

	    		// Get the AOS date
	    		case 1:

	    			passes[passNumberToUpdate].passTime.year =  concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ); // Year
 8003be6:	4a7c      	ldr	r2, [pc, #496]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003be8:	23dc      	movs	r3, #220	; 0xdc
 8003bea:	005b      	lsls	r3, r3, #1
 8003bec:	58d3      	ldr	r3, [r2, r3]
 8003bee:	b2db      	uxtb	r3, r3
 8003bf0:	3b30      	subs	r3, #48	; 0x30
 8003bf2:	0018      	movs	r0, r3
 8003bf4:	4a78      	ldr	r2, [pc, #480]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003bf6:	23dc      	movs	r3, #220	; 0xdc
 8003bf8:	005b      	lsls	r3, r3, #1
 8003bfa:	58d3      	ldr	r3, [r2, r3]
 8003bfc:	0a1b      	lsrs	r3, r3, #8
 8003bfe:	b2db      	uxtb	r3, r3
 8003c00:	3b30      	subs	r3, #48	; 0x30
 8003c02:	0019      	movs	r1, r3
 8003c04:	f7ff ff48 	bl	8003a98 <concat>
 8003c08:	0001      	movs	r1, r0
 8003c0a:	4b71      	ldr	r3, [pc, #452]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003c0c:	681a      	ldr	r2, [r3, #0]
 8003c0e:	0008      	movs	r0, r1
 8003c10:	4b79      	ldr	r3, [pc, #484]	; (8003df8 <receiveDataFrame+0x314>)
 8003c12:	2164      	movs	r1, #100	; 0x64
 8003c14:	434a      	muls	r2, r1
 8003c16:	50d0      	str	r0, [r2, r3]
	    			printf("The AOS date year is : %ld\r\n", passes[passNumberToUpdate].passTime.year);
 8003c18:	4b6d      	ldr	r3, [pc, #436]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003c1a:	681a      	ldr	r2, [r3, #0]
 8003c1c:	4b76      	ldr	r3, [pc, #472]	; (8003df8 <receiveDataFrame+0x314>)
 8003c1e:	2164      	movs	r1, #100	; 0x64
 8003c20:	434a      	muls	r2, r1
 8003c22:	58d2      	ldr	r2, [r2, r3]
 8003c24:	4b75      	ldr	r3, [pc, #468]	; (8003dfc <receiveDataFrame+0x318>)
 8003c26:	0011      	movs	r1, r2
 8003c28:	0018      	movs	r0, r3
 8003c2a:	f002 f881 	bl	8005d30 <iprintf>

	    			passes[passNumberToUpdate].passTime.month = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) ); // Month
 8003c2e:	4a6a      	ldr	r2, [pc, #424]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003c30:	23dc      	movs	r3, #220	; 0xdc
 8003c32:	005b      	lsls	r3, r3, #1
 8003c34:	58d3      	ldr	r3, [r2, r3]
 8003c36:	0e1b      	lsrs	r3, r3, #24
 8003c38:	b2db      	uxtb	r3, r3
 8003c3a:	3b30      	subs	r3, #48	; 0x30
 8003c3c:	0018      	movs	r0, r3
 8003c3e:	4a66      	ldr	r2, [pc, #408]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003c40:	23de      	movs	r3, #222	; 0xde
 8003c42:	005b      	lsls	r3, r3, #1
 8003c44:	58d3      	ldr	r3, [r2, r3]
 8003c46:	b2db      	uxtb	r3, r3
 8003c48:	3b30      	subs	r3, #48	; 0x30
 8003c4a:	0019      	movs	r1, r3
 8003c4c:	f7ff ff24 	bl	8003a98 <concat>
 8003c50:	0002      	movs	r2, r0
 8003c52:	4b5f      	ldr	r3, [pc, #380]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	0010      	movs	r0, r2
 8003c58:	4a67      	ldr	r2, [pc, #412]	; (8003df8 <receiveDataFrame+0x314>)
 8003c5a:	2164      	movs	r1, #100	; 0x64
 8003c5c:	434b      	muls	r3, r1
 8003c5e:	18d3      	adds	r3, r2, r3
 8003c60:	3304      	adds	r3, #4
 8003c62:	6018      	str	r0, [r3, #0]
	    			printf("The AOS date month is : %ld\r\n", passes[passNumberToUpdate].passTime.month);
 8003c64:	4b5a      	ldr	r3, [pc, #360]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	4a63      	ldr	r2, [pc, #396]	; (8003df8 <receiveDataFrame+0x314>)
 8003c6a:	2164      	movs	r1, #100	; 0x64
 8003c6c:	434b      	muls	r3, r1
 8003c6e:	18d3      	adds	r3, r2, r3
 8003c70:	3304      	adds	r3, #4
 8003c72:	681a      	ldr	r2, [r3, #0]
 8003c74:	4b62      	ldr	r3, [pc, #392]	; (8003e00 <receiveDataFrame+0x31c>)
 8003c76:	0011      	movs	r1, r2
 8003c78:	0018      	movs	r0, r3
 8003c7a:	f002 f859 	bl	8005d30 <iprintf>

	    			passes[passNumberToUpdate].passTime.day = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA6 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA6_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA7 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA7_Pos) ) - '0' ) ); // Day
 8003c7e:	4a56      	ldr	r2, [pc, #344]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003c80:	23de      	movs	r3, #222	; 0xde
 8003c82:	005b      	lsls	r3, r3, #1
 8003c84:	58d3      	ldr	r3, [r2, r3]
 8003c86:	0c1b      	lsrs	r3, r3, #16
 8003c88:	b2db      	uxtb	r3, r3
 8003c8a:	3b30      	subs	r3, #48	; 0x30
 8003c8c:	0018      	movs	r0, r3
 8003c8e:	4a52      	ldr	r2, [pc, #328]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003c90:	23de      	movs	r3, #222	; 0xde
 8003c92:	005b      	lsls	r3, r3, #1
 8003c94:	58d3      	ldr	r3, [r2, r3]
 8003c96:	0e1b      	lsrs	r3, r3, #24
 8003c98:	b2db      	uxtb	r3, r3
 8003c9a:	3b30      	subs	r3, #48	; 0x30
 8003c9c:	0019      	movs	r1, r3
 8003c9e:	f7ff fefb 	bl	8003a98 <concat>
 8003ca2:	0002      	movs	r2, r0
 8003ca4:	4b4a      	ldr	r3, [pc, #296]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	0010      	movs	r0, r2
 8003caa:	4a53      	ldr	r2, [pc, #332]	; (8003df8 <receiveDataFrame+0x314>)
 8003cac:	2164      	movs	r1, #100	; 0x64
 8003cae:	434b      	muls	r3, r1
 8003cb0:	18d3      	adds	r3, r2, r3
 8003cb2:	3308      	adds	r3, #8
 8003cb4:	6018      	str	r0, [r3, #0]
	    			printf("The AOS date day is : %ld\r\n", passes[passNumberToUpdate].passTime.day);
 8003cb6:	4b46      	ldr	r3, [pc, #280]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	4a4f      	ldr	r2, [pc, #316]	; (8003df8 <receiveDataFrame+0x314>)
 8003cbc:	2164      	movs	r1, #100	; 0x64
 8003cbe:	434b      	muls	r3, r1
 8003cc0:	18d3      	adds	r3, r2, r3
 8003cc2:	3308      	adds	r3, #8
 8003cc4:	681a      	ldr	r2, [r3, #0]
 8003cc6:	4b4f      	ldr	r3, [pc, #316]	; (8003e04 <receiveDataFrame+0x320>)
 8003cc8:	0011      	movs	r1, r2
 8003cca:	0018      	movs	r0, r3
 8003ccc:	f002 f830 	bl	8005d30 <iprintf>

	    			break;
 8003cd0:	f000 fd0b 	bl	80046ea <receiveDataFrame+0xc06>

	    		// Get the AOS time
	    		case 2:

	    			passes[passNumberToUpdate].passTime.hour =  concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ); // Year
 8003cd4:	4a40      	ldr	r2, [pc, #256]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003cd6:	23dc      	movs	r3, #220	; 0xdc
 8003cd8:	005b      	lsls	r3, r3, #1
 8003cda:	58d3      	ldr	r3, [r2, r3]
 8003cdc:	b2db      	uxtb	r3, r3
 8003cde:	3b30      	subs	r3, #48	; 0x30
 8003ce0:	0018      	movs	r0, r3
 8003ce2:	4a3d      	ldr	r2, [pc, #244]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003ce4:	23dc      	movs	r3, #220	; 0xdc
 8003ce6:	005b      	lsls	r3, r3, #1
 8003ce8:	58d3      	ldr	r3, [r2, r3]
 8003cea:	0a1b      	lsrs	r3, r3, #8
 8003cec:	b2db      	uxtb	r3, r3
 8003cee:	3b30      	subs	r3, #48	; 0x30
 8003cf0:	0019      	movs	r1, r3
 8003cf2:	f7ff fed1 	bl	8003a98 <concat>
 8003cf6:	0002      	movs	r2, r0
 8003cf8:	4b35      	ldr	r3, [pc, #212]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	0010      	movs	r0, r2
 8003cfe:	4a3e      	ldr	r2, [pc, #248]	; (8003df8 <receiveDataFrame+0x314>)
 8003d00:	2164      	movs	r1, #100	; 0x64
 8003d02:	434b      	muls	r3, r1
 8003d04:	18d3      	adds	r3, r2, r3
 8003d06:	330c      	adds	r3, #12
 8003d08:	6018      	str	r0, [r3, #0]
	    			printf("The AOS time hour is : %ld\r\n", passes[passNumberToUpdate].passTime.hour);
 8003d0a:	4b31      	ldr	r3, [pc, #196]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003d0c:	681b      	ldr	r3, [r3, #0]
 8003d0e:	4a3a      	ldr	r2, [pc, #232]	; (8003df8 <receiveDataFrame+0x314>)
 8003d10:	2164      	movs	r1, #100	; 0x64
 8003d12:	434b      	muls	r3, r1
 8003d14:	18d3      	adds	r3, r2, r3
 8003d16:	330c      	adds	r3, #12
 8003d18:	681a      	ldr	r2, [r3, #0]
 8003d1a:	4b3b      	ldr	r3, [pc, #236]	; (8003e08 <receiveDataFrame+0x324>)
 8003d1c:	0011      	movs	r1, r2
 8003d1e:	0018      	movs	r0, r3
 8003d20:	f002 f806 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].passTime.minute = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) ); // Month
 8003d24:	4a2c      	ldr	r2, [pc, #176]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003d26:	23dc      	movs	r3, #220	; 0xdc
 8003d28:	005b      	lsls	r3, r3, #1
 8003d2a:	58d3      	ldr	r3, [r2, r3]
 8003d2c:	0e1b      	lsrs	r3, r3, #24
 8003d2e:	b2db      	uxtb	r3, r3
 8003d30:	3b30      	subs	r3, #48	; 0x30
 8003d32:	0018      	movs	r0, r3
 8003d34:	4a28      	ldr	r2, [pc, #160]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003d36:	23de      	movs	r3, #222	; 0xde
 8003d38:	005b      	lsls	r3, r3, #1
 8003d3a:	58d3      	ldr	r3, [r2, r3]
 8003d3c:	b2db      	uxtb	r3, r3
 8003d3e:	3b30      	subs	r3, #48	; 0x30
 8003d40:	0019      	movs	r1, r3
 8003d42:	f7ff fea9 	bl	8003a98 <concat>
 8003d46:	0002      	movs	r2, r0
 8003d48:	4b21      	ldr	r3, [pc, #132]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	0010      	movs	r0, r2
 8003d4e:	4a2a      	ldr	r2, [pc, #168]	; (8003df8 <receiveDataFrame+0x314>)
 8003d50:	2164      	movs	r1, #100	; 0x64
 8003d52:	434b      	muls	r3, r1
 8003d54:	18d3      	adds	r3, r2, r3
 8003d56:	3310      	adds	r3, #16
 8003d58:	6018      	str	r0, [r3, #0]
	    			printf("The AOS time minute is : %ld\r\n", passes[passNumberToUpdate].passTime.minute);
 8003d5a:	4b1d      	ldr	r3, [pc, #116]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003d5c:	681b      	ldr	r3, [r3, #0]
 8003d5e:	4a26      	ldr	r2, [pc, #152]	; (8003df8 <receiveDataFrame+0x314>)
 8003d60:	2164      	movs	r1, #100	; 0x64
 8003d62:	434b      	muls	r3, r1
 8003d64:	18d3      	adds	r3, r2, r3
 8003d66:	3310      	adds	r3, #16
 8003d68:	681a      	ldr	r2, [r3, #0]
 8003d6a:	4b28      	ldr	r3, [pc, #160]	; (8003e0c <receiveDataFrame+0x328>)
 8003d6c:	0011      	movs	r1, r2
 8003d6e:	0018      	movs	r0, r3
 8003d70:	f001 ffde 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].passTime.second = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA6 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA6_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA7 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA7_Pos) ) - '0' ) ); // Day
 8003d74:	4a18      	ldr	r2, [pc, #96]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003d76:	23de      	movs	r3, #222	; 0xde
 8003d78:	005b      	lsls	r3, r3, #1
 8003d7a:	58d3      	ldr	r3, [r2, r3]
 8003d7c:	0c1b      	lsrs	r3, r3, #16
 8003d7e:	b2db      	uxtb	r3, r3
 8003d80:	3b30      	subs	r3, #48	; 0x30
 8003d82:	0018      	movs	r0, r3
 8003d84:	4a14      	ldr	r2, [pc, #80]	; (8003dd8 <receiveDataFrame+0x2f4>)
 8003d86:	23de      	movs	r3, #222	; 0xde
 8003d88:	005b      	lsls	r3, r3, #1
 8003d8a:	58d3      	ldr	r3, [r2, r3]
 8003d8c:	0e1b      	lsrs	r3, r3, #24
 8003d8e:	b2db      	uxtb	r3, r3
 8003d90:	3b30      	subs	r3, #48	; 0x30
 8003d92:	0019      	movs	r1, r3
 8003d94:	f7ff fe80 	bl	8003a98 <concat>
 8003d98:	0002      	movs	r2, r0
 8003d9a:	4b0d      	ldr	r3, [pc, #52]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003d9c:	681b      	ldr	r3, [r3, #0]
 8003d9e:	0010      	movs	r0, r2
 8003da0:	4a15      	ldr	r2, [pc, #84]	; (8003df8 <receiveDataFrame+0x314>)
 8003da2:	2164      	movs	r1, #100	; 0x64
 8003da4:	434b      	muls	r3, r1
 8003da6:	18d3      	adds	r3, r2, r3
 8003da8:	3314      	adds	r3, #20
 8003daa:	6018      	str	r0, [r3, #0]
	    			printf("The AOS time second is : %ld\r\n", passes[passNumberToUpdate].passTime.second);
 8003dac:	4b08      	ldr	r3, [pc, #32]	; (8003dd0 <receiveDataFrame+0x2ec>)
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	4a11      	ldr	r2, [pc, #68]	; (8003df8 <receiveDataFrame+0x314>)
 8003db2:	2164      	movs	r1, #100	; 0x64
 8003db4:	434b      	muls	r3, r1
 8003db6:	18d3      	adds	r3, r2, r3
 8003db8:	3314      	adds	r3, #20
 8003dba:	681a      	ldr	r2, [r3, #0]
 8003dbc:	4b14      	ldr	r3, [pc, #80]	; (8003e10 <receiveDataFrame+0x32c>)
 8003dbe:	0011      	movs	r1, r2
 8003dc0:	0018      	movs	r0, r3
 8003dc2:	f001 ffb5 	bl	8005d30 <iprintf>
	    			break;
 8003dc6:	f000 fc90 	bl	80046ea <receiveDataFrame+0xc06>
 8003dca:	46c0      	nop			; (mov r8, r8)
 8003dcc:	2000020c 	.word	0x2000020c
 8003dd0:	20000218 	.word	0x20000218
 8003dd4:	20000214 	.word	0x20000214
 8003dd8:	40006400 	.word	0x40006400
 8003ddc:	080088d8 	.word	0x080088d8
 8003de0:	08008908 	.word	0x08008908
 8003de4:	08008940 	.word	0x08008940
 8003de8:	20000000 	.word	0x20000000
 8003dec:	08008978 	.word	0x08008978
 8003df0:	080089a8 	.word	0x080089a8
 8003df4:	080095d4 	.word	0x080095d4
 8003df8:	2000021c 	.word	0x2000021c
 8003dfc:	080089f4 	.word	0x080089f4
 8003e00:	08008a14 	.word	0x08008a14
 8003e04:	08008a34 	.word	0x08008a34
 8003e08:	08008a50 	.word	0x08008a50
 8003e0c:	08008a70 	.word	0x08008a70
 8003e10:	08008a90 	.word	0x08008a90

	    		// Get the transit time
	    		case 3:
	    			minuteUnit = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) );
 8003e14:	4aeb      	ldr	r2, [pc, #940]	; (80041c4 <receiveDataFrame+0x6e0>)
 8003e16:	23dc      	movs	r3, #220	; 0xdc
 8003e18:	005b      	lsls	r3, r3, #1
 8003e1a:	58d3      	ldr	r3, [r2, r3]
 8003e1c:	b2db      	uxtb	r3, r3
 8003e1e:	3b30      	subs	r3, #48	; 0x30
 8003e20:	0018      	movs	r0, r3
 8003e22:	4ae8      	ldr	r2, [pc, #928]	; (80041c4 <receiveDataFrame+0x6e0>)
 8003e24:	23dc      	movs	r3, #220	; 0xdc
 8003e26:	005b      	lsls	r3, r3, #1
 8003e28:	58d3      	ldr	r3, [r2, r3]
 8003e2a:	0a1b      	lsrs	r3, r3, #8
 8003e2c:	b2db      	uxtb	r3, r3
 8003e2e:	3b30      	subs	r3, #48	; 0x30
 8003e30:	0019      	movs	r1, r3
 8003e32:	f7ff fe31 	bl	8003a98 <concat>
 8003e36:	0003      	movs	r3, r0
 8003e38:	60bb      	str	r3, [r7, #8]
	    			printf("The transit time minute unit is : %ld\r\n", minuteUnit);
 8003e3a:	68ba      	ldr	r2, [r7, #8]
 8003e3c:	4be2      	ldr	r3, [pc, #904]	; (80041c8 <receiveDataFrame+0x6e4>)
 8003e3e:	0011      	movs	r1, r2
 8003e40:	0018      	movs	r0, r3
 8003e42:	f001 ff75 	bl	8005d30 <iprintf>
	    			minuteTeens = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) );
 8003e46:	4adf      	ldr	r2, [pc, #892]	; (80041c4 <receiveDataFrame+0x6e0>)
 8003e48:	23dc      	movs	r3, #220	; 0xdc
 8003e4a:	005b      	lsls	r3, r3, #1
 8003e4c:	58d3      	ldr	r3, [r2, r3]
 8003e4e:	0e1b      	lsrs	r3, r3, #24
 8003e50:	b2db      	uxtb	r3, r3
 8003e52:	3b30      	subs	r3, #48	; 0x30
 8003e54:	0018      	movs	r0, r3
 8003e56:	4adb      	ldr	r2, [pc, #876]	; (80041c4 <receiveDataFrame+0x6e0>)
 8003e58:	23de      	movs	r3, #222	; 0xde
 8003e5a:	005b      	lsls	r3, r3, #1
 8003e5c:	58d3      	ldr	r3, [r2, r3]
 8003e5e:	b2db      	uxtb	r3, r3
 8003e60:	3b30      	subs	r3, #48	; 0x30
 8003e62:	0019      	movs	r1, r3
 8003e64:	f7ff fe18 	bl	8003a98 <concat>
 8003e68:	0003      	movs	r3, r0
 8003e6a:	607b      	str	r3, [r7, #4]
	    			printf("The transit time minute teens is : %ld\r\n", minuteTeens);
 8003e6c:	687a      	ldr	r2, [r7, #4]
 8003e6e:	4bd7      	ldr	r3, [pc, #860]	; (80041cc <receiveDataFrame+0x6e8>)
 8003e70:	0011      	movs	r1, r2
 8003e72:	0018      	movs	r0, r3
 8003e74:	f001 ff5c 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].transitTimeMinute = floorf( ( minuteUnit + (minuteTeens /100.f) ) * 100000 ) / 100000;
 8003e78:	68b8      	ldr	r0, [r7, #8]
 8003e7a:	f7fd f9cb 	bl	8001214 <__aeabi_ui2f>
 8003e7e:	1c04      	adds	r4, r0, #0
 8003e80:	6878      	ldr	r0, [r7, #4]
 8003e82:	f7fd f9c7 	bl	8001214 <__aeabi_ui2f>
 8003e86:	1c03      	adds	r3, r0, #0
 8003e88:	49d1      	ldr	r1, [pc, #836]	; (80041d0 <receiveDataFrame+0x6ec>)
 8003e8a:	1c18      	adds	r0, r3, #0
 8003e8c:	f7fc fcf4 	bl	8000878 <__aeabi_fdiv>
 8003e90:	1c03      	adds	r3, r0, #0
 8003e92:	1c19      	adds	r1, r3, #0
 8003e94:	1c20      	adds	r0, r4, #0
 8003e96:	f7fc fb55 	bl	8000544 <__aeabi_fadd>
 8003e9a:	1c03      	adds	r3, r0, #0
 8003e9c:	49cd      	ldr	r1, [pc, #820]	; (80041d4 <receiveDataFrame+0x6f0>)
 8003e9e:	1c18      	adds	r0, r3, #0
 8003ea0:	f7fc fec2 	bl	8000c28 <__aeabi_fmul>
 8003ea4:	1c03      	adds	r3, r0, #0
 8003ea6:	1c18      	adds	r0, r3, #0
 8003ea8:	f004 fbee 	bl	8008688 <floorf>
 8003eac:	1c02      	adds	r2, r0, #0
 8003eae:	4bca      	ldr	r3, [pc, #808]	; (80041d8 <receiveDataFrame+0x6f4>)
 8003eb0:	681c      	ldr	r4, [r3, #0]
 8003eb2:	49c8      	ldr	r1, [pc, #800]	; (80041d4 <receiveDataFrame+0x6f0>)
 8003eb4:	1c10      	adds	r0, r2, #0
 8003eb6:	f7fc fcdf 	bl	8000878 <__aeabi_fdiv>
 8003eba:	1c03      	adds	r3, r0, #0
 8003ebc:	1c19      	adds	r1, r3, #0
 8003ebe:	4ac7      	ldr	r2, [pc, #796]	; (80041dc <receiveDataFrame+0x6f8>)
 8003ec0:	2364      	movs	r3, #100	; 0x64
 8003ec2:	4363      	muls	r3, r4
 8003ec4:	18d3      	adds	r3, r2, r3
 8003ec6:	3318      	adds	r3, #24
 8003ec8:	6019      	str	r1, [r3, #0]
	    			printf("The total transit time minute is : %f\r\n", passes[passNumberToUpdate].transitTimeMinute);
 8003eca:	4bc3      	ldr	r3, [pc, #780]	; (80041d8 <receiveDataFrame+0x6f4>)
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	4ac3      	ldr	r2, [pc, #780]	; (80041dc <receiveDataFrame+0x6f8>)
 8003ed0:	2164      	movs	r1, #100	; 0x64
 8003ed2:	434b      	muls	r3, r1
 8003ed4:	18d3      	adds	r3, r2, r3
 8003ed6:	3318      	adds	r3, #24
 8003ed8:	681b      	ldr	r3, [r3, #0]
 8003eda:	1c18      	adds	r0, r3, #0
 8003edc:	f7fe ff78 	bl	8002dd0 <__aeabi_f2d>
 8003ee0:	0003      	movs	r3, r0
 8003ee2:	000c      	movs	r4, r1
 8003ee4:	49be      	ldr	r1, [pc, #760]	; (80041e0 <receiveDataFrame+0x6fc>)
 8003ee6:	001a      	movs	r2, r3
 8003ee8:	0023      	movs	r3, r4
 8003eea:	0008      	movs	r0, r1
 8003eec:	f001 ff20 	bl	8005d30 <iprintf>

	    			second = ( (float) (passes[passNumberToUpdate].transitTimeMinute) ) * 60.0 ;
 8003ef0:	4bb9      	ldr	r3, [pc, #740]	; (80041d8 <receiveDataFrame+0x6f4>)
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	4ab9      	ldr	r2, [pc, #740]	; (80041dc <receiveDataFrame+0x6f8>)
 8003ef6:	2164      	movs	r1, #100	; 0x64
 8003ef8:	434b      	muls	r3, r1
 8003efa:	18d3      	adds	r3, r2, r3
 8003efc:	3318      	adds	r3, #24
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	1c18      	adds	r0, r3, #0
 8003f02:	f7fe ff65 	bl	8002dd0 <__aeabi_f2d>
 8003f06:	2200      	movs	r2, #0
 8003f08:	4bb6      	ldr	r3, [pc, #728]	; (80041e4 <receiveDataFrame+0x700>)
 8003f0a:	f7fe f8e9 	bl	80020e0 <__aeabi_dmul>
 8003f0e:	0003      	movs	r3, r0
 8003f10:	000c      	movs	r4, r1
 8003f12:	0018      	movs	r0, r3
 8003f14:	0021      	movs	r1, r4
 8003f16:	f7fc faf7 	bl	8000508 <__aeabi_d2uiz>
 8003f1a:	0003      	movs	r3, r0
 8003f1c:	603b      	str	r3, [r7, #0]
	    			passes[passNumberToUpdate].transitTimeSecond = floorf( second * 100000 ) / 100000;
 8003f1e:	683b      	ldr	r3, [r7, #0]
 8003f20:	4ab1      	ldr	r2, [pc, #708]	; (80041e8 <receiveDataFrame+0x704>)
 8003f22:	4353      	muls	r3, r2
 8003f24:	0018      	movs	r0, r3
 8003f26:	f7fd f975 	bl	8001214 <__aeabi_ui2f>
 8003f2a:	1c02      	adds	r2, r0, #0
 8003f2c:	4baa      	ldr	r3, [pc, #680]	; (80041d8 <receiveDataFrame+0x6f4>)
 8003f2e:	681c      	ldr	r4, [r3, #0]
 8003f30:	49a8      	ldr	r1, [pc, #672]	; (80041d4 <receiveDataFrame+0x6f0>)
 8003f32:	1c10      	adds	r0, r2, #0
 8003f34:	f7fc fca0 	bl	8000878 <__aeabi_fdiv>
 8003f38:	1c03      	adds	r3, r0, #0
 8003f3a:	1c19      	adds	r1, r3, #0
 8003f3c:	4aa7      	ldr	r2, [pc, #668]	; (80041dc <receiveDataFrame+0x6f8>)
 8003f3e:	2364      	movs	r3, #100	; 0x64
 8003f40:	4363      	muls	r3, r4
 8003f42:	18d3      	adds	r3, r2, r3
 8003f44:	331c      	adds	r3, #28
 8003f46:	6019      	str	r1, [r3, #0]
	    			printf("The total transit time second is : %f\r\n", passes[passNumberToUpdate].transitTimeSecond);
 8003f48:	4ba3      	ldr	r3, [pc, #652]	; (80041d8 <receiveDataFrame+0x6f4>)
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	4aa3      	ldr	r2, [pc, #652]	; (80041dc <receiveDataFrame+0x6f8>)
 8003f4e:	2164      	movs	r1, #100	; 0x64
 8003f50:	434b      	muls	r3, r1
 8003f52:	18d3      	adds	r3, r2, r3
 8003f54:	331c      	adds	r3, #28
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	1c18      	adds	r0, r3, #0
 8003f5a:	f7fe ff39 	bl	8002dd0 <__aeabi_f2d>
 8003f5e:	0003      	movs	r3, r0
 8003f60:	000c      	movs	r4, r1
 8003f62:	49a2      	ldr	r1, [pc, #648]	; (80041ec <receiveDataFrame+0x708>)
 8003f64:	001a      	movs	r2, r3
 8003f66:	0023      	movs	r3, r4
 8003f68:	0008      	movs	r0, r1
 8003f6a:	f001 fee1 	bl	8005d30 <iprintf>
	    			break;
 8003f6e:	e3bc      	b.n	80046ea <receiveDataFrame+0xc06>

	    		// Get the start point AZ
	    		case 4:

	    			hundreds = concat ( concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA2 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA2_Pos) ) - '0' ) );
 8003f70:	4a94      	ldr	r2, [pc, #592]	; (80041c4 <receiveDataFrame+0x6e0>)
 8003f72:	23dc      	movs	r3, #220	; 0xdc
 8003f74:	005b      	lsls	r3, r3, #1
 8003f76:	58d3      	ldr	r3, [r2, r3]
 8003f78:	b2db      	uxtb	r3, r3
 8003f7a:	3b30      	subs	r3, #48	; 0x30
 8003f7c:	0018      	movs	r0, r3
 8003f7e:	4a91      	ldr	r2, [pc, #580]	; (80041c4 <receiveDataFrame+0x6e0>)
 8003f80:	23dc      	movs	r3, #220	; 0xdc
 8003f82:	005b      	lsls	r3, r3, #1
 8003f84:	58d3      	ldr	r3, [r2, r3]
 8003f86:	0a1b      	lsrs	r3, r3, #8
 8003f88:	b2db      	uxtb	r3, r3
 8003f8a:	3b30      	subs	r3, #48	; 0x30
 8003f8c:	0019      	movs	r1, r3
 8003f8e:	f7ff fd83 	bl	8003a98 <concat>
 8003f92:	4a8c      	ldr	r2, [pc, #560]	; (80041c4 <receiveDataFrame+0x6e0>)
 8003f94:	23dc      	movs	r3, #220	; 0xdc
 8003f96:	005b      	lsls	r3, r3, #1
 8003f98:	58d3      	ldr	r3, [r2, r3]
 8003f9a:	0c1b      	lsrs	r3, r3, #16
 8003f9c:	b2db      	uxtb	r3, r3
 8003f9e:	3b30      	subs	r3, #48	; 0x30
 8003fa0:	0019      	movs	r1, r3
 8003fa2:	f7ff fd79 	bl	8003a98 <concat>
 8003fa6:	0003      	movs	r3, r0
 8003fa8:	613b      	str	r3, [r7, #16]
	    			printf("The hundreds from the start point are : %ld\r\n", hundreds);
 8003faa:	693a      	ldr	r2, [r7, #16]
 8003fac:	4b90      	ldr	r3, [pc, #576]	; (80041f0 <receiveDataFrame+0x70c>)
 8003fae:	0011      	movs	r1, r2
 8003fb0:	0018      	movs	r0, r3
 8003fb2:	f001 febd 	bl	8005d30 <iprintf>
	    			milli = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA5 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA5_Pos) ) - '0' ) );
 8003fb6:	4a83      	ldr	r2, [pc, #524]	; (80041c4 <receiveDataFrame+0x6e0>)
 8003fb8:	23de      	movs	r3, #222	; 0xde
 8003fba:	005b      	lsls	r3, r3, #1
 8003fbc:	58d3      	ldr	r3, [r2, r3]
 8003fbe:	b2db      	uxtb	r3, r3
 8003fc0:	3b30      	subs	r3, #48	; 0x30
 8003fc2:	0018      	movs	r0, r3
 8003fc4:	4a7f      	ldr	r2, [pc, #508]	; (80041c4 <receiveDataFrame+0x6e0>)
 8003fc6:	23de      	movs	r3, #222	; 0xde
 8003fc8:	005b      	lsls	r3, r3, #1
 8003fca:	58d3      	ldr	r3, [r2, r3]
 8003fcc:	0a1b      	lsrs	r3, r3, #8
 8003fce:	b2db      	uxtb	r3, r3
 8003fd0:	3b30      	subs	r3, #48	; 0x30
 8003fd2:	0019      	movs	r1, r3
 8003fd4:	f7ff fd60 	bl	8003a98 <concat>
 8003fd8:	0003      	movs	r3, r0
 8003fda:	60fb      	str	r3, [r7, #12]
	    			printf("The milli from the start point are : %ld\r\n", milli);
 8003fdc:	68fa      	ldr	r2, [r7, #12]
 8003fde:	4b85      	ldr	r3, [pc, #532]	; (80041f4 <receiveDataFrame+0x710>)
 8003fe0:	0011      	movs	r1, r2
 8003fe2:	0018      	movs	r0, r3
 8003fe4:	f001 fea4 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].startPoint.azCoordinate = floorf( ( hundreds + (milli /100.f) ) * 100000 ) / 100000;
 8003fe8:	6938      	ldr	r0, [r7, #16]
 8003fea:	f7fd f913 	bl	8001214 <__aeabi_ui2f>
 8003fee:	1c04      	adds	r4, r0, #0
 8003ff0:	68f8      	ldr	r0, [r7, #12]
 8003ff2:	f7fd f90f 	bl	8001214 <__aeabi_ui2f>
 8003ff6:	1c03      	adds	r3, r0, #0
 8003ff8:	4975      	ldr	r1, [pc, #468]	; (80041d0 <receiveDataFrame+0x6ec>)
 8003ffa:	1c18      	adds	r0, r3, #0
 8003ffc:	f7fc fc3c 	bl	8000878 <__aeabi_fdiv>
 8004000:	1c03      	adds	r3, r0, #0
 8004002:	1c19      	adds	r1, r3, #0
 8004004:	1c20      	adds	r0, r4, #0
 8004006:	f7fc fa9d 	bl	8000544 <__aeabi_fadd>
 800400a:	1c03      	adds	r3, r0, #0
 800400c:	4971      	ldr	r1, [pc, #452]	; (80041d4 <receiveDataFrame+0x6f0>)
 800400e:	1c18      	adds	r0, r3, #0
 8004010:	f7fc fe0a 	bl	8000c28 <__aeabi_fmul>
 8004014:	1c03      	adds	r3, r0, #0
 8004016:	1c18      	adds	r0, r3, #0
 8004018:	f004 fb36 	bl	8008688 <floorf>
 800401c:	1c02      	adds	r2, r0, #0
 800401e:	4b6e      	ldr	r3, [pc, #440]	; (80041d8 <receiveDataFrame+0x6f4>)
 8004020:	681c      	ldr	r4, [r3, #0]
 8004022:	496c      	ldr	r1, [pc, #432]	; (80041d4 <receiveDataFrame+0x6f0>)
 8004024:	1c10      	adds	r0, r2, #0
 8004026:	f7fc fc27 	bl	8000878 <__aeabi_fdiv>
 800402a:	1c03      	adds	r3, r0, #0
 800402c:	1c19      	adds	r1, r3, #0
 800402e:	4a6b      	ldr	r2, [pc, #428]	; (80041dc <receiveDataFrame+0x6f8>)
 8004030:	2364      	movs	r3, #100	; 0x64
 8004032:	4363      	muls	r3, r4
 8004034:	18d3      	adds	r3, r2, r3
 8004036:	3320      	adds	r3, #32
 8004038:	6019      	str	r1, [r3, #0]
	    			printf("The startPoint.azCoordinate is : %f\r\n", passes[passNumberToUpdate].startPoint.azCoordinate);
 800403a:	4b67      	ldr	r3, [pc, #412]	; (80041d8 <receiveDataFrame+0x6f4>)
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	4a67      	ldr	r2, [pc, #412]	; (80041dc <receiveDataFrame+0x6f8>)
 8004040:	2164      	movs	r1, #100	; 0x64
 8004042:	434b      	muls	r3, r1
 8004044:	18d3      	adds	r3, r2, r3
 8004046:	3320      	adds	r3, #32
 8004048:	681b      	ldr	r3, [r3, #0]
 800404a:	1c18      	adds	r0, r3, #0
 800404c:	f7fe fec0 	bl	8002dd0 <__aeabi_f2d>
 8004050:	0003      	movs	r3, r0
 8004052:	000c      	movs	r4, r1
 8004054:	4968      	ldr	r1, [pc, #416]	; (80041f8 <receiveDataFrame+0x714>)
 8004056:	001a      	movs	r2, r3
 8004058:	0023      	movs	r3, r4
 800405a:	0008      	movs	r0, r1
 800405c:	f001 fe68 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].startPoint.elCoordinate = floorf( 0 * 100000 ) / 100000;
 8004060:	4b5d      	ldr	r3, [pc, #372]	; (80041d8 <receiveDataFrame+0x6f4>)
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	4a5d      	ldr	r2, [pc, #372]	; (80041dc <receiveDataFrame+0x6f8>)
 8004066:	2164      	movs	r1, #100	; 0x64
 8004068:	434b      	muls	r3, r1
 800406a:	18d3      	adds	r3, r2, r3
 800406c:	3324      	adds	r3, #36	; 0x24
 800406e:	2200      	movs	r2, #0
 8004070:	601a      	str	r2, [r3, #0]
	    			printf("The startPoint.elCoordinate is : %f\r\n", passes[passNumberToUpdate].startPoint.elCoordinate);
 8004072:	4b59      	ldr	r3, [pc, #356]	; (80041d8 <receiveDataFrame+0x6f4>)
 8004074:	681b      	ldr	r3, [r3, #0]
 8004076:	4a59      	ldr	r2, [pc, #356]	; (80041dc <receiveDataFrame+0x6f8>)
 8004078:	2164      	movs	r1, #100	; 0x64
 800407a:	434b      	muls	r3, r1
 800407c:	18d3      	adds	r3, r2, r3
 800407e:	3324      	adds	r3, #36	; 0x24
 8004080:	681b      	ldr	r3, [r3, #0]
 8004082:	1c18      	adds	r0, r3, #0
 8004084:	f7fe fea4 	bl	8002dd0 <__aeabi_f2d>
 8004088:	0003      	movs	r3, r0
 800408a:	000c      	movs	r4, r1
 800408c:	495b      	ldr	r1, [pc, #364]	; (80041fc <receiveDataFrame+0x718>)
 800408e:	001a      	movs	r2, r3
 8004090:	0023      	movs	r3, r4
 8004092:	0008      	movs	r0, r1
 8004094:	f001 fe4c 	bl	8005d30 <iprintf>
	    			break;
 8004098:	e327      	b.n	80046ea <receiveDataFrame+0xc06>

	    		// Get the end point AZ
	    		case 5:

	    			hundreds = concat ( concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA2 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA2_Pos) ) - '0' ) );
 800409a:	4a4a      	ldr	r2, [pc, #296]	; (80041c4 <receiveDataFrame+0x6e0>)
 800409c:	23dc      	movs	r3, #220	; 0xdc
 800409e:	005b      	lsls	r3, r3, #1
 80040a0:	58d3      	ldr	r3, [r2, r3]
 80040a2:	b2db      	uxtb	r3, r3
 80040a4:	3b30      	subs	r3, #48	; 0x30
 80040a6:	0018      	movs	r0, r3
 80040a8:	4a46      	ldr	r2, [pc, #280]	; (80041c4 <receiveDataFrame+0x6e0>)
 80040aa:	23dc      	movs	r3, #220	; 0xdc
 80040ac:	005b      	lsls	r3, r3, #1
 80040ae:	58d3      	ldr	r3, [r2, r3]
 80040b0:	0a1b      	lsrs	r3, r3, #8
 80040b2:	b2db      	uxtb	r3, r3
 80040b4:	3b30      	subs	r3, #48	; 0x30
 80040b6:	0019      	movs	r1, r3
 80040b8:	f7ff fcee 	bl	8003a98 <concat>
 80040bc:	4a41      	ldr	r2, [pc, #260]	; (80041c4 <receiveDataFrame+0x6e0>)
 80040be:	23dc      	movs	r3, #220	; 0xdc
 80040c0:	005b      	lsls	r3, r3, #1
 80040c2:	58d3      	ldr	r3, [r2, r3]
 80040c4:	0c1b      	lsrs	r3, r3, #16
 80040c6:	b2db      	uxtb	r3, r3
 80040c8:	3b30      	subs	r3, #48	; 0x30
 80040ca:	0019      	movs	r1, r3
 80040cc:	f7ff fce4 	bl	8003a98 <concat>
 80040d0:	0003      	movs	r3, r0
 80040d2:	613b      	str	r3, [r7, #16]
	    			printf("The hundreds from the end point are : %ld\r\n", hundreds);
 80040d4:	693a      	ldr	r2, [r7, #16]
 80040d6:	4b4a      	ldr	r3, [pc, #296]	; (8004200 <receiveDataFrame+0x71c>)
 80040d8:	0011      	movs	r1, r2
 80040da:	0018      	movs	r0, r3
 80040dc:	f001 fe28 	bl	8005d30 <iprintf>
	    			milli = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA5 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA5_Pos) ) - '0' ) );
 80040e0:	4a38      	ldr	r2, [pc, #224]	; (80041c4 <receiveDataFrame+0x6e0>)
 80040e2:	23de      	movs	r3, #222	; 0xde
 80040e4:	005b      	lsls	r3, r3, #1
 80040e6:	58d3      	ldr	r3, [r2, r3]
 80040e8:	b2db      	uxtb	r3, r3
 80040ea:	3b30      	subs	r3, #48	; 0x30
 80040ec:	0018      	movs	r0, r3
 80040ee:	4a35      	ldr	r2, [pc, #212]	; (80041c4 <receiveDataFrame+0x6e0>)
 80040f0:	23de      	movs	r3, #222	; 0xde
 80040f2:	005b      	lsls	r3, r3, #1
 80040f4:	58d3      	ldr	r3, [r2, r3]
 80040f6:	0a1b      	lsrs	r3, r3, #8
 80040f8:	b2db      	uxtb	r3, r3
 80040fa:	3b30      	subs	r3, #48	; 0x30
 80040fc:	0019      	movs	r1, r3
 80040fe:	f7ff fccb 	bl	8003a98 <concat>
 8004102:	0003      	movs	r3, r0
 8004104:	60fb      	str	r3, [r7, #12]
	    			printf("The milli from the end point are : %ld\r\n", milli);
 8004106:	68fa      	ldr	r2, [r7, #12]
 8004108:	4b3e      	ldr	r3, [pc, #248]	; (8004204 <receiveDataFrame+0x720>)
 800410a:	0011      	movs	r1, r2
 800410c:	0018      	movs	r0, r3
 800410e:	f001 fe0f 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].endPoint.azCoordinate = floorf( ( hundreds + (milli /100.f) ) * 100000 ) / 100000;
 8004112:	6938      	ldr	r0, [r7, #16]
 8004114:	f7fd f87e 	bl	8001214 <__aeabi_ui2f>
 8004118:	1c04      	adds	r4, r0, #0
 800411a:	68f8      	ldr	r0, [r7, #12]
 800411c:	f7fd f87a 	bl	8001214 <__aeabi_ui2f>
 8004120:	1c03      	adds	r3, r0, #0
 8004122:	492b      	ldr	r1, [pc, #172]	; (80041d0 <receiveDataFrame+0x6ec>)
 8004124:	1c18      	adds	r0, r3, #0
 8004126:	f7fc fba7 	bl	8000878 <__aeabi_fdiv>
 800412a:	1c03      	adds	r3, r0, #0
 800412c:	1c19      	adds	r1, r3, #0
 800412e:	1c20      	adds	r0, r4, #0
 8004130:	f7fc fa08 	bl	8000544 <__aeabi_fadd>
 8004134:	1c03      	adds	r3, r0, #0
 8004136:	4927      	ldr	r1, [pc, #156]	; (80041d4 <receiveDataFrame+0x6f0>)
 8004138:	1c18      	adds	r0, r3, #0
 800413a:	f7fc fd75 	bl	8000c28 <__aeabi_fmul>
 800413e:	1c03      	adds	r3, r0, #0
 8004140:	1c18      	adds	r0, r3, #0
 8004142:	f004 faa1 	bl	8008688 <floorf>
 8004146:	1c02      	adds	r2, r0, #0
 8004148:	4b23      	ldr	r3, [pc, #140]	; (80041d8 <receiveDataFrame+0x6f4>)
 800414a:	681c      	ldr	r4, [r3, #0]
 800414c:	4921      	ldr	r1, [pc, #132]	; (80041d4 <receiveDataFrame+0x6f0>)
 800414e:	1c10      	adds	r0, r2, #0
 8004150:	f7fc fb92 	bl	8000878 <__aeabi_fdiv>
 8004154:	1c03      	adds	r3, r0, #0
 8004156:	1c19      	adds	r1, r3, #0
 8004158:	4a20      	ldr	r2, [pc, #128]	; (80041dc <receiveDataFrame+0x6f8>)
 800415a:	2364      	movs	r3, #100	; 0x64
 800415c:	4363      	muls	r3, r4
 800415e:	18d3      	adds	r3, r2, r3
 8004160:	3328      	adds	r3, #40	; 0x28
 8004162:	6019      	str	r1, [r3, #0]
	    			printf("The endPoint.azCoordinate is : %f\n", passes[passNumberToUpdate].endPoint.azCoordinate);
 8004164:	4b1c      	ldr	r3, [pc, #112]	; (80041d8 <receiveDataFrame+0x6f4>)
 8004166:	681b      	ldr	r3, [r3, #0]
 8004168:	4a1c      	ldr	r2, [pc, #112]	; (80041dc <receiveDataFrame+0x6f8>)
 800416a:	2164      	movs	r1, #100	; 0x64
 800416c:	434b      	muls	r3, r1
 800416e:	18d3      	adds	r3, r2, r3
 8004170:	3328      	adds	r3, #40	; 0x28
 8004172:	681b      	ldr	r3, [r3, #0]
 8004174:	1c18      	adds	r0, r3, #0
 8004176:	f7fe fe2b 	bl	8002dd0 <__aeabi_f2d>
 800417a:	0003      	movs	r3, r0
 800417c:	000c      	movs	r4, r1
 800417e:	4922      	ldr	r1, [pc, #136]	; (8004208 <receiveDataFrame+0x724>)
 8004180:	001a      	movs	r2, r3
 8004182:	0023      	movs	r3, r4
 8004184:	0008      	movs	r0, r1
 8004186:	f001 fdd3 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].endPoint.elCoordinate = floorf( 0 * 100000 ) / 100000;
 800418a:	4b13      	ldr	r3, [pc, #76]	; (80041d8 <receiveDataFrame+0x6f4>)
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	4a13      	ldr	r2, [pc, #76]	; (80041dc <receiveDataFrame+0x6f8>)
 8004190:	2164      	movs	r1, #100	; 0x64
 8004192:	434b      	muls	r3, r1
 8004194:	18d3      	adds	r3, r2, r3
 8004196:	332c      	adds	r3, #44	; 0x2c
 8004198:	2200      	movs	r2, #0
 800419a:	601a      	str	r2, [r3, #0]
	    			printf("The endPoint.elCoordinate is : %f\n", passes[passNumberToUpdate].endPoint.elCoordinate);
 800419c:	4b0e      	ldr	r3, [pc, #56]	; (80041d8 <receiveDataFrame+0x6f4>)
 800419e:	681b      	ldr	r3, [r3, #0]
 80041a0:	4a0e      	ldr	r2, [pc, #56]	; (80041dc <receiveDataFrame+0x6f8>)
 80041a2:	2164      	movs	r1, #100	; 0x64
 80041a4:	434b      	muls	r3, r1
 80041a6:	18d3      	adds	r3, r2, r3
 80041a8:	332c      	adds	r3, #44	; 0x2c
 80041aa:	681b      	ldr	r3, [r3, #0]
 80041ac:	1c18      	adds	r0, r3, #0
 80041ae:	f7fe fe0f 	bl	8002dd0 <__aeabi_f2d>
 80041b2:	0003      	movs	r3, r0
 80041b4:	000c      	movs	r4, r1
 80041b6:	4915      	ldr	r1, [pc, #84]	; (800420c <receiveDataFrame+0x728>)
 80041b8:	001a      	movs	r2, r3
 80041ba:	0023      	movs	r3, r4
 80041bc:	0008      	movs	r0, r1
 80041be:	f001 fdb7 	bl	8005d30 <iprintf>
	    			break;
 80041c2:	e292      	b.n	80046ea <receiveDataFrame+0xc06>
 80041c4:	40006400 	.word	0x40006400
 80041c8:	08008ab0 	.word	0x08008ab0
 80041cc:	08008ad8 	.word	0x08008ad8
 80041d0:	42c80000 	.word	0x42c80000
 80041d4:	47c35000 	.word	0x47c35000
 80041d8:	20000218 	.word	0x20000218
 80041dc:	2000021c 	.word	0x2000021c
 80041e0:	08008b04 	.word	0x08008b04
 80041e4:	404e0000 	.word	0x404e0000
 80041e8:	000186a0 	.word	0x000186a0
 80041ec:	08008b2c 	.word	0x08008b2c
 80041f0:	08008b54 	.word	0x08008b54
 80041f4:	08008b84 	.word	0x08008b84
 80041f8:	08008bb0 	.word	0x08008bb0
 80041fc:	08008bd8 	.word	0x08008bd8
 8004200:	08008c00 	.word	0x08008c00
 8004204:	08008c2c 	.word	0x08008c2c
 8004208:	08008c58 	.word	0x08008c58
 800420c:	08008c7c 	.word	0x08008c7c

	    		// Get the middle point EL
	    		case 6:

	    			hundreds = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) );
 8004210:	4afe      	ldr	r2, [pc, #1016]	; (800460c <receiveDataFrame+0xb28>)
 8004212:	23dc      	movs	r3, #220	; 0xdc
 8004214:	005b      	lsls	r3, r3, #1
 8004216:	58d3      	ldr	r3, [r2, r3]
 8004218:	b2db      	uxtb	r3, r3
 800421a:	3b30      	subs	r3, #48	; 0x30
 800421c:	0018      	movs	r0, r3
 800421e:	4afb      	ldr	r2, [pc, #1004]	; (800460c <receiveDataFrame+0xb28>)
 8004220:	23dc      	movs	r3, #220	; 0xdc
 8004222:	005b      	lsls	r3, r3, #1
 8004224:	58d3      	ldr	r3, [r2, r3]
 8004226:	0a1b      	lsrs	r3, r3, #8
 8004228:	b2db      	uxtb	r3, r3
 800422a:	3b30      	subs	r3, #48	; 0x30
 800422c:	0019      	movs	r1, r3
 800422e:	f7ff fc33 	bl	8003a98 <concat>
 8004232:	0003      	movs	r3, r0
 8004234:	613b      	str	r3, [r7, #16]
	    			printf("The hundreds from the peak point are : %ld\r\n", hundreds);
 8004236:	693a      	ldr	r2, [r7, #16]
 8004238:	4bf5      	ldr	r3, [pc, #980]	; (8004610 <receiveDataFrame+0xb2c>)
 800423a:	0011      	movs	r1, r2
 800423c:	0018      	movs	r0, r3
 800423e:	f001 fd77 	bl	8005d30 <iprintf>
	    			milli  = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) );
 8004242:	4af2      	ldr	r2, [pc, #968]	; (800460c <receiveDataFrame+0xb28>)
 8004244:	23dc      	movs	r3, #220	; 0xdc
 8004246:	005b      	lsls	r3, r3, #1
 8004248:	58d3      	ldr	r3, [r2, r3]
 800424a:	0e1b      	lsrs	r3, r3, #24
 800424c:	b2db      	uxtb	r3, r3
 800424e:	3b30      	subs	r3, #48	; 0x30
 8004250:	0018      	movs	r0, r3
 8004252:	4aee      	ldr	r2, [pc, #952]	; (800460c <receiveDataFrame+0xb28>)
 8004254:	23de      	movs	r3, #222	; 0xde
 8004256:	005b      	lsls	r3, r3, #1
 8004258:	58d3      	ldr	r3, [r2, r3]
 800425a:	b2db      	uxtb	r3, r3
 800425c:	3b30      	subs	r3, #48	; 0x30
 800425e:	0019      	movs	r1, r3
 8004260:	f7ff fc1a 	bl	8003a98 <concat>
 8004264:	0003      	movs	r3, r0
 8004266:	60fb      	str	r3, [r7, #12]
	    			printf("The milli from the peak point are : %ld\r\n", milli);
 8004268:	68fa      	ldr	r2, [r7, #12]
 800426a:	4bea      	ldr	r3, [pc, #936]	; (8004614 <receiveDataFrame+0xb30>)
 800426c:	0011      	movs	r1, r2
 800426e:	0018      	movs	r0, r3
 8004270:	f001 fd5e 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].peakPoint.azCoordinate = floorf( fabsf( ( (passes[passNumberToUpdate].endPoint.azCoordinate) + (passes[passNumberToUpdate].startPoint.azCoordinate) ) / 2.0 ) * 100000 ) / 100000;
 8004274:	4be8      	ldr	r3, [pc, #928]	; (8004618 <receiveDataFrame+0xb34>)
 8004276:	681b      	ldr	r3, [r3, #0]
 8004278:	4ae8      	ldr	r2, [pc, #928]	; (800461c <receiveDataFrame+0xb38>)
 800427a:	2164      	movs	r1, #100	; 0x64
 800427c:	434b      	muls	r3, r1
 800427e:	18d3      	adds	r3, r2, r3
 8004280:	3328      	adds	r3, #40	; 0x28
 8004282:	6818      	ldr	r0, [r3, #0]
 8004284:	4be4      	ldr	r3, [pc, #912]	; (8004618 <receiveDataFrame+0xb34>)
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	4ae4      	ldr	r2, [pc, #912]	; (800461c <receiveDataFrame+0xb38>)
 800428a:	2164      	movs	r1, #100	; 0x64
 800428c:	434b      	muls	r3, r1
 800428e:	18d3      	adds	r3, r2, r3
 8004290:	3320      	adds	r3, #32
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	1c19      	adds	r1, r3, #0
 8004296:	f7fc f955 	bl	8000544 <__aeabi_fadd>
 800429a:	1c03      	adds	r3, r0, #0
 800429c:	2180      	movs	r1, #128	; 0x80
 800429e:	05c9      	lsls	r1, r1, #23
 80042a0:	1c18      	adds	r0, r3, #0
 80042a2:	f7fc fae9 	bl	8000878 <__aeabi_fdiv>
 80042a6:	1c03      	adds	r3, r0, #0
 80042a8:	005b      	lsls	r3, r3, #1
 80042aa:	085b      	lsrs	r3, r3, #1
 80042ac:	49dc      	ldr	r1, [pc, #880]	; (8004620 <receiveDataFrame+0xb3c>)
 80042ae:	1c18      	adds	r0, r3, #0
 80042b0:	f7fc fcba 	bl	8000c28 <__aeabi_fmul>
 80042b4:	1c03      	adds	r3, r0, #0
 80042b6:	1c18      	adds	r0, r3, #0
 80042b8:	f004 f9e6 	bl	8008688 <floorf>
 80042bc:	1c02      	adds	r2, r0, #0
 80042be:	4bd6      	ldr	r3, [pc, #856]	; (8004618 <receiveDataFrame+0xb34>)
 80042c0:	681c      	ldr	r4, [r3, #0]
 80042c2:	49d7      	ldr	r1, [pc, #860]	; (8004620 <receiveDataFrame+0xb3c>)
 80042c4:	1c10      	adds	r0, r2, #0
 80042c6:	f7fc fad7 	bl	8000878 <__aeabi_fdiv>
 80042ca:	1c03      	adds	r3, r0, #0
 80042cc:	1c19      	adds	r1, r3, #0
 80042ce:	4ad3      	ldr	r2, [pc, #844]	; (800461c <receiveDataFrame+0xb38>)
 80042d0:	2364      	movs	r3, #100	; 0x64
 80042d2:	4363      	muls	r3, r4
 80042d4:	18d3      	adds	r3, r2, r3
 80042d6:	3330      	adds	r3, #48	; 0x30
 80042d8:	6019      	str	r1, [r3, #0]
	    			printf("The peakPoint.azCoordinate is : %f\r\n", passes[passNumberToUpdate].peakPoint.azCoordinate);
 80042da:	4bcf      	ldr	r3, [pc, #828]	; (8004618 <receiveDataFrame+0xb34>)
 80042dc:	681b      	ldr	r3, [r3, #0]
 80042de:	4acf      	ldr	r2, [pc, #828]	; (800461c <receiveDataFrame+0xb38>)
 80042e0:	2164      	movs	r1, #100	; 0x64
 80042e2:	434b      	muls	r3, r1
 80042e4:	18d3      	adds	r3, r2, r3
 80042e6:	3330      	adds	r3, #48	; 0x30
 80042e8:	681b      	ldr	r3, [r3, #0]
 80042ea:	1c18      	adds	r0, r3, #0
 80042ec:	f7fe fd70 	bl	8002dd0 <__aeabi_f2d>
 80042f0:	0003      	movs	r3, r0
 80042f2:	000c      	movs	r4, r1
 80042f4:	49cb      	ldr	r1, [pc, #812]	; (8004624 <receiveDataFrame+0xb40>)
 80042f6:	001a      	movs	r2, r3
 80042f8:	0023      	movs	r3, r4
 80042fa:	0008      	movs	r0, r1
 80042fc:	f001 fd18 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].peakPoint.elCoordinate = floorf( ( hundreds + (milli /100.f) ) * 100000 ) / 100000;
 8004300:	6938      	ldr	r0, [r7, #16]
 8004302:	f7fc ff87 	bl	8001214 <__aeabi_ui2f>
 8004306:	1c04      	adds	r4, r0, #0
 8004308:	68f8      	ldr	r0, [r7, #12]
 800430a:	f7fc ff83 	bl	8001214 <__aeabi_ui2f>
 800430e:	1c03      	adds	r3, r0, #0
 8004310:	49c5      	ldr	r1, [pc, #788]	; (8004628 <receiveDataFrame+0xb44>)
 8004312:	1c18      	adds	r0, r3, #0
 8004314:	f7fc fab0 	bl	8000878 <__aeabi_fdiv>
 8004318:	1c03      	adds	r3, r0, #0
 800431a:	1c19      	adds	r1, r3, #0
 800431c:	1c20      	adds	r0, r4, #0
 800431e:	f7fc f911 	bl	8000544 <__aeabi_fadd>
 8004322:	1c03      	adds	r3, r0, #0
 8004324:	49be      	ldr	r1, [pc, #760]	; (8004620 <receiveDataFrame+0xb3c>)
 8004326:	1c18      	adds	r0, r3, #0
 8004328:	f7fc fc7e 	bl	8000c28 <__aeabi_fmul>
 800432c:	1c03      	adds	r3, r0, #0
 800432e:	1c18      	adds	r0, r3, #0
 8004330:	f004 f9aa 	bl	8008688 <floorf>
 8004334:	1c02      	adds	r2, r0, #0
 8004336:	4bb8      	ldr	r3, [pc, #736]	; (8004618 <receiveDataFrame+0xb34>)
 8004338:	681c      	ldr	r4, [r3, #0]
 800433a:	49b9      	ldr	r1, [pc, #740]	; (8004620 <receiveDataFrame+0xb3c>)
 800433c:	1c10      	adds	r0, r2, #0
 800433e:	f7fc fa9b 	bl	8000878 <__aeabi_fdiv>
 8004342:	1c03      	adds	r3, r0, #0
 8004344:	1c19      	adds	r1, r3, #0
 8004346:	4ab5      	ldr	r2, [pc, #724]	; (800461c <receiveDataFrame+0xb38>)
 8004348:	2364      	movs	r3, #100	; 0x64
 800434a:	4363      	muls	r3, r4
 800434c:	18d3      	adds	r3, r2, r3
 800434e:	3334      	adds	r3, #52	; 0x34
 8004350:	6019      	str	r1, [r3, #0]
	    			printf("The peakPoint.elCoordinate is : %f\r\n", passes[passNumberToUpdate].peakPoint.elCoordinate);
 8004352:	4bb1      	ldr	r3, [pc, #708]	; (8004618 <receiveDataFrame+0xb34>)
 8004354:	681b      	ldr	r3, [r3, #0]
 8004356:	4ab1      	ldr	r2, [pc, #708]	; (800461c <receiveDataFrame+0xb38>)
 8004358:	2164      	movs	r1, #100	; 0x64
 800435a:	434b      	muls	r3, r1
 800435c:	18d3      	adds	r3, r2, r3
 800435e:	3334      	adds	r3, #52	; 0x34
 8004360:	681b      	ldr	r3, [r3, #0]
 8004362:	1c18      	adds	r0, r3, #0
 8004364:	f7fe fd34 	bl	8002dd0 <__aeabi_f2d>
 8004368:	0003      	movs	r3, r0
 800436a:	000c      	movs	r4, r1
 800436c:	49af      	ldr	r1, [pc, #700]	; (800462c <receiveDataFrame+0xb48>)
 800436e:	001a      	movs	r2, r3
 8004370:	0023      	movs	r3, r4
 8004372:	0008      	movs	r0, r1
 8004374:	f001 fcdc 	bl	8005d30 <iprintf>

	    			// Initialize the average speed for the pass in AZ and in EL
	    			passes[passNumberToUpdate].averageSpeedAz = floorf( ( fabsf( (passes[passNumberToUpdate].endPoint.azCoordinate - passes[passNumberToUpdate].startPoint.azCoordinate) ) / ( (float) (passes[passNumberToUpdate].transitTimeMinute) ) ) * 100000 ) / 100000;
 8004378:	4ba7      	ldr	r3, [pc, #668]	; (8004618 <receiveDataFrame+0xb34>)
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	4aa7      	ldr	r2, [pc, #668]	; (800461c <receiveDataFrame+0xb38>)
 800437e:	2164      	movs	r1, #100	; 0x64
 8004380:	434b      	muls	r3, r1
 8004382:	18d3      	adds	r3, r2, r3
 8004384:	3328      	adds	r3, #40	; 0x28
 8004386:	6818      	ldr	r0, [r3, #0]
 8004388:	4ba3      	ldr	r3, [pc, #652]	; (8004618 <receiveDataFrame+0xb34>)
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	4aa3      	ldr	r2, [pc, #652]	; (800461c <receiveDataFrame+0xb38>)
 800438e:	2164      	movs	r1, #100	; 0x64
 8004390:	434b      	muls	r3, r1
 8004392:	18d3      	adds	r3, r2, r3
 8004394:	3320      	adds	r3, #32
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	1c19      	adds	r1, r3, #0
 800439a:	f7fc fd77 	bl	8000e8c <__aeabi_fsub>
 800439e:	1c03      	adds	r3, r0, #0
 80043a0:	005b      	lsls	r3, r3, #1
 80043a2:	0858      	lsrs	r0, r3, #1
 80043a4:	4b9c      	ldr	r3, [pc, #624]	; (8004618 <receiveDataFrame+0xb34>)
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	4a9c      	ldr	r2, [pc, #624]	; (800461c <receiveDataFrame+0xb38>)
 80043aa:	2164      	movs	r1, #100	; 0x64
 80043ac:	434b      	muls	r3, r1
 80043ae:	18d3      	adds	r3, r2, r3
 80043b0:	3318      	adds	r3, #24
 80043b2:	681b      	ldr	r3, [r3, #0]
 80043b4:	1c19      	adds	r1, r3, #0
 80043b6:	f7fc fa5f 	bl	8000878 <__aeabi_fdiv>
 80043ba:	1c03      	adds	r3, r0, #0
 80043bc:	4998      	ldr	r1, [pc, #608]	; (8004620 <receiveDataFrame+0xb3c>)
 80043be:	1c18      	adds	r0, r3, #0
 80043c0:	f7fc fc32 	bl	8000c28 <__aeabi_fmul>
 80043c4:	1c03      	adds	r3, r0, #0
 80043c6:	1c18      	adds	r0, r3, #0
 80043c8:	f004 f95e 	bl	8008688 <floorf>
 80043cc:	1c02      	adds	r2, r0, #0
 80043ce:	4b92      	ldr	r3, [pc, #584]	; (8004618 <receiveDataFrame+0xb34>)
 80043d0:	681c      	ldr	r4, [r3, #0]
 80043d2:	4993      	ldr	r1, [pc, #588]	; (8004620 <receiveDataFrame+0xb3c>)
 80043d4:	1c10      	adds	r0, r2, #0
 80043d6:	f7fc fa4f 	bl	8000878 <__aeabi_fdiv>
 80043da:	1c03      	adds	r3, r0, #0
 80043dc:	1c19      	adds	r1, r3, #0
 80043de:	4a8f      	ldr	r2, [pc, #572]	; (800461c <receiveDataFrame+0xb38>)
 80043e0:	2364      	movs	r3, #100	; 0x64
 80043e2:	4363      	muls	r3, r4
 80043e4:	18d3      	adds	r3, r2, r3
 80043e6:	3338      	adds	r3, #56	; 0x38
 80043e8:	6019      	str	r1, [r3, #0]
	    			printf("The pass.averageSpeedAz is : %f\r\n", passes[passNumberToUpdate].averageSpeedAz);
 80043ea:	4b8b      	ldr	r3, [pc, #556]	; (8004618 <receiveDataFrame+0xb34>)
 80043ec:	681b      	ldr	r3, [r3, #0]
 80043ee:	4a8b      	ldr	r2, [pc, #556]	; (800461c <receiveDataFrame+0xb38>)
 80043f0:	2164      	movs	r1, #100	; 0x64
 80043f2:	434b      	muls	r3, r1
 80043f4:	18d3      	adds	r3, r2, r3
 80043f6:	3338      	adds	r3, #56	; 0x38
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	1c18      	adds	r0, r3, #0
 80043fc:	f7fe fce8 	bl	8002dd0 <__aeabi_f2d>
 8004400:	0003      	movs	r3, r0
 8004402:	000c      	movs	r4, r1
 8004404:	498a      	ldr	r1, [pc, #552]	; (8004630 <receiveDataFrame+0xb4c>)
 8004406:	001a      	movs	r2, r3
 8004408:	0023      	movs	r3, r4
 800440a:	0008      	movs	r0, r1
 800440c:	f001 fc90 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].averageSpeedEl = floorf( ( (passes[passNumberToUpdate].peakPoint.elCoordinate * 2.0) / ( (float) (passes[passNumberToUpdate].transitTimeMinute) ) ) * 100000 ) / 100000;
 8004410:	4b81      	ldr	r3, [pc, #516]	; (8004618 <receiveDataFrame+0xb34>)
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	4a81      	ldr	r2, [pc, #516]	; (800461c <receiveDataFrame+0xb38>)
 8004416:	2164      	movs	r1, #100	; 0x64
 8004418:	434b      	muls	r3, r1
 800441a:	18d3      	adds	r3, r2, r3
 800441c:	3334      	adds	r3, #52	; 0x34
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	1c18      	adds	r0, r3, #0
 8004422:	f7fe fcd5 	bl	8002dd0 <__aeabi_f2d>
 8004426:	0002      	movs	r2, r0
 8004428:	000b      	movs	r3, r1
 800442a:	f7fc ff33 	bl	8001294 <__aeabi_dadd>
 800442e:	0003      	movs	r3, r0
 8004430:	000c      	movs	r4, r1
 8004432:	0025      	movs	r5, r4
 8004434:	001c      	movs	r4, r3
 8004436:	4b78      	ldr	r3, [pc, #480]	; (8004618 <receiveDataFrame+0xb34>)
 8004438:	681b      	ldr	r3, [r3, #0]
 800443a:	4a78      	ldr	r2, [pc, #480]	; (800461c <receiveDataFrame+0xb38>)
 800443c:	2164      	movs	r1, #100	; 0x64
 800443e:	434b      	muls	r3, r1
 8004440:	18d3      	adds	r3, r2, r3
 8004442:	3318      	adds	r3, #24
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	1c18      	adds	r0, r3, #0
 8004448:	f7fe fcc2 	bl	8002dd0 <__aeabi_f2d>
 800444c:	0002      	movs	r2, r0
 800444e:	000b      	movs	r3, r1
 8004450:	0020      	movs	r0, r4
 8004452:	0029      	movs	r1, r5
 8004454:	f7fd fa3a 	bl	80018cc <__aeabi_ddiv>
 8004458:	0003      	movs	r3, r0
 800445a:	000c      	movs	r4, r1
 800445c:	0018      	movs	r0, r3
 800445e:	0021      	movs	r1, r4
 8004460:	2200      	movs	r2, #0
 8004462:	4b74      	ldr	r3, [pc, #464]	; (8004634 <receiveDataFrame+0xb50>)
 8004464:	f7fd fe3c 	bl	80020e0 <__aeabi_dmul>
 8004468:	0003      	movs	r3, r0
 800446a:	000c      	movs	r4, r1
 800446c:	0018      	movs	r0, r3
 800446e:	0021      	movs	r1, r4
 8004470:	f7fe fd00 	bl	8002e74 <__aeabi_d2f>
 8004474:	1c03      	adds	r3, r0, #0
 8004476:	1c18      	adds	r0, r3, #0
 8004478:	f004 f906 	bl	8008688 <floorf>
 800447c:	1c02      	adds	r2, r0, #0
 800447e:	4b66      	ldr	r3, [pc, #408]	; (8004618 <receiveDataFrame+0xb34>)
 8004480:	681c      	ldr	r4, [r3, #0]
 8004482:	4967      	ldr	r1, [pc, #412]	; (8004620 <receiveDataFrame+0xb3c>)
 8004484:	1c10      	adds	r0, r2, #0
 8004486:	f7fc f9f7 	bl	8000878 <__aeabi_fdiv>
 800448a:	1c03      	adds	r3, r0, #0
 800448c:	1c19      	adds	r1, r3, #0
 800448e:	4a63      	ldr	r2, [pc, #396]	; (800461c <receiveDataFrame+0xb38>)
 8004490:	2364      	movs	r3, #100	; 0x64
 8004492:	4363      	muls	r3, r4
 8004494:	18d3      	adds	r3, r2, r3
 8004496:	333c      	adds	r3, #60	; 0x3c
 8004498:	6019      	str	r1, [r3, #0]
	    			printf("The pass.averageSpeedEl is : %f\r\n", passes[passNumberToUpdate].averageSpeedEl);
 800449a:	4b5f      	ldr	r3, [pc, #380]	; (8004618 <receiveDataFrame+0xb34>)
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	4a5f      	ldr	r2, [pc, #380]	; (800461c <receiveDataFrame+0xb38>)
 80044a0:	2164      	movs	r1, #100	; 0x64
 80044a2:	434b      	muls	r3, r1
 80044a4:	18d3      	adds	r3, r2, r3
 80044a6:	333c      	adds	r3, #60	; 0x3c
 80044a8:	681b      	ldr	r3, [r3, #0]
 80044aa:	1c18      	adds	r0, r3, #0
 80044ac:	f7fe fc90 	bl	8002dd0 <__aeabi_f2d>
 80044b0:	0003      	movs	r3, r0
 80044b2:	000c      	movs	r4, r1
 80044b4:	4960      	ldr	r1, [pc, #384]	; (8004638 <receiveDataFrame+0xb54>)
 80044b6:	001a      	movs	r2, r3
 80044b8:	0023      	movs	r3, r4
 80044ba:	0008      	movs	r0, r1
 80044bc:	f001 fc38 	bl	8005d30 <iprintf>

	    			// Initialize the time of the tracking to 0
	    			passes[passNumberToUpdate].tracking.currentTimeSecond = floorf( 0 * 100000 ) / 100000;
 80044c0:	4b55      	ldr	r3, [pc, #340]	; (8004618 <receiveDataFrame+0xb34>)
 80044c2:	681b      	ldr	r3, [r3, #0]
 80044c4:	4a55      	ldr	r2, [pc, #340]	; (800461c <receiveDataFrame+0xb38>)
 80044c6:	2164      	movs	r1, #100	; 0x64
 80044c8:	434b      	muls	r3, r1
 80044ca:	18d3      	adds	r3, r2, r3
 80044cc:	3344      	adds	r3, #68	; 0x44
 80044ce:	2200      	movs	r2, #0
 80044d0:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentTimeSecond is : %f\r\n", passes[passNumberToUpdate].tracking.currentTimeSecond);
 80044d2:	4b51      	ldr	r3, [pc, #324]	; (8004618 <receiveDataFrame+0xb34>)
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	4a51      	ldr	r2, [pc, #324]	; (800461c <receiveDataFrame+0xb38>)
 80044d8:	2164      	movs	r1, #100	; 0x64
 80044da:	434b      	muls	r3, r1
 80044dc:	18d3      	adds	r3, r2, r3
 80044de:	3344      	adds	r3, #68	; 0x44
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	1c18      	adds	r0, r3, #0
 80044e4:	f7fe fc74 	bl	8002dd0 <__aeabi_f2d>
 80044e8:	0003      	movs	r3, r0
 80044ea:	000c      	movs	r4, r1
 80044ec:	4953      	ldr	r1, [pc, #332]	; (800463c <receiveDataFrame+0xb58>)
 80044ee:	001a      	movs	r2, r3
 80044f0:	0023      	movs	r3, r4
 80044f2:	0008      	movs	r0, r1
 80044f4:	f001 fc1c 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].tracking.currentTimeMinute = floorf( 0 * 100000 ) / 100000;
 80044f8:	4b47      	ldr	r3, [pc, #284]	; (8004618 <receiveDataFrame+0xb34>)
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	4a47      	ldr	r2, [pc, #284]	; (800461c <receiveDataFrame+0xb38>)
 80044fe:	2164      	movs	r1, #100	; 0x64
 8004500:	434b      	muls	r3, r1
 8004502:	18d3      	adds	r3, r2, r3
 8004504:	3340      	adds	r3, #64	; 0x40
 8004506:	2200      	movs	r2, #0
 8004508:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentTimeMinute is : %f\r\n", passes[passNumberToUpdate].tracking.currentTimeMinute);
 800450a:	4b43      	ldr	r3, [pc, #268]	; (8004618 <receiveDataFrame+0xb34>)
 800450c:	681b      	ldr	r3, [r3, #0]
 800450e:	4a43      	ldr	r2, [pc, #268]	; (800461c <receiveDataFrame+0xb38>)
 8004510:	2164      	movs	r1, #100	; 0x64
 8004512:	434b      	muls	r3, r1
 8004514:	18d3      	adds	r3, r2, r3
 8004516:	3340      	adds	r3, #64	; 0x40
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	1c18      	adds	r0, r3, #0
 800451c:	f7fe fc58 	bl	8002dd0 <__aeabi_f2d>
 8004520:	0003      	movs	r3, r0
 8004522:	000c      	movs	r4, r1
 8004524:	4946      	ldr	r1, [pc, #280]	; (8004640 <receiveDataFrame+0xb5c>)
 8004526:	001a      	movs	r2, r3
 8004528:	0023      	movs	r3, r4
 800452a:	0008      	movs	r0, r1
 800452c:	f001 fc00 	bl	8005d30 <iprintf>

	    			// Initialize the current speed of the tracking to 0
	    			passes[passNumberToUpdate].tracking.currentSpeedAz = floorf( 0 * 100000 ) / 10000;
 8004530:	4b39      	ldr	r3, [pc, #228]	; (8004618 <receiveDataFrame+0xb34>)
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	4a39      	ldr	r2, [pc, #228]	; (800461c <receiveDataFrame+0xb38>)
 8004536:	2164      	movs	r1, #100	; 0x64
 8004538:	434b      	muls	r3, r1
 800453a:	18d3      	adds	r3, r2, r3
 800453c:	3348      	adds	r3, #72	; 0x48
 800453e:	2200      	movs	r2, #0
 8004540:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentSpeedAz is : %f\r\n", passes[passNumberToUpdate].tracking.currentSpeedAz);
 8004542:	4b35      	ldr	r3, [pc, #212]	; (8004618 <receiveDataFrame+0xb34>)
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	4a35      	ldr	r2, [pc, #212]	; (800461c <receiveDataFrame+0xb38>)
 8004548:	2164      	movs	r1, #100	; 0x64
 800454a:	434b      	muls	r3, r1
 800454c:	18d3      	adds	r3, r2, r3
 800454e:	3348      	adds	r3, #72	; 0x48
 8004550:	681b      	ldr	r3, [r3, #0]
 8004552:	1c18      	adds	r0, r3, #0
 8004554:	f7fe fc3c 	bl	8002dd0 <__aeabi_f2d>
 8004558:	0003      	movs	r3, r0
 800455a:	000c      	movs	r4, r1
 800455c:	4939      	ldr	r1, [pc, #228]	; (8004644 <receiveDataFrame+0xb60>)
 800455e:	001a      	movs	r2, r3
 8004560:	0023      	movs	r3, r4
 8004562:	0008      	movs	r0, r1
 8004564:	f001 fbe4 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].tracking.currentSpeedEl = floorf( 0 * 100000 ) / 100000;
 8004568:	4b2b      	ldr	r3, [pc, #172]	; (8004618 <receiveDataFrame+0xb34>)
 800456a:	681b      	ldr	r3, [r3, #0]
 800456c:	4a2b      	ldr	r2, [pc, #172]	; (800461c <receiveDataFrame+0xb38>)
 800456e:	2164      	movs	r1, #100	; 0x64
 8004570:	434b      	muls	r3, r1
 8004572:	18d3      	adds	r3, r2, r3
 8004574:	334c      	adds	r3, #76	; 0x4c
 8004576:	2200      	movs	r2, #0
 8004578:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentSpeedEl is : %f\r\n", passes[passNumberToUpdate].tracking.currentSpeedAz);
 800457a:	4b27      	ldr	r3, [pc, #156]	; (8004618 <receiveDataFrame+0xb34>)
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	4a27      	ldr	r2, [pc, #156]	; (800461c <receiveDataFrame+0xb38>)
 8004580:	2164      	movs	r1, #100	; 0x64
 8004582:	434b      	muls	r3, r1
 8004584:	18d3      	adds	r3, r2, r3
 8004586:	3348      	adds	r3, #72	; 0x48
 8004588:	681b      	ldr	r3, [r3, #0]
 800458a:	1c18      	adds	r0, r3, #0
 800458c:	f7fe fc20 	bl	8002dd0 <__aeabi_f2d>
 8004590:	0003      	movs	r3, r0
 8004592:	000c      	movs	r4, r1
 8004594:	492c      	ldr	r1, [pc, #176]	; (8004648 <receiveDataFrame+0xb64>)
 8004596:	001a      	movs	r2, r3
 8004598:	0023      	movs	r3, r4
 800459a:	0008      	movs	r0, r1
 800459c:	f001 fbc8 	bl	8005d30 <iprintf>

	    			// The maximum speed of the tracking in AZ and in EL is two times the value of the average speed
	    			passes[passNumberToUpdate].tracking.maximumSpeedAz = floorf( ( 2 * (passes[passNumberToUpdate].averageSpeedAz) ) * 100000 ) / 100000;
 80045a0:	4b1d      	ldr	r3, [pc, #116]	; (8004618 <receiveDataFrame+0xb34>)
 80045a2:	681b      	ldr	r3, [r3, #0]
 80045a4:	4a1d      	ldr	r2, [pc, #116]	; (800461c <receiveDataFrame+0xb38>)
 80045a6:	2164      	movs	r1, #100	; 0x64
 80045a8:	434b      	muls	r3, r1
 80045aa:	18d3      	adds	r3, r2, r3
 80045ac:	3338      	adds	r3, #56	; 0x38
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	1c19      	adds	r1, r3, #0
 80045b2:	1c18      	adds	r0, r3, #0
 80045b4:	f7fb ffc6 	bl	8000544 <__aeabi_fadd>
 80045b8:	1c03      	adds	r3, r0, #0
 80045ba:	4919      	ldr	r1, [pc, #100]	; (8004620 <receiveDataFrame+0xb3c>)
 80045bc:	1c18      	adds	r0, r3, #0
 80045be:	f7fc fb33 	bl	8000c28 <__aeabi_fmul>
 80045c2:	1c03      	adds	r3, r0, #0
 80045c4:	1c18      	adds	r0, r3, #0
 80045c6:	f004 f85f 	bl	8008688 <floorf>
 80045ca:	1c02      	adds	r2, r0, #0
 80045cc:	4b12      	ldr	r3, [pc, #72]	; (8004618 <receiveDataFrame+0xb34>)
 80045ce:	681c      	ldr	r4, [r3, #0]
 80045d0:	4913      	ldr	r1, [pc, #76]	; (8004620 <receiveDataFrame+0xb3c>)
 80045d2:	1c10      	adds	r0, r2, #0
 80045d4:	f7fc f950 	bl	8000878 <__aeabi_fdiv>
 80045d8:	1c03      	adds	r3, r0, #0
 80045da:	1c19      	adds	r1, r3, #0
 80045dc:	4a0f      	ldr	r2, [pc, #60]	; (800461c <receiveDataFrame+0xb38>)
 80045de:	2364      	movs	r3, #100	; 0x64
 80045e0:	4363      	muls	r3, r4
 80045e2:	18d3      	adds	r3, r2, r3
 80045e4:	3350      	adds	r3, #80	; 0x50
 80045e6:	6019      	str	r1, [r3, #0]
	    			printf("The pass.tracking.maximumSpeedAz is : %f\r\n", passes[passNumberToUpdate].tracking.maximumSpeedAz);
 80045e8:	4b0b      	ldr	r3, [pc, #44]	; (8004618 <receiveDataFrame+0xb34>)
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	4a0b      	ldr	r2, [pc, #44]	; (800461c <receiveDataFrame+0xb38>)
 80045ee:	2164      	movs	r1, #100	; 0x64
 80045f0:	434b      	muls	r3, r1
 80045f2:	18d3      	adds	r3, r2, r3
 80045f4:	3350      	adds	r3, #80	; 0x50
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	1c18      	adds	r0, r3, #0
 80045fa:	f7fe fbe9 	bl	8002dd0 <__aeabi_f2d>
 80045fe:	0003      	movs	r3, r0
 8004600:	000c      	movs	r4, r1
 8004602:	4912      	ldr	r1, [pc, #72]	; (800464c <receiveDataFrame+0xb68>)
 8004604:	001a      	movs	r2, r3
 8004606:	0023      	movs	r3, r4
 8004608:	e022      	b.n	8004650 <receiveDataFrame+0xb6c>
 800460a:	46c0      	nop			; (mov r8, r8)
 800460c:	40006400 	.word	0x40006400
 8004610:	08008ca0 	.word	0x08008ca0
 8004614:	08008cd0 	.word	0x08008cd0
 8004618:	20000218 	.word	0x20000218
 800461c:	2000021c 	.word	0x2000021c
 8004620:	47c35000 	.word	0x47c35000
 8004624:	08008cfc 	.word	0x08008cfc
 8004628:	42c80000 	.word	0x42c80000
 800462c:	08008d24 	.word	0x08008d24
 8004630:	08008d4c 	.word	0x08008d4c
 8004634:	40f86a00 	.word	0x40f86a00
 8004638:	08008d70 	.word	0x08008d70
 800463c:	08008d94 	.word	0x08008d94
 8004640:	08008dc4 	.word	0x08008dc4
 8004644:	08008df4 	.word	0x08008df4
 8004648:	08008e20 	.word	0x08008e20
 800464c:	08008e4c 	.word	0x08008e4c
 8004650:	0008      	movs	r0, r1
 8004652:	f001 fb6d 	bl	8005d30 <iprintf>
	    			passes[passNumberToUpdate].tracking.maximumSpeedEl = floorf( ( 2 * (passes[passNumberToUpdate].averageSpeedEl) ) * 100000 )/ 100000;
 8004656:	4b36      	ldr	r3, [pc, #216]	; (8004730 <receiveDataFrame+0xc4c>)
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	4a36      	ldr	r2, [pc, #216]	; (8004734 <receiveDataFrame+0xc50>)
 800465c:	2164      	movs	r1, #100	; 0x64
 800465e:	434b      	muls	r3, r1
 8004660:	18d3      	adds	r3, r2, r3
 8004662:	333c      	adds	r3, #60	; 0x3c
 8004664:	681b      	ldr	r3, [r3, #0]
 8004666:	1c19      	adds	r1, r3, #0
 8004668:	1c18      	adds	r0, r3, #0
 800466a:	f7fb ff6b 	bl	8000544 <__aeabi_fadd>
 800466e:	1c03      	adds	r3, r0, #0
 8004670:	4931      	ldr	r1, [pc, #196]	; (8004738 <receiveDataFrame+0xc54>)
 8004672:	1c18      	adds	r0, r3, #0
 8004674:	f7fc fad8 	bl	8000c28 <__aeabi_fmul>
 8004678:	1c03      	adds	r3, r0, #0
 800467a:	1c18      	adds	r0, r3, #0
 800467c:	f004 f804 	bl	8008688 <floorf>
 8004680:	1c02      	adds	r2, r0, #0
 8004682:	4b2b      	ldr	r3, [pc, #172]	; (8004730 <receiveDataFrame+0xc4c>)
 8004684:	681c      	ldr	r4, [r3, #0]
 8004686:	492c      	ldr	r1, [pc, #176]	; (8004738 <receiveDataFrame+0xc54>)
 8004688:	1c10      	adds	r0, r2, #0
 800468a:	f7fc f8f5 	bl	8000878 <__aeabi_fdiv>
 800468e:	1c03      	adds	r3, r0, #0
 8004690:	1c19      	adds	r1, r3, #0
 8004692:	4a28      	ldr	r2, [pc, #160]	; (8004734 <receiveDataFrame+0xc50>)
 8004694:	2364      	movs	r3, #100	; 0x64
 8004696:	4363      	muls	r3, r4
 8004698:	18d3      	adds	r3, r2, r3
 800469a:	3354      	adds	r3, #84	; 0x54
 800469c:	6019      	str	r1, [r3, #0]
	    			printf("The pass.tracking.maximumSpeedEl is : %f\r\n", passes[passNumberToUpdate].tracking.maximumSpeedEl);
 800469e:	4b24      	ldr	r3, [pc, #144]	; (8004730 <receiveDataFrame+0xc4c>)
 80046a0:	681b      	ldr	r3, [r3, #0]
 80046a2:	4a24      	ldr	r2, [pc, #144]	; (8004734 <receiveDataFrame+0xc50>)
 80046a4:	2164      	movs	r1, #100	; 0x64
 80046a6:	434b      	muls	r3, r1
 80046a8:	18d3      	adds	r3, r2, r3
 80046aa:	3354      	adds	r3, #84	; 0x54
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	1c18      	adds	r0, r3, #0
 80046b0:	f7fe fb8e 	bl	8002dd0 <__aeabi_f2d>
 80046b4:	0003      	movs	r3, r0
 80046b6:	000c      	movs	r4, r1
 80046b8:	4920      	ldr	r1, [pc, #128]	; (800473c <receiveDataFrame+0xc58>)
 80046ba:	001a      	movs	r2, r3
 80046bc:	0023      	movs	r3, r4
 80046be:	0008      	movs	r0, r1
 80046c0:	f001 fb36 	bl	8005d30 <iprintf>

	    			// Set the speed of the motors at 12V in °/min
	    			passes[passNumberToUpdate].tracking.maximumMotorSpeedAz = 131; // 80 rpm at 12V ( 131 / 360 * 220 = 80 )
 80046c4:	4b1a      	ldr	r3, [pc, #104]	; (8004730 <receiveDataFrame+0xc4c>)
 80046c6:	681b      	ldr	r3, [r3, #0]
 80046c8:	4a1a      	ldr	r2, [pc, #104]	; (8004734 <receiveDataFrame+0xc50>)
 80046ca:	2164      	movs	r1, #100	; 0x64
 80046cc:	434b      	muls	r3, r1
 80046ce:	18d3      	adds	r3, r2, r3
 80046d0:	3358      	adds	r3, #88	; 0x58
 80046d2:	4a1b      	ldr	r2, [pc, #108]	; (8004740 <receiveDataFrame+0xc5c>)
 80046d4:	601a      	str	r2, [r3, #0]
	    			passes[passNumberToUpdate].tracking.maximumMotorSpeedEl = 16.5; // 10 rpm at 12V ( 16.5 / 360 * 220 = 10 )
 80046d6:	4b16      	ldr	r3, [pc, #88]	; (8004730 <receiveDataFrame+0xc4c>)
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	4a16      	ldr	r2, [pc, #88]	; (8004734 <receiveDataFrame+0xc50>)
 80046dc:	2164      	movs	r1, #100	; 0x64
 80046de:	434b      	muls	r3, r1
 80046e0:	18d3      	adds	r3, r2, r3
 80046e2:	335c      	adds	r3, #92	; 0x5c
 80046e4:	4a17      	ldr	r2, [pc, #92]	; (8004744 <receiveDataFrame+0xc60>)
 80046e6:	601a      	str	r2, [r3, #0]

	    			break;
 80046e8:	46c0      	nop			; (mov r8, r8)

	    		}

	    	numberOfDataFrameReceived++;
 80046ea:	4b17      	ldr	r3, [pc, #92]	; (8004748 <receiveDataFrame+0xc64>)
 80046ec:	681b      	ldr	r3, [r3, #0]
 80046ee:	1c5a      	adds	r2, r3, #1
 80046f0:	4b15      	ldr	r3, [pc, #84]	; (8004748 <receiveDataFrame+0xc64>)
 80046f2:	601a      	str	r2, [r3, #0]
 80046f4:	e008      	b.n	8004708 <receiveDataFrame+0xc24>

	    }

	    else{

	    	printf("The size of the received data frame is not the right one \r\n");
 80046f6:	4b15      	ldr	r3, [pc, #84]	; (800474c <receiveDataFrame+0xc68>)
 80046f8:	0018      	movs	r0, r3
 80046fa:	f001 fb93 	bl	8005e24 <puts>
 80046fe:	e003      	b.n	8004708 <receiveDataFrame+0xc24>
	    }
	}

	else {

		printf("The id of the received data frame is not the one we are looking for \r\n");
 8004700:	4b13      	ldr	r3, [pc, #76]	; (8004750 <receiveDataFrame+0xc6c>)
 8004702:	0018      	movs	r0, r3
 8004704:	f001 fb8e 	bl	8005e24 <puts>

	}

	// Release the FIFO
	(fifoNumber == 0) ? (CAN->RF0R |= CAN_RF0R_RFOM0) : (CAN->RF1R |= CAN_RF1R_RFOM1);
 8004708:	69fb      	ldr	r3, [r7, #28]
 800470a:	2b00      	cmp	r3, #0
 800470c:	d106      	bne.n	800471c <receiveDataFrame+0xc38>
 800470e:	4b11      	ldr	r3, [pc, #68]	; (8004754 <receiveDataFrame+0xc70>)
 8004710:	68da      	ldr	r2, [r3, #12]
 8004712:	4b10      	ldr	r3, [pc, #64]	; (8004754 <receiveDataFrame+0xc70>)
 8004714:	2120      	movs	r1, #32
 8004716:	430a      	orrs	r2, r1
 8004718:	60da      	str	r2, [r3, #12]

}
 800471a:	e005      	b.n	8004728 <receiveDataFrame+0xc44>
	(fifoNumber == 0) ? (CAN->RF0R |= CAN_RF0R_RFOM0) : (CAN->RF1R |= CAN_RF1R_RFOM1);
 800471c:	4b0d      	ldr	r3, [pc, #52]	; (8004754 <receiveDataFrame+0xc70>)
 800471e:	691a      	ldr	r2, [r3, #16]
 8004720:	4b0c      	ldr	r3, [pc, #48]	; (8004754 <receiveDataFrame+0xc70>)
 8004722:	2120      	movs	r1, #32
 8004724:	430a      	orrs	r2, r1
 8004726:	611a      	str	r2, [r3, #16]
}
 8004728:	46c0      	nop			; (mov r8, r8)
 800472a:	46bd      	mov	sp, r7
 800472c:	b008      	add	sp, #32
 800472e:	bdb0      	pop	{r4, r5, r7, pc}
 8004730:	20000218 	.word	0x20000218
 8004734:	2000021c 	.word	0x2000021c
 8004738:	47c35000 	.word	0x47c35000
 800473c:	08008e78 	.word	0x08008e78
 8004740:	43030000 	.word	0x43030000
 8004744:	41840000 	.word	0x41840000
 8004748:	2000020c 	.word	0x2000020c
 800474c:	08008ea4 	.word	0x08008ea4
 8004750:	08008ee0 	.word	0x08008ee0
 8004754:	40006400 	.word	0x40006400

08004758 <canEnableIRQ>:

void canEnableIRQ(){
 8004758:	b580      	push	{r7, lr}
 800475a:	af00      	add	r7, sp, #0

	NVIC_SetPriority(CEC_CAN_IRQn, 1); // Set interruption priority level to 1
 800475c:	2101      	movs	r1, #1
 800475e:	201e      	movs	r0, #30
 8004760:	f7fe fc44 	bl	8002fec <__NVIC_SetPriority>
	NVIC_EnableIRQ(CEC_CAN_IRQn); // Enable interruption for the NVIC
 8004764:	201e      	movs	r0, #30
 8004766:	f7fe fc27 	bl	8002fb8 <__NVIC_EnableIRQ>
}
 800476a:	46c0      	nop			; (mov r8, r8)
 800476c:	46bd      	mov	sp, r7
 800476e:	bd80      	pop	{r7, pc}

08004770 <canDisableIRQ>:

void canDisableIRQ(){
 8004770:	b580      	push	{r7, lr}
 8004772:	af00      	add	r7, sp, #0

	CAN->IER &= ~(CAN_IER_TMEIE); // Interruption on completed transmission request (ok, arbitration loss, abort and error)
 8004774:	4b16      	ldr	r3, [pc, #88]	; (80047d0 <canDisableIRQ+0x60>)
 8004776:	695a      	ldr	r2, [r3, #20]
 8004778:	4b15      	ldr	r3, [pc, #84]	; (80047d0 <canDisableIRQ+0x60>)
 800477a:	2101      	movs	r1, #1
 800477c:	438a      	bics	r2, r1
 800477e:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FMPIE0); // Interruption on message pending into the fifo 0
 8004780:	4b13      	ldr	r3, [pc, #76]	; (80047d0 <canDisableIRQ+0x60>)
 8004782:	695a      	ldr	r2, [r3, #20]
 8004784:	4b12      	ldr	r3, [pc, #72]	; (80047d0 <canDisableIRQ+0x60>)
 8004786:	2102      	movs	r1, #2
 8004788:	438a      	bics	r2, r1
 800478a:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FMPIE1); // Interruption on message pending into the fifo 1
 800478c:	4b10      	ldr	r3, [pc, #64]	; (80047d0 <canDisableIRQ+0x60>)
 800478e:	695a      	ldr	r2, [r3, #20]
 8004790:	4b0f      	ldr	r3, [pc, #60]	; (80047d0 <canDisableIRQ+0x60>)
 8004792:	2110      	movs	r1, #16
 8004794:	438a      	bics	r2, r1
 8004796:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FOVIE0); // Interruption on message overrun into the fifo 0
 8004798:	4b0d      	ldr	r3, [pc, #52]	; (80047d0 <canDisableIRQ+0x60>)
 800479a:	695a      	ldr	r2, [r3, #20]
 800479c:	4b0c      	ldr	r3, [pc, #48]	; (80047d0 <canDisableIRQ+0x60>)
 800479e:	2108      	movs	r1, #8
 80047a0:	438a      	bics	r2, r1
 80047a2:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FOVIE1); // Interruption on message overrun into the fifo 1
 80047a4:	4b0a      	ldr	r3, [pc, #40]	; (80047d0 <canDisableIRQ+0x60>)
 80047a6:	695a      	ldr	r2, [r3, #20]
 80047a8:	4b09      	ldr	r3, [pc, #36]	; (80047d0 <canDisableIRQ+0x60>)
 80047aa:	2140      	movs	r1, #64	; 0x40
 80047ac:	438a      	bics	r2, r1
 80047ae:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_ERRIE); // Interruption on error
 80047b0:	4b07      	ldr	r3, [pc, #28]	; (80047d0 <canDisableIRQ+0x60>)
 80047b2:	695a      	ldr	r2, [r3, #20]
 80047b4:	4b06      	ldr	r3, [pc, #24]	; (80047d0 <canDisableIRQ+0x60>)
 80047b6:	4907      	ldr	r1, [pc, #28]	; (80047d4 <canDisableIRQ+0x64>)
 80047b8:	400a      	ands	r2, r1
 80047ba:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_LECIE); // Interruption on last error code
 80047bc:	4b04      	ldr	r3, [pc, #16]	; (80047d0 <canDisableIRQ+0x60>)
 80047be:	695a      	ldr	r2, [r3, #20]
 80047c0:	4b03      	ldr	r3, [pc, #12]	; (80047d0 <canDisableIRQ+0x60>)
 80047c2:	4905      	ldr	r1, [pc, #20]	; (80047d8 <canDisableIRQ+0x68>)
 80047c4:	400a      	ands	r2, r1
 80047c6:	615a      	str	r2, [r3, #20]
}
 80047c8:	46c0      	nop			; (mov r8, r8)
 80047ca:	46bd      	mov	sp, r7
 80047cc:	bd80      	pop	{r7, pc}
 80047ce:	46c0      	nop			; (mov r8, r8)
 80047d0:	40006400 	.word	0x40006400
 80047d4:	ffff7fff 	.word	0xffff7fff
 80047d8:	fffff7ff 	.word	0xfffff7ff

080047dc <CEC_CAN_IRQHandler>:

void CEC_CAN_IRQHandler(void){
 80047dc:	b5b0      	push	{r4, r5, r7, lr}
 80047de:	b088      	sub	sp, #32
 80047e0:	af00      	add	r7, sp, #0

	uint32_t interrupts = CAN->IER;
 80047e2:	4bcb      	ldr	r3, [pc, #812]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80047e4:	695b      	ldr	r3, [r3, #20]
 80047e6:	61bb      	str	r3, [r7, #24]
	uint32_t msrflags = CAN->MSR;
 80047e8:	4bc9      	ldr	r3, [pc, #804]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80047ea:	685b      	ldr	r3, [r3, #4]
 80047ec:	617b      	str	r3, [r7, #20]
	uint32_t tsrflags = CAN->TSR;
 80047ee:	4bc8      	ldr	r3, [pc, #800]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80047f0:	689b      	ldr	r3, [r3, #8]
 80047f2:	613b      	str	r3, [r7, #16]
	uint32_t rf0rflags = CAN->RF0R;
 80047f4:	4bc6      	ldr	r3, [pc, #792]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80047f6:	68db      	ldr	r3, [r3, #12]
 80047f8:	60fb      	str	r3, [r7, #12]
	uint32_t rf1rflags = CAN->RF1R;
 80047fa:	4bc5      	ldr	r3, [pc, #788]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80047fc:	691b      	ldr	r3, [r3, #16]
 80047fe:	60bb      	str	r3, [r7, #8]
	uint32_t esrflags = CAN->ESR;
 8004800:	4bc3      	ldr	r3, [pc, #780]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004802:	699b      	ldr	r3, [r3, #24]
 8004804:	607b      	str	r3, [r7, #4]

	/********** TRANSMIT INTERRUPT **********/
	if ((interrupts & CAN_IER_TMEIE) != 0U){
 8004806:	69bb      	ldr	r3, [r7, #24]
 8004808:	2201      	movs	r2, #1
 800480a:	4013      	ands	r3, r2
 800480c:	d100      	bne.n	8004810 <CEC_CAN_IRQHandler+0x34>
 800480e:	e0f3      	b.n	80049f8 <CEC_CAN_IRQHandler+0x21c>

    	// Transmit interrupt mailbox 0
		if ((tsrflags & CAN_TSR_RQCP0) != 0U) {
 8004810:	693b      	ldr	r3, [r7, #16]
 8004812:	2201      	movs	r2, #1
 8004814:	4013      	ands	r3, r2
 8004816:	d049      	beq.n	80048ac <CEC_CAN_IRQHandler+0xd0>

    		// Clear RQCP0, TXOK0, ALST0 and TERR0 bits
    		CAN->TSR &= ~CAN_TSR_RQCP0_Msk;
 8004818:	4bbd      	ldr	r3, [pc, #756]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 800481a:	689a      	ldr	r2, [r3, #8]
 800481c:	4bbc      	ldr	r3, [pc, #752]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 800481e:	2101      	movs	r1, #1
 8004820:	438a      	bics	r2, r1
 8004822:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TXOK0_Msk;
 8004824:	4bba      	ldr	r3, [pc, #744]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004826:	689a      	ldr	r2, [r3, #8]
 8004828:	4bb9      	ldr	r3, [pc, #740]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 800482a:	2102      	movs	r1, #2
 800482c:	438a      	bics	r2, r1
 800482e:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_ALST0_Msk;
 8004830:	4bb7      	ldr	r3, [pc, #732]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004832:	689a      	ldr	r2, [r3, #8]
 8004834:	4bb6      	ldr	r3, [pc, #728]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004836:	2104      	movs	r1, #4
 8004838:	438a      	bics	r2, r1
 800483a:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TERR0_Msk;
 800483c:	4bb4      	ldr	r3, [pc, #720]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 800483e:	689a      	ldr	r2, [r3, #8]
 8004840:	4bb3      	ldr	r3, [pc, #716]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004842:	2108      	movs	r1, #8
 8004844:	438a      	bics	r2, r1
 8004846:	609a      	str	r2, [r3, #8]

      		// Transmission succeed
    		if ((tsrflags & CAN_TSR_TXOK0) != 0U){
 8004848:	693b      	ldr	r3, [r7, #16]
 800484a:	2202      	movs	r2, #2
 800484c:	4013      	ands	r3, r2
 800484e:	d003      	beq.n	8004858 <CEC_CAN_IRQHandler+0x7c>

        		printf("Transmission succeed from mailbox 0 ! \r\n");
 8004850:	4bb0      	ldr	r3, [pc, #704]	; (8004b14 <CEC_CAN_IRQHandler+0x338>)
 8004852:	0018      	movs	r0, r3
 8004854:	f001 fae6 	bl	8005e24 <puts>

    		}

    		// Transmission failed due to arbitration lost
      		if ((tsrflags & CAN_TSR_ALST0) != 0U){
 8004858:	693b      	ldr	r3, [r7, #16]
 800485a:	2204      	movs	r2, #4
 800485c:	4013      	ands	r3, r2
 800485e:	d009      	beq.n	8004874 <CEC_CAN_IRQHandler+0x98>

          		printf("Transmission fail due to arbitration lost from mailbox 0 ! \r\n");
 8004860:	4bad      	ldr	r3, [pc, #692]	; (8004b18 <CEC_CAN_IRQHandler+0x33c>)
 8004862:	0018      	movs	r0, r3
 8004864:	f001 fade 	bl	8005e24 <puts>
          		printf("Send new remote frame ! \r\n");
 8004868:	4bac      	ldr	r3, [pc, #688]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 800486a:	0018      	movs	r0, r3
 800486c:	f001 fada 	bl	8005e24 <puts>
          		sendRemoteFrame();
 8004870:	f7ff f856 	bl	8003920 <sendRemoteFrame>
        	}

        	// Transmission failed due error
        	if ((tsrflags & CAN_TSR_TERR0) != 0U){
 8004874:	693b      	ldr	r3, [r7, #16]
 8004876:	2208      	movs	r2, #8
 8004878:	4013      	ands	r3, r2
 800487a:	d009      	beq.n	8004890 <CEC_CAN_IRQHandler+0xb4>

          		printf("Transmission fail due to error from mailbox 0 ! \r\n");
 800487c:	4ba8      	ldr	r3, [pc, #672]	; (8004b20 <CEC_CAN_IRQHandler+0x344>)
 800487e:	0018      	movs	r0, r3
 8004880:	f001 fad0 	bl	8005e24 <puts>
          		printf("Send new remote frame ! \r\n");
 8004884:	4ba5      	ldr	r3, [pc, #660]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 8004886:	0018      	movs	r0, r3
 8004888:	f001 facc 	bl	8005e24 <puts>
          		sendRemoteFrame();
 800488c:	f7ff f848 	bl	8003920 <sendRemoteFrame>

        	}

        	// Transmission aborted
        	if ((tsrflags & CAN_TSR_ABRQ0) != 0U) {
 8004890:	693b      	ldr	r3, [r7, #16]
 8004892:	2280      	movs	r2, #128	; 0x80
 8004894:	4013      	ands	r3, r2
 8004896:	d009      	beq.n	80048ac <CEC_CAN_IRQHandler+0xd0>

        		printf("Transmission aborted from mailbox 0 ! \r\n");
 8004898:	4ba2      	ldr	r3, [pc, #648]	; (8004b24 <CEC_CAN_IRQHandler+0x348>)
 800489a:	0018      	movs	r0, r3
 800489c:	f001 fac2 	bl	8005e24 <puts>
        		printf("Send new remote frame ! \r\n");
 80048a0:	4b9e      	ldr	r3, [pc, #632]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 80048a2:	0018      	movs	r0, r3
 80048a4:	f001 fabe 	bl	8005e24 <puts>
        		sendRemoteFrame();
 80048a8:	f7ff f83a 	bl	8003920 <sendRemoteFrame>

        	}
      	}

    	// Transmit interrupt mailbox 1
    	if ((tsrflags & CAN_TSR_RQCP1) != 0U) {
 80048ac:	693a      	ldr	r2, [r7, #16]
 80048ae:	2380      	movs	r3, #128	; 0x80
 80048b0:	005b      	lsls	r3, r3, #1
 80048b2:	4013      	ands	r3, r2
 80048b4:	d04d      	beq.n	8004952 <CEC_CAN_IRQHandler+0x176>

    		// Clear RQCP0, TXOK0, ALST0 and TERR0 bits
    		CAN->TSR &= ~CAN_TSR_RQCP1_Msk;
 80048b6:	4b96      	ldr	r3, [pc, #600]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80048b8:	689a      	ldr	r2, [r3, #8]
 80048ba:	4b95      	ldr	r3, [pc, #596]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80048bc:	499a      	ldr	r1, [pc, #616]	; (8004b28 <CEC_CAN_IRQHandler+0x34c>)
 80048be:	400a      	ands	r2, r1
 80048c0:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TXOK1_Msk;
 80048c2:	4b93      	ldr	r3, [pc, #588]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80048c4:	689a      	ldr	r2, [r3, #8]
 80048c6:	4b92      	ldr	r3, [pc, #584]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80048c8:	4998      	ldr	r1, [pc, #608]	; (8004b2c <CEC_CAN_IRQHandler+0x350>)
 80048ca:	400a      	ands	r2, r1
 80048cc:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_ALST1_Msk;
 80048ce:	4b90      	ldr	r3, [pc, #576]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80048d0:	689a      	ldr	r2, [r3, #8]
 80048d2:	4b8f      	ldr	r3, [pc, #572]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80048d4:	4996      	ldr	r1, [pc, #600]	; (8004b30 <CEC_CAN_IRQHandler+0x354>)
 80048d6:	400a      	ands	r2, r1
 80048d8:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TERR1_Msk;
 80048da:	4b8d      	ldr	r3, [pc, #564]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80048dc:	689a      	ldr	r2, [r3, #8]
 80048de:	4b8c      	ldr	r3, [pc, #560]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 80048e0:	4994      	ldr	r1, [pc, #592]	; (8004b34 <CEC_CAN_IRQHandler+0x358>)
 80048e2:	400a      	ands	r2, r1
 80048e4:	609a      	str	r2, [r3, #8]

    		// Transmission succeed
    	    if ((tsrflags & CAN_TSR_TXOK1) != 0U){
 80048e6:	693a      	ldr	r2, [r7, #16]
 80048e8:	2380      	movs	r3, #128	; 0x80
 80048ea:	009b      	lsls	r3, r3, #2
 80048ec:	4013      	ands	r3, r2
 80048ee:	d003      	beq.n	80048f8 <CEC_CAN_IRQHandler+0x11c>

    	        printf("Transmission succeed from mailbox 1 ! \r\n");
 80048f0:	4b91      	ldr	r3, [pc, #580]	; (8004b38 <CEC_CAN_IRQHandler+0x35c>)
 80048f2:	0018      	movs	r0, r3
 80048f4:	f001 fa96 	bl	8005e24 <puts>

    	    }

    	    // Transmission failed due to arbitration lost
    	    if ((tsrflags & CAN_TSR_ALST1) != 0U){
 80048f8:	693a      	ldr	r2, [r7, #16]
 80048fa:	2380      	movs	r3, #128	; 0x80
 80048fc:	00db      	lsls	r3, r3, #3
 80048fe:	4013      	ands	r3, r2
 8004900:	d009      	beq.n	8004916 <CEC_CAN_IRQHandler+0x13a>

    	    	printf("Transmission fail due to arbitration lost from mailbox 1 ! \r\n");
 8004902:	4b8e      	ldr	r3, [pc, #568]	; (8004b3c <CEC_CAN_IRQHandler+0x360>)
 8004904:	0018      	movs	r0, r3
 8004906:	f001 fa8d 	bl	8005e24 <puts>
    	    	printf("Send new remote frame ! \r\n");
 800490a:	4b84      	ldr	r3, [pc, #528]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 800490c:	0018      	movs	r0, r3
 800490e:	f001 fa89 	bl	8005e24 <puts>
    	    	sendRemoteFrame();
 8004912:	f7ff f805 	bl	8003920 <sendRemoteFrame>
    	    }

    	    // Transmission failed due error
    	    if ((tsrflags & CAN_TSR_TERR1) != 0U){
 8004916:	693a      	ldr	r2, [r7, #16]
 8004918:	2380      	movs	r3, #128	; 0x80
 800491a:	011b      	lsls	r3, r3, #4
 800491c:	4013      	ands	r3, r2
 800491e:	d009      	beq.n	8004934 <CEC_CAN_IRQHandler+0x158>

    	    	printf("Transmission fail due to error from mailbox 1 ! \r\n");
 8004920:	4b87      	ldr	r3, [pc, #540]	; (8004b40 <CEC_CAN_IRQHandler+0x364>)
 8004922:	0018      	movs	r0, r3
 8004924:	f001 fa7e 	bl	8005e24 <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004928:	4b7c      	ldr	r3, [pc, #496]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 800492a:	0018      	movs	r0, r3
 800492c:	f001 fa7a 	bl	8005e24 <puts>
    	    	sendRemoteFrame();
 8004930:	f7fe fff6 	bl	8003920 <sendRemoteFrame>
    	    }

    	    // Transmission aborted
    	    if ((tsrflags & CAN_TSR_ABRQ1) != 0U) {
 8004934:	693a      	ldr	r2, [r7, #16]
 8004936:	2380      	movs	r3, #128	; 0x80
 8004938:	021b      	lsls	r3, r3, #8
 800493a:	4013      	ands	r3, r2
 800493c:	d009      	beq.n	8004952 <CEC_CAN_IRQHandler+0x176>

    	        printf("Transmission aborted from mailbox 1 !\r\n");
 800493e:	4b81      	ldr	r3, [pc, #516]	; (8004b44 <CEC_CAN_IRQHandler+0x368>)
 8004940:	0018      	movs	r0, r3
 8004942:	f001 fa6f 	bl	8005e24 <puts>
    	        printf("Send new remote frame ! \r\n");
 8004946:	4b75      	ldr	r3, [pc, #468]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 8004948:	0018      	movs	r0, r3
 800494a:	f001 fa6b 	bl	8005e24 <puts>
    	        sendRemoteFrame();
 800494e:	f7fe ffe7 	bl	8003920 <sendRemoteFrame>
    	    }
    	}

    	// Transmit interrupt mailbox 2
    	if ((tsrflags & CAN_TSR_RQCP2) != 0U) {
 8004952:	693a      	ldr	r2, [r7, #16]
 8004954:	2380      	movs	r3, #128	; 0x80
 8004956:	025b      	lsls	r3, r3, #9
 8004958:	4013      	ands	r3, r2
 800495a:	d04d      	beq.n	80049f8 <CEC_CAN_IRQHandler+0x21c>

    		// Clear RQCP2, TXOK2, ALST2 and TERR2 bits
    		CAN->TSR &= ~CAN_TSR_RQCP2_Msk;
 800495c:	4b6c      	ldr	r3, [pc, #432]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 800495e:	689a      	ldr	r2, [r3, #8]
 8004960:	4b6b      	ldr	r3, [pc, #428]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004962:	4979      	ldr	r1, [pc, #484]	; (8004b48 <CEC_CAN_IRQHandler+0x36c>)
 8004964:	400a      	ands	r2, r1
 8004966:	609a      	str	r2, [r3, #8]
    	    CAN->TSR &= ~CAN_TSR_TXOK2_Msk;
 8004968:	4b69      	ldr	r3, [pc, #420]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 800496a:	689a      	ldr	r2, [r3, #8]
 800496c:	4b68      	ldr	r3, [pc, #416]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 800496e:	4977      	ldr	r1, [pc, #476]	; (8004b4c <CEC_CAN_IRQHandler+0x370>)
 8004970:	400a      	ands	r2, r1
 8004972:	609a      	str	r2, [r3, #8]
    	    CAN->TSR &= ~CAN_TSR_ALST2_Msk;
 8004974:	4b66      	ldr	r3, [pc, #408]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004976:	689a      	ldr	r2, [r3, #8]
 8004978:	4b65      	ldr	r3, [pc, #404]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 800497a:	4975      	ldr	r1, [pc, #468]	; (8004b50 <CEC_CAN_IRQHandler+0x374>)
 800497c:	400a      	ands	r2, r1
 800497e:	609a      	str	r2, [r3, #8]
    	    CAN->TSR &= ~CAN_TSR_TERR2_Msk;
 8004980:	4b63      	ldr	r3, [pc, #396]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004982:	689a      	ldr	r2, [r3, #8]
 8004984:	4b62      	ldr	r3, [pc, #392]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004986:	4973      	ldr	r1, [pc, #460]	; (8004b54 <CEC_CAN_IRQHandler+0x378>)
 8004988:	400a      	ands	r2, r1
 800498a:	609a      	str	r2, [r3, #8]

    	    // Transmission succeed
    	    if ((tsrflags & CAN_TSR_TXOK2) != 0U){
 800498c:	693a      	ldr	r2, [r7, #16]
 800498e:	2380      	movs	r3, #128	; 0x80
 8004990:	029b      	lsls	r3, r3, #10
 8004992:	4013      	ands	r3, r2
 8004994:	d003      	beq.n	800499e <CEC_CAN_IRQHandler+0x1c2>

    	    	printf("Transmission succeed from mailbox 2 !\r\n");
 8004996:	4b70      	ldr	r3, [pc, #448]	; (8004b58 <CEC_CAN_IRQHandler+0x37c>)
 8004998:	0018      	movs	r0, r3
 800499a:	f001 fa43 	bl	8005e24 <puts>

    	    }

    	    // Transmission failed due to arbitration lost
    	    if ((tsrflags & CAN_TSR_ALST2) != 0U){
 800499e:	693a      	ldr	r2, [r7, #16]
 80049a0:	2380      	movs	r3, #128	; 0x80
 80049a2:	02db      	lsls	r3, r3, #11
 80049a4:	4013      	ands	r3, r2
 80049a6:	d009      	beq.n	80049bc <CEC_CAN_IRQHandler+0x1e0>

    	    	printf("Transmission fail due to arbitration lost from mailbox 2 !\r\n");
 80049a8:	4b6c      	ldr	r3, [pc, #432]	; (8004b5c <CEC_CAN_IRQHandler+0x380>)
 80049aa:	0018      	movs	r0, r3
 80049ac:	f001 fa3a 	bl	8005e24 <puts>
    	    	printf("Send new remote frame ! \r\n");
 80049b0:	4b5a      	ldr	r3, [pc, #360]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 80049b2:	0018      	movs	r0, r3
 80049b4:	f001 fa36 	bl	8005e24 <puts>
    	    	sendRemoteFrame();
 80049b8:	f7fe ffb2 	bl	8003920 <sendRemoteFrame>
    	    }

    	    // Transmission failed due error
    	    if ((tsrflags & CAN_TSR_TERR2) != 0U){
 80049bc:	693a      	ldr	r2, [r7, #16]
 80049be:	2380      	movs	r3, #128	; 0x80
 80049c0:	031b      	lsls	r3, r3, #12
 80049c2:	4013      	ands	r3, r2
 80049c4:	d009      	beq.n	80049da <CEC_CAN_IRQHandler+0x1fe>

    	    	printf("Transmission fail due to error from mailbox 2 !\r\n");
 80049c6:	4b66      	ldr	r3, [pc, #408]	; (8004b60 <CEC_CAN_IRQHandler+0x384>)
 80049c8:	0018      	movs	r0, r3
 80049ca:	f001 fa2b 	bl	8005e24 <puts>
    	    	printf("Send new remote frame ! \r\n");
 80049ce:	4b53      	ldr	r3, [pc, #332]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 80049d0:	0018      	movs	r0, r3
 80049d2:	f001 fa27 	bl	8005e24 <puts>
    	    	sendRemoteFrame();
 80049d6:	f7fe ffa3 	bl	8003920 <sendRemoteFrame>
    	    }

    	    // Transmission aborted
    	    if ((tsrflags & CAN_TSR_ABRQ2) != 0U) {
 80049da:	693a      	ldr	r2, [r7, #16]
 80049dc:	2380      	movs	r3, #128	; 0x80
 80049de:	041b      	lsls	r3, r3, #16
 80049e0:	4013      	ands	r3, r2
 80049e2:	d009      	beq.n	80049f8 <CEC_CAN_IRQHandler+0x21c>

    	    	printf("Transmission aborted from mailbox 2 !\r\n");
 80049e4:	4b5f      	ldr	r3, [pc, #380]	; (8004b64 <CEC_CAN_IRQHandler+0x388>)
 80049e6:	0018      	movs	r0, r3
 80049e8:	f001 fa1c 	bl	8005e24 <puts>
    	    	printf("Send new remote frame ! \r\n");
 80049ec:	4b4b      	ldr	r3, [pc, #300]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 80049ee:	0018      	movs	r0, r3
 80049f0:	f001 fa18 	bl	8005e24 <puts>
    	    	sendRemoteFrame();
 80049f4:	f7fe ff94 	bl	8003920 <sendRemoteFrame>
	}

	/********** FIFO 0 INTERRUPT **********/

	// Fifo 0 overrun
  	if ((interrupts & CAN_IER_FOVIE0) != 0U){
 80049f8:	69bb      	ldr	r3, [r7, #24]
 80049fa:	2208      	movs	r2, #8
 80049fc:	4013      	ands	r3, r2
 80049fe:	d013      	beq.n	8004a28 <CEC_CAN_IRQHandler+0x24c>

    	if ((rf0rflags & CAN_RF0R_FOVR0) != 0U) {
 8004a00:	68fb      	ldr	r3, [r7, #12]
 8004a02:	2210      	movs	r2, #16
 8004a04:	4013      	ands	r3, r2
 8004a06:	d00f      	beq.n	8004a28 <CEC_CAN_IRQHandler+0x24c>

      		printf("Fifo 0 overrun ! \r\n");
 8004a08:	4b57      	ldr	r3, [pc, #348]	; (8004b68 <CEC_CAN_IRQHandler+0x38c>)
 8004a0a:	0018      	movs	r0, r3
 8004a0c:	f001 fa0a 	bl	8005e24 <puts>
      		printf("Send new remote frame ! \r\n");
 8004a10:	4b42      	ldr	r3, [pc, #264]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 8004a12:	0018      	movs	r0, r3
 8004a14:	f001 fa06 	bl	8005e24 <puts>
      		sendRemoteFrame();
 8004a18:	f7fe ff82 	bl	8003920 <sendRemoteFrame>

      		// Clear fifo 0 overrun flag
      		CAN->RF0R &= ~CAN_RF0R_FOVR0_Msk;
 8004a1c:	4b3c      	ldr	r3, [pc, #240]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004a1e:	68da      	ldr	r2, [r3, #12]
 8004a20:	4b3b      	ldr	r3, [pc, #236]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004a22:	2110      	movs	r1, #16
 8004a24:	438a      	bics	r2, r1
 8004a26:	60da      	str	r2, [r3, #12]
    	}
  	}

  	// Fifo 0 full
  	if ((interrupts & CAN_IER_FFIE0) != 0U)	{
 8004a28:	69bb      	ldr	r3, [r7, #24]
 8004a2a:	2204      	movs	r2, #4
 8004a2c:	4013      	ands	r3, r2
 8004a2e:	d00d      	beq.n	8004a4c <CEC_CAN_IRQHandler+0x270>

    	if ((rf0rflags & CAN_RF0R_FULL0) != 0U)	{
 8004a30:	68fb      	ldr	r3, [r7, #12]
 8004a32:	2208      	movs	r2, #8
 8004a34:	4013      	ands	r3, r2
 8004a36:	d009      	beq.n	8004a4c <CEC_CAN_IRQHandler+0x270>

      		printf("Fifo 0 full ! \r\n");
 8004a38:	4b4c      	ldr	r3, [pc, #304]	; (8004b6c <CEC_CAN_IRQHandler+0x390>)
 8004a3a:	0018      	movs	r0, r3
 8004a3c:	f001 f9f2 	bl	8005e24 <puts>

      		// Clear fifo 0 full flag
      		CAN->RF0R &= ~CAN_RF0R_FULL0_Msk;
 8004a40:	4b33      	ldr	r3, [pc, #204]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004a42:	68da      	ldr	r2, [r3, #12]
 8004a44:	4b32      	ldr	r3, [pc, #200]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004a46:	2108      	movs	r1, #8
 8004a48:	438a      	bics	r2, r1
 8004a4a:	60da      	str	r2, [r3, #12]
    	}
  	}

  	// Fifo 0 message pending
  	if ((interrupts & CAN_IER_FMPIE0) != 0U) {
 8004a4c:	69bb      	ldr	r3, [r7, #24]
 8004a4e:	2202      	movs	r2, #2
 8004a50:	4013      	ands	r3, r2
 8004a52:	d017      	beq.n	8004a84 <CEC_CAN_IRQHandler+0x2a8>

    	// Check if message is still pending
    	if ((CAN->RF0R & CAN_RF0R_FMP0) != 0U) {
 8004a54:	4b2e      	ldr	r3, [pc, #184]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004a56:	68db      	ldr	r3, [r3, #12]
 8004a58:	2203      	movs	r2, #3
 8004a5a:	4013      	ands	r3, r2
 8004a5c:	d012      	beq.n	8004a84 <CEC_CAN_IRQHandler+0x2a8>

    		printf("Fifo 0 message pending ! \r\n");
 8004a5e:	4b44      	ldr	r3, [pc, #272]	; (8004b70 <CEC_CAN_IRQHandler+0x394>)
 8004a60:	0018      	movs	r0, r3
 8004a62:	f001 f9df 	bl	8005e24 <puts>
    		receiveDataFrame();
 8004a66:	f7ff f83d 	bl	8003ae4 <receiveDataFrame>

    		// Ask for informations about the four next passes
    		if (numberOfDataFrameReceived < 24) {
 8004a6a:	4b42      	ldr	r3, [pc, #264]	; (8004b74 <CEC_CAN_IRQHandler+0x398>)
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	2b17      	cmp	r3, #23
 8004a70:	d802      	bhi.n	8004a78 <CEC_CAN_IRQHandler+0x29c>
    			sendRemoteFrame();
 8004a72:	f7fe ff55 	bl	8003920 <sendRemoteFrame>
 8004a76:	e005      	b.n	8004a84 <CEC_CAN_IRQHandler+0x2a8>
    		}

    		// Disable CAN IRQ if we already have the informations about the four next passes
    		else {

    			printf("Disable CAN IRQ because we have the informations about the 4 next passes ! \r\n");
 8004a78:	4b3f      	ldr	r3, [pc, #252]	; (8004b78 <CEC_CAN_IRQHandler+0x39c>)
 8004a7a:	0018      	movs	r0, r3
 8004a7c:	f001 f9d2 	bl	8005e24 <puts>
    			canDisableIRQ();
 8004a80:	f7ff fe76 	bl	8004770 <canDisableIRQ>
  	}

  	/********** FIFO 1 INTERRUPT **********/

  		// Fifo 1 overrun
  	  	if ((interrupts & CAN_IER_FOVIE1) != 0U){
 8004a84:	69bb      	ldr	r3, [r7, #24]
 8004a86:	2240      	movs	r2, #64	; 0x40
 8004a88:	4013      	ands	r3, r2
 8004a8a:	d013      	beq.n	8004ab4 <CEC_CAN_IRQHandler+0x2d8>

  	    	if ((rf1rflags & CAN_RF1R_FOVR1) != 0U) {
 8004a8c:	68bb      	ldr	r3, [r7, #8]
 8004a8e:	2210      	movs	r2, #16
 8004a90:	4013      	ands	r3, r2
 8004a92:	d00f      	beq.n	8004ab4 <CEC_CAN_IRQHandler+0x2d8>

  	      		printf("Fifo 1 overrun ! \r\n");
 8004a94:	4b39      	ldr	r3, [pc, #228]	; (8004b7c <CEC_CAN_IRQHandler+0x3a0>)
 8004a96:	0018      	movs	r0, r3
 8004a98:	f001 f9c4 	bl	8005e24 <puts>
  	      		printf("Send new remote frame ! \r\n");
 8004a9c:	4b1f      	ldr	r3, [pc, #124]	; (8004b1c <CEC_CAN_IRQHandler+0x340>)
 8004a9e:	0018      	movs	r0, r3
 8004aa0:	f001 f9c0 	bl	8005e24 <puts>
  	      		sendRemoteFrame();
 8004aa4:	f7fe ff3c 	bl	8003920 <sendRemoteFrame>

  	      		// Clear fifo 1 overrun flag
  	      		CAN->RF1R &= ~CAN_RF1R_FOVR1_Msk;
 8004aa8:	4b19      	ldr	r3, [pc, #100]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004aaa:	691a      	ldr	r2, [r3, #16]
 8004aac:	4b18      	ldr	r3, [pc, #96]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004aae:	2110      	movs	r1, #16
 8004ab0:	438a      	bics	r2, r1
 8004ab2:	611a      	str	r2, [r3, #16]
  	    	}
  	  	}

  	  	// Fifo 1 full
  	  	if ((interrupts & CAN_IER_FFIE1) != 0U)	{
 8004ab4:	69bb      	ldr	r3, [r7, #24]
 8004ab6:	2220      	movs	r2, #32
 8004ab8:	4013      	ands	r3, r2
 8004aba:	d00d      	beq.n	8004ad8 <CEC_CAN_IRQHandler+0x2fc>

  	    	if ((rf1rflags & CAN_RF1R_FULL1) != 0U)	{
 8004abc:	68bb      	ldr	r3, [r7, #8]
 8004abe:	2208      	movs	r2, #8
 8004ac0:	4013      	ands	r3, r2
 8004ac2:	d009      	beq.n	8004ad8 <CEC_CAN_IRQHandler+0x2fc>

  	      		printf("Fifo 1 full ! \r\n");
 8004ac4:	4b2e      	ldr	r3, [pc, #184]	; (8004b80 <CEC_CAN_IRQHandler+0x3a4>)
 8004ac6:	0018      	movs	r0, r3
 8004ac8:	f001 f9ac 	bl	8005e24 <puts>

  	      		// Clear fifo 1 full flag
  	      		CAN->RF1R &= ~CAN_RF1R_FULL1_Msk;
 8004acc:	4b10      	ldr	r3, [pc, #64]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004ace:	691a      	ldr	r2, [r3, #16]
 8004ad0:	4b0f      	ldr	r3, [pc, #60]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004ad2:	2108      	movs	r1, #8
 8004ad4:	438a      	bics	r2, r1
 8004ad6:	611a      	str	r2, [r3, #16]
  	    	}
  	  	}

  	  	// Fifo 1 message pending
  	  	if ((interrupts & CAN_IER_FMPIE1) != 0U) {
 8004ad8:	69bb      	ldr	r3, [r7, #24]
 8004ada:	2210      	movs	r2, #16
 8004adc:	4013      	ands	r3, r2
 8004ade:	d100      	bne.n	8004ae2 <CEC_CAN_IRQHandler+0x306>
 8004ae0:	e0e0      	b.n	8004ca4 <CEC_CAN_IRQHandler+0x4c8>

  	    	// Check if message is still pending
  	    	if ((CAN->RF1R & CAN_RF1R_FMP1) != 0U) {
 8004ae2:	4b0b      	ldr	r3, [pc, #44]	; (8004b10 <CEC_CAN_IRQHandler+0x334>)
 8004ae4:	691b      	ldr	r3, [r3, #16]
 8004ae6:	2203      	movs	r2, #3
 8004ae8:	4013      	ands	r3, r2
 8004aea:	d100      	bne.n	8004aee <CEC_CAN_IRQHandler+0x312>
 8004aec:	e0da      	b.n	8004ca4 <CEC_CAN_IRQHandler+0x4c8>

  	    		printf("Fifo 1 message pending ! \r\n");
 8004aee:	4b25      	ldr	r3, [pc, #148]	; (8004b84 <CEC_CAN_IRQHandler+0x3a8>)
 8004af0:	0018      	movs	r0, r3
 8004af2:	f001 f997 	bl	8005e24 <puts>
  	    		receiveDataFrame();
 8004af6:	f7fe fff5 	bl	8003ae4 <receiveDataFrame>

  	    		// Ask for informations about the four next passes
  	    		if (numberOfDataFrameReceived < 24) {
 8004afa:	4b1e      	ldr	r3, [pc, #120]	; (8004b74 <CEC_CAN_IRQHandler+0x398>)
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	2b17      	cmp	r3, #23
 8004b00:	d802      	bhi.n	8004b08 <CEC_CAN_IRQHandler+0x32c>
  	    		    sendRemoteFrame();
 8004b02:	f7fe ff0d 	bl	8003920 <sendRemoteFrame>
 8004b06:	e0cd      	b.n	8004ca4 <CEC_CAN_IRQHandler+0x4c8>
  	    		}

  	    		// Disable CAN IRQ if we already have the informations about the four next passes
  	    		else {

  	    			for(int i = 0; i < 4; i++){
 8004b08:	2300      	movs	r3, #0
 8004b0a:	61fb      	str	r3, [r7, #28]
 8004b0c:	e0c0      	b.n	8004c90 <CEC_CAN_IRQHandler+0x4b4>
 8004b0e:	46c0      	nop			; (mov r8, r8)
 8004b10:	40006400 	.word	0x40006400
 8004b14:	08008f28 	.word	0x08008f28
 8004b18:	08008f50 	.word	0x08008f50
 8004b1c:	08008f90 	.word	0x08008f90
 8004b20:	08008fac 	.word	0x08008fac
 8004b24:	08008fe0 	.word	0x08008fe0
 8004b28:	fffffeff 	.word	0xfffffeff
 8004b2c:	fffffdff 	.word	0xfffffdff
 8004b30:	fffffbff 	.word	0xfffffbff
 8004b34:	fffff7ff 	.word	0xfffff7ff
 8004b38:	08009008 	.word	0x08009008
 8004b3c:	08009030 	.word	0x08009030
 8004b40:	08009070 	.word	0x08009070
 8004b44:	080090a4 	.word	0x080090a4
 8004b48:	fffeffff 	.word	0xfffeffff
 8004b4c:	fffdffff 	.word	0xfffdffff
 8004b50:	fffbffff 	.word	0xfffbffff
 8004b54:	fff7ffff 	.word	0xfff7ffff
 8004b58:	080090cc 	.word	0x080090cc
 8004b5c:	080090f4 	.word	0x080090f4
 8004b60:	08009130 	.word	0x08009130
 8004b64:	08009164 	.word	0x08009164
 8004b68:	0800918c 	.word	0x0800918c
 8004b6c:	080091a0 	.word	0x080091a0
 8004b70:	080091b0 	.word	0x080091b0
 8004b74:	2000020c 	.word	0x2000020c
 8004b78:	080091cc 	.word	0x080091cc
 8004b7c:	0800921c 	.word	0x0800921c
 8004b80:	08009230 	.word	0x08009230
 8004b84:	08009240 	.word	0x08009240

  	    			    printf("***** PASS %d ***** \r\n", i+1);
 8004b88:	69fb      	ldr	r3, [r7, #28]
 8004b8a:	1c5a      	adds	r2, r3, #1
 8004b8c:	4ba0      	ldr	r3, [pc, #640]	; (8004e10 <CEC_CAN_IRQHandler+0x634>)
 8004b8e:	0011      	movs	r1, r2
 8004b90:	0018      	movs	r0, r3
 8004b92:	f001 f8cd 	bl	8005d30 <iprintf>

  	    			    printf("%ld/%ld/%ld\r\n", passes[i].passTime.year, passes[i].passTime.month,passes[i].passTime.day);
 8004b96:	4b9f      	ldr	r3, [pc, #636]	; (8004e14 <CEC_CAN_IRQHandler+0x638>)
 8004b98:	69fa      	ldr	r2, [r7, #28]
 8004b9a:	2164      	movs	r1, #100	; 0x64
 8004b9c:	434a      	muls	r2, r1
 8004b9e:	58d4      	ldr	r4, [r2, r3]
 8004ba0:	4a9c      	ldr	r2, [pc, #624]	; (8004e14 <CEC_CAN_IRQHandler+0x638>)
 8004ba2:	69fb      	ldr	r3, [r7, #28]
 8004ba4:	2164      	movs	r1, #100	; 0x64
 8004ba6:	434b      	muls	r3, r1
 8004ba8:	18d3      	adds	r3, r2, r3
 8004baa:	3304      	adds	r3, #4
 8004bac:	681d      	ldr	r5, [r3, #0]
 8004bae:	4a99      	ldr	r2, [pc, #612]	; (8004e14 <CEC_CAN_IRQHandler+0x638>)
 8004bb0:	69fb      	ldr	r3, [r7, #28]
 8004bb2:	2164      	movs	r1, #100	; 0x64
 8004bb4:	434b      	muls	r3, r1
 8004bb6:	18d3      	adds	r3, r2, r3
 8004bb8:	3308      	adds	r3, #8
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	4896      	ldr	r0, [pc, #600]	; (8004e18 <CEC_CAN_IRQHandler+0x63c>)
 8004bbe:	002a      	movs	r2, r5
 8004bc0:	0021      	movs	r1, r4
 8004bc2:	f001 f8b5 	bl	8005d30 <iprintf>
  	    			    printf("%ld:%ld:%ld\r\n",passes[i].passTime.hour, passes[i].passTime.minute,passes[i].passTime.second);
 8004bc6:	4a93      	ldr	r2, [pc, #588]	; (8004e14 <CEC_CAN_IRQHandler+0x638>)
 8004bc8:	69fb      	ldr	r3, [r7, #28]
 8004bca:	2164      	movs	r1, #100	; 0x64
 8004bcc:	434b      	muls	r3, r1
 8004bce:	18d3      	adds	r3, r2, r3
 8004bd0:	330c      	adds	r3, #12
 8004bd2:	681c      	ldr	r4, [r3, #0]
 8004bd4:	4a8f      	ldr	r2, [pc, #572]	; (8004e14 <CEC_CAN_IRQHandler+0x638>)
 8004bd6:	69fb      	ldr	r3, [r7, #28]
 8004bd8:	2164      	movs	r1, #100	; 0x64
 8004bda:	434b      	muls	r3, r1
 8004bdc:	18d3      	adds	r3, r2, r3
 8004bde:	3310      	adds	r3, #16
 8004be0:	681d      	ldr	r5, [r3, #0]
 8004be2:	4a8c      	ldr	r2, [pc, #560]	; (8004e14 <CEC_CAN_IRQHandler+0x638>)
 8004be4:	69fb      	ldr	r3, [r7, #28]
 8004be6:	2164      	movs	r1, #100	; 0x64
 8004be8:	434b      	muls	r3, r1
 8004bea:	18d3      	adds	r3, r2, r3
 8004bec:	3314      	adds	r3, #20
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	488a      	ldr	r0, [pc, #552]	; (8004e1c <CEC_CAN_IRQHandler+0x640>)
 8004bf2:	002a      	movs	r2, r5
 8004bf4:	0021      	movs	r1, r4
 8004bf6:	f001 f89b 	bl	8005d30 <iprintf>
  	    			    printf("%f\r\n", passes[i].transitTimeMinute);
 8004bfa:	4a86      	ldr	r2, [pc, #536]	; (8004e14 <CEC_CAN_IRQHandler+0x638>)
 8004bfc:	69fb      	ldr	r3, [r7, #28]
 8004bfe:	2164      	movs	r1, #100	; 0x64
 8004c00:	434b      	muls	r3, r1
 8004c02:	18d3      	adds	r3, r2, r3
 8004c04:	3318      	adds	r3, #24
 8004c06:	681b      	ldr	r3, [r3, #0]
 8004c08:	1c18      	adds	r0, r3, #0
 8004c0a:	f7fe f8e1 	bl	8002dd0 <__aeabi_f2d>
 8004c0e:	0003      	movs	r3, r0
 8004c10:	000c      	movs	r4, r1
 8004c12:	4983      	ldr	r1, [pc, #524]	; (8004e20 <CEC_CAN_IRQHandler+0x644>)
 8004c14:	001a      	movs	r2, r3
 8004c16:	0023      	movs	r3, r4
 8004c18:	0008      	movs	r0, r1
 8004c1a:	f001 f889 	bl	8005d30 <iprintf>
  	    			    printf("%f\r\n", passes[i].startPoint.azCoordinate);
 8004c1e:	4a7d      	ldr	r2, [pc, #500]	; (8004e14 <CEC_CAN_IRQHandler+0x638>)
 8004c20:	69fb      	ldr	r3, [r7, #28]
 8004c22:	2164      	movs	r1, #100	; 0x64
 8004c24:	434b      	muls	r3, r1
 8004c26:	18d3      	adds	r3, r2, r3
 8004c28:	3320      	adds	r3, #32
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	1c18      	adds	r0, r3, #0
 8004c2e:	f7fe f8cf 	bl	8002dd0 <__aeabi_f2d>
 8004c32:	0003      	movs	r3, r0
 8004c34:	000c      	movs	r4, r1
 8004c36:	497a      	ldr	r1, [pc, #488]	; (8004e20 <CEC_CAN_IRQHandler+0x644>)
 8004c38:	001a      	movs	r2, r3
 8004c3a:	0023      	movs	r3, r4
 8004c3c:	0008      	movs	r0, r1
 8004c3e:	f001 f877 	bl	8005d30 <iprintf>
  	    			    printf("%f\r\n", passes[i].endPoint.azCoordinate);
 8004c42:	4a74      	ldr	r2, [pc, #464]	; (8004e14 <CEC_CAN_IRQHandler+0x638>)
 8004c44:	69fb      	ldr	r3, [r7, #28]
 8004c46:	2164      	movs	r1, #100	; 0x64
 8004c48:	434b      	muls	r3, r1
 8004c4a:	18d3      	adds	r3, r2, r3
 8004c4c:	3328      	adds	r3, #40	; 0x28
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	1c18      	adds	r0, r3, #0
 8004c52:	f7fe f8bd 	bl	8002dd0 <__aeabi_f2d>
 8004c56:	0003      	movs	r3, r0
 8004c58:	000c      	movs	r4, r1
 8004c5a:	4971      	ldr	r1, [pc, #452]	; (8004e20 <CEC_CAN_IRQHandler+0x644>)
 8004c5c:	001a      	movs	r2, r3
 8004c5e:	0023      	movs	r3, r4
 8004c60:	0008      	movs	r0, r1
 8004c62:	f001 f865 	bl	8005d30 <iprintf>
  	    			    printf("%f\r\n", passes[i].peakPoint.elCoordinate);
 8004c66:	4a6b      	ldr	r2, [pc, #428]	; (8004e14 <CEC_CAN_IRQHandler+0x638>)
 8004c68:	69fb      	ldr	r3, [r7, #28]
 8004c6a:	2164      	movs	r1, #100	; 0x64
 8004c6c:	434b      	muls	r3, r1
 8004c6e:	18d3      	adds	r3, r2, r3
 8004c70:	3334      	adds	r3, #52	; 0x34
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	1c18      	adds	r0, r3, #0
 8004c76:	f7fe f8ab 	bl	8002dd0 <__aeabi_f2d>
 8004c7a:	0003      	movs	r3, r0
 8004c7c:	000c      	movs	r4, r1
 8004c7e:	4968      	ldr	r1, [pc, #416]	; (8004e20 <CEC_CAN_IRQHandler+0x644>)
 8004c80:	001a      	movs	r2, r3
 8004c82:	0023      	movs	r3, r4
 8004c84:	0008      	movs	r0, r1
 8004c86:	f001 f853 	bl	8005d30 <iprintf>
  	    			for(int i = 0; i < 4; i++){
 8004c8a:	69fb      	ldr	r3, [r7, #28]
 8004c8c:	3301      	adds	r3, #1
 8004c8e:	61fb      	str	r3, [r7, #28]
 8004c90:	69fb      	ldr	r3, [r7, #28]
 8004c92:	2b03      	cmp	r3, #3
 8004c94:	dc00      	bgt.n	8004c98 <CEC_CAN_IRQHandler+0x4bc>
 8004c96:	e777      	b.n	8004b88 <CEC_CAN_IRQHandler+0x3ac>

  	    			}

  	    			printf("Disable CAN IRQ because we have the informations about the 4 next passes ! \r\n");
 8004c98:	4b62      	ldr	r3, [pc, #392]	; (8004e24 <CEC_CAN_IRQHandler+0x648>)
 8004c9a:	0018      	movs	r0, r3
 8004c9c:	f001 f8c2 	bl	8005e24 <puts>
  	    			canDisableIRQ();
 8004ca0:	f7ff fd66 	bl	8004770 <canDisableIRQ>
  	  	}

  	/********** STATUS CHANGE ERROR INTERRUPT **********/

	// Sleep aknowledge
	if ((interrupts & CAN_IER_SLKIE) != 0U) {
 8004ca4:	69ba      	ldr	r2, [r7, #24]
 8004ca6:	2380      	movs	r3, #128	; 0x80
 8004ca8:	029b      	lsls	r3, r3, #10
 8004caa:	4013      	ands	r3, r2
 8004cac:	d00d      	beq.n	8004cca <CEC_CAN_IRQHandler+0x4ee>

    	if ((msrflags & CAN_MSR_SLAKI) != 0U) {
 8004cae:	697b      	ldr	r3, [r7, #20]
 8004cb0:	2210      	movs	r2, #16
 8004cb2:	4013      	ands	r3, r2
 8004cb4:	d009      	beq.n	8004cca <CEC_CAN_IRQHandler+0x4ee>

    		printf("Sleep aknowledge for the can ! \r\n");
 8004cb6:	4b5c      	ldr	r3, [pc, #368]	; (8004e28 <CEC_CAN_IRQHandler+0x64c>)
 8004cb8:	0018      	movs	r0, r3
 8004cba:	f001 f8b3 	bl	8005e24 <puts>

    		// Clear Sleep interrupt Flag
    		CAN->MSR &= ~CAN_MSR_SLAKI_Msk;
 8004cbe:	4b5b      	ldr	r3, [pc, #364]	; (8004e2c <CEC_CAN_IRQHandler+0x650>)
 8004cc0:	685a      	ldr	r2, [r3, #4]
 8004cc2:	4b5a      	ldr	r3, [pc, #360]	; (8004e2c <CEC_CAN_IRQHandler+0x650>)
 8004cc4:	2110      	movs	r1, #16
 8004cc6:	438a      	bics	r2, r1
 8004cc8:	605a      	str	r2, [r3, #4]
    	}
  	}

	// WakeUp aknowledge
  	if ((interrupts & CAN_IER_WKUIE) != 0U){
 8004cca:	69ba      	ldr	r2, [r7, #24]
 8004ccc:	2380      	movs	r3, #128	; 0x80
 8004cce:	025b      	lsls	r3, r3, #9
 8004cd0:	4013      	ands	r3, r2
 8004cd2:	d00d      	beq.n	8004cf0 <CEC_CAN_IRQHandler+0x514>

    	if ((msrflags & CAN_MSR_WKUI) != 0U){
 8004cd4:	697b      	ldr	r3, [r7, #20]
 8004cd6:	2208      	movs	r2, #8
 8004cd8:	4013      	ands	r3, r2
 8004cda:	d009      	beq.n	8004cf0 <CEC_CAN_IRQHandler+0x514>


      	printf("Wakeup aknowledge for the can ! \r\n");
 8004cdc:	4b54      	ldr	r3, [pc, #336]	; (8004e30 <CEC_CAN_IRQHandler+0x654>)
 8004cde:	0018      	movs	r0, r3
 8004ce0:	f001 f8a0 	bl	8005e24 <puts>

      	// Clear WakeUp Flag
     	CAN->MSR &= ~CAN_MSR_WKUI_Msk;
 8004ce4:	4b51      	ldr	r3, [pc, #324]	; (8004e2c <CEC_CAN_IRQHandler+0x650>)
 8004ce6:	685a      	ldr	r2, [r3, #4]
 8004ce8:	4b50      	ldr	r3, [pc, #320]	; (8004e2c <CEC_CAN_IRQHandler+0x650>)
 8004cea:	2108      	movs	r1, #8
 8004cec:	438a      	bics	r2, r1
 8004cee:	605a      	str	r2, [r3, #4]

    	}
  	}

  	// Error
	if ((interrupts & CAN_IER_ERRIE) != 0U){
 8004cf0:	69ba      	ldr	r2, [r7, #24]
 8004cf2:	2380      	movs	r3, #128	; 0x80
 8004cf4:	021b      	lsls	r3, r3, #8
 8004cf6:	4013      	ands	r3, r2
 8004cf8:	d100      	bne.n	8004cfc <CEC_CAN_IRQHandler+0x520>
 8004cfa:	e085      	b.n	8004e08 <CEC_CAN_IRQHandler+0x62c>

    	if ((msrflags & CAN_MSR_ERRI) != 0U){
 8004cfc:	697b      	ldr	r3, [r7, #20]
 8004cfe:	2204      	movs	r2, #4
 8004d00:	4013      	ands	r3, r2
 8004d02:	d100      	bne.n	8004d06 <CEC_CAN_IRQHandler+0x52a>
 8004d04:	e07a      	b.n	8004dfc <CEC_CAN_IRQHandler+0x620>

      		// Error Warning Flag
      		if (((interrupts & CAN_IER_EWGIE) != 0U) && ((esrflags & CAN_ESR_EWGF) != 0U)){
 8004d06:	69ba      	ldr	r2, [r7, #24]
 8004d08:	2380      	movs	r3, #128	; 0x80
 8004d0a:	005b      	lsls	r3, r3, #1
 8004d0c:	4013      	ands	r3, r2
 8004d0e:	d007      	beq.n	8004d20 <CEC_CAN_IRQHandler+0x544>
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	2201      	movs	r2, #1
 8004d14:	4013      	ands	r3, r2
 8004d16:	d003      	beq.n	8004d20 <CEC_CAN_IRQHandler+0x544>

        		printf("Error warning flag ! \r\n");
 8004d18:	4b46      	ldr	r3, [pc, #280]	; (8004e34 <CEC_CAN_IRQHandler+0x658>)
 8004d1a:	0018      	movs	r0, r3
 8004d1c:	f001 f882 	bl	8005e24 <puts>

      		}

      		// Error Passive Flag
      		if (((CAN_IER_EPVIE) != 0U) && ((esrflags & CAN_ESR_EPVF) != 0U)) {
 8004d20:	687b      	ldr	r3, [r7, #4]
 8004d22:	2202      	movs	r2, #2
 8004d24:	4013      	ands	r3, r2
 8004d26:	d003      	beq.n	8004d30 <CEC_CAN_IRQHandler+0x554>


        		printf("Error passive flag ! \r\n");
 8004d28:	4b43      	ldr	r3, [pc, #268]	; (8004e38 <CEC_CAN_IRQHandler+0x65c>)
 8004d2a:	0018      	movs	r0, r3
 8004d2c:	f001 f87a 	bl	8005e24 <puts>

      		}

      		// Bus-off Flag
      		if (((interrupts & CAN_IER_BOFIE) != 0U) && ((esrflags & CAN_ESR_BOFF) != 0U)) {
 8004d30:	69ba      	ldr	r2, [r7, #24]
 8004d32:	2380      	movs	r3, #128	; 0x80
 8004d34:	00db      	lsls	r3, r3, #3
 8004d36:	4013      	ands	r3, r2
 8004d38:	d007      	beq.n	8004d4a <CEC_CAN_IRQHandler+0x56e>
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	2204      	movs	r2, #4
 8004d3e:	4013      	ands	r3, r2
 8004d40:	d003      	beq.n	8004d4a <CEC_CAN_IRQHandler+0x56e>

        		printf("Error bus-off flag ! \r\n");
 8004d42:	4b3e      	ldr	r3, [pc, #248]	; (8004e3c <CEC_CAN_IRQHandler+0x660>)
 8004d44:	0018      	movs	r0, r3
 8004d46:	f001 f86d 	bl	8005e24 <puts>

      		}

      		// Error Code Flag
      		if (((interrupts & CAN_IER_LECIE) != 0U) && ((esrflags & CAN_ESR_LEC) != 0U)) {
 8004d4a:	69ba      	ldr	r2, [r7, #24]
 8004d4c:	2380      	movs	r3, #128	; 0x80
 8004d4e:	011b      	lsls	r3, r3, #4
 8004d50:	4013      	ands	r3, r2
 8004d52:	d053      	beq.n	8004dfc <CEC_CAN_IRQHandler+0x620>
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	2270      	movs	r2, #112	; 0x70
 8004d58:	4013      	ands	r3, r2
 8004d5a:	d04f      	beq.n	8004dfc <CEC_CAN_IRQHandler+0x620>

      			sendRemoteFrame();
 8004d5c:	f7fe fde0 	bl	8003920 <sendRemoteFrame>

        		switch (esrflags & CAN_ESR_LEC) {
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	2270      	movs	r2, #112	; 0x70
 8004d64:	4013      	ands	r3, r2
 8004d66:	2b30      	cmp	r3, #48	; 0x30
 8004d68:	d01e      	beq.n	8004da8 <CEC_CAN_IRQHandler+0x5cc>
 8004d6a:	d804      	bhi.n	8004d76 <CEC_CAN_IRQHandler+0x59a>
 8004d6c:	2b10      	cmp	r3, #16
 8004d6e:	d009      	beq.n	8004d84 <CEC_CAN_IRQHandler+0x5a8>
 8004d70:	2b20      	cmp	r3, #32
 8004d72:	d010      	beq.n	8004d96 <CEC_CAN_IRQHandler+0x5ba>
            		printf("CRC error ! \r\n");
          			printf("Send new remote frame ! \r\n");
           			break;

          			default:
            		break;
 8004d74:	e03c      	b.n	8004df0 <CEC_CAN_IRQHandler+0x614>
        		switch (esrflags & CAN_ESR_LEC) {
 8004d76:	2b50      	cmp	r3, #80	; 0x50
 8004d78:	d028      	beq.n	8004dcc <CEC_CAN_IRQHandler+0x5f0>
 8004d7a:	2b60      	cmp	r3, #96	; 0x60
 8004d7c:	d02f      	beq.n	8004dde <CEC_CAN_IRQHandler+0x602>
 8004d7e:	2b40      	cmp	r3, #64	; 0x40
 8004d80:	d01b      	beq.n	8004dba <CEC_CAN_IRQHandler+0x5de>
            		break;
 8004d82:	e035      	b.n	8004df0 <CEC_CAN_IRQHandler+0x614>
            		printf("Stuff error ! \r\n");
 8004d84:	4b2e      	ldr	r3, [pc, #184]	; (8004e40 <CEC_CAN_IRQHandler+0x664>)
 8004d86:	0018      	movs	r0, r3
 8004d88:	f001 f84c 	bl	8005e24 <puts>
          			printf("Send new remote frame ! \r\n");
 8004d8c:	4b2d      	ldr	r3, [pc, #180]	; (8004e44 <CEC_CAN_IRQHandler+0x668>)
 8004d8e:	0018      	movs	r0, r3
 8004d90:	f001 f848 	bl	8005e24 <puts>
            		break;
 8004d94:	e02c      	b.n	8004df0 <CEC_CAN_IRQHandler+0x614>
            		printf("Form error ! \r\n");
 8004d96:	4b2c      	ldr	r3, [pc, #176]	; (8004e48 <CEC_CAN_IRQHandler+0x66c>)
 8004d98:	0018      	movs	r0, r3
 8004d9a:	f001 f843 	bl	8005e24 <puts>
          			printf("Send new remote frame ! \r\n");
 8004d9e:	4b29      	ldr	r3, [pc, #164]	; (8004e44 <CEC_CAN_IRQHandler+0x668>)
 8004da0:	0018      	movs	r0, r3
 8004da2:	f001 f83f 	bl	8005e24 <puts>
            		break;
 8004da6:	e023      	b.n	8004df0 <CEC_CAN_IRQHandler+0x614>
            		printf("Acknowledgment error ! \r\n");
 8004da8:	4b28      	ldr	r3, [pc, #160]	; (8004e4c <CEC_CAN_IRQHandler+0x670>)
 8004daa:	0018      	movs	r0, r3
 8004dac:	f001 f83a 	bl	8005e24 <puts>
          			printf("Send new remote frame ! \r\n");
 8004db0:	4b24      	ldr	r3, [pc, #144]	; (8004e44 <CEC_CAN_IRQHandler+0x668>)
 8004db2:	0018      	movs	r0, r3
 8004db4:	f001 f836 	bl	8005e24 <puts>
            		break;
 8004db8:	e01a      	b.n	8004df0 <CEC_CAN_IRQHandler+0x614>
            		printf("Bit recessive error ! \r\n");
 8004dba:	4b25      	ldr	r3, [pc, #148]	; (8004e50 <CEC_CAN_IRQHandler+0x674>)
 8004dbc:	0018      	movs	r0, r3
 8004dbe:	f001 f831 	bl	8005e24 <puts>
          			printf("Send new remote frame ! \r\n");
 8004dc2:	4b20      	ldr	r3, [pc, #128]	; (8004e44 <CEC_CAN_IRQHandler+0x668>)
 8004dc4:	0018      	movs	r0, r3
 8004dc6:	f001 f82d 	bl	8005e24 <puts>
            		break;
 8004dca:	e011      	b.n	8004df0 <CEC_CAN_IRQHandler+0x614>
            		printf("Bit dominant error ! \r\n");
 8004dcc:	4b21      	ldr	r3, [pc, #132]	; (8004e54 <CEC_CAN_IRQHandler+0x678>)
 8004dce:	0018      	movs	r0, r3
 8004dd0:	f001 f828 	bl	8005e24 <puts>
          			printf("Send new remote frame ! \r\n");
 8004dd4:	4b1b      	ldr	r3, [pc, #108]	; (8004e44 <CEC_CAN_IRQHandler+0x668>)
 8004dd6:	0018      	movs	r0, r3
 8004dd8:	f001 f824 	bl	8005e24 <puts>
            		break;
 8004ddc:	e008      	b.n	8004df0 <CEC_CAN_IRQHandler+0x614>
            		printf("CRC error ! \r\n");
 8004dde:	4b1e      	ldr	r3, [pc, #120]	; (8004e58 <CEC_CAN_IRQHandler+0x67c>)
 8004de0:	0018      	movs	r0, r3
 8004de2:	f001 f81f 	bl	8005e24 <puts>
          			printf("Send new remote frame ! \r\n");
 8004de6:	4b17      	ldr	r3, [pc, #92]	; (8004e44 <CEC_CAN_IRQHandler+0x668>)
 8004de8:	0018      	movs	r0, r3
 8004dea:	f001 f81b 	bl	8005e24 <puts>
           			break;
 8004dee:	46c0      	nop			; (mov r8, r8)
        		}


        		// Clear Last error code Flag
        		CAN->ESR &= ~CAN_ESR_LEC_Msk;
 8004df0:	4b0e      	ldr	r3, [pc, #56]	; (8004e2c <CEC_CAN_IRQHandler+0x650>)
 8004df2:	699a      	ldr	r2, [r3, #24]
 8004df4:	4b0d      	ldr	r3, [pc, #52]	; (8004e2c <CEC_CAN_IRQHandler+0x650>)
 8004df6:	2170      	movs	r1, #112	; 0x70
 8004df8:	438a      	bics	r2, r1
 8004dfa:	619a      	str	r2, [r3, #24]
      		}
    	}

    	// Clear ERRI Flag
    	CAN->MSR &= ~CAN_MSR_ERRI_Msk;
 8004dfc:	4b0b      	ldr	r3, [pc, #44]	; (8004e2c <CEC_CAN_IRQHandler+0x650>)
 8004dfe:	685a      	ldr	r2, [r3, #4]
 8004e00:	4b0a      	ldr	r3, [pc, #40]	; (8004e2c <CEC_CAN_IRQHandler+0x650>)
 8004e02:	2104      	movs	r1, #4
 8004e04:	438a      	bics	r2, r1
 8004e06:	605a      	str	r2, [r3, #4]
  	}

}
 8004e08:	46c0      	nop			; (mov r8, r8)
 8004e0a:	46bd      	mov	sp, r7
 8004e0c:	b008      	add	sp, #32
 8004e0e:	bdb0      	pop	{r4, r5, r7, pc}
 8004e10:	0800925c 	.word	0x0800925c
 8004e14:	2000021c 	.word	0x2000021c
 8004e18:	08009274 	.word	0x08009274
 8004e1c:	08009284 	.word	0x08009284
 8004e20:	08009294 	.word	0x08009294
 8004e24:	080091cc 	.word	0x080091cc
 8004e28:	0800929c 	.word	0x0800929c
 8004e2c:	40006400 	.word	0x40006400
 8004e30:	080092c0 	.word	0x080092c0
 8004e34:	080092e4 	.word	0x080092e4
 8004e38:	080092fc 	.word	0x080092fc
 8004e3c:	08009314 	.word	0x08009314
 8004e40:	0800932c 	.word	0x0800932c
 8004e44:	08008f90 	.word	0x08008f90
 8004e48:	0800933c 	.word	0x0800933c
 8004e4c:	0800934c 	.word	0x0800934c
 8004e50:	08009368 	.word	0x08009368
 8004e54:	08009380 	.word	0x08009380
 8004e58:	08009398 	.word	0x08009398

08004e5c <pwmInit>:
/*                                                                            */
/*                   Pulse width modulation (PWM)                             */
/*                                                                            */
/******************************************************************************/

void pwmInit(){
 8004e5c:	b580      	push	{r7, lr}
 8004e5e:	af00      	add	r7, sp, #0

	// Enable GPIOA clock
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8004e60:	4b5a      	ldr	r3, [pc, #360]	; (8004fcc <pwmInit+0x170>)
 8004e62:	695a      	ldr	r2, [r3, #20]
 8004e64:	4b59      	ldr	r3, [pc, #356]	; (8004fcc <pwmInit+0x170>)
 8004e66:	2180      	movs	r1, #128	; 0x80
 8004e68:	0289      	lsls	r1, r1, #10
 8004e6a:	430a      	orrs	r2, r1
 8004e6c:	615a      	str	r2, [r3, #20]

	// Configure PA0 and PA1 AZ direction pin as output pin
	GPIOA->MODER &= ~(GPIO_MODER_MODER0_Msk | GPIO_MODER_MODER1_Msk);
 8004e6e:	2390      	movs	r3, #144	; 0x90
 8004e70:	05db      	lsls	r3, r3, #23
 8004e72:	681a      	ldr	r2, [r3, #0]
 8004e74:	2390      	movs	r3, #144	; 0x90
 8004e76:	05db      	lsls	r3, r3, #23
 8004e78:	210f      	movs	r1, #15
 8004e7a:	438a      	bics	r2, r1
 8004e7c:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |=  (0x01 << GPIO_MODER_MODER0_Pos) | (0x01 << GPIO_MODER_MODER1_Pos);
 8004e7e:	2390      	movs	r3, #144	; 0x90
 8004e80:	05db      	lsls	r3, r3, #23
 8004e82:	681a      	ldr	r2, [r3, #0]
 8004e84:	2390      	movs	r3, #144	; 0x90
 8004e86:	05db      	lsls	r3, r3, #23
 8004e88:	2105      	movs	r1, #5
 8004e8a:	430a      	orrs	r2, r1
 8004e8c:	601a      	str	r2, [r3, #0]

	// Configure PA6 and PA7 EL direction pin as output pin
	GPIOA->MODER &= ~(GPIO_MODER_MODER6_Msk | GPIO_MODER_MODER7_Msk);
 8004e8e:	2390      	movs	r3, #144	; 0x90
 8004e90:	05db      	lsls	r3, r3, #23
 8004e92:	681a      	ldr	r2, [r3, #0]
 8004e94:	2390      	movs	r3, #144	; 0x90
 8004e96:	05db      	lsls	r3, r3, #23
 8004e98:	494d      	ldr	r1, [pc, #308]	; (8004fd0 <pwmInit+0x174>)
 8004e9a:	400a      	ands	r2, r1
 8004e9c:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |=  (0x01 << GPIO_MODER_MODER6_Pos) | (0x01 << GPIO_MODER_MODER7_Pos);
 8004e9e:	2390      	movs	r3, #144	; 0x90
 8004ea0:	05db      	lsls	r3, r3, #23
 8004ea2:	681a      	ldr	r2, [r3, #0]
 8004ea4:	2390      	movs	r3, #144	; 0x90
 8004ea6:	05db      	lsls	r3, r3, #23
 8004ea8:	21a0      	movs	r1, #160	; 0xa0
 8004eaa:	01c9      	lsls	r1, r1, #7
 8004eac:	430a      	orrs	r2, r1
 8004eae:	601a      	str	r2, [r3, #0]

	// Configure PA0 and PA1 AZ direction pin as output pin with open drain (PMOS not present, NMOS only)
	GPIOA->OTYPER |= GPIO_OTYPER_OT_0 | GPIO_OTYPER_OT_1;
 8004eb0:	2390      	movs	r3, #144	; 0x90
 8004eb2:	05db      	lsls	r3, r3, #23
 8004eb4:	685a      	ldr	r2, [r3, #4]
 8004eb6:	2390      	movs	r3, #144	; 0x90
 8004eb8:	05db      	lsls	r3, r3, #23
 8004eba:	2103      	movs	r1, #3
 8004ebc:	430a      	orrs	r2, r1
 8004ebe:	605a      	str	r2, [r3, #4]

	// Configure PA6 and PA7 EL direction pin as output pin with open drain (PMOS not present, NMOS only)
	GPIOA->OTYPER |= GPIO_OTYPER_OT_6 | GPIO_OTYPER_OT_7;
 8004ec0:	2390      	movs	r3, #144	; 0x90
 8004ec2:	05db      	lsls	r3, r3, #23
 8004ec4:	685a      	ldr	r2, [r3, #4]
 8004ec6:	2390      	movs	r3, #144	; 0x90
 8004ec8:	05db      	lsls	r3, r3, #23
 8004eca:	21c0      	movs	r1, #192	; 0xc0
 8004ecc:	430a      	orrs	r2, r1
 8004ece:	605a      	str	r2, [r3, #4]

	// Configure PA0 and PA1 AZ direction pin as output pin with pull up resistor
	GPIOA->PUPDR &= ~(GPIO_PUPDR_PUPDR0_Msk | GPIO_PUPDR_PUPDR1_Msk); // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8004ed0:	2390      	movs	r3, #144	; 0x90
 8004ed2:	05db      	lsls	r3, r3, #23
 8004ed4:	68da      	ldr	r2, [r3, #12]
 8004ed6:	2390      	movs	r3, #144	; 0x90
 8004ed8:	05db      	lsls	r3, r3, #23
 8004eda:	210f      	movs	r1, #15
 8004edc:	438a      	bics	r2, r1
 8004ede:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR |=  (0x01 << GPIO_PUPDR_PUPDR0_Pos) | (0x01 << GPIO_PUPDR_PUPDR1_Pos);
 8004ee0:	2390      	movs	r3, #144	; 0x90
 8004ee2:	05db      	lsls	r3, r3, #23
 8004ee4:	68da      	ldr	r2, [r3, #12]
 8004ee6:	2390      	movs	r3, #144	; 0x90
 8004ee8:	05db      	lsls	r3, r3, #23
 8004eea:	2105      	movs	r1, #5
 8004eec:	430a      	orrs	r2, r1
 8004eee:	60da      	str	r2, [r3, #12]

	// Configure PA6 and PA7 EL direction pin as output pin with pull up resistor
	GPIOA->PUPDR &= ~(GPIO_PUPDR_PUPDR6_Msk | GPIO_PUPDR_PUPDR7_Msk); // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8004ef0:	2390      	movs	r3, #144	; 0x90
 8004ef2:	05db      	lsls	r3, r3, #23
 8004ef4:	68da      	ldr	r2, [r3, #12]
 8004ef6:	2390      	movs	r3, #144	; 0x90
 8004ef8:	05db      	lsls	r3, r3, #23
 8004efa:	4935      	ldr	r1, [pc, #212]	; (8004fd0 <pwmInit+0x174>)
 8004efc:	400a      	ands	r2, r1
 8004efe:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR |=  (0x01 << GPIO_PUPDR_PUPDR6_Pos) | (0x01 << GPIO_PUPDR_PUPDR7_Pos);
 8004f00:	2390      	movs	r3, #144	; 0x90
 8004f02:	05db      	lsls	r3, r3, #23
 8004f04:	68da      	ldr	r2, [r3, #12]
 8004f06:	2390      	movs	r3, #144	; 0x90
 8004f08:	05db      	lsls	r3, r3, #23
 8004f0a:	21a0      	movs	r1, #160	; 0xa0
 8004f0c:	01c9      	lsls	r1, r1, #7
 8004f0e:	430a      	orrs	r2, r1
 8004f10:	60da      	str	r2, [r3, #12]

	// Configure PA8 and PA9 as Alternate Function
	GPIOA->MODER &= ~(GPIO_MODER_MODER8_Msk | GPIO_MODER_MODER9_Msk);
 8004f12:	2390      	movs	r3, #144	; 0x90
 8004f14:	05db      	lsls	r3, r3, #23
 8004f16:	681a      	ldr	r2, [r3, #0]
 8004f18:	2390      	movs	r3, #144	; 0x90
 8004f1a:	05db      	lsls	r3, r3, #23
 8004f1c:	492d      	ldr	r1, [pc, #180]	; (8004fd4 <pwmInit+0x178>)
 8004f1e:	400a      	ands	r2, r1
 8004f20:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |=  (0x02 <<GPIO_MODER_MODER8_Pos) | (0x02 <<GPIO_MODER_MODER9_Pos);
 8004f22:	2390      	movs	r3, #144	; 0x90
 8004f24:	05db      	lsls	r3, r3, #23
 8004f26:	681a      	ldr	r2, [r3, #0]
 8004f28:	2390      	movs	r3, #144	; 0x90
 8004f2a:	05db      	lsls	r3, r3, #23
 8004f2c:	21a0      	movs	r1, #160	; 0xa0
 8004f2e:	0309      	lsls	r1, r1, #12
 8004f30:	430a      	orrs	r2, r1
 8004f32:	601a      	str	r2, [r3, #0]

	// Set PA8 and PA9 to AF2 (TIM1)
	GPIOA->AFR[1] &= ~(0x000000FF);
 8004f34:	2390      	movs	r3, #144	; 0x90
 8004f36:	05db      	lsls	r3, r3, #23
 8004f38:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004f3a:	2390      	movs	r3, #144	; 0x90
 8004f3c:	05db      	lsls	r3, r3, #23
 8004f3e:	21ff      	movs	r1, #255	; 0xff
 8004f40:	438a      	bics	r2, r1
 8004f42:	625a      	str	r2, [r3, #36]	; 0x24
	GPIOA->AFR[1] |=  (0x00000022);
 8004f44:	2390      	movs	r3, #144	; 0x90
 8004f46:	05db      	lsls	r3, r3, #23
 8004f48:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004f4a:	2390      	movs	r3, #144	; 0x90
 8004f4c:	05db      	lsls	r3, r3, #23
 8004f4e:	2122      	movs	r1, #34	; 0x22
 8004f50:	430a      	orrs	r2, r1
 8004f52:	625a      	str	r2, [r3, #36]	; 0x24

	// Enable TIM1 clock
	RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;
 8004f54:	4b1d      	ldr	r3, [pc, #116]	; (8004fcc <pwmInit+0x170>)
 8004f56:	699a      	ldr	r2, [r3, #24]
 8004f58:	4b1c      	ldr	r3, [pc, #112]	; (8004fcc <pwmInit+0x170>)
 8004f5a:	2180      	movs	r1, #128	; 0x80
 8004f5c:	0109      	lsls	r1, r1, #4
 8004f5e:	430a      	orrs	r2, r1
 8004f60:	619a      	str	r2, [r3, #24]

	// Reset TIM1 configuration
	TIM1->CR1 = 0x0000;
 8004f62:	4b1d      	ldr	r3, [pc, #116]	; (8004fd8 <pwmInit+0x17c>)
 8004f64:	2200      	movs	r2, #0
 8004f66:	601a      	str	r2, [r3, #0]
	TIM1->CR2 = 0x0000;
 8004f68:	4b1b      	ldr	r3, [pc, #108]	; (8004fd8 <pwmInit+0x17c>)
 8004f6a:	2200      	movs	r2, #0
 8004f6c:	605a      	str	r2, [r3, #4]
	TIM1->CCER = 0x0000;
 8004f6e:	4b1a      	ldr	r3, [pc, #104]	; (8004fd8 <pwmInit+0x17c>)
 8004f70:	2200      	movs	r2, #0
 8004f72:	621a      	str	r2, [r3, #32]

	// Set TIM1 prescaler to 1MHz counting frequency (1µs resolution)
	TIM1->PSC = (uint16_t) 8 - 1;
 8004f74:	4b18      	ldr	r3, [pc, #96]	; (8004fd8 <pwmInit+0x17c>)
 8004f76:	2207      	movs	r2, #7
 8004f78:	629a      	str	r2, [r3, #40]	; 0x28

	// Set Auto-Reload to period 20 ms
	TIM1->ARR = (uint16_t) 200;
 8004f7a:	4b17      	ldr	r3, [pc, #92]	; (8004fd8 <pwmInit+0x17c>)
 8004f7c:	22c8      	movs	r2, #200	; 0xc8
 8004f7e:	62da      	str	r2, [r3, #44]	; 0x2c

	// Enable Auto-Reload Preload register
	TIM1->CR1 |= TIM_CR1_ARPE;
 8004f80:	4b15      	ldr	r3, [pc, #84]	; (8004fd8 <pwmInit+0x17c>)
 8004f82:	681a      	ldr	r2, [r3, #0]
 8004f84:	4b14      	ldr	r3, [pc, #80]	; (8004fd8 <pwmInit+0x17c>)
 8004f86:	2180      	movs	r1, #128	; 0x80
 8004f88:	430a      	orrs	r2, r1
 8004f8a:	601a      	str	r2, [r3, #0]

	// Setup Input Capture
	TIM1->CCMR1 = 0x0000;
 8004f8c:	4b12      	ldr	r3, [pc, #72]	; (8004fd8 <pwmInit+0x17c>)
 8004f8e:	2200      	movs	r2, #0
 8004f90:	619a      	str	r2, [r3, #24]
	TIM1->CCMR2 = 0x0000;
 8004f92:	4b11      	ldr	r3, [pc, #68]	; (8004fd8 <pwmInit+0x17c>)
 8004f94:	2200      	movs	r2, #0
 8004f96:	61da      	str	r2, [r3, #28]

	// Setup PWM mode 1 output
	TIM1->CCMR1 |= (0x06 <<TIM_CCMR1_OC1M_Pos) | TIM_CCMR1_OC1PE;
 8004f98:	4b0f      	ldr	r3, [pc, #60]	; (8004fd8 <pwmInit+0x17c>)
 8004f9a:	699a      	ldr	r2, [r3, #24]
 8004f9c:	4b0e      	ldr	r3, [pc, #56]	; (8004fd8 <pwmInit+0x17c>)
 8004f9e:	2168      	movs	r1, #104	; 0x68
 8004fa0:	430a      	orrs	r2, r1
 8004fa2:	619a      	str	r2, [r3, #24]
	TIM1->CCMR1 |= (0x06 <<TIM_CCMR1_OC2M_Pos) | TIM_CCMR1_OC2PE;
 8004fa4:	4b0c      	ldr	r3, [pc, #48]	; (8004fd8 <pwmInit+0x17c>)
 8004fa6:	699a      	ldr	r2, [r3, #24]
 8004fa8:	4b0b      	ldr	r3, [pc, #44]	; (8004fd8 <pwmInit+0x17c>)
 8004faa:	21d0      	movs	r1, #208	; 0xd0
 8004fac:	01c9      	lsls	r1, r1, #7
 8004fae:	430a      	orrs	r2, r1
 8004fb0:	619a      	str	r2, [r3, #24]

	// Set default PWM values
	TIM1->CCR1 = 0x0000;
 8004fb2:	4b09      	ldr	r3, [pc, #36]	; (8004fd8 <pwmInit+0x17c>)
 8004fb4:	2200      	movs	r2, #0
 8004fb6:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR2 = 0x0000;
 8004fb8:	4b07      	ldr	r3, [pc, #28]	; (8004fd8 <pwmInit+0x17c>)
 8004fba:	2200      	movs	r2, #0
 8004fbc:	639a      	str	r2, [r3, #56]	; 0x38

	printf("PWM INIT OK ! \r\n");
 8004fbe:	4b07      	ldr	r3, [pc, #28]	; (8004fdc <pwmInit+0x180>)
 8004fc0:	0018      	movs	r0, r3
 8004fc2:	f000 ff2f 	bl	8005e24 <puts>
}
 8004fc6:	46c0      	nop			; (mov r8, r8)
 8004fc8:	46bd      	mov	sp, r7
 8004fca:	bd80      	pop	{r7, pc}
 8004fcc:	40021000 	.word	0x40021000
 8004fd0:	ffff0fff 	.word	0xffff0fff
 8004fd4:	fff0ffff 	.word	0xfff0ffff
 8004fd8:	40012c00 	.word	0x40012c00
 8004fdc:	080093a8 	.word	0x080093a8

08004fe0 <pwmHomeStart>:

void pwmHomeStart(){
 8004fe0:	b580      	push	{r7, lr}
 8004fe2:	af00      	add	r7, sp, #0

	/*********** SET AZ HOMING ROTATION DIRECTION TO CLOCKWISE **********/

	// AZ direction pins are PA0 and PA1
	GPIOA->ODR |= GPIO_ODR_0; // Set PA0 value to low
 8004fe4:	2390      	movs	r3, #144	; 0x90
 8004fe6:	05db      	lsls	r3, r3, #23
 8004fe8:	695a      	ldr	r2, [r3, #20]
 8004fea:	2390      	movs	r3, #144	; 0x90
 8004fec:	05db      	lsls	r3, r3, #23
 8004fee:	2101      	movs	r1, #1
 8004ff0:	430a      	orrs	r2, r1
 8004ff2:	615a      	str	r2, [r3, #20]
	GPIOA->ODR &= ~(GPIO_ODR_1); // Set PA1 value to high
 8004ff4:	2390      	movs	r3, #144	; 0x90
 8004ff6:	05db      	lsls	r3, r3, #23
 8004ff8:	695a      	ldr	r2, [r3, #20]
 8004ffa:	2390      	movs	r3, #144	; 0x90
 8004ffc:	05db      	lsls	r3, r3, #23
 8004ffe:	2102      	movs	r1, #2
 8005000:	438a      	bics	r2, r1
 8005002:	615a      	str	r2, [r3, #20]

	/*********** SET EL HOMING ROTATION DIRECTION TO CLOCKWISE **********/

	// EL direction pins are PA6 and PA7
	GPIOA->ODR |= GPIO_ODR_6; // Set PA6 value to low
 8005004:	2390      	movs	r3, #144	; 0x90
 8005006:	05db      	lsls	r3, r3, #23
 8005008:	695a      	ldr	r2, [r3, #20]
 800500a:	2390      	movs	r3, #144	; 0x90
 800500c:	05db      	lsls	r3, r3, #23
 800500e:	2140      	movs	r1, #64	; 0x40
 8005010:	430a      	orrs	r2, r1
 8005012:	615a      	str	r2, [r3, #20]
	GPIOA->ODR &= ~(GPIO_ODR_7); // Set PA7 value to high
 8005014:	2390      	movs	r3, #144	; 0x90
 8005016:	05db      	lsls	r3, r3, #23
 8005018:	695a      	ldr	r2, [r3, #20]
 800501a:	2390      	movs	r3, #144	; 0x90
 800501c:	05db      	lsls	r3, r3, #23
 800501e:	2180      	movs	r1, #128	; 0x80
 8005020:	438a      	bics	r2, r1
 8005022:	615a      	str	r2, [r3, #20]

	/*********** AZ and EL MOTOR TURN AT THE MAXIMUM SPEED **********/

	// Timer 1 channel 1 is PA8 pin and Timer 1 channel 2 is PA9 pin
	TIM1->CCR1 = (uint16_t) 2000;
 8005024:	4b13      	ldr	r3, [pc, #76]	; (8005074 <pwmHomeStart+0x94>)
 8005026:	22fa      	movs	r2, #250	; 0xfa
 8005028:	00d2      	lsls	r2, r2, #3
 800502a:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR2 = (uint16_t) 2000;
 800502c:	4b11      	ldr	r3, [pc, #68]	; (8005074 <pwmHomeStart+0x94>)
 800502e:	22fa      	movs	r2, #250	; 0xfa
 8005030:	00d2      	lsls	r2, r2, #3
 8005032:	639a      	str	r2, [r3, #56]	; 0x38

	// Resets TIM1 counter
	TIM1->EGR |= TIM_EGR_UG;
 8005034:	4b0f      	ldr	r3, [pc, #60]	; (8005074 <pwmHomeStart+0x94>)
 8005036:	695a      	ldr	r2, [r3, #20]
 8005038:	4b0e      	ldr	r3, [pc, #56]	; (8005074 <pwmHomeStart+0x94>)
 800503a:	2101      	movs	r1, #1
 800503c:	430a      	orrs	r2, r1
 800503e:	615a      	str	r2, [r3, #20]

	// Enable Outputs
	TIM1->CCER |= TIM_CCER_CC1E | TIM_CCER_CC2E;
 8005040:	4b0c      	ldr	r3, [pc, #48]	; (8005074 <pwmHomeStart+0x94>)
 8005042:	6a1a      	ldr	r2, [r3, #32]
 8005044:	4b0b      	ldr	r3, [pc, #44]	; (8005074 <pwmHomeStart+0x94>)
 8005046:	2111      	movs	r1, #17
 8005048:	430a      	orrs	r2, r1
 800504a:	621a      	str	r2, [r3, #32]

	// Enable Main output
	TIM1->BDTR |= TIM_BDTR_MOE;
 800504c:	4b09      	ldr	r3, [pc, #36]	; (8005074 <pwmHomeStart+0x94>)
 800504e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005050:	4b08      	ldr	r3, [pc, #32]	; (8005074 <pwmHomeStart+0x94>)
 8005052:	2180      	movs	r1, #128	; 0x80
 8005054:	0209      	lsls	r1, r1, #8
 8005056:	430a      	orrs	r2, r1
 8005058:	645a      	str	r2, [r3, #68]	; 0x44

	// Enable TIM1
	TIM1->CR1 |= TIM_CR1_CEN;
 800505a:	4b06      	ldr	r3, [pc, #24]	; (8005074 <pwmHomeStart+0x94>)
 800505c:	681a      	ldr	r2, [r3, #0]
 800505e:	4b05      	ldr	r3, [pc, #20]	; (8005074 <pwmHomeStart+0x94>)
 8005060:	2101      	movs	r1, #1
 8005062:	430a      	orrs	r2, r1
 8005064:	601a      	str	r2, [r3, #0]

	printf("PWM HOME START ! \r\n");
 8005066:	4b04      	ldr	r3, [pc, #16]	; (8005078 <pwmHomeStart+0x98>)
 8005068:	0018      	movs	r0, r3
 800506a:	f000 fedb 	bl	8005e24 <puts>

}
 800506e:	46c0      	nop			; (mov r8, r8)
 8005070:	46bd      	mov	sp, r7
 8005072:	bd80      	pop	{r7, pc}
 8005074:	40012c00 	.word	0x40012c00
 8005078:	080093b8 	.word	0x080093b8

0800507c <pwmHomeUpdate>:

void pwmHomeUpdate(){
 800507c:	b580      	push	{r7, lr}
 800507e:	af00      	add	r7, sp, #0


	TIM1->CCR1 = (!isHomeAz) ? (uint16_t) 2000 : (uint16_t) 0;
 8005080:	4b13      	ldr	r3, [pc, #76]	; (80050d0 <pwmHomeUpdate+0x54>)
 8005082:	781b      	ldrb	r3, [r3, #0]
 8005084:	2b00      	cmp	r3, #0
 8005086:	d102      	bne.n	800508e <pwmHomeUpdate+0x12>
 8005088:	23fa      	movs	r3, #250	; 0xfa
 800508a:	00da      	lsls	r2, r3, #3
 800508c:	e000      	b.n	8005090 <pwmHomeUpdate+0x14>
 800508e:	2200      	movs	r2, #0
 8005090:	4b10      	ldr	r3, [pc, #64]	; (80050d4 <pwmHomeUpdate+0x58>)
 8005092:	635a      	str	r2, [r3, #52]	; 0x34

	if(isHomeAz){
 8005094:	4b0e      	ldr	r3, [pc, #56]	; (80050d0 <pwmHomeUpdate+0x54>)
 8005096:	781b      	ldrb	r3, [r3, #0]
 8005098:	2b00      	cmp	r3, #0
 800509a:	d003      	beq.n	80050a4 <pwmHomeUpdate+0x28>
		printf("Set az pwm speed to 0 \r\n");
 800509c:	4b0e      	ldr	r3, [pc, #56]	; (80050d8 <pwmHomeUpdate+0x5c>)
 800509e:	0018      	movs	r0, r3
 80050a0:	f000 fec0 	bl	8005e24 <puts>
	}

	TIM1->CCR2 = (!isHomeEl) ? (uint16_t) 2000 : (uint16_t) 0;
 80050a4:	4b0d      	ldr	r3, [pc, #52]	; (80050dc <pwmHomeUpdate+0x60>)
 80050a6:	781b      	ldrb	r3, [r3, #0]
 80050a8:	2b00      	cmp	r3, #0
 80050aa:	d102      	bne.n	80050b2 <pwmHomeUpdate+0x36>
 80050ac:	23fa      	movs	r3, #250	; 0xfa
 80050ae:	00da      	lsls	r2, r3, #3
 80050b0:	e000      	b.n	80050b4 <pwmHomeUpdate+0x38>
 80050b2:	2200      	movs	r2, #0
 80050b4:	4b07      	ldr	r3, [pc, #28]	; (80050d4 <pwmHomeUpdate+0x58>)
 80050b6:	639a      	str	r2, [r3, #56]	; 0x38

	if(isHomeEl){
 80050b8:	4b08      	ldr	r3, [pc, #32]	; (80050dc <pwmHomeUpdate+0x60>)
 80050ba:	781b      	ldrb	r3, [r3, #0]
 80050bc:	2b00      	cmp	r3, #0
 80050be:	d003      	beq.n	80050c8 <pwmHomeUpdate+0x4c>
		printf("Set el pwm speed to 0 \r\n");
 80050c0:	4b07      	ldr	r3, [pc, #28]	; (80050e0 <pwmHomeUpdate+0x64>)
 80050c2:	0018      	movs	r0, r3
 80050c4:	f000 feae 	bl	8005e24 <puts>
	}

}
 80050c8:	46c0      	nop			; (mov r8, r8)
 80050ca:	46bd      	mov	sp, r7
 80050cc:	bd80      	pop	{r7, pc}
 80050ce:	46c0      	nop			; (mov r8, r8)
 80050d0:	200003ac 	.word	0x200003ac
 80050d4:	40012c00 	.word	0x40012c00
 80050d8:	080093cc 	.word	0x080093cc
 80050dc:	200003ad 	.word	0x200003ad
 80050e0:	080093e4 	.word	0x080093e4

080050e4 <pwmHomeStop>:

void pwmHomeStop(){
 80050e4:	b5b0      	push	{r4, r5, r7, lr}
 80050e6:	af00      	add	r7, sp, #0

	isHomeAz = 0;
 80050e8:	4b25      	ldr	r3, [pc, #148]	; (8005180 <pwmHomeStop+0x9c>)
 80050ea:	2200      	movs	r2, #0
 80050ec:	701a      	strb	r2, [r3, #0]
	isHomeEl = 0;
 80050ee:	4b25      	ldr	r3, [pc, #148]	; (8005184 <pwmHomeStop+0xa0>)
 80050f0:	2200      	movs	r2, #0
 80050f2:	701a      	strb	r2, [r3, #0]

	systemPosition.azCoordinate = 0.0;
 80050f4:	4b24      	ldr	r3, [pc, #144]	; (8005188 <pwmHomeStop+0xa4>)
 80050f6:	2200      	movs	r2, #0
 80050f8:	601a      	str	r2, [r3, #0]
	systemPosition.elCoordinate = 0.0;
 80050fa:	4b23      	ldr	r3, [pc, #140]	; (8005188 <pwmHomeStop+0xa4>)
 80050fc:	2200      	movs	r2, #0
 80050fe:	605a      	str	r2, [r3, #4]

	printf("systemPosition.azCoordinate : %f \r\n", systemPosition.azCoordinate);
 8005100:	4b21      	ldr	r3, [pc, #132]	; (8005188 <pwmHomeStop+0xa4>)
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	1c18      	adds	r0, r3, #0
 8005106:	f7fd fe63 	bl	8002dd0 <__aeabi_f2d>
 800510a:	0003      	movs	r3, r0
 800510c:	000c      	movs	r4, r1
 800510e:	491f      	ldr	r1, [pc, #124]	; (800518c <pwmHomeStop+0xa8>)
 8005110:	001a      	movs	r2, r3
 8005112:	0023      	movs	r3, r4
 8005114:	0008      	movs	r0, r1
 8005116:	f000 fe0b 	bl	8005d30 <iprintf>
	printf("systemPosition.elCoordinate : %f \r\n", systemPosition.elCoordinate);
 800511a:	4b1b      	ldr	r3, [pc, #108]	; (8005188 <pwmHomeStop+0xa4>)
 800511c:	685b      	ldr	r3, [r3, #4]
 800511e:	1c18      	adds	r0, r3, #0
 8005120:	f7fd fe56 	bl	8002dd0 <__aeabi_f2d>
 8005124:	0003      	movs	r3, r0
 8005126:	000c      	movs	r4, r1
 8005128:	4919      	ldr	r1, [pc, #100]	; (8005190 <pwmHomeStop+0xac>)
 800512a:	001a      	movs	r2, r3
 800512c:	0023      	movs	r3, r4
 800512e:	0008      	movs	r0, r1
 8005130:	f000 fdfe 	bl	8005d30 <iprintf>

	// Disable TIM1
	TIM1->CR1 &= ~TIM_CR1_CEN;
 8005134:	4b17      	ldr	r3, [pc, #92]	; (8005194 <pwmHomeStop+0xb0>)
 8005136:	681a      	ldr	r2, [r3, #0]
 8005138:	4b16      	ldr	r3, [pc, #88]	; (8005194 <pwmHomeStop+0xb0>)
 800513a:	2101      	movs	r1, #1
 800513c:	438a      	bics	r2, r1
 800513e:	601a      	str	r2, [r3, #0]

	// Resets TIM1 counter
	TIM1->EGR |= TIM_EGR_UG;
 8005140:	4b14      	ldr	r3, [pc, #80]	; (8005194 <pwmHomeStop+0xb0>)
 8005142:	695a      	ldr	r2, [r3, #20]
 8005144:	4b13      	ldr	r3, [pc, #76]	; (8005194 <pwmHomeStop+0xb0>)
 8005146:	2101      	movs	r1, #1
 8005148:	430a      	orrs	r2, r1
 800514a:	615a      	str	r2, [r3, #20]

	// Disable output
	TIM1->CCER &= ~TIM_CCER_CC1E;
 800514c:	4b11      	ldr	r3, [pc, #68]	; (8005194 <pwmHomeStop+0xb0>)
 800514e:	6a1a      	ldr	r2, [r3, #32]
 8005150:	4b10      	ldr	r3, [pc, #64]	; (8005194 <pwmHomeStop+0xb0>)
 8005152:	2101      	movs	r1, #1
 8005154:	438a      	bics	r2, r1
 8005156:	621a      	str	r2, [r3, #32]
	TIM1->CCER &= ~TIM_CCER_CC2E;
 8005158:	4b0e      	ldr	r3, [pc, #56]	; (8005194 <pwmHomeStop+0xb0>)
 800515a:	6a1a      	ldr	r2, [r3, #32]
 800515c:	4b0d      	ldr	r3, [pc, #52]	; (8005194 <pwmHomeStop+0xb0>)
 800515e:	2110      	movs	r1, #16
 8005160:	438a      	bics	r2, r1
 8005162:	621a      	str	r2, [r3, #32]

	// Disable Main output
	TIM1->BDTR &= ~TIM_BDTR_MOE;
 8005164:	4b0b      	ldr	r3, [pc, #44]	; (8005194 <pwmHomeStop+0xb0>)
 8005166:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005168:	4b0a      	ldr	r3, [pc, #40]	; (8005194 <pwmHomeStop+0xb0>)
 800516a:	490b      	ldr	r1, [pc, #44]	; (8005198 <pwmHomeStop+0xb4>)
 800516c:	400a      	ands	r2, r1
 800516e:	645a      	str	r2, [r3, #68]	; 0x44

	printf("PWM HOME STOP ! \r\n");
 8005170:	4b0a      	ldr	r3, [pc, #40]	; (800519c <pwmHomeStop+0xb8>)
 8005172:	0018      	movs	r0, r3
 8005174:	f000 fe56 	bl	8005e24 <puts>
}
 8005178:	46c0      	nop			; (mov r8, r8)
 800517a:	46bd      	mov	sp, r7
 800517c:	bdb0      	pop	{r4, r5, r7, pc}
 800517e:	46c0      	nop			; (mov r8, r8)
 8005180:	200003ac 	.word	0x200003ac
 8005184:	200003ad 	.word	0x200003ad
 8005188:	200003b0 	.word	0x200003b0
 800518c:	080093fc 	.word	0x080093fc
 8005190:	08009420 	.word	0x08009420
 8005194:	40012c00 	.word	0x40012c00
 8005198:	ffff7fff 	.word	0xffff7fff
 800519c:	08009444 	.word	0x08009444

080051a0 <home>:

void home(){
 80051a0:	b580      	push	{r7, lr}
 80051a2:	af00      	add	r7, sp, #0

	// Enable GPIOB clock
	RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 80051a4:	4b37      	ldr	r3, [pc, #220]	; (8005284 <home+0xe4>)
 80051a6:	695a      	ldr	r2, [r3, #20]
 80051a8:	4b36      	ldr	r3, [pc, #216]	; (8005284 <home+0xe4>)
 80051aa:	2180      	movs	r1, #128	; 0x80
 80051ac:	02c9      	lsls	r1, r1, #11
 80051ae:	430a      	orrs	r2, r1
 80051b0:	615a      	str	r2, [r3, #20]

	/*********** CONFIGURE AZ INPUT (PB2) AS AZ ENCODER INDEX (I)  **********/

	// Configure PB2 for AZ Home as input
	GPIOB->MODER &= ~(GPIO_MODER_MODER2_Msk);
 80051b2:	4b35      	ldr	r3, [pc, #212]	; (8005288 <home+0xe8>)
 80051b4:	681a      	ldr	r2, [r3, #0]
 80051b6:	4b34      	ldr	r3, [pc, #208]	; (8005288 <home+0xe8>)
 80051b8:	2130      	movs	r1, #48	; 0x30
 80051ba:	438a      	bics	r2, r1
 80051bc:	601a      	str	r2, [r3, #0]

	// PB2 no pull-up, pull-down
	GPIOB->PUPDR &= ~(GPIO_PUPDR_PUPDR2_Msk);
 80051be:	4b32      	ldr	r3, [pc, #200]	; (8005288 <home+0xe8>)
 80051c0:	68da      	ldr	r2, [r3, #12]
 80051c2:	4b31      	ldr	r3, [pc, #196]	; (8005288 <home+0xe8>)
 80051c4:	2130      	movs	r1, #48	; 0x30
 80051c6:	438a      	bics	r2, r1
 80051c8:	60da      	str	r2, [r3, #12]

	/*********** CONFIGURE EL INPUT (PB3) AS EL ENCODER INDEX (I)  **********/

	// Configure PB3 for EL Home as input
	GPIOB->MODER &= ~(GPIO_MODER_MODER3_Msk);
 80051ca:	4b2f      	ldr	r3, [pc, #188]	; (8005288 <home+0xe8>)
 80051cc:	681a      	ldr	r2, [r3, #0]
 80051ce:	4b2e      	ldr	r3, [pc, #184]	; (8005288 <home+0xe8>)
 80051d0:	21c0      	movs	r1, #192	; 0xc0
 80051d2:	438a      	bics	r2, r1
 80051d4:	601a      	str	r2, [r3, #0]

	// PB3 no pull-up, pull-down
	GPIOB->PUPDR &= ~(GPIO_PUPDR_PUPDR3_Msk);
 80051d6:	4b2c      	ldr	r3, [pc, #176]	; (8005288 <home+0xe8>)
 80051d8:	68da      	ldr	r2, [r3, #12]
 80051da:	4b2b      	ldr	r3, [pc, #172]	; (8005288 <home+0xe8>)
 80051dc:	21c0      	movs	r1, #192	; 0xc0
 80051de:	438a      	bics	r2, r1
 80051e0:	60da      	str	r2, [r3, #12]

	/*********** CONFIGURE INTERRUPTION SOURCES  **********/

	// Enable SYSCFG clock
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 80051e2:	4b28      	ldr	r3, [pc, #160]	; (8005284 <home+0xe4>)
 80051e4:	699a      	ldr	r2, [r3, #24]
 80051e6:	4b27      	ldr	r3, [pc, #156]	; (8005284 <home+0xe4>)
 80051e8:	2101      	movs	r1, #1
 80051ea:	430a      	orrs	r2, r1
 80051ec:	619a      	str	r2, [r3, #24]

	// Select Port B as interrupt source for EXTI line 2 i.e PB2
	SYSCFG->EXTICR[0] &= ~(SYSCFG_EXTICR1_EXTI2_Msk);
 80051ee:	4b27      	ldr	r3, [pc, #156]	; (800528c <home+0xec>)
 80051f0:	689a      	ldr	r2, [r3, #8]
 80051f2:	4b26      	ldr	r3, [pc, #152]	; (800528c <home+0xec>)
 80051f4:	4926      	ldr	r1, [pc, #152]	; (8005290 <home+0xf0>)
 80051f6:	400a      	ands	r2, r1
 80051f8:	609a      	str	r2, [r3, #8]
	SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI2_PB;
 80051fa:	4b24      	ldr	r3, [pc, #144]	; (800528c <home+0xec>)
 80051fc:	689a      	ldr	r2, [r3, #8]
 80051fe:	4b23      	ldr	r3, [pc, #140]	; (800528c <home+0xec>)
 8005200:	2180      	movs	r1, #128	; 0x80
 8005202:	0049      	lsls	r1, r1, #1
 8005204:	430a      	orrs	r2, r1
 8005206:	609a      	str	r2, [r3, #8]

	// Select Port B as interrupt source for EXTI line 3 i.e PB3
	SYSCFG->EXTICR[0] &= ~(SYSCFG_EXTICR1_EXTI3_Msk);
 8005208:	4b20      	ldr	r3, [pc, #128]	; (800528c <home+0xec>)
 800520a:	689a      	ldr	r2, [r3, #8]
 800520c:	4b1f      	ldr	r3, [pc, #124]	; (800528c <home+0xec>)
 800520e:	4921      	ldr	r1, [pc, #132]	; (8005294 <home+0xf4>)
 8005210:	400a      	ands	r2, r1
 8005212:	609a      	str	r2, [r3, #8]
	SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI3_PB;
 8005214:	4b1d      	ldr	r3, [pc, #116]	; (800528c <home+0xec>)
 8005216:	689a      	ldr	r2, [r3, #8]
 8005218:	4b1c      	ldr	r3, [pc, #112]	; (800528c <home+0xec>)
 800521a:	2180      	movs	r1, #128	; 0x80
 800521c:	0149      	lsls	r1, r1, #5
 800521e:	430a      	orrs	r2, r1
 8005220:	609a      	str	r2, [r3, #8]

	// Enable EXTI line 2 for PB2
	EXTI->IMR |= EXTI_IMR_IM2;
 8005222:	4b1d      	ldr	r3, [pc, #116]	; (8005298 <home+0xf8>)
 8005224:	681a      	ldr	r2, [r3, #0]
 8005226:	4b1c      	ldr	r3, [pc, #112]	; (8005298 <home+0xf8>)
 8005228:	2104      	movs	r1, #4
 800522a:	430a      	orrs	r2, r1
 800522c:	601a      	str	r2, [r3, #0]

	// Enable EXTI line 3 for PB3
	EXTI->IMR |= EXTI_IMR_IM3;
 800522e:	4b1a      	ldr	r3, [pc, #104]	; (8005298 <home+0xf8>)
 8005230:	681a      	ldr	r2, [r3, #0]
 8005232:	4b19      	ldr	r3, [pc, #100]	; (8005298 <home+0xf8>)
 8005234:	2108      	movs	r1, #8
 8005236:	430a      	orrs	r2, r1
 8005238:	601a      	str	r2, [r3, #0]

	// Disable Falling / Enable rising trigger
	EXTI->RTSR |= EXTI_RTSR_RT2;
 800523a:	4b17      	ldr	r3, [pc, #92]	; (8005298 <home+0xf8>)
 800523c:	689a      	ldr	r2, [r3, #8]
 800523e:	4b16      	ldr	r3, [pc, #88]	; (8005298 <home+0xf8>)
 8005240:	2104      	movs	r1, #4
 8005242:	430a      	orrs	r2, r1
 8005244:	609a      	str	r2, [r3, #8]
	EXTI->FTSR &= ~(EXTI_FTSR_FT2);
 8005246:	4b14      	ldr	r3, [pc, #80]	; (8005298 <home+0xf8>)
 8005248:	68da      	ldr	r2, [r3, #12]
 800524a:	4b13      	ldr	r3, [pc, #76]	; (8005298 <home+0xf8>)
 800524c:	2104      	movs	r1, #4
 800524e:	438a      	bics	r2, r1
 8005250:	60da      	str	r2, [r3, #12]

	// Disable Falling / Enable rising trigger
	EXTI->RTSR |= EXTI_RTSR_RT3;
 8005252:	4b11      	ldr	r3, [pc, #68]	; (8005298 <home+0xf8>)
 8005254:	689a      	ldr	r2, [r3, #8]
 8005256:	4b10      	ldr	r3, [pc, #64]	; (8005298 <home+0xf8>)
 8005258:	2108      	movs	r1, #8
 800525a:	430a      	orrs	r2, r1
 800525c:	609a      	str	r2, [r3, #8]
	EXTI->FTSR &= ~(EXTI_FTSR_FT3);
 800525e:	4b0e      	ldr	r3, [pc, #56]	; (8005298 <home+0xf8>)
 8005260:	68da      	ldr	r2, [r3, #12]
 8005262:	4b0d      	ldr	r3, [pc, #52]	; (8005298 <home+0xf8>)
 8005264:	2108      	movs	r1, #8
 8005266:	438a      	bics	r2, r1
 8005268:	60da      	str	r2, [r3, #12]

	// Set maximum priority for EXTI line 4 to 15 interrupts
	NVIC_SetPriority(EXTI2_3_IRQn, 0);
 800526a:	2100      	movs	r1, #0
 800526c:	2006      	movs	r0, #6
 800526e:	f7fd febd 	bl	8002fec <__NVIC_SetPriority>

	// Enable EXTI line 4 to 15 (user button on line 13) interrupts
	NVIC_EnableIRQ(EXTI2_3_IRQn);
 8005272:	2006      	movs	r0, #6
 8005274:	f7fd fea0 	bl	8002fb8 <__NVIC_EnableIRQ>

	pwmHomeStart();
 8005278:	f7ff feb2 	bl	8004fe0 <pwmHomeStart>

}
 800527c:	46c0      	nop			; (mov r8, r8)
 800527e:	46bd      	mov	sp, r7
 8005280:	bd80      	pop	{r7, pc}
 8005282:	46c0      	nop			; (mov r8, r8)
 8005284:	40021000 	.word	0x40021000
 8005288:	48000400 	.word	0x48000400
 800528c:	40010000 	.word	0x40010000
 8005290:	fffff0ff 	.word	0xfffff0ff
 8005294:	ffff0fff 	.word	0xffff0fff
 8005298:	40010400 	.word	0x40010400

0800529c <EXTI2_3_IRQHandler>:

void EXTI2_3_IRQHandler(){
 800529c:	b580      	push	{r7, lr}
 800529e:	af00      	add	r7, sp, #0

	// Test for line 2 pending interrupt i.e AZ home reach
	if ((EXTI->PR & EXTI_PR_PR2_Msk) != 0){
 80052a0:	4b1f      	ldr	r3, [pc, #124]	; (8005320 <EXTI2_3_IRQHandler+0x84>)
 80052a2:	695b      	ldr	r3, [r3, #20]
 80052a4:	2204      	movs	r2, #4
 80052a6:	4013      	ands	r3, r2
 80052a8:	d011      	beq.n	80052ce <EXTI2_3_IRQHandler+0x32>

		// Clear pending bit 2 by writing a '1'
		EXTI->PR = EXTI_PR_PR2;
 80052aa:	4b1d      	ldr	r3, [pc, #116]	; (8005320 <EXTI2_3_IRQHandler+0x84>)
 80052ac:	2204      	movs	r2, #4
 80052ae:	615a      	str	r2, [r3, #20]

		// Disable interruption on line 2
		EXTI->IMR &= ~(EXTI_IMR_IM2);
 80052b0:	4b1b      	ldr	r3, [pc, #108]	; (8005320 <EXTI2_3_IRQHandler+0x84>)
 80052b2:	681a      	ldr	r2, [r3, #0]
 80052b4:	4b1a      	ldr	r3, [pc, #104]	; (8005320 <EXTI2_3_IRQHandler+0x84>)
 80052b6:	2104      	movs	r1, #4
 80052b8:	438a      	bics	r2, r1
 80052ba:	601a      	str	r2, [r3, #0]

		isHomeAz = 1;
 80052bc:	4b19      	ldr	r3, [pc, #100]	; (8005324 <EXTI2_3_IRQHandler+0x88>)
 80052be:	2201      	movs	r2, #1
 80052c0:	701a      	strb	r2, [r3, #0]

		printf("AZ HOME REACH ! \r\n");
 80052c2:	4b19      	ldr	r3, [pc, #100]	; (8005328 <EXTI2_3_IRQHandler+0x8c>)
 80052c4:	0018      	movs	r0, r3
 80052c6:	f000 fdad 	bl	8005e24 <puts>

		pwmHomeUpdate();
 80052ca:	f7ff fed7 	bl	800507c <pwmHomeUpdate>

	}

	// Test for line 3 pending interrupt i.e EL home reach
	if ((EXTI->PR & EXTI_PR_PR3_Msk) != 0){
 80052ce:	4b14      	ldr	r3, [pc, #80]	; (8005320 <EXTI2_3_IRQHandler+0x84>)
 80052d0:	695b      	ldr	r3, [r3, #20]
 80052d2:	2208      	movs	r2, #8
 80052d4:	4013      	ands	r3, r2
 80052d6:	d011      	beq.n	80052fc <EXTI2_3_IRQHandler+0x60>

		// Clear pending bit 3 by writing a '1'
		EXTI->PR = EXTI_PR_PR3;
 80052d8:	4b11      	ldr	r3, [pc, #68]	; (8005320 <EXTI2_3_IRQHandler+0x84>)
 80052da:	2208      	movs	r2, #8
 80052dc:	615a      	str	r2, [r3, #20]

		// Disable interruption on line 3
		EXTI->IMR &= ~(EXTI_IMR_IM3);
 80052de:	4b10      	ldr	r3, [pc, #64]	; (8005320 <EXTI2_3_IRQHandler+0x84>)
 80052e0:	681a      	ldr	r2, [r3, #0]
 80052e2:	4b0f      	ldr	r3, [pc, #60]	; (8005320 <EXTI2_3_IRQHandler+0x84>)
 80052e4:	2108      	movs	r1, #8
 80052e6:	438a      	bics	r2, r1
 80052e8:	601a      	str	r2, [r3, #0]

		isHomeEl = 1;
 80052ea:	4b10      	ldr	r3, [pc, #64]	; (800532c <EXTI2_3_IRQHandler+0x90>)
 80052ec:	2201      	movs	r2, #1
 80052ee:	701a      	strb	r2, [r3, #0]

		printf("EL HOME REACH ! \r\n");
 80052f0:	4b0f      	ldr	r3, [pc, #60]	; (8005330 <EXTI2_3_IRQHandler+0x94>)
 80052f2:	0018      	movs	r0, r3
 80052f4:	f000 fd96 	bl	8005e24 <puts>

		pwmHomeUpdate();
 80052f8:	f7ff fec0 	bl	800507c <pwmHomeUpdate>
	}

	if(isHomeAz && isHomeEl){
 80052fc:	4b09      	ldr	r3, [pc, #36]	; (8005324 <EXTI2_3_IRQHandler+0x88>)
 80052fe:	781b      	ldrb	r3, [r3, #0]
 8005300:	2b00      	cmp	r3, #0
 8005302:	d009      	beq.n	8005318 <EXTI2_3_IRQHandler+0x7c>
 8005304:	4b09      	ldr	r3, [pc, #36]	; (800532c <EXTI2_3_IRQHandler+0x90>)
 8005306:	781b      	ldrb	r3, [r3, #0]
 8005308:	2b00      	cmp	r3, #0
 800530a:	d005      	beq.n	8005318 <EXTI2_3_IRQHandler+0x7c>

		printf("ALL HOME REACH ! \r\n");
 800530c:	4b09      	ldr	r3, [pc, #36]	; (8005334 <EXTI2_3_IRQHandler+0x98>)
 800530e:	0018      	movs	r0, r3
 8005310:	f000 fd88 	bl	8005e24 <puts>
		pwmHomeStop();
 8005314:	f7ff fee6 	bl	80050e4 <pwmHomeStop>
	}
}
 8005318:	46c0      	nop			; (mov r8, r8)
 800531a:	46bd      	mov	sp, r7
 800531c:	bd80      	pop	{r7, pc}
 800531e:	46c0      	nop			; (mov r8, r8)
 8005320:	40010400 	.word	0x40010400
 8005324:	200003ac 	.word	0x200003ac
 8005328:	08009458 	.word	0x08009458
 800532c:	200003ad 	.word	0x200003ad
 8005330:	0800946c 	.word	0x0800946c
 8005334:	08009480 	.word	0x08009480

08005338 <main>:
extern void pwmInit(void);
extern void home(void);

extern void initialise_monitor_handles();

int main(void){
 8005338:	b580      	push	{r7, lr}
 800533a:	af00      	add	r7, sp, #0

	initialise_monitor_handles();
 800533c:	f003 f92c 	bl	8008598 <initialise_monitor_handles>

	canInit();
 8005340:	f7fe f98e 	bl	8003660 <canInit>

	pwmInit();
 8005344:	f7ff fd8a 	bl	8004e5c <pwmInit>

	canEnableIRQ();
 8005348:	f7ff fa06 	bl	8004758 <canEnableIRQ>

	sendRemoteFrame();
 800534c:	f7fe fae8 	bl	8003920 <sendRemoteFrame>

	home();
 8005350:	f7ff ff26 	bl	80051a0 <home>

	while(1){
 8005354:	e7fe      	b.n	8005354 <main+0x1c>
	...

08005358 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8005358:	b580      	push	{r7, lr}
 800535a:	b084      	sub	sp, #16
 800535c:	af00      	add	r7, sp, #0
 800535e:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8005360:	4b11      	ldr	r3, [pc, #68]	; (80053a8 <_sbrk+0x50>)
 8005362:	681b      	ldr	r3, [r3, #0]
 8005364:	2b00      	cmp	r3, #0
 8005366:	d102      	bne.n	800536e <_sbrk+0x16>
		heap_end = &end;
 8005368:	4b0f      	ldr	r3, [pc, #60]	; (80053a8 <_sbrk+0x50>)
 800536a:	4a10      	ldr	r2, [pc, #64]	; (80053ac <_sbrk+0x54>)
 800536c:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800536e:	4b0e      	ldr	r3, [pc, #56]	; (80053a8 <_sbrk+0x50>)
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8005374:	4b0c      	ldr	r3, [pc, #48]	; (80053a8 <_sbrk+0x50>)
 8005376:	681a      	ldr	r2, [r3, #0]
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	18d3      	adds	r3, r2, r3
 800537c:	466a      	mov	r2, sp
 800537e:	4293      	cmp	r3, r2
 8005380:	d907      	bls.n	8005392 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8005382:	f000 f845 	bl	8005410 <__errno>
 8005386:	0003      	movs	r3, r0
 8005388:	220c      	movs	r2, #12
 800538a:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 800538c:	2301      	movs	r3, #1
 800538e:	425b      	negs	r3, r3
 8005390:	e006      	b.n	80053a0 <_sbrk+0x48>
	}

	heap_end += incr;
 8005392:	4b05      	ldr	r3, [pc, #20]	; (80053a8 <_sbrk+0x50>)
 8005394:	681a      	ldr	r2, [r3, #0]
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	18d2      	adds	r2, r2, r3
 800539a:	4b03      	ldr	r3, [pc, #12]	; (80053a8 <_sbrk+0x50>)
 800539c:	601a      	str	r2, [r3, #0]

	return (caddr_t) prev_heap_end;
 800539e:	68fb      	ldr	r3, [r7, #12]
}
 80053a0:	0018      	movs	r0, r3
 80053a2:	46bd      	mov	sp, r7
 80053a4:	b004      	add	sp, #16
 80053a6:	bd80      	pop	{r7, pc}
 80053a8:	200003b8 	.word	0x200003b8
 80053ac:	20000478 	.word	0x20000478

080053b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80053b0:	480d      	ldr	r0, [pc, #52]	; (80053e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80053b2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80053b4:	480d      	ldr	r0, [pc, #52]	; (80053ec <LoopForever+0x6>)
  ldr r1, =_edata
 80053b6:	490e      	ldr	r1, [pc, #56]	; (80053f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80053b8:	4a0e      	ldr	r2, [pc, #56]	; (80053f4 <LoopForever+0xe>)
  movs r3, #0
 80053ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80053bc:	e002      	b.n	80053c4 <LoopCopyDataInit>

080053be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80053be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80053c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80053c2:	3304      	adds	r3, #4

080053c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80053c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80053c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80053c8:	d3f9      	bcc.n	80053be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80053ca:	4a0b      	ldr	r2, [pc, #44]	; (80053f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80053cc:	4c0b      	ldr	r4, [pc, #44]	; (80053fc <LoopForever+0x16>)
  movs r3, #0
 80053ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80053d0:	e001      	b.n	80053d6 <LoopFillZerobss>

080053d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80053d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80053d4:	3204      	adds	r2, #4

080053d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80053d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80053d8:	d3fb      	bcc.n	80053d2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80053da:	e000      	b.n	80053de <LoopFillZerobss+0x8>
 80053dc:	bf00      	nop
/* Call static constructors */
  bl __libc_init_array
 80053de:	f000 f81d 	bl	800541c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80053e2:	f7ff ffa9 	bl	8005338 <main>

080053e6 <LoopForever>:

LoopForever:
    b LoopForever
 80053e6:	e7fe      	b.n	80053e6 <LoopForever>
  ldr   r0, =_estack
 80053e8:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 80053ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80053f0:	200001f0 	.word	0x200001f0
  ldr r2, =_sidata
 80053f4:	080098d8 	.word	0x080098d8
  ldr r2, =_sbss
 80053f8:	200001f0 	.word	0x200001f0
  ldr r4, =_ebss
 80053fc:	20000474 	.word	0x20000474

08005400 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8005400:	e7fe      	b.n	8005400 <ADC_COMP_IRQHandler>

08005402 <atoi>:
 8005402:	b510      	push	{r4, lr}
 8005404:	220a      	movs	r2, #10
 8005406:	2100      	movs	r1, #0
 8005408:	f000 fdc6 	bl	8005f98 <strtol>
 800540c:	bd10      	pop	{r4, pc}
	...

08005410 <__errno>:
 8005410:	4b01      	ldr	r3, [pc, #4]	; (8005418 <__errno+0x8>)
 8005412:	6818      	ldr	r0, [r3, #0]
 8005414:	4770      	bx	lr
 8005416:	46c0      	nop			; (mov r8, r8)
 8005418:	20000018 	.word	0x20000018

0800541c <__libc_init_array>:
 800541c:	b570      	push	{r4, r5, r6, lr}
 800541e:	2600      	movs	r6, #0
 8005420:	4d0c      	ldr	r5, [pc, #48]	; (8005454 <__libc_init_array+0x38>)
 8005422:	4c0d      	ldr	r4, [pc, #52]	; (8005458 <__libc_init_array+0x3c>)
 8005424:	1b64      	subs	r4, r4, r5
 8005426:	10a4      	asrs	r4, r4, #2
 8005428:	42a6      	cmp	r6, r4
 800542a:	d109      	bne.n	8005440 <__libc_init_array+0x24>
 800542c:	2600      	movs	r6, #0
 800542e:	f003 f969 	bl	8008704 <_init>
 8005432:	4d0a      	ldr	r5, [pc, #40]	; (800545c <__libc_init_array+0x40>)
 8005434:	4c0a      	ldr	r4, [pc, #40]	; (8005460 <__libc_init_array+0x44>)
 8005436:	1b64      	subs	r4, r4, r5
 8005438:	10a4      	asrs	r4, r4, #2
 800543a:	42a6      	cmp	r6, r4
 800543c:	d105      	bne.n	800544a <__libc_init_array+0x2e>
 800543e:	bd70      	pop	{r4, r5, r6, pc}
 8005440:	00b3      	lsls	r3, r6, #2
 8005442:	58eb      	ldr	r3, [r5, r3]
 8005444:	4798      	blx	r3
 8005446:	3601      	adds	r6, #1
 8005448:	e7ee      	b.n	8005428 <__libc_init_array+0xc>
 800544a:	00b3      	lsls	r3, r6, #2
 800544c:	58eb      	ldr	r3, [r5, r3]
 800544e:	4798      	blx	r3
 8005450:	3601      	adds	r6, #1
 8005452:	e7f2      	b.n	800543a <__libc_init_array+0x1e>
 8005454:	080098d0 	.word	0x080098d0
 8005458:	080098d0 	.word	0x080098d0
 800545c:	080098d0 	.word	0x080098d0
 8005460:	080098d4 	.word	0x080098d4

08005464 <memset>:
 8005464:	0003      	movs	r3, r0
 8005466:	1812      	adds	r2, r2, r0
 8005468:	4293      	cmp	r3, r2
 800546a:	d100      	bne.n	800546e <memset+0xa>
 800546c:	4770      	bx	lr
 800546e:	7019      	strb	r1, [r3, #0]
 8005470:	3301      	adds	r3, #1
 8005472:	e7f9      	b.n	8005468 <memset+0x4>

08005474 <__cvt>:
 8005474:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005476:	b08b      	sub	sp, #44	; 0x2c
 8005478:	0014      	movs	r4, r2
 800547a:	1e1d      	subs	r5, r3, #0
 800547c:	9912      	ldr	r1, [sp, #72]	; 0x48
 800547e:	da53      	bge.n	8005528 <__cvt+0xb4>
 8005480:	2480      	movs	r4, #128	; 0x80
 8005482:	0624      	lsls	r4, r4, #24
 8005484:	191b      	adds	r3, r3, r4
 8005486:	001d      	movs	r5, r3
 8005488:	0014      	movs	r4, r2
 800548a:	232d      	movs	r3, #45	; 0x2d
 800548c:	700b      	strb	r3, [r1, #0]
 800548e:	2320      	movs	r3, #32
 8005490:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8005492:	2203      	movs	r2, #3
 8005494:	439e      	bics	r6, r3
 8005496:	2e46      	cmp	r6, #70	; 0x46
 8005498:	d007      	beq.n	80054aa <__cvt+0x36>
 800549a:	0033      	movs	r3, r6
 800549c:	3b45      	subs	r3, #69	; 0x45
 800549e:	4259      	negs	r1, r3
 80054a0:	414b      	adcs	r3, r1
 80054a2:	9910      	ldr	r1, [sp, #64]	; 0x40
 80054a4:	3a01      	subs	r2, #1
 80054a6:	18cb      	adds	r3, r1, r3
 80054a8:	9310      	str	r3, [sp, #64]	; 0x40
 80054aa:	ab09      	add	r3, sp, #36	; 0x24
 80054ac:	9304      	str	r3, [sp, #16]
 80054ae:	ab08      	add	r3, sp, #32
 80054b0:	9303      	str	r3, [sp, #12]
 80054b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80054b4:	9200      	str	r2, [sp, #0]
 80054b6:	9302      	str	r3, [sp, #8]
 80054b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80054ba:	0022      	movs	r2, r4
 80054bc:	9301      	str	r3, [sp, #4]
 80054be:	002b      	movs	r3, r5
 80054c0:	f000 fed0 	bl	8006264 <_dtoa_r>
 80054c4:	0007      	movs	r7, r0
 80054c6:	2e47      	cmp	r6, #71	; 0x47
 80054c8:	d102      	bne.n	80054d0 <__cvt+0x5c>
 80054ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80054cc:	07db      	lsls	r3, r3, #31
 80054ce:	d524      	bpl.n	800551a <__cvt+0xa6>
 80054d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80054d2:	18fb      	adds	r3, r7, r3
 80054d4:	9307      	str	r3, [sp, #28]
 80054d6:	2e46      	cmp	r6, #70	; 0x46
 80054d8:	d114      	bne.n	8005504 <__cvt+0x90>
 80054da:	783b      	ldrb	r3, [r7, #0]
 80054dc:	2b30      	cmp	r3, #48	; 0x30
 80054de:	d10c      	bne.n	80054fa <__cvt+0x86>
 80054e0:	2200      	movs	r2, #0
 80054e2:	2300      	movs	r3, #0
 80054e4:	0020      	movs	r0, r4
 80054e6:	0029      	movs	r1, r5
 80054e8:	f7fa ffa6 	bl	8000438 <__aeabi_dcmpeq>
 80054ec:	2800      	cmp	r0, #0
 80054ee:	d104      	bne.n	80054fa <__cvt+0x86>
 80054f0:	2301      	movs	r3, #1
 80054f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80054f4:	1a9b      	subs	r3, r3, r2
 80054f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80054f8:	6013      	str	r3, [r2, #0]
 80054fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80054fc:	9a07      	ldr	r2, [sp, #28]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	18d3      	adds	r3, r2, r3
 8005502:	9307      	str	r3, [sp, #28]
 8005504:	2200      	movs	r2, #0
 8005506:	2300      	movs	r3, #0
 8005508:	0020      	movs	r0, r4
 800550a:	0029      	movs	r1, r5
 800550c:	f7fa ff94 	bl	8000438 <__aeabi_dcmpeq>
 8005510:	2230      	movs	r2, #48	; 0x30
 8005512:	2800      	cmp	r0, #0
 8005514:	d00d      	beq.n	8005532 <__cvt+0xbe>
 8005516:	9b07      	ldr	r3, [sp, #28]
 8005518:	9309      	str	r3, [sp, #36]	; 0x24
 800551a:	0038      	movs	r0, r7
 800551c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800551e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005520:	1bdb      	subs	r3, r3, r7
 8005522:	6013      	str	r3, [r2, #0]
 8005524:	b00b      	add	sp, #44	; 0x2c
 8005526:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005528:	2300      	movs	r3, #0
 800552a:	e7af      	b.n	800548c <__cvt+0x18>
 800552c:	1c59      	adds	r1, r3, #1
 800552e:	9109      	str	r1, [sp, #36]	; 0x24
 8005530:	701a      	strb	r2, [r3, #0]
 8005532:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005534:	9907      	ldr	r1, [sp, #28]
 8005536:	428b      	cmp	r3, r1
 8005538:	d3f8      	bcc.n	800552c <__cvt+0xb8>
 800553a:	e7ee      	b.n	800551a <__cvt+0xa6>

0800553c <__exponent>:
 800553c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800553e:	1c83      	adds	r3, r0, #2
 8005540:	b085      	sub	sp, #20
 8005542:	9301      	str	r3, [sp, #4]
 8005544:	0006      	movs	r6, r0
 8005546:	000c      	movs	r4, r1
 8005548:	7002      	strb	r2, [r0, #0]
 800554a:	232b      	movs	r3, #43	; 0x2b
 800554c:	2900      	cmp	r1, #0
 800554e:	da01      	bge.n	8005554 <__exponent+0x18>
 8005550:	232d      	movs	r3, #45	; 0x2d
 8005552:	424c      	negs	r4, r1
 8005554:	7073      	strb	r3, [r6, #1]
 8005556:	2c09      	cmp	r4, #9
 8005558:	dd22      	ble.n	80055a0 <__exponent+0x64>
 800555a:	ab02      	add	r3, sp, #8
 800555c:	1ddd      	adds	r5, r3, #7
 800555e:	0020      	movs	r0, r4
 8005560:	210a      	movs	r1, #10
 8005562:	f7fa ff53 	bl	800040c <__aeabi_idivmod>
 8005566:	1e6f      	subs	r7, r5, #1
 8005568:	3130      	adds	r1, #48	; 0x30
 800556a:	7039      	strb	r1, [r7, #0]
 800556c:	0020      	movs	r0, r4
 800556e:	210a      	movs	r1, #10
 8005570:	f7fa fe66 	bl	8000240 <__divsi3>
 8005574:	0004      	movs	r4, r0
 8005576:	2809      	cmp	r0, #9
 8005578:	dc0b      	bgt.n	8005592 <__exponent+0x56>
 800557a:	3d02      	subs	r5, #2
 800557c:	3430      	adds	r4, #48	; 0x30
 800557e:	9b01      	ldr	r3, [sp, #4]
 8005580:	702c      	strb	r4, [r5, #0]
 8005582:	aa02      	add	r2, sp, #8
 8005584:	3207      	adds	r2, #7
 8005586:	0018      	movs	r0, r3
 8005588:	42aa      	cmp	r2, r5
 800558a:	d804      	bhi.n	8005596 <__exponent+0x5a>
 800558c:	1b80      	subs	r0, r0, r6
 800558e:	b005      	add	sp, #20
 8005590:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005592:	003d      	movs	r5, r7
 8005594:	e7e3      	b.n	800555e <__exponent+0x22>
 8005596:	782a      	ldrb	r2, [r5, #0]
 8005598:	3501      	adds	r5, #1
 800559a:	701a      	strb	r2, [r3, #0]
 800559c:	3301      	adds	r3, #1
 800559e:	e7f0      	b.n	8005582 <__exponent+0x46>
 80055a0:	2330      	movs	r3, #48	; 0x30
 80055a2:	18e4      	adds	r4, r4, r3
 80055a4:	70b3      	strb	r3, [r6, #2]
 80055a6:	1d30      	adds	r0, r6, #4
 80055a8:	70f4      	strb	r4, [r6, #3]
 80055aa:	e7ef      	b.n	800558c <__exponent+0x50>

080055ac <_printf_float>:
 80055ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80055ae:	b095      	sub	sp, #84	; 0x54
 80055b0:	000c      	movs	r4, r1
 80055b2:	920a      	str	r2, [sp, #40]	; 0x28
 80055b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80055b6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80055b8:	9009      	str	r0, [sp, #36]	; 0x24
 80055ba:	f001 fdc1 	bl	8007140 <_localeconv_r>
 80055be:	6803      	ldr	r3, [r0, #0]
 80055c0:	0018      	movs	r0, r3
 80055c2:	930c      	str	r3, [sp, #48]	; 0x30
 80055c4:	f7fa fda0 	bl	8000108 <strlen>
 80055c8:	2300      	movs	r3, #0
 80055ca:	9312      	str	r3, [sp, #72]	; 0x48
 80055cc:	6823      	ldr	r3, [r4, #0]
 80055ce:	900e      	str	r0, [sp, #56]	; 0x38
 80055d0:	930d      	str	r3, [sp, #52]	; 0x34
 80055d2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80055d4:	7e27      	ldrb	r7, [r4, #24]
 80055d6:	682b      	ldr	r3, [r5, #0]
 80055d8:	2207      	movs	r2, #7
 80055da:	05c9      	lsls	r1, r1, #23
 80055dc:	d545      	bpl.n	800566a <_printf_float+0xbe>
 80055de:	189b      	adds	r3, r3, r2
 80055e0:	4393      	bics	r3, r2
 80055e2:	001a      	movs	r2, r3
 80055e4:	3208      	adds	r2, #8
 80055e6:	602a      	str	r2, [r5, #0]
 80055e8:	681a      	ldr	r2, [r3, #0]
 80055ea:	685b      	ldr	r3, [r3, #4]
 80055ec:	64a2      	str	r2, [r4, #72]	; 0x48
 80055ee:	64e3      	str	r3, [r4, #76]	; 0x4c
 80055f0:	2201      	movs	r2, #1
 80055f2:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80055f4:	6ca6      	ldr	r6, [r4, #72]	; 0x48
 80055f6:	006b      	lsls	r3, r5, #1
 80055f8:	085b      	lsrs	r3, r3, #1
 80055fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80055fc:	4252      	negs	r2, r2
 80055fe:	4bac      	ldr	r3, [pc, #688]	; (80058b0 <_printf_float+0x304>)
 8005600:	0030      	movs	r0, r6
 8005602:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005604:	f7fd fb26 	bl	8002c54 <__aeabi_dcmpun>
 8005608:	2800      	cmp	r0, #0
 800560a:	d130      	bne.n	800566e <_printf_float+0xc2>
 800560c:	2201      	movs	r2, #1
 800560e:	4ba8      	ldr	r3, [pc, #672]	; (80058b0 <_printf_float+0x304>)
 8005610:	4252      	negs	r2, r2
 8005612:	0030      	movs	r0, r6
 8005614:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005616:	f7fa ff1f 	bl	8000458 <__aeabi_dcmple>
 800561a:	2800      	cmp	r0, #0
 800561c:	d127      	bne.n	800566e <_printf_float+0xc2>
 800561e:	2200      	movs	r2, #0
 8005620:	2300      	movs	r3, #0
 8005622:	0030      	movs	r0, r6
 8005624:	0029      	movs	r1, r5
 8005626:	f7fa ff0d 	bl	8000444 <__aeabi_dcmplt>
 800562a:	2800      	cmp	r0, #0
 800562c:	d003      	beq.n	8005636 <_printf_float+0x8a>
 800562e:	0023      	movs	r3, r4
 8005630:	222d      	movs	r2, #45	; 0x2d
 8005632:	3343      	adds	r3, #67	; 0x43
 8005634:	701a      	strb	r2, [r3, #0]
 8005636:	4d9f      	ldr	r5, [pc, #636]	; (80058b4 <_printf_float+0x308>)
 8005638:	2f47      	cmp	r7, #71	; 0x47
 800563a:	d800      	bhi.n	800563e <_printf_float+0x92>
 800563c:	4d9e      	ldr	r5, [pc, #632]	; (80058b8 <_printf_float+0x30c>)
 800563e:	2303      	movs	r3, #3
 8005640:	2600      	movs	r6, #0
 8005642:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005644:	6123      	str	r3, [r4, #16]
 8005646:	3301      	adds	r3, #1
 8005648:	439a      	bics	r2, r3
 800564a:	6022      	str	r2, [r4, #0]
 800564c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800564e:	aa13      	add	r2, sp, #76	; 0x4c
 8005650:	9300      	str	r3, [sp, #0]
 8005652:	0021      	movs	r1, r4
 8005654:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005656:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005658:	f000 f9f4 	bl	8005a44 <_printf_common>
 800565c:	1c43      	adds	r3, r0, #1
 800565e:	d000      	beq.n	8005662 <_printf_float+0xb6>
 8005660:	e093      	b.n	800578a <_printf_float+0x1de>
 8005662:	2001      	movs	r0, #1
 8005664:	4240      	negs	r0, r0
 8005666:	b015      	add	sp, #84	; 0x54
 8005668:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800566a:	3307      	adds	r3, #7
 800566c:	e7b8      	b.n	80055e0 <_printf_float+0x34>
 800566e:	0032      	movs	r2, r6
 8005670:	002b      	movs	r3, r5
 8005672:	0030      	movs	r0, r6
 8005674:	0029      	movs	r1, r5
 8005676:	f7fd faed 	bl	8002c54 <__aeabi_dcmpun>
 800567a:	2800      	cmp	r0, #0
 800567c:	d004      	beq.n	8005688 <_printf_float+0xdc>
 800567e:	4d8f      	ldr	r5, [pc, #572]	; (80058bc <_printf_float+0x310>)
 8005680:	2f47      	cmp	r7, #71	; 0x47
 8005682:	d8dc      	bhi.n	800563e <_printf_float+0x92>
 8005684:	4d8e      	ldr	r5, [pc, #568]	; (80058c0 <_printf_float+0x314>)
 8005686:	e7da      	b.n	800563e <_printf_float+0x92>
 8005688:	2380      	movs	r3, #128	; 0x80
 800568a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800568c:	6862      	ldr	r2, [r4, #4]
 800568e:	00db      	lsls	r3, r3, #3
 8005690:	430b      	orrs	r3, r1
 8005692:	1c51      	adds	r1, r2, #1
 8005694:	d143      	bne.n	800571e <_printf_float+0x172>
 8005696:	3207      	adds	r2, #7
 8005698:	6062      	str	r2, [r4, #4]
 800569a:	aa12      	add	r2, sp, #72	; 0x48
 800569c:	2100      	movs	r1, #0
 800569e:	9205      	str	r2, [sp, #20]
 80056a0:	aa11      	add	r2, sp, #68	; 0x44
 80056a2:	9203      	str	r2, [sp, #12]
 80056a4:	2223      	movs	r2, #35	; 0x23
 80056a6:	6023      	str	r3, [r4, #0]
 80056a8:	9106      	str	r1, [sp, #24]
 80056aa:	9301      	str	r3, [sp, #4]
 80056ac:	a908      	add	r1, sp, #32
 80056ae:	6863      	ldr	r3, [r4, #4]
 80056b0:	1852      	adds	r2, r2, r1
 80056b2:	9202      	str	r2, [sp, #8]
 80056b4:	9300      	str	r3, [sp, #0]
 80056b6:	0032      	movs	r2, r6
 80056b8:	002b      	movs	r3, r5
 80056ba:	9704      	str	r7, [sp, #16]
 80056bc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80056be:	f7ff fed9 	bl	8005474 <__cvt>
 80056c2:	2320      	movs	r3, #32
 80056c4:	003a      	movs	r2, r7
 80056c6:	0005      	movs	r5, r0
 80056c8:	439a      	bics	r2, r3
 80056ca:	2a47      	cmp	r2, #71	; 0x47
 80056cc:	d107      	bne.n	80056de <_printf_float+0x132>
 80056ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80056d0:	1cda      	adds	r2, r3, #3
 80056d2:	db02      	blt.n	80056da <_printf_float+0x12e>
 80056d4:	6862      	ldr	r2, [r4, #4]
 80056d6:	4293      	cmp	r3, r2
 80056d8:	dd45      	ble.n	8005766 <_printf_float+0x1ba>
 80056da:	3f02      	subs	r7, #2
 80056dc:	b2ff      	uxtb	r7, r7
 80056de:	9911      	ldr	r1, [sp, #68]	; 0x44
 80056e0:	2f65      	cmp	r7, #101	; 0x65
 80056e2:	d825      	bhi.n	8005730 <_printf_float+0x184>
 80056e4:	0020      	movs	r0, r4
 80056e6:	3901      	subs	r1, #1
 80056e8:	003a      	movs	r2, r7
 80056ea:	3050      	adds	r0, #80	; 0x50
 80056ec:	9111      	str	r1, [sp, #68]	; 0x44
 80056ee:	f7ff ff25 	bl	800553c <__exponent>
 80056f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80056f4:	0006      	movs	r6, r0
 80056f6:	1813      	adds	r3, r2, r0
 80056f8:	6123      	str	r3, [r4, #16]
 80056fa:	2a01      	cmp	r2, #1
 80056fc:	dc02      	bgt.n	8005704 <_printf_float+0x158>
 80056fe:	6822      	ldr	r2, [r4, #0]
 8005700:	07d2      	lsls	r2, r2, #31
 8005702:	d501      	bpl.n	8005708 <_printf_float+0x15c>
 8005704:	3301      	adds	r3, #1
 8005706:	6123      	str	r3, [r4, #16]
 8005708:	2323      	movs	r3, #35	; 0x23
 800570a:	aa08      	add	r2, sp, #32
 800570c:	189b      	adds	r3, r3, r2
 800570e:	781b      	ldrb	r3, [r3, #0]
 8005710:	2b00      	cmp	r3, #0
 8005712:	d09b      	beq.n	800564c <_printf_float+0xa0>
 8005714:	0023      	movs	r3, r4
 8005716:	222d      	movs	r2, #45	; 0x2d
 8005718:	3343      	adds	r3, #67	; 0x43
 800571a:	701a      	strb	r2, [r3, #0]
 800571c:	e796      	b.n	800564c <_printf_float+0xa0>
 800571e:	2f67      	cmp	r7, #103	; 0x67
 8005720:	d100      	bne.n	8005724 <_printf_float+0x178>
 8005722:	e176      	b.n	8005a12 <_printf_float+0x466>
 8005724:	2f47      	cmp	r7, #71	; 0x47
 8005726:	d1b8      	bne.n	800569a <_printf_float+0xee>
 8005728:	2a00      	cmp	r2, #0
 800572a:	d1b6      	bne.n	800569a <_printf_float+0xee>
 800572c:	2201      	movs	r2, #1
 800572e:	e7b3      	b.n	8005698 <_printf_float+0xec>
 8005730:	2f66      	cmp	r7, #102	; 0x66
 8005732:	d119      	bne.n	8005768 <_printf_float+0x1bc>
 8005734:	6863      	ldr	r3, [r4, #4]
 8005736:	2900      	cmp	r1, #0
 8005738:	dd0c      	ble.n	8005754 <_printf_float+0x1a8>
 800573a:	6121      	str	r1, [r4, #16]
 800573c:	2b00      	cmp	r3, #0
 800573e:	d102      	bne.n	8005746 <_printf_float+0x19a>
 8005740:	6822      	ldr	r2, [r4, #0]
 8005742:	07d2      	lsls	r2, r2, #31
 8005744:	d502      	bpl.n	800574c <_printf_float+0x1a0>
 8005746:	3301      	adds	r3, #1
 8005748:	185b      	adds	r3, r3, r1
 800574a:	6123      	str	r3, [r4, #16]
 800574c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800574e:	2600      	movs	r6, #0
 8005750:	65a3      	str	r3, [r4, #88]	; 0x58
 8005752:	e7d9      	b.n	8005708 <_printf_float+0x15c>
 8005754:	2b00      	cmp	r3, #0
 8005756:	d103      	bne.n	8005760 <_printf_float+0x1b4>
 8005758:	2201      	movs	r2, #1
 800575a:	6821      	ldr	r1, [r4, #0]
 800575c:	4211      	tst	r1, r2
 800575e:	d000      	beq.n	8005762 <_printf_float+0x1b6>
 8005760:	1c9a      	adds	r2, r3, #2
 8005762:	6122      	str	r2, [r4, #16]
 8005764:	e7f2      	b.n	800574c <_printf_float+0x1a0>
 8005766:	2767      	movs	r7, #103	; 0x67
 8005768:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800576a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800576c:	4293      	cmp	r3, r2
 800576e:	db05      	blt.n	800577c <_printf_float+0x1d0>
 8005770:	6822      	ldr	r2, [r4, #0]
 8005772:	6123      	str	r3, [r4, #16]
 8005774:	07d2      	lsls	r2, r2, #31
 8005776:	d5e9      	bpl.n	800574c <_printf_float+0x1a0>
 8005778:	3301      	adds	r3, #1
 800577a:	e7e6      	b.n	800574a <_printf_float+0x19e>
 800577c:	2101      	movs	r1, #1
 800577e:	2b00      	cmp	r3, #0
 8005780:	dc01      	bgt.n	8005786 <_printf_float+0x1da>
 8005782:	1849      	adds	r1, r1, r1
 8005784:	1ac9      	subs	r1, r1, r3
 8005786:	1852      	adds	r2, r2, r1
 8005788:	e7eb      	b.n	8005762 <_printf_float+0x1b6>
 800578a:	6822      	ldr	r2, [r4, #0]
 800578c:	0553      	lsls	r3, r2, #21
 800578e:	d408      	bmi.n	80057a2 <_printf_float+0x1f6>
 8005790:	6923      	ldr	r3, [r4, #16]
 8005792:	002a      	movs	r2, r5
 8005794:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005796:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005798:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800579a:	47a8      	blx	r5
 800579c:	1c43      	adds	r3, r0, #1
 800579e:	d129      	bne.n	80057f4 <_printf_float+0x248>
 80057a0:	e75f      	b.n	8005662 <_printf_float+0xb6>
 80057a2:	2f65      	cmp	r7, #101	; 0x65
 80057a4:	d800      	bhi.n	80057a8 <_printf_float+0x1fc>
 80057a6:	e0e0      	b.n	800596a <_printf_float+0x3be>
 80057a8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80057aa:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80057ac:	2200      	movs	r2, #0
 80057ae:	2300      	movs	r3, #0
 80057b0:	f7fa fe42 	bl	8000438 <__aeabi_dcmpeq>
 80057b4:	2800      	cmp	r0, #0
 80057b6:	d034      	beq.n	8005822 <_printf_float+0x276>
 80057b8:	2301      	movs	r3, #1
 80057ba:	4a42      	ldr	r2, [pc, #264]	; (80058c4 <_printf_float+0x318>)
 80057bc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80057be:	9809      	ldr	r0, [sp, #36]	; 0x24
 80057c0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80057c2:	47a8      	blx	r5
 80057c4:	1c43      	adds	r3, r0, #1
 80057c6:	d100      	bne.n	80057ca <_printf_float+0x21e>
 80057c8:	e74b      	b.n	8005662 <_printf_float+0xb6>
 80057ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80057cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80057ce:	4293      	cmp	r3, r2
 80057d0:	db02      	blt.n	80057d8 <_printf_float+0x22c>
 80057d2:	6823      	ldr	r3, [r4, #0]
 80057d4:	07db      	lsls	r3, r3, #31
 80057d6:	d50d      	bpl.n	80057f4 <_printf_float+0x248>
 80057d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80057da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80057dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80057de:	990a      	ldr	r1, [sp, #40]	; 0x28
 80057e0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80057e2:	47a8      	blx	r5
 80057e4:	2500      	movs	r5, #0
 80057e6:	1c43      	adds	r3, r0, #1
 80057e8:	d100      	bne.n	80057ec <_printf_float+0x240>
 80057ea:	e73a      	b.n	8005662 <_printf_float+0xb6>
 80057ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80057ee:	3b01      	subs	r3, #1
 80057f0:	42ab      	cmp	r3, r5
 80057f2:	dc0a      	bgt.n	800580a <_printf_float+0x25e>
 80057f4:	6823      	ldr	r3, [r4, #0]
 80057f6:	079b      	lsls	r3, r3, #30
 80057f8:	d500      	bpl.n	80057fc <_printf_float+0x250>
 80057fa:	e108      	b.n	8005a0e <_printf_float+0x462>
 80057fc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80057fe:	68e0      	ldr	r0, [r4, #12]
 8005800:	4298      	cmp	r0, r3
 8005802:	db00      	blt.n	8005806 <_printf_float+0x25a>
 8005804:	e72f      	b.n	8005666 <_printf_float+0xba>
 8005806:	0018      	movs	r0, r3
 8005808:	e72d      	b.n	8005666 <_printf_float+0xba>
 800580a:	0022      	movs	r2, r4
 800580c:	2301      	movs	r3, #1
 800580e:	321a      	adds	r2, #26
 8005810:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005812:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005814:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8005816:	47b0      	blx	r6
 8005818:	1c43      	adds	r3, r0, #1
 800581a:	d100      	bne.n	800581e <_printf_float+0x272>
 800581c:	e721      	b.n	8005662 <_printf_float+0xb6>
 800581e:	3501      	adds	r5, #1
 8005820:	e7e4      	b.n	80057ec <_printf_float+0x240>
 8005822:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005824:	2b00      	cmp	r3, #0
 8005826:	dc2d      	bgt.n	8005884 <_printf_float+0x2d8>
 8005828:	2301      	movs	r3, #1
 800582a:	4a26      	ldr	r2, [pc, #152]	; (80058c4 <_printf_float+0x318>)
 800582c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800582e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005830:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8005832:	47b0      	blx	r6
 8005834:	1c43      	adds	r3, r0, #1
 8005836:	d100      	bne.n	800583a <_printf_float+0x28e>
 8005838:	e713      	b.n	8005662 <_printf_float+0xb6>
 800583a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800583c:	2b00      	cmp	r3, #0
 800583e:	d105      	bne.n	800584c <_printf_float+0x2a0>
 8005840:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005842:	2b00      	cmp	r3, #0
 8005844:	d102      	bne.n	800584c <_printf_float+0x2a0>
 8005846:	6823      	ldr	r3, [r4, #0]
 8005848:	07db      	lsls	r3, r3, #31
 800584a:	d5d3      	bpl.n	80057f4 <_printf_float+0x248>
 800584c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800584e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005850:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005852:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005854:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005856:	47b0      	blx	r6
 8005858:	2600      	movs	r6, #0
 800585a:	1c43      	adds	r3, r0, #1
 800585c:	d100      	bne.n	8005860 <_printf_float+0x2b4>
 800585e:	e700      	b.n	8005662 <_printf_float+0xb6>
 8005860:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005862:	425b      	negs	r3, r3
 8005864:	42b3      	cmp	r3, r6
 8005866:	dc01      	bgt.n	800586c <_printf_float+0x2c0>
 8005868:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800586a:	e792      	b.n	8005792 <_printf_float+0x1e6>
 800586c:	0022      	movs	r2, r4
 800586e:	2301      	movs	r3, #1
 8005870:	321a      	adds	r2, #26
 8005872:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005874:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005876:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8005878:	47b8      	blx	r7
 800587a:	1c43      	adds	r3, r0, #1
 800587c:	d100      	bne.n	8005880 <_printf_float+0x2d4>
 800587e:	e6f0      	b.n	8005662 <_printf_float+0xb6>
 8005880:	3601      	adds	r6, #1
 8005882:	e7ed      	b.n	8005860 <_printf_float+0x2b4>
 8005884:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005886:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8005888:	429f      	cmp	r7, r3
 800588a:	dd00      	ble.n	800588e <_printf_float+0x2e2>
 800588c:	001f      	movs	r7, r3
 800588e:	2f00      	cmp	r7, #0
 8005890:	dd08      	ble.n	80058a4 <_printf_float+0x2f8>
 8005892:	003b      	movs	r3, r7
 8005894:	002a      	movs	r2, r5
 8005896:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005898:	9809      	ldr	r0, [sp, #36]	; 0x24
 800589a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800589c:	47b0      	blx	r6
 800589e:	1c43      	adds	r3, r0, #1
 80058a0:	d100      	bne.n	80058a4 <_printf_float+0x2f8>
 80058a2:	e6de      	b.n	8005662 <_printf_float+0xb6>
 80058a4:	2300      	movs	r3, #0
 80058a6:	930d      	str	r3, [sp, #52]	; 0x34
 80058a8:	43fb      	mvns	r3, r7
 80058aa:	17db      	asrs	r3, r3, #31
 80058ac:	930f      	str	r3, [sp, #60]	; 0x3c
 80058ae:	e018      	b.n	80058e2 <_printf_float+0x336>
 80058b0:	7fefffff 	.word	0x7fefffff
 80058b4:	080095f8 	.word	0x080095f8
 80058b8:	080095f4 	.word	0x080095f4
 80058bc:	08009600 	.word	0x08009600
 80058c0:	080095fc 	.word	0x080095fc
 80058c4:	08009604 	.word	0x08009604
 80058c8:	0022      	movs	r2, r4
 80058ca:	2301      	movs	r3, #1
 80058cc:	321a      	adds	r2, #26
 80058ce:	990a      	ldr	r1, [sp, #40]	; 0x28
 80058d0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80058d2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80058d4:	47b0      	blx	r6
 80058d6:	1c43      	adds	r3, r0, #1
 80058d8:	d100      	bne.n	80058dc <_printf_float+0x330>
 80058da:	e6c2      	b.n	8005662 <_printf_float+0xb6>
 80058dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80058de:	3301      	adds	r3, #1
 80058e0:	930d      	str	r3, [sp, #52]	; 0x34
 80058e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80058e4:	6da6      	ldr	r6, [r4, #88]	; 0x58
 80058e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80058e8:	403b      	ands	r3, r7
 80058ea:	1af3      	subs	r3, r6, r3
 80058ec:	4293      	cmp	r3, r2
 80058ee:	dceb      	bgt.n	80058c8 <_printf_float+0x31c>
 80058f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80058f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80058f4:	19ad      	adds	r5, r5, r6
 80058f6:	4293      	cmp	r3, r2
 80058f8:	db10      	blt.n	800591c <_printf_float+0x370>
 80058fa:	6823      	ldr	r3, [r4, #0]
 80058fc:	07db      	lsls	r3, r3, #31
 80058fe:	d40d      	bmi.n	800591c <_printf_float+0x370>
 8005900:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8005902:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005904:	1bbe      	subs	r6, r7, r6
 8005906:	1aff      	subs	r7, r7, r3
 8005908:	42b7      	cmp	r7, r6
 800590a:	dd00      	ble.n	800590e <_printf_float+0x362>
 800590c:	0037      	movs	r7, r6
 800590e:	2f00      	cmp	r7, #0
 8005910:	dc0d      	bgt.n	800592e <_printf_float+0x382>
 8005912:	43fe      	mvns	r6, r7
 8005914:	17f3      	asrs	r3, r6, #31
 8005916:	2500      	movs	r5, #0
 8005918:	930c      	str	r3, [sp, #48]	; 0x30
 800591a:	e01c      	b.n	8005956 <_printf_float+0x3aa>
 800591c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800591e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005920:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005922:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005924:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8005926:	47b8      	blx	r7
 8005928:	1c43      	adds	r3, r0, #1
 800592a:	d1e9      	bne.n	8005900 <_printf_float+0x354>
 800592c:	e699      	b.n	8005662 <_printf_float+0xb6>
 800592e:	003b      	movs	r3, r7
 8005930:	002a      	movs	r2, r5
 8005932:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005934:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005936:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005938:	47a8      	blx	r5
 800593a:	1c43      	adds	r3, r0, #1
 800593c:	d1e9      	bne.n	8005912 <_printf_float+0x366>
 800593e:	e690      	b.n	8005662 <_printf_float+0xb6>
 8005940:	0022      	movs	r2, r4
 8005942:	2301      	movs	r3, #1
 8005944:	321a      	adds	r2, #26
 8005946:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005948:	9809      	ldr	r0, [sp, #36]	; 0x24
 800594a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800594c:	47b0      	blx	r6
 800594e:	1c43      	adds	r3, r0, #1
 8005950:	d100      	bne.n	8005954 <_printf_float+0x3a8>
 8005952:	e686      	b.n	8005662 <_printf_float+0xb6>
 8005954:	3501      	adds	r5, #1
 8005956:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005958:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800595a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800595c:	1a9b      	subs	r3, r3, r2
 800595e:	003a      	movs	r2, r7
 8005960:	400a      	ands	r2, r1
 8005962:	1a9b      	subs	r3, r3, r2
 8005964:	42ab      	cmp	r3, r5
 8005966:	dceb      	bgt.n	8005940 <_printf_float+0x394>
 8005968:	e744      	b.n	80057f4 <_printf_float+0x248>
 800596a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800596c:	2b01      	cmp	r3, #1
 800596e:	dc02      	bgt.n	8005976 <_printf_float+0x3ca>
 8005970:	2301      	movs	r3, #1
 8005972:	421a      	tst	r2, r3
 8005974:	d032      	beq.n	80059dc <_printf_float+0x430>
 8005976:	2301      	movs	r3, #1
 8005978:	002a      	movs	r2, r5
 800597a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800597c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800597e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8005980:	47b8      	blx	r7
 8005982:	1c43      	adds	r3, r0, #1
 8005984:	d100      	bne.n	8005988 <_printf_float+0x3dc>
 8005986:	e66c      	b.n	8005662 <_printf_float+0xb6>
 8005988:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800598a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800598c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800598e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005990:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8005992:	3501      	adds	r5, #1
 8005994:	47b8      	blx	r7
 8005996:	1c43      	adds	r3, r0, #1
 8005998:	d100      	bne.n	800599c <_printf_float+0x3f0>
 800599a:	e662      	b.n	8005662 <_printf_float+0xb6>
 800599c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800599e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80059a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80059a2:	2200      	movs	r2, #0
 80059a4:	1e5f      	subs	r7, r3, #1
 80059a6:	2300      	movs	r3, #0
 80059a8:	f7fa fd46 	bl	8000438 <__aeabi_dcmpeq>
 80059ac:	003b      	movs	r3, r7
 80059ae:	2800      	cmp	r0, #0
 80059b0:	d014      	beq.n	80059dc <_printf_float+0x430>
 80059b2:	2500      	movs	r5, #0
 80059b4:	e00a      	b.n	80059cc <_printf_float+0x420>
 80059b6:	0022      	movs	r2, r4
 80059b8:	2301      	movs	r3, #1
 80059ba:	321a      	adds	r2, #26
 80059bc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80059be:	9809      	ldr	r0, [sp, #36]	; 0x24
 80059c0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80059c2:	47b8      	blx	r7
 80059c4:	1c43      	adds	r3, r0, #1
 80059c6:	d100      	bne.n	80059ca <_printf_float+0x41e>
 80059c8:	e64b      	b.n	8005662 <_printf_float+0xb6>
 80059ca:	3501      	adds	r5, #1
 80059cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80059ce:	3b01      	subs	r3, #1
 80059d0:	42ab      	cmp	r3, r5
 80059d2:	dcf0      	bgt.n	80059b6 <_printf_float+0x40a>
 80059d4:	0022      	movs	r2, r4
 80059d6:	0033      	movs	r3, r6
 80059d8:	3250      	adds	r2, #80	; 0x50
 80059da:	e6db      	b.n	8005794 <_printf_float+0x1e8>
 80059dc:	002a      	movs	r2, r5
 80059de:	990a      	ldr	r1, [sp, #40]	; 0x28
 80059e0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80059e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80059e4:	47a8      	blx	r5
 80059e6:	1c43      	adds	r3, r0, #1
 80059e8:	d1f4      	bne.n	80059d4 <_printf_float+0x428>
 80059ea:	e63a      	b.n	8005662 <_printf_float+0xb6>
 80059ec:	0022      	movs	r2, r4
 80059ee:	2301      	movs	r3, #1
 80059f0:	3219      	adds	r2, #25
 80059f2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80059f4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80059f6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80059f8:	47b0      	blx	r6
 80059fa:	1c43      	adds	r3, r0, #1
 80059fc:	d100      	bne.n	8005a00 <_printf_float+0x454>
 80059fe:	e630      	b.n	8005662 <_printf_float+0xb6>
 8005a00:	3501      	adds	r5, #1
 8005a02:	68e3      	ldr	r3, [r4, #12]
 8005a04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005a06:	1a9b      	subs	r3, r3, r2
 8005a08:	42ab      	cmp	r3, r5
 8005a0a:	dcef      	bgt.n	80059ec <_printf_float+0x440>
 8005a0c:	e6f6      	b.n	80057fc <_printf_float+0x250>
 8005a0e:	2500      	movs	r5, #0
 8005a10:	e7f7      	b.n	8005a02 <_printf_float+0x456>
 8005a12:	2a00      	cmp	r2, #0
 8005a14:	d100      	bne.n	8005a18 <_printf_float+0x46c>
 8005a16:	e689      	b.n	800572c <_printf_float+0x180>
 8005a18:	2100      	movs	r1, #0
 8005a1a:	9106      	str	r1, [sp, #24]
 8005a1c:	a912      	add	r1, sp, #72	; 0x48
 8005a1e:	9105      	str	r1, [sp, #20]
 8005a20:	a911      	add	r1, sp, #68	; 0x44
 8005a22:	9103      	str	r1, [sp, #12]
 8005a24:	2123      	movs	r1, #35	; 0x23
 8005a26:	a808      	add	r0, sp, #32
 8005a28:	1809      	adds	r1, r1, r0
 8005a2a:	6023      	str	r3, [r4, #0]
 8005a2c:	9301      	str	r3, [sp, #4]
 8005a2e:	9200      	str	r2, [sp, #0]
 8005a30:	002b      	movs	r3, r5
 8005a32:	9704      	str	r7, [sp, #16]
 8005a34:	9102      	str	r1, [sp, #8]
 8005a36:	0032      	movs	r2, r6
 8005a38:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005a3a:	f7ff fd1b 	bl	8005474 <__cvt>
 8005a3e:	0005      	movs	r5, r0
 8005a40:	e645      	b.n	80056ce <_printf_float+0x122>
 8005a42:	46c0      	nop			; (mov r8, r8)

08005a44 <_printf_common>:
 8005a44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005a46:	0015      	movs	r5, r2
 8005a48:	9301      	str	r3, [sp, #4]
 8005a4a:	688a      	ldr	r2, [r1, #8]
 8005a4c:	690b      	ldr	r3, [r1, #16]
 8005a4e:	9000      	str	r0, [sp, #0]
 8005a50:	000c      	movs	r4, r1
 8005a52:	4293      	cmp	r3, r2
 8005a54:	da00      	bge.n	8005a58 <_printf_common+0x14>
 8005a56:	0013      	movs	r3, r2
 8005a58:	0022      	movs	r2, r4
 8005a5a:	602b      	str	r3, [r5, #0]
 8005a5c:	3243      	adds	r2, #67	; 0x43
 8005a5e:	7812      	ldrb	r2, [r2, #0]
 8005a60:	2a00      	cmp	r2, #0
 8005a62:	d001      	beq.n	8005a68 <_printf_common+0x24>
 8005a64:	3301      	adds	r3, #1
 8005a66:	602b      	str	r3, [r5, #0]
 8005a68:	6823      	ldr	r3, [r4, #0]
 8005a6a:	069b      	lsls	r3, r3, #26
 8005a6c:	d502      	bpl.n	8005a74 <_printf_common+0x30>
 8005a6e:	682b      	ldr	r3, [r5, #0]
 8005a70:	3302      	adds	r3, #2
 8005a72:	602b      	str	r3, [r5, #0]
 8005a74:	2706      	movs	r7, #6
 8005a76:	6823      	ldr	r3, [r4, #0]
 8005a78:	401f      	ands	r7, r3
 8005a7a:	d027      	beq.n	8005acc <_printf_common+0x88>
 8005a7c:	0023      	movs	r3, r4
 8005a7e:	3343      	adds	r3, #67	; 0x43
 8005a80:	781b      	ldrb	r3, [r3, #0]
 8005a82:	1e5a      	subs	r2, r3, #1
 8005a84:	4193      	sbcs	r3, r2
 8005a86:	6822      	ldr	r2, [r4, #0]
 8005a88:	0692      	lsls	r2, r2, #26
 8005a8a:	d430      	bmi.n	8005aee <_printf_common+0xaa>
 8005a8c:	0022      	movs	r2, r4
 8005a8e:	9901      	ldr	r1, [sp, #4]
 8005a90:	3243      	adds	r2, #67	; 0x43
 8005a92:	9800      	ldr	r0, [sp, #0]
 8005a94:	9e08      	ldr	r6, [sp, #32]
 8005a96:	47b0      	blx	r6
 8005a98:	1c43      	adds	r3, r0, #1
 8005a9a:	d025      	beq.n	8005ae8 <_printf_common+0xa4>
 8005a9c:	2306      	movs	r3, #6
 8005a9e:	6820      	ldr	r0, [r4, #0]
 8005aa0:	682a      	ldr	r2, [r5, #0]
 8005aa2:	68e1      	ldr	r1, [r4, #12]
 8005aa4:	4003      	ands	r3, r0
 8005aa6:	2500      	movs	r5, #0
 8005aa8:	2b04      	cmp	r3, #4
 8005aaa:	d103      	bne.n	8005ab4 <_printf_common+0x70>
 8005aac:	1a8d      	subs	r5, r1, r2
 8005aae:	43eb      	mvns	r3, r5
 8005ab0:	17db      	asrs	r3, r3, #31
 8005ab2:	401d      	ands	r5, r3
 8005ab4:	68a3      	ldr	r3, [r4, #8]
 8005ab6:	6922      	ldr	r2, [r4, #16]
 8005ab8:	4293      	cmp	r3, r2
 8005aba:	dd01      	ble.n	8005ac0 <_printf_common+0x7c>
 8005abc:	1a9b      	subs	r3, r3, r2
 8005abe:	18ed      	adds	r5, r5, r3
 8005ac0:	2700      	movs	r7, #0
 8005ac2:	42bd      	cmp	r5, r7
 8005ac4:	d120      	bne.n	8005b08 <_printf_common+0xc4>
 8005ac6:	2000      	movs	r0, #0
 8005ac8:	e010      	b.n	8005aec <_printf_common+0xa8>
 8005aca:	3701      	adds	r7, #1
 8005acc:	68e3      	ldr	r3, [r4, #12]
 8005ace:	682a      	ldr	r2, [r5, #0]
 8005ad0:	1a9b      	subs	r3, r3, r2
 8005ad2:	42bb      	cmp	r3, r7
 8005ad4:	ddd2      	ble.n	8005a7c <_printf_common+0x38>
 8005ad6:	0022      	movs	r2, r4
 8005ad8:	2301      	movs	r3, #1
 8005ada:	3219      	adds	r2, #25
 8005adc:	9901      	ldr	r1, [sp, #4]
 8005ade:	9800      	ldr	r0, [sp, #0]
 8005ae0:	9e08      	ldr	r6, [sp, #32]
 8005ae2:	47b0      	blx	r6
 8005ae4:	1c43      	adds	r3, r0, #1
 8005ae6:	d1f0      	bne.n	8005aca <_printf_common+0x86>
 8005ae8:	2001      	movs	r0, #1
 8005aea:	4240      	negs	r0, r0
 8005aec:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005aee:	2030      	movs	r0, #48	; 0x30
 8005af0:	18e1      	adds	r1, r4, r3
 8005af2:	3143      	adds	r1, #67	; 0x43
 8005af4:	7008      	strb	r0, [r1, #0]
 8005af6:	0021      	movs	r1, r4
 8005af8:	1c5a      	adds	r2, r3, #1
 8005afa:	3145      	adds	r1, #69	; 0x45
 8005afc:	7809      	ldrb	r1, [r1, #0]
 8005afe:	18a2      	adds	r2, r4, r2
 8005b00:	3243      	adds	r2, #67	; 0x43
 8005b02:	3302      	adds	r3, #2
 8005b04:	7011      	strb	r1, [r2, #0]
 8005b06:	e7c1      	b.n	8005a8c <_printf_common+0x48>
 8005b08:	0022      	movs	r2, r4
 8005b0a:	2301      	movs	r3, #1
 8005b0c:	321a      	adds	r2, #26
 8005b0e:	9901      	ldr	r1, [sp, #4]
 8005b10:	9800      	ldr	r0, [sp, #0]
 8005b12:	9e08      	ldr	r6, [sp, #32]
 8005b14:	47b0      	blx	r6
 8005b16:	1c43      	adds	r3, r0, #1
 8005b18:	d0e6      	beq.n	8005ae8 <_printf_common+0xa4>
 8005b1a:	3701      	adds	r7, #1
 8005b1c:	e7d1      	b.n	8005ac2 <_printf_common+0x7e>
	...

08005b20 <_printf_i>:
 8005b20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005b22:	b089      	sub	sp, #36	; 0x24
 8005b24:	9204      	str	r2, [sp, #16]
 8005b26:	000a      	movs	r2, r1
 8005b28:	3243      	adds	r2, #67	; 0x43
 8005b2a:	9305      	str	r3, [sp, #20]
 8005b2c:	9003      	str	r0, [sp, #12]
 8005b2e:	9202      	str	r2, [sp, #8]
 8005b30:	7e0a      	ldrb	r2, [r1, #24]
 8005b32:	000c      	movs	r4, r1
 8005b34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005b36:	2a6e      	cmp	r2, #110	; 0x6e
 8005b38:	d100      	bne.n	8005b3c <_printf_i+0x1c>
 8005b3a:	e086      	b.n	8005c4a <_printf_i+0x12a>
 8005b3c:	d81f      	bhi.n	8005b7e <_printf_i+0x5e>
 8005b3e:	2a63      	cmp	r2, #99	; 0x63
 8005b40:	d033      	beq.n	8005baa <_printf_i+0x8a>
 8005b42:	d808      	bhi.n	8005b56 <_printf_i+0x36>
 8005b44:	2a00      	cmp	r2, #0
 8005b46:	d100      	bne.n	8005b4a <_printf_i+0x2a>
 8005b48:	e08c      	b.n	8005c64 <_printf_i+0x144>
 8005b4a:	2a58      	cmp	r2, #88	; 0x58
 8005b4c:	d04d      	beq.n	8005bea <_printf_i+0xca>
 8005b4e:	0025      	movs	r5, r4
 8005b50:	3542      	adds	r5, #66	; 0x42
 8005b52:	702a      	strb	r2, [r5, #0]
 8005b54:	e030      	b.n	8005bb8 <_printf_i+0x98>
 8005b56:	2a64      	cmp	r2, #100	; 0x64
 8005b58:	d001      	beq.n	8005b5e <_printf_i+0x3e>
 8005b5a:	2a69      	cmp	r2, #105	; 0x69
 8005b5c:	d1f7      	bne.n	8005b4e <_printf_i+0x2e>
 8005b5e:	6819      	ldr	r1, [r3, #0]
 8005b60:	6825      	ldr	r5, [r4, #0]
 8005b62:	1d0a      	adds	r2, r1, #4
 8005b64:	0628      	lsls	r0, r5, #24
 8005b66:	d529      	bpl.n	8005bbc <_printf_i+0x9c>
 8005b68:	6808      	ldr	r0, [r1, #0]
 8005b6a:	601a      	str	r2, [r3, #0]
 8005b6c:	2800      	cmp	r0, #0
 8005b6e:	da03      	bge.n	8005b78 <_printf_i+0x58>
 8005b70:	232d      	movs	r3, #45	; 0x2d
 8005b72:	9a02      	ldr	r2, [sp, #8]
 8005b74:	4240      	negs	r0, r0
 8005b76:	7013      	strb	r3, [r2, #0]
 8005b78:	4e6b      	ldr	r6, [pc, #428]	; (8005d28 <_printf_i+0x208>)
 8005b7a:	270a      	movs	r7, #10
 8005b7c:	e04f      	b.n	8005c1e <_printf_i+0xfe>
 8005b7e:	2a73      	cmp	r2, #115	; 0x73
 8005b80:	d074      	beq.n	8005c6c <_printf_i+0x14c>
 8005b82:	d808      	bhi.n	8005b96 <_printf_i+0x76>
 8005b84:	2a6f      	cmp	r2, #111	; 0x6f
 8005b86:	d01f      	beq.n	8005bc8 <_printf_i+0xa8>
 8005b88:	2a70      	cmp	r2, #112	; 0x70
 8005b8a:	d1e0      	bne.n	8005b4e <_printf_i+0x2e>
 8005b8c:	2220      	movs	r2, #32
 8005b8e:	6809      	ldr	r1, [r1, #0]
 8005b90:	430a      	orrs	r2, r1
 8005b92:	6022      	str	r2, [r4, #0]
 8005b94:	e003      	b.n	8005b9e <_printf_i+0x7e>
 8005b96:	2a75      	cmp	r2, #117	; 0x75
 8005b98:	d016      	beq.n	8005bc8 <_printf_i+0xa8>
 8005b9a:	2a78      	cmp	r2, #120	; 0x78
 8005b9c:	d1d7      	bne.n	8005b4e <_printf_i+0x2e>
 8005b9e:	0022      	movs	r2, r4
 8005ba0:	2178      	movs	r1, #120	; 0x78
 8005ba2:	3245      	adds	r2, #69	; 0x45
 8005ba4:	7011      	strb	r1, [r2, #0]
 8005ba6:	4e61      	ldr	r6, [pc, #388]	; (8005d2c <_printf_i+0x20c>)
 8005ba8:	e022      	b.n	8005bf0 <_printf_i+0xd0>
 8005baa:	0025      	movs	r5, r4
 8005bac:	681a      	ldr	r2, [r3, #0]
 8005bae:	3542      	adds	r5, #66	; 0x42
 8005bb0:	1d11      	adds	r1, r2, #4
 8005bb2:	6019      	str	r1, [r3, #0]
 8005bb4:	6813      	ldr	r3, [r2, #0]
 8005bb6:	702b      	strb	r3, [r5, #0]
 8005bb8:	2301      	movs	r3, #1
 8005bba:	e065      	b.n	8005c88 <_printf_i+0x168>
 8005bbc:	6808      	ldr	r0, [r1, #0]
 8005bbe:	601a      	str	r2, [r3, #0]
 8005bc0:	0669      	lsls	r1, r5, #25
 8005bc2:	d5d3      	bpl.n	8005b6c <_printf_i+0x4c>
 8005bc4:	b200      	sxth	r0, r0
 8005bc6:	e7d1      	b.n	8005b6c <_printf_i+0x4c>
 8005bc8:	6819      	ldr	r1, [r3, #0]
 8005bca:	6825      	ldr	r5, [r4, #0]
 8005bcc:	1d08      	adds	r0, r1, #4
 8005bce:	6018      	str	r0, [r3, #0]
 8005bd0:	6808      	ldr	r0, [r1, #0]
 8005bd2:	062e      	lsls	r6, r5, #24
 8005bd4:	d505      	bpl.n	8005be2 <_printf_i+0xc2>
 8005bd6:	4e54      	ldr	r6, [pc, #336]	; (8005d28 <_printf_i+0x208>)
 8005bd8:	2708      	movs	r7, #8
 8005bda:	2a6f      	cmp	r2, #111	; 0x6f
 8005bdc:	d01b      	beq.n	8005c16 <_printf_i+0xf6>
 8005bde:	270a      	movs	r7, #10
 8005be0:	e019      	b.n	8005c16 <_printf_i+0xf6>
 8005be2:	066d      	lsls	r5, r5, #25
 8005be4:	d5f7      	bpl.n	8005bd6 <_printf_i+0xb6>
 8005be6:	b280      	uxth	r0, r0
 8005be8:	e7f5      	b.n	8005bd6 <_printf_i+0xb6>
 8005bea:	3145      	adds	r1, #69	; 0x45
 8005bec:	4e4e      	ldr	r6, [pc, #312]	; (8005d28 <_printf_i+0x208>)
 8005bee:	700a      	strb	r2, [r1, #0]
 8005bf0:	6818      	ldr	r0, [r3, #0]
 8005bf2:	6822      	ldr	r2, [r4, #0]
 8005bf4:	1d01      	adds	r1, r0, #4
 8005bf6:	6800      	ldr	r0, [r0, #0]
 8005bf8:	6019      	str	r1, [r3, #0]
 8005bfa:	0615      	lsls	r5, r2, #24
 8005bfc:	d521      	bpl.n	8005c42 <_printf_i+0x122>
 8005bfe:	07d3      	lsls	r3, r2, #31
 8005c00:	d502      	bpl.n	8005c08 <_printf_i+0xe8>
 8005c02:	2320      	movs	r3, #32
 8005c04:	431a      	orrs	r2, r3
 8005c06:	6022      	str	r2, [r4, #0]
 8005c08:	2710      	movs	r7, #16
 8005c0a:	2800      	cmp	r0, #0
 8005c0c:	d103      	bne.n	8005c16 <_printf_i+0xf6>
 8005c0e:	2320      	movs	r3, #32
 8005c10:	6822      	ldr	r2, [r4, #0]
 8005c12:	439a      	bics	r2, r3
 8005c14:	6022      	str	r2, [r4, #0]
 8005c16:	0023      	movs	r3, r4
 8005c18:	2200      	movs	r2, #0
 8005c1a:	3343      	adds	r3, #67	; 0x43
 8005c1c:	701a      	strb	r2, [r3, #0]
 8005c1e:	6863      	ldr	r3, [r4, #4]
 8005c20:	60a3      	str	r3, [r4, #8]
 8005c22:	2b00      	cmp	r3, #0
 8005c24:	db58      	blt.n	8005cd8 <_printf_i+0x1b8>
 8005c26:	2204      	movs	r2, #4
 8005c28:	6821      	ldr	r1, [r4, #0]
 8005c2a:	4391      	bics	r1, r2
 8005c2c:	6021      	str	r1, [r4, #0]
 8005c2e:	2800      	cmp	r0, #0
 8005c30:	d154      	bne.n	8005cdc <_printf_i+0x1bc>
 8005c32:	9d02      	ldr	r5, [sp, #8]
 8005c34:	2b00      	cmp	r3, #0
 8005c36:	d05a      	beq.n	8005cee <_printf_i+0x1ce>
 8005c38:	0025      	movs	r5, r4
 8005c3a:	7833      	ldrb	r3, [r6, #0]
 8005c3c:	3542      	adds	r5, #66	; 0x42
 8005c3e:	702b      	strb	r3, [r5, #0]
 8005c40:	e055      	b.n	8005cee <_printf_i+0x1ce>
 8005c42:	0655      	lsls	r5, r2, #25
 8005c44:	d5db      	bpl.n	8005bfe <_printf_i+0xde>
 8005c46:	b280      	uxth	r0, r0
 8005c48:	e7d9      	b.n	8005bfe <_printf_i+0xde>
 8005c4a:	681a      	ldr	r2, [r3, #0]
 8005c4c:	680d      	ldr	r5, [r1, #0]
 8005c4e:	1d10      	adds	r0, r2, #4
 8005c50:	6949      	ldr	r1, [r1, #20]
 8005c52:	6018      	str	r0, [r3, #0]
 8005c54:	6813      	ldr	r3, [r2, #0]
 8005c56:	062e      	lsls	r6, r5, #24
 8005c58:	d501      	bpl.n	8005c5e <_printf_i+0x13e>
 8005c5a:	6019      	str	r1, [r3, #0]
 8005c5c:	e002      	b.n	8005c64 <_printf_i+0x144>
 8005c5e:	066d      	lsls	r5, r5, #25
 8005c60:	d5fb      	bpl.n	8005c5a <_printf_i+0x13a>
 8005c62:	8019      	strh	r1, [r3, #0]
 8005c64:	2300      	movs	r3, #0
 8005c66:	9d02      	ldr	r5, [sp, #8]
 8005c68:	6123      	str	r3, [r4, #16]
 8005c6a:	e04f      	b.n	8005d0c <_printf_i+0x1ec>
 8005c6c:	681a      	ldr	r2, [r3, #0]
 8005c6e:	1d11      	adds	r1, r2, #4
 8005c70:	6019      	str	r1, [r3, #0]
 8005c72:	6815      	ldr	r5, [r2, #0]
 8005c74:	2100      	movs	r1, #0
 8005c76:	6862      	ldr	r2, [r4, #4]
 8005c78:	0028      	movs	r0, r5
 8005c7a:	f001 faf5 	bl	8007268 <memchr>
 8005c7e:	2800      	cmp	r0, #0
 8005c80:	d001      	beq.n	8005c86 <_printf_i+0x166>
 8005c82:	1b40      	subs	r0, r0, r5
 8005c84:	6060      	str	r0, [r4, #4]
 8005c86:	6863      	ldr	r3, [r4, #4]
 8005c88:	6123      	str	r3, [r4, #16]
 8005c8a:	2300      	movs	r3, #0
 8005c8c:	9a02      	ldr	r2, [sp, #8]
 8005c8e:	7013      	strb	r3, [r2, #0]
 8005c90:	e03c      	b.n	8005d0c <_printf_i+0x1ec>
 8005c92:	6923      	ldr	r3, [r4, #16]
 8005c94:	002a      	movs	r2, r5
 8005c96:	9904      	ldr	r1, [sp, #16]
 8005c98:	9803      	ldr	r0, [sp, #12]
 8005c9a:	9d05      	ldr	r5, [sp, #20]
 8005c9c:	47a8      	blx	r5
 8005c9e:	1c43      	adds	r3, r0, #1
 8005ca0:	d03e      	beq.n	8005d20 <_printf_i+0x200>
 8005ca2:	6823      	ldr	r3, [r4, #0]
 8005ca4:	079b      	lsls	r3, r3, #30
 8005ca6:	d415      	bmi.n	8005cd4 <_printf_i+0x1b4>
 8005ca8:	9b07      	ldr	r3, [sp, #28]
 8005caa:	68e0      	ldr	r0, [r4, #12]
 8005cac:	4298      	cmp	r0, r3
 8005cae:	da39      	bge.n	8005d24 <_printf_i+0x204>
 8005cb0:	0018      	movs	r0, r3
 8005cb2:	e037      	b.n	8005d24 <_printf_i+0x204>
 8005cb4:	0022      	movs	r2, r4
 8005cb6:	2301      	movs	r3, #1
 8005cb8:	3219      	adds	r2, #25
 8005cba:	9904      	ldr	r1, [sp, #16]
 8005cbc:	9803      	ldr	r0, [sp, #12]
 8005cbe:	9e05      	ldr	r6, [sp, #20]
 8005cc0:	47b0      	blx	r6
 8005cc2:	1c43      	adds	r3, r0, #1
 8005cc4:	d02c      	beq.n	8005d20 <_printf_i+0x200>
 8005cc6:	3501      	adds	r5, #1
 8005cc8:	68e3      	ldr	r3, [r4, #12]
 8005cca:	9a07      	ldr	r2, [sp, #28]
 8005ccc:	1a9b      	subs	r3, r3, r2
 8005cce:	42ab      	cmp	r3, r5
 8005cd0:	dcf0      	bgt.n	8005cb4 <_printf_i+0x194>
 8005cd2:	e7e9      	b.n	8005ca8 <_printf_i+0x188>
 8005cd4:	2500      	movs	r5, #0
 8005cd6:	e7f7      	b.n	8005cc8 <_printf_i+0x1a8>
 8005cd8:	2800      	cmp	r0, #0
 8005cda:	d0ad      	beq.n	8005c38 <_printf_i+0x118>
 8005cdc:	9d02      	ldr	r5, [sp, #8]
 8005cde:	0039      	movs	r1, r7
 8005ce0:	f7fa faaa 	bl	8000238 <__aeabi_uidivmod>
 8005ce4:	5c73      	ldrb	r3, [r6, r1]
 8005ce6:	3d01      	subs	r5, #1
 8005ce8:	702b      	strb	r3, [r5, #0]
 8005cea:	2800      	cmp	r0, #0
 8005cec:	d1f7      	bne.n	8005cde <_printf_i+0x1be>
 8005cee:	2f08      	cmp	r7, #8
 8005cf0:	d109      	bne.n	8005d06 <_printf_i+0x1e6>
 8005cf2:	6823      	ldr	r3, [r4, #0]
 8005cf4:	07db      	lsls	r3, r3, #31
 8005cf6:	d506      	bpl.n	8005d06 <_printf_i+0x1e6>
 8005cf8:	6863      	ldr	r3, [r4, #4]
 8005cfa:	6922      	ldr	r2, [r4, #16]
 8005cfc:	4293      	cmp	r3, r2
 8005cfe:	dc02      	bgt.n	8005d06 <_printf_i+0x1e6>
 8005d00:	2330      	movs	r3, #48	; 0x30
 8005d02:	3d01      	subs	r5, #1
 8005d04:	702b      	strb	r3, [r5, #0]
 8005d06:	9b02      	ldr	r3, [sp, #8]
 8005d08:	1b5b      	subs	r3, r3, r5
 8005d0a:	6123      	str	r3, [r4, #16]
 8005d0c:	9b05      	ldr	r3, [sp, #20]
 8005d0e:	aa07      	add	r2, sp, #28
 8005d10:	9300      	str	r3, [sp, #0]
 8005d12:	0021      	movs	r1, r4
 8005d14:	9b04      	ldr	r3, [sp, #16]
 8005d16:	9803      	ldr	r0, [sp, #12]
 8005d18:	f7ff fe94 	bl	8005a44 <_printf_common>
 8005d1c:	1c43      	adds	r3, r0, #1
 8005d1e:	d1b8      	bne.n	8005c92 <_printf_i+0x172>
 8005d20:	2001      	movs	r0, #1
 8005d22:	4240      	negs	r0, r0
 8005d24:	b009      	add	sp, #36	; 0x24
 8005d26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d28:	08009606 	.word	0x08009606
 8005d2c:	08009617 	.word	0x08009617

08005d30 <iprintf>:
 8005d30:	b40f      	push	{r0, r1, r2, r3}
 8005d32:	4b0b      	ldr	r3, [pc, #44]	; (8005d60 <iprintf+0x30>)
 8005d34:	b513      	push	{r0, r1, r4, lr}
 8005d36:	681c      	ldr	r4, [r3, #0]
 8005d38:	2c00      	cmp	r4, #0
 8005d3a:	d005      	beq.n	8005d48 <iprintf+0x18>
 8005d3c:	69a3      	ldr	r3, [r4, #24]
 8005d3e:	2b00      	cmp	r3, #0
 8005d40:	d102      	bne.n	8005d48 <iprintf+0x18>
 8005d42:	0020      	movs	r0, r4
 8005d44:	f001 f966 	bl	8007014 <__sinit>
 8005d48:	ab05      	add	r3, sp, #20
 8005d4a:	9a04      	ldr	r2, [sp, #16]
 8005d4c:	68a1      	ldr	r1, [r4, #8]
 8005d4e:	0020      	movs	r0, r4
 8005d50:	9301      	str	r3, [sp, #4]
 8005d52:	f001 ffc1 	bl	8007cd8 <_vfiprintf_r>
 8005d56:	bc16      	pop	{r1, r2, r4}
 8005d58:	bc08      	pop	{r3}
 8005d5a:	b004      	add	sp, #16
 8005d5c:	4718      	bx	r3
 8005d5e:	46c0      	nop			; (mov r8, r8)
 8005d60:	20000018 	.word	0x20000018

08005d64 <_puts_r>:
 8005d64:	b570      	push	{r4, r5, r6, lr}
 8005d66:	0005      	movs	r5, r0
 8005d68:	000e      	movs	r6, r1
 8005d6a:	2800      	cmp	r0, #0
 8005d6c:	d004      	beq.n	8005d78 <_puts_r+0x14>
 8005d6e:	6983      	ldr	r3, [r0, #24]
 8005d70:	2b00      	cmp	r3, #0
 8005d72:	d101      	bne.n	8005d78 <_puts_r+0x14>
 8005d74:	f001 f94e 	bl	8007014 <__sinit>
 8005d78:	69ab      	ldr	r3, [r5, #24]
 8005d7a:	68ac      	ldr	r4, [r5, #8]
 8005d7c:	2b00      	cmp	r3, #0
 8005d7e:	d102      	bne.n	8005d86 <_puts_r+0x22>
 8005d80:	0028      	movs	r0, r5
 8005d82:	f001 f947 	bl	8007014 <__sinit>
 8005d86:	4b24      	ldr	r3, [pc, #144]	; (8005e18 <_puts_r+0xb4>)
 8005d88:	429c      	cmp	r4, r3
 8005d8a:	d10f      	bne.n	8005dac <_puts_r+0x48>
 8005d8c:	686c      	ldr	r4, [r5, #4]
 8005d8e:	89a3      	ldrh	r3, [r4, #12]
 8005d90:	071b      	lsls	r3, r3, #28
 8005d92:	d502      	bpl.n	8005d9a <_puts_r+0x36>
 8005d94:	6923      	ldr	r3, [r4, #16]
 8005d96:	2b00      	cmp	r3, #0
 8005d98:	d11f      	bne.n	8005dda <_puts_r+0x76>
 8005d9a:	0021      	movs	r1, r4
 8005d9c:	0028      	movs	r0, r5
 8005d9e:	f000 f965 	bl	800606c <__swsetup_r>
 8005da2:	2800      	cmp	r0, #0
 8005da4:	d019      	beq.n	8005dda <_puts_r+0x76>
 8005da6:	2001      	movs	r0, #1
 8005da8:	4240      	negs	r0, r0
 8005daa:	bd70      	pop	{r4, r5, r6, pc}
 8005dac:	4b1b      	ldr	r3, [pc, #108]	; (8005e1c <_puts_r+0xb8>)
 8005dae:	429c      	cmp	r4, r3
 8005db0:	d101      	bne.n	8005db6 <_puts_r+0x52>
 8005db2:	68ac      	ldr	r4, [r5, #8]
 8005db4:	e7eb      	b.n	8005d8e <_puts_r+0x2a>
 8005db6:	4b1a      	ldr	r3, [pc, #104]	; (8005e20 <_puts_r+0xbc>)
 8005db8:	429c      	cmp	r4, r3
 8005dba:	d1e8      	bne.n	8005d8e <_puts_r+0x2a>
 8005dbc:	68ec      	ldr	r4, [r5, #12]
 8005dbe:	e7e6      	b.n	8005d8e <_puts_r+0x2a>
 8005dc0:	3601      	adds	r6, #1
 8005dc2:	60a3      	str	r3, [r4, #8]
 8005dc4:	2b00      	cmp	r3, #0
 8005dc6:	da04      	bge.n	8005dd2 <_puts_r+0x6e>
 8005dc8:	69a2      	ldr	r2, [r4, #24]
 8005dca:	429a      	cmp	r2, r3
 8005dcc:	dc16      	bgt.n	8005dfc <_puts_r+0x98>
 8005dce:	290a      	cmp	r1, #10
 8005dd0:	d014      	beq.n	8005dfc <_puts_r+0x98>
 8005dd2:	6823      	ldr	r3, [r4, #0]
 8005dd4:	1c5a      	adds	r2, r3, #1
 8005dd6:	6022      	str	r2, [r4, #0]
 8005dd8:	7019      	strb	r1, [r3, #0]
 8005dda:	68a3      	ldr	r3, [r4, #8]
 8005ddc:	7831      	ldrb	r1, [r6, #0]
 8005dde:	3b01      	subs	r3, #1
 8005de0:	2900      	cmp	r1, #0
 8005de2:	d1ed      	bne.n	8005dc0 <_puts_r+0x5c>
 8005de4:	60a3      	str	r3, [r4, #8]
 8005de6:	2b00      	cmp	r3, #0
 8005de8:	da0f      	bge.n	8005e0a <_puts_r+0xa6>
 8005dea:	0022      	movs	r2, r4
 8005dec:	310a      	adds	r1, #10
 8005dee:	0028      	movs	r0, r5
 8005df0:	f000 f8e6 	bl	8005fc0 <__swbuf_r>
 8005df4:	1c43      	adds	r3, r0, #1
 8005df6:	d0d6      	beq.n	8005da6 <_puts_r+0x42>
 8005df8:	200a      	movs	r0, #10
 8005dfa:	e7d6      	b.n	8005daa <_puts_r+0x46>
 8005dfc:	0022      	movs	r2, r4
 8005dfe:	0028      	movs	r0, r5
 8005e00:	f000 f8de 	bl	8005fc0 <__swbuf_r>
 8005e04:	1c43      	adds	r3, r0, #1
 8005e06:	d1e8      	bne.n	8005dda <_puts_r+0x76>
 8005e08:	e7cd      	b.n	8005da6 <_puts_r+0x42>
 8005e0a:	200a      	movs	r0, #10
 8005e0c:	6823      	ldr	r3, [r4, #0]
 8005e0e:	1c5a      	adds	r2, r3, #1
 8005e10:	6022      	str	r2, [r4, #0]
 8005e12:	7018      	strb	r0, [r3, #0]
 8005e14:	e7c9      	b.n	8005daa <_puts_r+0x46>
 8005e16:	46c0      	nop			; (mov r8, r8)
 8005e18:	08009658 	.word	0x08009658
 8005e1c:	08009678 	.word	0x08009678
 8005e20:	08009638 	.word	0x08009638

08005e24 <puts>:
 8005e24:	b510      	push	{r4, lr}
 8005e26:	4b03      	ldr	r3, [pc, #12]	; (8005e34 <puts+0x10>)
 8005e28:	0001      	movs	r1, r0
 8005e2a:	6818      	ldr	r0, [r3, #0]
 8005e2c:	f7ff ff9a 	bl	8005d64 <_puts_r>
 8005e30:	bd10      	pop	{r4, pc}
 8005e32:	46c0      	nop			; (mov r8, r8)
 8005e34:	20000018 	.word	0x20000018

08005e38 <siprintf>:
 8005e38:	b40e      	push	{r1, r2, r3}
 8005e3a:	b500      	push	{lr}
 8005e3c:	490b      	ldr	r1, [pc, #44]	; (8005e6c <siprintf+0x34>)
 8005e3e:	b09c      	sub	sp, #112	; 0x70
 8005e40:	ab1d      	add	r3, sp, #116	; 0x74
 8005e42:	9002      	str	r0, [sp, #8]
 8005e44:	9006      	str	r0, [sp, #24]
 8005e46:	9107      	str	r1, [sp, #28]
 8005e48:	9104      	str	r1, [sp, #16]
 8005e4a:	4809      	ldr	r0, [pc, #36]	; (8005e70 <siprintf+0x38>)
 8005e4c:	4909      	ldr	r1, [pc, #36]	; (8005e74 <siprintf+0x3c>)
 8005e4e:	cb04      	ldmia	r3!, {r2}
 8005e50:	9105      	str	r1, [sp, #20]
 8005e52:	6800      	ldr	r0, [r0, #0]
 8005e54:	a902      	add	r1, sp, #8
 8005e56:	9301      	str	r3, [sp, #4]
 8005e58:	f001 fe18 	bl	8007a8c <_svfiprintf_r>
 8005e5c:	2300      	movs	r3, #0
 8005e5e:	9a02      	ldr	r2, [sp, #8]
 8005e60:	7013      	strb	r3, [r2, #0]
 8005e62:	b01c      	add	sp, #112	; 0x70
 8005e64:	bc08      	pop	{r3}
 8005e66:	b003      	add	sp, #12
 8005e68:	4718      	bx	r3
 8005e6a:	46c0      	nop			; (mov r8, r8)
 8005e6c:	7fffffff 	.word	0x7fffffff
 8005e70:	20000018 	.word	0x20000018
 8005e74:	ffff0208 	.word	0xffff0208

08005e78 <strcat>:
 8005e78:	0002      	movs	r2, r0
 8005e7a:	b510      	push	{r4, lr}
 8005e7c:	7813      	ldrb	r3, [r2, #0]
 8005e7e:	1c54      	adds	r4, r2, #1
 8005e80:	2b00      	cmp	r3, #0
 8005e82:	d105      	bne.n	8005e90 <strcat+0x18>
 8005e84:	5ccc      	ldrb	r4, [r1, r3]
 8005e86:	54d4      	strb	r4, [r2, r3]
 8005e88:	3301      	adds	r3, #1
 8005e8a:	2c00      	cmp	r4, #0
 8005e8c:	d1fa      	bne.n	8005e84 <strcat+0xc>
 8005e8e:	bd10      	pop	{r4, pc}
 8005e90:	0022      	movs	r2, r4
 8005e92:	e7f3      	b.n	8005e7c <strcat+0x4>

08005e94 <_strtol_l.isra.0>:
 8005e94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e96:	001f      	movs	r7, r3
 8005e98:	000e      	movs	r6, r1
 8005e9a:	b087      	sub	sp, #28
 8005e9c:	9005      	str	r0, [sp, #20]
 8005e9e:	9101      	str	r1, [sp, #4]
 8005ea0:	9202      	str	r2, [sp, #8]
 8005ea2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8005ea4:	7834      	ldrb	r4, [r6, #0]
 8005ea6:	f001 f948 	bl	800713a <__locale_ctype_ptr_l>
 8005eaa:	2208      	movs	r2, #8
 8005eac:	1900      	adds	r0, r0, r4
 8005eae:	7843      	ldrb	r3, [r0, #1]
 8005eb0:	1c75      	adds	r5, r6, #1
 8005eb2:	4013      	ands	r3, r2
 8005eb4:	d136      	bne.n	8005f24 <_strtol_l.isra.0+0x90>
 8005eb6:	2c2d      	cmp	r4, #45	; 0x2d
 8005eb8:	d136      	bne.n	8005f28 <_strtol_l.isra.0+0x94>
 8005eba:	1cb5      	adds	r5, r6, #2
 8005ebc:	7874      	ldrb	r4, [r6, #1]
 8005ebe:	2601      	movs	r6, #1
 8005ec0:	2f00      	cmp	r7, #0
 8005ec2:	d062      	beq.n	8005f8a <_strtol_l.isra.0+0xf6>
 8005ec4:	2f10      	cmp	r7, #16
 8005ec6:	d109      	bne.n	8005edc <_strtol_l.isra.0+0x48>
 8005ec8:	2c30      	cmp	r4, #48	; 0x30
 8005eca:	d107      	bne.n	8005edc <_strtol_l.isra.0+0x48>
 8005ecc:	2220      	movs	r2, #32
 8005ece:	782b      	ldrb	r3, [r5, #0]
 8005ed0:	4393      	bics	r3, r2
 8005ed2:	2b58      	cmp	r3, #88	; 0x58
 8005ed4:	d154      	bne.n	8005f80 <_strtol_l.isra.0+0xec>
 8005ed6:	2710      	movs	r7, #16
 8005ed8:	786c      	ldrb	r4, [r5, #1]
 8005eda:	3502      	adds	r5, #2
 8005edc:	4b2d      	ldr	r3, [pc, #180]	; (8005f94 <_strtol_l.isra.0+0x100>)
 8005ede:	0039      	movs	r1, r7
 8005ee0:	18f3      	adds	r3, r6, r3
 8005ee2:	0018      	movs	r0, r3
 8005ee4:	9303      	str	r3, [sp, #12]
 8005ee6:	f7fa f9a7 	bl	8000238 <__aeabi_uidivmod>
 8005eea:	9104      	str	r1, [sp, #16]
 8005eec:	2101      	movs	r1, #1
 8005eee:	2300      	movs	r3, #0
 8005ef0:	4249      	negs	r1, r1
 8005ef2:	0002      	movs	r2, r0
 8005ef4:	468c      	mov	ip, r1
 8005ef6:	0018      	movs	r0, r3
 8005ef8:	0021      	movs	r1, r4
 8005efa:	3930      	subs	r1, #48	; 0x30
 8005efc:	2909      	cmp	r1, #9
 8005efe:	d81a      	bhi.n	8005f36 <_strtol_l.isra.0+0xa2>
 8005f00:	000c      	movs	r4, r1
 8005f02:	42a7      	cmp	r7, r4
 8005f04:	dd23      	ble.n	8005f4e <_strtol_l.isra.0+0xba>
 8005f06:	1c59      	adds	r1, r3, #1
 8005f08:	d009      	beq.n	8005f1e <_strtol_l.isra.0+0x8a>
 8005f0a:	4663      	mov	r3, ip
 8005f0c:	4282      	cmp	r2, r0
 8005f0e:	d306      	bcc.n	8005f1e <_strtol_l.isra.0+0x8a>
 8005f10:	d102      	bne.n	8005f18 <_strtol_l.isra.0+0x84>
 8005f12:	9904      	ldr	r1, [sp, #16]
 8005f14:	42a1      	cmp	r1, r4
 8005f16:	db02      	blt.n	8005f1e <_strtol_l.isra.0+0x8a>
 8005f18:	2301      	movs	r3, #1
 8005f1a:	4378      	muls	r0, r7
 8005f1c:	1820      	adds	r0, r4, r0
 8005f1e:	782c      	ldrb	r4, [r5, #0]
 8005f20:	3501      	adds	r5, #1
 8005f22:	e7e9      	b.n	8005ef8 <_strtol_l.isra.0+0x64>
 8005f24:	002e      	movs	r6, r5
 8005f26:	e7bc      	b.n	8005ea2 <_strtol_l.isra.0+0xe>
 8005f28:	2c2b      	cmp	r4, #43	; 0x2b
 8005f2a:	d001      	beq.n	8005f30 <_strtol_l.isra.0+0x9c>
 8005f2c:	001e      	movs	r6, r3
 8005f2e:	e7c7      	b.n	8005ec0 <_strtol_l.isra.0+0x2c>
 8005f30:	1cb5      	adds	r5, r6, #2
 8005f32:	7874      	ldrb	r4, [r6, #1]
 8005f34:	e7fa      	b.n	8005f2c <_strtol_l.isra.0+0x98>
 8005f36:	0021      	movs	r1, r4
 8005f38:	3941      	subs	r1, #65	; 0x41
 8005f3a:	2919      	cmp	r1, #25
 8005f3c:	d801      	bhi.n	8005f42 <_strtol_l.isra.0+0xae>
 8005f3e:	3c37      	subs	r4, #55	; 0x37
 8005f40:	e7df      	b.n	8005f02 <_strtol_l.isra.0+0x6e>
 8005f42:	0021      	movs	r1, r4
 8005f44:	3961      	subs	r1, #97	; 0x61
 8005f46:	2919      	cmp	r1, #25
 8005f48:	d801      	bhi.n	8005f4e <_strtol_l.isra.0+0xba>
 8005f4a:	3c57      	subs	r4, #87	; 0x57
 8005f4c:	e7d9      	b.n	8005f02 <_strtol_l.isra.0+0x6e>
 8005f4e:	1c5a      	adds	r2, r3, #1
 8005f50:	d108      	bne.n	8005f64 <_strtol_l.isra.0+0xd0>
 8005f52:	9a05      	ldr	r2, [sp, #20]
 8005f54:	3323      	adds	r3, #35	; 0x23
 8005f56:	6013      	str	r3, [r2, #0]
 8005f58:	9b02      	ldr	r3, [sp, #8]
 8005f5a:	9803      	ldr	r0, [sp, #12]
 8005f5c:	2b00      	cmp	r3, #0
 8005f5e:	d109      	bne.n	8005f74 <_strtol_l.isra.0+0xe0>
 8005f60:	b007      	add	sp, #28
 8005f62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f64:	2e00      	cmp	r6, #0
 8005f66:	d000      	beq.n	8005f6a <_strtol_l.isra.0+0xd6>
 8005f68:	4240      	negs	r0, r0
 8005f6a:	9a02      	ldr	r2, [sp, #8]
 8005f6c:	2a00      	cmp	r2, #0
 8005f6e:	d0f7      	beq.n	8005f60 <_strtol_l.isra.0+0xcc>
 8005f70:	2b00      	cmp	r3, #0
 8005f72:	d001      	beq.n	8005f78 <_strtol_l.isra.0+0xe4>
 8005f74:	1e6b      	subs	r3, r5, #1
 8005f76:	9301      	str	r3, [sp, #4]
 8005f78:	9b02      	ldr	r3, [sp, #8]
 8005f7a:	9a01      	ldr	r2, [sp, #4]
 8005f7c:	601a      	str	r2, [r3, #0]
 8005f7e:	e7ef      	b.n	8005f60 <_strtol_l.isra.0+0xcc>
 8005f80:	2430      	movs	r4, #48	; 0x30
 8005f82:	2f00      	cmp	r7, #0
 8005f84:	d1aa      	bne.n	8005edc <_strtol_l.isra.0+0x48>
 8005f86:	2708      	movs	r7, #8
 8005f88:	e7a8      	b.n	8005edc <_strtol_l.isra.0+0x48>
 8005f8a:	2c30      	cmp	r4, #48	; 0x30
 8005f8c:	d09e      	beq.n	8005ecc <_strtol_l.isra.0+0x38>
 8005f8e:	270a      	movs	r7, #10
 8005f90:	e7a4      	b.n	8005edc <_strtol_l.isra.0+0x48>
 8005f92:	46c0      	nop			; (mov r8, r8)
 8005f94:	7fffffff 	.word	0x7fffffff

08005f98 <strtol>:
 8005f98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005f9a:	0013      	movs	r3, r2
 8005f9c:	4a06      	ldr	r2, [pc, #24]	; (8005fb8 <strtol+0x20>)
 8005f9e:	0005      	movs	r5, r0
 8005fa0:	6810      	ldr	r0, [r2, #0]
 8005fa2:	6a04      	ldr	r4, [r0, #32]
 8005fa4:	2c00      	cmp	r4, #0
 8005fa6:	d100      	bne.n	8005faa <strtol+0x12>
 8005fa8:	4c04      	ldr	r4, [pc, #16]	; (8005fbc <strtol+0x24>)
 8005faa:	000a      	movs	r2, r1
 8005fac:	9400      	str	r4, [sp, #0]
 8005fae:	0029      	movs	r1, r5
 8005fb0:	f7ff ff70 	bl	8005e94 <_strtol_l.isra.0>
 8005fb4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8005fb6:	46c0      	nop			; (mov r8, r8)
 8005fb8:	20000018 	.word	0x20000018
 8005fbc:	2000007c 	.word	0x2000007c

08005fc0 <__swbuf_r>:
 8005fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005fc2:	0005      	movs	r5, r0
 8005fc4:	000e      	movs	r6, r1
 8005fc6:	0014      	movs	r4, r2
 8005fc8:	2800      	cmp	r0, #0
 8005fca:	d004      	beq.n	8005fd6 <__swbuf_r+0x16>
 8005fcc:	6983      	ldr	r3, [r0, #24]
 8005fce:	2b00      	cmp	r3, #0
 8005fd0:	d101      	bne.n	8005fd6 <__swbuf_r+0x16>
 8005fd2:	f001 f81f 	bl	8007014 <__sinit>
 8005fd6:	4b22      	ldr	r3, [pc, #136]	; (8006060 <__swbuf_r+0xa0>)
 8005fd8:	429c      	cmp	r4, r3
 8005fda:	d12d      	bne.n	8006038 <__swbuf_r+0x78>
 8005fdc:	686c      	ldr	r4, [r5, #4]
 8005fde:	69a3      	ldr	r3, [r4, #24]
 8005fe0:	60a3      	str	r3, [r4, #8]
 8005fe2:	89a3      	ldrh	r3, [r4, #12]
 8005fe4:	071b      	lsls	r3, r3, #28
 8005fe6:	d531      	bpl.n	800604c <__swbuf_r+0x8c>
 8005fe8:	6923      	ldr	r3, [r4, #16]
 8005fea:	2b00      	cmp	r3, #0
 8005fec:	d02e      	beq.n	800604c <__swbuf_r+0x8c>
 8005fee:	6823      	ldr	r3, [r4, #0]
 8005ff0:	6922      	ldr	r2, [r4, #16]
 8005ff2:	b2f7      	uxtb	r7, r6
 8005ff4:	1a98      	subs	r0, r3, r2
 8005ff6:	6963      	ldr	r3, [r4, #20]
 8005ff8:	b2f6      	uxtb	r6, r6
 8005ffa:	4283      	cmp	r3, r0
 8005ffc:	dc05      	bgt.n	800600a <__swbuf_r+0x4a>
 8005ffe:	0021      	movs	r1, r4
 8006000:	0028      	movs	r0, r5
 8006002:	f000 ff99 	bl	8006f38 <_fflush_r>
 8006006:	2800      	cmp	r0, #0
 8006008:	d126      	bne.n	8006058 <__swbuf_r+0x98>
 800600a:	68a3      	ldr	r3, [r4, #8]
 800600c:	3001      	adds	r0, #1
 800600e:	3b01      	subs	r3, #1
 8006010:	60a3      	str	r3, [r4, #8]
 8006012:	6823      	ldr	r3, [r4, #0]
 8006014:	1c5a      	adds	r2, r3, #1
 8006016:	6022      	str	r2, [r4, #0]
 8006018:	701f      	strb	r7, [r3, #0]
 800601a:	6963      	ldr	r3, [r4, #20]
 800601c:	4283      	cmp	r3, r0
 800601e:	d004      	beq.n	800602a <__swbuf_r+0x6a>
 8006020:	89a3      	ldrh	r3, [r4, #12]
 8006022:	07db      	lsls	r3, r3, #31
 8006024:	d51a      	bpl.n	800605c <__swbuf_r+0x9c>
 8006026:	2e0a      	cmp	r6, #10
 8006028:	d118      	bne.n	800605c <__swbuf_r+0x9c>
 800602a:	0021      	movs	r1, r4
 800602c:	0028      	movs	r0, r5
 800602e:	f000 ff83 	bl	8006f38 <_fflush_r>
 8006032:	2800      	cmp	r0, #0
 8006034:	d012      	beq.n	800605c <__swbuf_r+0x9c>
 8006036:	e00f      	b.n	8006058 <__swbuf_r+0x98>
 8006038:	4b0a      	ldr	r3, [pc, #40]	; (8006064 <__swbuf_r+0xa4>)
 800603a:	429c      	cmp	r4, r3
 800603c:	d101      	bne.n	8006042 <__swbuf_r+0x82>
 800603e:	68ac      	ldr	r4, [r5, #8]
 8006040:	e7cd      	b.n	8005fde <__swbuf_r+0x1e>
 8006042:	4b09      	ldr	r3, [pc, #36]	; (8006068 <__swbuf_r+0xa8>)
 8006044:	429c      	cmp	r4, r3
 8006046:	d1ca      	bne.n	8005fde <__swbuf_r+0x1e>
 8006048:	68ec      	ldr	r4, [r5, #12]
 800604a:	e7c8      	b.n	8005fde <__swbuf_r+0x1e>
 800604c:	0021      	movs	r1, r4
 800604e:	0028      	movs	r0, r5
 8006050:	f000 f80c 	bl	800606c <__swsetup_r>
 8006054:	2800      	cmp	r0, #0
 8006056:	d0ca      	beq.n	8005fee <__swbuf_r+0x2e>
 8006058:	2601      	movs	r6, #1
 800605a:	4276      	negs	r6, r6
 800605c:	0030      	movs	r0, r6
 800605e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006060:	08009658 	.word	0x08009658
 8006064:	08009678 	.word	0x08009678
 8006068:	08009638 	.word	0x08009638

0800606c <__swsetup_r>:
 800606c:	4b36      	ldr	r3, [pc, #216]	; (8006148 <__swsetup_r+0xdc>)
 800606e:	b570      	push	{r4, r5, r6, lr}
 8006070:	681d      	ldr	r5, [r3, #0]
 8006072:	0006      	movs	r6, r0
 8006074:	000c      	movs	r4, r1
 8006076:	2d00      	cmp	r5, #0
 8006078:	d005      	beq.n	8006086 <__swsetup_r+0x1a>
 800607a:	69ab      	ldr	r3, [r5, #24]
 800607c:	2b00      	cmp	r3, #0
 800607e:	d102      	bne.n	8006086 <__swsetup_r+0x1a>
 8006080:	0028      	movs	r0, r5
 8006082:	f000 ffc7 	bl	8007014 <__sinit>
 8006086:	4b31      	ldr	r3, [pc, #196]	; (800614c <__swsetup_r+0xe0>)
 8006088:	429c      	cmp	r4, r3
 800608a:	d10f      	bne.n	80060ac <__swsetup_r+0x40>
 800608c:	686c      	ldr	r4, [r5, #4]
 800608e:	230c      	movs	r3, #12
 8006090:	5ee2      	ldrsh	r2, [r4, r3]
 8006092:	b293      	uxth	r3, r2
 8006094:	0719      	lsls	r1, r3, #28
 8006096:	d42d      	bmi.n	80060f4 <__swsetup_r+0x88>
 8006098:	06d9      	lsls	r1, r3, #27
 800609a:	d411      	bmi.n	80060c0 <__swsetup_r+0x54>
 800609c:	2309      	movs	r3, #9
 800609e:	2001      	movs	r0, #1
 80060a0:	6033      	str	r3, [r6, #0]
 80060a2:	3337      	adds	r3, #55	; 0x37
 80060a4:	4313      	orrs	r3, r2
 80060a6:	81a3      	strh	r3, [r4, #12]
 80060a8:	4240      	negs	r0, r0
 80060aa:	bd70      	pop	{r4, r5, r6, pc}
 80060ac:	4b28      	ldr	r3, [pc, #160]	; (8006150 <__swsetup_r+0xe4>)
 80060ae:	429c      	cmp	r4, r3
 80060b0:	d101      	bne.n	80060b6 <__swsetup_r+0x4a>
 80060b2:	68ac      	ldr	r4, [r5, #8]
 80060b4:	e7eb      	b.n	800608e <__swsetup_r+0x22>
 80060b6:	4b27      	ldr	r3, [pc, #156]	; (8006154 <__swsetup_r+0xe8>)
 80060b8:	429c      	cmp	r4, r3
 80060ba:	d1e8      	bne.n	800608e <__swsetup_r+0x22>
 80060bc:	68ec      	ldr	r4, [r5, #12]
 80060be:	e7e6      	b.n	800608e <__swsetup_r+0x22>
 80060c0:	075b      	lsls	r3, r3, #29
 80060c2:	d513      	bpl.n	80060ec <__swsetup_r+0x80>
 80060c4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80060c6:	2900      	cmp	r1, #0
 80060c8:	d008      	beq.n	80060dc <__swsetup_r+0x70>
 80060ca:	0023      	movs	r3, r4
 80060cc:	3344      	adds	r3, #68	; 0x44
 80060ce:	4299      	cmp	r1, r3
 80060d0:	d002      	beq.n	80060d8 <__swsetup_r+0x6c>
 80060d2:	0030      	movs	r0, r6
 80060d4:	f001 fbd0 	bl	8007878 <_free_r>
 80060d8:	2300      	movs	r3, #0
 80060da:	6363      	str	r3, [r4, #52]	; 0x34
 80060dc:	2224      	movs	r2, #36	; 0x24
 80060de:	89a3      	ldrh	r3, [r4, #12]
 80060e0:	4393      	bics	r3, r2
 80060e2:	81a3      	strh	r3, [r4, #12]
 80060e4:	2300      	movs	r3, #0
 80060e6:	6063      	str	r3, [r4, #4]
 80060e8:	6923      	ldr	r3, [r4, #16]
 80060ea:	6023      	str	r3, [r4, #0]
 80060ec:	2308      	movs	r3, #8
 80060ee:	89a2      	ldrh	r2, [r4, #12]
 80060f0:	4313      	orrs	r3, r2
 80060f2:	81a3      	strh	r3, [r4, #12]
 80060f4:	6923      	ldr	r3, [r4, #16]
 80060f6:	2b00      	cmp	r3, #0
 80060f8:	d10b      	bne.n	8006112 <__swsetup_r+0xa6>
 80060fa:	21a0      	movs	r1, #160	; 0xa0
 80060fc:	2280      	movs	r2, #128	; 0x80
 80060fe:	89a3      	ldrh	r3, [r4, #12]
 8006100:	0089      	lsls	r1, r1, #2
 8006102:	0092      	lsls	r2, r2, #2
 8006104:	400b      	ands	r3, r1
 8006106:	4293      	cmp	r3, r2
 8006108:	d003      	beq.n	8006112 <__swsetup_r+0xa6>
 800610a:	0021      	movs	r1, r4
 800610c:	0030      	movs	r0, r6
 800610e:	f001 f84b 	bl	80071a8 <__smakebuf_r>
 8006112:	2301      	movs	r3, #1
 8006114:	89a2      	ldrh	r2, [r4, #12]
 8006116:	4013      	ands	r3, r2
 8006118:	d011      	beq.n	800613e <__swsetup_r+0xd2>
 800611a:	2300      	movs	r3, #0
 800611c:	60a3      	str	r3, [r4, #8]
 800611e:	6963      	ldr	r3, [r4, #20]
 8006120:	425b      	negs	r3, r3
 8006122:	61a3      	str	r3, [r4, #24]
 8006124:	2000      	movs	r0, #0
 8006126:	6923      	ldr	r3, [r4, #16]
 8006128:	4283      	cmp	r3, r0
 800612a:	d1be      	bne.n	80060aa <__swsetup_r+0x3e>
 800612c:	230c      	movs	r3, #12
 800612e:	5ee2      	ldrsh	r2, [r4, r3]
 8006130:	0613      	lsls	r3, r2, #24
 8006132:	d5ba      	bpl.n	80060aa <__swsetup_r+0x3e>
 8006134:	2340      	movs	r3, #64	; 0x40
 8006136:	4313      	orrs	r3, r2
 8006138:	81a3      	strh	r3, [r4, #12]
 800613a:	3801      	subs	r0, #1
 800613c:	e7b5      	b.n	80060aa <__swsetup_r+0x3e>
 800613e:	0792      	lsls	r2, r2, #30
 8006140:	d400      	bmi.n	8006144 <__swsetup_r+0xd8>
 8006142:	6963      	ldr	r3, [r4, #20]
 8006144:	60a3      	str	r3, [r4, #8]
 8006146:	e7ed      	b.n	8006124 <__swsetup_r+0xb8>
 8006148:	20000018 	.word	0x20000018
 800614c:	08009658 	.word	0x08009658
 8006150:	08009678 	.word	0x08009678
 8006154:	08009638 	.word	0x08009638

08006158 <quorem>:
 8006158:	b5f0      	push	{r4, r5, r6, r7, lr}
 800615a:	6903      	ldr	r3, [r0, #16]
 800615c:	690c      	ldr	r4, [r1, #16]
 800615e:	b089      	sub	sp, #36	; 0x24
 8006160:	0007      	movs	r7, r0
 8006162:	9105      	str	r1, [sp, #20]
 8006164:	2600      	movs	r6, #0
 8006166:	42a3      	cmp	r3, r4
 8006168:	db65      	blt.n	8006236 <quorem+0xde>
 800616a:	000b      	movs	r3, r1
 800616c:	3c01      	subs	r4, #1
 800616e:	3314      	adds	r3, #20
 8006170:	00a5      	lsls	r5, r4, #2
 8006172:	9303      	str	r3, [sp, #12]
 8006174:	195b      	adds	r3, r3, r5
 8006176:	9304      	str	r3, [sp, #16]
 8006178:	0003      	movs	r3, r0
 800617a:	3314      	adds	r3, #20
 800617c:	9302      	str	r3, [sp, #8]
 800617e:	195d      	adds	r5, r3, r5
 8006180:	9b04      	ldr	r3, [sp, #16]
 8006182:	6828      	ldr	r0, [r5, #0]
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	1c59      	adds	r1, r3, #1
 8006188:	9301      	str	r3, [sp, #4]
 800618a:	f7f9 ffcf 	bl	800012c <__udivsi3>
 800618e:	9001      	str	r0, [sp, #4]
 8006190:	42b0      	cmp	r0, r6
 8006192:	d029      	beq.n	80061e8 <quorem+0x90>
 8006194:	9b03      	ldr	r3, [sp, #12]
 8006196:	9802      	ldr	r0, [sp, #8]
 8006198:	469c      	mov	ip, r3
 800619a:	9606      	str	r6, [sp, #24]
 800619c:	4662      	mov	r2, ip
 800619e:	ca08      	ldmia	r2!, {r3}
 80061a0:	4694      	mov	ip, r2
 80061a2:	9a01      	ldr	r2, [sp, #4]
 80061a4:	b299      	uxth	r1, r3
 80061a6:	4351      	muls	r1, r2
 80061a8:	0c1b      	lsrs	r3, r3, #16
 80061aa:	4353      	muls	r3, r2
 80061ac:	1989      	adds	r1, r1, r6
 80061ae:	0c0a      	lsrs	r2, r1, #16
 80061b0:	189b      	adds	r3, r3, r2
 80061b2:	9307      	str	r3, [sp, #28]
 80061b4:	0c1e      	lsrs	r6, r3, #16
 80061b6:	6803      	ldr	r3, [r0, #0]
 80061b8:	b289      	uxth	r1, r1
 80061ba:	b29a      	uxth	r2, r3
 80061bc:	9b06      	ldr	r3, [sp, #24]
 80061be:	18d2      	adds	r2, r2, r3
 80061c0:	6803      	ldr	r3, [r0, #0]
 80061c2:	1a52      	subs	r2, r2, r1
 80061c4:	0c19      	lsrs	r1, r3, #16
 80061c6:	466b      	mov	r3, sp
 80061c8:	8b9b      	ldrh	r3, [r3, #28]
 80061ca:	1acb      	subs	r3, r1, r3
 80061cc:	1411      	asrs	r1, r2, #16
 80061ce:	185b      	adds	r3, r3, r1
 80061d0:	1419      	asrs	r1, r3, #16
 80061d2:	b292      	uxth	r2, r2
 80061d4:	041b      	lsls	r3, r3, #16
 80061d6:	431a      	orrs	r2, r3
 80061d8:	9b04      	ldr	r3, [sp, #16]
 80061da:	9106      	str	r1, [sp, #24]
 80061dc:	c004      	stmia	r0!, {r2}
 80061de:	4563      	cmp	r3, ip
 80061e0:	d2dc      	bcs.n	800619c <quorem+0x44>
 80061e2:	682b      	ldr	r3, [r5, #0]
 80061e4:	2b00      	cmp	r3, #0
 80061e6:	d02d      	beq.n	8006244 <quorem+0xec>
 80061e8:	9905      	ldr	r1, [sp, #20]
 80061ea:	0038      	movs	r0, r7
 80061ec:	f001 fa64 	bl	80076b8 <__mcmp>
 80061f0:	2800      	cmp	r0, #0
 80061f2:	db1f      	blt.n	8006234 <quorem+0xdc>
 80061f4:	2500      	movs	r5, #0
 80061f6:	9b01      	ldr	r3, [sp, #4]
 80061f8:	9802      	ldr	r0, [sp, #8]
 80061fa:	3301      	adds	r3, #1
 80061fc:	9903      	ldr	r1, [sp, #12]
 80061fe:	9301      	str	r3, [sp, #4]
 8006200:	6802      	ldr	r2, [r0, #0]
 8006202:	c908      	ldmia	r1!, {r3}
 8006204:	b292      	uxth	r2, r2
 8006206:	1955      	adds	r5, r2, r5
 8006208:	b29a      	uxth	r2, r3
 800620a:	1aaa      	subs	r2, r5, r2
 800620c:	6805      	ldr	r5, [r0, #0]
 800620e:	0c1b      	lsrs	r3, r3, #16
 8006210:	0c2d      	lsrs	r5, r5, #16
 8006212:	1aeb      	subs	r3, r5, r3
 8006214:	1415      	asrs	r5, r2, #16
 8006216:	195b      	adds	r3, r3, r5
 8006218:	141d      	asrs	r5, r3, #16
 800621a:	b292      	uxth	r2, r2
 800621c:	041b      	lsls	r3, r3, #16
 800621e:	4313      	orrs	r3, r2
 8006220:	c008      	stmia	r0!, {r3}
 8006222:	9b04      	ldr	r3, [sp, #16]
 8006224:	428b      	cmp	r3, r1
 8006226:	d2eb      	bcs.n	8006200 <quorem+0xa8>
 8006228:	9a02      	ldr	r2, [sp, #8]
 800622a:	00a3      	lsls	r3, r4, #2
 800622c:	18d3      	adds	r3, r2, r3
 800622e:	681a      	ldr	r2, [r3, #0]
 8006230:	2a00      	cmp	r2, #0
 8006232:	d011      	beq.n	8006258 <quorem+0x100>
 8006234:	9e01      	ldr	r6, [sp, #4]
 8006236:	0030      	movs	r0, r6
 8006238:	b009      	add	sp, #36	; 0x24
 800623a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800623c:	682b      	ldr	r3, [r5, #0]
 800623e:	2b00      	cmp	r3, #0
 8006240:	d104      	bne.n	800624c <quorem+0xf4>
 8006242:	3c01      	subs	r4, #1
 8006244:	9b02      	ldr	r3, [sp, #8]
 8006246:	3d04      	subs	r5, #4
 8006248:	42ab      	cmp	r3, r5
 800624a:	d3f7      	bcc.n	800623c <quorem+0xe4>
 800624c:	613c      	str	r4, [r7, #16]
 800624e:	e7cb      	b.n	80061e8 <quorem+0x90>
 8006250:	681a      	ldr	r2, [r3, #0]
 8006252:	2a00      	cmp	r2, #0
 8006254:	d104      	bne.n	8006260 <quorem+0x108>
 8006256:	3c01      	subs	r4, #1
 8006258:	9a02      	ldr	r2, [sp, #8]
 800625a:	3b04      	subs	r3, #4
 800625c:	429a      	cmp	r2, r3
 800625e:	d3f7      	bcc.n	8006250 <quorem+0xf8>
 8006260:	613c      	str	r4, [r7, #16]
 8006262:	e7e7      	b.n	8006234 <quorem+0xdc>

08006264 <_dtoa_r>:
 8006264:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006266:	0016      	movs	r6, r2
 8006268:	001f      	movs	r7, r3
 800626a:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800626c:	b09b      	sub	sp, #108	; 0x6c
 800626e:	9002      	str	r0, [sp, #8]
 8006270:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8006272:	9606      	str	r6, [sp, #24]
 8006274:	9707      	str	r7, [sp, #28]
 8006276:	2c00      	cmp	r4, #0
 8006278:	d108      	bne.n	800628c <_dtoa_r+0x28>
 800627a:	2010      	movs	r0, #16
 800627c:	f000 ffd8 	bl	8007230 <malloc>
 8006280:	9b02      	ldr	r3, [sp, #8]
 8006282:	6258      	str	r0, [r3, #36]	; 0x24
 8006284:	6044      	str	r4, [r0, #4]
 8006286:	6084      	str	r4, [r0, #8]
 8006288:	6004      	str	r4, [r0, #0]
 800628a:	60c4      	str	r4, [r0, #12]
 800628c:	9b02      	ldr	r3, [sp, #8]
 800628e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006290:	6819      	ldr	r1, [r3, #0]
 8006292:	2900      	cmp	r1, #0
 8006294:	d00b      	beq.n	80062ae <_dtoa_r+0x4a>
 8006296:	685a      	ldr	r2, [r3, #4]
 8006298:	2301      	movs	r3, #1
 800629a:	4093      	lsls	r3, r2
 800629c:	604a      	str	r2, [r1, #4]
 800629e:	608b      	str	r3, [r1, #8]
 80062a0:	9802      	ldr	r0, [sp, #8]
 80062a2:	f001 f82d 	bl	8007300 <_Bfree>
 80062a6:	2200      	movs	r2, #0
 80062a8:	9b02      	ldr	r3, [sp, #8]
 80062aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80062ac:	601a      	str	r2, [r3, #0]
 80062ae:	2f00      	cmp	r7, #0
 80062b0:	da20      	bge.n	80062f4 <_dtoa_r+0x90>
 80062b2:	2301      	movs	r3, #1
 80062b4:	602b      	str	r3, [r5, #0]
 80062b6:	007b      	lsls	r3, r7, #1
 80062b8:	085b      	lsrs	r3, r3, #1
 80062ba:	9307      	str	r3, [sp, #28]
 80062bc:	9c07      	ldr	r4, [sp, #28]
 80062be:	4bb2      	ldr	r3, [pc, #712]	; (8006588 <_dtoa_r+0x324>)
 80062c0:	0022      	movs	r2, r4
 80062c2:	9317      	str	r3, [sp, #92]	; 0x5c
 80062c4:	401a      	ands	r2, r3
 80062c6:	429a      	cmp	r2, r3
 80062c8:	d117      	bne.n	80062fa <_dtoa_r+0x96>
 80062ca:	4bb0      	ldr	r3, [pc, #704]	; (800658c <_dtoa_r+0x328>)
 80062cc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80062ce:	6013      	str	r3, [r2, #0]
 80062d0:	9b06      	ldr	r3, [sp, #24]
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	d103      	bne.n	80062de <_dtoa_r+0x7a>
 80062d6:	0324      	lsls	r4, r4, #12
 80062d8:	d101      	bne.n	80062de <_dtoa_r+0x7a>
 80062da:	f000 fd87 	bl	8006dec <_dtoa_r+0xb88>
 80062de:	4bac      	ldr	r3, [pc, #688]	; (8006590 <_dtoa_r+0x32c>)
 80062e0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80062e2:	9308      	str	r3, [sp, #32]
 80062e4:	2a00      	cmp	r2, #0
 80062e6:	d002      	beq.n	80062ee <_dtoa_r+0x8a>
 80062e8:	4baa      	ldr	r3, [pc, #680]	; (8006594 <_dtoa_r+0x330>)
 80062ea:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80062ec:	6013      	str	r3, [r2, #0]
 80062ee:	9808      	ldr	r0, [sp, #32]
 80062f0:	b01b      	add	sp, #108	; 0x6c
 80062f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80062f4:	2300      	movs	r3, #0
 80062f6:	602b      	str	r3, [r5, #0]
 80062f8:	e7e0      	b.n	80062bc <_dtoa_r+0x58>
 80062fa:	9e06      	ldr	r6, [sp, #24]
 80062fc:	9f07      	ldr	r7, [sp, #28]
 80062fe:	2200      	movs	r2, #0
 8006300:	2300      	movs	r3, #0
 8006302:	0030      	movs	r0, r6
 8006304:	0039      	movs	r1, r7
 8006306:	f7fa f897 	bl	8000438 <__aeabi_dcmpeq>
 800630a:	1e05      	subs	r5, r0, #0
 800630c:	d00b      	beq.n	8006326 <_dtoa_r+0xc2>
 800630e:	2301      	movs	r3, #1
 8006310:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8006312:	6013      	str	r3, [r2, #0]
 8006314:	4ba0      	ldr	r3, [pc, #640]	; (8006598 <_dtoa_r+0x334>)
 8006316:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8006318:	9308      	str	r3, [sp, #32]
 800631a:	2a00      	cmp	r2, #0
 800631c:	d0e7      	beq.n	80062ee <_dtoa_r+0x8a>
 800631e:	4a9f      	ldr	r2, [pc, #636]	; (800659c <_dtoa_r+0x338>)
 8006320:	9924      	ldr	r1, [sp, #144]	; 0x90
 8006322:	600a      	str	r2, [r1, #0]
 8006324:	e7e3      	b.n	80062ee <_dtoa_r+0x8a>
 8006326:	ab18      	add	r3, sp, #96	; 0x60
 8006328:	9301      	str	r3, [sp, #4]
 800632a:	ab19      	add	r3, sp, #100	; 0x64
 800632c:	9300      	str	r3, [sp, #0]
 800632e:	0032      	movs	r2, r6
 8006330:	003b      	movs	r3, r7
 8006332:	9802      	ldr	r0, [sp, #8]
 8006334:	f001 fa3e 	bl	80077b4 <__d2b>
 8006338:	0063      	lsls	r3, r4, #1
 800633a:	9003      	str	r0, [sp, #12]
 800633c:	0d5b      	lsrs	r3, r3, #21
 800633e:	d074      	beq.n	800642a <_dtoa_r+0x1c6>
 8006340:	033a      	lsls	r2, r7, #12
 8006342:	4c97      	ldr	r4, [pc, #604]	; (80065a0 <_dtoa_r+0x33c>)
 8006344:	0b12      	lsrs	r2, r2, #12
 8006346:	4314      	orrs	r4, r2
 8006348:	0021      	movs	r1, r4
 800634a:	4a96      	ldr	r2, [pc, #600]	; (80065a4 <_dtoa_r+0x340>)
 800634c:	0030      	movs	r0, r6
 800634e:	9516      	str	r5, [sp, #88]	; 0x58
 8006350:	189e      	adds	r6, r3, r2
 8006352:	2200      	movs	r2, #0
 8006354:	4b94      	ldr	r3, [pc, #592]	; (80065a8 <_dtoa_r+0x344>)
 8006356:	f7fc f935 	bl	80025c4 <__aeabi_dsub>
 800635a:	4a94      	ldr	r2, [pc, #592]	; (80065ac <_dtoa_r+0x348>)
 800635c:	4b94      	ldr	r3, [pc, #592]	; (80065b0 <_dtoa_r+0x34c>)
 800635e:	f7fb febf 	bl	80020e0 <__aeabi_dmul>
 8006362:	4a94      	ldr	r2, [pc, #592]	; (80065b4 <_dtoa_r+0x350>)
 8006364:	4b94      	ldr	r3, [pc, #592]	; (80065b8 <_dtoa_r+0x354>)
 8006366:	f7fa ff95 	bl	8001294 <__aeabi_dadd>
 800636a:	0004      	movs	r4, r0
 800636c:	0030      	movs	r0, r6
 800636e:	000d      	movs	r5, r1
 8006370:	f7fc fcc2 	bl	8002cf8 <__aeabi_i2d>
 8006374:	4a91      	ldr	r2, [pc, #580]	; (80065bc <_dtoa_r+0x358>)
 8006376:	4b92      	ldr	r3, [pc, #584]	; (80065c0 <_dtoa_r+0x35c>)
 8006378:	f7fb feb2 	bl	80020e0 <__aeabi_dmul>
 800637c:	0002      	movs	r2, r0
 800637e:	000b      	movs	r3, r1
 8006380:	0020      	movs	r0, r4
 8006382:	0029      	movs	r1, r5
 8006384:	f7fa ff86 	bl	8001294 <__aeabi_dadd>
 8006388:	0004      	movs	r4, r0
 800638a:	000d      	movs	r5, r1
 800638c:	f7fc fc7e 	bl	8002c8c <__aeabi_d2iz>
 8006390:	2200      	movs	r2, #0
 8006392:	0007      	movs	r7, r0
 8006394:	2300      	movs	r3, #0
 8006396:	0020      	movs	r0, r4
 8006398:	0029      	movs	r1, r5
 800639a:	f7fa f853 	bl	8000444 <__aeabi_dcmplt>
 800639e:	2800      	cmp	r0, #0
 80063a0:	d009      	beq.n	80063b6 <_dtoa_r+0x152>
 80063a2:	0038      	movs	r0, r7
 80063a4:	f7fc fca8 	bl	8002cf8 <__aeabi_i2d>
 80063a8:	002b      	movs	r3, r5
 80063aa:	0022      	movs	r2, r4
 80063ac:	f7fa f844 	bl	8000438 <__aeabi_dcmpeq>
 80063b0:	4243      	negs	r3, r0
 80063b2:	4158      	adcs	r0, r3
 80063b4:	1a3f      	subs	r7, r7, r0
 80063b6:	2301      	movs	r3, #1
 80063b8:	9314      	str	r3, [sp, #80]	; 0x50
 80063ba:	2f16      	cmp	r7, #22
 80063bc:	d80d      	bhi.n	80063da <_dtoa_r+0x176>
 80063be:	4981      	ldr	r1, [pc, #516]	; (80065c4 <_dtoa_r+0x360>)
 80063c0:	00fb      	lsls	r3, r7, #3
 80063c2:	18c9      	adds	r1, r1, r3
 80063c4:	6808      	ldr	r0, [r1, #0]
 80063c6:	6849      	ldr	r1, [r1, #4]
 80063c8:	9a06      	ldr	r2, [sp, #24]
 80063ca:	9b07      	ldr	r3, [sp, #28]
 80063cc:	f7fa f84e 	bl	800046c <__aeabi_dcmpgt>
 80063d0:	2800      	cmp	r0, #0
 80063d2:	d046      	beq.n	8006462 <_dtoa_r+0x1fe>
 80063d4:	2300      	movs	r3, #0
 80063d6:	3f01      	subs	r7, #1
 80063d8:	9314      	str	r3, [sp, #80]	; 0x50
 80063da:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80063dc:	1b9e      	subs	r6, r3, r6
 80063de:	2300      	movs	r3, #0
 80063e0:	930a      	str	r3, [sp, #40]	; 0x28
 80063e2:	0033      	movs	r3, r6
 80063e4:	3b01      	subs	r3, #1
 80063e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80063e8:	d504      	bpl.n	80063f4 <_dtoa_r+0x190>
 80063ea:	2301      	movs	r3, #1
 80063ec:	1b9b      	subs	r3, r3, r6
 80063ee:	930a      	str	r3, [sp, #40]	; 0x28
 80063f0:	2300      	movs	r3, #0
 80063f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80063f4:	2f00      	cmp	r7, #0
 80063f6:	db36      	blt.n	8006466 <_dtoa_r+0x202>
 80063f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80063fa:	9711      	str	r7, [sp, #68]	; 0x44
 80063fc:	19db      	adds	r3, r3, r7
 80063fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8006400:	2300      	movs	r3, #0
 8006402:	9304      	str	r3, [sp, #16]
 8006404:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006406:	2401      	movs	r4, #1
 8006408:	2b09      	cmp	r3, #9
 800640a:	d900      	bls.n	800640e <_dtoa_r+0x1aa>
 800640c:	e084      	b.n	8006518 <_dtoa_r+0x2b4>
 800640e:	2b05      	cmp	r3, #5
 8006410:	dd02      	ble.n	8006418 <_dtoa_r+0x1b4>
 8006412:	2400      	movs	r4, #0
 8006414:	3b04      	subs	r3, #4
 8006416:	9320      	str	r3, [sp, #128]	; 0x80
 8006418:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800641a:	1e98      	subs	r0, r3, #2
 800641c:	2803      	cmp	r0, #3
 800641e:	d900      	bls.n	8006422 <_dtoa_r+0x1be>
 8006420:	e084      	b.n	800652c <_dtoa_r+0x2c8>
 8006422:	f7f9 fe79 	bl	8000118 <__gnu_thumb1_case_uqi>
 8006426:	7775      	.short	0x7775
 8006428:	6a28      	.short	0x6a28
 800642a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800642c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800642e:	189e      	adds	r6, r3, r2
 8006430:	4b65      	ldr	r3, [pc, #404]	; (80065c8 <_dtoa_r+0x364>)
 8006432:	18f2      	adds	r2, r6, r3
 8006434:	2a20      	cmp	r2, #32
 8006436:	dd0f      	ble.n	8006458 <_dtoa_r+0x1f4>
 8006438:	2340      	movs	r3, #64	; 0x40
 800643a:	1a9b      	subs	r3, r3, r2
 800643c:	409c      	lsls	r4, r3
 800643e:	4b63      	ldr	r3, [pc, #396]	; (80065cc <_dtoa_r+0x368>)
 8006440:	9806      	ldr	r0, [sp, #24]
 8006442:	18f3      	adds	r3, r6, r3
 8006444:	40d8      	lsrs	r0, r3
 8006446:	4320      	orrs	r0, r4
 8006448:	f7fc fc90 	bl	8002d6c <__aeabi_ui2d>
 800644c:	2301      	movs	r3, #1
 800644e:	4c60      	ldr	r4, [pc, #384]	; (80065d0 <_dtoa_r+0x36c>)
 8006450:	3e01      	subs	r6, #1
 8006452:	1909      	adds	r1, r1, r4
 8006454:	9316      	str	r3, [sp, #88]	; 0x58
 8006456:	e77c      	b.n	8006352 <_dtoa_r+0xee>
 8006458:	2320      	movs	r3, #32
 800645a:	9806      	ldr	r0, [sp, #24]
 800645c:	1a9b      	subs	r3, r3, r2
 800645e:	4098      	lsls	r0, r3
 8006460:	e7f2      	b.n	8006448 <_dtoa_r+0x1e4>
 8006462:	9014      	str	r0, [sp, #80]	; 0x50
 8006464:	e7b9      	b.n	80063da <_dtoa_r+0x176>
 8006466:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006468:	1bdb      	subs	r3, r3, r7
 800646a:	930a      	str	r3, [sp, #40]	; 0x28
 800646c:	427b      	negs	r3, r7
 800646e:	9304      	str	r3, [sp, #16]
 8006470:	2300      	movs	r3, #0
 8006472:	9311      	str	r3, [sp, #68]	; 0x44
 8006474:	e7c6      	b.n	8006404 <_dtoa_r+0x1a0>
 8006476:	2301      	movs	r3, #1
 8006478:	930d      	str	r3, [sp, #52]	; 0x34
 800647a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800647c:	2b00      	cmp	r3, #0
 800647e:	dd59      	ble.n	8006534 <_dtoa_r+0x2d0>
 8006480:	930c      	str	r3, [sp, #48]	; 0x30
 8006482:	9309      	str	r3, [sp, #36]	; 0x24
 8006484:	9a02      	ldr	r2, [sp, #8]
 8006486:	6a55      	ldr	r5, [r2, #36]	; 0x24
 8006488:	2200      	movs	r2, #0
 800648a:	606a      	str	r2, [r5, #4]
 800648c:	3204      	adds	r2, #4
 800648e:	0010      	movs	r0, r2
 8006490:	3014      	adds	r0, #20
 8006492:	6869      	ldr	r1, [r5, #4]
 8006494:	4298      	cmp	r0, r3
 8006496:	d952      	bls.n	800653e <_dtoa_r+0x2da>
 8006498:	9802      	ldr	r0, [sp, #8]
 800649a:	f000 fef9 	bl	8007290 <_Balloc>
 800649e:	9b02      	ldr	r3, [sp, #8]
 80064a0:	6028      	str	r0, [r5, #0]
 80064a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064a4:	681b      	ldr	r3, [r3, #0]
 80064a6:	9308      	str	r3, [sp, #32]
 80064a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80064aa:	2b0e      	cmp	r3, #14
 80064ac:	d900      	bls.n	80064b0 <_dtoa_r+0x24c>
 80064ae:	e10a      	b.n	80066c6 <_dtoa_r+0x462>
 80064b0:	2c00      	cmp	r4, #0
 80064b2:	d100      	bne.n	80064b6 <_dtoa_r+0x252>
 80064b4:	e107      	b.n	80066c6 <_dtoa_r+0x462>
 80064b6:	9b06      	ldr	r3, [sp, #24]
 80064b8:	9c07      	ldr	r4, [sp, #28]
 80064ba:	9312      	str	r3, [sp, #72]	; 0x48
 80064bc:	9413      	str	r4, [sp, #76]	; 0x4c
 80064be:	2f00      	cmp	r7, #0
 80064c0:	dc00      	bgt.n	80064c4 <_dtoa_r+0x260>
 80064c2:	e089      	b.n	80065d8 <_dtoa_r+0x374>
 80064c4:	210f      	movs	r1, #15
 80064c6:	003a      	movs	r2, r7
 80064c8:	4b3e      	ldr	r3, [pc, #248]	; (80065c4 <_dtoa_r+0x360>)
 80064ca:	400a      	ands	r2, r1
 80064cc:	00d2      	lsls	r2, r2, #3
 80064ce:	189b      	adds	r3, r3, r2
 80064d0:	681d      	ldr	r5, [r3, #0]
 80064d2:	685e      	ldr	r6, [r3, #4]
 80064d4:	2302      	movs	r3, #2
 80064d6:	113c      	asrs	r4, r7, #4
 80064d8:	930e      	str	r3, [sp, #56]	; 0x38
 80064da:	06e3      	lsls	r3, r4, #27
 80064dc:	d50b      	bpl.n	80064f6 <_dtoa_r+0x292>
 80064de:	4b3d      	ldr	r3, [pc, #244]	; (80065d4 <_dtoa_r+0x370>)
 80064e0:	400c      	ands	r4, r1
 80064e2:	6a1a      	ldr	r2, [r3, #32]
 80064e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064e6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80064e8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80064ea:	f7fb f9ef 	bl	80018cc <__aeabi_ddiv>
 80064ee:	2303      	movs	r3, #3
 80064f0:	9006      	str	r0, [sp, #24]
 80064f2:	9107      	str	r1, [sp, #28]
 80064f4:	930e      	str	r3, [sp, #56]	; 0x38
 80064f6:	2300      	movs	r3, #0
 80064f8:	e03a      	b.n	8006570 <_dtoa_r+0x30c>
 80064fa:	2301      	movs	r3, #1
 80064fc:	930d      	str	r3, [sp, #52]	; 0x34
 80064fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8006500:	18fb      	adds	r3, r7, r3
 8006502:	930c      	str	r3, [sp, #48]	; 0x30
 8006504:	3301      	adds	r3, #1
 8006506:	9309      	str	r3, [sp, #36]	; 0x24
 8006508:	2b00      	cmp	r3, #0
 800650a:	dcbb      	bgt.n	8006484 <_dtoa_r+0x220>
 800650c:	2301      	movs	r3, #1
 800650e:	e7b9      	b.n	8006484 <_dtoa_r+0x220>
 8006510:	2300      	movs	r3, #0
 8006512:	e7b1      	b.n	8006478 <_dtoa_r+0x214>
 8006514:	2300      	movs	r3, #0
 8006516:	e7f1      	b.n	80064fc <_dtoa_r+0x298>
 8006518:	2300      	movs	r3, #0
 800651a:	940d      	str	r4, [sp, #52]	; 0x34
 800651c:	9320      	str	r3, [sp, #128]	; 0x80
 800651e:	3b01      	subs	r3, #1
 8006520:	2200      	movs	r2, #0
 8006522:	930c      	str	r3, [sp, #48]	; 0x30
 8006524:	9309      	str	r3, [sp, #36]	; 0x24
 8006526:	3313      	adds	r3, #19
 8006528:	9221      	str	r2, [sp, #132]	; 0x84
 800652a:	e7ab      	b.n	8006484 <_dtoa_r+0x220>
 800652c:	2301      	movs	r3, #1
 800652e:	930d      	str	r3, [sp, #52]	; 0x34
 8006530:	3b02      	subs	r3, #2
 8006532:	e7f5      	b.n	8006520 <_dtoa_r+0x2bc>
 8006534:	2301      	movs	r3, #1
 8006536:	930c      	str	r3, [sp, #48]	; 0x30
 8006538:	9309      	str	r3, [sp, #36]	; 0x24
 800653a:	001a      	movs	r2, r3
 800653c:	e7f4      	b.n	8006528 <_dtoa_r+0x2c4>
 800653e:	3101      	adds	r1, #1
 8006540:	6069      	str	r1, [r5, #4]
 8006542:	0052      	lsls	r2, r2, #1
 8006544:	e7a3      	b.n	800648e <_dtoa_r+0x22a>
 8006546:	2301      	movs	r3, #1
 8006548:	421c      	tst	r4, r3
 800654a:	d00e      	beq.n	800656a <_dtoa_r+0x306>
 800654c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800654e:	4a21      	ldr	r2, [pc, #132]	; (80065d4 <_dtoa_r+0x370>)
 8006550:	3301      	adds	r3, #1
 8006552:	930e      	str	r3, [sp, #56]	; 0x38
 8006554:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006556:	0028      	movs	r0, r5
 8006558:	00db      	lsls	r3, r3, #3
 800655a:	189b      	adds	r3, r3, r2
 800655c:	0031      	movs	r1, r6
 800655e:	681a      	ldr	r2, [r3, #0]
 8006560:	685b      	ldr	r3, [r3, #4]
 8006562:	f7fb fdbd 	bl	80020e0 <__aeabi_dmul>
 8006566:	0005      	movs	r5, r0
 8006568:	000e      	movs	r6, r1
 800656a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800656c:	1064      	asrs	r4, r4, #1
 800656e:	3301      	adds	r3, #1
 8006570:	9310      	str	r3, [sp, #64]	; 0x40
 8006572:	2c00      	cmp	r4, #0
 8006574:	d1e7      	bne.n	8006546 <_dtoa_r+0x2e2>
 8006576:	9806      	ldr	r0, [sp, #24]
 8006578:	9907      	ldr	r1, [sp, #28]
 800657a:	002a      	movs	r2, r5
 800657c:	0033      	movs	r3, r6
 800657e:	f7fb f9a5 	bl	80018cc <__aeabi_ddiv>
 8006582:	9006      	str	r0, [sp, #24]
 8006584:	9107      	str	r1, [sp, #28]
 8006586:	e042      	b.n	800660e <_dtoa_r+0x3aa>
 8006588:	7ff00000 	.word	0x7ff00000
 800658c:	0000270f 	.word	0x0000270f
 8006590:	08009631 	.word	0x08009631
 8006594:	08009634 	.word	0x08009634
 8006598:	08009604 	.word	0x08009604
 800659c:	08009605 	.word	0x08009605
 80065a0:	3ff00000 	.word	0x3ff00000
 80065a4:	fffffc01 	.word	0xfffffc01
 80065a8:	3ff80000 	.word	0x3ff80000
 80065ac:	636f4361 	.word	0x636f4361
 80065b0:	3fd287a7 	.word	0x3fd287a7
 80065b4:	8b60c8b3 	.word	0x8b60c8b3
 80065b8:	3fc68a28 	.word	0x3fc68a28
 80065bc:	509f79fb 	.word	0x509f79fb
 80065c0:	3fd34413 	.word	0x3fd34413
 80065c4:	080096d0 	.word	0x080096d0
 80065c8:	00000432 	.word	0x00000432
 80065cc:	00000412 	.word	0x00000412
 80065d0:	fe100000 	.word	0xfe100000
 80065d4:	080096a8 	.word	0x080096a8
 80065d8:	2302      	movs	r3, #2
 80065da:	930e      	str	r3, [sp, #56]	; 0x38
 80065dc:	2f00      	cmp	r7, #0
 80065de:	d016      	beq.n	800660e <_dtoa_r+0x3aa>
 80065e0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80065e2:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80065e4:	427c      	negs	r4, r7
 80065e6:	330d      	adds	r3, #13
 80065e8:	4023      	ands	r3, r4
 80065ea:	4ace      	ldr	r2, [pc, #824]	; (8006924 <_dtoa_r+0x6c0>)
 80065ec:	00db      	lsls	r3, r3, #3
 80065ee:	18d3      	adds	r3, r2, r3
 80065f0:	681a      	ldr	r2, [r3, #0]
 80065f2:	685b      	ldr	r3, [r3, #4]
 80065f4:	f7fb fd74 	bl	80020e0 <__aeabi_dmul>
 80065f8:	2300      	movs	r3, #0
 80065fa:	2601      	movs	r6, #1
 80065fc:	001d      	movs	r5, r3
 80065fe:	9006      	str	r0, [sp, #24]
 8006600:	9107      	str	r1, [sp, #28]
 8006602:	1124      	asrs	r4, r4, #4
 8006604:	2c00      	cmp	r4, #0
 8006606:	d000      	beq.n	800660a <_dtoa_r+0x3a6>
 8006608:	e08c      	b.n	8006724 <_dtoa_r+0x4c0>
 800660a:	2b00      	cmp	r3, #0
 800660c:	d1b9      	bne.n	8006582 <_dtoa_r+0x31e>
 800660e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006610:	2b00      	cmp	r3, #0
 8006612:	d100      	bne.n	8006616 <_dtoa_r+0x3b2>
 8006614:	e096      	b.n	8006744 <_dtoa_r+0x4e0>
 8006616:	9c06      	ldr	r4, [sp, #24]
 8006618:	9d07      	ldr	r5, [sp, #28]
 800661a:	2200      	movs	r2, #0
 800661c:	4bc2      	ldr	r3, [pc, #776]	; (8006928 <_dtoa_r+0x6c4>)
 800661e:	0020      	movs	r0, r4
 8006620:	0029      	movs	r1, r5
 8006622:	f7f9 ff0f 	bl	8000444 <__aeabi_dcmplt>
 8006626:	2800      	cmp	r0, #0
 8006628:	d100      	bne.n	800662c <_dtoa_r+0x3c8>
 800662a:	e08b      	b.n	8006744 <_dtoa_r+0x4e0>
 800662c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800662e:	2b00      	cmp	r3, #0
 8006630:	d100      	bne.n	8006634 <_dtoa_r+0x3d0>
 8006632:	e087      	b.n	8006744 <_dtoa_r+0x4e0>
 8006634:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006636:	2b00      	cmp	r3, #0
 8006638:	dd41      	ble.n	80066be <_dtoa_r+0x45a>
 800663a:	4bbc      	ldr	r3, [pc, #752]	; (800692c <_dtoa_r+0x6c8>)
 800663c:	2200      	movs	r2, #0
 800663e:	0020      	movs	r0, r4
 8006640:	0029      	movs	r1, r5
 8006642:	f7fb fd4d 	bl	80020e0 <__aeabi_dmul>
 8006646:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006648:	9006      	str	r0, [sp, #24]
 800664a:	9107      	str	r1, [sp, #28]
 800664c:	3301      	adds	r3, #1
 800664e:	930e      	str	r3, [sp, #56]	; 0x38
 8006650:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006652:	1e7e      	subs	r6, r7, #1
 8006654:	980e      	ldr	r0, [sp, #56]	; 0x38
 8006656:	9310      	str	r3, [sp, #64]	; 0x40
 8006658:	f7fc fb4e 	bl	8002cf8 <__aeabi_i2d>
 800665c:	9a06      	ldr	r2, [sp, #24]
 800665e:	9b07      	ldr	r3, [sp, #28]
 8006660:	f7fb fd3e 	bl	80020e0 <__aeabi_dmul>
 8006664:	2200      	movs	r2, #0
 8006666:	4bb2      	ldr	r3, [pc, #712]	; (8006930 <_dtoa_r+0x6cc>)
 8006668:	f7fa fe14 	bl	8001294 <__aeabi_dadd>
 800666c:	4ab1      	ldr	r2, [pc, #708]	; (8006934 <_dtoa_r+0x6d0>)
 800666e:	900e      	str	r0, [sp, #56]	; 0x38
 8006670:	910f      	str	r1, [sp, #60]	; 0x3c
 8006672:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8006674:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8006676:	4694      	mov	ip, r2
 8006678:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800667a:	4463      	add	r3, ip
 800667c:	9315      	str	r3, [sp, #84]	; 0x54
 800667e:	001d      	movs	r5, r3
 8006680:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006682:	2b00      	cmp	r3, #0
 8006684:	d161      	bne.n	800674a <_dtoa_r+0x4e6>
 8006686:	9806      	ldr	r0, [sp, #24]
 8006688:	9907      	ldr	r1, [sp, #28]
 800668a:	2200      	movs	r2, #0
 800668c:	4baa      	ldr	r3, [pc, #680]	; (8006938 <_dtoa_r+0x6d4>)
 800668e:	f7fb ff99 	bl	80025c4 <__aeabi_dsub>
 8006692:	0022      	movs	r2, r4
 8006694:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006696:	9006      	str	r0, [sp, #24]
 8006698:	9107      	str	r1, [sp, #28]
 800669a:	f7f9 fee7 	bl	800046c <__aeabi_dcmpgt>
 800669e:	2800      	cmp	r0, #0
 80066a0:	d000      	beq.n	80066a4 <_dtoa_r+0x440>
 80066a2:	e2a8      	b.n	8006bf6 <_dtoa_r+0x992>
 80066a4:	48a5      	ldr	r0, [pc, #660]	; (800693c <_dtoa_r+0x6d8>)
 80066a6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80066a8:	4684      	mov	ip, r0
 80066aa:	4461      	add	r1, ip
 80066ac:	000b      	movs	r3, r1
 80066ae:	9806      	ldr	r0, [sp, #24]
 80066b0:	9907      	ldr	r1, [sp, #28]
 80066b2:	0022      	movs	r2, r4
 80066b4:	f7f9 fec6 	bl	8000444 <__aeabi_dcmplt>
 80066b8:	2800      	cmp	r0, #0
 80066ba:	d000      	beq.n	80066be <_dtoa_r+0x45a>
 80066bc:	e295      	b.n	8006bea <_dtoa_r+0x986>
 80066be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80066c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80066c2:	9306      	str	r3, [sp, #24]
 80066c4:	9407      	str	r4, [sp, #28]
 80066c6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80066c8:	2b00      	cmp	r3, #0
 80066ca:	da00      	bge.n	80066ce <_dtoa_r+0x46a>
 80066cc:	e15c      	b.n	8006988 <_dtoa_r+0x724>
 80066ce:	2f0e      	cmp	r7, #14
 80066d0:	dd00      	ble.n	80066d4 <_dtoa_r+0x470>
 80066d2:	e159      	b.n	8006988 <_dtoa_r+0x724>
 80066d4:	4b93      	ldr	r3, [pc, #588]	; (8006924 <_dtoa_r+0x6c0>)
 80066d6:	00fa      	lsls	r2, r7, #3
 80066d8:	189b      	adds	r3, r3, r2
 80066da:	685c      	ldr	r4, [r3, #4]
 80066dc:	681b      	ldr	r3, [r3, #0]
 80066de:	9304      	str	r3, [sp, #16]
 80066e0:	9405      	str	r4, [sp, #20]
 80066e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80066e4:	2b00      	cmp	r3, #0
 80066e6:	db00      	blt.n	80066ea <_dtoa_r+0x486>
 80066e8:	e0d8      	b.n	800689c <_dtoa_r+0x638>
 80066ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80066ec:	2b00      	cmp	r3, #0
 80066ee:	dd00      	ble.n	80066f2 <_dtoa_r+0x48e>
 80066f0:	e0d4      	b.n	800689c <_dtoa_r+0x638>
 80066f2:	d000      	beq.n	80066f6 <_dtoa_r+0x492>
 80066f4:	e27d      	b.n	8006bf2 <_dtoa_r+0x98e>
 80066f6:	9804      	ldr	r0, [sp, #16]
 80066f8:	9905      	ldr	r1, [sp, #20]
 80066fa:	2200      	movs	r2, #0
 80066fc:	4b8e      	ldr	r3, [pc, #568]	; (8006938 <_dtoa_r+0x6d4>)
 80066fe:	f7fb fcef 	bl	80020e0 <__aeabi_dmul>
 8006702:	9a06      	ldr	r2, [sp, #24]
 8006704:	9b07      	ldr	r3, [sp, #28]
 8006706:	f7f9 febb 	bl	8000480 <__aeabi_dcmpge>
 800670a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800670c:	9304      	str	r3, [sp, #16]
 800670e:	001e      	movs	r6, r3
 8006710:	2800      	cmp	r0, #0
 8006712:	d000      	beq.n	8006716 <_dtoa_r+0x4b2>
 8006714:	e24f      	b.n	8006bb6 <_dtoa_r+0x952>
 8006716:	9b08      	ldr	r3, [sp, #32]
 8006718:	9a08      	ldr	r2, [sp, #32]
 800671a:	1c5d      	adds	r5, r3, #1
 800671c:	2331      	movs	r3, #49	; 0x31
 800671e:	3701      	adds	r7, #1
 8006720:	7013      	strb	r3, [r2, #0]
 8006722:	e24b      	b.n	8006bbc <_dtoa_r+0x958>
 8006724:	4234      	tst	r4, r6
 8006726:	d00a      	beq.n	800673e <_dtoa_r+0x4da>
 8006728:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800672a:	4a85      	ldr	r2, [pc, #532]	; (8006940 <_dtoa_r+0x6dc>)
 800672c:	3301      	adds	r3, #1
 800672e:	930e      	str	r3, [sp, #56]	; 0x38
 8006730:	00eb      	lsls	r3, r5, #3
 8006732:	189b      	adds	r3, r3, r2
 8006734:	681a      	ldr	r2, [r3, #0]
 8006736:	685b      	ldr	r3, [r3, #4]
 8006738:	f7fb fcd2 	bl	80020e0 <__aeabi_dmul>
 800673c:	0033      	movs	r3, r6
 800673e:	1064      	asrs	r4, r4, #1
 8006740:	3501      	adds	r5, #1
 8006742:	e75f      	b.n	8006604 <_dtoa_r+0x3a0>
 8006744:	003e      	movs	r6, r7
 8006746:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006748:	e784      	b.n	8006654 <_dtoa_r+0x3f0>
 800674a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800674c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800674e:	1e5a      	subs	r2, r3, #1
 8006750:	4b74      	ldr	r3, [pc, #464]	; (8006924 <_dtoa_r+0x6c0>)
 8006752:	00d2      	lsls	r2, r2, #3
 8006754:	189b      	adds	r3, r3, r2
 8006756:	681a      	ldr	r2, [r3, #0]
 8006758:	685b      	ldr	r3, [r3, #4]
 800675a:	2900      	cmp	r1, #0
 800675c:	d049      	beq.n	80067f2 <_dtoa_r+0x58e>
 800675e:	2000      	movs	r0, #0
 8006760:	4978      	ldr	r1, [pc, #480]	; (8006944 <_dtoa_r+0x6e0>)
 8006762:	f7fb f8b3 	bl	80018cc <__aeabi_ddiv>
 8006766:	002b      	movs	r3, r5
 8006768:	0022      	movs	r2, r4
 800676a:	f7fb ff2b 	bl	80025c4 <__aeabi_dsub>
 800676e:	9b08      	ldr	r3, [sp, #32]
 8006770:	900e      	str	r0, [sp, #56]	; 0x38
 8006772:	910f      	str	r1, [sp, #60]	; 0x3c
 8006774:	9315      	str	r3, [sp, #84]	; 0x54
 8006776:	9806      	ldr	r0, [sp, #24]
 8006778:	9907      	ldr	r1, [sp, #28]
 800677a:	f7fc fa87 	bl	8002c8c <__aeabi_d2iz>
 800677e:	0004      	movs	r4, r0
 8006780:	f7fc faba 	bl	8002cf8 <__aeabi_i2d>
 8006784:	0002      	movs	r2, r0
 8006786:	000b      	movs	r3, r1
 8006788:	9806      	ldr	r0, [sp, #24]
 800678a:	9907      	ldr	r1, [sp, #28]
 800678c:	f7fb ff1a 	bl	80025c4 <__aeabi_dsub>
 8006790:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006792:	3430      	adds	r4, #48	; 0x30
 8006794:	1c5d      	adds	r5, r3, #1
 8006796:	701c      	strb	r4, [r3, #0]
 8006798:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800679a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800679c:	9006      	str	r0, [sp, #24]
 800679e:	9107      	str	r1, [sp, #28]
 80067a0:	f7f9 fe50 	bl	8000444 <__aeabi_dcmplt>
 80067a4:	2800      	cmp	r0, #0
 80067a6:	d16c      	bne.n	8006882 <_dtoa_r+0x61e>
 80067a8:	9a06      	ldr	r2, [sp, #24]
 80067aa:	9b07      	ldr	r3, [sp, #28]
 80067ac:	2000      	movs	r0, #0
 80067ae:	495e      	ldr	r1, [pc, #376]	; (8006928 <_dtoa_r+0x6c4>)
 80067b0:	f7fb ff08 	bl	80025c4 <__aeabi_dsub>
 80067b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80067b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80067b8:	f7f9 fe44 	bl	8000444 <__aeabi_dcmplt>
 80067bc:	2800      	cmp	r0, #0
 80067be:	d000      	beq.n	80067c2 <_dtoa_r+0x55e>
 80067c0:	e0c3      	b.n	800694a <_dtoa_r+0x6e6>
 80067c2:	9b08      	ldr	r3, [sp, #32]
 80067c4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80067c6:	1aeb      	subs	r3, r5, r3
 80067c8:	429a      	cmp	r2, r3
 80067ca:	dc00      	bgt.n	80067ce <_dtoa_r+0x56a>
 80067cc:	e777      	b.n	80066be <_dtoa_r+0x45a>
 80067ce:	980e      	ldr	r0, [sp, #56]	; 0x38
 80067d0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80067d2:	2200      	movs	r2, #0
 80067d4:	4b55      	ldr	r3, [pc, #340]	; (800692c <_dtoa_r+0x6c8>)
 80067d6:	f7fb fc83 	bl	80020e0 <__aeabi_dmul>
 80067da:	2200      	movs	r2, #0
 80067dc:	900e      	str	r0, [sp, #56]	; 0x38
 80067de:	910f      	str	r1, [sp, #60]	; 0x3c
 80067e0:	9806      	ldr	r0, [sp, #24]
 80067e2:	9907      	ldr	r1, [sp, #28]
 80067e4:	4b51      	ldr	r3, [pc, #324]	; (800692c <_dtoa_r+0x6c8>)
 80067e6:	f7fb fc7b 	bl	80020e0 <__aeabi_dmul>
 80067ea:	9515      	str	r5, [sp, #84]	; 0x54
 80067ec:	9006      	str	r0, [sp, #24]
 80067ee:	9107      	str	r1, [sp, #28]
 80067f0:	e7c1      	b.n	8006776 <_dtoa_r+0x512>
 80067f2:	0020      	movs	r0, r4
 80067f4:	0029      	movs	r1, r5
 80067f6:	f7fb fc73 	bl	80020e0 <__aeabi_dmul>
 80067fa:	9c08      	ldr	r4, [sp, #32]
 80067fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80067fe:	0023      	movs	r3, r4
 8006800:	4694      	mov	ip, r2
 8006802:	900e      	str	r0, [sp, #56]	; 0x38
 8006804:	910f      	str	r1, [sp, #60]	; 0x3c
 8006806:	4463      	add	r3, ip
 8006808:	9315      	str	r3, [sp, #84]	; 0x54
 800680a:	9806      	ldr	r0, [sp, #24]
 800680c:	9907      	ldr	r1, [sp, #28]
 800680e:	f7fc fa3d 	bl	8002c8c <__aeabi_d2iz>
 8006812:	0005      	movs	r5, r0
 8006814:	f7fc fa70 	bl	8002cf8 <__aeabi_i2d>
 8006818:	000b      	movs	r3, r1
 800681a:	0002      	movs	r2, r0
 800681c:	9806      	ldr	r0, [sp, #24]
 800681e:	9907      	ldr	r1, [sp, #28]
 8006820:	f7fb fed0 	bl	80025c4 <__aeabi_dsub>
 8006824:	3530      	adds	r5, #48	; 0x30
 8006826:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006828:	7025      	strb	r5, [r4, #0]
 800682a:	3401      	adds	r4, #1
 800682c:	9006      	str	r0, [sp, #24]
 800682e:	9107      	str	r1, [sp, #28]
 8006830:	42a3      	cmp	r3, r4
 8006832:	d12a      	bne.n	800688a <_dtoa_r+0x626>
 8006834:	980e      	ldr	r0, [sp, #56]	; 0x38
 8006836:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006838:	9a08      	ldr	r2, [sp, #32]
 800683a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800683c:	4694      	mov	ip, r2
 800683e:	4463      	add	r3, ip
 8006840:	2200      	movs	r2, #0
 8006842:	001d      	movs	r5, r3
 8006844:	4b3f      	ldr	r3, [pc, #252]	; (8006944 <_dtoa_r+0x6e0>)
 8006846:	f7fa fd25 	bl	8001294 <__aeabi_dadd>
 800684a:	0002      	movs	r2, r0
 800684c:	000b      	movs	r3, r1
 800684e:	9806      	ldr	r0, [sp, #24]
 8006850:	9907      	ldr	r1, [sp, #28]
 8006852:	f7f9 fe0b 	bl	800046c <__aeabi_dcmpgt>
 8006856:	2800      	cmp	r0, #0
 8006858:	d000      	beq.n	800685c <_dtoa_r+0x5f8>
 800685a:	e076      	b.n	800694a <_dtoa_r+0x6e6>
 800685c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800685e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006860:	2000      	movs	r0, #0
 8006862:	4938      	ldr	r1, [pc, #224]	; (8006944 <_dtoa_r+0x6e0>)
 8006864:	f7fb feae 	bl	80025c4 <__aeabi_dsub>
 8006868:	0002      	movs	r2, r0
 800686a:	000b      	movs	r3, r1
 800686c:	9806      	ldr	r0, [sp, #24]
 800686e:	9907      	ldr	r1, [sp, #28]
 8006870:	f7f9 fde8 	bl	8000444 <__aeabi_dcmplt>
 8006874:	2800      	cmp	r0, #0
 8006876:	d100      	bne.n	800687a <_dtoa_r+0x616>
 8006878:	e721      	b.n	80066be <_dtoa_r+0x45a>
 800687a:	1e6b      	subs	r3, r5, #1
 800687c:	781a      	ldrb	r2, [r3, #0]
 800687e:	2a30      	cmp	r2, #48	; 0x30
 8006880:	d001      	beq.n	8006886 <_dtoa_r+0x622>
 8006882:	0037      	movs	r7, r6
 8006884:	e03f      	b.n	8006906 <_dtoa_r+0x6a2>
 8006886:	001d      	movs	r5, r3
 8006888:	e7f7      	b.n	800687a <_dtoa_r+0x616>
 800688a:	9806      	ldr	r0, [sp, #24]
 800688c:	9907      	ldr	r1, [sp, #28]
 800688e:	2200      	movs	r2, #0
 8006890:	4b26      	ldr	r3, [pc, #152]	; (800692c <_dtoa_r+0x6c8>)
 8006892:	f7fb fc25 	bl	80020e0 <__aeabi_dmul>
 8006896:	9006      	str	r0, [sp, #24]
 8006898:	9107      	str	r1, [sp, #28]
 800689a:	e7b6      	b.n	800680a <_dtoa_r+0x5a6>
 800689c:	9e08      	ldr	r6, [sp, #32]
 800689e:	9a04      	ldr	r2, [sp, #16]
 80068a0:	9b05      	ldr	r3, [sp, #20]
 80068a2:	9806      	ldr	r0, [sp, #24]
 80068a4:	9907      	ldr	r1, [sp, #28]
 80068a6:	f7fb f811 	bl	80018cc <__aeabi_ddiv>
 80068aa:	f7fc f9ef 	bl	8002c8c <__aeabi_d2iz>
 80068ae:	0004      	movs	r4, r0
 80068b0:	f7fc fa22 	bl	8002cf8 <__aeabi_i2d>
 80068b4:	9a04      	ldr	r2, [sp, #16]
 80068b6:	9b05      	ldr	r3, [sp, #20]
 80068b8:	f7fb fc12 	bl	80020e0 <__aeabi_dmul>
 80068bc:	0002      	movs	r2, r0
 80068be:	000b      	movs	r3, r1
 80068c0:	9806      	ldr	r0, [sp, #24]
 80068c2:	9907      	ldr	r1, [sp, #28]
 80068c4:	f7fb fe7e 	bl	80025c4 <__aeabi_dsub>
 80068c8:	0023      	movs	r3, r4
 80068ca:	3330      	adds	r3, #48	; 0x30
 80068cc:	7033      	strb	r3, [r6, #0]
 80068ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80068d0:	9b08      	ldr	r3, [sp, #32]
 80068d2:	1c75      	adds	r5, r6, #1
 80068d4:	1aeb      	subs	r3, r5, r3
 80068d6:	429a      	cmp	r2, r3
 80068d8:	d148      	bne.n	800696c <_dtoa_r+0x708>
 80068da:	0002      	movs	r2, r0
 80068dc:	000b      	movs	r3, r1
 80068de:	f7fa fcd9 	bl	8001294 <__aeabi_dadd>
 80068e2:	9a04      	ldr	r2, [sp, #16]
 80068e4:	9b05      	ldr	r3, [sp, #20]
 80068e6:	9006      	str	r0, [sp, #24]
 80068e8:	9107      	str	r1, [sp, #28]
 80068ea:	f7f9 fdbf 	bl	800046c <__aeabi_dcmpgt>
 80068ee:	2800      	cmp	r0, #0
 80068f0:	d12a      	bne.n	8006948 <_dtoa_r+0x6e4>
 80068f2:	9a04      	ldr	r2, [sp, #16]
 80068f4:	9b05      	ldr	r3, [sp, #20]
 80068f6:	9806      	ldr	r0, [sp, #24]
 80068f8:	9907      	ldr	r1, [sp, #28]
 80068fa:	f7f9 fd9d 	bl	8000438 <__aeabi_dcmpeq>
 80068fe:	2800      	cmp	r0, #0
 8006900:	d001      	beq.n	8006906 <_dtoa_r+0x6a2>
 8006902:	07e3      	lsls	r3, r4, #31
 8006904:	d420      	bmi.n	8006948 <_dtoa_r+0x6e4>
 8006906:	9903      	ldr	r1, [sp, #12]
 8006908:	9802      	ldr	r0, [sp, #8]
 800690a:	f000 fcf9 	bl	8007300 <_Bfree>
 800690e:	2300      	movs	r3, #0
 8006910:	702b      	strb	r3, [r5, #0]
 8006912:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006914:	3701      	adds	r7, #1
 8006916:	601f      	str	r7, [r3, #0]
 8006918:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800691a:	2b00      	cmp	r3, #0
 800691c:	d100      	bne.n	8006920 <_dtoa_r+0x6bc>
 800691e:	e4e6      	b.n	80062ee <_dtoa_r+0x8a>
 8006920:	601d      	str	r5, [r3, #0]
 8006922:	e4e4      	b.n	80062ee <_dtoa_r+0x8a>
 8006924:	080096d0 	.word	0x080096d0
 8006928:	3ff00000 	.word	0x3ff00000
 800692c:	40240000 	.word	0x40240000
 8006930:	401c0000 	.word	0x401c0000
 8006934:	fcc00000 	.word	0xfcc00000
 8006938:	40140000 	.word	0x40140000
 800693c:	7cc00000 	.word	0x7cc00000
 8006940:	080096a8 	.word	0x080096a8
 8006944:	3fe00000 	.word	0x3fe00000
 8006948:	003e      	movs	r6, r7
 800694a:	1e6b      	subs	r3, r5, #1
 800694c:	781a      	ldrb	r2, [r3, #0]
 800694e:	2a39      	cmp	r2, #57	; 0x39
 8006950:	d106      	bne.n	8006960 <_dtoa_r+0x6fc>
 8006952:	9a08      	ldr	r2, [sp, #32]
 8006954:	429a      	cmp	r2, r3
 8006956:	d107      	bne.n	8006968 <_dtoa_r+0x704>
 8006958:	2330      	movs	r3, #48	; 0x30
 800695a:	7013      	strb	r3, [r2, #0]
 800695c:	0013      	movs	r3, r2
 800695e:	3601      	adds	r6, #1
 8006960:	781a      	ldrb	r2, [r3, #0]
 8006962:	3201      	adds	r2, #1
 8006964:	701a      	strb	r2, [r3, #0]
 8006966:	e78c      	b.n	8006882 <_dtoa_r+0x61e>
 8006968:	001d      	movs	r5, r3
 800696a:	e7ee      	b.n	800694a <_dtoa_r+0x6e6>
 800696c:	2200      	movs	r2, #0
 800696e:	4ba4      	ldr	r3, [pc, #656]	; (8006c00 <_dtoa_r+0x99c>)
 8006970:	f7fb fbb6 	bl	80020e0 <__aeabi_dmul>
 8006974:	2200      	movs	r2, #0
 8006976:	2300      	movs	r3, #0
 8006978:	9006      	str	r0, [sp, #24]
 800697a:	9107      	str	r1, [sp, #28]
 800697c:	002e      	movs	r6, r5
 800697e:	f7f9 fd5b 	bl	8000438 <__aeabi_dcmpeq>
 8006982:	2800      	cmp	r0, #0
 8006984:	d08b      	beq.n	800689e <_dtoa_r+0x63a>
 8006986:	e7be      	b.n	8006906 <_dtoa_r+0x6a2>
 8006988:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800698a:	2a00      	cmp	r2, #0
 800698c:	d100      	bne.n	8006990 <_dtoa_r+0x72c>
 800698e:	e0da      	b.n	8006b46 <_dtoa_r+0x8e2>
 8006990:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8006992:	2a01      	cmp	r2, #1
 8006994:	dd00      	ble.n	8006998 <_dtoa_r+0x734>
 8006996:	e0bd      	b.n	8006b14 <_dtoa_r+0x8b0>
 8006998:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800699a:	2a00      	cmp	r2, #0
 800699c:	d100      	bne.n	80069a0 <_dtoa_r+0x73c>
 800699e:	e0b5      	b.n	8006b0c <_dtoa_r+0x8a8>
 80069a0:	4a98      	ldr	r2, [pc, #608]	; (8006c04 <_dtoa_r+0x9a0>)
 80069a2:	189b      	adds	r3, r3, r2
 80069a4:	9d04      	ldr	r5, [sp, #16]
 80069a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80069a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80069aa:	2101      	movs	r1, #1
 80069ac:	18d2      	adds	r2, r2, r3
 80069ae:	920a      	str	r2, [sp, #40]	; 0x28
 80069b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80069b2:	9802      	ldr	r0, [sp, #8]
 80069b4:	18d3      	adds	r3, r2, r3
 80069b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80069b8:	f000 fd42 	bl	8007440 <__i2b>
 80069bc:	0006      	movs	r6, r0
 80069be:	2c00      	cmp	r4, #0
 80069c0:	dd0e      	ble.n	80069e0 <_dtoa_r+0x77c>
 80069c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	dd0b      	ble.n	80069e0 <_dtoa_r+0x77c>
 80069c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80069ca:	0023      	movs	r3, r4
 80069cc:	4294      	cmp	r4, r2
 80069ce:	dd00      	ble.n	80069d2 <_dtoa_r+0x76e>
 80069d0:	0013      	movs	r3, r2
 80069d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80069d4:	1ae4      	subs	r4, r4, r3
 80069d6:	1ad2      	subs	r2, r2, r3
 80069d8:	920a      	str	r2, [sp, #40]	; 0x28
 80069da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80069dc:	1ad3      	subs	r3, r2, r3
 80069de:	930b      	str	r3, [sp, #44]	; 0x2c
 80069e0:	9b04      	ldr	r3, [sp, #16]
 80069e2:	2b00      	cmp	r3, #0
 80069e4:	d01f      	beq.n	8006a26 <_dtoa_r+0x7c2>
 80069e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80069e8:	2b00      	cmp	r3, #0
 80069ea:	d100      	bne.n	80069ee <_dtoa_r+0x78a>
 80069ec:	e0af      	b.n	8006b4e <_dtoa_r+0x8ea>
 80069ee:	2d00      	cmp	r5, #0
 80069f0:	d011      	beq.n	8006a16 <_dtoa_r+0x7b2>
 80069f2:	0031      	movs	r1, r6
 80069f4:	002a      	movs	r2, r5
 80069f6:	9802      	ldr	r0, [sp, #8]
 80069f8:	f000 fdba 	bl	8007570 <__pow5mult>
 80069fc:	9a03      	ldr	r2, [sp, #12]
 80069fe:	0001      	movs	r1, r0
 8006a00:	0006      	movs	r6, r0
 8006a02:	9802      	ldr	r0, [sp, #8]
 8006a04:	f000 fd25 	bl	8007452 <__multiply>
 8006a08:	9903      	ldr	r1, [sp, #12]
 8006a0a:	9010      	str	r0, [sp, #64]	; 0x40
 8006a0c:	9802      	ldr	r0, [sp, #8]
 8006a0e:	f000 fc77 	bl	8007300 <_Bfree>
 8006a12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006a14:	9303      	str	r3, [sp, #12]
 8006a16:	9b04      	ldr	r3, [sp, #16]
 8006a18:	1b5a      	subs	r2, r3, r5
 8006a1a:	d004      	beq.n	8006a26 <_dtoa_r+0x7c2>
 8006a1c:	9903      	ldr	r1, [sp, #12]
 8006a1e:	9802      	ldr	r0, [sp, #8]
 8006a20:	f000 fda6 	bl	8007570 <__pow5mult>
 8006a24:	9003      	str	r0, [sp, #12]
 8006a26:	2101      	movs	r1, #1
 8006a28:	9802      	ldr	r0, [sp, #8]
 8006a2a:	f000 fd09 	bl	8007440 <__i2b>
 8006a2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006a30:	9004      	str	r0, [sp, #16]
 8006a32:	2b00      	cmp	r3, #0
 8006a34:	d100      	bne.n	8006a38 <_dtoa_r+0x7d4>
 8006a36:	e1e3      	b.n	8006e00 <_dtoa_r+0xb9c>
 8006a38:	001a      	movs	r2, r3
 8006a3a:	0001      	movs	r1, r0
 8006a3c:	9802      	ldr	r0, [sp, #8]
 8006a3e:	f000 fd97 	bl	8007570 <__pow5mult>
 8006a42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006a44:	9004      	str	r0, [sp, #16]
 8006a46:	2b01      	cmp	r3, #1
 8006a48:	dd00      	ble.n	8006a4c <_dtoa_r+0x7e8>
 8006a4a:	e082      	b.n	8006b52 <_dtoa_r+0x8ee>
 8006a4c:	2500      	movs	r5, #0
 8006a4e:	9b06      	ldr	r3, [sp, #24]
 8006a50:	42ab      	cmp	r3, r5
 8006a52:	d10e      	bne.n	8006a72 <_dtoa_r+0x80e>
 8006a54:	9b07      	ldr	r3, [sp, #28]
 8006a56:	031b      	lsls	r3, r3, #12
 8006a58:	42ab      	cmp	r3, r5
 8006a5a:	d10a      	bne.n	8006a72 <_dtoa_r+0x80e>
 8006a5c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8006a5e:	9a07      	ldr	r2, [sp, #28]
 8006a60:	4213      	tst	r3, r2
 8006a62:	d006      	beq.n	8006a72 <_dtoa_r+0x80e>
 8006a64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006a66:	3501      	adds	r5, #1
 8006a68:	3301      	adds	r3, #1
 8006a6a:	930a      	str	r3, [sp, #40]	; 0x28
 8006a6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006a6e:	3301      	adds	r3, #1
 8006a70:	930b      	str	r3, [sp, #44]	; 0x2c
 8006a72:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006a74:	2001      	movs	r0, #1
 8006a76:	2b00      	cmp	r3, #0
 8006a78:	d16c      	bne.n	8006b54 <_dtoa_r+0x8f0>
 8006a7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006a7c:	1818      	adds	r0, r3, r0
 8006a7e:	231f      	movs	r3, #31
 8006a80:	4018      	ands	r0, r3
 8006a82:	d07e      	beq.n	8006b82 <_dtoa_r+0x91e>
 8006a84:	3301      	adds	r3, #1
 8006a86:	1a1b      	subs	r3, r3, r0
 8006a88:	2b04      	cmp	r3, #4
 8006a8a:	dd70      	ble.n	8006b6e <_dtoa_r+0x90a>
 8006a8c:	231c      	movs	r3, #28
 8006a8e:	1a18      	subs	r0, r3, r0
 8006a90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006a92:	1824      	adds	r4, r4, r0
 8006a94:	181b      	adds	r3, r3, r0
 8006a96:	930a      	str	r3, [sp, #40]	; 0x28
 8006a98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006a9a:	181b      	adds	r3, r3, r0
 8006a9c:	930b      	str	r3, [sp, #44]	; 0x2c
 8006a9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006aa0:	2b00      	cmp	r3, #0
 8006aa2:	dd05      	ble.n	8006ab0 <_dtoa_r+0x84c>
 8006aa4:	001a      	movs	r2, r3
 8006aa6:	9903      	ldr	r1, [sp, #12]
 8006aa8:	9802      	ldr	r0, [sp, #8]
 8006aaa:	f000 fdb3 	bl	8007614 <__lshift>
 8006aae:	9003      	str	r0, [sp, #12]
 8006ab0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006ab2:	2b00      	cmp	r3, #0
 8006ab4:	dd05      	ble.n	8006ac2 <_dtoa_r+0x85e>
 8006ab6:	001a      	movs	r2, r3
 8006ab8:	9904      	ldr	r1, [sp, #16]
 8006aba:	9802      	ldr	r0, [sp, #8]
 8006abc:	f000 fdaa 	bl	8007614 <__lshift>
 8006ac0:	9004      	str	r0, [sp, #16]
 8006ac2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006ac4:	2b00      	cmp	r3, #0
 8006ac6:	d05e      	beq.n	8006b86 <_dtoa_r+0x922>
 8006ac8:	9904      	ldr	r1, [sp, #16]
 8006aca:	9803      	ldr	r0, [sp, #12]
 8006acc:	f000 fdf4 	bl	80076b8 <__mcmp>
 8006ad0:	2800      	cmp	r0, #0
 8006ad2:	da58      	bge.n	8006b86 <_dtoa_r+0x922>
 8006ad4:	2300      	movs	r3, #0
 8006ad6:	220a      	movs	r2, #10
 8006ad8:	9903      	ldr	r1, [sp, #12]
 8006ada:	9802      	ldr	r0, [sp, #8]
 8006adc:	f000 fc29 	bl	8007332 <__multadd>
 8006ae0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006ae2:	3f01      	subs	r7, #1
 8006ae4:	9003      	str	r0, [sp, #12]
 8006ae6:	2b00      	cmp	r3, #0
 8006ae8:	d100      	bne.n	8006aec <_dtoa_r+0x888>
 8006aea:	e190      	b.n	8006e0e <_dtoa_r+0xbaa>
 8006aec:	2300      	movs	r3, #0
 8006aee:	0031      	movs	r1, r6
 8006af0:	220a      	movs	r2, #10
 8006af2:	9802      	ldr	r0, [sp, #8]
 8006af4:	f000 fc1d 	bl	8007332 <__multadd>
 8006af8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006afa:	0006      	movs	r6, r0
 8006afc:	2b00      	cmp	r3, #0
 8006afe:	dd00      	ble.n	8006b02 <_dtoa_r+0x89e>
 8006b00:	e088      	b.n	8006c14 <_dtoa_r+0x9b0>
 8006b02:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006b04:	2b02      	cmp	r3, #2
 8006b06:	dc00      	bgt.n	8006b0a <_dtoa_r+0x8a6>
 8006b08:	e084      	b.n	8006c14 <_dtoa_r+0x9b0>
 8006b0a:	e044      	b.n	8006b96 <_dtoa_r+0x932>
 8006b0c:	2336      	movs	r3, #54	; 0x36
 8006b0e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8006b10:	1a9b      	subs	r3, r3, r2
 8006b12:	e747      	b.n	80069a4 <_dtoa_r+0x740>
 8006b14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b16:	1e5d      	subs	r5, r3, #1
 8006b18:	9b04      	ldr	r3, [sp, #16]
 8006b1a:	42ab      	cmp	r3, r5
 8006b1c:	db08      	blt.n	8006b30 <_dtoa_r+0x8cc>
 8006b1e:	1b5d      	subs	r5, r3, r5
 8006b20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b22:	2b00      	cmp	r3, #0
 8006b24:	da0c      	bge.n	8006b40 <_dtoa_r+0x8dc>
 8006b26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006b28:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006b2a:	1a9c      	subs	r4, r3, r2
 8006b2c:	2300      	movs	r3, #0
 8006b2e:	e73b      	b.n	80069a8 <_dtoa_r+0x744>
 8006b30:	9b04      	ldr	r3, [sp, #16]
 8006b32:	9504      	str	r5, [sp, #16]
 8006b34:	1aea      	subs	r2, r5, r3
 8006b36:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006b38:	2500      	movs	r5, #0
 8006b3a:	189b      	adds	r3, r3, r2
 8006b3c:	9311      	str	r3, [sp, #68]	; 0x44
 8006b3e:	e7ef      	b.n	8006b20 <_dtoa_r+0x8bc>
 8006b40:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006b42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b44:	e730      	b.n	80069a8 <_dtoa_r+0x744>
 8006b46:	9d04      	ldr	r5, [sp, #16]
 8006b48:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006b4a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8006b4c:	e737      	b.n	80069be <_dtoa_r+0x75a>
 8006b4e:	9a04      	ldr	r2, [sp, #16]
 8006b50:	e764      	b.n	8006a1c <_dtoa_r+0x7b8>
 8006b52:	2500      	movs	r5, #0
 8006b54:	9b04      	ldr	r3, [sp, #16]
 8006b56:	9a04      	ldr	r2, [sp, #16]
 8006b58:	691b      	ldr	r3, [r3, #16]
 8006b5a:	9310      	str	r3, [sp, #64]	; 0x40
 8006b5c:	3303      	adds	r3, #3
 8006b5e:	009b      	lsls	r3, r3, #2
 8006b60:	18d3      	adds	r3, r2, r3
 8006b62:	6858      	ldr	r0, [r3, #4]
 8006b64:	f000 fc23 	bl	80073ae <__hi0bits>
 8006b68:	2320      	movs	r3, #32
 8006b6a:	1a18      	subs	r0, r3, r0
 8006b6c:	e785      	b.n	8006a7a <_dtoa_r+0x816>
 8006b6e:	2b04      	cmp	r3, #4
 8006b70:	d095      	beq.n	8006a9e <_dtoa_r+0x83a>
 8006b72:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006b74:	331c      	adds	r3, #28
 8006b76:	18d2      	adds	r2, r2, r3
 8006b78:	920a      	str	r2, [sp, #40]	; 0x28
 8006b7a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8006b7c:	18e4      	adds	r4, r4, r3
 8006b7e:	18d3      	adds	r3, r2, r3
 8006b80:	e78c      	b.n	8006a9c <_dtoa_r+0x838>
 8006b82:	0003      	movs	r3, r0
 8006b84:	e7f5      	b.n	8006b72 <_dtoa_r+0x90e>
 8006b86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b88:	2b00      	cmp	r3, #0
 8006b8a:	dc3d      	bgt.n	8006c08 <_dtoa_r+0x9a4>
 8006b8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006b8e:	2b02      	cmp	r3, #2
 8006b90:	dd3a      	ble.n	8006c08 <_dtoa_r+0x9a4>
 8006b92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b94:	930c      	str	r3, [sp, #48]	; 0x30
 8006b96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006b98:	2b00      	cmp	r3, #0
 8006b9a:	d10c      	bne.n	8006bb6 <_dtoa_r+0x952>
 8006b9c:	9904      	ldr	r1, [sp, #16]
 8006b9e:	2205      	movs	r2, #5
 8006ba0:	9802      	ldr	r0, [sp, #8]
 8006ba2:	f000 fbc6 	bl	8007332 <__multadd>
 8006ba6:	9004      	str	r0, [sp, #16]
 8006ba8:	0001      	movs	r1, r0
 8006baa:	9803      	ldr	r0, [sp, #12]
 8006bac:	f000 fd84 	bl	80076b8 <__mcmp>
 8006bb0:	2800      	cmp	r0, #0
 8006bb2:	dd00      	ble.n	8006bb6 <_dtoa_r+0x952>
 8006bb4:	e5af      	b.n	8006716 <_dtoa_r+0x4b2>
 8006bb6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8006bb8:	9d08      	ldr	r5, [sp, #32]
 8006bba:	43df      	mvns	r7, r3
 8006bbc:	2300      	movs	r3, #0
 8006bbe:	9309      	str	r3, [sp, #36]	; 0x24
 8006bc0:	9904      	ldr	r1, [sp, #16]
 8006bc2:	9802      	ldr	r0, [sp, #8]
 8006bc4:	f000 fb9c 	bl	8007300 <_Bfree>
 8006bc8:	2e00      	cmp	r6, #0
 8006bca:	d100      	bne.n	8006bce <_dtoa_r+0x96a>
 8006bcc:	e69b      	b.n	8006906 <_dtoa_r+0x6a2>
 8006bce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006bd0:	2b00      	cmp	r3, #0
 8006bd2:	d005      	beq.n	8006be0 <_dtoa_r+0x97c>
 8006bd4:	42b3      	cmp	r3, r6
 8006bd6:	d003      	beq.n	8006be0 <_dtoa_r+0x97c>
 8006bd8:	0019      	movs	r1, r3
 8006bda:	9802      	ldr	r0, [sp, #8]
 8006bdc:	f000 fb90 	bl	8007300 <_Bfree>
 8006be0:	0031      	movs	r1, r6
 8006be2:	9802      	ldr	r0, [sp, #8]
 8006be4:	f000 fb8c 	bl	8007300 <_Bfree>
 8006be8:	e68d      	b.n	8006906 <_dtoa_r+0x6a2>
 8006bea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006bec:	9304      	str	r3, [sp, #16]
 8006bee:	001e      	movs	r6, r3
 8006bf0:	e7e1      	b.n	8006bb6 <_dtoa_r+0x952>
 8006bf2:	2300      	movs	r3, #0
 8006bf4:	e7fa      	b.n	8006bec <_dtoa_r+0x988>
 8006bf6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006bf8:	0037      	movs	r7, r6
 8006bfa:	9304      	str	r3, [sp, #16]
 8006bfc:	001e      	movs	r6, r3
 8006bfe:	e58a      	b.n	8006716 <_dtoa_r+0x4b2>
 8006c00:	40240000 	.word	0x40240000
 8006c04:	00000433 	.word	0x00000433
 8006c08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006c0a:	2b00      	cmp	r3, #0
 8006c0c:	d100      	bne.n	8006c10 <_dtoa_r+0x9ac>
 8006c0e:	e0b2      	b.n	8006d76 <_dtoa_r+0xb12>
 8006c10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006c12:	930c      	str	r3, [sp, #48]	; 0x30
 8006c14:	2c00      	cmp	r4, #0
 8006c16:	dd05      	ble.n	8006c24 <_dtoa_r+0x9c0>
 8006c18:	0031      	movs	r1, r6
 8006c1a:	0022      	movs	r2, r4
 8006c1c:	9802      	ldr	r0, [sp, #8]
 8006c1e:	f000 fcf9 	bl	8007614 <__lshift>
 8006c22:	0006      	movs	r6, r0
 8006c24:	0030      	movs	r0, r6
 8006c26:	2d00      	cmp	r5, #0
 8006c28:	d011      	beq.n	8006c4e <_dtoa_r+0x9ea>
 8006c2a:	6871      	ldr	r1, [r6, #4]
 8006c2c:	9802      	ldr	r0, [sp, #8]
 8006c2e:	f000 fb2f 	bl	8007290 <_Balloc>
 8006c32:	0031      	movs	r1, r6
 8006c34:	0004      	movs	r4, r0
 8006c36:	6933      	ldr	r3, [r6, #16]
 8006c38:	310c      	adds	r1, #12
 8006c3a:	1c9a      	adds	r2, r3, #2
 8006c3c:	0092      	lsls	r2, r2, #2
 8006c3e:	300c      	adds	r0, #12
 8006c40:	f000 fb1d 	bl	800727e <memcpy>
 8006c44:	2201      	movs	r2, #1
 8006c46:	0021      	movs	r1, r4
 8006c48:	9802      	ldr	r0, [sp, #8]
 8006c4a:	f000 fce3 	bl	8007614 <__lshift>
 8006c4e:	9609      	str	r6, [sp, #36]	; 0x24
 8006c50:	0006      	movs	r6, r0
 8006c52:	9b08      	ldr	r3, [sp, #32]
 8006c54:	930a      	str	r3, [sp, #40]	; 0x28
 8006c56:	9904      	ldr	r1, [sp, #16]
 8006c58:	9803      	ldr	r0, [sp, #12]
 8006c5a:	f7ff fa7d 	bl	8006158 <quorem>
 8006c5e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006c60:	900d      	str	r0, [sp, #52]	; 0x34
 8006c62:	0004      	movs	r4, r0
 8006c64:	9803      	ldr	r0, [sp, #12]
 8006c66:	f000 fd27 	bl	80076b8 <__mcmp>
 8006c6a:	0032      	movs	r2, r6
 8006c6c:	9010      	str	r0, [sp, #64]	; 0x40
 8006c6e:	9904      	ldr	r1, [sp, #16]
 8006c70:	9802      	ldr	r0, [sp, #8]
 8006c72:	f000 fd3b 	bl	80076ec <__mdiff>
 8006c76:	2301      	movs	r3, #1
 8006c78:	930b      	str	r3, [sp, #44]	; 0x2c
 8006c7a:	68c3      	ldr	r3, [r0, #12]
 8006c7c:	3430      	adds	r4, #48	; 0x30
 8006c7e:	0005      	movs	r5, r0
 8006c80:	2b00      	cmp	r3, #0
 8006c82:	d104      	bne.n	8006c8e <_dtoa_r+0xa2a>
 8006c84:	0001      	movs	r1, r0
 8006c86:	9803      	ldr	r0, [sp, #12]
 8006c88:	f000 fd16 	bl	80076b8 <__mcmp>
 8006c8c:	900b      	str	r0, [sp, #44]	; 0x2c
 8006c8e:	0029      	movs	r1, r5
 8006c90:	9802      	ldr	r0, [sp, #8]
 8006c92:	f000 fb35 	bl	8007300 <_Bfree>
 8006c96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006c98:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8006c9a:	4313      	orrs	r3, r2
 8006c9c:	d10e      	bne.n	8006cbc <_dtoa_r+0xa58>
 8006c9e:	9a06      	ldr	r2, [sp, #24]
 8006ca0:	3301      	adds	r3, #1
 8006ca2:	4213      	tst	r3, r2
 8006ca4:	d10a      	bne.n	8006cbc <_dtoa_r+0xa58>
 8006ca6:	2c39      	cmp	r4, #57	; 0x39
 8006ca8:	d026      	beq.n	8006cf8 <_dtoa_r+0xa94>
 8006caa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006cac:	2b00      	cmp	r3, #0
 8006cae:	dd01      	ble.n	8006cb4 <_dtoa_r+0xa50>
 8006cb0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8006cb2:	3431      	adds	r4, #49	; 0x31
 8006cb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006cb6:	1c5d      	adds	r5, r3, #1
 8006cb8:	701c      	strb	r4, [r3, #0]
 8006cba:	e781      	b.n	8006bc0 <_dtoa_r+0x95c>
 8006cbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006cbe:	2b00      	cmp	r3, #0
 8006cc0:	db07      	blt.n	8006cd2 <_dtoa_r+0xa6e>
 8006cc2:	001d      	movs	r5, r3
 8006cc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006cc6:	431d      	orrs	r5, r3
 8006cc8:	d122      	bne.n	8006d10 <_dtoa_r+0xaac>
 8006cca:	2301      	movs	r3, #1
 8006ccc:	9a06      	ldr	r2, [sp, #24]
 8006cce:	4213      	tst	r3, r2
 8006cd0:	d11e      	bne.n	8006d10 <_dtoa_r+0xaac>
 8006cd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006cd4:	2b00      	cmp	r3, #0
 8006cd6:	dded      	ble.n	8006cb4 <_dtoa_r+0xa50>
 8006cd8:	9903      	ldr	r1, [sp, #12]
 8006cda:	2201      	movs	r2, #1
 8006cdc:	9802      	ldr	r0, [sp, #8]
 8006cde:	f000 fc99 	bl	8007614 <__lshift>
 8006ce2:	9904      	ldr	r1, [sp, #16]
 8006ce4:	9003      	str	r0, [sp, #12]
 8006ce6:	f000 fce7 	bl	80076b8 <__mcmp>
 8006cea:	2800      	cmp	r0, #0
 8006cec:	dc02      	bgt.n	8006cf4 <_dtoa_r+0xa90>
 8006cee:	d1e1      	bne.n	8006cb4 <_dtoa_r+0xa50>
 8006cf0:	07e3      	lsls	r3, r4, #31
 8006cf2:	d5df      	bpl.n	8006cb4 <_dtoa_r+0xa50>
 8006cf4:	2c39      	cmp	r4, #57	; 0x39
 8006cf6:	d1db      	bne.n	8006cb0 <_dtoa_r+0xa4c>
 8006cf8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006cfa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006cfc:	1c5d      	adds	r5, r3, #1
 8006cfe:	2339      	movs	r3, #57	; 0x39
 8006d00:	7013      	strb	r3, [r2, #0]
 8006d02:	1e6b      	subs	r3, r5, #1
 8006d04:	781a      	ldrb	r2, [r3, #0]
 8006d06:	2a39      	cmp	r2, #57	; 0x39
 8006d08:	d067      	beq.n	8006dda <_dtoa_r+0xb76>
 8006d0a:	3201      	adds	r2, #1
 8006d0c:	701a      	strb	r2, [r3, #0]
 8006d0e:	e757      	b.n	8006bc0 <_dtoa_r+0x95c>
 8006d10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006d12:	1c5d      	adds	r5, r3, #1
 8006d14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006d16:	2b00      	cmp	r3, #0
 8006d18:	dd04      	ble.n	8006d24 <_dtoa_r+0xac0>
 8006d1a:	2c39      	cmp	r4, #57	; 0x39
 8006d1c:	d0ec      	beq.n	8006cf8 <_dtoa_r+0xa94>
 8006d1e:	3401      	adds	r4, #1
 8006d20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006d22:	e7c9      	b.n	8006cb8 <_dtoa_r+0xa54>
 8006d24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006d26:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006d28:	701c      	strb	r4, [r3, #0]
 8006d2a:	9b08      	ldr	r3, [sp, #32]
 8006d2c:	1aeb      	subs	r3, r5, r3
 8006d2e:	4293      	cmp	r3, r2
 8006d30:	d03e      	beq.n	8006db0 <_dtoa_r+0xb4c>
 8006d32:	2300      	movs	r3, #0
 8006d34:	220a      	movs	r2, #10
 8006d36:	9903      	ldr	r1, [sp, #12]
 8006d38:	9802      	ldr	r0, [sp, #8]
 8006d3a:	f000 fafa 	bl	8007332 <__multadd>
 8006d3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006d40:	9003      	str	r0, [sp, #12]
 8006d42:	42b3      	cmp	r3, r6
 8006d44:	d109      	bne.n	8006d5a <_dtoa_r+0xaf6>
 8006d46:	2300      	movs	r3, #0
 8006d48:	220a      	movs	r2, #10
 8006d4a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006d4c:	9802      	ldr	r0, [sp, #8]
 8006d4e:	f000 faf0 	bl	8007332 <__multadd>
 8006d52:	9009      	str	r0, [sp, #36]	; 0x24
 8006d54:	0006      	movs	r6, r0
 8006d56:	950a      	str	r5, [sp, #40]	; 0x28
 8006d58:	e77d      	b.n	8006c56 <_dtoa_r+0x9f2>
 8006d5a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006d5c:	2300      	movs	r3, #0
 8006d5e:	220a      	movs	r2, #10
 8006d60:	9802      	ldr	r0, [sp, #8]
 8006d62:	f000 fae6 	bl	8007332 <__multadd>
 8006d66:	2300      	movs	r3, #0
 8006d68:	9009      	str	r0, [sp, #36]	; 0x24
 8006d6a:	220a      	movs	r2, #10
 8006d6c:	0031      	movs	r1, r6
 8006d6e:	9802      	ldr	r0, [sp, #8]
 8006d70:	f000 fadf 	bl	8007332 <__multadd>
 8006d74:	e7ee      	b.n	8006d54 <_dtoa_r+0xaf0>
 8006d76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006d78:	930c      	str	r3, [sp, #48]	; 0x30
 8006d7a:	9b08      	ldr	r3, [sp, #32]
 8006d7c:	9306      	str	r3, [sp, #24]
 8006d7e:	9904      	ldr	r1, [sp, #16]
 8006d80:	9803      	ldr	r0, [sp, #12]
 8006d82:	f7ff f9e9 	bl	8006158 <quorem>
 8006d86:	9b06      	ldr	r3, [sp, #24]
 8006d88:	3030      	adds	r0, #48	; 0x30
 8006d8a:	1c5d      	adds	r5, r3, #1
 8006d8c:	7018      	strb	r0, [r3, #0]
 8006d8e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006d90:	9b08      	ldr	r3, [sp, #32]
 8006d92:	0004      	movs	r4, r0
 8006d94:	1aeb      	subs	r3, r5, r3
 8006d96:	429a      	cmp	r2, r3
 8006d98:	dd08      	ble.n	8006dac <_dtoa_r+0xb48>
 8006d9a:	2300      	movs	r3, #0
 8006d9c:	220a      	movs	r2, #10
 8006d9e:	9903      	ldr	r1, [sp, #12]
 8006da0:	9802      	ldr	r0, [sp, #8]
 8006da2:	f000 fac6 	bl	8007332 <__multadd>
 8006da6:	9506      	str	r5, [sp, #24]
 8006da8:	9003      	str	r0, [sp, #12]
 8006daa:	e7e8      	b.n	8006d7e <_dtoa_r+0xb1a>
 8006dac:	2300      	movs	r3, #0
 8006dae:	9309      	str	r3, [sp, #36]	; 0x24
 8006db0:	9903      	ldr	r1, [sp, #12]
 8006db2:	2201      	movs	r2, #1
 8006db4:	9802      	ldr	r0, [sp, #8]
 8006db6:	f000 fc2d 	bl	8007614 <__lshift>
 8006dba:	9904      	ldr	r1, [sp, #16]
 8006dbc:	9003      	str	r0, [sp, #12]
 8006dbe:	f000 fc7b 	bl	80076b8 <__mcmp>
 8006dc2:	2800      	cmp	r0, #0
 8006dc4:	dc9d      	bgt.n	8006d02 <_dtoa_r+0xa9e>
 8006dc6:	d101      	bne.n	8006dcc <_dtoa_r+0xb68>
 8006dc8:	07e3      	lsls	r3, r4, #31
 8006dca:	d49a      	bmi.n	8006d02 <_dtoa_r+0xa9e>
 8006dcc:	1e6b      	subs	r3, r5, #1
 8006dce:	781a      	ldrb	r2, [r3, #0]
 8006dd0:	2a30      	cmp	r2, #48	; 0x30
 8006dd2:	d000      	beq.n	8006dd6 <_dtoa_r+0xb72>
 8006dd4:	e6f4      	b.n	8006bc0 <_dtoa_r+0x95c>
 8006dd6:	001d      	movs	r5, r3
 8006dd8:	e7f8      	b.n	8006dcc <_dtoa_r+0xb68>
 8006dda:	9a08      	ldr	r2, [sp, #32]
 8006ddc:	429a      	cmp	r2, r3
 8006dde:	d103      	bne.n	8006de8 <_dtoa_r+0xb84>
 8006de0:	2331      	movs	r3, #49	; 0x31
 8006de2:	3701      	adds	r7, #1
 8006de4:	7013      	strb	r3, [r2, #0]
 8006de6:	e6eb      	b.n	8006bc0 <_dtoa_r+0x95c>
 8006de8:	001d      	movs	r5, r3
 8006dea:	e78a      	b.n	8006d02 <_dtoa_r+0xa9e>
 8006dec:	4b0b      	ldr	r3, [pc, #44]	; (8006e1c <_dtoa_r+0xbb8>)
 8006dee:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8006df0:	9308      	str	r3, [sp, #32]
 8006df2:	4b0b      	ldr	r3, [pc, #44]	; (8006e20 <_dtoa_r+0xbbc>)
 8006df4:	2a00      	cmp	r2, #0
 8006df6:	d001      	beq.n	8006dfc <_dtoa_r+0xb98>
 8006df8:	f7ff fa77 	bl	80062ea <_dtoa_r+0x86>
 8006dfc:	f7ff fa77 	bl	80062ee <_dtoa_r+0x8a>
 8006e00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006e02:	2b01      	cmp	r3, #1
 8006e04:	dc00      	bgt.n	8006e08 <_dtoa_r+0xba4>
 8006e06:	e621      	b.n	8006a4c <_dtoa_r+0x7e8>
 8006e08:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8006e0a:	2001      	movs	r0, #1
 8006e0c:	e635      	b.n	8006a7a <_dtoa_r+0x816>
 8006e0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006e10:	2b00      	cmp	r3, #0
 8006e12:	dcb2      	bgt.n	8006d7a <_dtoa_r+0xb16>
 8006e14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006e16:	2b02      	cmp	r3, #2
 8006e18:	ddaf      	ble.n	8006d7a <_dtoa_r+0xb16>
 8006e1a:	e6bc      	b.n	8006b96 <_dtoa_r+0x932>
 8006e1c:	08009628 	.word	0x08009628
 8006e20:	08009630 	.word	0x08009630

08006e24 <__sflush_r>:
 8006e24:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006e26:	898a      	ldrh	r2, [r1, #12]
 8006e28:	0005      	movs	r5, r0
 8006e2a:	000c      	movs	r4, r1
 8006e2c:	0713      	lsls	r3, r2, #28
 8006e2e:	d460      	bmi.n	8006ef2 <__sflush_r+0xce>
 8006e30:	684b      	ldr	r3, [r1, #4]
 8006e32:	2b00      	cmp	r3, #0
 8006e34:	dc04      	bgt.n	8006e40 <__sflush_r+0x1c>
 8006e36:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006e38:	2b00      	cmp	r3, #0
 8006e3a:	dc01      	bgt.n	8006e40 <__sflush_r+0x1c>
 8006e3c:	2000      	movs	r0, #0
 8006e3e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006e40:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8006e42:	2f00      	cmp	r7, #0
 8006e44:	d0fa      	beq.n	8006e3c <__sflush_r+0x18>
 8006e46:	2300      	movs	r3, #0
 8006e48:	682e      	ldr	r6, [r5, #0]
 8006e4a:	602b      	str	r3, [r5, #0]
 8006e4c:	2380      	movs	r3, #128	; 0x80
 8006e4e:	015b      	lsls	r3, r3, #5
 8006e50:	6a21      	ldr	r1, [r4, #32]
 8006e52:	401a      	ands	r2, r3
 8006e54:	d034      	beq.n	8006ec0 <__sflush_r+0x9c>
 8006e56:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006e58:	89a3      	ldrh	r3, [r4, #12]
 8006e5a:	075b      	lsls	r3, r3, #29
 8006e5c:	d506      	bpl.n	8006e6c <__sflush_r+0x48>
 8006e5e:	6863      	ldr	r3, [r4, #4]
 8006e60:	1ac0      	subs	r0, r0, r3
 8006e62:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006e64:	2b00      	cmp	r3, #0
 8006e66:	d001      	beq.n	8006e6c <__sflush_r+0x48>
 8006e68:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006e6a:	1ac0      	subs	r0, r0, r3
 8006e6c:	0002      	movs	r2, r0
 8006e6e:	6a21      	ldr	r1, [r4, #32]
 8006e70:	2300      	movs	r3, #0
 8006e72:	0028      	movs	r0, r5
 8006e74:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8006e76:	47b8      	blx	r7
 8006e78:	89a1      	ldrh	r1, [r4, #12]
 8006e7a:	1c43      	adds	r3, r0, #1
 8006e7c:	d106      	bne.n	8006e8c <__sflush_r+0x68>
 8006e7e:	682b      	ldr	r3, [r5, #0]
 8006e80:	2b1d      	cmp	r3, #29
 8006e82:	d830      	bhi.n	8006ee6 <__sflush_r+0xc2>
 8006e84:	4a2b      	ldr	r2, [pc, #172]	; (8006f34 <__sflush_r+0x110>)
 8006e86:	40da      	lsrs	r2, r3
 8006e88:	07d3      	lsls	r3, r2, #31
 8006e8a:	d52c      	bpl.n	8006ee6 <__sflush_r+0xc2>
 8006e8c:	2300      	movs	r3, #0
 8006e8e:	6063      	str	r3, [r4, #4]
 8006e90:	6923      	ldr	r3, [r4, #16]
 8006e92:	6023      	str	r3, [r4, #0]
 8006e94:	04cb      	lsls	r3, r1, #19
 8006e96:	d505      	bpl.n	8006ea4 <__sflush_r+0x80>
 8006e98:	1c43      	adds	r3, r0, #1
 8006e9a:	d102      	bne.n	8006ea2 <__sflush_r+0x7e>
 8006e9c:	682b      	ldr	r3, [r5, #0]
 8006e9e:	2b00      	cmp	r3, #0
 8006ea0:	d100      	bne.n	8006ea4 <__sflush_r+0x80>
 8006ea2:	6560      	str	r0, [r4, #84]	; 0x54
 8006ea4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006ea6:	602e      	str	r6, [r5, #0]
 8006ea8:	2900      	cmp	r1, #0
 8006eaa:	d0c7      	beq.n	8006e3c <__sflush_r+0x18>
 8006eac:	0023      	movs	r3, r4
 8006eae:	3344      	adds	r3, #68	; 0x44
 8006eb0:	4299      	cmp	r1, r3
 8006eb2:	d002      	beq.n	8006eba <__sflush_r+0x96>
 8006eb4:	0028      	movs	r0, r5
 8006eb6:	f000 fcdf 	bl	8007878 <_free_r>
 8006eba:	2000      	movs	r0, #0
 8006ebc:	6360      	str	r0, [r4, #52]	; 0x34
 8006ebe:	e7be      	b.n	8006e3e <__sflush_r+0x1a>
 8006ec0:	2301      	movs	r3, #1
 8006ec2:	0028      	movs	r0, r5
 8006ec4:	47b8      	blx	r7
 8006ec6:	1c43      	adds	r3, r0, #1
 8006ec8:	d1c6      	bne.n	8006e58 <__sflush_r+0x34>
 8006eca:	682b      	ldr	r3, [r5, #0]
 8006ecc:	2b00      	cmp	r3, #0
 8006ece:	d0c3      	beq.n	8006e58 <__sflush_r+0x34>
 8006ed0:	2b1d      	cmp	r3, #29
 8006ed2:	d001      	beq.n	8006ed8 <__sflush_r+0xb4>
 8006ed4:	2b16      	cmp	r3, #22
 8006ed6:	d101      	bne.n	8006edc <__sflush_r+0xb8>
 8006ed8:	602e      	str	r6, [r5, #0]
 8006eda:	e7af      	b.n	8006e3c <__sflush_r+0x18>
 8006edc:	2340      	movs	r3, #64	; 0x40
 8006ede:	89a2      	ldrh	r2, [r4, #12]
 8006ee0:	4313      	orrs	r3, r2
 8006ee2:	81a3      	strh	r3, [r4, #12]
 8006ee4:	e7ab      	b.n	8006e3e <__sflush_r+0x1a>
 8006ee6:	2340      	movs	r3, #64	; 0x40
 8006ee8:	430b      	orrs	r3, r1
 8006eea:	2001      	movs	r0, #1
 8006eec:	81a3      	strh	r3, [r4, #12]
 8006eee:	4240      	negs	r0, r0
 8006ef0:	e7a5      	b.n	8006e3e <__sflush_r+0x1a>
 8006ef2:	690f      	ldr	r7, [r1, #16]
 8006ef4:	2f00      	cmp	r7, #0
 8006ef6:	d0a1      	beq.n	8006e3c <__sflush_r+0x18>
 8006ef8:	680b      	ldr	r3, [r1, #0]
 8006efa:	600f      	str	r7, [r1, #0]
 8006efc:	1bdb      	subs	r3, r3, r7
 8006efe:	9301      	str	r3, [sp, #4]
 8006f00:	2300      	movs	r3, #0
 8006f02:	0792      	lsls	r2, r2, #30
 8006f04:	d100      	bne.n	8006f08 <__sflush_r+0xe4>
 8006f06:	694b      	ldr	r3, [r1, #20]
 8006f08:	60a3      	str	r3, [r4, #8]
 8006f0a:	9b01      	ldr	r3, [sp, #4]
 8006f0c:	2b00      	cmp	r3, #0
 8006f0e:	dc00      	bgt.n	8006f12 <__sflush_r+0xee>
 8006f10:	e794      	b.n	8006e3c <__sflush_r+0x18>
 8006f12:	9b01      	ldr	r3, [sp, #4]
 8006f14:	003a      	movs	r2, r7
 8006f16:	6a21      	ldr	r1, [r4, #32]
 8006f18:	0028      	movs	r0, r5
 8006f1a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006f1c:	47b0      	blx	r6
 8006f1e:	2800      	cmp	r0, #0
 8006f20:	dc03      	bgt.n	8006f2a <__sflush_r+0x106>
 8006f22:	2340      	movs	r3, #64	; 0x40
 8006f24:	89a2      	ldrh	r2, [r4, #12]
 8006f26:	4313      	orrs	r3, r2
 8006f28:	e7df      	b.n	8006eea <__sflush_r+0xc6>
 8006f2a:	9b01      	ldr	r3, [sp, #4]
 8006f2c:	183f      	adds	r7, r7, r0
 8006f2e:	1a1b      	subs	r3, r3, r0
 8006f30:	9301      	str	r3, [sp, #4]
 8006f32:	e7ea      	b.n	8006f0a <__sflush_r+0xe6>
 8006f34:	20400001 	.word	0x20400001

08006f38 <_fflush_r>:
 8006f38:	690b      	ldr	r3, [r1, #16]
 8006f3a:	b570      	push	{r4, r5, r6, lr}
 8006f3c:	0005      	movs	r5, r0
 8006f3e:	000c      	movs	r4, r1
 8006f40:	2b00      	cmp	r3, #0
 8006f42:	d101      	bne.n	8006f48 <_fflush_r+0x10>
 8006f44:	2000      	movs	r0, #0
 8006f46:	bd70      	pop	{r4, r5, r6, pc}
 8006f48:	2800      	cmp	r0, #0
 8006f4a:	d004      	beq.n	8006f56 <_fflush_r+0x1e>
 8006f4c:	6983      	ldr	r3, [r0, #24]
 8006f4e:	2b00      	cmp	r3, #0
 8006f50:	d101      	bne.n	8006f56 <_fflush_r+0x1e>
 8006f52:	f000 f85f 	bl	8007014 <__sinit>
 8006f56:	4b0b      	ldr	r3, [pc, #44]	; (8006f84 <_fflush_r+0x4c>)
 8006f58:	429c      	cmp	r4, r3
 8006f5a:	d109      	bne.n	8006f70 <_fflush_r+0x38>
 8006f5c:	686c      	ldr	r4, [r5, #4]
 8006f5e:	220c      	movs	r2, #12
 8006f60:	5ea3      	ldrsh	r3, [r4, r2]
 8006f62:	2b00      	cmp	r3, #0
 8006f64:	d0ee      	beq.n	8006f44 <_fflush_r+0xc>
 8006f66:	0021      	movs	r1, r4
 8006f68:	0028      	movs	r0, r5
 8006f6a:	f7ff ff5b 	bl	8006e24 <__sflush_r>
 8006f6e:	e7ea      	b.n	8006f46 <_fflush_r+0xe>
 8006f70:	4b05      	ldr	r3, [pc, #20]	; (8006f88 <_fflush_r+0x50>)
 8006f72:	429c      	cmp	r4, r3
 8006f74:	d101      	bne.n	8006f7a <_fflush_r+0x42>
 8006f76:	68ac      	ldr	r4, [r5, #8]
 8006f78:	e7f1      	b.n	8006f5e <_fflush_r+0x26>
 8006f7a:	4b04      	ldr	r3, [pc, #16]	; (8006f8c <_fflush_r+0x54>)
 8006f7c:	429c      	cmp	r4, r3
 8006f7e:	d1ee      	bne.n	8006f5e <_fflush_r+0x26>
 8006f80:	68ec      	ldr	r4, [r5, #12]
 8006f82:	e7ec      	b.n	8006f5e <_fflush_r+0x26>
 8006f84:	08009658 	.word	0x08009658
 8006f88:	08009678 	.word	0x08009678
 8006f8c:	08009638 	.word	0x08009638

08006f90 <std>:
 8006f90:	2300      	movs	r3, #0
 8006f92:	b510      	push	{r4, lr}
 8006f94:	0004      	movs	r4, r0
 8006f96:	6003      	str	r3, [r0, #0]
 8006f98:	6043      	str	r3, [r0, #4]
 8006f9a:	6083      	str	r3, [r0, #8]
 8006f9c:	8181      	strh	r1, [r0, #12]
 8006f9e:	6643      	str	r3, [r0, #100]	; 0x64
 8006fa0:	81c2      	strh	r2, [r0, #14]
 8006fa2:	6103      	str	r3, [r0, #16]
 8006fa4:	6143      	str	r3, [r0, #20]
 8006fa6:	6183      	str	r3, [r0, #24]
 8006fa8:	0019      	movs	r1, r3
 8006faa:	2208      	movs	r2, #8
 8006fac:	305c      	adds	r0, #92	; 0x5c
 8006fae:	f7fe fa59 	bl	8005464 <memset>
 8006fb2:	4b05      	ldr	r3, [pc, #20]	; (8006fc8 <std+0x38>)
 8006fb4:	6224      	str	r4, [r4, #32]
 8006fb6:	6263      	str	r3, [r4, #36]	; 0x24
 8006fb8:	4b04      	ldr	r3, [pc, #16]	; (8006fcc <std+0x3c>)
 8006fba:	62a3      	str	r3, [r4, #40]	; 0x28
 8006fbc:	4b04      	ldr	r3, [pc, #16]	; (8006fd0 <std+0x40>)
 8006fbe:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006fc0:	4b04      	ldr	r3, [pc, #16]	; (8006fd4 <std+0x44>)
 8006fc2:	6323      	str	r3, [r4, #48]	; 0x30
 8006fc4:	bd10      	pop	{r4, pc}
 8006fc6:	46c0      	nop			; (mov r8, r8)
 8006fc8:	08007f29 	.word	0x08007f29
 8006fcc:	08007f51 	.word	0x08007f51
 8006fd0:	08007f89 	.word	0x08007f89
 8006fd4:	08007fb5 	.word	0x08007fb5

08006fd8 <_cleanup_r>:
 8006fd8:	b510      	push	{r4, lr}
 8006fda:	4902      	ldr	r1, [pc, #8]	; (8006fe4 <_cleanup_r+0xc>)
 8006fdc:	f000 f88c 	bl	80070f8 <_fwalk_reent>
 8006fe0:	bd10      	pop	{r4, pc}
 8006fe2:	46c0      	nop			; (mov r8, r8)
 8006fe4:	08006f39 	.word	0x08006f39

08006fe8 <__sfmoreglue>:
 8006fe8:	b570      	push	{r4, r5, r6, lr}
 8006fea:	2568      	movs	r5, #104	; 0x68
 8006fec:	1e4a      	subs	r2, r1, #1
 8006fee:	4355      	muls	r5, r2
 8006ff0:	000e      	movs	r6, r1
 8006ff2:	0029      	movs	r1, r5
 8006ff4:	3174      	adds	r1, #116	; 0x74
 8006ff6:	f000 fc89 	bl	800790c <_malloc_r>
 8006ffa:	1e04      	subs	r4, r0, #0
 8006ffc:	d008      	beq.n	8007010 <__sfmoreglue+0x28>
 8006ffe:	2100      	movs	r1, #0
 8007000:	002a      	movs	r2, r5
 8007002:	6001      	str	r1, [r0, #0]
 8007004:	6046      	str	r6, [r0, #4]
 8007006:	300c      	adds	r0, #12
 8007008:	60a0      	str	r0, [r4, #8]
 800700a:	3268      	adds	r2, #104	; 0x68
 800700c:	f7fe fa2a 	bl	8005464 <memset>
 8007010:	0020      	movs	r0, r4
 8007012:	bd70      	pop	{r4, r5, r6, pc}

08007014 <__sinit>:
 8007014:	6983      	ldr	r3, [r0, #24]
 8007016:	b513      	push	{r0, r1, r4, lr}
 8007018:	0004      	movs	r4, r0
 800701a:	2b00      	cmp	r3, #0
 800701c:	d128      	bne.n	8007070 <__sinit+0x5c>
 800701e:	6483      	str	r3, [r0, #72]	; 0x48
 8007020:	64c3      	str	r3, [r0, #76]	; 0x4c
 8007022:	6503      	str	r3, [r0, #80]	; 0x50
 8007024:	4b13      	ldr	r3, [pc, #76]	; (8007074 <__sinit+0x60>)
 8007026:	4a14      	ldr	r2, [pc, #80]	; (8007078 <__sinit+0x64>)
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	6282      	str	r2, [r0, #40]	; 0x28
 800702c:	9301      	str	r3, [sp, #4]
 800702e:	4298      	cmp	r0, r3
 8007030:	d101      	bne.n	8007036 <__sinit+0x22>
 8007032:	2301      	movs	r3, #1
 8007034:	6183      	str	r3, [r0, #24]
 8007036:	0020      	movs	r0, r4
 8007038:	f000 f820 	bl	800707c <__sfp>
 800703c:	6060      	str	r0, [r4, #4]
 800703e:	0020      	movs	r0, r4
 8007040:	f000 f81c 	bl	800707c <__sfp>
 8007044:	60a0      	str	r0, [r4, #8]
 8007046:	0020      	movs	r0, r4
 8007048:	f000 f818 	bl	800707c <__sfp>
 800704c:	2200      	movs	r2, #0
 800704e:	60e0      	str	r0, [r4, #12]
 8007050:	2104      	movs	r1, #4
 8007052:	6860      	ldr	r0, [r4, #4]
 8007054:	f7ff ff9c 	bl	8006f90 <std>
 8007058:	2201      	movs	r2, #1
 800705a:	2109      	movs	r1, #9
 800705c:	68a0      	ldr	r0, [r4, #8]
 800705e:	f7ff ff97 	bl	8006f90 <std>
 8007062:	2202      	movs	r2, #2
 8007064:	2112      	movs	r1, #18
 8007066:	68e0      	ldr	r0, [r4, #12]
 8007068:	f7ff ff92 	bl	8006f90 <std>
 800706c:	2301      	movs	r3, #1
 800706e:	61a3      	str	r3, [r4, #24]
 8007070:	bd13      	pop	{r0, r1, r4, pc}
 8007072:	46c0      	nop			; (mov r8, r8)
 8007074:	080095f0 	.word	0x080095f0
 8007078:	08006fd9 	.word	0x08006fd9

0800707c <__sfp>:
 800707c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800707e:	4b1c      	ldr	r3, [pc, #112]	; (80070f0 <__sfp+0x74>)
 8007080:	0007      	movs	r7, r0
 8007082:	681e      	ldr	r6, [r3, #0]
 8007084:	69b3      	ldr	r3, [r6, #24]
 8007086:	2b00      	cmp	r3, #0
 8007088:	d102      	bne.n	8007090 <__sfp+0x14>
 800708a:	0030      	movs	r0, r6
 800708c:	f7ff ffc2 	bl	8007014 <__sinit>
 8007090:	3648      	adds	r6, #72	; 0x48
 8007092:	68b4      	ldr	r4, [r6, #8]
 8007094:	6873      	ldr	r3, [r6, #4]
 8007096:	3b01      	subs	r3, #1
 8007098:	d504      	bpl.n	80070a4 <__sfp+0x28>
 800709a:	6833      	ldr	r3, [r6, #0]
 800709c:	2b00      	cmp	r3, #0
 800709e:	d007      	beq.n	80070b0 <__sfp+0x34>
 80070a0:	6836      	ldr	r6, [r6, #0]
 80070a2:	e7f6      	b.n	8007092 <__sfp+0x16>
 80070a4:	220c      	movs	r2, #12
 80070a6:	5ea5      	ldrsh	r5, [r4, r2]
 80070a8:	2d00      	cmp	r5, #0
 80070aa:	d00d      	beq.n	80070c8 <__sfp+0x4c>
 80070ac:	3468      	adds	r4, #104	; 0x68
 80070ae:	e7f2      	b.n	8007096 <__sfp+0x1a>
 80070b0:	2104      	movs	r1, #4
 80070b2:	0038      	movs	r0, r7
 80070b4:	f7ff ff98 	bl	8006fe8 <__sfmoreglue>
 80070b8:	6030      	str	r0, [r6, #0]
 80070ba:	2800      	cmp	r0, #0
 80070bc:	d1f0      	bne.n	80070a0 <__sfp+0x24>
 80070be:	230c      	movs	r3, #12
 80070c0:	0004      	movs	r4, r0
 80070c2:	603b      	str	r3, [r7, #0]
 80070c4:	0020      	movs	r0, r4
 80070c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80070c8:	0020      	movs	r0, r4
 80070ca:	4b0a      	ldr	r3, [pc, #40]	; (80070f4 <__sfp+0x78>)
 80070cc:	6665      	str	r5, [r4, #100]	; 0x64
 80070ce:	6025      	str	r5, [r4, #0]
 80070d0:	6065      	str	r5, [r4, #4]
 80070d2:	60a5      	str	r5, [r4, #8]
 80070d4:	60e3      	str	r3, [r4, #12]
 80070d6:	6125      	str	r5, [r4, #16]
 80070d8:	6165      	str	r5, [r4, #20]
 80070da:	61a5      	str	r5, [r4, #24]
 80070dc:	2208      	movs	r2, #8
 80070de:	0029      	movs	r1, r5
 80070e0:	305c      	adds	r0, #92	; 0x5c
 80070e2:	f7fe f9bf 	bl	8005464 <memset>
 80070e6:	6365      	str	r5, [r4, #52]	; 0x34
 80070e8:	63a5      	str	r5, [r4, #56]	; 0x38
 80070ea:	64a5      	str	r5, [r4, #72]	; 0x48
 80070ec:	64e5      	str	r5, [r4, #76]	; 0x4c
 80070ee:	e7e9      	b.n	80070c4 <__sfp+0x48>
 80070f0:	080095f0 	.word	0x080095f0
 80070f4:	ffff0001 	.word	0xffff0001

080070f8 <_fwalk_reent>:
 80070f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80070fa:	0004      	movs	r4, r0
 80070fc:	0007      	movs	r7, r0
 80070fe:	2600      	movs	r6, #0
 8007100:	9101      	str	r1, [sp, #4]
 8007102:	3448      	adds	r4, #72	; 0x48
 8007104:	2c00      	cmp	r4, #0
 8007106:	d101      	bne.n	800710c <_fwalk_reent+0x14>
 8007108:	0030      	movs	r0, r6
 800710a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800710c:	6863      	ldr	r3, [r4, #4]
 800710e:	68a5      	ldr	r5, [r4, #8]
 8007110:	9300      	str	r3, [sp, #0]
 8007112:	9b00      	ldr	r3, [sp, #0]
 8007114:	3b01      	subs	r3, #1
 8007116:	9300      	str	r3, [sp, #0]
 8007118:	d501      	bpl.n	800711e <_fwalk_reent+0x26>
 800711a:	6824      	ldr	r4, [r4, #0]
 800711c:	e7f2      	b.n	8007104 <_fwalk_reent+0xc>
 800711e:	89ab      	ldrh	r3, [r5, #12]
 8007120:	2b01      	cmp	r3, #1
 8007122:	d908      	bls.n	8007136 <_fwalk_reent+0x3e>
 8007124:	220e      	movs	r2, #14
 8007126:	5eab      	ldrsh	r3, [r5, r2]
 8007128:	3301      	adds	r3, #1
 800712a:	d004      	beq.n	8007136 <_fwalk_reent+0x3e>
 800712c:	0029      	movs	r1, r5
 800712e:	0038      	movs	r0, r7
 8007130:	9b01      	ldr	r3, [sp, #4]
 8007132:	4798      	blx	r3
 8007134:	4306      	orrs	r6, r0
 8007136:	3568      	adds	r5, #104	; 0x68
 8007138:	e7eb      	b.n	8007112 <_fwalk_reent+0x1a>

0800713a <__locale_ctype_ptr_l>:
 800713a:	30ec      	adds	r0, #236	; 0xec
 800713c:	6800      	ldr	r0, [r0, #0]
 800713e:	4770      	bx	lr

08007140 <_localeconv_r>:
 8007140:	4b03      	ldr	r3, [pc, #12]	; (8007150 <_localeconv_r+0x10>)
 8007142:	681b      	ldr	r3, [r3, #0]
 8007144:	6a18      	ldr	r0, [r3, #32]
 8007146:	2800      	cmp	r0, #0
 8007148:	d100      	bne.n	800714c <_localeconv_r+0xc>
 800714a:	4802      	ldr	r0, [pc, #8]	; (8007154 <_localeconv_r+0x14>)
 800714c:	30f0      	adds	r0, #240	; 0xf0
 800714e:	4770      	bx	lr
 8007150:	20000018 	.word	0x20000018
 8007154:	2000007c 	.word	0x2000007c

08007158 <__swhatbuf_r>:
 8007158:	b570      	push	{r4, r5, r6, lr}
 800715a:	000e      	movs	r6, r1
 800715c:	001d      	movs	r5, r3
 800715e:	230e      	movs	r3, #14
 8007160:	5ec9      	ldrsh	r1, [r1, r3]
 8007162:	b096      	sub	sp, #88	; 0x58
 8007164:	0014      	movs	r4, r2
 8007166:	2900      	cmp	r1, #0
 8007168:	da07      	bge.n	800717a <__swhatbuf_r+0x22>
 800716a:	2300      	movs	r3, #0
 800716c:	602b      	str	r3, [r5, #0]
 800716e:	89b3      	ldrh	r3, [r6, #12]
 8007170:	061b      	lsls	r3, r3, #24
 8007172:	d411      	bmi.n	8007198 <__swhatbuf_r+0x40>
 8007174:	2380      	movs	r3, #128	; 0x80
 8007176:	00db      	lsls	r3, r3, #3
 8007178:	e00f      	b.n	800719a <__swhatbuf_r+0x42>
 800717a:	466a      	mov	r2, sp
 800717c:	f000 ff52 	bl	8008024 <_fstat_r>
 8007180:	2800      	cmp	r0, #0
 8007182:	dbf2      	blt.n	800716a <__swhatbuf_r+0x12>
 8007184:	22f0      	movs	r2, #240	; 0xf0
 8007186:	9b01      	ldr	r3, [sp, #4]
 8007188:	0212      	lsls	r2, r2, #8
 800718a:	4013      	ands	r3, r2
 800718c:	4a05      	ldr	r2, [pc, #20]	; (80071a4 <__swhatbuf_r+0x4c>)
 800718e:	189b      	adds	r3, r3, r2
 8007190:	425a      	negs	r2, r3
 8007192:	4153      	adcs	r3, r2
 8007194:	602b      	str	r3, [r5, #0]
 8007196:	e7ed      	b.n	8007174 <__swhatbuf_r+0x1c>
 8007198:	2340      	movs	r3, #64	; 0x40
 800719a:	2000      	movs	r0, #0
 800719c:	6023      	str	r3, [r4, #0]
 800719e:	b016      	add	sp, #88	; 0x58
 80071a0:	bd70      	pop	{r4, r5, r6, pc}
 80071a2:	46c0      	nop			; (mov r8, r8)
 80071a4:	ffffe000 	.word	0xffffe000

080071a8 <__smakebuf_r>:
 80071a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80071aa:	2602      	movs	r6, #2
 80071ac:	898b      	ldrh	r3, [r1, #12]
 80071ae:	0005      	movs	r5, r0
 80071b0:	000c      	movs	r4, r1
 80071b2:	4233      	tst	r3, r6
 80071b4:	d006      	beq.n	80071c4 <__smakebuf_r+0x1c>
 80071b6:	0023      	movs	r3, r4
 80071b8:	3347      	adds	r3, #71	; 0x47
 80071ba:	6023      	str	r3, [r4, #0]
 80071bc:	6123      	str	r3, [r4, #16]
 80071be:	2301      	movs	r3, #1
 80071c0:	6163      	str	r3, [r4, #20]
 80071c2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80071c4:	ab01      	add	r3, sp, #4
 80071c6:	466a      	mov	r2, sp
 80071c8:	f7ff ffc6 	bl	8007158 <__swhatbuf_r>
 80071cc:	9900      	ldr	r1, [sp, #0]
 80071ce:	0007      	movs	r7, r0
 80071d0:	0028      	movs	r0, r5
 80071d2:	f000 fb9b 	bl	800790c <_malloc_r>
 80071d6:	2800      	cmp	r0, #0
 80071d8:	d108      	bne.n	80071ec <__smakebuf_r+0x44>
 80071da:	220c      	movs	r2, #12
 80071dc:	5ea3      	ldrsh	r3, [r4, r2]
 80071de:	059a      	lsls	r2, r3, #22
 80071e0:	d4ef      	bmi.n	80071c2 <__smakebuf_r+0x1a>
 80071e2:	2203      	movs	r2, #3
 80071e4:	4393      	bics	r3, r2
 80071e6:	431e      	orrs	r6, r3
 80071e8:	81a6      	strh	r6, [r4, #12]
 80071ea:	e7e4      	b.n	80071b6 <__smakebuf_r+0xe>
 80071ec:	4b0f      	ldr	r3, [pc, #60]	; (800722c <__smakebuf_r+0x84>)
 80071ee:	62ab      	str	r3, [r5, #40]	; 0x28
 80071f0:	2380      	movs	r3, #128	; 0x80
 80071f2:	89a2      	ldrh	r2, [r4, #12]
 80071f4:	6020      	str	r0, [r4, #0]
 80071f6:	4313      	orrs	r3, r2
 80071f8:	81a3      	strh	r3, [r4, #12]
 80071fa:	9b00      	ldr	r3, [sp, #0]
 80071fc:	6120      	str	r0, [r4, #16]
 80071fe:	6163      	str	r3, [r4, #20]
 8007200:	9b01      	ldr	r3, [sp, #4]
 8007202:	2b00      	cmp	r3, #0
 8007204:	d00d      	beq.n	8007222 <__smakebuf_r+0x7a>
 8007206:	230e      	movs	r3, #14
 8007208:	5ee1      	ldrsh	r1, [r4, r3]
 800720a:	0028      	movs	r0, r5
 800720c:	f000 ff1c 	bl	8008048 <_isatty_r>
 8007210:	2800      	cmp	r0, #0
 8007212:	d006      	beq.n	8007222 <__smakebuf_r+0x7a>
 8007214:	2203      	movs	r2, #3
 8007216:	89a3      	ldrh	r3, [r4, #12]
 8007218:	4393      	bics	r3, r2
 800721a:	001a      	movs	r2, r3
 800721c:	2301      	movs	r3, #1
 800721e:	4313      	orrs	r3, r2
 8007220:	81a3      	strh	r3, [r4, #12]
 8007222:	89a0      	ldrh	r0, [r4, #12]
 8007224:	4338      	orrs	r0, r7
 8007226:	81a0      	strh	r0, [r4, #12]
 8007228:	e7cb      	b.n	80071c2 <__smakebuf_r+0x1a>
 800722a:	46c0      	nop			; (mov r8, r8)
 800722c:	08006fd9 	.word	0x08006fd9

08007230 <malloc>:
 8007230:	b510      	push	{r4, lr}
 8007232:	4b03      	ldr	r3, [pc, #12]	; (8007240 <malloc+0x10>)
 8007234:	0001      	movs	r1, r0
 8007236:	6818      	ldr	r0, [r3, #0]
 8007238:	f000 fb68 	bl	800790c <_malloc_r>
 800723c:	bd10      	pop	{r4, pc}
 800723e:	46c0      	nop			; (mov r8, r8)
 8007240:	20000018 	.word	0x20000018

08007244 <__ascii_mbtowc>:
 8007244:	b082      	sub	sp, #8
 8007246:	2900      	cmp	r1, #0
 8007248:	d100      	bne.n	800724c <__ascii_mbtowc+0x8>
 800724a:	a901      	add	r1, sp, #4
 800724c:	1e10      	subs	r0, r2, #0
 800724e:	d006      	beq.n	800725e <__ascii_mbtowc+0x1a>
 8007250:	2b00      	cmp	r3, #0
 8007252:	d006      	beq.n	8007262 <__ascii_mbtowc+0x1e>
 8007254:	7813      	ldrb	r3, [r2, #0]
 8007256:	600b      	str	r3, [r1, #0]
 8007258:	7810      	ldrb	r0, [r2, #0]
 800725a:	1e43      	subs	r3, r0, #1
 800725c:	4198      	sbcs	r0, r3
 800725e:	b002      	add	sp, #8
 8007260:	4770      	bx	lr
 8007262:	2002      	movs	r0, #2
 8007264:	4240      	negs	r0, r0
 8007266:	e7fa      	b.n	800725e <__ascii_mbtowc+0x1a>

08007268 <memchr>:
 8007268:	b2c9      	uxtb	r1, r1
 800726a:	1882      	adds	r2, r0, r2
 800726c:	4290      	cmp	r0, r2
 800726e:	d101      	bne.n	8007274 <memchr+0xc>
 8007270:	2000      	movs	r0, #0
 8007272:	4770      	bx	lr
 8007274:	7803      	ldrb	r3, [r0, #0]
 8007276:	428b      	cmp	r3, r1
 8007278:	d0fb      	beq.n	8007272 <memchr+0xa>
 800727a:	3001      	adds	r0, #1
 800727c:	e7f6      	b.n	800726c <memchr+0x4>

0800727e <memcpy>:
 800727e:	2300      	movs	r3, #0
 8007280:	b510      	push	{r4, lr}
 8007282:	429a      	cmp	r2, r3
 8007284:	d100      	bne.n	8007288 <memcpy+0xa>
 8007286:	bd10      	pop	{r4, pc}
 8007288:	5ccc      	ldrb	r4, [r1, r3]
 800728a:	54c4      	strb	r4, [r0, r3]
 800728c:	3301      	adds	r3, #1
 800728e:	e7f8      	b.n	8007282 <memcpy+0x4>

08007290 <_Balloc>:
 8007290:	b570      	push	{r4, r5, r6, lr}
 8007292:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8007294:	0004      	movs	r4, r0
 8007296:	000d      	movs	r5, r1
 8007298:	2e00      	cmp	r6, #0
 800729a:	d107      	bne.n	80072ac <_Balloc+0x1c>
 800729c:	2010      	movs	r0, #16
 800729e:	f7ff ffc7 	bl	8007230 <malloc>
 80072a2:	6260      	str	r0, [r4, #36]	; 0x24
 80072a4:	6046      	str	r6, [r0, #4]
 80072a6:	6086      	str	r6, [r0, #8]
 80072a8:	6006      	str	r6, [r0, #0]
 80072aa:	60c6      	str	r6, [r0, #12]
 80072ac:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80072ae:	68f3      	ldr	r3, [r6, #12]
 80072b0:	2b00      	cmp	r3, #0
 80072b2:	d013      	beq.n	80072dc <_Balloc+0x4c>
 80072b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80072b6:	00aa      	lsls	r2, r5, #2
 80072b8:	68db      	ldr	r3, [r3, #12]
 80072ba:	189b      	adds	r3, r3, r2
 80072bc:	6818      	ldr	r0, [r3, #0]
 80072be:	2800      	cmp	r0, #0
 80072c0:	d118      	bne.n	80072f4 <_Balloc+0x64>
 80072c2:	2101      	movs	r1, #1
 80072c4:	000e      	movs	r6, r1
 80072c6:	40ae      	lsls	r6, r5
 80072c8:	1d72      	adds	r2, r6, #5
 80072ca:	0092      	lsls	r2, r2, #2
 80072cc:	0020      	movs	r0, r4
 80072ce:	f000 fac5 	bl	800785c <_calloc_r>
 80072d2:	2800      	cmp	r0, #0
 80072d4:	d00c      	beq.n	80072f0 <_Balloc+0x60>
 80072d6:	6045      	str	r5, [r0, #4]
 80072d8:	6086      	str	r6, [r0, #8]
 80072da:	e00d      	b.n	80072f8 <_Balloc+0x68>
 80072dc:	2221      	movs	r2, #33	; 0x21
 80072de:	2104      	movs	r1, #4
 80072e0:	0020      	movs	r0, r4
 80072e2:	f000 fabb 	bl	800785c <_calloc_r>
 80072e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80072e8:	60f0      	str	r0, [r6, #12]
 80072ea:	68db      	ldr	r3, [r3, #12]
 80072ec:	2b00      	cmp	r3, #0
 80072ee:	d1e1      	bne.n	80072b4 <_Balloc+0x24>
 80072f0:	2000      	movs	r0, #0
 80072f2:	bd70      	pop	{r4, r5, r6, pc}
 80072f4:	6802      	ldr	r2, [r0, #0]
 80072f6:	601a      	str	r2, [r3, #0]
 80072f8:	2300      	movs	r3, #0
 80072fa:	6103      	str	r3, [r0, #16]
 80072fc:	60c3      	str	r3, [r0, #12]
 80072fe:	e7f8      	b.n	80072f2 <_Balloc+0x62>

08007300 <_Bfree>:
 8007300:	b570      	push	{r4, r5, r6, lr}
 8007302:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8007304:	0006      	movs	r6, r0
 8007306:	000d      	movs	r5, r1
 8007308:	2c00      	cmp	r4, #0
 800730a:	d107      	bne.n	800731c <_Bfree+0x1c>
 800730c:	2010      	movs	r0, #16
 800730e:	f7ff ff8f 	bl	8007230 <malloc>
 8007312:	6270      	str	r0, [r6, #36]	; 0x24
 8007314:	6044      	str	r4, [r0, #4]
 8007316:	6084      	str	r4, [r0, #8]
 8007318:	6004      	str	r4, [r0, #0]
 800731a:	60c4      	str	r4, [r0, #12]
 800731c:	2d00      	cmp	r5, #0
 800731e:	d007      	beq.n	8007330 <_Bfree+0x30>
 8007320:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8007322:	686a      	ldr	r2, [r5, #4]
 8007324:	68db      	ldr	r3, [r3, #12]
 8007326:	0092      	lsls	r2, r2, #2
 8007328:	189b      	adds	r3, r3, r2
 800732a:	681a      	ldr	r2, [r3, #0]
 800732c:	602a      	str	r2, [r5, #0]
 800732e:	601d      	str	r5, [r3, #0]
 8007330:	bd70      	pop	{r4, r5, r6, pc}

08007332 <__multadd>:
 8007332:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007334:	001e      	movs	r6, r3
 8007336:	2314      	movs	r3, #20
 8007338:	469c      	mov	ip, r3
 800733a:	0007      	movs	r7, r0
 800733c:	000c      	movs	r4, r1
 800733e:	2000      	movs	r0, #0
 8007340:	690d      	ldr	r5, [r1, #16]
 8007342:	448c      	add	ip, r1
 8007344:	4663      	mov	r3, ip
 8007346:	681b      	ldr	r3, [r3, #0]
 8007348:	3001      	adds	r0, #1
 800734a:	b299      	uxth	r1, r3
 800734c:	4663      	mov	r3, ip
 800734e:	681b      	ldr	r3, [r3, #0]
 8007350:	4351      	muls	r1, r2
 8007352:	0c1b      	lsrs	r3, r3, #16
 8007354:	4353      	muls	r3, r2
 8007356:	1989      	adds	r1, r1, r6
 8007358:	0c0e      	lsrs	r6, r1, #16
 800735a:	199b      	adds	r3, r3, r6
 800735c:	b289      	uxth	r1, r1
 800735e:	0c1e      	lsrs	r6, r3, #16
 8007360:	041b      	lsls	r3, r3, #16
 8007362:	185b      	adds	r3, r3, r1
 8007364:	4661      	mov	r1, ip
 8007366:	c108      	stmia	r1!, {r3}
 8007368:	468c      	mov	ip, r1
 800736a:	4285      	cmp	r5, r0
 800736c:	dcea      	bgt.n	8007344 <__multadd+0x12>
 800736e:	2e00      	cmp	r6, #0
 8007370:	d01b      	beq.n	80073aa <__multadd+0x78>
 8007372:	68a3      	ldr	r3, [r4, #8]
 8007374:	42ab      	cmp	r3, r5
 8007376:	dc12      	bgt.n	800739e <__multadd+0x6c>
 8007378:	6863      	ldr	r3, [r4, #4]
 800737a:	0038      	movs	r0, r7
 800737c:	1c59      	adds	r1, r3, #1
 800737e:	f7ff ff87 	bl	8007290 <_Balloc>
 8007382:	0021      	movs	r1, r4
 8007384:	6923      	ldr	r3, [r4, #16]
 8007386:	9001      	str	r0, [sp, #4]
 8007388:	1c9a      	adds	r2, r3, #2
 800738a:	0092      	lsls	r2, r2, #2
 800738c:	310c      	adds	r1, #12
 800738e:	300c      	adds	r0, #12
 8007390:	f7ff ff75 	bl	800727e <memcpy>
 8007394:	0021      	movs	r1, r4
 8007396:	0038      	movs	r0, r7
 8007398:	f7ff ffb2 	bl	8007300 <_Bfree>
 800739c:	9c01      	ldr	r4, [sp, #4]
 800739e:	1d2b      	adds	r3, r5, #4
 80073a0:	009b      	lsls	r3, r3, #2
 80073a2:	18e3      	adds	r3, r4, r3
 80073a4:	3501      	adds	r5, #1
 80073a6:	605e      	str	r6, [r3, #4]
 80073a8:	6125      	str	r5, [r4, #16]
 80073aa:	0020      	movs	r0, r4
 80073ac:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

080073ae <__hi0bits>:
 80073ae:	0003      	movs	r3, r0
 80073b0:	0c02      	lsrs	r2, r0, #16
 80073b2:	2000      	movs	r0, #0
 80073b4:	4282      	cmp	r2, r0
 80073b6:	d101      	bne.n	80073bc <__hi0bits+0xe>
 80073b8:	041b      	lsls	r3, r3, #16
 80073ba:	3010      	adds	r0, #16
 80073bc:	0e1a      	lsrs	r2, r3, #24
 80073be:	d101      	bne.n	80073c4 <__hi0bits+0x16>
 80073c0:	3008      	adds	r0, #8
 80073c2:	021b      	lsls	r3, r3, #8
 80073c4:	0f1a      	lsrs	r2, r3, #28
 80073c6:	d101      	bne.n	80073cc <__hi0bits+0x1e>
 80073c8:	3004      	adds	r0, #4
 80073ca:	011b      	lsls	r3, r3, #4
 80073cc:	0f9a      	lsrs	r2, r3, #30
 80073ce:	d101      	bne.n	80073d4 <__hi0bits+0x26>
 80073d0:	3002      	adds	r0, #2
 80073d2:	009b      	lsls	r3, r3, #2
 80073d4:	2b00      	cmp	r3, #0
 80073d6:	db03      	blt.n	80073e0 <__hi0bits+0x32>
 80073d8:	3001      	adds	r0, #1
 80073da:	005b      	lsls	r3, r3, #1
 80073dc:	d400      	bmi.n	80073e0 <__hi0bits+0x32>
 80073de:	2020      	movs	r0, #32
 80073e0:	4770      	bx	lr

080073e2 <__lo0bits>:
 80073e2:	2207      	movs	r2, #7
 80073e4:	6803      	ldr	r3, [r0, #0]
 80073e6:	b510      	push	{r4, lr}
 80073e8:	0001      	movs	r1, r0
 80073ea:	401a      	ands	r2, r3
 80073ec:	d00d      	beq.n	800740a <__lo0bits+0x28>
 80073ee:	2401      	movs	r4, #1
 80073f0:	2000      	movs	r0, #0
 80073f2:	4223      	tst	r3, r4
 80073f4:	d105      	bne.n	8007402 <__lo0bits+0x20>
 80073f6:	3002      	adds	r0, #2
 80073f8:	4203      	tst	r3, r0
 80073fa:	d003      	beq.n	8007404 <__lo0bits+0x22>
 80073fc:	40e3      	lsrs	r3, r4
 80073fe:	0020      	movs	r0, r4
 8007400:	600b      	str	r3, [r1, #0]
 8007402:	bd10      	pop	{r4, pc}
 8007404:	089b      	lsrs	r3, r3, #2
 8007406:	600b      	str	r3, [r1, #0]
 8007408:	e7fb      	b.n	8007402 <__lo0bits+0x20>
 800740a:	b29c      	uxth	r4, r3
 800740c:	0010      	movs	r0, r2
 800740e:	2c00      	cmp	r4, #0
 8007410:	d101      	bne.n	8007416 <__lo0bits+0x34>
 8007412:	2010      	movs	r0, #16
 8007414:	0c1b      	lsrs	r3, r3, #16
 8007416:	b2da      	uxtb	r2, r3
 8007418:	2a00      	cmp	r2, #0
 800741a:	d101      	bne.n	8007420 <__lo0bits+0x3e>
 800741c:	3008      	adds	r0, #8
 800741e:	0a1b      	lsrs	r3, r3, #8
 8007420:	071a      	lsls	r2, r3, #28
 8007422:	d101      	bne.n	8007428 <__lo0bits+0x46>
 8007424:	3004      	adds	r0, #4
 8007426:	091b      	lsrs	r3, r3, #4
 8007428:	079a      	lsls	r2, r3, #30
 800742a:	d101      	bne.n	8007430 <__lo0bits+0x4e>
 800742c:	3002      	adds	r0, #2
 800742e:	089b      	lsrs	r3, r3, #2
 8007430:	07da      	lsls	r2, r3, #31
 8007432:	d4e8      	bmi.n	8007406 <__lo0bits+0x24>
 8007434:	085b      	lsrs	r3, r3, #1
 8007436:	d001      	beq.n	800743c <__lo0bits+0x5a>
 8007438:	3001      	adds	r0, #1
 800743a:	e7e4      	b.n	8007406 <__lo0bits+0x24>
 800743c:	2020      	movs	r0, #32
 800743e:	e7e0      	b.n	8007402 <__lo0bits+0x20>

08007440 <__i2b>:
 8007440:	b510      	push	{r4, lr}
 8007442:	000c      	movs	r4, r1
 8007444:	2101      	movs	r1, #1
 8007446:	f7ff ff23 	bl	8007290 <_Balloc>
 800744a:	2301      	movs	r3, #1
 800744c:	6144      	str	r4, [r0, #20]
 800744e:	6103      	str	r3, [r0, #16]
 8007450:	bd10      	pop	{r4, pc}

08007452 <__multiply>:
 8007452:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007454:	690b      	ldr	r3, [r1, #16]
 8007456:	0014      	movs	r4, r2
 8007458:	6912      	ldr	r2, [r2, #16]
 800745a:	b089      	sub	sp, #36	; 0x24
 800745c:	000d      	movs	r5, r1
 800745e:	4293      	cmp	r3, r2
 8007460:	da01      	bge.n	8007466 <__multiply+0x14>
 8007462:	0025      	movs	r5, r4
 8007464:	000c      	movs	r4, r1
 8007466:	692f      	ldr	r7, [r5, #16]
 8007468:	6926      	ldr	r6, [r4, #16]
 800746a:	6869      	ldr	r1, [r5, #4]
 800746c:	19bb      	adds	r3, r7, r6
 800746e:	9302      	str	r3, [sp, #8]
 8007470:	68ab      	ldr	r3, [r5, #8]
 8007472:	19ba      	adds	r2, r7, r6
 8007474:	4293      	cmp	r3, r2
 8007476:	da00      	bge.n	800747a <__multiply+0x28>
 8007478:	3101      	adds	r1, #1
 800747a:	f7ff ff09 	bl	8007290 <_Balloc>
 800747e:	0002      	movs	r2, r0
 8007480:	19bb      	adds	r3, r7, r6
 8007482:	3214      	adds	r2, #20
 8007484:	009b      	lsls	r3, r3, #2
 8007486:	18d3      	adds	r3, r2, r3
 8007488:	469c      	mov	ip, r3
 800748a:	2100      	movs	r1, #0
 800748c:	0013      	movs	r3, r2
 800748e:	9004      	str	r0, [sp, #16]
 8007490:	4563      	cmp	r3, ip
 8007492:	d31d      	bcc.n	80074d0 <__multiply+0x7e>
 8007494:	3514      	adds	r5, #20
 8007496:	00bf      	lsls	r7, r7, #2
 8007498:	19eb      	adds	r3, r5, r7
 800749a:	3414      	adds	r4, #20
 800749c:	00b6      	lsls	r6, r6, #2
 800749e:	9305      	str	r3, [sp, #20]
 80074a0:	19a3      	adds	r3, r4, r6
 80074a2:	9503      	str	r5, [sp, #12]
 80074a4:	9401      	str	r4, [sp, #4]
 80074a6:	9307      	str	r3, [sp, #28]
 80074a8:	9b07      	ldr	r3, [sp, #28]
 80074aa:	9901      	ldr	r1, [sp, #4]
 80074ac:	4299      	cmp	r1, r3
 80074ae:	d311      	bcc.n	80074d4 <__multiply+0x82>
 80074b0:	9b02      	ldr	r3, [sp, #8]
 80074b2:	2b00      	cmp	r3, #0
 80074b4:	dd06      	ble.n	80074c4 <__multiply+0x72>
 80074b6:	2304      	movs	r3, #4
 80074b8:	425b      	negs	r3, r3
 80074ba:	449c      	add	ip, r3
 80074bc:	4663      	mov	r3, ip
 80074be:	681b      	ldr	r3, [r3, #0]
 80074c0:	2b00      	cmp	r3, #0
 80074c2:	d051      	beq.n	8007568 <__multiply+0x116>
 80074c4:	9b04      	ldr	r3, [sp, #16]
 80074c6:	9a02      	ldr	r2, [sp, #8]
 80074c8:	0018      	movs	r0, r3
 80074ca:	611a      	str	r2, [r3, #16]
 80074cc:	b009      	add	sp, #36	; 0x24
 80074ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80074d0:	c302      	stmia	r3!, {r1}
 80074d2:	e7dd      	b.n	8007490 <__multiply+0x3e>
 80074d4:	9b01      	ldr	r3, [sp, #4]
 80074d6:	681b      	ldr	r3, [r3, #0]
 80074d8:	b298      	uxth	r0, r3
 80074da:	2800      	cmp	r0, #0
 80074dc:	d01c      	beq.n	8007518 <__multiply+0xc6>
 80074de:	0015      	movs	r5, r2
 80074e0:	2600      	movs	r6, #0
 80074e2:	9f03      	ldr	r7, [sp, #12]
 80074e4:	cf02      	ldmia	r7!, {r1}
 80074e6:	682c      	ldr	r4, [r5, #0]
 80074e8:	b28b      	uxth	r3, r1
 80074ea:	4343      	muls	r3, r0
 80074ec:	0c09      	lsrs	r1, r1, #16
 80074ee:	4341      	muls	r1, r0
 80074f0:	b2a4      	uxth	r4, r4
 80074f2:	191b      	adds	r3, r3, r4
 80074f4:	199b      	adds	r3, r3, r6
 80074f6:	000e      	movs	r6, r1
 80074f8:	6829      	ldr	r1, [r5, #0]
 80074fa:	9506      	str	r5, [sp, #24]
 80074fc:	0c09      	lsrs	r1, r1, #16
 80074fe:	1871      	adds	r1, r6, r1
 8007500:	0c1e      	lsrs	r6, r3, #16
 8007502:	1989      	adds	r1, r1, r6
 8007504:	0c0e      	lsrs	r6, r1, #16
 8007506:	b29b      	uxth	r3, r3
 8007508:	0409      	lsls	r1, r1, #16
 800750a:	430b      	orrs	r3, r1
 800750c:	c508      	stmia	r5!, {r3}
 800750e:	9b05      	ldr	r3, [sp, #20]
 8007510:	42bb      	cmp	r3, r7
 8007512:	d8e7      	bhi.n	80074e4 <__multiply+0x92>
 8007514:	9b06      	ldr	r3, [sp, #24]
 8007516:	605e      	str	r6, [r3, #4]
 8007518:	9b01      	ldr	r3, [sp, #4]
 800751a:	681b      	ldr	r3, [r3, #0]
 800751c:	0c1d      	lsrs	r5, r3, #16
 800751e:	d01e      	beq.n	800755e <__multiply+0x10c>
 8007520:	0010      	movs	r0, r2
 8007522:	2700      	movs	r7, #0
 8007524:	6813      	ldr	r3, [r2, #0]
 8007526:	9e03      	ldr	r6, [sp, #12]
 8007528:	6831      	ldr	r1, [r6, #0]
 800752a:	6804      	ldr	r4, [r0, #0]
 800752c:	b289      	uxth	r1, r1
 800752e:	4369      	muls	r1, r5
 8007530:	0c24      	lsrs	r4, r4, #16
 8007532:	1909      	adds	r1, r1, r4
 8007534:	19c9      	adds	r1, r1, r7
 8007536:	040f      	lsls	r7, r1, #16
 8007538:	b29b      	uxth	r3, r3
 800753a:	433b      	orrs	r3, r7
 800753c:	6003      	str	r3, [r0, #0]
 800753e:	ce80      	ldmia	r6!, {r7}
 8007540:	6843      	ldr	r3, [r0, #4]
 8007542:	0c3f      	lsrs	r7, r7, #16
 8007544:	436f      	muls	r7, r5
 8007546:	b29b      	uxth	r3, r3
 8007548:	18fb      	adds	r3, r7, r3
 800754a:	0c09      	lsrs	r1, r1, #16
 800754c:	185b      	adds	r3, r3, r1
 800754e:	9905      	ldr	r1, [sp, #20]
 8007550:	9006      	str	r0, [sp, #24]
 8007552:	0c1f      	lsrs	r7, r3, #16
 8007554:	3004      	adds	r0, #4
 8007556:	42b1      	cmp	r1, r6
 8007558:	d8e6      	bhi.n	8007528 <__multiply+0xd6>
 800755a:	9906      	ldr	r1, [sp, #24]
 800755c:	604b      	str	r3, [r1, #4]
 800755e:	9b01      	ldr	r3, [sp, #4]
 8007560:	3204      	adds	r2, #4
 8007562:	3304      	adds	r3, #4
 8007564:	9301      	str	r3, [sp, #4]
 8007566:	e79f      	b.n	80074a8 <__multiply+0x56>
 8007568:	9b02      	ldr	r3, [sp, #8]
 800756a:	3b01      	subs	r3, #1
 800756c:	9302      	str	r3, [sp, #8]
 800756e:	e79f      	b.n	80074b0 <__multiply+0x5e>

08007570 <__pow5mult>:
 8007570:	2303      	movs	r3, #3
 8007572:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007574:	4013      	ands	r3, r2
 8007576:	0005      	movs	r5, r0
 8007578:	000e      	movs	r6, r1
 800757a:	0014      	movs	r4, r2
 800757c:	2b00      	cmp	r3, #0
 800757e:	d008      	beq.n	8007592 <__pow5mult+0x22>
 8007580:	4922      	ldr	r1, [pc, #136]	; (800760c <__pow5mult+0x9c>)
 8007582:	3b01      	subs	r3, #1
 8007584:	009a      	lsls	r2, r3, #2
 8007586:	5852      	ldr	r2, [r2, r1]
 8007588:	2300      	movs	r3, #0
 800758a:	0031      	movs	r1, r6
 800758c:	f7ff fed1 	bl	8007332 <__multadd>
 8007590:	0006      	movs	r6, r0
 8007592:	10a3      	asrs	r3, r4, #2
 8007594:	9301      	str	r3, [sp, #4]
 8007596:	d036      	beq.n	8007606 <__pow5mult+0x96>
 8007598:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 800759a:	2c00      	cmp	r4, #0
 800759c:	d107      	bne.n	80075ae <__pow5mult+0x3e>
 800759e:	2010      	movs	r0, #16
 80075a0:	f7ff fe46 	bl	8007230 <malloc>
 80075a4:	6268      	str	r0, [r5, #36]	; 0x24
 80075a6:	6044      	str	r4, [r0, #4]
 80075a8:	6084      	str	r4, [r0, #8]
 80075aa:	6004      	str	r4, [r0, #0]
 80075ac:	60c4      	str	r4, [r0, #12]
 80075ae:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 80075b0:	68bc      	ldr	r4, [r7, #8]
 80075b2:	2c00      	cmp	r4, #0
 80075b4:	d107      	bne.n	80075c6 <__pow5mult+0x56>
 80075b6:	4916      	ldr	r1, [pc, #88]	; (8007610 <__pow5mult+0xa0>)
 80075b8:	0028      	movs	r0, r5
 80075ba:	f7ff ff41 	bl	8007440 <__i2b>
 80075be:	2300      	movs	r3, #0
 80075c0:	0004      	movs	r4, r0
 80075c2:	60b8      	str	r0, [r7, #8]
 80075c4:	6003      	str	r3, [r0, #0]
 80075c6:	2201      	movs	r2, #1
 80075c8:	9b01      	ldr	r3, [sp, #4]
 80075ca:	4213      	tst	r3, r2
 80075cc:	d00a      	beq.n	80075e4 <__pow5mult+0x74>
 80075ce:	0031      	movs	r1, r6
 80075d0:	0022      	movs	r2, r4
 80075d2:	0028      	movs	r0, r5
 80075d4:	f7ff ff3d 	bl	8007452 <__multiply>
 80075d8:	0007      	movs	r7, r0
 80075da:	0031      	movs	r1, r6
 80075dc:	0028      	movs	r0, r5
 80075de:	f7ff fe8f 	bl	8007300 <_Bfree>
 80075e2:	003e      	movs	r6, r7
 80075e4:	9b01      	ldr	r3, [sp, #4]
 80075e6:	105b      	asrs	r3, r3, #1
 80075e8:	9301      	str	r3, [sp, #4]
 80075ea:	d00c      	beq.n	8007606 <__pow5mult+0x96>
 80075ec:	6820      	ldr	r0, [r4, #0]
 80075ee:	2800      	cmp	r0, #0
 80075f0:	d107      	bne.n	8007602 <__pow5mult+0x92>
 80075f2:	0022      	movs	r2, r4
 80075f4:	0021      	movs	r1, r4
 80075f6:	0028      	movs	r0, r5
 80075f8:	f7ff ff2b 	bl	8007452 <__multiply>
 80075fc:	2300      	movs	r3, #0
 80075fe:	6020      	str	r0, [r4, #0]
 8007600:	6003      	str	r3, [r0, #0]
 8007602:	0004      	movs	r4, r0
 8007604:	e7df      	b.n	80075c6 <__pow5mult+0x56>
 8007606:	0030      	movs	r0, r6
 8007608:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800760a:	46c0      	nop			; (mov r8, r8)
 800760c:	08009798 	.word	0x08009798
 8007610:	00000271 	.word	0x00000271

08007614 <__lshift>:
 8007614:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007616:	000d      	movs	r5, r1
 8007618:	0017      	movs	r7, r2
 800761a:	692b      	ldr	r3, [r5, #16]
 800761c:	1154      	asrs	r4, r2, #5
 800761e:	b085      	sub	sp, #20
 8007620:	18e3      	adds	r3, r4, r3
 8007622:	9301      	str	r3, [sp, #4]
 8007624:	3301      	adds	r3, #1
 8007626:	9300      	str	r3, [sp, #0]
 8007628:	6849      	ldr	r1, [r1, #4]
 800762a:	68ab      	ldr	r3, [r5, #8]
 800762c:	9002      	str	r0, [sp, #8]
 800762e:	9a00      	ldr	r2, [sp, #0]
 8007630:	4293      	cmp	r3, r2
 8007632:	db35      	blt.n	80076a0 <__lshift+0x8c>
 8007634:	9802      	ldr	r0, [sp, #8]
 8007636:	f7ff fe2b 	bl	8007290 <_Balloc>
 800763a:	2300      	movs	r3, #0
 800763c:	0002      	movs	r2, r0
 800763e:	0006      	movs	r6, r0
 8007640:	0019      	movs	r1, r3
 8007642:	3214      	adds	r2, #20
 8007644:	42a3      	cmp	r3, r4
 8007646:	db2e      	blt.n	80076a6 <__lshift+0x92>
 8007648:	43e3      	mvns	r3, r4
 800764a:	17db      	asrs	r3, r3, #31
 800764c:	401c      	ands	r4, r3
 800764e:	002b      	movs	r3, r5
 8007650:	00a4      	lsls	r4, r4, #2
 8007652:	1914      	adds	r4, r2, r4
 8007654:	692a      	ldr	r2, [r5, #16]
 8007656:	3314      	adds	r3, #20
 8007658:	0092      	lsls	r2, r2, #2
 800765a:	189a      	adds	r2, r3, r2
 800765c:	4694      	mov	ip, r2
 800765e:	221f      	movs	r2, #31
 8007660:	4017      	ands	r7, r2
 8007662:	d024      	beq.n	80076ae <__lshift+0x9a>
 8007664:	3201      	adds	r2, #1
 8007666:	1bd2      	subs	r2, r2, r7
 8007668:	9203      	str	r2, [sp, #12]
 800766a:	2200      	movs	r2, #0
 800766c:	6819      	ldr	r1, [r3, #0]
 800766e:	0020      	movs	r0, r4
 8007670:	40b9      	lsls	r1, r7
 8007672:	430a      	orrs	r2, r1
 8007674:	c404      	stmia	r4!, {r2}
 8007676:	cb04      	ldmia	r3!, {r2}
 8007678:	9903      	ldr	r1, [sp, #12]
 800767a:	40ca      	lsrs	r2, r1
 800767c:	459c      	cmp	ip, r3
 800767e:	d8f5      	bhi.n	800766c <__lshift+0x58>
 8007680:	6042      	str	r2, [r0, #4]
 8007682:	2a00      	cmp	r2, #0
 8007684:	d002      	beq.n	800768c <__lshift+0x78>
 8007686:	9b01      	ldr	r3, [sp, #4]
 8007688:	3302      	adds	r3, #2
 800768a:	9300      	str	r3, [sp, #0]
 800768c:	9b00      	ldr	r3, [sp, #0]
 800768e:	9802      	ldr	r0, [sp, #8]
 8007690:	3b01      	subs	r3, #1
 8007692:	6133      	str	r3, [r6, #16]
 8007694:	0029      	movs	r1, r5
 8007696:	f7ff fe33 	bl	8007300 <_Bfree>
 800769a:	0030      	movs	r0, r6
 800769c:	b005      	add	sp, #20
 800769e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80076a0:	3101      	adds	r1, #1
 80076a2:	005b      	lsls	r3, r3, #1
 80076a4:	e7c3      	b.n	800762e <__lshift+0x1a>
 80076a6:	0098      	lsls	r0, r3, #2
 80076a8:	5011      	str	r1, [r2, r0]
 80076aa:	3301      	adds	r3, #1
 80076ac:	e7ca      	b.n	8007644 <__lshift+0x30>
 80076ae:	cb04      	ldmia	r3!, {r2}
 80076b0:	c404      	stmia	r4!, {r2}
 80076b2:	459c      	cmp	ip, r3
 80076b4:	d8fb      	bhi.n	80076ae <__lshift+0x9a>
 80076b6:	e7e9      	b.n	800768c <__lshift+0x78>

080076b8 <__mcmp>:
 80076b8:	690a      	ldr	r2, [r1, #16]
 80076ba:	6903      	ldr	r3, [r0, #16]
 80076bc:	b530      	push	{r4, r5, lr}
 80076be:	1a9b      	subs	r3, r3, r2
 80076c0:	d10d      	bne.n	80076de <__mcmp+0x26>
 80076c2:	0092      	lsls	r2, r2, #2
 80076c4:	3014      	adds	r0, #20
 80076c6:	3114      	adds	r1, #20
 80076c8:	1884      	adds	r4, r0, r2
 80076ca:	1889      	adds	r1, r1, r2
 80076cc:	3c04      	subs	r4, #4
 80076ce:	3904      	subs	r1, #4
 80076d0:	6825      	ldr	r5, [r4, #0]
 80076d2:	680a      	ldr	r2, [r1, #0]
 80076d4:	4295      	cmp	r5, r2
 80076d6:	d004      	beq.n	80076e2 <__mcmp+0x2a>
 80076d8:	2301      	movs	r3, #1
 80076da:	4295      	cmp	r5, r2
 80076dc:	d304      	bcc.n	80076e8 <__mcmp+0x30>
 80076de:	0018      	movs	r0, r3
 80076e0:	bd30      	pop	{r4, r5, pc}
 80076e2:	42a0      	cmp	r0, r4
 80076e4:	d3f2      	bcc.n	80076cc <__mcmp+0x14>
 80076e6:	e7fa      	b.n	80076de <__mcmp+0x26>
 80076e8:	425b      	negs	r3, r3
 80076ea:	e7f8      	b.n	80076de <__mcmp+0x26>

080076ec <__mdiff>:
 80076ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80076ee:	000d      	movs	r5, r1
 80076f0:	b085      	sub	sp, #20
 80076f2:	0007      	movs	r7, r0
 80076f4:	0011      	movs	r1, r2
 80076f6:	0028      	movs	r0, r5
 80076f8:	0014      	movs	r4, r2
 80076fa:	f7ff ffdd 	bl	80076b8 <__mcmp>
 80076fe:	1e06      	subs	r6, r0, #0
 8007700:	d108      	bne.n	8007714 <__mdiff+0x28>
 8007702:	0001      	movs	r1, r0
 8007704:	0038      	movs	r0, r7
 8007706:	f7ff fdc3 	bl	8007290 <_Balloc>
 800770a:	2301      	movs	r3, #1
 800770c:	6146      	str	r6, [r0, #20]
 800770e:	6103      	str	r3, [r0, #16]
 8007710:	b005      	add	sp, #20
 8007712:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007714:	2301      	movs	r3, #1
 8007716:	9301      	str	r3, [sp, #4]
 8007718:	2800      	cmp	r0, #0
 800771a:	db04      	blt.n	8007726 <__mdiff+0x3a>
 800771c:	0023      	movs	r3, r4
 800771e:	002c      	movs	r4, r5
 8007720:	001d      	movs	r5, r3
 8007722:	2300      	movs	r3, #0
 8007724:	9301      	str	r3, [sp, #4]
 8007726:	6861      	ldr	r1, [r4, #4]
 8007728:	0038      	movs	r0, r7
 800772a:	f7ff fdb1 	bl	8007290 <_Balloc>
 800772e:	002f      	movs	r7, r5
 8007730:	2200      	movs	r2, #0
 8007732:	9b01      	ldr	r3, [sp, #4]
 8007734:	6926      	ldr	r6, [r4, #16]
 8007736:	60c3      	str	r3, [r0, #12]
 8007738:	3414      	adds	r4, #20
 800773a:	00b3      	lsls	r3, r6, #2
 800773c:	18e3      	adds	r3, r4, r3
 800773e:	9302      	str	r3, [sp, #8]
 8007740:	692b      	ldr	r3, [r5, #16]
 8007742:	3714      	adds	r7, #20
 8007744:	009b      	lsls	r3, r3, #2
 8007746:	18fb      	adds	r3, r7, r3
 8007748:	9303      	str	r3, [sp, #12]
 800774a:	0003      	movs	r3, r0
 800774c:	4694      	mov	ip, r2
 800774e:	3314      	adds	r3, #20
 8007750:	cc20      	ldmia	r4!, {r5}
 8007752:	cf04      	ldmia	r7!, {r2}
 8007754:	9201      	str	r2, [sp, #4]
 8007756:	b2aa      	uxth	r2, r5
 8007758:	4494      	add	ip, r2
 800775a:	466a      	mov	r2, sp
 800775c:	4661      	mov	r1, ip
 800775e:	8892      	ldrh	r2, [r2, #4]
 8007760:	0c2d      	lsrs	r5, r5, #16
 8007762:	1a8a      	subs	r2, r1, r2
 8007764:	9901      	ldr	r1, [sp, #4]
 8007766:	0c09      	lsrs	r1, r1, #16
 8007768:	1a69      	subs	r1, r5, r1
 800776a:	1415      	asrs	r5, r2, #16
 800776c:	1949      	adds	r1, r1, r5
 800776e:	140d      	asrs	r5, r1, #16
 8007770:	b292      	uxth	r2, r2
 8007772:	0409      	lsls	r1, r1, #16
 8007774:	430a      	orrs	r2, r1
 8007776:	601a      	str	r2, [r3, #0]
 8007778:	9a03      	ldr	r2, [sp, #12]
 800777a:	46ac      	mov	ip, r5
 800777c:	3304      	adds	r3, #4
 800777e:	42ba      	cmp	r2, r7
 8007780:	d8e6      	bhi.n	8007750 <__mdiff+0x64>
 8007782:	9902      	ldr	r1, [sp, #8]
 8007784:	001a      	movs	r2, r3
 8007786:	428c      	cmp	r4, r1
 8007788:	d305      	bcc.n	8007796 <__mdiff+0xaa>
 800778a:	3a04      	subs	r2, #4
 800778c:	6813      	ldr	r3, [r2, #0]
 800778e:	2b00      	cmp	r3, #0
 8007790:	d00e      	beq.n	80077b0 <__mdiff+0xc4>
 8007792:	6106      	str	r6, [r0, #16]
 8007794:	e7bc      	b.n	8007710 <__mdiff+0x24>
 8007796:	cc04      	ldmia	r4!, {r2}
 8007798:	b291      	uxth	r1, r2
 800779a:	4461      	add	r1, ip
 800779c:	140d      	asrs	r5, r1, #16
 800779e:	0c12      	lsrs	r2, r2, #16
 80077a0:	1952      	adds	r2, r2, r5
 80077a2:	1415      	asrs	r5, r2, #16
 80077a4:	b289      	uxth	r1, r1
 80077a6:	0412      	lsls	r2, r2, #16
 80077a8:	430a      	orrs	r2, r1
 80077aa:	46ac      	mov	ip, r5
 80077ac:	c304      	stmia	r3!, {r2}
 80077ae:	e7e8      	b.n	8007782 <__mdiff+0x96>
 80077b0:	3e01      	subs	r6, #1
 80077b2:	e7ea      	b.n	800778a <__mdiff+0x9e>

080077b4 <__d2b>:
 80077b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80077b6:	001d      	movs	r5, r3
 80077b8:	2101      	movs	r1, #1
 80077ba:	0014      	movs	r4, r2
 80077bc:	9f08      	ldr	r7, [sp, #32]
 80077be:	f7ff fd67 	bl	8007290 <_Balloc>
 80077c2:	032b      	lsls	r3, r5, #12
 80077c4:	006d      	lsls	r5, r5, #1
 80077c6:	0006      	movs	r6, r0
 80077c8:	0b1b      	lsrs	r3, r3, #12
 80077ca:	0d6d      	lsrs	r5, r5, #21
 80077cc:	d124      	bne.n	8007818 <__d2b+0x64>
 80077ce:	9301      	str	r3, [sp, #4]
 80077d0:	2c00      	cmp	r4, #0
 80077d2:	d027      	beq.n	8007824 <__d2b+0x70>
 80077d4:	4668      	mov	r0, sp
 80077d6:	9400      	str	r4, [sp, #0]
 80077d8:	f7ff fe03 	bl	80073e2 <__lo0bits>
 80077dc:	9c00      	ldr	r4, [sp, #0]
 80077de:	2800      	cmp	r0, #0
 80077e0:	d01e      	beq.n	8007820 <__d2b+0x6c>
 80077e2:	9b01      	ldr	r3, [sp, #4]
 80077e4:	2120      	movs	r1, #32
 80077e6:	001a      	movs	r2, r3
 80077e8:	1a09      	subs	r1, r1, r0
 80077ea:	408a      	lsls	r2, r1
 80077ec:	40c3      	lsrs	r3, r0
 80077ee:	4322      	orrs	r2, r4
 80077f0:	6172      	str	r2, [r6, #20]
 80077f2:	9301      	str	r3, [sp, #4]
 80077f4:	9c01      	ldr	r4, [sp, #4]
 80077f6:	61b4      	str	r4, [r6, #24]
 80077f8:	1e63      	subs	r3, r4, #1
 80077fa:	419c      	sbcs	r4, r3
 80077fc:	3401      	adds	r4, #1
 80077fe:	6134      	str	r4, [r6, #16]
 8007800:	2d00      	cmp	r5, #0
 8007802:	d018      	beq.n	8007836 <__d2b+0x82>
 8007804:	4b12      	ldr	r3, [pc, #72]	; (8007850 <__d2b+0x9c>)
 8007806:	18ed      	adds	r5, r5, r3
 8007808:	2335      	movs	r3, #53	; 0x35
 800780a:	182d      	adds	r5, r5, r0
 800780c:	603d      	str	r5, [r7, #0]
 800780e:	1a18      	subs	r0, r3, r0
 8007810:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007812:	6018      	str	r0, [r3, #0]
 8007814:	0030      	movs	r0, r6
 8007816:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007818:	2280      	movs	r2, #128	; 0x80
 800781a:	0352      	lsls	r2, r2, #13
 800781c:	4313      	orrs	r3, r2
 800781e:	e7d6      	b.n	80077ce <__d2b+0x1a>
 8007820:	6174      	str	r4, [r6, #20]
 8007822:	e7e7      	b.n	80077f4 <__d2b+0x40>
 8007824:	a801      	add	r0, sp, #4
 8007826:	f7ff fddc 	bl	80073e2 <__lo0bits>
 800782a:	2401      	movs	r4, #1
 800782c:	9b01      	ldr	r3, [sp, #4]
 800782e:	6134      	str	r4, [r6, #16]
 8007830:	6173      	str	r3, [r6, #20]
 8007832:	3020      	adds	r0, #32
 8007834:	e7e4      	b.n	8007800 <__d2b+0x4c>
 8007836:	4b07      	ldr	r3, [pc, #28]	; (8007854 <__d2b+0xa0>)
 8007838:	18c0      	adds	r0, r0, r3
 800783a:	4b07      	ldr	r3, [pc, #28]	; (8007858 <__d2b+0xa4>)
 800783c:	6038      	str	r0, [r7, #0]
 800783e:	18e3      	adds	r3, r4, r3
 8007840:	009b      	lsls	r3, r3, #2
 8007842:	18f3      	adds	r3, r6, r3
 8007844:	6958      	ldr	r0, [r3, #20]
 8007846:	f7ff fdb2 	bl	80073ae <__hi0bits>
 800784a:	0164      	lsls	r4, r4, #5
 800784c:	1a20      	subs	r0, r4, r0
 800784e:	e7df      	b.n	8007810 <__d2b+0x5c>
 8007850:	fffffbcd 	.word	0xfffffbcd
 8007854:	fffffbce 	.word	0xfffffbce
 8007858:	3fffffff 	.word	0x3fffffff

0800785c <_calloc_r>:
 800785c:	434a      	muls	r2, r1
 800785e:	b570      	push	{r4, r5, r6, lr}
 8007860:	0011      	movs	r1, r2
 8007862:	0014      	movs	r4, r2
 8007864:	f000 f852 	bl	800790c <_malloc_r>
 8007868:	1e05      	subs	r5, r0, #0
 800786a:	d003      	beq.n	8007874 <_calloc_r+0x18>
 800786c:	0022      	movs	r2, r4
 800786e:	2100      	movs	r1, #0
 8007870:	f7fd fdf8 	bl	8005464 <memset>
 8007874:	0028      	movs	r0, r5
 8007876:	bd70      	pop	{r4, r5, r6, pc}

08007878 <_free_r>:
 8007878:	b570      	push	{r4, r5, r6, lr}
 800787a:	0005      	movs	r5, r0
 800787c:	2900      	cmp	r1, #0
 800787e:	d010      	beq.n	80078a2 <_free_r+0x2a>
 8007880:	1f0c      	subs	r4, r1, #4
 8007882:	6823      	ldr	r3, [r4, #0]
 8007884:	2b00      	cmp	r3, #0
 8007886:	da00      	bge.n	800788a <_free_r+0x12>
 8007888:	18e4      	adds	r4, r4, r3
 800788a:	0028      	movs	r0, r5
 800788c:	f000 fc15 	bl	80080ba <__malloc_lock>
 8007890:	4a1d      	ldr	r2, [pc, #116]	; (8007908 <_free_r+0x90>)
 8007892:	6813      	ldr	r3, [r2, #0]
 8007894:	2b00      	cmp	r3, #0
 8007896:	d105      	bne.n	80078a4 <_free_r+0x2c>
 8007898:	6063      	str	r3, [r4, #4]
 800789a:	6014      	str	r4, [r2, #0]
 800789c:	0028      	movs	r0, r5
 800789e:	f000 fc0d 	bl	80080bc <__malloc_unlock>
 80078a2:	bd70      	pop	{r4, r5, r6, pc}
 80078a4:	42a3      	cmp	r3, r4
 80078a6:	d909      	bls.n	80078bc <_free_r+0x44>
 80078a8:	6821      	ldr	r1, [r4, #0]
 80078aa:	1860      	adds	r0, r4, r1
 80078ac:	4283      	cmp	r3, r0
 80078ae:	d1f3      	bne.n	8007898 <_free_r+0x20>
 80078b0:	6818      	ldr	r0, [r3, #0]
 80078b2:	685b      	ldr	r3, [r3, #4]
 80078b4:	1841      	adds	r1, r0, r1
 80078b6:	6021      	str	r1, [r4, #0]
 80078b8:	e7ee      	b.n	8007898 <_free_r+0x20>
 80078ba:	0013      	movs	r3, r2
 80078bc:	685a      	ldr	r2, [r3, #4]
 80078be:	2a00      	cmp	r2, #0
 80078c0:	d001      	beq.n	80078c6 <_free_r+0x4e>
 80078c2:	42a2      	cmp	r2, r4
 80078c4:	d9f9      	bls.n	80078ba <_free_r+0x42>
 80078c6:	6819      	ldr	r1, [r3, #0]
 80078c8:	1858      	adds	r0, r3, r1
 80078ca:	42a0      	cmp	r0, r4
 80078cc:	d10b      	bne.n	80078e6 <_free_r+0x6e>
 80078ce:	6820      	ldr	r0, [r4, #0]
 80078d0:	1809      	adds	r1, r1, r0
 80078d2:	1858      	adds	r0, r3, r1
 80078d4:	6019      	str	r1, [r3, #0]
 80078d6:	4282      	cmp	r2, r0
 80078d8:	d1e0      	bne.n	800789c <_free_r+0x24>
 80078da:	6810      	ldr	r0, [r2, #0]
 80078dc:	6852      	ldr	r2, [r2, #4]
 80078de:	1841      	adds	r1, r0, r1
 80078e0:	6019      	str	r1, [r3, #0]
 80078e2:	605a      	str	r2, [r3, #4]
 80078e4:	e7da      	b.n	800789c <_free_r+0x24>
 80078e6:	42a0      	cmp	r0, r4
 80078e8:	d902      	bls.n	80078f0 <_free_r+0x78>
 80078ea:	230c      	movs	r3, #12
 80078ec:	602b      	str	r3, [r5, #0]
 80078ee:	e7d5      	b.n	800789c <_free_r+0x24>
 80078f0:	6821      	ldr	r1, [r4, #0]
 80078f2:	1860      	adds	r0, r4, r1
 80078f4:	4282      	cmp	r2, r0
 80078f6:	d103      	bne.n	8007900 <_free_r+0x88>
 80078f8:	6810      	ldr	r0, [r2, #0]
 80078fa:	6852      	ldr	r2, [r2, #4]
 80078fc:	1841      	adds	r1, r0, r1
 80078fe:	6021      	str	r1, [r4, #0]
 8007900:	6062      	str	r2, [r4, #4]
 8007902:	605c      	str	r4, [r3, #4]
 8007904:	e7ca      	b.n	800789c <_free_r+0x24>
 8007906:	46c0      	nop			; (mov r8, r8)
 8007908:	200003bc 	.word	0x200003bc

0800790c <_malloc_r>:
 800790c:	2303      	movs	r3, #3
 800790e:	b570      	push	{r4, r5, r6, lr}
 8007910:	1ccd      	adds	r5, r1, #3
 8007912:	439d      	bics	r5, r3
 8007914:	3508      	adds	r5, #8
 8007916:	0006      	movs	r6, r0
 8007918:	2d0c      	cmp	r5, #12
 800791a:	d21e      	bcs.n	800795a <_malloc_r+0x4e>
 800791c:	250c      	movs	r5, #12
 800791e:	42a9      	cmp	r1, r5
 8007920:	d81d      	bhi.n	800795e <_malloc_r+0x52>
 8007922:	0030      	movs	r0, r6
 8007924:	f000 fbc9 	bl	80080ba <__malloc_lock>
 8007928:	4a25      	ldr	r2, [pc, #148]	; (80079c0 <_malloc_r+0xb4>)
 800792a:	6814      	ldr	r4, [r2, #0]
 800792c:	0021      	movs	r1, r4
 800792e:	2900      	cmp	r1, #0
 8007930:	d119      	bne.n	8007966 <_malloc_r+0x5a>
 8007932:	4c24      	ldr	r4, [pc, #144]	; (80079c4 <_malloc_r+0xb8>)
 8007934:	6823      	ldr	r3, [r4, #0]
 8007936:	2b00      	cmp	r3, #0
 8007938:	d103      	bne.n	8007942 <_malloc_r+0x36>
 800793a:	0030      	movs	r0, r6
 800793c:	f000 fae2 	bl	8007f04 <_sbrk_r>
 8007940:	6020      	str	r0, [r4, #0]
 8007942:	0029      	movs	r1, r5
 8007944:	0030      	movs	r0, r6
 8007946:	f000 fadd 	bl	8007f04 <_sbrk_r>
 800794a:	1c43      	adds	r3, r0, #1
 800794c:	d12b      	bne.n	80079a6 <_malloc_r+0x9a>
 800794e:	230c      	movs	r3, #12
 8007950:	0030      	movs	r0, r6
 8007952:	6033      	str	r3, [r6, #0]
 8007954:	f000 fbb2 	bl	80080bc <__malloc_unlock>
 8007958:	e003      	b.n	8007962 <_malloc_r+0x56>
 800795a:	2d00      	cmp	r5, #0
 800795c:	dadf      	bge.n	800791e <_malloc_r+0x12>
 800795e:	230c      	movs	r3, #12
 8007960:	6033      	str	r3, [r6, #0]
 8007962:	2000      	movs	r0, #0
 8007964:	bd70      	pop	{r4, r5, r6, pc}
 8007966:	680b      	ldr	r3, [r1, #0]
 8007968:	1b5b      	subs	r3, r3, r5
 800796a:	d419      	bmi.n	80079a0 <_malloc_r+0x94>
 800796c:	2b0b      	cmp	r3, #11
 800796e:	d903      	bls.n	8007978 <_malloc_r+0x6c>
 8007970:	600b      	str	r3, [r1, #0]
 8007972:	18cc      	adds	r4, r1, r3
 8007974:	6025      	str	r5, [r4, #0]
 8007976:	e003      	b.n	8007980 <_malloc_r+0x74>
 8007978:	684b      	ldr	r3, [r1, #4]
 800797a:	428c      	cmp	r4, r1
 800797c:	d10d      	bne.n	800799a <_malloc_r+0x8e>
 800797e:	6013      	str	r3, [r2, #0]
 8007980:	0030      	movs	r0, r6
 8007982:	f000 fb9b 	bl	80080bc <__malloc_unlock>
 8007986:	0020      	movs	r0, r4
 8007988:	2207      	movs	r2, #7
 800798a:	300b      	adds	r0, #11
 800798c:	1d23      	adds	r3, r4, #4
 800798e:	4390      	bics	r0, r2
 8007990:	1ac3      	subs	r3, r0, r3
 8007992:	d0e7      	beq.n	8007964 <_malloc_r+0x58>
 8007994:	425a      	negs	r2, r3
 8007996:	50e2      	str	r2, [r4, r3]
 8007998:	e7e4      	b.n	8007964 <_malloc_r+0x58>
 800799a:	6063      	str	r3, [r4, #4]
 800799c:	000c      	movs	r4, r1
 800799e:	e7ef      	b.n	8007980 <_malloc_r+0x74>
 80079a0:	000c      	movs	r4, r1
 80079a2:	6849      	ldr	r1, [r1, #4]
 80079a4:	e7c3      	b.n	800792e <_malloc_r+0x22>
 80079a6:	2303      	movs	r3, #3
 80079a8:	1cc4      	adds	r4, r0, #3
 80079aa:	439c      	bics	r4, r3
 80079ac:	42a0      	cmp	r0, r4
 80079ae:	d0e1      	beq.n	8007974 <_malloc_r+0x68>
 80079b0:	1a21      	subs	r1, r4, r0
 80079b2:	0030      	movs	r0, r6
 80079b4:	f000 faa6 	bl	8007f04 <_sbrk_r>
 80079b8:	1c43      	adds	r3, r0, #1
 80079ba:	d1db      	bne.n	8007974 <_malloc_r+0x68>
 80079bc:	e7c7      	b.n	800794e <_malloc_r+0x42>
 80079be:	46c0      	nop			; (mov r8, r8)
 80079c0:	200003bc 	.word	0x200003bc
 80079c4:	200003c0 	.word	0x200003c0

080079c8 <__ssputs_r>:
 80079c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80079ca:	688e      	ldr	r6, [r1, #8]
 80079cc:	b085      	sub	sp, #20
 80079ce:	0007      	movs	r7, r0
 80079d0:	000c      	movs	r4, r1
 80079d2:	9203      	str	r2, [sp, #12]
 80079d4:	9301      	str	r3, [sp, #4]
 80079d6:	429e      	cmp	r6, r3
 80079d8:	d83c      	bhi.n	8007a54 <__ssputs_r+0x8c>
 80079da:	2390      	movs	r3, #144	; 0x90
 80079dc:	898a      	ldrh	r2, [r1, #12]
 80079de:	00db      	lsls	r3, r3, #3
 80079e0:	421a      	tst	r2, r3
 80079e2:	d034      	beq.n	8007a4e <__ssputs_r+0x86>
 80079e4:	2503      	movs	r5, #3
 80079e6:	6909      	ldr	r1, [r1, #16]
 80079e8:	6823      	ldr	r3, [r4, #0]
 80079ea:	1a5b      	subs	r3, r3, r1
 80079ec:	9302      	str	r3, [sp, #8]
 80079ee:	6963      	ldr	r3, [r4, #20]
 80079f0:	9802      	ldr	r0, [sp, #8]
 80079f2:	435d      	muls	r5, r3
 80079f4:	0feb      	lsrs	r3, r5, #31
 80079f6:	195d      	adds	r5, r3, r5
 80079f8:	9b01      	ldr	r3, [sp, #4]
 80079fa:	106d      	asrs	r5, r5, #1
 80079fc:	3301      	adds	r3, #1
 80079fe:	181b      	adds	r3, r3, r0
 8007a00:	42ab      	cmp	r3, r5
 8007a02:	d900      	bls.n	8007a06 <__ssputs_r+0x3e>
 8007a04:	001d      	movs	r5, r3
 8007a06:	0553      	lsls	r3, r2, #21
 8007a08:	d532      	bpl.n	8007a70 <__ssputs_r+0xa8>
 8007a0a:	0029      	movs	r1, r5
 8007a0c:	0038      	movs	r0, r7
 8007a0e:	f7ff ff7d 	bl	800790c <_malloc_r>
 8007a12:	1e06      	subs	r6, r0, #0
 8007a14:	d109      	bne.n	8007a2a <__ssputs_r+0x62>
 8007a16:	230c      	movs	r3, #12
 8007a18:	603b      	str	r3, [r7, #0]
 8007a1a:	2340      	movs	r3, #64	; 0x40
 8007a1c:	2001      	movs	r0, #1
 8007a1e:	89a2      	ldrh	r2, [r4, #12]
 8007a20:	4240      	negs	r0, r0
 8007a22:	4313      	orrs	r3, r2
 8007a24:	81a3      	strh	r3, [r4, #12]
 8007a26:	b005      	add	sp, #20
 8007a28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007a2a:	9a02      	ldr	r2, [sp, #8]
 8007a2c:	6921      	ldr	r1, [r4, #16]
 8007a2e:	f7ff fc26 	bl	800727e <memcpy>
 8007a32:	89a3      	ldrh	r3, [r4, #12]
 8007a34:	4a14      	ldr	r2, [pc, #80]	; (8007a88 <__ssputs_r+0xc0>)
 8007a36:	401a      	ands	r2, r3
 8007a38:	2380      	movs	r3, #128	; 0x80
 8007a3a:	4313      	orrs	r3, r2
 8007a3c:	81a3      	strh	r3, [r4, #12]
 8007a3e:	9b02      	ldr	r3, [sp, #8]
 8007a40:	6126      	str	r6, [r4, #16]
 8007a42:	18f6      	adds	r6, r6, r3
 8007a44:	6026      	str	r6, [r4, #0]
 8007a46:	6165      	str	r5, [r4, #20]
 8007a48:	9e01      	ldr	r6, [sp, #4]
 8007a4a:	1aed      	subs	r5, r5, r3
 8007a4c:	60a5      	str	r5, [r4, #8]
 8007a4e:	9b01      	ldr	r3, [sp, #4]
 8007a50:	429e      	cmp	r6, r3
 8007a52:	d900      	bls.n	8007a56 <__ssputs_r+0x8e>
 8007a54:	9e01      	ldr	r6, [sp, #4]
 8007a56:	0032      	movs	r2, r6
 8007a58:	9903      	ldr	r1, [sp, #12]
 8007a5a:	6820      	ldr	r0, [r4, #0]
 8007a5c:	f000 fb1a 	bl	8008094 <memmove>
 8007a60:	68a3      	ldr	r3, [r4, #8]
 8007a62:	2000      	movs	r0, #0
 8007a64:	1b9b      	subs	r3, r3, r6
 8007a66:	60a3      	str	r3, [r4, #8]
 8007a68:	6823      	ldr	r3, [r4, #0]
 8007a6a:	199e      	adds	r6, r3, r6
 8007a6c:	6026      	str	r6, [r4, #0]
 8007a6e:	e7da      	b.n	8007a26 <__ssputs_r+0x5e>
 8007a70:	002a      	movs	r2, r5
 8007a72:	0038      	movs	r0, r7
 8007a74:	f000 fb23 	bl	80080be <_realloc_r>
 8007a78:	1e06      	subs	r6, r0, #0
 8007a7a:	d1e0      	bne.n	8007a3e <__ssputs_r+0x76>
 8007a7c:	6921      	ldr	r1, [r4, #16]
 8007a7e:	0038      	movs	r0, r7
 8007a80:	f7ff fefa 	bl	8007878 <_free_r>
 8007a84:	e7c7      	b.n	8007a16 <__ssputs_r+0x4e>
 8007a86:	46c0      	nop			; (mov r8, r8)
 8007a88:	fffffb7f 	.word	0xfffffb7f

08007a8c <_svfiprintf_r>:
 8007a8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007a8e:	b0a1      	sub	sp, #132	; 0x84
 8007a90:	9003      	str	r0, [sp, #12]
 8007a92:	001d      	movs	r5, r3
 8007a94:	898b      	ldrh	r3, [r1, #12]
 8007a96:	000f      	movs	r7, r1
 8007a98:	0016      	movs	r6, r2
 8007a9a:	061b      	lsls	r3, r3, #24
 8007a9c:	d511      	bpl.n	8007ac2 <_svfiprintf_r+0x36>
 8007a9e:	690b      	ldr	r3, [r1, #16]
 8007aa0:	2b00      	cmp	r3, #0
 8007aa2:	d10e      	bne.n	8007ac2 <_svfiprintf_r+0x36>
 8007aa4:	2140      	movs	r1, #64	; 0x40
 8007aa6:	f7ff ff31 	bl	800790c <_malloc_r>
 8007aaa:	6038      	str	r0, [r7, #0]
 8007aac:	6138      	str	r0, [r7, #16]
 8007aae:	2800      	cmp	r0, #0
 8007ab0:	d105      	bne.n	8007abe <_svfiprintf_r+0x32>
 8007ab2:	230c      	movs	r3, #12
 8007ab4:	9a03      	ldr	r2, [sp, #12]
 8007ab6:	3801      	subs	r0, #1
 8007ab8:	6013      	str	r3, [r2, #0]
 8007aba:	b021      	add	sp, #132	; 0x84
 8007abc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007abe:	2340      	movs	r3, #64	; 0x40
 8007ac0:	617b      	str	r3, [r7, #20]
 8007ac2:	2300      	movs	r3, #0
 8007ac4:	ac08      	add	r4, sp, #32
 8007ac6:	6163      	str	r3, [r4, #20]
 8007ac8:	3320      	adds	r3, #32
 8007aca:	7663      	strb	r3, [r4, #25]
 8007acc:	3310      	adds	r3, #16
 8007ace:	76a3      	strb	r3, [r4, #26]
 8007ad0:	9507      	str	r5, [sp, #28]
 8007ad2:	0035      	movs	r5, r6
 8007ad4:	782b      	ldrb	r3, [r5, #0]
 8007ad6:	2b00      	cmp	r3, #0
 8007ad8:	d001      	beq.n	8007ade <_svfiprintf_r+0x52>
 8007ada:	2b25      	cmp	r3, #37	; 0x25
 8007adc:	d146      	bne.n	8007b6c <_svfiprintf_r+0xe0>
 8007ade:	1bab      	subs	r3, r5, r6
 8007ae0:	9305      	str	r3, [sp, #20]
 8007ae2:	d00c      	beq.n	8007afe <_svfiprintf_r+0x72>
 8007ae4:	0032      	movs	r2, r6
 8007ae6:	0039      	movs	r1, r7
 8007ae8:	9803      	ldr	r0, [sp, #12]
 8007aea:	f7ff ff6d 	bl	80079c8 <__ssputs_r>
 8007aee:	1c43      	adds	r3, r0, #1
 8007af0:	d100      	bne.n	8007af4 <_svfiprintf_r+0x68>
 8007af2:	e0ae      	b.n	8007c52 <_svfiprintf_r+0x1c6>
 8007af4:	6962      	ldr	r2, [r4, #20]
 8007af6:	9b05      	ldr	r3, [sp, #20]
 8007af8:	4694      	mov	ip, r2
 8007afa:	4463      	add	r3, ip
 8007afc:	6163      	str	r3, [r4, #20]
 8007afe:	782b      	ldrb	r3, [r5, #0]
 8007b00:	2b00      	cmp	r3, #0
 8007b02:	d100      	bne.n	8007b06 <_svfiprintf_r+0x7a>
 8007b04:	e0a5      	b.n	8007c52 <_svfiprintf_r+0x1c6>
 8007b06:	2201      	movs	r2, #1
 8007b08:	2300      	movs	r3, #0
 8007b0a:	4252      	negs	r2, r2
 8007b0c:	6062      	str	r2, [r4, #4]
 8007b0e:	a904      	add	r1, sp, #16
 8007b10:	3254      	adds	r2, #84	; 0x54
 8007b12:	1852      	adds	r2, r2, r1
 8007b14:	1c6e      	adds	r6, r5, #1
 8007b16:	6023      	str	r3, [r4, #0]
 8007b18:	60e3      	str	r3, [r4, #12]
 8007b1a:	60a3      	str	r3, [r4, #8]
 8007b1c:	7013      	strb	r3, [r2, #0]
 8007b1e:	65a3      	str	r3, [r4, #88]	; 0x58
 8007b20:	7831      	ldrb	r1, [r6, #0]
 8007b22:	2205      	movs	r2, #5
 8007b24:	4853      	ldr	r0, [pc, #332]	; (8007c74 <_svfiprintf_r+0x1e8>)
 8007b26:	f7ff fb9f 	bl	8007268 <memchr>
 8007b2a:	1c75      	adds	r5, r6, #1
 8007b2c:	2800      	cmp	r0, #0
 8007b2e:	d11f      	bne.n	8007b70 <_svfiprintf_r+0xe4>
 8007b30:	6822      	ldr	r2, [r4, #0]
 8007b32:	06d3      	lsls	r3, r2, #27
 8007b34:	d504      	bpl.n	8007b40 <_svfiprintf_r+0xb4>
 8007b36:	2353      	movs	r3, #83	; 0x53
 8007b38:	a904      	add	r1, sp, #16
 8007b3a:	185b      	adds	r3, r3, r1
 8007b3c:	2120      	movs	r1, #32
 8007b3e:	7019      	strb	r1, [r3, #0]
 8007b40:	0713      	lsls	r3, r2, #28
 8007b42:	d504      	bpl.n	8007b4e <_svfiprintf_r+0xc2>
 8007b44:	2353      	movs	r3, #83	; 0x53
 8007b46:	a904      	add	r1, sp, #16
 8007b48:	185b      	adds	r3, r3, r1
 8007b4a:	212b      	movs	r1, #43	; 0x2b
 8007b4c:	7019      	strb	r1, [r3, #0]
 8007b4e:	7833      	ldrb	r3, [r6, #0]
 8007b50:	2b2a      	cmp	r3, #42	; 0x2a
 8007b52:	d016      	beq.n	8007b82 <_svfiprintf_r+0xf6>
 8007b54:	0035      	movs	r5, r6
 8007b56:	2100      	movs	r1, #0
 8007b58:	200a      	movs	r0, #10
 8007b5a:	68e3      	ldr	r3, [r4, #12]
 8007b5c:	782a      	ldrb	r2, [r5, #0]
 8007b5e:	1c6e      	adds	r6, r5, #1
 8007b60:	3a30      	subs	r2, #48	; 0x30
 8007b62:	2a09      	cmp	r2, #9
 8007b64:	d94e      	bls.n	8007c04 <_svfiprintf_r+0x178>
 8007b66:	2900      	cmp	r1, #0
 8007b68:	d018      	beq.n	8007b9c <_svfiprintf_r+0x110>
 8007b6a:	e010      	b.n	8007b8e <_svfiprintf_r+0x102>
 8007b6c:	3501      	adds	r5, #1
 8007b6e:	e7b1      	b.n	8007ad4 <_svfiprintf_r+0x48>
 8007b70:	4b40      	ldr	r3, [pc, #256]	; (8007c74 <_svfiprintf_r+0x1e8>)
 8007b72:	6822      	ldr	r2, [r4, #0]
 8007b74:	1ac0      	subs	r0, r0, r3
 8007b76:	2301      	movs	r3, #1
 8007b78:	4083      	lsls	r3, r0
 8007b7a:	4313      	orrs	r3, r2
 8007b7c:	6023      	str	r3, [r4, #0]
 8007b7e:	002e      	movs	r6, r5
 8007b80:	e7ce      	b.n	8007b20 <_svfiprintf_r+0x94>
 8007b82:	9b07      	ldr	r3, [sp, #28]
 8007b84:	1d19      	adds	r1, r3, #4
 8007b86:	681b      	ldr	r3, [r3, #0]
 8007b88:	9107      	str	r1, [sp, #28]
 8007b8a:	2b00      	cmp	r3, #0
 8007b8c:	db01      	blt.n	8007b92 <_svfiprintf_r+0x106>
 8007b8e:	930b      	str	r3, [sp, #44]	; 0x2c
 8007b90:	e004      	b.n	8007b9c <_svfiprintf_r+0x110>
 8007b92:	425b      	negs	r3, r3
 8007b94:	60e3      	str	r3, [r4, #12]
 8007b96:	2302      	movs	r3, #2
 8007b98:	4313      	orrs	r3, r2
 8007b9a:	6023      	str	r3, [r4, #0]
 8007b9c:	782b      	ldrb	r3, [r5, #0]
 8007b9e:	2b2e      	cmp	r3, #46	; 0x2e
 8007ba0:	d10a      	bne.n	8007bb8 <_svfiprintf_r+0x12c>
 8007ba2:	786b      	ldrb	r3, [r5, #1]
 8007ba4:	2b2a      	cmp	r3, #42	; 0x2a
 8007ba6:	d135      	bne.n	8007c14 <_svfiprintf_r+0x188>
 8007ba8:	9b07      	ldr	r3, [sp, #28]
 8007baa:	3502      	adds	r5, #2
 8007bac:	1d1a      	adds	r2, r3, #4
 8007bae:	681b      	ldr	r3, [r3, #0]
 8007bb0:	9207      	str	r2, [sp, #28]
 8007bb2:	2b00      	cmp	r3, #0
 8007bb4:	db2b      	blt.n	8007c0e <_svfiprintf_r+0x182>
 8007bb6:	9309      	str	r3, [sp, #36]	; 0x24
 8007bb8:	4e2f      	ldr	r6, [pc, #188]	; (8007c78 <_svfiprintf_r+0x1ec>)
 8007bba:	7829      	ldrb	r1, [r5, #0]
 8007bbc:	2203      	movs	r2, #3
 8007bbe:	0030      	movs	r0, r6
 8007bc0:	f7ff fb52 	bl	8007268 <memchr>
 8007bc4:	2800      	cmp	r0, #0
 8007bc6:	d006      	beq.n	8007bd6 <_svfiprintf_r+0x14a>
 8007bc8:	2340      	movs	r3, #64	; 0x40
 8007bca:	1b80      	subs	r0, r0, r6
 8007bcc:	4083      	lsls	r3, r0
 8007bce:	6822      	ldr	r2, [r4, #0]
 8007bd0:	3501      	adds	r5, #1
 8007bd2:	4313      	orrs	r3, r2
 8007bd4:	6023      	str	r3, [r4, #0]
 8007bd6:	7829      	ldrb	r1, [r5, #0]
 8007bd8:	2206      	movs	r2, #6
 8007bda:	4828      	ldr	r0, [pc, #160]	; (8007c7c <_svfiprintf_r+0x1f0>)
 8007bdc:	1c6e      	adds	r6, r5, #1
 8007bde:	7621      	strb	r1, [r4, #24]
 8007be0:	f7ff fb42 	bl	8007268 <memchr>
 8007be4:	2800      	cmp	r0, #0
 8007be6:	d03c      	beq.n	8007c62 <_svfiprintf_r+0x1d6>
 8007be8:	4b25      	ldr	r3, [pc, #148]	; (8007c80 <_svfiprintf_r+0x1f4>)
 8007bea:	2b00      	cmp	r3, #0
 8007bec:	d125      	bne.n	8007c3a <_svfiprintf_r+0x1ae>
 8007bee:	2207      	movs	r2, #7
 8007bf0:	9b07      	ldr	r3, [sp, #28]
 8007bf2:	3307      	adds	r3, #7
 8007bf4:	4393      	bics	r3, r2
 8007bf6:	3308      	adds	r3, #8
 8007bf8:	9307      	str	r3, [sp, #28]
 8007bfa:	6963      	ldr	r3, [r4, #20]
 8007bfc:	9a04      	ldr	r2, [sp, #16]
 8007bfe:	189b      	adds	r3, r3, r2
 8007c00:	6163      	str	r3, [r4, #20]
 8007c02:	e766      	b.n	8007ad2 <_svfiprintf_r+0x46>
 8007c04:	4343      	muls	r3, r0
 8007c06:	2101      	movs	r1, #1
 8007c08:	189b      	adds	r3, r3, r2
 8007c0a:	0035      	movs	r5, r6
 8007c0c:	e7a6      	b.n	8007b5c <_svfiprintf_r+0xd0>
 8007c0e:	2301      	movs	r3, #1
 8007c10:	425b      	negs	r3, r3
 8007c12:	e7d0      	b.n	8007bb6 <_svfiprintf_r+0x12a>
 8007c14:	2300      	movs	r3, #0
 8007c16:	200a      	movs	r0, #10
 8007c18:	001a      	movs	r2, r3
 8007c1a:	3501      	adds	r5, #1
 8007c1c:	6063      	str	r3, [r4, #4]
 8007c1e:	7829      	ldrb	r1, [r5, #0]
 8007c20:	1c6e      	adds	r6, r5, #1
 8007c22:	3930      	subs	r1, #48	; 0x30
 8007c24:	2909      	cmp	r1, #9
 8007c26:	d903      	bls.n	8007c30 <_svfiprintf_r+0x1a4>
 8007c28:	2b00      	cmp	r3, #0
 8007c2a:	d0c5      	beq.n	8007bb8 <_svfiprintf_r+0x12c>
 8007c2c:	9209      	str	r2, [sp, #36]	; 0x24
 8007c2e:	e7c3      	b.n	8007bb8 <_svfiprintf_r+0x12c>
 8007c30:	4342      	muls	r2, r0
 8007c32:	2301      	movs	r3, #1
 8007c34:	1852      	adds	r2, r2, r1
 8007c36:	0035      	movs	r5, r6
 8007c38:	e7f1      	b.n	8007c1e <_svfiprintf_r+0x192>
 8007c3a:	ab07      	add	r3, sp, #28
 8007c3c:	9300      	str	r3, [sp, #0]
 8007c3e:	003a      	movs	r2, r7
 8007c40:	4b10      	ldr	r3, [pc, #64]	; (8007c84 <_svfiprintf_r+0x1f8>)
 8007c42:	0021      	movs	r1, r4
 8007c44:	9803      	ldr	r0, [sp, #12]
 8007c46:	f7fd fcb1 	bl	80055ac <_printf_float>
 8007c4a:	9004      	str	r0, [sp, #16]
 8007c4c:	9b04      	ldr	r3, [sp, #16]
 8007c4e:	3301      	adds	r3, #1
 8007c50:	d1d3      	bne.n	8007bfa <_svfiprintf_r+0x16e>
 8007c52:	89bb      	ldrh	r3, [r7, #12]
 8007c54:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007c56:	065b      	lsls	r3, r3, #25
 8007c58:	d400      	bmi.n	8007c5c <_svfiprintf_r+0x1d0>
 8007c5a:	e72e      	b.n	8007aba <_svfiprintf_r+0x2e>
 8007c5c:	2001      	movs	r0, #1
 8007c5e:	4240      	negs	r0, r0
 8007c60:	e72b      	b.n	8007aba <_svfiprintf_r+0x2e>
 8007c62:	ab07      	add	r3, sp, #28
 8007c64:	9300      	str	r3, [sp, #0]
 8007c66:	003a      	movs	r2, r7
 8007c68:	4b06      	ldr	r3, [pc, #24]	; (8007c84 <_svfiprintf_r+0x1f8>)
 8007c6a:	0021      	movs	r1, r4
 8007c6c:	9803      	ldr	r0, [sp, #12]
 8007c6e:	f7fd ff57 	bl	8005b20 <_printf_i>
 8007c72:	e7ea      	b.n	8007c4a <_svfiprintf_r+0x1be>
 8007c74:	080097a4 	.word	0x080097a4
 8007c78:	080097aa 	.word	0x080097aa
 8007c7c:	080097ae 	.word	0x080097ae
 8007c80:	080055ad 	.word	0x080055ad
 8007c84:	080079c9 	.word	0x080079c9

08007c88 <__sfputc_r>:
 8007c88:	6893      	ldr	r3, [r2, #8]
 8007c8a:	b510      	push	{r4, lr}
 8007c8c:	3b01      	subs	r3, #1
 8007c8e:	6093      	str	r3, [r2, #8]
 8007c90:	2b00      	cmp	r3, #0
 8007c92:	da04      	bge.n	8007c9e <__sfputc_r+0x16>
 8007c94:	6994      	ldr	r4, [r2, #24]
 8007c96:	42a3      	cmp	r3, r4
 8007c98:	db07      	blt.n	8007caa <__sfputc_r+0x22>
 8007c9a:	290a      	cmp	r1, #10
 8007c9c:	d005      	beq.n	8007caa <__sfputc_r+0x22>
 8007c9e:	6813      	ldr	r3, [r2, #0]
 8007ca0:	1c58      	adds	r0, r3, #1
 8007ca2:	6010      	str	r0, [r2, #0]
 8007ca4:	7019      	strb	r1, [r3, #0]
 8007ca6:	0008      	movs	r0, r1
 8007ca8:	bd10      	pop	{r4, pc}
 8007caa:	f7fe f989 	bl	8005fc0 <__swbuf_r>
 8007cae:	0001      	movs	r1, r0
 8007cb0:	e7f9      	b.n	8007ca6 <__sfputc_r+0x1e>

08007cb2 <__sfputs_r>:
 8007cb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007cb4:	0006      	movs	r6, r0
 8007cb6:	000f      	movs	r7, r1
 8007cb8:	0014      	movs	r4, r2
 8007cba:	18d5      	adds	r5, r2, r3
 8007cbc:	42ac      	cmp	r4, r5
 8007cbe:	d101      	bne.n	8007cc4 <__sfputs_r+0x12>
 8007cc0:	2000      	movs	r0, #0
 8007cc2:	e007      	b.n	8007cd4 <__sfputs_r+0x22>
 8007cc4:	7821      	ldrb	r1, [r4, #0]
 8007cc6:	003a      	movs	r2, r7
 8007cc8:	0030      	movs	r0, r6
 8007cca:	f7ff ffdd 	bl	8007c88 <__sfputc_r>
 8007cce:	3401      	adds	r4, #1
 8007cd0:	1c43      	adds	r3, r0, #1
 8007cd2:	d1f3      	bne.n	8007cbc <__sfputs_r+0xa>
 8007cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08007cd8 <_vfiprintf_r>:
 8007cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007cda:	b0a1      	sub	sp, #132	; 0x84
 8007cdc:	9003      	str	r0, [sp, #12]
 8007cde:	000f      	movs	r7, r1
 8007ce0:	0016      	movs	r6, r2
 8007ce2:	001d      	movs	r5, r3
 8007ce4:	2800      	cmp	r0, #0
 8007ce6:	d005      	beq.n	8007cf4 <_vfiprintf_r+0x1c>
 8007ce8:	6983      	ldr	r3, [r0, #24]
 8007cea:	9305      	str	r3, [sp, #20]
 8007cec:	2b00      	cmp	r3, #0
 8007cee:	d101      	bne.n	8007cf4 <_vfiprintf_r+0x1c>
 8007cf0:	f7ff f990 	bl	8007014 <__sinit>
 8007cf4:	4b7b      	ldr	r3, [pc, #492]	; (8007ee4 <_vfiprintf_r+0x20c>)
 8007cf6:	429f      	cmp	r7, r3
 8007cf8:	d15c      	bne.n	8007db4 <_vfiprintf_r+0xdc>
 8007cfa:	9b03      	ldr	r3, [sp, #12]
 8007cfc:	685f      	ldr	r7, [r3, #4]
 8007cfe:	89bb      	ldrh	r3, [r7, #12]
 8007d00:	071b      	lsls	r3, r3, #28
 8007d02:	d563      	bpl.n	8007dcc <_vfiprintf_r+0xf4>
 8007d04:	693b      	ldr	r3, [r7, #16]
 8007d06:	2b00      	cmp	r3, #0
 8007d08:	d060      	beq.n	8007dcc <_vfiprintf_r+0xf4>
 8007d0a:	2300      	movs	r3, #0
 8007d0c:	ac08      	add	r4, sp, #32
 8007d0e:	6163      	str	r3, [r4, #20]
 8007d10:	3320      	adds	r3, #32
 8007d12:	7663      	strb	r3, [r4, #25]
 8007d14:	3310      	adds	r3, #16
 8007d16:	76a3      	strb	r3, [r4, #26]
 8007d18:	9507      	str	r5, [sp, #28]
 8007d1a:	0035      	movs	r5, r6
 8007d1c:	782b      	ldrb	r3, [r5, #0]
 8007d1e:	2b00      	cmp	r3, #0
 8007d20:	d001      	beq.n	8007d26 <_vfiprintf_r+0x4e>
 8007d22:	2b25      	cmp	r3, #37	; 0x25
 8007d24:	d15c      	bne.n	8007de0 <_vfiprintf_r+0x108>
 8007d26:	1bab      	subs	r3, r5, r6
 8007d28:	9305      	str	r3, [sp, #20]
 8007d2a:	d00c      	beq.n	8007d46 <_vfiprintf_r+0x6e>
 8007d2c:	0032      	movs	r2, r6
 8007d2e:	0039      	movs	r1, r7
 8007d30:	9803      	ldr	r0, [sp, #12]
 8007d32:	f7ff ffbe 	bl	8007cb2 <__sfputs_r>
 8007d36:	1c43      	adds	r3, r0, #1
 8007d38:	d100      	bne.n	8007d3c <_vfiprintf_r+0x64>
 8007d3a:	e0c4      	b.n	8007ec6 <_vfiprintf_r+0x1ee>
 8007d3c:	6962      	ldr	r2, [r4, #20]
 8007d3e:	9b05      	ldr	r3, [sp, #20]
 8007d40:	4694      	mov	ip, r2
 8007d42:	4463      	add	r3, ip
 8007d44:	6163      	str	r3, [r4, #20]
 8007d46:	782b      	ldrb	r3, [r5, #0]
 8007d48:	2b00      	cmp	r3, #0
 8007d4a:	d100      	bne.n	8007d4e <_vfiprintf_r+0x76>
 8007d4c:	e0bb      	b.n	8007ec6 <_vfiprintf_r+0x1ee>
 8007d4e:	2201      	movs	r2, #1
 8007d50:	2300      	movs	r3, #0
 8007d52:	4252      	negs	r2, r2
 8007d54:	6062      	str	r2, [r4, #4]
 8007d56:	a904      	add	r1, sp, #16
 8007d58:	3254      	adds	r2, #84	; 0x54
 8007d5a:	1852      	adds	r2, r2, r1
 8007d5c:	1c6e      	adds	r6, r5, #1
 8007d5e:	6023      	str	r3, [r4, #0]
 8007d60:	60e3      	str	r3, [r4, #12]
 8007d62:	60a3      	str	r3, [r4, #8]
 8007d64:	7013      	strb	r3, [r2, #0]
 8007d66:	65a3      	str	r3, [r4, #88]	; 0x58
 8007d68:	7831      	ldrb	r1, [r6, #0]
 8007d6a:	2205      	movs	r2, #5
 8007d6c:	485e      	ldr	r0, [pc, #376]	; (8007ee8 <_vfiprintf_r+0x210>)
 8007d6e:	f7ff fa7b 	bl	8007268 <memchr>
 8007d72:	1c75      	adds	r5, r6, #1
 8007d74:	2800      	cmp	r0, #0
 8007d76:	d135      	bne.n	8007de4 <_vfiprintf_r+0x10c>
 8007d78:	6822      	ldr	r2, [r4, #0]
 8007d7a:	06d3      	lsls	r3, r2, #27
 8007d7c:	d504      	bpl.n	8007d88 <_vfiprintf_r+0xb0>
 8007d7e:	2353      	movs	r3, #83	; 0x53
 8007d80:	a904      	add	r1, sp, #16
 8007d82:	185b      	adds	r3, r3, r1
 8007d84:	2120      	movs	r1, #32
 8007d86:	7019      	strb	r1, [r3, #0]
 8007d88:	0713      	lsls	r3, r2, #28
 8007d8a:	d504      	bpl.n	8007d96 <_vfiprintf_r+0xbe>
 8007d8c:	2353      	movs	r3, #83	; 0x53
 8007d8e:	a904      	add	r1, sp, #16
 8007d90:	185b      	adds	r3, r3, r1
 8007d92:	212b      	movs	r1, #43	; 0x2b
 8007d94:	7019      	strb	r1, [r3, #0]
 8007d96:	7833      	ldrb	r3, [r6, #0]
 8007d98:	2b2a      	cmp	r3, #42	; 0x2a
 8007d9a:	d02c      	beq.n	8007df6 <_vfiprintf_r+0x11e>
 8007d9c:	0035      	movs	r5, r6
 8007d9e:	2100      	movs	r1, #0
 8007da0:	200a      	movs	r0, #10
 8007da2:	68e3      	ldr	r3, [r4, #12]
 8007da4:	782a      	ldrb	r2, [r5, #0]
 8007da6:	1c6e      	adds	r6, r5, #1
 8007da8:	3a30      	subs	r2, #48	; 0x30
 8007daa:	2a09      	cmp	r2, #9
 8007dac:	d964      	bls.n	8007e78 <_vfiprintf_r+0x1a0>
 8007dae:	2900      	cmp	r1, #0
 8007db0:	d02e      	beq.n	8007e10 <_vfiprintf_r+0x138>
 8007db2:	e026      	b.n	8007e02 <_vfiprintf_r+0x12a>
 8007db4:	4b4d      	ldr	r3, [pc, #308]	; (8007eec <_vfiprintf_r+0x214>)
 8007db6:	429f      	cmp	r7, r3
 8007db8:	d102      	bne.n	8007dc0 <_vfiprintf_r+0xe8>
 8007dba:	9b03      	ldr	r3, [sp, #12]
 8007dbc:	689f      	ldr	r7, [r3, #8]
 8007dbe:	e79e      	b.n	8007cfe <_vfiprintf_r+0x26>
 8007dc0:	4b4b      	ldr	r3, [pc, #300]	; (8007ef0 <_vfiprintf_r+0x218>)
 8007dc2:	429f      	cmp	r7, r3
 8007dc4:	d19b      	bne.n	8007cfe <_vfiprintf_r+0x26>
 8007dc6:	9b03      	ldr	r3, [sp, #12]
 8007dc8:	68df      	ldr	r7, [r3, #12]
 8007dca:	e798      	b.n	8007cfe <_vfiprintf_r+0x26>
 8007dcc:	0039      	movs	r1, r7
 8007dce:	9803      	ldr	r0, [sp, #12]
 8007dd0:	f7fe f94c 	bl	800606c <__swsetup_r>
 8007dd4:	2800      	cmp	r0, #0
 8007dd6:	d098      	beq.n	8007d0a <_vfiprintf_r+0x32>
 8007dd8:	2001      	movs	r0, #1
 8007dda:	4240      	negs	r0, r0
 8007ddc:	b021      	add	sp, #132	; 0x84
 8007dde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007de0:	3501      	adds	r5, #1
 8007de2:	e79b      	b.n	8007d1c <_vfiprintf_r+0x44>
 8007de4:	4b40      	ldr	r3, [pc, #256]	; (8007ee8 <_vfiprintf_r+0x210>)
 8007de6:	6822      	ldr	r2, [r4, #0]
 8007de8:	1ac0      	subs	r0, r0, r3
 8007dea:	2301      	movs	r3, #1
 8007dec:	4083      	lsls	r3, r0
 8007dee:	4313      	orrs	r3, r2
 8007df0:	6023      	str	r3, [r4, #0]
 8007df2:	002e      	movs	r6, r5
 8007df4:	e7b8      	b.n	8007d68 <_vfiprintf_r+0x90>
 8007df6:	9b07      	ldr	r3, [sp, #28]
 8007df8:	1d19      	adds	r1, r3, #4
 8007dfa:	681b      	ldr	r3, [r3, #0]
 8007dfc:	9107      	str	r1, [sp, #28]
 8007dfe:	2b00      	cmp	r3, #0
 8007e00:	db01      	blt.n	8007e06 <_vfiprintf_r+0x12e>
 8007e02:	930b      	str	r3, [sp, #44]	; 0x2c
 8007e04:	e004      	b.n	8007e10 <_vfiprintf_r+0x138>
 8007e06:	425b      	negs	r3, r3
 8007e08:	60e3      	str	r3, [r4, #12]
 8007e0a:	2302      	movs	r3, #2
 8007e0c:	4313      	orrs	r3, r2
 8007e0e:	6023      	str	r3, [r4, #0]
 8007e10:	782b      	ldrb	r3, [r5, #0]
 8007e12:	2b2e      	cmp	r3, #46	; 0x2e
 8007e14:	d10a      	bne.n	8007e2c <_vfiprintf_r+0x154>
 8007e16:	786b      	ldrb	r3, [r5, #1]
 8007e18:	2b2a      	cmp	r3, #42	; 0x2a
 8007e1a:	d135      	bne.n	8007e88 <_vfiprintf_r+0x1b0>
 8007e1c:	9b07      	ldr	r3, [sp, #28]
 8007e1e:	3502      	adds	r5, #2
 8007e20:	1d1a      	adds	r2, r3, #4
 8007e22:	681b      	ldr	r3, [r3, #0]
 8007e24:	9207      	str	r2, [sp, #28]
 8007e26:	2b00      	cmp	r3, #0
 8007e28:	db2b      	blt.n	8007e82 <_vfiprintf_r+0x1aa>
 8007e2a:	9309      	str	r3, [sp, #36]	; 0x24
 8007e2c:	4e31      	ldr	r6, [pc, #196]	; (8007ef4 <_vfiprintf_r+0x21c>)
 8007e2e:	7829      	ldrb	r1, [r5, #0]
 8007e30:	2203      	movs	r2, #3
 8007e32:	0030      	movs	r0, r6
 8007e34:	f7ff fa18 	bl	8007268 <memchr>
 8007e38:	2800      	cmp	r0, #0
 8007e3a:	d006      	beq.n	8007e4a <_vfiprintf_r+0x172>
 8007e3c:	2340      	movs	r3, #64	; 0x40
 8007e3e:	1b80      	subs	r0, r0, r6
 8007e40:	4083      	lsls	r3, r0
 8007e42:	6822      	ldr	r2, [r4, #0]
 8007e44:	3501      	adds	r5, #1
 8007e46:	4313      	orrs	r3, r2
 8007e48:	6023      	str	r3, [r4, #0]
 8007e4a:	7829      	ldrb	r1, [r5, #0]
 8007e4c:	2206      	movs	r2, #6
 8007e4e:	482a      	ldr	r0, [pc, #168]	; (8007ef8 <_vfiprintf_r+0x220>)
 8007e50:	1c6e      	adds	r6, r5, #1
 8007e52:	7621      	strb	r1, [r4, #24]
 8007e54:	f7ff fa08 	bl	8007268 <memchr>
 8007e58:	2800      	cmp	r0, #0
 8007e5a:	d03a      	beq.n	8007ed2 <_vfiprintf_r+0x1fa>
 8007e5c:	4b27      	ldr	r3, [pc, #156]	; (8007efc <_vfiprintf_r+0x224>)
 8007e5e:	2b00      	cmp	r3, #0
 8007e60:	d125      	bne.n	8007eae <_vfiprintf_r+0x1d6>
 8007e62:	2207      	movs	r2, #7
 8007e64:	9b07      	ldr	r3, [sp, #28]
 8007e66:	3307      	adds	r3, #7
 8007e68:	4393      	bics	r3, r2
 8007e6a:	3308      	adds	r3, #8
 8007e6c:	9307      	str	r3, [sp, #28]
 8007e6e:	6963      	ldr	r3, [r4, #20]
 8007e70:	9a04      	ldr	r2, [sp, #16]
 8007e72:	189b      	adds	r3, r3, r2
 8007e74:	6163      	str	r3, [r4, #20]
 8007e76:	e750      	b.n	8007d1a <_vfiprintf_r+0x42>
 8007e78:	4343      	muls	r3, r0
 8007e7a:	2101      	movs	r1, #1
 8007e7c:	189b      	adds	r3, r3, r2
 8007e7e:	0035      	movs	r5, r6
 8007e80:	e790      	b.n	8007da4 <_vfiprintf_r+0xcc>
 8007e82:	2301      	movs	r3, #1
 8007e84:	425b      	negs	r3, r3
 8007e86:	e7d0      	b.n	8007e2a <_vfiprintf_r+0x152>
 8007e88:	2300      	movs	r3, #0
 8007e8a:	200a      	movs	r0, #10
 8007e8c:	001a      	movs	r2, r3
 8007e8e:	3501      	adds	r5, #1
 8007e90:	6063      	str	r3, [r4, #4]
 8007e92:	7829      	ldrb	r1, [r5, #0]
 8007e94:	1c6e      	adds	r6, r5, #1
 8007e96:	3930      	subs	r1, #48	; 0x30
 8007e98:	2909      	cmp	r1, #9
 8007e9a:	d903      	bls.n	8007ea4 <_vfiprintf_r+0x1cc>
 8007e9c:	2b00      	cmp	r3, #0
 8007e9e:	d0c5      	beq.n	8007e2c <_vfiprintf_r+0x154>
 8007ea0:	9209      	str	r2, [sp, #36]	; 0x24
 8007ea2:	e7c3      	b.n	8007e2c <_vfiprintf_r+0x154>
 8007ea4:	4342      	muls	r2, r0
 8007ea6:	2301      	movs	r3, #1
 8007ea8:	1852      	adds	r2, r2, r1
 8007eaa:	0035      	movs	r5, r6
 8007eac:	e7f1      	b.n	8007e92 <_vfiprintf_r+0x1ba>
 8007eae:	ab07      	add	r3, sp, #28
 8007eb0:	9300      	str	r3, [sp, #0]
 8007eb2:	003a      	movs	r2, r7
 8007eb4:	4b12      	ldr	r3, [pc, #72]	; (8007f00 <_vfiprintf_r+0x228>)
 8007eb6:	0021      	movs	r1, r4
 8007eb8:	9803      	ldr	r0, [sp, #12]
 8007eba:	f7fd fb77 	bl	80055ac <_printf_float>
 8007ebe:	9004      	str	r0, [sp, #16]
 8007ec0:	9b04      	ldr	r3, [sp, #16]
 8007ec2:	3301      	adds	r3, #1
 8007ec4:	d1d3      	bne.n	8007e6e <_vfiprintf_r+0x196>
 8007ec6:	89bb      	ldrh	r3, [r7, #12]
 8007ec8:	065b      	lsls	r3, r3, #25
 8007eca:	d500      	bpl.n	8007ece <_vfiprintf_r+0x1f6>
 8007ecc:	e784      	b.n	8007dd8 <_vfiprintf_r+0x100>
 8007ece:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007ed0:	e784      	b.n	8007ddc <_vfiprintf_r+0x104>
 8007ed2:	ab07      	add	r3, sp, #28
 8007ed4:	9300      	str	r3, [sp, #0]
 8007ed6:	003a      	movs	r2, r7
 8007ed8:	4b09      	ldr	r3, [pc, #36]	; (8007f00 <_vfiprintf_r+0x228>)
 8007eda:	0021      	movs	r1, r4
 8007edc:	9803      	ldr	r0, [sp, #12]
 8007ede:	f7fd fe1f 	bl	8005b20 <_printf_i>
 8007ee2:	e7ec      	b.n	8007ebe <_vfiprintf_r+0x1e6>
 8007ee4:	08009658 	.word	0x08009658
 8007ee8:	080097a4 	.word	0x080097a4
 8007eec:	08009678 	.word	0x08009678
 8007ef0:	08009638 	.word	0x08009638
 8007ef4:	080097aa 	.word	0x080097aa
 8007ef8:	080097ae 	.word	0x080097ae
 8007efc:	080055ad 	.word	0x080055ad
 8007f00:	08007cb3 	.word	0x08007cb3

08007f04 <_sbrk_r>:
 8007f04:	2300      	movs	r3, #0
 8007f06:	b570      	push	{r4, r5, r6, lr}
 8007f08:	4c06      	ldr	r4, [pc, #24]	; (8007f24 <_sbrk_r+0x20>)
 8007f0a:	0005      	movs	r5, r0
 8007f0c:	0008      	movs	r0, r1
 8007f0e:	6023      	str	r3, [r4, #0]
 8007f10:	f7fd fa22 	bl	8005358 <_sbrk>
 8007f14:	1c43      	adds	r3, r0, #1
 8007f16:	d103      	bne.n	8007f20 <_sbrk_r+0x1c>
 8007f18:	6823      	ldr	r3, [r4, #0]
 8007f1a:	2b00      	cmp	r3, #0
 8007f1c:	d000      	beq.n	8007f20 <_sbrk_r+0x1c>
 8007f1e:	602b      	str	r3, [r5, #0]
 8007f20:	bd70      	pop	{r4, r5, r6, pc}
 8007f22:	46c0      	nop			; (mov r8, r8)
 8007f24:	20000470 	.word	0x20000470

08007f28 <__sread>:
 8007f28:	b570      	push	{r4, r5, r6, lr}
 8007f2a:	000c      	movs	r4, r1
 8007f2c:	250e      	movs	r5, #14
 8007f2e:	5f49      	ldrsh	r1, [r1, r5]
 8007f30:	f000 f8ec 	bl	800810c <_read_r>
 8007f34:	2800      	cmp	r0, #0
 8007f36:	db03      	blt.n	8007f40 <__sread+0x18>
 8007f38:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007f3a:	181b      	adds	r3, r3, r0
 8007f3c:	6563      	str	r3, [r4, #84]	; 0x54
 8007f3e:	bd70      	pop	{r4, r5, r6, pc}
 8007f40:	89a3      	ldrh	r3, [r4, #12]
 8007f42:	4a02      	ldr	r2, [pc, #8]	; (8007f4c <__sread+0x24>)
 8007f44:	4013      	ands	r3, r2
 8007f46:	81a3      	strh	r3, [r4, #12]
 8007f48:	e7f9      	b.n	8007f3e <__sread+0x16>
 8007f4a:	46c0      	nop			; (mov r8, r8)
 8007f4c:	ffffefff 	.word	0xffffefff

08007f50 <__swrite>:
 8007f50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f52:	001f      	movs	r7, r3
 8007f54:	898b      	ldrh	r3, [r1, #12]
 8007f56:	0005      	movs	r5, r0
 8007f58:	000c      	movs	r4, r1
 8007f5a:	0016      	movs	r6, r2
 8007f5c:	05db      	lsls	r3, r3, #23
 8007f5e:	d505      	bpl.n	8007f6c <__swrite+0x1c>
 8007f60:	230e      	movs	r3, #14
 8007f62:	5ec9      	ldrsh	r1, [r1, r3]
 8007f64:	2200      	movs	r2, #0
 8007f66:	2302      	movs	r3, #2
 8007f68:	f000 f880 	bl	800806c <_lseek_r>
 8007f6c:	89a3      	ldrh	r3, [r4, #12]
 8007f6e:	4a05      	ldr	r2, [pc, #20]	; (8007f84 <__swrite+0x34>)
 8007f70:	0028      	movs	r0, r5
 8007f72:	4013      	ands	r3, r2
 8007f74:	81a3      	strh	r3, [r4, #12]
 8007f76:	0032      	movs	r2, r6
 8007f78:	230e      	movs	r3, #14
 8007f7a:	5ee1      	ldrsh	r1, [r4, r3]
 8007f7c:	003b      	movs	r3, r7
 8007f7e:	f000 f82b 	bl	8007fd8 <_write_r>
 8007f82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007f84:	ffffefff 	.word	0xffffefff

08007f88 <__sseek>:
 8007f88:	b570      	push	{r4, r5, r6, lr}
 8007f8a:	000c      	movs	r4, r1
 8007f8c:	250e      	movs	r5, #14
 8007f8e:	5f49      	ldrsh	r1, [r1, r5]
 8007f90:	f000 f86c 	bl	800806c <_lseek_r>
 8007f94:	89a3      	ldrh	r3, [r4, #12]
 8007f96:	1c42      	adds	r2, r0, #1
 8007f98:	d103      	bne.n	8007fa2 <__sseek+0x1a>
 8007f9a:	4a05      	ldr	r2, [pc, #20]	; (8007fb0 <__sseek+0x28>)
 8007f9c:	4013      	ands	r3, r2
 8007f9e:	81a3      	strh	r3, [r4, #12]
 8007fa0:	bd70      	pop	{r4, r5, r6, pc}
 8007fa2:	2280      	movs	r2, #128	; 0x80
 8007fa4:	0152      	lsls	r2, r2, #5
 8007fa6:	4313      	orrs	r3, r2
 8007fa8:	81a3      	strh	r3, [r4, #12]
 8007faa:	6560      	str	r0, [r4, #84]	; 0x54
 8007fac:	e7f8      	b.n	8007fa0 <__sseek+0x18>
 8007fae:	46c0      	nop			; (mov r8, r8)
 8007fb0:	ffffefff 	.word	0xffffefff

08007fb4 <__sclose>:
 8007fb4:	b510      	push	{r4, lr}
 8007fb6:	230e      	movs	r3, #14
 8007fb8:	5ec9      	ldrsh	r1, [r1, r3]
 8007fba:	f000 f821 	bl	8008000 <_close_r>
 8007fbe:	bd10      	pop	{r4, pc}

08007fc0 <__ascii_wctomb>:
 8007fc0:	1e0b      	subs	r3, r1, #0
 8007fc2:	d004      	beq.n	8007fce <__ascii_wctomb+0xe>
 8007fc4:	2aff      	cmp	r2, #255	; 0xff
 8007fc6:	d904      	bls.n	8007fd2 <__ascii_wctomb+0x12>
 8007fc8:	238a      	movs	r3, #138	; 0x8a
 8007fca:	6003      	str	r3, [r0, #0]
 8007fcc:	3b8b      	subs	r3, #139	; 0x8b
 8007fce:	0018      	movs	r0, r3
 8007fd0:	4770      	bx	lr
 8007fd2:	700a      	strb	r2, [r1, #0]
 8007fd4:	2301      	movs	r3, #1
 8007fd6:	e7fa      	b.n	8007fce <__ascii_wctomb+0xe>

08007fd8 <_write_r>:
 8007fd8:	b570      	push	{r4, r5, r6, lr}
 8007fda:	0005      	movs	r5, r0
 8007fdc:	0008      	movs	r0, r1
 8007fde:	0011      	movs	r1, r2
 8007fe0:	2200      	movs	r2, #0
 8007fe2:	4c06      	ldr	r4, [pc, #24]	; (8007ffc <_write_r+0x24>)
 8007fe4:	6022      	str	r2, [r4, #0]
 8007fe6:	001a      	movs	r2, r3
 8007fe8:	f000 f95d 	bl	80082a6 <_write>
 8007fec:	1c43      	adds	r3, r0, #1
 8007fee:	d103      	bne.n	8007ff8 <_write_r+0x20>
 8007ff0:	6823      	ldr	r3, [r4, #0]
 8007ff2:	2b00      	cmp	r3, #0
 8007ff4:	d000      	beq.n	8007ff8 <_write_r+0x20>
 8007ff6:	602b      	str	r3, [r5, #0]
 8007ff8:	bd70      	pop	{r4, r5, r6, pc}
 8007ffa:	46c0      	nop			; (mov r8, r8)
 8007ffc:	20000470 	.word	0x20000470

08008000 <_close_r>:
 8008000:	2300      	movs	r3, #0
 8008002:	b570      	push	{r4, r5, r6, lr}
 8008004:	4c06      	ldr	r4, [pc, #24]	; (8008020 <_close_r+0x20>)
 8008006:	0005      	movs	r5, r0
 8008008:	0008      	movs	r0, r1
 800800a:	6023      	str	r3, [r4, #0]
 800800c:	f000 f976 	bl	80082fc <_close>
 8008010:	1c43      	adds	r3, r0, #1
 8008012:	d103      	bne.n	800801c <_close_r+0x1c>
 8008014:	6823      	ldr	r3, [r4, #0]
 8008016:	2b00      	cmp	r3, #0
 8008018:	d000      	beq.n	800801c <_close_r+0x1c>
 800801a:	602b      	str	r3, [r5, #0]
 800801c:	bd70      	pop	{r4, r5, r6, pc}
 800801e:	46c0      	nop			; (mov r8, r8)
 8008020:	20000470 	.word	0x20000470

08008024 <_fstat_r>:
 8008024:	2300      	movs	r3, #0
 8008026:	b570      	push	{r4, r5, r6, lr}
 8008028:	4c06      	ldr	r4, [pc, #24]	; (8008044 <_fstat_r+0x20>)
 800802a:	0005      	movs	r5, r0
 800802c:	0008      	movs	r0, r1
 800802e:	0011      	movs	r1, r2
 8008030:	6023      	str	r3, [r4, #0]
 8008032:	f000 f9ab 	bl	800838c <_fstat>
 8008036:	1c43      	adds	r3, r0, #1
 8008038:	d103      	bne.n	8008042 <_fstat_r+0x1e>
 800803a:	6823      	ldr	r3, [r4, #0]
 800803c:	2b00      	cmp	r3, #0
 800803e:	d000      	beq.n	8008042 <_fstat_r+0x1e>
 8008040:	602b      	str	r3, [r5, #0]
 8008042:	bd70      	pop	{r4, r5, r6, pc}
 8008044:	20000470 	.word	0x20000470

08008048 <_isatty_r>:
 8008048:	2300      	movs	r3, #0
 800804a:	b570      	push	{r4, r5, r6, lr}
 800804c:	4c06      	ldr	r4, [pc, #24]	; (8008068 <_isatty_r+0x20>)
 800804e:	0005      	movs	r5, r0
 8008050:	0008      	movs	r0, r1
 8008052:	6023      	str	r3, [r4, #0]
 8008054:	f000 fafa 	bl	800864c <_isatty>
 8008058:	1c43      	adds	r3, r0, #1
 800805a:	d103      	bne.n	8008064 <_isatty_r+0x1c>
 800805c:	6823      	ldr	r3, [r4, #0]
 800805e:	2b00      	cmp	r3, #0
 8008060:	d000      	beq.n	8008064 <_isatty_r+0x1c>
 8008062:	602b      	str	r3, [r5, #0]
 8008064:	bd70      	pop	{r4, r5, r6, pc}
 8008066:	46c0      	nop			; (mov r8, r8)
 8008068:	20000470 	.word	0x20000470

0800806c <_lseek_r>:
 800806c:	b570      	push	{r4, r5, r6, lr}
 800806e:	0005      	movs	r5, r0
 8008070:	0008      	movs	r0, r1
 8008072:	0011      	movs	r1, r2
 8008074:	2200      	movs	r2, #0
 8008076:	4c06      	ldr	r4, [pc, #24]	; (8008090 <_lseek_r+0x24>)
 8008078:	6022      	str	r2, [r4, #0]
 800807a:	001a      	movs	r2, r3
 800807c:	f000 f8ff 	bl	800827e <_lseek>
 8008080:	1c43      	adds	r3, r0, #1
 8008082:	d103      	bne.n	800808c <_lseek_r+0x20>
 8008084:	6823      	ldr	r3, [r4, #0]
 8008086:	2b00      	cmp	r3, #0
 8008088:	d000      	beq.n	800808c <_lseek_r+0x20>
 800808a:	602b      	str	r3, [r5, #0]
 800808c:	bd70      	pop	{r4, r5, r6, pc}
 800808e:	46c0      	nop			; (mov r8, r8)
 8008090:	20000470 	.word	0x20000470

08008094 <memmove>:
 8008094:	b510      	push	{r4, lr}
 8008096:	4288      	cmp	r0, r1
 8008098:	d902      	bls.n	80080a0 <memmove+0xc>
 800809a:	188b      	adds	r3, r1, r2
 800809c:	4298      	cmp	r0, r3
 800809e:	d303      	bcc.n	80080a8 <memmove+0x14>
 80080a0:	2300      	movs	r3, #0
 80080a2:	e007      	b.n	80080b4 <memmove+0x20>
 80080a4:	5c8b      	ldrb	r3, [r1, r2]
 80080a6:	5483      	strb	r3, [r0, r2]
 80080a8:	3a01      	subs	r2, #1
 80080aa:	d2fb      	bcs.n	80080a4 <memmove+0x10>
 80080ac:	bd10      	pop	{r4, pc}
 80080ae:	5ccc      	ldrb	r4, [r1, r3]
 80080b0:	54c4      	strb	r4, [r0, r3]
 80080b2:	3301      	adds	r3, #1
 80080b4:	429a      	cmp	r2, r3
 80080b6:	d1fa      	bne.n	80080ae <memmove+0x1a>
 80080b8:	e7f8      	b.n	80080ac <memmove+0x18>

080080ba <__malloc_lock>:
 80080ba:	4770      	bx	lr

080080bc <__malloc_unlock>:
 80080bc:	4770      	bx	lr

080080be <_realloc_r>:
 80080be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80080c0:	0007      	movs	r7, r0
 80080c2:	000d      	movs	r5, r1
 80080c4:	0016      	movs	r6, r2
 80080c6:	2900      	cmp	r1, #0
 80080c8:	d105      	bne.n	80080d6 <_realloc_r+0x18>
 80080ca:	0011      	movs	r1, r2
 80080cc:	f7ff fc1e 	bl	800790c <_malloc_r>
 80080d0:	0004      	movs	r4, r0
 80080d2:	0020      	movs	r0, r4
 80080d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80080d6:	2a00      	cmp	r2, #0
 80080d8:	d103      	bne.n	80080e2 <_realloc_r+0x24>
 80080da:	f7ff fbcd 	bl	8007878 <_free_r>
 80080de:	0034      	movs	r4, r6
 80080e0:	e7f7      	b.n	80080d2 <_realloc_r+0x14>
 80080e2:	f000 f827 	bl	8008134 <_malloc_usable_size_r>
 80080e6:	002c      	movs	r4, r5
 80080e8:	42b0      	cmp	r0, r6
 80080ea:	d2f2      	bcs.n	80080d2 <_realloc_r+0x14>
 80080ec:	0031      	movs	r1, r6
 80080ee:	0038      	movs	r0, r7
 80080f0:	f7ff fc0c 	bl	800790c <_malloc_r>
 80080f4:	1e04      	subs	r4, r0, #0
 80080f6:	d0ec      	beq.n	80080d2 <_realloc_r+0x14>
 80080f8:	0029      	movs	r1, r5
 80080fa:	0032      	movs	r2, r6
 80080fc:	f7ff f8bf 	bl	800727e <memcpy>
 8008100:	0029      	movs	r1, r5
 8008102:	0038      	movs	r0, r7
 8008104:	f7ff fbb8 	bl	8007878 <_free_r>
 8008108:	e7e3      	b.n	80080d2 <_realloc_r+0x14>
	...

0800810c <_read_r>:
 800810c:	b570      	push	{r4, r5, r6, lr}
 800810e:	0005      	movs	r5, r0
 8008110:	0008      	movs	r0, r1
 8008112:	0011      	movs	r1, r2
 8008114:	2200      	movs	r2, #0
 8008116:	4c06      	ldr	r4, [pc, #24]	; (8008130 <_read_r+0x24>)
 8008118:	6022      	str	r2, [r4, #0]
 800811a:	001a      	movs	r2, r3
 800811c:	f000 f85a 	bl	80081d4 <_read>
 8008120:	1c43      	adds	r3, r0, #1
 8008122:	d103      	bne.n	800812c <_read_r+0x20>
 8008124:	6823      	ldr	r3, [r4, #0]
 8008126:	2b00      	cmp	r3, #0
 8008128:	d000      	beq.n	800812c <_read_r+0x20>
 800812a:	602b      	str	r3, [r5, #0]
 800812c:	bd70      	pop	{r4, r5, r6, pc}
 800812e:	46c0      	nop			; (mov r8, r8)
 8008130:	20000470 	.word	0x20000470

08008134 <_malloc_usable_size_r>:
 8008134:	1f0b      	subs	r3, r1, #4
 8008136:	681b      	ldr	r3, [r3, #0]
 8008138:	1f18      	subs	r0, r3, #4
 800813a:	2b00      	cmp	r3, #0
 800813c:	da01      	bge.n	8008142 <_malloc_usable_size_r+0xe>
 800813e:	580b      	ldr	r3, [r1, r0]
 8008140:	18c0      	adds	r0, r0, r3
 8008142:	4770      	bx	lr

08008144 <findslot>:
 8008144:	4b0a      	ldr	r3, [pc, #40]	; (8008170 <findslot+0x2c>)
 8008146:	b510      	push	{r4, lr}
 8008148:	0004      	movs	r4, r0
 800814a:	6818      	ldr	r0, [r3, #0]
 800814c:	2800      	cmp	r0, #0
 800814e:	d004      	beq.n	800815a <findslot+0x16>
 8008150:	6983      	ldr	r3, [r0, #24]
 8008152:	2b00      	cmp	r3, #0
 8008154:	d101      	bne.n	800815a <findslot+0x16>
 8008156:	f7fe ff5d 	bl	8007014 <__sinit>
 800815a:	2000      	movs	r0, #0
 800815c:	2c13      	cmp	r4, #19
 800815e:	d805      	bhi.n	800816c <findslot+0x28>
 8008160:	4b04      	ldr	r3, [pc, #16]	; (8008174 <findslot+0x30>)
 8008162:	00e4      	lsls	r4, r4, #3
 8008164:	58e2      	ldr	r2, [r4, r3]
 8008166:	3201      	adds	r2, #1
 8008168:	d000      	beq.n	800816c <findslot+0x28>
 800816a:	18e0      	adds	r0, r4, r3
 800816c:	bd10      	pop	{r4, pc}
 800816e:	46c0      	nop			; (mov r8, r8)
 8008170:	20000018 	.word	0x20000018
 8008174:	200003d0 	.word	0x200003d0

08008178 <checkerror>:
 8008178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800817a:	0005      	movs	r5, r0
 800817c:	1c43      	adds	r3, r0, #1
 800817e:	d109      	bne.n	8008194 <checkerror+0x1c>
 8008180:	f7fd f946 	bl	8005410 <__errno>
 8008184:	2413      	movs	r4, #19
 8008186:	0006      	movs	r6, r0
 8008188:	2700      	movs	r7, #0
 800818a:	1c20      	adds	r0, r4, #0
 800818c:	1c39      	adds	r1, r7, #0
 800818e:	beab      	bkpt	0x00ab
 8008190:	1c04      	adds	r4, r0, #0
 8008192:	6034      	str	r4, [r6, #0]
 8008194:	0028      	movs	r0, r5
 8008196:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008198 <error>:
 8008198:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800819a:	0005      	movs	r5, r0
 800819c:	f7fd f938 	bl	8005410 <__errno>
 80081a0:	2413      	movs	r4, #19
 80081a2:	0006      	movs	r6, r0
 80081a4:	2700      	movs	r7, #0
 80081a6:	1c20      	adds	r0, r4, #0
 80081a8:	1c39      	adds	r1, r7, #0
 80081aa:	beab      	bkpt	0x00ab
 80081ac:	1c04      	adds	r4, r0, #0
 80081ae:	0028      	movs	r0, r5
 80081b0:	6034      	str	r4, [r6, #0]
 80081b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080081b4 <_swiread>:
 80081b4:	b530      	push	{r4, r5, lr}
 80081b6:	b085      	sub	sp, #20
 80081b8:	ad01      	add	r5, sp, #4
 80081ba:	9001      	str	r0, [sp, #4]
 80081bc:	9102      	str	r1, [sp, #8]
 80081be:	9203      	str	r2, [sp, #12]
 80081c0:	2406      	movs	r4, #6
 80081c2:	1c20      	adds	r0, r4, #0
 80081c4:	1c29      	adds	r1, r5, #0
 80081c6:	beab      	bkpt	0x00ab
 80081c8:	1c04      	adds	r4, r0, #0
 80081ca:	0020      	movs	r0, r4
 80081cc:	f7ff ffd4 	bl	8008178 <checkerror>
 80081d0:	b005      	add	sp, #20
 80081d2:	bd30      	pop	{r4, r5, pc}

080081d4 <_read>:
 80081d4:	b570      	push	{r4, r5, r6, lr}
 80081d6:	000e      	movs	r6, r1
 80081d8:	0015      	movs	r5, r2
 80081da:	f7ff ffb3 	bl	8008144 <findslot>
 80081de:	1e04      	subs	r4, r0, #0
 80081e0:	d106      	bne.n	80081f0 <_read+0x1c>
 80081e2:	f7fd f915 	bl	8005410 <__errno>
 80081e6:	2309      	movs	r3, #9
 80081e8:	6003      	str	r3, [r0, #0]
 80081ea:	2001      	movs	r0, #1
 80081ec:	4240      	negs	r0, r0
 80081ee:	bd70      	pop	{r4, r5, r6, pc}
 80081f0:	002a      	movs	r2, r5
 80081f2:	0031      	movs	r1, r6
 80081f4:	6800      	ldr	r0, [r0, #0]
 80081f6:	f7ff ffdd 	bl	80081b4 <_swiread>
 80081fa:	1c43      	adds	r3, r0, #1
 80081fc:	d0f7      	beq.n	80081ee <_read+0x1a>
 80081fe:	6863      	ldr	r3, [r4, #4]
 8008200:	1a28      	subs	r0, r5, r0
 8008202:	181b      	adds	r3, r3, r0
 8008204:	6063      	str	r3, [r4, #4]
 8008206:	e7f2      	b.n	80081ee <_read+0x1a>

08008208 <_swilseek>:
 8008208:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800820a:	000c      	movs	r4, r1
 800820c:	0016      	movs	r6, r2
 800820e:	f7ff ff99 	bl	8008144 <findslot>
 8008212:	1e05      	subs	r5, r0, #0
 8008214:	d107      	bne.n	8008226 <_swilseek+0x1e>
 8008216:	f7fd f8fb 	bl	8005410 <__errno>
 800821a:	2309      	movs	r3, #9
 800821c:	6003      	str	r3, [r0, #0]
 800821e:	2401      	movs	r4, #1
 8008220:	4264      	negs	r4, r4
 8008222:	0020      	movs	r0, r4
 8008224:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008226:	2e02      	cmp	r6, #2
 8008228:	d903      	bls.n	8008232 <_swilseek+0x2a>
 800822a:	f7fd f8f1 	bl	8005410 <__errno>
 800822e:	2316      	movs	r3, #22
 8008230:	e7f4      	b.n	800821c <_swilseek+0x14>
 8008232:	2e01      	cmp	r6, #1
 8008234:	d112      	bne.n	800825c <_swilseek+0x54>
 8008236:	6843      	ldr	r3, [r0, #4]
 8008238:	18e4      	adds	r4, r4, r3
 800823a:	d4f6      	bmi.n	800822a <_swilseek+0x22>
 800823c:	466f      	mov	r7, sp
 800823e:	682b      	ldr	r3, [r5, #0]
 8008240:	260a      	movs	r6, #10
 8008242:	9300      	str	r3, [sp, #0]
 8008244:	607c      	str	r4, [r7, #4]
 8008246:	1c30      	adds	r0, r6, #0
 8008248:	1c39      	adds	r1, r7, #0
 800824a:	beab      	bkpt	0x00ab
 800824c:	1c06      	adds	r6, r0, #0
 800824e:	0030      	movs	r0, r6
 8008250:	f7ff ff92 	bl	8008178 <checkerror>
 8008254:	2800      	cmp	r0, #0
 8008256:	dbe2      	blt.n	800821e <_swilseek+0x16>
 8008258:	606c      	str	r4, [r5, #4]
 800825a:	e7e2      	b.n	8008222 <_swilseek+0x1a>
 800825c:	2e02      	cmp	r6, #2
 800825e:	d1ed      	bne.n	800823c <_swilseek+0x34>
 8008260:	6803      	ldr	r3, [r0, #0]
 8008262:	466f      	mov	r7, sp
 8008264:	9300      	str	r3, [sp, #0]
 8008266:	360a      	adds	r6, #10
 8008268:	1c30      	adds	r0, r6, #0
 800826a:	1c39      	adds	r1, r7, #0
 800826c:	beab      	bkpt	0x00ab
 800826e:	1c06      	adds	r6, r0, #0
 8008270:	0030      	movs	r0, r6
 8008272:	f7ff ff81 	bl	8008178 <checkerror>
 8008276:	1824      	adds	r4, r4, r0
 8008278:	1c43      	adds	r3, r0, #1
 800827a:	d1df      	bne.n	800823c <_swilseek+0x34>
 800827c:	e7cf      	b.n	800821e <_swilseek+0x16>

0800827e <_lseek>:
 800827e:	b510      	push	{r4, lr}
 8008280:	f7ff ffc2 	bl	8008208 <_swilseek>
 8008284:	bd10      	pop	{r4, pc}

08008286 <_swiwrite>:
 8008286:	b530      	push	{r4, r5, lr}
 8008288:	b085      	sub	sp, #20
 800828a:	ad01      	add	r5, sp, #4
 800828c:	9001      	str	r0, [sp, #4]
 800828e:	9102      	str	r1, [sp, #8]
 8008290:	9203      	str	r2, [sp, #12]
 8008292:	2405      	movs	r4, #5
 8008294:	1c20      	adds	r0, r4, #0
 8008296:	1c29      	adds	r1, r5, #0
 8008298:	beab      	bkpt	0x00ab
 800829a:	1c04      	adds	r4, r0, #0
 800829c:	0020      	movs	r0, r4
 800829e:	f7ff ff6b 	bl	8008178 <checkerror>
 80082a2:	b005      	add	sp, #20
 80082a4:	bd30      	pop	{r4, r5, pc}

080082a6 <_write>:
 80082a6:	b570      	push	{r4, r5, r6, lr}
 80082a8:	000e      	movs	r6, r1
 80082aa:	0015      	movs	r5, r2
 80082ac:	f7ff ff4a 	bl	8008144 <findslot>
 80082b0:	1e04      	subs	r4, r0, #0
 80082b2:	d106      	bne.n	80082c2 <_write+0x1c>
 80082b4:	f7fd f8ac 	bl	8005410 <__errno>
 80082b8:	2309      	movs	r3, #9
 80082ba:	6003      	str	r3, [r0, #0]
 80082bc:	2001      	movs	r0, #1
 80082be:	4240      	negs	r0, r0
 80082c0:	e00f      	b.n	80082e2 <_write+0x3c>
 80082c2:	002a      	movs	r2, r5
 80082c4:	0031      	movs	r1, r6
 80082c6:	6800      	ldr	r0, [r0, #0]
 80082c8:	f7ff ffdd 	bl	8008286 <_swiwrite>
 80082cc:	1e02      	subs	r2, r0, #0
 80082ce:	dbf5      	blt.n	80082bc <_write+0x16>
 80082d0:	6863      	ldr	r3, [r4, #4]
 80082d2:	1a28      	subs	r0, r5, r0
 80082d4:	1819      	adds	r1, r3, r0
 80082d6:	6061      	str	r1, [r4, #4]
 80082d8:	42aa      	cmp	r2, r5
 80082da:	d102      	bne.n	80082e2 <_write+0x3c>
 80082dc:	2000      	movs	r0, #0
 80082de:	f7ff ff5b 	bl	8008198 <error>
 80082e2:	bd70      	pop	{r4, r5, r6, pc}

080082e4 <_swiclose>:
 80082e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80082e6:	2402      	movs	r4, #2
 80082e8:	9001      	str	r0, [sp, #4]
 80082ea:	ad01      	add	r5, sp, #4
 80082ec:	1c20      	adds	r0, r4, #0
 80082ee:	1c29      	adds	r1, r5, #0
 80082f0:	beab      	bkpt	0x00ab
 80082f2:	1c04      	adds	r4, r0, #0
 80082f4:	0020      	movs	r0, r4
 80082f6:	f7ff ff3f 	bl	8008178 <checkerror>
 80082fa:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080082fc <_close>:
 80082fc:	b570      	push	{r4, r5, r6, lr}
 80082fe:	0005      	movs	r5, r0
 8008300:	f7ff ff20 	bl	8008144 <findslot>
 8008304:	1e04      	subs	r4, r0, #0
 8008306:	d106      	bne.n	8008316 <_close+0x1a>
 8008308:	f7fd f882 	bl	8005410 <__errno>
 800830c:	2309      	movs	r3, #9
 800830e:	6003      	str	r3, [r0, #0]
 8008310:	2001      	movs	r0, #1
 8008312:	4240      	negs	r0, r0
 8008314:	bd70      	pop	{r4, r5, r6, pc}
 8008316:	3d01      	subs	r5, #1
 8008318:	2d01      	cmp	r5, #1
 800831a:	d809      	bhi.n	8008330 <_close+0x34>
 800831c:	4b09      	ldr	r3, [pc, #36]	; (8008344 <_close+0x48>)
 800831e:	689a      	ldr	r2, [r3, #8]
 8008320:	691b      	ldr	r3, [r3, #16]
 8008322:	429a      	cmp	r2, r3
 8008324:	d104      	bne.n	8008330 <_close+0x34>
 8008326:	2301      	movs	r3, #1
 8008328:	425b      	negs	r3, r3
 800832a:	6003      	str	r3, [r0, #0]
 800832c:	2000      	movs	r0, #0
 800832e:	e7f1      	b.n	8008314 <_close+0x18>
 8008330:	6820      	ldr	r0, [r4, #0]
 8008332:	f7ff ffd7 	bl	80082e4 <_swiclose>
 8008336:	2800      	cmp	r0, #0
 8008338:	d1ec      	bne.n	8008314 <_close+0x18>
 800833a:	2301      	movs	r3, #1
 800833c:	425b      	negs	r3, r3
 800833e:	6023      	str	r3, [r4, #0]
 8008340:	e7e8      	b.n	8008314 <_close+0x18>
 8008342:	46c0      	nop			; (mov r8, r8)
 8008344:	200003d0 	.word	0x200003d0

08008348 <_swistat>:
 8008348:	b570      	push	{r4, r5, r6, lr}
 800834a:	000c      	movs	r4, r1
 800834c:	f7ff fefa 	bl	8008144 <findslot>
 8008350:	1e06      	subs	r6, r0, #0
 8008352:	d106      	bne.n	8008362 <_swistat+0x1a>
 8008354:	f7fd f85c 	bl	8005410 <__errno>
 8008358:	2309      	movs	r3, #9
 800835a:	6003      	str	r3, [r0, #0]
 800835c:	2001      	movs	r0, #1
 800835e:	4240      	negs	r0, r0
 8008360:	bd70      	pop	{r4, r5, r6, pc}
 8008362:	2380      	movs	r3, #128	; 0x80
 8008364:	6862      	ldr	r2, [r4, #4]
 8008366:	019b      	lsls	r3, r3, #6
 8008368:	4313      	orrs	r3, r2
 800836a:	6063      	str	r3, [r4, #4]
 800836c:	2380      	movs	r3, #128	; 0x80
 800836e:	00db      	lsls	r3, r3, #3
 8008370:	6463      	str	r3, [r4, #68]	; 0x44
 8008372:	250c      	movs	r5, #12
 8008374:	1c28      	adds	r0, r5, #0
 8008376:	1c31      	adds	r1, r6, #0
 8008378:	beab      	bkpt	0x00ab
 800837a:	1c05      	adds	r5, r0, #0
 800837c:	0028      	movs	r0, r5
 800837e:	f7ff fefb 	bl	8008178 <checkerror>
 8008382:	1c43      	adds	r3, r0, #1
 8008384:	d0ec      	beq.n	8008360 <_swistat+0x18>
 8008386:	6120      	str	r0, [r4, #16]
 8008388:	2000      	movs	r0, #0
 800838a:	e7e9      	b.n	8008360 <_swistat+0x18>

0800838c <_fstat>:
 800838c:	b570      	push	{r4, r5, r6, lr}
 800838e:	000c      	movs	r4, r1
 8008390:	0005      	movs	r5, r0
 8008392:	2258      	movs	r2, #88	; 0x58
 8008394:	2100      	movs	r1, #0
 8008396:	0020      	movs	r0, r4
 8008398:	f7fd f864 	bl	8005464 <memset>
 800839c:	0028      	movs	r0, r5
 800839e:	0021      	movs	r1, r4
 80083a0:	f7ff ffd2 	bl	8008348 <_swistat>
 80083a4:	bd70      	pop	{r4, r5, r6, pc}

080083a6 <_stat>:
 80083a6:	b570      	push	{r4, r5, r6, lr}
 80083a8:	000d      	movs	r5, r1
 80083aa:	0004      	movs	r4, r0
 80083ac:	2258      	movs	r2, #88	; 0x58
 80083ae:	2100      	movs	r1, #0
 80083b0:	0028      	movs	r0, r5
 80083b2:	f7fd f857 	bl	8005464 <memset>
 80083b6:	0020      	movs	r0, r4
 80083b8:	2100      	movs	r1, #0
 80083ba:	f000 f813 	bl	80083e4 <_swiopen>
 80083be:	0004      	movs	r4, r0
 80083c0:	1c43      	adds	r3, r0, #1
 80083c2:	d00c      	beq.n	80083de <_stat+0x38>
 80083c4:	2381      	movs	r3, #129	; 0x81
 80083c6:	686a      	ldr	r2, [r5, #4]
 80083c8:	021b      	lsls	r3, r3, #8
 80083ca:	4313      	orrs	r3, r2
 80083cc:	606b      	str	r3, [r5, #4]
 80083ce:	0029      	movs	r1, r5
 80083d0:	f7ff ffba 	bl	8008348 <_swistat>
 80083d4:	0005      	movs	r5, r0
 80083d6:	0020      	movs	r0, r4
 80083d8:	f7ff ff90 	bl	80082fc <_close>
 80083dc:	002c      	movs	r4, r5
 80083de:	0020      	movs	r0, r4
 80083e0:	bd70      	pop	{r4, r5, r6, pc}
	...

080083e4 <_swiopen>:
 80083e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80083e6:	000d      	movs	r5, r1
 80083e8:	2700      	movs	r7, #0
 80083ea:	b099      	sub	sp, #100	; 0x64
 80083ec:	9000      	str	r0, [sp, #0]
 80083ee:	00fb      	lsls	r3, r7, #3
 80083f0:	9301      	str	r3, [sp, #4]
 80083f2:	4b29      	ldr	r3, [pc, #164]	; (8008498 <_swiopen+0xb4>)
 80083f4:	00fa      	lsls	r2, r7, #3
 80083f6:	589c      	ldr	r4, [r3, r2]
 80083f8:	1c63      	adds	r3, r4, #1
 80083fa:	d038      	beq.n	800846e <_swiopen+0x8a>
 80083fc:	3701      	adds	r7, #1
 80083fe:	2f14      	cmp	r7, #20
 8008400:	d1f5      	bne.n	80083ee <_swiopen+0xa>
 8008402:	f7fd f805 	bl	8005410 <__errno>
 8008406:	2401      	movs	r4, #1
 8008408:	2318      	movs	r3, #24
 800840a:	4264      	negs	r4, r4
 800840c:	6003      	str	r3, [r0, #0]
 800840e:	e03f      	b.n	8008490 <_swiopen+0xac>
 8008410:	2302      	movs	r3, #2
 8008412:	03ec      	lsls	r4, r5, #15
 8008414:	0fe4      	lsrs	r4, r4, #31
 8008416:	421d      	tst	r5, r3
 8008418:	d000      	beq.n	800841c <_swiopen+0x38>
 800841a:	431c      	orrs	r4, r3
 800841c:	4b1f      	ldr	r3, [pc, #124]	; (800849c <_swiopen+0xb8>)
 800841e:	421d      	tst	r5, r3
 8008420:	d001      	beq.n	8008426 <_swiopen+0x42>
 8008422:	2304      	movs	r3, #4
 8008424:	431c      	orrs	r4, r3
 8008426:	2308      	movs	r3, #8
 8008428:	421d      	tst	r5, r3
 800842a:	d002      	beq.n	8008432 <_swiopen+0x4e>
 800842c:	2204      	movs	r2, #4
 800842e:	4394      	bics	r4, r2
 8008430:	431c      	orrs	r4, r3
 8008432:	9b00      	ldr	r3, [sp, #0]
 8008434:	0018      	movs	r0, r3
 8008436:	9302      	str	r3, [sp, #8]
 8008438:	f7f7 fe66 	bl	8000108 <strlen>
 800843c:	6074      	str	r4, [r6, #4]
 800843e:	60b0      	str	r0, [r6, #8]
 8008440:	2401      	movs	r4, #1
 8008442:	1c20      	adds	r0, r4, #0
 8008444:	1c31      	adds	r1, r6, #0
 8008446:	beab      	bkpt	0x00ab
 8008448:	1c06      	adds	r6, r0, #0
 800844a:	2e00      	cmp	r6, #0
 800844c:	db0a      	blt.n	8008464 <_swiopen+0x80>
 800844e:	4b12      	ldr	r3, [pc, #72]	; (8008498 <_swiopen+0xb4>)
 8008450:	00fa      	lsls	r2, r7, #3
 8008452:	509e      	str	r6, [r3, r2]
 8008454:	0013      	movs	r3, r2
 8008456:	4a10      	ldr	r2, [pc, #64]	; (8008498 <_swiopen+0xb4>)
 8008458:	003c      	movs	r4, r7
 800845a:	4694      	mov	ip, r2
 800845c:	2200      	movs	r2, #0
 800845e:	4463      	add	r3, ip
 8008460:	605a      	str	r2, [r3, #4]
 8008462:	e015      	b.n	8008490 <_swiopen+0xac>
 8008464:	0030      	movs	r0, r6
 8008466:	f7ff fe97 	bl	8008198 <error>
 800846a:	0004      	movs	r4, r0
 800846c:	e010      	b.n	8008490 <_swiopen+0xac>
 800846e:	23a0      	movs	r3, #160	; 0xa0
 8008470:	002a      	movs	r2, r5
 8008472:	011b      	lsls	r3, r3, #4
 8008474:	401a      	ands	r2, r3
 8008476:	ae02      	add	r6, sp, #8
 8008478:	429a      	cmp	r2, r3
 800847a:	d1c9      	bne.n	8008410 <_swiopen+0x2c>
 800847c:	0031      	movs	r1, r6
 800847e:	9800      	ldr	r0, [sp, #0]
 8008480:	f7ff ff91 	bl	80083a6 <_stat>
 8008484:	1c43      	adds	r3, r0, #1
 8008486:	d0c3      	beq.n	8008410 <_swiopen+0x2c>
 8008488:	f7fc ffc2 	bl	8005410 <__errno>
 800848c:	2311      	movs	r3, #17
 800848e:	6003      	str	r3, [r0, #0]
 8008490:	0020      	movs	r0, r4
 8008492:	b019      	add	sp, #100	; 0x64
 8008494:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008496:	46c0      	nop			; (mov r8, r8)
 8008498:	200003d0 	.word	0x200003d0
 800849c:	00000601 	.word	0x00000601

080084a0 <_get_semihosting_exts>:
 80084a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80084a2:	b085      	sub	sp, #20
 80084a4:	9000      	str	r0, [sp, #0]
 80084a6:	9101      	str	r1, [sp, #4]
 80084a8:	4827      	ldr	r0, [pc, #156]	; (8008548 <_get_semihosting_exts+0xa8>)
 80084aa:	2100      	movs	r1, #0
 80084ac:	0015      	movs	r5, r2
 80084ae:	f7ff ff99 	bl	80083e4 <_swiopen>
 80084b2:	0004      	movs	r4, r0
 80084b4:	002a      	movs	r2, r5
 80084b6:	2100      	movs	r1, #0
 80084b8:	9800      	ldr	r0, [sp, #0]
 80084ba:	f7fc ffd3 	bl	8005464 <memset>
 80084be:	1c63      	adds	r3, r4, #1
 80084c0:	d015      	beq.n	80084ee <_get_semihosting_exts+0x4e>
 80084c2:	0020      	movs	r0, r4
 80084c4:	f7ff fe3e 	bl	8008144 <findslot>
 80084c8:	260c      	movs	r6, #12
 80084ca:	0007      	movs	r7, r0
 80084cc:	1c30      	adds	r0, r6, #0
 80084ce:	1c39      	adds	r1, r7, #0
 80084d0:	beab      	bkpt	0x00ab
 80084d2:	1c06      	adds	r6, r0, #0
 80084d4:	0030      	movs	r0, r6
 80084d6:	f7ff fe4f 	bl	8008178 <checkerror>
 80084da:	2803      	cmp	r0, #3
 80084dc:	dd02      	ble.n	80084e4 <_get_semihosting_exts+0x44>
 80084de:	3803      	subs	r0, #3
 80084e0:	42a8      	cmp	r0, r5
 80084e2:	dc07      	bgt.n	80084f4 <_get_semihosting_exts+0x54>
 80084e4:	0020      	movs	r0, r4
 80084e6:	2401      	movs	r4, #1
 80084e8:	f7ff ff08 	bl	80082fc <_close>
 80084ec:	4264      	negs	r4, r4
 80084ee:	0020      	movs	r0, r4
 80084f0:	b005      	add	sp, #20
 80084f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80084f4:	ae03      	add	r6, sp, #12
 80084f6:	2204      	movs	r2, #4
 80084f8:	0031      	movs	r1, r6
 80084fa:	0020      	movs	r0, r4
 80084fc:	f7ff fe6a 	bl	80081d4 <_read>
 8008500:	2803      	cmp	r0, #3
 8008502:	ddef      	ble.n	80084e4 <_get_semihosting_exts+0x44>
 8008504:	7833      	ldrb	r3, [r6, #0]
 8008506:	2b53      	cmp	r3, #83	; 0x53
 8008508:	d1ec      	bne.n	80084e4 <_get_semihosting_exts+0x44>
 800850a:	7873      	ldrb	r3, [r6, #1]
 800850c:	2b48      	cmp	r3, #72	; 0x48
 800850e:	d1e9      	bne.n	80084e4 <_get_semihosting_exts+0x44>
 8008510:	78b3      	ldrb	r3, [r6, #2]
 8008512:	2b46      	cmp	r3, #70	; 0x46
 8008514:	d1e6      	bne.n	80084e4 <_get_semihosting_exts+0x44>
 8008516:	78f3      	ldrb	r3, [r6, #3]
 8008518:	2b42      	cmp	r3, #66	; 0x42
 800851a:	d1e3      	bne.n	80084e4 <_get_semihosting_exts+0x44>
 800851c:	2201      	movs	r2, #1
 800851e:	9901      	ldr	r1, [sp, #4]
 8008520:	0020      	movs	r0, r4
 8008522:	f7ff fe71 	bl	8008208 <_swilseek>
 8008526:	2800      	cmp	r0, #0
 8008528:	dbdc      	blt.n	80084e4 <_get_semihosting_exts+0x44>
 800852a:	002a      	movs	r2, r5
 800852c:	9900      	ldr	r1, [sp, #0]
 800852e:	0020      	movs	r0, r4
 8008530:	f7ff fe50 	bl	80081d4 <_read>
 8008534:	0005      	movs	r5, r0
 8008536:	0020      	movs	r0, r4
 8008538:	f7ff fee0 	bl	80082fc <_close>
 800853c:	0028      	movs	r0, r5
 800853e:	f7ff fe1b 	bl	8008178 <checkerror>
 8008542:	0004      	movs	r4, r0
 8008544:	e7d3      	b.n	80084ee <_get_semihosting_exts+0x4e>
 8008546:	46c0      	nop			; (mov r8, r8)
 8008548:	080098b6 	.word	0x080098b6

0800854c <initialise_semihosting_exts>:
 800854c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800854e:	2401      	movs	r4, #1
 8008550:	2100      	movs	r1, #0
 8008552:	4e09      	ldr	r6, [pc, #36]	; (8008578 <initialise_semihosting_exts+0x2c>)
 8008554:	4d09      	ldr	r5, [pc, #36]	; (800857c <initialise_semihosting_exts+0x30>)
 8008556:	af01      	add	r7, sp, #4
 8008558:	0022      	movs	r2, r4
 800855a:	0038      	movs	r0, r7
 800855c:	6031      	str	r1, [r6, #0]
 800855e:	602c      	str	r4, [r5, #0]
 8008560:	f7ff ff9e 	bl	80084a0 <_get_semihosting_exts>
 8008564:	2800      	cmp	r0, #0
 8008566:	dd05      	ble.n	8008574 <initialise_semihosting_exts+0x28>
 8008568:	2202      	movs	r2, #2
 800856a:	783b      	ldrb	r3, [r7, #0]
 800856c:	401c      	ands	r4, r3
 800856e:	4013      	ands	r3, r2
 8008570:	6034      	str	r4, [r6, #0]
 8008572:	602b      	str	r3, [r5, #0]
 8008574:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8008576:	46c0      	nop			; (mov r8, r8)
 8008578:	200001e8 	.word	0x200001e8
 800857c:	200001ec 	.word	0x200001ec

08008580 <_has_ext_stdout_stderr>:
 8008580:	b510      	push	{r4, lr}
 8008582:	4c04      	ldr	r4, [pc, #16]	; (8008594 <_has_ext_stdout_stderr+0x14>)
 8008584:	6823      	ldr	r3, [r4, #0]
 8008586:	2b00      	cmp	r3, #0
 8008588:	da01      	bge.n	800858e <_has_ext_stdout_stderr+0xe>
 800858a:	f7ff ffdf 	bl	800854c <initialise_semihosting_exts>
 800858e:	6820      	ldr	r0, [r4, #0]
 8008590:	bd10      	pop	{r4, pc}
 8008592:	46c0      	nop			; (mov r8, r8)
 8008594:	200001ec 	.word	0x200001ec

08008598 <initialise_monitor_handles>:
 8008598:	b5f0      	push	{r4, r5, r6, r7, lr}
 800859a:	4b27      	ldr	r3, [pc, #156]	; (8008638 <initialise_monitor_handles+0xa0>)
 800859c:	b085      	sub	sp, #20
 800859e:	9301      	str	r3, [sp, #4]
 80085a0:	2500      	movs	r5, #0
 80085a2:	2303      	movs	r3, #3
 80085a4:	ac01      	add	r4, sp, #4
 80085a6:	60a3      	str	r3, [r4, #8]
 80085a8:	2701      	movs	r7, #1
 80085aa:	6065      	str	r5, [r4, #4]
 80085ac:	1c38      	adds	r0, r7, #0
 80085ae:	1c21      	adds	r1, r4, #0
 80085b0:	beab      	bkpt	0x00ab
 80085b2:	1c07      	adds	r7, r0, #0
 80085b4:	2101      	movs	r1, #1
 80085b6:	4b21      	ldr	r3, [pc, #132]	; (800863c <initialise_monitor_handles+0xa4>)
 80085b8:	4249      	negs	r1, r1
 80085ba:	601f      	str	r7, [r3, #0]
 80085bc:	002b      	movs	r3, r5
 80085be:	4d20      	ldr	r5, [pc, #128]	; (8008640 <initialise_monitor_handles+0xa8>)
 80085c0:	00da      	lsls	r2, r3, #3
 80085c2:	3301      	adds	r3, #1
 80085c4:	50a9      	str	r1, [r5, r2]
 80085c6:	2b14      	cmp	r3, #20
 80085c8:	d1fa      	bne.n	80085c0 <initialise_monitor_handles+0x28>
 80085ca:	f7ff ffd9 	bl	8008580 <_has_ext_stdout_stderr>
 80085ce:	2800      	cmp	r0, #0
 80085d0:	d018      	beq.n	8008604 <initialise_monitor_handles+0x6c>
 80085d2:	4b19      	ldr	r3, [pc, #100]	; (8008638 <initialise_monitor_handles+0xa0>)
 80085d4:	2701      	movs	r7, #1
 80085d6:	9301      	str	r3, [sp, #4]
 80085d8:	2303      	movs	r3, #3
 80085da:	60a3      	str	r3, [r4, #8]
 80085dc:	3301      	adds	r3, #1
 80085de:	6063      	str	r3, [r4, #4]
 80085e0:	1c38      	adds	r0, r7, #0
 80085e2:	1c21      	adds	r1, r4, #0
 80085e4:	beab      	bkpt	0x00ab
 80085e6:	1c06      	adds	r6, r0, #0
 80085e8:	4b16      	ldr	r3, [pc, #88]	; (8008644 <initialise_monitor_handles+0xac>)
 80085ea:	4a13      	ldr	r2, [pc, #76]	; (8008638 <initialise_monitor_handles+0xa0>)
 80085ec:	601e      	str	r6, [r3, #0]
 80085ee:	2303      	movs	r3, #3
 80085f0:	9201      	str	r2, [sp, #4]
 80085f2:	60a3      	str	r3, [r4, #8]
 80085f4:	3305      	adds	r3, #5
 80085f6:	6063      	str	r3, [r4, #4]
 80085f8:	1c38      	adds	r0, r7, #0
 80085fa:	1c21      	adds	r1, r4, #0
 80085fc:	beab      	bkpt	0x00ab
 80085fe:	1c04      	adds	r4, r0, #0
 8008600:	4b11      	ldr	r3, [pc, #68]	; (8008648 <initialise_monitor_handles+0xb0>)
 8008602:	601c      	str	r4, [r3, #0]
 8008604:	4f10      	ldr	r7, [pc, #64]	; (8008648 <initialise_monitor_handles+0xb0>)
 8008606:	683b      	ldr	r3, [r7, #0]
 8008608:	3301      	adds	r3, #1
 800860a:	d102      	bne.n	8008612 <initialise_monitor_handles+0x7a>
 800860c:	4b0d      	ldr	r3, [pc, #52]	; (8008644 <initialise_monitor_handles+0xac>)
 800860e:	681b      	ldr	r3, [r3, #0]
 8008610:	603b      	str	r3, [r7, #0]
 8008612:	2400      	movs	r4, #0
 8008614:	4b09      	ldr	r3, [pc, #36]	; (800863c <initialise_monitor_handles+0xa4>)
 8008616:	606c      	str	r4, [r5, #4]
 8008618:	681b      	ldr	r3, [r3, #0]
 800861a:	602b      	str	r3, [r5, #0]
 800861c:	f7ff ffb0 	bl	8008580 <_has_ext_stdout_stderr>
 8008620:	42a0      	cmp	r0, r4
 8008622:	d006      	beq.n	8008632 <initialise_monitor_handles+0x9a>
 8008624:	4b07      	ldr	r3, [pc, #28]	; (8008644 <initialise_monitor_handles+0xac>)
 8008626:	60ec      	str	r4, [r5, #12]
 8008628:	681b      	ldr	r3, [r3, #0]
 800862a:	616c      	str	r4, [r5, #20]
 800862c:	60ab      	str	r3, [r5, #8]
 800862e:	683b      	ldr	r3, [r7, #0]
 8008630:	612b      	str	r3, [r5, #16]
 8008632:	b005      	add	sp, #20
 8008634:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008636:	46c0      	nop			; (mov r8, r8)
 8008638:	080098cc 	.word	0x080098cc
 800863c:	200003c8 	.word	0x200003c8
 8008640:	200003d0 	.word	0x200003d0
 8008644:	200003cc 	.word	0x200003cc
 8008648:	200003c4 	.word	0x200003c4

0800864c <_isatty>:
 800864c:	b570      	push	{r4, r5, r6, lr}
 800864e:	f7ff fd79 	bl	8008144 <findslot>
 8008652:	2509      	movs	r5, #9
 8008654:	1e04      	subs	r4, r0, #0
 8008656:	d104      	bne.n	8008662 <_isatty+0x16>
 8008658:	f7fc feda 	bl	8005410 <__errno>
 800865c:	6005      	str	r5, [r0, #0]
 800865e:	0020      	movs	r0, r4
 8008660:	bd70      	pop	{r4, r5, r6, pc}
 8008662:	1c28      	adds	r0, r5, #0
 8008664:	1c21      	adds	r1, r4, #0
 8008666:	beab      	bkpt	0x00ab
 8008668:	1c04      	adds	r4, r0, #0
 800866a:	0020      	movs	r0, r4
 800866c:	2c01      	cmp	r4, #1
 800866e:	d0f7      	beq.n	8008660 <_isatty+0x14>
 8008670:	f7fc fece 	bl	8005410 <__errno>
 8008674:	2400      	movs	r4, #0
 8008676:	0006      	movs	r6, r0
 8008678:	2513      	movs	r5, #19
 800867a:	1c28      	adds	r0, r5, #0
 800867c:	1c21      	adds	r1, r4, #0
 800867e:	beab      	bkpt	0x00ab
 8008680:	1c05      	adds	r5, r0, #0
 8008682:	6035      	str	r5, [r6, #0]
 8008684:	e7eb      	b.n	800865e <_isatty+0x12>
	...

08008688 <floorf>:
 8008688:	b570      	push	{r4, r5, r6, lr}
 800868a:	0045      	lsls	r5, r0, #1
 800868c:	086e      	lsrs	r6, r5, #1
 800868e:	0e2d      	lsrs	r5, r5, #24
 8008690:	3d7f      	subs	r5, #127	; 0x7f
 8008692:	0004      	movs	r4, r0
 8008694:	2d16      	cmp	r5, #22
 8008696:	dc24      	bgt.n	80086e2 <floorf+0x5a>
 8008698:	2d00      	cmp	r5, #0
 800869a:	da0e      	bge.n	80086ba <floorf+0x32>
 800869c:	4915      	ldr	r1, [pc, #84]	; (80086f4 <floorf+0x6c>)
 800869e:	f7f7 ff51 	bl	8000544 <__aeabi_fadd>
 80086a2:	2100      	movs	r1, #0
 80086a4:	f7f7 ff1c 	bl	80004e0 <__aeabi_fcmpgt>
 80086a8:	2800      	cmp	r0, #0
 80086aa:	d004      	beq.n	80086b6 <floorf+0x2e>
 80086ac:	2c00      	cmp	r4, #0
 80086ae:	da1f      	bge.n	80086f0 <floorf+0x68>
 80086b0:	2e00      	cmp	r6, #0
 80086b2:	d000      	beq.n	80086b6 <floorf+0x2e>
 80086b4:	4c10      	ldr	r4, [pc, #64]	; (80086f8 <floorf+0x70>)
 80086b6:	1c20      	adds	r0, r4, #0
 80086b8:	e019      	b.n	80086ee <floorf+0x66>
 80086ba:	4e10      	ldr	r6, [pc, #64]	; (80086fc <floorf+0x74>)
 80086bc:	412e      	asrs	r6, r5
 80086be:	4206      	tst	r6, r0
 80086c0:	d015      	beq.n	80086ee <floorf+0x66>
 80086c2:	490c      	ldr	r1, [pc, #48]	; (80086f4 <floorf+0x6c>)
 80086c4:	f7f7 ff3e 	bl	8000544 <__aeabi_fadd>
 80086c8:	2100      	movs	r1, #0
 80086ca:	f7f7 ff09 	bl	80004e0 <__aeabi_fcmpgt>
 80086ce:	2800      	cmp	r0, #0
 80086d0:	d0f1      	beq.n	80086b6 <floorf+0x2e>
 80086d2:	2c00      	cmp	r4, #0
 80086d4:	da03      	bge.n	80086de <floorf+0x56>
 80086d6:	2380      	movs	r3, #128	; 0x80
 80086d8:	041b      	lsls	r3, r3, #16
 80086da:	412b      	asrs	r3, r5
 80086dc:	18e4      	adds	r4, r4, r3
 80086de:	43b4      	bics	r4, r6
 80086e0:	e7e9      	b.n	80086b6 <floorf+0x2e>
 80086e2:	4b07      	ldr	r3, [pc, #28]	; (8008700 <floorf+0x78>)
 80086e4:	429e      	cmp	r6, r3
 80086e6:	d902      	bls.n	80086ee <floorf+0x66>
 80086e8:	1c01      	adds	r1, r0, #0
 80086ea:	f7f7 ff2b 	bl	8000544 <__aeabi_fadd>
 80086ee:	bd70      	pop	{r4, r5, r6, pc}
 80086f0:	2400      	movs	r4, #0
 80086f2:	e7e0      	b.n	80086b6 <floorf+0x2e>
 80086f4:	7149f2ca 	.word	0x7149f2ca
 80086f8:	bf800000 	.word	0xbf800000
 80086fc:	007fffff 	.word	0x007fffff
 8008700:	7f7fffff 	.word	0x7f7fffff

08008704 <_init>:
 8008704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008706:	46c0      	nop			; (mov r8, r8)
 8008708:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800870a:	bc08      	pop	{r3}
 800870c:	469e      	mov	lr, r3
 800870e:	4770      	bx	lr

08008710 <_fini>:
 8008710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008712:	46c0      	nop			; (mov r8, r8)
 8008714:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008716:	bc08      	pop	{r3}
 8008718:	469e      	mov	lr, r3
 800871a:	4770      	bx	lr
