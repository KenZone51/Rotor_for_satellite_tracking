
RotorControlSTM32_CAN_Home_RTC_Semihosting.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000ace4  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000157c  0800ada8  0800ada8  0001ada8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800c324  0800c324  00020258  2**0
                  CONTENTS
  4 .ARM          00000008  0800c324  0800c324  0001c324  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800c32c  0800c32c  00020258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800c32c  0800c32c  0001c32c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800c330  0800c330  0001c330  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000258  20000000  0800c334  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002ac  20000258  0800c58c  00020258  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000504  0800c58c  00020504  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020258  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002340  00000000  00000000  00020280  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000050d  00000000  00000000  000225c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000128  00000000  00000000  00022ad0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000100  00000000  00000000  00022bf8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000e0da  00000000  00000000  00022cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001133  00000000  00000000  00030dd2  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0004629e  00000000  00000000  00031f05  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000781a3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000020c0  00000000  00000000  00078220  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000258 	.word	0x20000258
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800ad8c 	.word	0x0800ad8c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	2000025c 	.word	0x2000025c
 8000104:	0800ad8c 	.word	0x0800ad8c

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr

08000116 <strcmp>:
 8000116:	7802      	ldrb	r2, [r0, #0]
 8000118:	780b      	ldrb	r3, [r1, #0]
 800011a:	2a00      	cmp	r2, #0
 800011c:	d003      	beq.n	8000126 <strcmp+0x10>
 800011e:	3001      	adds	r0, #1
 8000120:	3101      	adds	r1, #1
 8000122:	429a      	cmp	r2, r3
 8000124:	d0f7      	beq.n	8000116 <strcmp>
 8000126:	1ad0      	subs	r0, r2, r3
 8000128:	4770      	bx	lr
	...

0800012c <__gnu_thumb1_case_uqi>:
 800012c:	b402      	push	{r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0049      	lsls	r1, r1, #1
 8000134:	5c09      	ldrb	r1, [r1, r0]
 8000136:	0049      	lsls	r1, r1, #1
 8000138:	448e      	add	lr, r1
 800013a:	bc02      	pop	{r1}
 800013c:	4770      	bx	lr
 800013e:	46c0      	nop			; (mov r8, r8)

08000140 <__gnu_thumb1_case_uhi>:
 8000140:	b403      	push	{r0, r1}
 8000142:	4671      	mov	r1, lr
 8000144:	0849      	lsrs	r1, r1, #1
 8000146:	0040      	lsls	r0, r0, #1
 8000148:	0049      	lsls	r1, r1, #1
 800014a:	5a09      	ldrh	r1, [r1, r0]
 800014c:	0049      	lsls	r1, r1, #1
 800014e:	448e      	add	lr, r1
 8000150:	bc03      	pop	{r0, r1}
 8000152:	4770      	bx	lr

08000154 <__udivsi3>:
 8000154:	2200      	movs	r2, #0
 8000156:	0843      	lsrs	r3, r0, #1
 8000158:	428b      	cmp	r3, r1
 800015a:	d374      	bcc.n	8000246 <__udivsi3+0xf2>
 800015c:	0903      	lsrs	r3, r0, #4
 800015e:	428b      	cmp	r3, r1
 8000160:	d35f      	bcc.n	8000222 <__udivsi3+0xce>
 8000162:	0a03      	lsrs	r3, r0, #8
 8000164:	428b      	cmp	r3, r1
 8000166:	d344      	bcc.n	80001f2 <__udivsi3+0x9e>
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d328      	bcc.n	80001c0 <__udivsi3+0x6c>
 800016e:	0c03      	lsrs	r3, r0, #16
 8000170:	428b      	cmp	r3, r1
 8000172:	d30d      	bcc.n	8000190 <__udivsi3+0x3c>
 8000174:	22ff      	movs	r2, #255	; 0xff
 8000176:	0209      	lsls	r1, r1, #8
 8000178:	ba12      	rev	r2, r2
 800017a:	0c03      	lsrs	r3, r0, #16
 800017c:	428b      	cmp	r3, r1
 800017e:	d302      	bcc.n	8000186 <__udivsi3+0x32>
 8000180:	1212      	asrs	r2, r2, #8
 8000182:	0209      	lsls	r1, r1, #8
 8000184:	d065      	beq.n	8000252 <__udivsi3+0xfe>
 8000186:	0b03      	lsrs	r3, r0, #12
 8000188:	428b      	cmp	r3, r1
 800018a:	d319      	bcc.n	80001c0 <__udivsi3+0x6c>
 800018c:	e000      	b.n	8000190 <__udivsi3+0x3c>
 800018e:	0a09      	lsrs	r1, r1, #8
 8000190:	0bc3      	lsrs	r3, r0, #15
 8000192:	428b      	cmp	r3, r1
 8000194:	d301      	bcc.n	800019a <__udivsi3+0x46>
 8000196:	03cb      	lsls	r3, r1, #15
 8000198:	1ac0      	subs	r0, r0, r3
 800019a:	4152      	adcs	r2, r2
 800019c:	0b83      	lsrs	r3, r0, #14
 800019e:	428b      	cmp	r3, r1
 80001a0:	d301      	bcc.n	80001a6 <__udivsi3+0x52>
 80001a2:	038b      	lsls	r3, r1, #14
 80001a4:	1ac0      	subs	r0, r0, r3
 80001a6:	4152      	adcs	r2, r2
 80001a8:	0b43      	lsrs	r3, r0, #13
 80001aa:	428b      	cmp	r3, r1
 80001ac:	d301      	bcc.n	80001b2 <__udivsi3+0x5e>
 80001ae:	034b      	lsls	r3, r1, #13
 80001b0:	1ac0      	subs	r0, r0, r3
 80001b2:	4152      	adcs	r2, r2
 80001b4:	0b03      	lsrs	r3, r0, #12
 80001b6:	428b      	cmp	r3, r1
 80001b8:	d301      	bcc.n	80001be <__udivsi3+0x6a>
 80001ba:	030b      	lsls	r3, r1, #12
 80001bc:	1ac0      	subs	r0, r0, r3
 80001be:	4152      	adcs	r2, r2
 80001c0:	0ac3      	lsrs	r3, r0, #11
 80001c2:	428b      	cmp	r3, r1
 80001c4:	d301      	bcc.n	80001ca <__udivsi3+0x76>
 80001c6:	02cb      	lsls	r3, r1, #11
 80001c8:	1ac0      	subs	r0, r0, r3
 80001ca:	4152      	adcs	r2, r2
 80001cc:	0a83      	lsrs	r3, r0, #10
 80001ce:	428b      	cmp	r3, r1
 80001d0:	d301      	bcc.n	80001d6 <__udivsi3+0x82>
 80001d2:	028b      	lsls	r3, r1, #10
 80001d4:	1ac0      	subs	r0, r0, r3
 80001d6:	4152      	adcs	r2, r2
 80001d8:	0a43      	lsrs	r3, r0, #9
 80001da:	428b      	cmp	r3, r1
 80001dc:	d301      	bcc.n	80001e2 <__udivsi3+0x8e>
 80001de:	024b      	lsls	r3, r1, #9
 80001e0:	1ac0      	subs	r0, r0, r3
 80001e2:	4152      	adcs	r2, r2
 80001e4:	0a03      	lsrs	r3, r0, #8
 80001e6:	428b      	cmp	r3, r1
 80001e8:	d301      	bcc.n	80001ee <__udivsi3+0x9a>
 80001ea:	020b      	lsls	r3, r1, #8
 80001ec:	1ac0      	subs	r0, r0, r3
 80001ee:	4152      	adcs	r2, r2
 80001f0:	d2cd      	bcs.n	800018e <__udivsi3+0x3a>
 80001f2:	09c3      	lsrs	r3, r0, #7
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d301      	bcc.n	80001fc <__udivsi3+0xa8>
 80001f8:	01cb      	lsls	r3, r1, #7
 80001fa:	1ac0      	subs	r0, r0, r3
 80001fc:	4152      	adcs	r2, r2
 80001fe:	0983      	lsrs	r3, r0, #6
 8000200:	428b      	cmp	r3, r1
 8000202:	d301      	bcc.n	8000208 <__udivsi3+0xb4>
 8000204:	018b      	lsls	r3, r1, #6
 8000206:	1ac0      	subs	r0, r0, r3
 8000208:	4152      	adcs	r2, r2
 800020a:	0943      	lsrs	r3, r0, #5
 800020c:	428b      	cmp	r3, r1
 800020e:	d301      	bcc.n	8000214 <__udivsi3+0xc0>
 8000210:	014b      	lsls	r3, r1, #5
 8000212:	1ac0      	subs	r0, r0, r3
 8000214:	4152      	adcs	r2, r2
 8000216:	0903      	lsrs	r3, r0, #4
 8000218:	428b      	cmp	r3, r1
 800021a:	d301      	bcc.n	8000220 <__udivsi3+0xcc>
 800021c:	010b      	lsls	r3, r1, #4
 800021e:	1ac0      	subs	r0, r0, r3
 8000220:	4152      	adcs	r2, r2
 8000222:	08c3      	lsrs	r3, r0, #3
 8000224:	428b      	cmp	r3, r1
 8000226:	d301      	bcc.n	800022c <__udivsi3+0xd8>
 8000228:	00cb      	lsls	r3, r1, #3
 800022a:	1ac0      	subs	r0, r0, r3
 800022c:	4152      	adcs	r2, r2
 800022e:	0883      	lsrs	r3, r0, #2
 8000230:	428b      	cmp	r3, r1
 8000232:	d301      	bcc.n	8000238 <__udivsi3+0xe4>
 8000234:	008b      	lsls	r3, r1, #2
 8000236:	1ac0      	subs	r0, r0, r3
 8000238:	4152      	adcs	r2, r2
 800023a:	0843      	lsrs	r3, r0, #1
 800023c:	428b      	cmp	r3, r1
 800023e:	d301      	bcc.n	8000244 <__udivsi3+0xf0>
 8000240:	004b      	lsls	r3, r1, #1
 8000242:	1ac0      	subs	r0, r0, r3
 8000244:	4152      	adcs	r2, r2
 8000246:	1a41      	subs	r1, r0, r1
 8000248:	d200      	bcs.n	800024c <__udivsi3+0xf8>
 800024a:	4601      	mov	r1, r0
 800024c:	4152      	adcs	r2, r2
 800024e:	4610      	mov	r0, r2
 8000250:	4770      	bx	lr
 8000252:	e7ff      	b.n	8000254 <__udivsi3+0x100>
 8000254:	b501      	push	{r0, lr}
 8000256:	2000      	movs	r0, #0
 8000258:	f000 f8f0 	bl	800043c <__aeabi_idiv0>
 800025c:	bd02      	pop	{r1, pc}
 800025e:	46c0      	nop			; (mov r8, r8)

08000260 <__aeabi_uidivmod>:
 8000260:	2900      	cmp	r1, #0
 8000262:	d0f7      	beq.n	8000254 <__udivsi3+0x100>
 8000264:	e776      	b.n	8000154 <__udivsi3>
 8000266:	4770      	bx	lr

08000268 <__divsi3>:
 8000268:	4603      	mov	r3, r0
 800026a:	430b      	orrs	r3, r1
 800026c:	d47f      	bmi.n	800036e <__divsi3+0x106>
 800026e:	2200      	movs	r2, #0
 8000270:	0843      	lsrs	r3, r0, #1
 8000272:	428b      	cmp	r3, r1
 8000274:	d374      	bcc.n	8000360 <__divsi3+0xf8>
 8000276:	0903      	lsrs	r3, r0, #4
 8000278:	428b      	cmp	r3, r1
 800027a:	d35f      	bcc.n	800033c <__divsi3+0xd4>
 800027c:	0a03      	lsrs	r3, r0, #8
 800027e:	428b      	cmp	r3, r1
 8000280:	d344      	bcc.n	800030c <__divsi3+0xa4>
 8000282:	0b03      	lsrs	r3, r0, #12
 8000284:	428b      	cmp	r3, r1
 8000286:	d328      	bcc.n	80002da <__divsi3+0x72>
 8000288:	0c03      	lsrs	r3, r0, #16
 800028a:	428b      	cmp	r3, r1
 800028c:	d30d      	bcc.n	80002aa <__divsi3+0x42>
 800028e:	22ff      	movs	r2, #255	; 0xff
 8000290:	0209      	lsls	r1, r1, #8
 8000292:	ba12      	rev	r2, r2
 8000294:	0c03      	lsrs	r3, r0, #16
 8000296:	428b      	cmp	r3, r1
 8000298:	d302      	bcc.n	80002a0 <__divsi3+0x38>
 800029a:	1212      	asrs	r2, r2, #8
 800029c:	0209      	lsls	r1, r1, #8
 800029e:	d065      	beq.n	800036c <__divsi3+0x104>
 80002a0:	0b03      	lsrs	r3, r0, #12
 80002a2:	428b      	cmp	r3, r1
 80002a4:	d319      	bcc.n	80002da <__divsi3+0x72>
 80002a6:	e000      	b.n	80002aa <__divsi3+0x42>
 80002a8:	0a09      	lsrs	r1, r1, #8
 80002aa:	0bc3      	lsrs	r3, r0, #15
 80002ac:	428b      	cmp	r3, r1
 80002ae:	d301      	bcc.n	80002b4 <__divsi3+0x4c>
 80002b0:	03cb      	lsls	r3, r1, #15
 80002b2:	1ac0      	subs	r0, r0, r3
 80002b4:	4152      	adcs	r2, r2
 80002b6:	0b83      	lsrs	r3, r0, #14
 80002b8:	428b      	cmp	r3, r1
 80002ba:	d301      	bcc.n	80002c0 <__divsi3+0x58>
 80002bc:	038b      	lsls	r3, r1, #14
 80002be:	1ac0      	subs	r0, r0, r3
 80002c0:	4152      	adcs	r2, r2
 80002c2:	0b43      	lsrs	r3, r0, #13
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d301      	bcc.n	80002cc <__divsi3+0x64>
 80002c8:	034b      	lsls	r3, r1, #13
 80002ca:	1ac0      	subs	r0, r0, r3
 80002cc:	4152      	adcs	r2, r2
 80002ce:	0b03      	lsrs	r3, r0, #12
 80002d0:	428b      	cmp	r3, r1
 80002d2:	d301      	bcc.n	80002d8 <__divsi3+0x70>
 80002d4:	030b      	lsls	r3, r1, #12
 80002d6:	1ac0      	subs	r0, r0, r3
 80002d8:	4152      	adcs	r2, r2
 80002da:	0ac3      	lsrs	r3, r0, #11
 80002dc:	428b      	cmp	r3, r1
 80002de:	d301      	bcc.n	80002e4 <__divsi3+0x7c>
 80002e0:	02cb      	lsls	r3, r1, #11
 80002e2:	1ac0      	subs	r0, r0, r3
 80002e4:	4152      	adcs	r2, r2
 80002e6:	0a83      	lsrs	r3, r0, #10
 80002e8:	428b      	cmp	r3, r1
 80002ea:	d301      	bcc.n	80002f0 <__divsi3+0x88>
 80002ec:	028b      	lsls	r3, r1, #10
 80002ee:	1ac0      	subs	r0, r0, r3
 80002f0:	4152      	adcs	r2, r2
 80002f2:	0a43      	lsrs	r3, r0, #9
 80002f4:	428b      	cmp	r3, r1
 80002f6:	d301      	bcc.n	80002fc <__divsi3+0x94>
 80002f8:	024b      	lsls	r3, r1, #9
 80002fa:	1ac0      	subs	r0, r0, r3
 80002fc:	4152      	adcs	r2, r2
 80002fe:	0a03      	lsrs	r3, r0, #8
 8000300:	428b      	cmp	r3, r1
 8000302:	d301      	bcc.n	8000308 <__divsi3+0xa0>
 8000304:	020b      	lsls	r3, r1, #8
 8000306:	1ac0      	subs	r0, r0, r3
 8000308:	4152      	adcs	r2, r2
 800030a:	d2cd      	bcs.n	80002a8 <__divsi3+0x40>
 800030c:	09c3      	lsrs	r3, r0, #7
 800030e:	428b      	cmp	r3, r1
 8000310:	d301      	bcc.n	8000316 <__divsi3+0xae>
 8000312:	01cb      	lsls	r3, r1, #7
 8000314:	1ac0      	subs	r0, r0, r3
 8000316:	4152      	adcs	r2, r2
 8000318:	0983      	lsrs	r3, r0, #6
 800031a:	428b      	cmp	r3, r1
 800031c:	d301      	bcc.n	8000322 <__divsi3+0xba>
 800031e:	018b      	lsls	r3, r1, #6
 8000320:	1ac0      	subs	r0, r0, r3
 8000322:	4152      	adcs	r2, r2
 8000324:	0943      	lsrs	r3, r0, #5
 8000326:	428b      	cmp	r3, r1
 8000328:	d301      	bcc.n	800032e <__divsi3+0xc6>
 800032a:	014b      	lsls	r3, r1, #5
 800032c:	1ac0      	subs	r0, r0, r3
 800032e:	4152      	adcs	r2, r2
 8000330:	0903      	lsrs	r3, r0, #4
 8000332:	428b      	cmp	r3, r1
 8000334:	d301      	bcc.n	800033a <__divsi3+0xd2>
 8000336:	010b      	lsls	r3, r1, #4
 8000338:	1ac0      	subs	r0, r0, r3
 800033a:	4152      	adcs	r2, r2
 800033c:	08c3      	lsrs	r3, r0, #3
 800033e:	428b      	cmp	r3, r1
 8000340:	d301      	bcc.n	8000346 <__divsi3+0xde>
 8000342:	00cb      	lsls	r3, r1, #3
 8000344:	1ac0      	subs	r0, r0, r3
 8000346:	4152      	adcs	r2, r2
 8000348:	0883      	lsrs	r3, r0, #2
 800034a:	428b      	cmp	r3, r1
 800034c:	d301      	bcc.n	8000352 <__divsi3+0xea>
 800034e:	008b      	lsls	r3, r1, #2
 8000350:	1ac0      	subs	r0, r0, r3
 8000352:	4152      	adcs	r2, r2
 8000354:	0843      	lsrs	r3, r0, #1
 8000356:	428b      	cmp	r3, r1
 8000358:	d301      	bcc.n	800035e <__divsi3+0xf6>
 800035a:	004b      	lsls	r3, r1, #1
 800035c:	1ac0      	subs	r0, r0, r3
 800035e:	4152      	adcs	r2, r2
 8000360:	1a41      	subs	r1, r0, r1
 8000362:	d200      	bcs.n	8000366 <__divsi3+0xfe>
 8000364:	4601      	mov	r1, r0
 8000366:	4152      	adcs	r2, r2
 8000368:	4610      	mov	r0, r2
 800036a:	4770      	bx	lr
 800036c:	e05d      	b.n	800042a <__divsi3+0x1c2>
 800036e:	0fca      	lsrs	r2, r1, #31
 8000370:	d000      	beq.n	8000374 <__divsi3+0x10c>
 8000372:	4249      	negs	r1, r1
 8000374:	1003      	asrs	r3, r0, #32
 8000376:	d300      	bcc.n	800037a <__divsi3+0x112>
 8000378:	4240      	negs	r0, r0
 800037a:	4053      	eors	r3, r2
 800037c:	2200      	movs	r2, #0
 800037e:	469c      	mov	ip, r3
 8000380:	0903      	lsrs	r3, r0, #4
 8000382:	428b      	cmp	r3, r1
 8000384:	d32d      	bcc.n	80003e2 <__divsi3+0x17a>
 8000386:	0a03      	lsrs	r3, r0, #8
 8000388:	428b      	cmp	r3, r1
 800038a:	d312      	bcc.n	80003b2 <__divsi3+0x14a>
 800038c:	22fc      	movs	r2, #252	; 0xfc
 800038e:	0189      	lsls	r1, r1, #6
 8000390:	ba12      	rev	r2, r2
 8000392:	0a03      	lsrs	r3, r0, #8
 8000394:	428b      	cmp	r3, r1
 8000396:	d30c      	bcc.n	80003b2 <__divsi3+0x14a>
 8000398:	0189      	lsls	r1, r1, #6
 800039a:	1192      	asrs	r2, r2, #6
 800039c:	428b      	cmp	r3, r1
 800039e:	d308      	bcc.n	80003b2 <__divsi3+0x14a>
 80003a0:	0189      	lsls	r1, r1, #6
 80003a2:	1192      	asrs	r2, r2, #6
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d304      	bcc.n	80003b2 <__divsi3+0x14a>
 80003a8:	0189      	lsls	r1, r1, #6
 80003aa:	d03a      	beq.n	8000422 <__divsi3+0x1ba>
 80003ac:	1192      	asrs	r2, r2, #6
 80003ae:	e000      	b.n	80003b2 <__divsi3+0x14a>
 80003b0:	0989      	lsrs	r1, r1, #6
 80003b2:	09c3      	lsrs	r3, r0, #7
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d301      	bcc.n	80003bc <__divsi3+0x154>
 80003b8:	01cb      	lsls	r3, r1, #7
 80003ba:	1ac0      	subs	r0, r0, r3
 80003bc:	4152      	adcs	r2, r2
 80003be:	0983      	lsrs	r3, r0, #6
 80003c0:	428b      	cmp	r3, r1
 80003c2:	d301      	bcc.n	80003c8 <__divsi3+0x160>
 80003c4:	018b      	lsls	r3, r1, #6
 80003c6:	1ac0      	subs	r0, r0, r3
 80003c8:	4152      	adcs	r2, r2
 80003ca:	0943      	lsrs	r3, r0, #5
 80003cc:	428b      	cmp	r3, r1
 80003ce:	d301      	bcc.n	80003d4 <__divsi3+0x16c>
 80003d0:	014b      	lsls	r3, r1, #5
 80003d2:	1ac0      	subs	r0, r0, r3
 80003d4:	4152      	adcs	r2, r2
 80003d6:	0903      	lsrs	r3, r0, #4
 80003d8:	428b      	cmp	r3, r1
 80003da:	d301      	bcc.n	80003e0 <__divsi3+0x178>
 80003dc:	010b      	lsls	r3, r1, #4
 80003de:	1ac0      	subs	r0, r0, r3
 80003e0:	4152      	adcs	r2, r2
 80003e2:	08c3      	lsrs	r3, r0, #3
 80003e4:	428b      	cmp	r3, r1
 80003e6:	d301      	bcc.n	80003ec <__divsi3+0x184>
 80003e8:	00cb      	lsls	r3, r1, #3
 80003ea:	1ac0      	subs	r0, r0, r3
 80003ec:	4152      	adcs	r2, r2
 80003ee:	0883      	lsrs	r3, r0, #2
 80003f0:	428b      	cmp	r3, r1
 80003f2:	d301      	bcc.n	80003f8 <__divsi3+0x190>
 80003f4:	008b      	lsls	r3, r1, #2
 80003f6:	1ac0      	subs	r0, r0, r3
 80003f8:	4152      	adcs	r2, r2
 80003fa:	d2d9      	bcs.n	80003b0 <__divsi3+0x148>
 80003fc:	0843      	lsrs	r3, r0, #1
 80003fe:	428b      	cmp	r3, r1
 8000400:	d301      	bcc.n	8000406 <__divsi3+0x19e>
 8000402:	004b      	lsls	r3, r1, #1
 8000404:	1ac0      	subs	r0, r0, r3
 8000406:	4152      	adcs	r2, r2
 8000408:	1a41      	subs	r1, r0, r1
 800040a:	d200      	bcs.n	800040e <__divsi3+0x1a6>
 800040c:	4601      	mov	r1, r0
 800040e:	4663      	mov	r3, ip
 8000410:	4152      	adcs	r2, r2
 8000412:	105b      	asrs	r3, r3, #1
 8000414:	4610      	mov	r0, r2
 8000416:	d301      	bcc.n	800041c <__divsi3+0x1b4>
 8000418:	4240      	negs	r0, r0
 800041a:	2b00      	cmp	r3, #0
 800041c:	d500      	bpl.n	8000420 <__divsi3+0x1b8>
 800041e:	4249      	negs	r1, r1
 8000420:	4770      	bx	lr
 8000422:	4663      	mov	r3, ip
 8000424:	105b      	asrs	r3, r3, #1
 8000426:	d300      	bcc.n	800042a <__divsi3+0x1c2>
 8000428:	4240      	negs	r0, r0
 800042a:	b501      	push	{r0, lr}
 800042c:	2000      	movs	r0, #0
 800042e:	f000 f805 	bl	800043c <__aeabi_idiv0>
 8000432:	bd02      	pop	{r1, pc}

08000434 <__aeabi_idivmod>:
 8000434:	2900      	cmp	r1, #0
 8000436:	d0f8      	beq.n	800042a <__divsi3+0x1c2>
 8000438:	e716      	b.n	8000268 <__divsi3>
 800043a:	4770      	bx	lr

0800043c <__aeabi_idiv0>:
 800043c:	4770      	bx	lr
 800043e:	46c0      	nop			; (mov r8, r8)

08000440 <__aeabi_cdrcmple>:
 8000440:	4684      	mov	ip, r0
 8000442:	1c10      	adds	r0, r2, #0
 8000444:	4662      	mov	r2, ip
 8000446:	468c      	mov	ip, r1
 8000448:	1c19      	adds	r1, r3, #0
 800044a:	4663      	mov	r3, ip
 800044c:	e000      	b.n	8000450 <__aeabi_cdcmpeq>
 800044e:	46c0      	nop			; (mov r8, r8)

08000450 <__aeabi_cdcmpeq>:
 8000450:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000452:	f001 fe5b 	bl	800210c <__ledf2>
 8000456:	2800      	cmp	r0, #0
 8000458:	d401      	bmi.n	800045e <__aeabi_cdcmpeq+0xe>
 800045a:	2100      	movs	r1, #0
 800045c:	42c8      	cmn	r0, r1
 800045e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000460 <__aeabi_dcmpeq>:
 8000460:	b510      	push	{r4, lr}
 8000462:	f001 fdb3 	bl	8001fcc <__eqdf2>
 8000466:	4240      	negs	r0, r0
 8000468:	3001      	adds	r0, #1
 800046a:	bd10      	pop	{r4, pc}

0800046c <__aeabi_dcmplt>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 fe4d 	bl	800210c <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	db01      	blt.n	800047a <__aeabi_dcmplt+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmple>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 fe43 	bl	800210c <__ledf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dd01      	ble.n	800048e <__aeabi_dcmple+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpgt>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 fdd5 	bl	8002044 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	dc01      	bgt.n	80004a2 <__aeabi_dcmpgt+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_dcmpge>:
 80004a8:	b510      	push	{r4, lr}
 80004aa:	f001 fdcb 	bl	8002044 <__gedf2>
 80004ae:	2800      	cmp	r0, #0
 80004b0:	da01      	bge.n	80004b6 <__aeabi_dcmpge+0xe>
 80004b2:	2000      	movs	r0, #0
 80004b4:	bd10      	pop	{r4, pc}
 80004b6:	2001      	movs	r0, #1
 80004b8:	bd10      	pop	{r4, pc}
 80004ba:	46c0      	nop			; (mov r8, r8)

080004bc <__aeabi_cfrcmple>:
 80004bc:	4684      	mov	ip, r0
 80004be:	1c08      	adds	r0, r1, #0
 80004c0:	4661      	mov	r1, ip
 80004c2:	e7ff      	b.n	80004c4 <__aeabi_cfcmpeq>

080004c4 <__aeabi_cfcmpeq>:
 80004c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80004c6:	f000 fbdd 	bl	8000c84 <__lesf2>
 80004ca:	2800      	cmp	r0, #0
 80004cc:	d401      	bmi.n	80004d2 <__aeabi_cfcmpeq+0xe>
 80004ce:	2100      	movs	r1, #0
 80004d0:	42c8      	cmn	r0, r1
 80004d2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004d4 <__aeabi_fcmpeq>:
 80004d4:	b510      	push	{r4, lr}
 80004d6:	f000 fb5f 	bl	8000b98 <__eqsf2>
 80004da:	4240      	negs	r0, r0
 80004dc:	3001      	adds	r0, #1
 80004de:	bd10      	pop	{r4, pc}

080004e0 <__aeabi_fcmplt>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	f000 fbcf 	bl	8000c84 <__lesf2>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	db01      	blt.n	80004ee <__aeabi_fcmplt+0xe>
 80004ea:	2000      	movs	r0, #0
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	2001      	movs	r0, #1
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	46c0      	nop			; (mov r8, r8)

080004f4 <__aeabi_fcmple>:
 80004f4:	b510      	push	{r4, lr}
 80004f6:	f000 fbc5 	bl	8000c84 <__lesf2>
 80004fa:	2800      	cmp	r0, #0
 80004fc:	dd01      	ble.n	8000502 <__aeabi_fcmple+0xe>
 80004fe:	2000      	movs	r0, #0
 8000500:	bd10      	pop	{r4, pc}
 8000502:	2001      	movs	r0, #1
 8000504:	bd10      	pop	{r4, pc}
 8000506:	46c0      	nop			; (mov r8, r8)

08000508 <__aeabi_fcmpgt>:
 8000508:	b510      	push	{r4, lr}
 800050a:	f000 fb6d 	bl	8000be8 <__gesf2>
 800050e:	2800      	cmp	r0, #0
 8000510:	dc01      	bgt.n	8000516 <__aeabi_fcmpgt+0xe>
 8000512:	2000      	movs	r0, #0
 8000514:	bd10      	pop	{r4, pc}
 8000516:	2001      	movs	r0, #1
 8000518:	bd10      	pop	{r4, pc}
 800051a:	46c0      	nop			; (mov r8, r8)

0800051c <__aeabi_fcmpge>:
 800051c:	b510      	push	{r4, lr}
 800051e:	f000 fb63 	bl	8000be8 <__gesf2>
 8000522:	2800      	cmp	r0, #0
 8000524:	da01      	bge.n	800052a <__aeabi_fcmpge+0xe>
 8000526:	2000      	movs	r0, #0
 8000528:	bd10      	pop	{r4, pc}
 800052a:	2001      	movs	r0, #1
 800052c:	bd10      	pop	{r4, pc}
 800052e:	46c0      	nop			; (mov r8, r8)

08000530 <__aeabi_ldivmod>:
 8000530:	2b00      	cmp	r3, #0
 8000532:	d115      	bne.n	8000560 <__aeabi_ldivmod+0x30>
 8000534:	2a00      	cmp	r2, #0
 8000536:	d113      	bne.n	8000560 <__aeabi_ldivmod+0x30>
 8000538:	2900      	cmp	r1, #0
 800053a:	db06      	blt.n	800054a <__aeabi_ldivmod+0x1a>
 800053c:	dc01      	bgt.n	8000542 <__aeabi_ldivmod+0x12>
 800053e:	2800      	cmp	r0, #0
 8000540:	d006      	beq.n	8000550 <__aeabi_ldivmod+0x20>
 8000542:	2000      	movs	r0, #0
 8000544:	43c0      	mvns	r0, r0
 8000546:	0841      	lsrs	r1, r0, #1
 8000548:	e002      	b.n	8000550 <__aeabi_ldivmod+0x20>
 800054a:	2180      	movs	r1, #128	; 0x80
 800054c:	0609      	lsls	r1, r1, #24
 800054e:	2000      	movs	r0, #0
 8000550:	b407      	push	{r0, r1, r2}
 8000552:	4802      	ldr	r0, [pc, #8]	; (800055c <__aeabi_ldivmod+0x2c>)
 8000554:	a101      	add	r1, pc, #4	; (adr r1, 800055c <__aeabi_ldivmod+0x2c>)
 8000556:	1840      	adds	r0, r0, r1
 8000558:	9002      	str	r0, [sp, #8]
 800055a:	bd03      	pop	{r0, r1, pc}
 800055c:	fffffee1 	.word	0xfffffee1
 8000560:	b403      	push	{r0, r1}
 8000562:	4668      	mov	r0, sp
 8000564:	b501      	push	{r0, lr}
 8000566:	9802      	ldr	r0, [sp, #8]
 8000568:	f000 f84e 	bl	8000608 <__gnu_ldivmod_helper>
 800056c:	9b01      	ldr	r3, [sp, #4]
 800056e:	469e      	mov	lr, r3
 8000570:	b002      	add	sp, #8
 8000572:	bc0c      	pop	{r2, r3}
 8000574:	4770      	bx	lr
 8000576:	46c0      	nop			; (mov r8, r8)

08000578 <__aeabi_lmul>:
 8000578:	b5f0      	push	{r4, r5, r6, r7, lr}
 800057a:	46ce      	mov	lr, r9
 800057c:	4647      	mov	r7, r8
 800057e:	0415      	lsls	r5, r2, #16
 8000580:	0c2d      	lsrs	r5, r5, #16
 8000582:	002e      	movs	r6, r5
 8000584:	b580      	push	{r7, lr}
 8000586:	0407      	lsls	r7, r0, #16
 8000588:	0c14      	lsrs	r4, r2, #16
 800058a:	0c3f      	lsrs	r7, r7, #16
 800058c:	4699      	mov	r9, r3
 800058e:	0c03      	lsrs	r3, r0, #16
 8000590:	437e      	muls	r6, r7
 8000592:	435d      	muls	r5, r3
 8000594:	4367      	muls	r7, r4
 8000596:	4363      	muls	r3, r4
 8000598:	197f      	adds	r7, r7, r5
 800059a:	0c34      	lsrs	r4, r6, #16
 800059c:	19e4      	adds	r4, r4, r7
 800059e:	469c      	mov	ip, r3
 80005a0:	42a5      	cmp	r5, r4
 80005a2:	d903      	bls.n	80005ac <__aeabi_lmul+0x34>
 80005a4:	2380      	movs	r3, #128	; 0x80
 80005a6:	025b      	lsls	r3, r3, #9
 80005a8:	4698      	mov	r8, r3
 80005aa:	44c4      	add	ip, r8
 80005ac:	464b      	mov	r3, r9
 80005ae:	4343      	muls	r3, r0
 80005b0:	4351      	muls	r1, r2
 80005b2:	0c25      	lsrs	r5, r4, #16
 80005b4:	0436      	lsls	r6, r6, #16
 80005b6:	4465      	add	r5, ip
 80005b8:	0c36      	lsrs	r6, r6, #16
 80005ba:	0424      	lsls	r4, r4, #16
 80005bc:	19a4      	adds	r4, r4, r6
 80005be:	195b      	adds	r3, r3, r5
 80005c0:	1859      	adds	r1, r3, r1
 80005c2:	0020      	movs	r0, r4
 80005c4:	bc0c      	pop	{r2, r3}
 80005c6:	4690      	mov	r8, r2
 80005c8:	4699      	mov	r9, r3
 80005ca:	bdf0      	pop	{r4, r5, r6, r7, pc}

080005cc <__aeabi_d2uiz>:
 80005cc:	b570      	push	{r4, r5, r6, lr}
 80005ce:	2200      	movs	r2, #0
 80005d0:	4b0c      	ldr	r3, [pc, #48]	; (8000604 <__aeabi_d2uiz+0x38>)
 80005d2:	0004      	movs	r4, r0
 80005d4:	000d      	movs	r5, r1
 80005d6:	f7ff ff67 	bl	80004a8 <__aeabi_dcmpge>
 80005da:	2800      	cmp	r0, #0
 80005dc:	d104      	bne.n	80005e8 <__aeabi_d2uiz+0x1c>
 80005de:	0020      	movs	r0, r4
 80005e0:	0029      	movs	r1, r5
 80005e2:	f002 fbd1 	bl	8002d88 <__aeabi_d2iz>
 80005e6:	bd70      	pop	{r4, r5, r6, pc}
 80005e8:	4b06      	ldr	r3, [pc, #24]	; (8000604 <__aeabi_d2uiz+0x38>)
 80005ea:	2200      	movs	r2, #0
 80005ec:	0020      	movs	r0, r4
 80005ee:	0029      	movs	r1, r5
 80005f0:	f002 f866 	bl	80026c0 <__aeabi_dsub>
 80005f4:	f002 fbc8 	bl	8002d88 <__aeabi_d2iz>
 80005f8:	2380      	movs	r3, #128	; 0x80
 80005fa:	061b      	lsls	r3, r3, #24
 80005fc:	469c      	mov	ip, r3
 80005fe:	4460      	add	r0, ip
 8000600:	e7f1      	b.n	80005e6 <__aeabi_d2uiz+0x1a>
 8000602:	46c0      	nop			; (mov r8, r8)
 8000604:	41e00000 	.word	0x41e00000

08000608 <__gnu_ldivmod_helper>:
 8000608:	b5f0      	push	{r4, r5, r6, r7, lr}
 800060a:	b083      	sub	sp, #12
 800060c:	0016      	movs	r6, r2
 800060e:	001f      	movs	r7, r3
 8000610:	9000      	str	r0, [sp, #0]
 8000612:	9101      	str	r1, [sp, #4]
 8000614:	f002 fd4e 	bl	80030b4 <__divdi3>
 8000618:	0004      	movs	r4, r0
 800061a:	000d      	movs	r5, r1
 800061c:	0002      	movs	r2, r0
 800061e:	000b      	movs	r3, r1
 8000620:	0030      	movs	r0, r6
 8000622:	0039      	movs	r1, r7
 8000624:	f7ff ffa8 	bl	8000578 <__aeabi_lmul>
 8000628:	9a00      	ldr	r2, [sp, #0]
 800062a:	9b01      	ldr	r3, [sp, #4]
 800062c:	1a12      	subs	r2, r2, r0
 800062e:	418b      	sbcs	r3, r1
 8000630:	9908      	ldr	r1, [sp, #32]
 8000632:	0020      	movs	r0, r4
 8000634:	600a      	str	r2, [r1, #0]
 8000636:	604b      	str	r3, [r1, #4]
 8000638:	0029      	movs	r1, r5
 800063a:	b003      	add	sp, #12
 800063c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800063e:	46c0      	nop			; (mov r8, r8)

08000640 <__aeabi_fadd>:
 8000640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000642:	4647      	mov	r7, r8
 8000644:	46ce      	mov	lr, r9
 8000646:	0243      	lsls	r3, r0, #9
 8000648:	0a5b      	lsrs	r3, r3, #9
 800064a:	0044      	lsls	r4, r0, #1
 800064c:	0fc2      	lsrs	r2, r0, #31
 800064e:	469c      	mov	ip, r3
 8000650:	0048      	lsls	r0, r1, #1
 8000652:	00dd      	lsls	r5, r3, #3
 8000654:	024b      	lsls	r3, r1, #9
 8000656:	0e24      	lsrs	r4, r4, #24
 8000658:	0a5b      	lsrs	r3, r3, #9
 800065a:	0e00      	lsrs	r0, r0, #24
 800065c:	b580      	push	{r7, lr}
 800065e:	4698      	mov	r8, r3
 8000660:	0026      	movs	r6, r4
 8000662:	4691      	mov	r9, r2
 8000664:	0fc9      	lsrs	r1, r1, #31
 8000666:	00db      	lsls	r3, r3, #3
 8000668:	1a27      	subs	r7, r4, r0
 800066a:	428a      	cmp	r2, r1
 800066c:	d029      	beq.n	80006c2 <__aeabi_fadd+0x82>
 800066e:	2f00      	cmp	r7, #0
 8000670:	dd15      	ble.n	800069e <__aeabi_fadd+0x5e>
 8000672:	2800      	cmp	r0, #0
 8000674:	d14a      	bne.n	800070c <__aeabi_fadd+0xcc>
 8000676:	2b00      	cmp	r3, #0
 8000678:	d000      	beq.n	800067c <__aeabi_fadd+0x3c>
 800067a:	e095      	b.n	80007a8 <__aeabi_fadd+0x168>
 800067c:	08ed      	lsrs	r5, r5, #3
 800067e:	2cff      	cmp	r4, #255	; 0xff
 8000680:	d100      	bne.n	8000684 <__aeabi_fadd+0x44>
 8000682:	e088      	b.n	8000796 <__aeabi_fadd+0x156>
 8000684:	026b      	lsls	r3, r5, #9
 8000686:	0a5b      	lsrs	r3, r3, #9
 8000688:	b2e6      	uxtb	r6, r4
 800068a:	025b      	lsls	r3, r3, #9
 800068c:	05f6      	lsls	r6, r6, #23
 800068e:	0a58      	lsrs	r0, r3, #9
 8000690:	4330      	orrs	r0, r6
 8000692:	07d2      	lsls	r2, r2, #31
 8000694:	4310      	orrs	r0, r2
 8000696:	bc0c      	pop	{r2, r3}
 8000698:	4690      	mov	r8, r2
 800069a:	4699      	mov	r9, r3
 800069c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800069e:	2f00      	cmp	r7, #0
 80006a0:	d000      	beq.n	80006a4 <__aeabi_fadd+0x64>
 80006a2:	e087      	b.n	80007b4 <__aeabi_fadd+0x174>
 80006a4:	1c60      	adds	r0, r4, #1
 80006a6:	b2c0      	uxtb	r0, r0
 80006a8:	2801      	cmp	r0, #1
 80006aa:	dc00      	bgt.n	80006ae <__aeabi_fadd+0x6e>
 80006ac:	e0b6      	b.n	800081c <__aeabi_fadd+0x1dc>
 80006ae:	1aee      	subs	r6, r5, r3
 80006b0:	0172      	lsls	r2, r6, #5
 80006b2:	d500      	bpl.n	80006b6 <__aeabi_fadd+0x76>
 80006b4:	e0c5      	b.n	8000842 <__aeabi_fadd+0x202>
 80006b6:	2e00      	cmp	r6, #0
 80006b8:	d13d      	bne.n	8000736 <__aeabi_fadd+0xf6>
 80006ba:	2200      	movs	r2, #0
 80006bc:	2600      	movs	r6, #0
 80006be:	2300      	movs	r3, #0
 80006c0:	e7e3      	b.n	800068a <__aeabi_fadd+0x4a>
 80006c2:	2f00      	cmp	r7, #0
 80006c4:	dc00      	bgt.n	80006c8 <__aeabi_fadd+0x88>
 80006c6:	e096      	b.n	80007f6 <__aeabi_fadd+0x1b6>
 80006c8:	2800      	cmp	r0, #0
 80006ca:	d05d      	beq.n	8000788 <__aeabi_fadd+0x148>
 80006cc:	2cff      	cmp	r4, #255	; 0xff
 80006ce:	d060      	beq.n	8000792 <__aeabi_fadd+0x152>
 80006d0:	2280      	movs	r2, #128	; 0x80
 80006d2:	04d2      	lsls	r2, r2, #19
 80006d4:	4313      	orrs	r3, r2
 80006d6:	2f1b      	cmp	r7, #27
 80006d8:	dd00      	ble.n	80006dc <__aeabi_fadd+0x9c>
 80006da:	e0ec      	b.n	80008b6 <__aeabi_fadd+0x276>
 80006dc:	2220      	movs	r2, #32
 80006de:	1bd2      	subs	r2, r2, r7
 80006e0:	0018      	movs	r0, r3
 80006e2:	4093      	lsls	r3, r2
 80006e4:	40f8      	lsrs	r0, r7
 80006e6:	1e5a      	subs	r2, r3, #1
 80006e8:	4193      	sbcs	r3, r2
 80006ea:	4303      	orrs	r3, r0
 80006ec:	18ed      	adds	r5, r5, r3
 80006ee:	016b      	lsls	r3, r5, #5
 80006f0:	d57b      	bpl.n	80007ea <__aeabi_fadd+0x1aa>
 80006f2:	3401      	adds	r4, #1
 80006f4:	2cff      	cmp	r4, #255	; 0xff
 80006f6:	d100      	bne.n	80006fa <__aeabi_fadd+0xba>
 80006f8:	e0b7      	b.n	800086a <__aeabi_fadd+0x22a>
 80006fa:	2201      	movs	r2, #1
 80006fc:	2607      	movs	r6, #7
 80006fe:	402a      	ands	r2, r5
 8000700:	086b      	lsrs	r3, r5, #1
 8000702:	4d9a      	ldr	r5, [pc, #616]	; (800096c <__aeabi_fadd+0x32c>)
 8000704:	401d      	ands	r5, r3
 8000706:	4315      	orrs	r5, r2
 8000708:	402e      	ands	r6, r5
 800070a:	e029      	b.n	8000760 <__aeabi_fadd+0x120>
 800070c:	2cff      	cmp	r4, #255	; 0xff
 800070e:	d0b5      	beq.n	800067c <__aeabi_fadd+0x3c>
 8000710:	2280      	movs	r2, #128	; 0x80
 8000712:	04d2      	lsls	r2, r2, #19
 8000714:	4313      	orrs	r3, r2
 8000716:	2f1b      	cmp	r7, #27
 8000718:	dd00      	ble.n	800071c <__aeabi_fadd+0xdc>
 800071a:	e0b2      	b.n	8000882 <__aeabi_fadd+0x242>
 800071c:	2220      	movs	r2, #32
 800071e:	1bd2      	subs	r2, r2, r7
 8000720:	0019      	movs	r1, r3
 8000722:	4093      	lsls	r3, r2
 8000724:	40f9      	lsrs	r1, r7
 8000726:	1e5a      	subs	r2, r3, #1
 8000728:	4193      	sbcs	r3, r2
 800072a:	430b      	orrs	r3, r1
 800072c:	1aed      	subs	r5, r5, r3
 800072e:	016b      	lsls	r3, r5, #5
 8000730:	d55b      	bpl.n	80007ea <__aeabi_fadd+0x1aa>
 8000732:	01ad      	lsls	r5, r5, #6
 8000734:	09ae      	lsrs	r6, r5, #6
 8000736:	0030      	movs	r0, r6
 8000738:	f002 fc9e 	bl	8003078 <__clzsi2>
 800073c:	3805      	subs	r0, #5
 800073e:	4086      	lsls	r6, r0
 8000740:	4284      	cmp	r4, r0
 8000742:	dc65      	bgt.n	8000810 <__aeabi_fadd+0x1d0>
 8000744:	1b04      	subs	r4, r0, r4
 8000746:	0033      	movs	r3, r6
 8000748:	2020      	movs	r0, #32
 800074a:	3401      	adds	r4, #1
 800074c:	40e3      	lsrs	r3, r4
 800074e:	1b04      	subs	r4, r0, r4
 8000750:	40a6      	lsls	r6, r4
 8000752:	1e75      	subs	r5, r6, #1
 8000754:	41ae      	sbcs	r6, r5
 8000756:	4333      	orrs	r3, r6
 8000758:	2607      	movs	r6, #7
 800075a:	001d      	movs	r5, r3
 800075c:	2400      	movs	r4, #0
 800075e:	401e      	ands	r6, r3
 8000760:	2201      	movs	r2, #1
 8000762:	464b      	mov	r3, r9
 8000764:	401a      	ands	r2, r3
 8000766:	2e00      	cmp	r6, #0
 8000768:	d004      	beq.n	8000774 <__aeabi_fadd+0x134>
 800076a:	230f      	movs	r3, #15
 800076c:	402b      	ands	r3, r5
 800076e:	2b04      	cmp	r3, #4
 8000770:	d000      	beq.n	8000774 <__aeabi_fadd+0x134>
 8000772:	3504      	adds	r5, #4
 8000774:	016b      	lsls	r3, r5, #5
 8000776:	d400      	bmi.n	800077a <__aeabi_fadd+0x13a>
 8000778:	e780      	b.n	800067c <__aeabi_fadd+0x3c>
 800077a:	3401      	adds	r4, #1
 800077c:	b2e6      	uxtb	r6, r4
 800077e:	2cff      	cmp	r4, #255	; 0xff
 8000780:	d12f      	bne.n	80007e2 <__aeabi_fadd+0x1a2>
 8000782:	26ff      	movs	r6, #255	; 0xff
 8000784:	2300      	movs	r3, #0
 8000786:	e780      	b.n	800068a <__aeabi_fadd+0x4a>
 8000788:	2b00      	cmp	r3, #0
 800078a:	d152      	bne.n	8000832 <__aeabi_fadd+0x1f2>
 800078c:	2cff      	cmp	r4, #255	; 0xff
 800078e:	d000      	beq.n	8000792 <__aeabi_fadd+0x152>
 8000790:	e774      	b.n	800067c <__aeabi_fadd+0x3c>
 8000792:	000a      	movs	r2, r1
 8000794:	08ed      	lsrs	r5, r5, #3
 8000796:	2d00      	cmp	r5, #0
 8000798:	d0f3      	beq.n	8000782 <__aeabi_fadd+0x142>
 800079a:	2380      	movs	r3, #128	; 0x80
 800079c:	03db      	lsls	r3, r3, #15
 800079e:	432b      	orrs	r3, r5
 80007a0:	025b      	lsls	r3, r3, #9
 80007a2:	0a5b      	lsrs	r3, r3, #9
 80007a4:	26ff      	movs	r6, #255	; 0xff
 80007a6:	e770      	b.n	800068a <__aeabi_fadd+0x4a>
 80007a8:	3f01      	subs	r7, #1
 80007aa:	2f00      	cmp	r7, #0
 80007ac:	d0be      	beq.n	800072c <__aeabi_fadd+0xec>
 80007ae:	2cff      	cmp	r4, #255	; 0xff
 80007b0:	d1b1      	bne.n	8000716 <__aeabi_fadd+0xd6>
 80007b2:	e763      	b.n	800067c <__aeabi_fadd+0x3c>
 80007b4:	2c00      	cmp	r4, #0
 80007b6:	d047      	beq.n	8000848 <__aeabi_fadd+0x208>
 80007b8:	28ff      	cmp	r0, #255	; 0xff
 80007ba:	d069      	beq.n	8000890 <__aeabi_fadd+0x250>
 80007bc:	2480      	movs	r4, #128	; 0x80
 80007be:	04e4      	lsls	r4, r4, #19
 80007c0:	427a      	negs	r2, r7
 80007c2:	4325      	orrs	r5, r4
 80007c4:	2a1b      	cmp	r2, #27
 80007c6:	dd00      	ble.n	80007ca <__aeabi_fadd+0x18a>
 80007c8:	e0c5      	b.n	8000956 <__aeabi_fadd+0x316>
 80007ca:	002c      	movs	r4, r5
 80007cc:	2620      	movs	r6, #32
 80007ce:	40d4      	lsrs	r4, r2
 80007d0:	1ab2      	subs	r2, r6, r2
 80007d2:	4095      	lsls	r5, r2
 80007d4:	1e6a      	subs	r2, r5, #1
 80007d6:	4195      	sbcs	r5, r2
 80007d8:	4325      	orrs	r5, r4
 80007da:	1b5d      	subs	r5, r3, r5
 80007dc:	0004      	movs	r4, r0
 80007de:	4689      	mov	r9, r1
 80007e0:	e7a5      	b.n	800072e <__aeabi_fadd+0xee>
 80007e2:	01ab      	lsls	r3, r5, #6
 80007e4:	0a5b      	lsrs	r3, r3, #9
 80007e6:	e750      	b.n	800068a <__aeabi_fadd+0x4a>
 80007e8:	2400      	movs	r4, #0
 80007ea:	2201      	movs	r2, #1
 80007ec:	464b      	mov	r3, r9
 80007ee:	401a      	ands	r2, r3
 80007f0:	076b      	lsls	r3, r5, #29
 80007f2:	d1ba      	bne.n	800076a <__aeabi_fadd+0x12a>
 80007f4:	e742      	b.n	800067c <__aeabi_fadd+0x3c>
 80007f6:	2f00      	cmp	r7, #0
 80007f8:	d13b      	bne.n	8000872 <__aeabi_fadd+0x232>
 80007fa:	3401      	adds	r4, #1
 80007fc:	b2e0      	uxtb	r0, r4
 80007fe:	2801      	cmp	r0, #1
 8000800:	dd4a      	ble.n	8000898 <__aeabi_fadd+0x258>
 8000802:	2cff      	cmp	r4, #255	; 0xff
 8000804:	d0bd      	beq.n	8000782 <__aeabi_fadd+0x142>
 8000806:	2607      	movs	r6, #7
 8000808:	18ed      	adds	r5, r5, r3
 800080a:	086d      	lsrs	r5, r5, #1
 800080c:	402e      	ands	r6, r5
 800080e:	e7a7      	b.n	8000760 <__aeabi_fadd+0x120>
 8000810:	2307      	movs	r3, #7
 8000812:	4d57      	ldr	r5, [pc, #348]	; (8000970 <__aeabi_fadd+0x330>)
 8000814:	1a24      	subs	r4, r4, r0
 8000816:	4035      	ands	r5, r6
 8000818:	401e      	ands	r6, r3
 800081a:	e7a1      	b.n	8000760 <__aeabi_fadd+0x120>
 800081c:	2c00      	cmp	r4, #0
 800081e:	d11b      	bne.n	8000858 <__aeabi_fadd+0x218>
 8000820:	2d00      	cmp	r5, #0
 8000822:	d16e      	bne.n	8000902 <__aeabi_fadd+0x2c2>
 8000824:	2b00      	cmp	r3, #0
 8000826:	d100      	bne.n	800082a <__aeabi_fadd+0x1ea>
 8000828:	e09a      	b.n	8000960 <__aeabi_fadd+0x320>
 800082a:	000a      	movs	r2, r1
 800082c:	001d      	movs	r5, r3
 800082e:	003c      	movs	r4, r7
 8000830:	e724      	b.n	800067c <__aeabi_fadd+0x3c>
 8000832:	3f01      	subs	r7, #1
 8000834:	2f00      	cmp	r7, #0
 8000836:	d100      	bne.n	800083a <__aeabi_fadd+0x1fa>
 8000838:	e758      	b.n	80006ec <__aeabi_fadd+0xac>
 800083a:	2cff      	cmp	r4, #255	; 0xff
 800083c:	d000      	beq.n	8000840 <__aeabi_fadd+0x200>
 800083e:	e74a      	b.n	80006d6 <__aeabi_fadd+0x96>
 8000840:	e7a7      	b.n	8000792 <__aeabi_fadd+0x152>
 8000842:	1b5e      	subs	r6, r3, r5
 8000844:	4689      	mov	r9, r1
 8000846:	e776      	b.n	8000736 <__aeabi_fadd+0xf6>
 8000848:	2d00      	cmp	r5, #0
 800084a:	d11c      	bne.n	8000886 <__aeabi_fadd+0x246>
 800084c:	000a      	movs	r2, r1
 800084e:	28ff      	cmp	r0, #255	; 0xff
 8000850:	d01f      	beq.n	8000892 <__aeabi_fadd+0x252>
 8000852:	0004      	movs	r4, r0
 8000854:	001d      	movs	r5, r3
 8000856:	e711      	b.n	800067c <__aeabi_fadd+0x3c>
 8000858:	2d00      	cmp	r5, #0
 800085a:	d15d      	bne.n	8000918 <__aeabi_fadd+0x2d8>
 800085c:	2b00      	cmp	r3, #0
 800085e:	d117      	bne.n	8000890 <__aeabi_fadd+0x250>
 8000860:	2380      	movs	r3, #128	; 0x80
 8000862:	2200      	movs	r2, #0
 8000864:	03db      	lsls	r3, r3, #15
 8000866:	26ff      	movs	r6, #255	; 0xff
 8000868:	e70f      	b.n	800068a <__aeabi_fadd+0x4a>
 800086a:	000a      	movs	r2, r1
 800086c:	26ff      	movs	r6, #255	; 0xff
 800086e:	2300      	movs	r3, #0
 8000870:	e70b      	b.n	800068a <__aeabi_fadd+0x4a>
 8000872:	2c00      	cmp	r4, #0
 8000874:	d121      	bne.n	80008ba <__aeabi_fadd+0x27a>
 8000876:	2d00      	cmp	r5, #0
 8000878:	d166      	bne.n	8000948 <__aeabi_fadd+0x308>
 800087a:	28ff      	cmp	r0, #255	; 0xff
 800087c:	d1e9      	bne.n	8000852 <__aeabi_fadd+0x212>
 800087e:	001d      	movs	r5, r3
 8000880:	e787      	b.n	8000792 <__aeabi_fadd+0x152>
 8000882:	2301      	movs	r3, #1
 8000884:	e752      	b.n	800072c <__aeabi_fadd+0xec>
 8000886:	1c7a      	adds	r2, r7, #1
 8000888:	d0a7      	beq.n	80007da <__aeabi_fadd+0x19a>
 800088a:	43fa      	mvns	r2, r7
 800088c:	28ff      	cmp	r0, #255	; 0xff
 800088e:	d199      	bne.n	80007c4 <__aeabi_fadd+0x184>
 8000890:	000a      	movs	r2, r1
 8000892:	001d      	movs	r5, r3
 8000894:	24ff      	movs	r4, #255	; 0xff
 8000896:	e6f1      	b.n	800067c <__aeabi_fadd+0x3c>
 8000898:	2e00      	cmp	r6, #0
 800089a:	d121      	bne.n	80008e0 <__aeabi_fadd+0x2a0>
 800089c:	2d00      	cmp	r5, #0
 800089e:	d04f      	beq.n	8000940 <__aeabi_fadd+0x300>
 80008a0:	2b00      	cmp	r3, #0
 80008a2:	d04c      	beq.n	800093e <__aeabi_fadd+0x2fe>
 80008a4:	18ed      	adds	r5, r5, r3
 80008a6:	016b      	lsls	r3, r5, #5
 80008a8:	d59e      	bpl.n	80007e8 <__aeabi_fadd+0x1a8>
 80008aa:	4b31      	ldr	r3, [pc, #196]	; (8000970 <__aeabi_fadd+0x330>)
 80008ac:	3607      	adds	r6, #7
 80008ae:	402e      	ands	r6, r5
 80008b0:	2401      	movs	r4, #1
 80008b2:	401d      	ands	r5, r3
 80008b4:	e754      	b.n	8000760 <__aeabi_fadd+0x120>
 80008b6:	2301      	movs	r3, #1
 80008b8:	e718      	b.n	80006ec <__aeabi_fadd+0xac>
 80008ba:	28ff      	cmp	r0, #255	; 0xff
 80008bc:	d0df      	beq.n	800087e <__aeabi_fadd+0x23e>
 80008be:	2480      	movs	r4, #128	; 0x80
 80008c0:	04e4      	lsls	r4, r4, #19
 80008c2:	427f      	negs	r7, r7
 80008c4:	4325      	orrs	r5, r4
 80008c6:	2f1b      	cmp	r7, #27
 80008c8:	dc4d      	bgt.n	8000966 <__aeabi_fadd+0x326>
 80008ca:	2620      	movs	r6, #32
 80008cc:	1bf6      	subs	r6, r6, r7
 80008ce:	002c      	movs	r4, r5
 80008d0:	40b5      	lsls	r5, r6
 80008d2:	40fc      	lsrs	r4, r7
 80008d4:	1e6a      	subs	r2, r5, #1
 80008d6:	4195      	sbcs	r5, r2
 80008d8:	4325      	orrs	r5, r4
 80008da:	18ed      	adds	r5, r5, r3
 80008dc:	0004      	movs	r4, r0
 80008de:	e706      	b.n	80006ee <__aeabi_fadd+0xae>
 80008e0:	2d00      	cmp	r5, #0
 80008e2:	d0cc      	beq.n	800087e <__aeabi_fadd+0x23e>
 80008e4:	2b00      	cmp	r3, #0
 80008e6:	d100      	bne.n	80008ea <__aeabi_fadd+0x2aa>
 80008e8:	e753      	b.n	8000792 <__aeabi_fadd+0x152>
 80008ea:	2180      	movs	r1, #128	; 0x80
 80008ec:	4660      	mov	r0, ip
 80008ee:	03c9      	lsls	r1, r1, #15
 80008f0:	4208      	tst	r0, r1
 80008f2:	d003      	beq.n	80008fc <__aeabi_fadd+0x2bc>
 80008f4:	4640      	mov	r0, r8
 80008f6:	4208      	tst	r0, r1
 80008f8:	d100      	bne.n	80008fc <__aeabi_fadd+0x2bc>
 80008fa:	001d      	movs	r5, r3
 80008fc:	2101      	movs	r1, #1
 80008fe:	4011      	ands	r1, r2
 8000900:	e747      	b.n	8000792 <__aeabi_fadd+0x152>
 8000902:	2b00      	cmp	r3, #0
 8000904:	d100      	bne.n	8000908 <__aeabi_fadd+0x2c8>
 8000906:	e6b9      	b.n	800067c <__aeabi_fadd+0x3c>
 8000908:	1aea      	subs	r2, r5, r3
 800090a:	0150      	lsls	r0, r2, #5
 800090c:	d525      	bpl.n	800095a <__aeabi_fadd+0x31a>
 800090e:	2607      	movs	r6, #7
 8000910:	1b5d      	subs	r5, r3, r5
 8000912:	402e      	ands	r6, r5
 8000914:	4689      	mov	r9, r1
 8000916:	e723      	b.n	8000760 <__aeabi_fadd+0x120>
 8000918:	24ff      	movs	r4, #255	; 0xff
 800091a:	2b00      	cmp	r3, #0
 800091c:	d100      	bne.n	8000920 <__aeabi_fadd+0x2e0>
 800091e:	e6ad      	b.n	800067c <__aeabi_fadd+0x3c>
 8000920:	2280      	movs	r2, #128	; 0x80
 8000922:	4660      	mov	r0, ip
 8000924:	03d2      	lsls	r2, r2, #15
 8000926:	4210      	tst	r0, r2
 8000928:	d004      	beq.n	8000934 <__aeabi_fadd+0x2f4>
 800092a:	4640      	mov	r0, r8
 800092c:	4210      	tst	r0, r2
 800092e:	d101      	bne.n	8000934 <__aeabi_fadd+0x2f4>
 8000930:	001d      	movs	r5, r3
 8000932:	4689      	mov	r9, r1
 8000934:	2201      	movs	r2, #1
 8000936:	464b      	mov	r3, r9
 8000938:	24ff      	movs	r4, #255	; 0xff
 800093a:	401a      	ands	r2, r3
 800093c:	e69e      	b.n	800067c <__aeabi_fadd+0x3c>
 800093e:	002b      	movs	r3, r5
 8000940:	08dd      	lsrs	r5, r3, #3
 8000942:	000a      	movs	r2, r1
 8000944:	2400      	movs	r4, #0
 8000946:	e69d      	b.n	8000684 <__aeabi_fadd+0x44>
 8000948:	1c7a      	adds	r2, r7, #1
 800094a:	d0c6      	beq.n	80008da <__aeabi_fadd+0x29a>
 800094c:	43ff      	mvns	r7, r7
 800094e:	28ff      	cmp	r0, #255	; 0xff
 8000950:	d1b9      	bne.n	80008c6 <__aeabi_fadd+0x286>
 8000952:	001d      	movs	r5, r3
 8000954:	e71d      	b.n	8000792 <__aeabi_fadd+0x152>
 8000956:	2501      	movs	r5, #1
 8000958:	e73f      	b.n	80007da <__aeabi_fadd+0x19a>
 800095a:	1e15      	subs	r5, r2, #0
 800095c:	d000      	beq.n	8000960 <__aeabi_fadd+0x320>
 800095e:	e744      	b.n	80007ea <__aeabi_fadd+0x1aa>
 8000960:	2200      	movs	r2, #0
 8000962:	2300      	movs	r3, #0
 8000964:	e691      	b.n	800068a <__aeabi_fadd+0x4a>
 8000966:	2501      	movs	r5, #1
 8000968:	e7b7      	b.n	80008da <__aeabi_fadd+0x29a>
 800096a:	46c0      	nop			; (mov r8, r8)
 800096c:	7dffffff 	.word	0x7dffffff
 8000970:	fbffffff 	.word	0xfbffffff

08000974 <__aeabi_fdiv>:
 8000974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000976:	4657      	mov	r7, sl
 8000978:	464e      	mov	r6, r9
 800097a:	4645      	mov	r5, r8
 800097c:	46de      	mov	lr, fp
 800097e:	0244      	lsls	r4, r0, #9
 8000980:	b5e0      	push	{r5, r6, r7, lr}
 8000982:	0046      	lsls	r6, r0, #1
 8000984:	4688      	mov	r8, r1
 8000986:	0a64      	lsrs	r4, r4, #9
 8000988:	0e36      	lsrs	r6, r6, #24
 800098a:	0fc7      	lsrs	r7, r0, #31
 800098c:	2e00      	cmp	r6, #0
 800098e:	d063      	beq.n	8000a58 <__aeabi_fdiv+0xe4>
 8000990:	2eff      	cmp	r6, #255	; 0xff
 8000992:	d024      	beq.n	80009de <__aeabi_fdiv+0x6a>
 8000994:	2380      	movs	r3, #128	; 0x80
 8000996:	00e4      	lsls	r4, r4, #3
 8000998:	04db      	lsls	r3, r3, #19
 800099a:	431c      	orrs	r4, r3
 800099c:	2300      	movs	r3, #0
 800099e:	4699      	mov	r9, r3
 80009a0:	469b      	mov	fp, r3
 80009a2:	3e7f      	subs	r6, #127	; 0x7f
 80009a4:	4643      	mov	r3, r8
 80009a6:	4642      	mov	r2, r8
 80009a8:	025d      	lsls	r5, r3, #9
 80009aa:	0fd2      	lsrs	r2, r2, #31
 80009ac:	005b      	lsls	r3, r3, #1
 80009ae:	0a6d      	lsrs	r5, r5, #9
 80009b0:	0e1b      	lsrs	r3, r3, #24
 80009b2:	4690      	mov	r8, r2
 80009b4:	4692      	mov	sl, r2
 80009b6:	d065      	beq.n	8000a84 <__aeabi_fdiv+0x110>
 80009b8:	2bff      	cmp	r3, #255	; 0xff
 80009ba:	d055      	beq.n	8000a68 <__aeabi_fdiv+0xf4>
 80009bc:	2280      	movs	r2, #128	; 0x80
 80009be:	2100      	movs	r1, #0
 80009c0:	00ed      	lsls	r5, r5, #3
 80009c2:	04d2      	lsls	r2, r2, #19
 80009c4:	3b7f      	subs	r3, #127	; 0x7f
 80009c6:	4315      	orrs	r5, r2
 80009c8:	1af6      	subs	r6, r6, r3
 80009ca:	4643      	mov	r3, r8
 80009cc:	464a      	mov	r2, r9
 80009ce:	407b      	eors	r3, r7
 80009d0:	2a0f      	cmp	r2, #15
 80009d2:	d900      	bls.n	80009d6 <__aeabi_fdiv+0x62>
 80009d4:	e08d      	b.n	8000af2 <__aeabi_fdiv+0x17e>
 80009d6:	486d      	ldr	r0, [pc, #436]	; (8000b8c <__aeabi_fdiv+0x218>)
 80009d8:	0092      	lsls	r2, r2, #2
 80009da:	5882      	ldr	r2, [r0, r2]
 80009dc:	4697      	mov	pc, r2
 80009de:	2c00      	cmp	r4, #0
 80009e0:	d154      	bne.n	8000a8c <__aeabi_fdiv+0x118>
 80009e2:	2308      	movs	r3, #8
 80009e4:	4699      	mov	r9, r3
 80009e6:	3b06      	subs	r3, #6
 80009e8:	26ff      	movs	r6, #255	; 0xff
 80009ea:	469b      	mov	fp, r3
 80009ec:	e7da      	b.n	80009a4 <__aeabi_fdiv+0x30>
 80009ee:	2500      	movs	r5, #0
 80009f0:	4653      	mov	r3, sl
 80009f2:	2902      	cmp	r1, #2
 80009f4:	d01b      	beq.n	8000a2e <__aeabi_fdiv+0xba>
 80009f6:	2903      	cmp	r1, #3
 80009f8:	d100      	bne.n	80009fc <__aeabi_fdiv+0x88>
 80009fa:	e0bf      	b.n	8000b7c <__aeabi_fdiv+0x208>
 80009fc:	2901      	cmp	r1, #1
 80009fe:	d028      	beq.n	8000a52 <__aeabi_fdiv+0xde>
 8000a00:	0030      	movs	r0, r6
 8000a02:	307f      	adds	r0, #127	; 0x7f
 8000a04:	2800      	cmp	r0, #0
 8000a06:	dd20      	ble.n	8000a4a <__aeabi_fdiv+0xd6>
 8000a08:	076a      	lsls	r2, r5, #29
 8000a0a:	d004      	beq.n	8000a16 <__aeabi_fdiv+0xa2>
 8000a0c:	220f      	movs	r2, #15
 8000a0e:	402a      	ands	r2, r5
 8000a10:	2a04      	cmp	r2, #4
 8000a12:	d000      	beq.n	8000a16 <__aeabi_fdiv+0xa2>
 8000a14:	3504      	adds	r5, #4
 8000a16:	012a      	lsls	r2, r5, #4
 8000a18:	d503      	bpl.n	8000a22 <__aeabi_fdiv+0xae>
 8000a1a:	0030      	movs	r0, r6
 8000a1c:	4a5c      	ldr	r2, [pc, #368]	; (8000b90 <__aeabi_fdiv+0x21c>)
 8000a1e:	3080      	adds	r0, #128	; 0x80
 8000a20:	4015      	ands	r5, r2
 8000a22:	28fe      	cmp	r0, #254	; 0xfe
 8000a24:	dc03      	bgt.n	8000a2e <__aeabi_fdiv+0xba>
 8000a26:	01ac      	lsls	r4, r5, #6
 8000a28:	0a64      	lsrs	r4, r4, #9
 8000a2a:	b2c2      	uxtb	r2, r0
 8000a2c:	e001      	b.n	8000a32 <__aeabi_fdiv+0xbe>
 8000a2e:	22ff      	movs	r2, #255	; 0xff
 8000a30:	2400      	movs	r4, #0
 8000a32:	0264      	lsls	r4, r4, #9
 8000a34:	05d2      	lsls	r2, r2, #23
 8000a36:	0a60      	lsrs	r0, r4, #9
 8000a38:	07db      	lsls	r3, r3, #31
 8000a3a:	4310      	orrs	r0, r2
 8000a3c:	4318      	orrs	r0, r3
 8000a3e:	bc3c      	pop	{r2, r3, r4, r5}
 8000a40:	4690      	mov	r8, r2
 8000a42:	4699      	mov	r9, r3
 8000a44:	46a2      	mov	sl, r4
 8000a46:	46ab      	mov	fp, r5
 8000a48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a4a:	2201      	movs	r2, #1
 8000a4c:	1a10      	subs	r0, r2, r0
 8000a4e:	281b      	cmp	r0, #27
 8000a50:	dd7c      	ble.n	8000b4c <__aeabi_fdiv+0x1d8>
 8000a52:	2200      	movs	r2, #0
 8000a54:	2400      	movs	r4, #0
 8000a56:	e7ec      	b.n	8000a32 <__aeabi_fdiv+0xbe>
 8000a58:	2c00      	cmp	r4, #0
 8000a5a:	d11d      	bne.n	8000a98 <__aeabi_fdiv+0x124>
 8000a5c:	2304      	movs	r3, #4
 8000a5e:	4699      	mov	r9, r3
 8000a60:	3b03      	subs	r3, #3
 8000a62:	2600      	movs	r6, #0
 8000a64:	469b      	mov	fp, r3
 8000a66:	e79d      	b.n	80009a4 <__aeabi_fdiv+0x30>
 8000a68:	3eff      	subs	r6, #255	; 0xff
 8000a6a:	2d00      	cmp	r5, #0
 8000a6c:	d120      	bne.n	8000ab0 <__aeabi_fdiv+0x13c>
 8000a6e:	2102      	movs	r1, #2
 8000a70:	4643      	mov	r3, r8
 8000a72:	464a      	mov	r2, r9
 8000a74:	407b      	eors	r3, r7
 8000a76:	430a      	orrs	r2, r1
 8000a78:	2a0f      	cmp	r2, #15
 8000a7a:	d8d8      	bhi.n	8000a2e <__aeabi_fdiv+0xba>
 8000a7c:	4845      	ldr	r0, [pc, #276]	; (8000b94 <__aeabi_fdiv+0x220>)
 8000a7e:	0092      	lsls	r2, r2, #2
 8000a80:	5882      	ldr	r2, [r0, r2]
 8000a82:	4697      	mov	pc, r2
 8000a84:	2d00      	cmp	r5, #0
 8000a86:	d119      	bne.n	8000abc <__aeabi_fdiv+0x148>
 8000a88:	2101      	movs	r1, #1
 8000a8a:	e7f1      	b.n	8000a70 <__aeabi_fdiv+0xfc>
 8000a8c:	230c      	movs	r3, #12
 8000a8e:	4699      	mov	r9, r3
 8000a90:	3b09      	subs	r3, #9
 8000a92:	26ff      	movs	r6, #255	; 0xff
 8000a94:	469b      	mov	fp, r3
 8000a96:	e785      	b.n	80009a4 <__aeabi_fdiv+0x30>
 8000a98:	0020      	movs	r0, r4
 8000a9a:	f002 faed 	bl	8003078 <__clzsi2>
 8000a9e:	2676      	movs	r6, #118	; 0x76
 8000aa0:	1f43      	subs	r3, r0, #5
 8000aa2:	409c      	lsls	r4, r3
 8000aa4:	2300      	movs	r3, #0
 8000aa6:	4276      	negs	r6, r6
 8000aa8:	1a36      	subs	r6, r6, r0
 8000aaa:	4699      	mov	r9, r3
 8000aac:	469b      	mov	fp, r3
 8000aae:	e779      	b.n	80009a4 <__aeabi_fdiv+0x30>
 8000ab0:	464a      	mov	r2, r9
 8000ab2:	2303      	movs	r3, #3
 8000ab4:	431a      	orrs	r2, r3
 8000ab6:	4691      	mov	r9, r2
 8000ab8:	2103      	movs	r1, #3
 8000aba:	e786      	b.n	80009ca <__aeabi_fdiv+0x56>
 8000abc:	0028      	movs	r0, r5
 8000abe:	f002 fadb 	bl	8003078 <__clzsi2>
 8000ac2:	1f43      	subs	r3, r0, #5
 8000ac4:	1836      	adds	r6, r6, r0
 8000ac6:	409d      	lsls	r5, r3
 8000ac8:	3676      	adds	r6, #118	; 0x76
 8000aca:	2100      	movs	r1, #0
 8000acc:	e77d      	b.n	80009ca <__aeabi_fdiv+0x56>
 8000ace:	2480      	movs	r4, #128	; 0x80
 8000ad0:	2300      	movs	r3, #0
 8000ad2:	03e4      	lsls	r4, r4, #15
 8000ad4:	22ff      	movs	r2, #255	; 0xff
 8000ad6:	e7ac      	b.n	8000a32 <__aeabi_fdiv+0xbe>
 8000ad8:	2500      	movs	r5, #0
 8000ada:	2380      	movs	r3, #128	; 0x80
 8000adc:	03db      	lsls	r3, r3, #15
 8000ade:	421c      	tst	r4, r3
 8000ae0:	d028      	beq.n	8000b34 <__aeabi_fdiv+0x1c0>
 8000ae2:	421d      	tst	r5, r3
 8000ae4:	d126      	bne.n	8000b34 <__aeabi_fdiv+0x1c0>
 8000ae6:	432b      	orrs	r3, r5
 8000ae8:	025c      	lsls	r4, r3, #9
 8000aea:	0a64      	lsrs	r4, r4, #9
 8000aec:	4643      	mov	r3, r8
 8000aee:	22ff      	movs	r2, #255	; 0xff
 8000af0:	e79f      	b.n	8000a32 <__aeabi_fdiv+0xbe>
 8000af2:	0162      	lsls	r2, r4, #5
 8000af4:	016c      	lsls	r4, r5, #5
 8000af6:	42a2      	cmp	r2, r4
 8000af8:	d224      	bcs.n	8000b44 <__aeabi_fdiv+0x1d0>
 8000afa:	211b      	movs	r1, #27
 8000afc:	2500      	movs	r5, #0
 8000afe:	3e01      	subs	r6, #1
 8000b00:	2701      	movs	r7, #1
 8000b02:	0010      	movs	r0, r2
 8000b04:	006d      	lsls	r5, r5, #1
 8000b06:	0052      	lsls	r2, r2, #1
 8000b08:	2800      	cmp	r0, #0
 8000b0a:	db01      	blt.n	8000b10 <__aeabi_fdiv+0x19c>
 8000b0c:	4294      	cmp	r4, r2
 8000b0e:	d801      	bhi.n	8000b14 <__aeabi_fdiv+0x1a0>
 8000b10:	1b12      	subs	r2, r2, r4
 8000b12:	433d      	orrs	r5, r7
 8000b14:	3901      	subs	r1, #1
 8000b16:	2900      	cmp	r1, #0
 8000b18:	d1f3      	bne.n	8000b02 <__aeabi_fdiv+0x18e>
 8000b1a:	0014      	movs	r4, r2
 8000b1c:	1e62      	subs	r2, r4, #1
 8000b1e:	4194      	sbcs	r4, r2
 8000b20:	4325      	orrs	r5, r4
 8000b22:	e76d      	b.n	8000a00 <__aeabi_fdiv+0x8c>
 8000b24:	46ba      	mov	sl, r7
 8000b26:	4659      	mov	r1, fp
 8000b28:	0025      	movs	r5, r4
 8000b2a:	4653      	mov	r3, sl
 8000b2c:	2902      	cmp	r1, #2
 8000b2e:	d000      	beq.n	8000b32 <__aeabi_fdiv+0x1be>
 8000b30:	e761      	b.n	80009f6 <__aeabi_fdiv+0x82>
 8000b32:	e77c      	b.n	8000a2e <__aeabi_fdiv+0xba>
 8000b34:	2380      	movs	r3, #128	; 0x80
 8000b36:	03db      	lsls	r3, r3, #15
 8000b38:	431c      	orrs	r4, r3
 8000b3a:	0264      	lsls	r4, r4, #9
 8000b3c:	0a64      	lsrs	r4, r4, #9
 8000b3e:	003b      	movs	r3, r7
 8000b40:	22ff      	movs	r2, #255	; 0xff
 8000b42:	e776      	b.n	8000a32 <__aeabi_fdiv+0xbe>
 8000b44:	1b12      	subs	r2, r2, r4
 8000b46:	211a      	movs	r1, #26
 8000b48:	2501      	movs	r5, #1
 8000b4a:	e7d9      	b.n	8000b00 <__aeabi_fdiv+0x18c>
 8000b4c:	369e      	adds	r6, #158	; 0x9e
 8000b4e:	002a      	movs	r2, r5
 8000b50:	40b5      	lsls	r5, r6
 8000b52:	002c      	movs	r4, r5
 8000b54:	40c2      	lsrs	r2, r0
 8000b56:	1e65      	subs	r5, r4, #1
 8000b58:	41ac      	sbcs	r4, r5
 8000b5a:	4314      	orrs	r4, r2
 8000b5c:	0762      	lsls	r2, r4, #29
 8000b5e:	d004      	beq.n	8000b6a <__aeabi_fdiv+0x1f6>
 8000b60:	220f      	movs	r2, #15
 8000b62:	4022      	ands	r2, r4
 8000b64:	2a04      	cmp	r2, #4
 8000b66:	d000      	beq.n	8000b6a <__aeabi_fdiv+0x1f6>
 8000b68:	3404      	adds	r4, #4
 8000b6a:	0162      	lsls	r2, r4, #5
 8000b6c:	d403      	bmi.n	8000b76 <__aeabi_fdiv+0x202>
 8000b6e:	01a4      	lsls	r4, r4, #6
 8000b70:	0a64      	lsrs	r4, r4, #9
 8000b72:	2200      	movs	r2, #0
 8000b74:	e75d      	b.n	8000a32 <__aeabi_fdiv+0xbe>
 8000b76:	2201      	movs	r2, #1
 8000b78:	2400      	movs	r4, #0
 8000b7a:	e75a      	b.n	8000a32 <__aeabi_fdiv+0xbe>
 8000b7c:	2480      	movs	r4, #128	; 0x80
 8000b7e:	03e4      	lsls	r4, r4, #15
 8000b80:	432c      	orrs	r4, r5
 8000b82:	0264      	lsls	r4, r4, #9
 8000b84:	0a64      	lsrs	r4, r4, #9
 8000b86:	22ff      	movs	r2, #255	; 0xff
 8000b88:	e753      	b.n	8000a32 <__aeabi_fdiv+0xbe>
 8000b8a:	46c0      	nop			; (mov r8, r8)
 8000b8c:	0800bbb4 	.word	0x0800bbb4
 8000b90:	f7ffffff 	.word	0xf7ffffff
 8000b94:	0800bbf4 	.word	0x0800bbf4

08000b98 <__eqsf2>:
 8000b98:	b570      	push	{r4, r5, r6, lr}
 8000b9a:	0042      	lsls	r2, r0, #1
 8000b9c:	024e      	lsls	r6, r1, #9
 8000b9e:	004c      	lsls	r4, r1, #1
 8000ba0:	0245      	lsls	r5, r0, #9
 8000ba2:	0a6d      	lsrs	r5, r5, #9
 8000ba4:	0e12      	lsrs	r2, r2, #24
 8000ba6:	0fc3      	lsrs	r3, r0, #31
 8000ba8:	0a76      	lsrs	r6, r6, #9
 8000baa:	0e24      	lsrs	r4, r4, #24
 8000bac:	0fc9      	lsrs	r1, r1, #31
 8000bae:	2aff      	cmp	r2, #255	; 0xff
 8000bb0:	d00f      	beq.n	8000bd2 <__eqsf2+0x3a>
 8000bb2:	2cff      	cmp	r4, #255	; 0xff
 8000bb4:	d011      	beq.n	8000bda <__eqsf2+0x42>
 8000bb6:	2001      	movs	r0, #1
 8000bb8:	42a2      	cmp	r2, r4
 8000bba:	d000      	beq.n	8000bbe <__eqsf2+0x26>
 8000bbc:	bd70      	pop	{r4, r5, r6, pc}
 8000bbe:	42b5      	cmp	r5, r6
 8000bc0:	d1fc      	bne.n	8000bbc <__eqsf2+0x24>
 8000bc2:	428b      	cmp	r3, r1
 8000bc4:	d00d      	beq.n	8000be2 <__eqsf2+0x4a>
 8000bc6:	2a00      	cmp	r2, #0
 8000bc8:	d1f8      	bne.n	8000bbc <__eqsf2+0x24>
 8000bca:	0028      	movs	r0, r5
 8000bcc:	1e45      	subs	r5, r0, #1
 8000bce:	41a8      	sbcs	r0, r5
 8000bd0:	e7f4      	b.n	8000bbc <__eqsf2+0x24>
 8000bd2:	2001      	movs	r0, #1
 8000bd4:	2d00      	cmp	r5, #0
 8000bd6:	d1f1      	bne.n	8000bbc <__eqsf2+0x24>
 8000bd8:	e7eb      	b.n	8000bb2 <__eqsf2+0x1a>
 8000bda:	2001      	movs	r0, #1
 8000bdc:	2e00      	cmp	r6, #0
 8000bde:	d1ed      	bne.n	8000bbc <__eqsf2+0x24>
 8000be0:	e7e9      	b.n	8000bb6 <__eqsf2+0x1e>
 8000be2:	2000      	movs	r0, #0
 8000be4:	e7ea      	b.n	8000bbc <__eqsf2+0x24>
 8000be6:	46c0      	nop			; (mov r8, r8)

08000be8 <__gesf2>:
 8000be8:	b570      	push	{r4, r5, r6, lr}
 8000bea:	004a      	lsls	r2, r1, #1
 8000bec:	024e      	lsls	r6, r1, #9
 8000bee:	0245      	lsls	r5, r0, #9
 8000bf0:	0044      	lsls	r4, r0, #1
 8000bf2:	0a6d      	lsrs	r5, r5, #9
 8000bf4:	0e24      	lsrs	r4, r4, #24
 8000bf6:	0fc3      	lsrs	r3, r0, #31
 8000bf8:	0a76      	lsrs	r6, r6, #9
 8000bfa:	0e12      	lsrs	r2, r2, #24
 8000bfc:	0fc9      	lsrs	r1, r1, #31
 8000bfe:	2cff      	cmp	r4, #255	; 0xff
 8000c00:	d015      	beq.n	8000c2e <__gesf2+0x46>
 8000c02:	2aff      	cmp	r2, #255	; 0xff
 8000c04:	d00e      	beq.n	8000c24 <__gesf2+0x3c>
 8000c06:	2c00      	cmp	r4, #0
 8000c08:	d115      	bne.n	8000c36 <__gesf2+0x4e>
 8000c0a:	2a00      	cmp	r2, #0
 8000c0c:	d101      	bne.n	8000c12 <__gesf2+0x2a>
 8000c0e:	2e00      	cmp	r6, #0
 8000c10:	d01c      	beq.n	8000c4c <__gesf2+0x64>
 8000c12:	2d00      	cmp	r5, #0
 8000c14:	d014      	beq.n	8000c40 <__gesf2+0x58>
 8000c16:	428b      	cmp	r3, r1
 8000c18:	d027      	beq.n	8000c6a <__gesf2+0x82>
 8000c1a:	2002      	movs	r0, #2
 8000c1c:	3b01      	subs	r3, #1
 8000c1e:	4018      	ands	r0, r3
 8000c20:	3801      	subs	r0, #1
 8000c22:	bd70      	pop	{r4, r5, r6, pc}
 8000c24:	2e00      	cmp	r6, #0
 8000c26:	d0ee      	beq.n	8000c06 <__gesf2+0x1e>
 8000c28:	2002      	movs	r0, #2
 8000c2a:	4240      	negs	r0, r0
 8000c2c:	e7f9      	b.n	8000c22 <__gesf2+0x3a>
 8000c2e:	2d00      	cmp	r5, #0
 8000c30:	d1fa      	bne.n	8000c28 <__gesf2+0x40>
 8000c32:	2aff      	cmp	r2, #255	; 0xff
 8000c34:	d00e      	beq.n	8000c54 <__gesf2+0x6c>
 8000c36:	2a00      	cmp	r2, #0
 8000c38:	d10e      	bne.n	8000c58 <__gesf2+0x70>
 8000c3a:	2e00      	cmp	r6, #0
 8000c3c:	d0ed      	beq.n	8000c1a <__gesf2+0x32>
 8000c3e:	e00b      	b.n	8000c58 <__gesf2+0x70>
 8000c40:	2301      	movs	r3, #1
 8000c42:	3901      	subs	r1, #1
 8000c44:	4399      	bics	r1, r3
 8000c46:	0008      	movs	r0, r1
 8000c48:	3001      	adds	r0, #1
 8000c4a:	e7ea      	b.n	8000c22 <__gesf2+0x3a>
 8000c4c:	2000      	movs	r0, #0
 8000c4e:	2d00      	cmp	r5, #0
 8000c50:	d0e7      	beq.n	8000c22 <__gesf2+0x3a>
 8000c52:	e7e2      	b.n	8000c1a <__gesf2+0x32>
 8000c54:	2e00      	cmp	r6, #0
 8000c56:	d1e7      	bne.n	8000c28 <__gesf2+0x40>
 8000c58:	428b      	cmp	r3, r1
 8000c5a:	d1de      	bne.n	8000c1a <__gesf2+0x32>
 8000c5c:	4294      	cmp	r4, r2
 8000c5e:	dd05      	ble.n	8000c6c <__gesf2+0x84>
 8000c60:	2102      	movs	r1, #2
 8000c62:	1e58      	subs	r0, r3, #1
 8000c64:	4008      	ands	r0, r1
 8000c66:	3801      	subs	r0, #1
 8000c68:	e7db      	b.n	8000c22 <__gesf2+0x3a>
 8000c6a:	2400      	movs	r4, #0
 8000c6c:	42a2      	cmp	r2, r4
 8000c6e:	dc04      	bgt.n	8000c7a <__gesf2+0x92>
 8000c70:	42b5      	cmp	r5, r6
 8000c72:	d8d2      	bhi.n	8000c1a <__gesf2+0x32>
 8000c74:	2000      	movs	r0, #0
 8000c76:	42b5      	cmp	r5, r6
 8000c78:	d2d3      	bcs.n	8000c22 <__gesf2+0x3a>
 8000c7a:	1e58      	subs	r0, r3, #1
 8000c7c:	2301      	movs	r3, #1
 8000c7e:	4398      	bics	r0, r3
 8000c80:	3001      	adds	r0, #1
 8000c82:	e7ce      	b.n	8000c22 <__gesf2+0x3a>

08000c84 <__lesf2>:
 8000c84:	b530      	push	{r4, r5, lr}
 8000c86:	0042      	lsls	r2, r0, #1
 8000c88:	0244      	lsls	r4, r0, #9
 8000c8a:	024d      	lsls	r5, r1, #9
 8000c8c:	0fc3      	lsrs	r3, r0, #31
 8000c8e:	0048      	lsls	r0, r1, #1
 8000c90:	0a64      	lsrs	r4, r4, #9
 8000c92:	0e12      	lsrs	r2, r2, #24
 8000c94:	0a6d      	lsrs	r5, r5, #9
 8000c96:	0e00      	lsrs	r0, r0, #24
 8000c98:	0fc9      	lsrs	r1, r1, #31
 8000c9a:	2aff      	cmp	r2, #255	; 0xff
 8000c9c:	d012      	beq.n	8000cc4 <__lesf2+0x40>
 8000c9e:	28ff      	cmp	r0, #255	; 0xff
 8000ca0:	d00c      	beq.n	8000cbc <__lesf2+0x38>
 8000ca2:	2a00      	cmp	r2, #0
 8000ca4:	d112      	bne.n	8000ccc <__lesf2+0x48>
 8000ca6:	2800      	cmp	r0, #0
 8000ca8:	d119      	bne.n	8000cde <__lesf2+0x5a>
 8000caa:	2d00      	cmp	r5, #0
 8000cac:	d117      	bne.n	8000cde <__lesf2+0x5a>
 8000cae:	2c00      	cmp	r4, #0
 8000cb0:	d02b      	beq.n	8000d0a <__lesf2+0x86>
 8000cb2:	2002      	movs	r0, #2
 8000cb4:	3b01      	subs	r3, #1
 8000cb6:	4018      	ands	r0, r3
 8000cb8:	3801      	subs	r0, #1
 8000cba:	e026      	b.n	8000d0a <__lesf2+0x86>
 8000cbc:	2d00      	cmp	r5, #0
 8000cbe:	d0f0      	beq.n	8000ca2 <__lesf2+0x1e>
 8000cc0:	2002      	movs	r0, #2
 8000cc2:	e022      	b.n	8000d0a <__lesf2+0x86>
 8000cc4:	2c00      	cmp	r4, #0
 8000cc6:	d1fb      	bne.n	8000cc0 <__lesf2+0x3c>
 8000cc8:	28ff      	cmp	r0, #255	; 0xff
 8000cca:	d01f      	beq.n	8000d0c <__lesf2+0x88>
 8000ccc:	2800      	cmp	r0, #0
 8000cce:	d11f      	bne.n	8000d10 <__lesf2+0x8c>
 8000cd0:	2d00      	cmp	r5, #0
 8000cd2:	d11d      	bne.n	8000d10 <__lesf2+0x8c>
 8000cd4:	2002      	movs	r0, #2
 8000cd6:	3b01      	subs	r3, #1
 8000cd8:	4018      	ands	r0, r3
 8000cda:	3801      	subs	r0, #1
 8000cdc:	e015      	b.n	8000d0a <__lesf2+0x86>
 8000cde:	2c00      	cmp	r4, #0
 8000ce0:	d00e      	beq.n	8000d00 <__lesf2+0x7c>
 8000ce2:	428b      	cmp	r3, r1
 8000ce4:	d1e5      	bne.n	8000cb2 <__lesf2+0x2e>
 8000ce6:	2200      	movs	r2, #0
 8000ce8:	4290      	cmp	r0, r2
 8000cea:	dc04      	bgt.n	8000cf6 <__lesf2+0x72>
 8000cec:	42ac      	cmp	r4, r5
 8000cee:	d8e0      	bhi.n	8000cb2 <__lesf2+0x2e>
 8000cf0:	2000      	movs	r0, #0
 8000cf2:	42ac      	cmp	r4, r5
 8000cf4:	d209      	bcs.n	8000d0a <__lesf2+0x86>
 8000cf6:	1e58      	subs	r0, r3, #1
 8000cf8:	2301      	movs	r3, #1
 8000cfa:	4398      	bics	r0, r3
 8000cfc:	3001      	adds	r0, #1
 8000cfe:	e004      	b.n	8000d0a <__lesf2+0x86>
 8000d00:	2301      	movs	r3, #1
 8000d02:	3901      	subs	r1, #1
 8000d04:	4399      	bics	r1, r3
 8000d06:	0008      	movs	r0, r1
 8000d08:	3001      	adds	r0, #1
 8000d0a:	bd30      	pop	{r4, r5, pc}
 8000d0c:	2d00      	cmp	r5, #0
 8000d0e:	d1d7      	bne.n	8000cc0 <__lesf2+0x3c>
 8000d10:	428b      	cmp	r3, r1
 8000d12:	d1ce      	bne.n	8000cb2 <__lesf2+0x2e>
 8000d14:	4282      	cmp	r2, r0
 8000d16:	dde7      	ble.n	8000ce8 <__lesf2+0x64>
 8000d18:	2102      	movs	r1, #2
 8000d1a:	1e58      	subs	r0, r3, #1
 8000d1c:	4008      	ands	r0, r1
 8000d1e:	3801      	subs	r0, #1
 8000d20:	e7f3      	b.n	8000d0a <__lesf2+0x86>
 8000d22:	46c0      	nop			; (mov r8, r8)

08000d24 <__aeabi_fmul>:
 8000d24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d26:	464e      	mov	r6, r9
 8000d28:	4657      	mov	r7, sl
 8000d2a:	4645      	mov	r5, r8
 8000d2c:	46de      	mov	lr, fp
 8000d2e:	b5e0      	push	{r5, r6, r7, lr}
 8000d30:	0243      	lsls	r3, r0, #9
 8000d32:	0a5b      	lsrs	r3, r3, #9
 8000d34:	0045      	lsls	r5, r0, #1
 8000d36:	b083      	sub	sp, #12
 8000d38:	1c0f      	adds	r7, r1, #0
 8000d3a:	4699      	mov	r9, r3
 8000d3c:	0e2d      	lsrs	r5, r5, #24
 8000d3e:	0fc6      	lsrs	r6, r0, #31
 8000d40:	2d00      	cmp	r5, #0
 8000d42:	d057      	beq.n	8000df4 <__aeabi_fmul+0xd0>
 8000d44:	2dff      	cmp	r5, #255	; 0xff
 8000d46:	d024      	beq.n	8000d92 <__aeabi_fmul+0x6e>
 8000d48:	2080      	movs	r0, #128	; 0x80
 8000d4a:	00db      	lsls	r3, r3, #3
 8000d4c:	04c0      	lsls	r0, r0, #19
 8000d4e:	4318      	orrs	r0, r3
 8000d50:	2300      	movs	r3, #0
 8000d52:	4681      	mov	r9, r0
 8000d54:	469a      	mov	sl, r3
 8000d56:	469b      	mov	fp, r3
 8000d58:	3d7f      	subs	r5, #127	; 0x7f
 8000d5a:	027c      	lsls	r4, r7, #9
 8000d5c:	007a      	lsls	r2, r7, #1
 8000d5e:	0ffb      	lsrs	r3, r7, #31
 8000d60:	0a64      	lsrs	r4, r4, #9
 8000d62:	0e12      	lsrs	r2, r2, #24
 8000d64:	4698      	mov	r8, r3
 8000d66:	d023      	beq.n	8000db0 <__aeabi_fmul+0x8c>
 8000d68:	2aff      	cmp	r2, #255	; 0xff
 8000d6a:	d04b      	beq.n	8000e04 <__aeabi_fmul+0xe0>
 8000d6c:	00e3      	lsls	r3, r4, #3
 8000d6e:	2480      	movs	r4, #128	; 0x80
 8000d70:	2000      	movs	r0, #0
 8000d72:	04e4      	lsls	r4, r4, #19
 8000d74:	3a7f      	subs	r2, #127	; 0x7f
 8000d76:	431c      	orrs	r4, r3
 8000d78:	18ad      	adds	r5, r5, r2
 8000d7a:	1c6b      	adds	r3, r5, #1
 8000d7c:	4647      	mov	r7, r8
 8000d7e:	9301      	str	r3, [sp, #4]
 8000d80:	4653      	mov	r3, sl
 8000d82:	4077      	eors	r7, r6
 8000d84:	003a      	movs	r2, r7
 8000d86:	2b0f      	cmp	r3, #15
 8000d88:	d848      	bhi.n	8000e1c <__aeabi_fmul+0xf8>
 8000d8a:	497d      	ldr	r1, [pc, #500]	; (8000f80 <__aeabi_fmul+0x25c>)
 8000d8c:	009b      	lsls	r3, r3, #2
 8000d8e:	58cb      	ldr	r3, [r1, r3]
 8000d90:	469f      	mov	pc, r3
 8000d92:	2b00      	cmp	r3, #0
 8000d94:	d000      	beq.n	8000d98 <__aeabi_fmul+0x74>
 8000d96:	e085      	b.n	8000ea4 <__aeabi_fmul+0x180>
 8000d98:	3308      	adds	r3, #8
 8000d9a:	469a      	mov	sl, r3
 8000d9c:	3b06      	subs	r3, #6
 8000d9e:	469b      	mov	fp, r3
 8000da0:	027c      	lsls	r4, r7, #9
 8000da2:	007a      	lsls	r2, r7, #1
 8000da4:	0ffb      	lsrs	r3, r7, #31
 8000da6:	25ff      	movs	r5, #255	; 0xff
 8000da8:	0a64      	lsrs	r4, r4, #9
 8000daa:	0e12      	lsrs	r2, r2, #24
 8000dac:	4698      	mov	r8, r3
 8000dae:	d1db      	bne.n	8000d68 <__aeabi_fmul+0x44>
 8000db0:	2c00      	cmp	r4, #0
 8000db2:	d000      	beq.n	8000db6 <__aeabi_fmul+0x92>
 8000db4:	e090      	b.n	8000ed8 <__aeabi_fmul+0x1b4>
 8000db6:	4652      	mov	r2, sl
 8000db8:	2301      	movs	r3, #1
 8000dba:	431a      	orrs	r2, r3
 8000dbc:	4692      	mov	sl, r2
 8000dbe:	2001      	movs	r0, #1
 8000dc0:	e7db      	b.n	8000d7a <__aeabi_fmul+0x56>
 8000dc2:	464c      	mov	r4, r9
 8000dc4:	4658      	mov	r0, fp
 8000dc6:	0017      	movs	r7, r2
 8000dc8:	2802      	cmp	r0, #2
 8000dca:	d024      	beq.n	8000e16 <__aeabi_fmul+0xf2>
 8000dcc:	2803      	cmp	r0, #3
 8000dce:	d100      	bne.n	8000dd2 <__aeabi_fmul+0xae>
 8000dd0:	e0cf      	b.n	8000f72 <__aeabi_fmul+0x24e>
 8000dd2:	2200      	movs	r2, #0
 8000dd4:	2300      	movs	r3, #0
 8000dd6:	2801      	cmp	r0, #1
 8000dd8:	d14d      	bne.n	8000e76 <__aeabi_fmul+0x152>
 8000dda:	0258      	lsls	r0, r3, #9
 8000ddc:	05d2      	lsls	r2, r2, #23
 8000dde:	0a40      	lsrs	r0, r0, #9
 8000de0:	07ff      	lsls	r7, r7, #31
 8000de2:	4310      	orrs	r0, r2
 8000de4:	4338      	orrs	r0, r7
 8000de6:	b003      	add	sp, #12
 8000de8:	bc3c      	pop	{r2, r3, r4, r5}
 8000dea:	4690      	mov	r8, r2
 8000dec:	4699      	mov	r9, r3
 8000dee:	46a2      	mov	sl, r4
 8000df0:	46ab      	mov	fp, r5
 8000df2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000df4:	2b00      	cmp	r3, #0
 8000df6:	d15b      	bne.n	8000eb0 <__aeabi_fmul+0x18c>
 8000df8:	2304      	movs	r3, #4
 8000dfa:	469a      	mov	sl, r3
 8000dfc:	3b03      	subs	r3, #3
 8000dfe:	2500      	movs	r5, #0
 8000e00:	469b      	mov	fp, r3
 8000e02:	e7aa      	b.n	8000d5a <__aeabi_fmul+0x36>
 8000e04:	35ff      	adds	r5, #255	; 0xff
 8000e06:	2c00      	cmp	r4, #0
 8000e08:	d160      	bne.n	8000ecc <__aeabi_fmul+0x1a8>
 8000e0a:	4652      	mov	r2, sl
 8000e0c:	2302      	movs	r3, #2
 8000e0e:	431a      	orrs	r2, r3
 8000e10:	4692      	mov	sl, r2
 8000e12:	2002      	movs	r0, #2
 8000e14:	e7b1      	b.n	8000d7a <__aeabi_fmul+0x56>
 8000e16:	22ff      	movs	r2, #255	; 0xff
 8000e18:	2300      	movs	r3, #0
 8000e1a:	e7de      	b.n	8000dda <__aeabi_fmul+0xb6>
 8000e1c:	464b      	mov	r3, r9
 8000e1e:	0c1b      	lsrs	r3, r3, #16
 8000e20:	469c      	mov	ip, r3
 8000e22:	464b      	mov	r3, r9
 8000e24:	0426      	lsls	r6, r4, #16
 8000e26:	0c36      	lsrs	r6, r6, #16
 8000e28:	0418      	lsls	r0, r3, #16
 8000e2a:	4661      	mov	r1, ip
 8000e2c:	0033      	movs	r3, r6
 8000e2e:	0c22      	lsrs	r2, r4, #16
 8000e30:	4664      	mov	r4, ip
 8000e32:	0c00      	lsrs	r0, r0, #16
 8000e34:	4343      	muls	r3, r0
 8000e36:	434e      	muls	r6, r1
 8000e38:	4350      	muls	r0, r2
 8000e3a:	4354      	muls	r4, r2
 8000e3c:	1980      	adds	r0, r0, r6
 8000e3e:	0c1a      	lsrs	r2, r3, #16
 8000e40:	1812      	adds	r2, r2, r0
 8000e42:	4296      	cmp	r6, r2
 8000e44:	d903      	bls.n	8000e4e <__aeabi_fmul+0x12a>
 8000e46:	2180      	movs	r1, #128	; 0x80
 8000e48:	0249      	lsls	r1, r1, #9
 8000e4a:	468c      	mov	ip, r1
 8000e4c:	4464      	add	r4, ip
 8000e4e:	041b      	lsls	r3, r3, #16
 8000e50:	0c1b      	lsrs	r3, r3, #16
 8000e52:	0410      	lsls	r0, r2, #16
 8000e54:	18c0      	adds	r0, r0, r3
 8000e56:	0183      	lsls	r3, r0, #6
 8000e58:	1e5e      	subs	r6, r3, #1
 8000e5a:	41b3      	sbcs	r3, r6
 8000e5c:	0e80      	lsrs	r0, r0, #26
 8000e5e:	4318      	orrs	r0, r3
 8000e60:	0c13      	lsrs	r3, r2, #16
 8000e62:	191b      	adds	r3, r3, r4
 8000e64:	019b      	lsls	r3, r3, #6
 8000e66:	4303      	orrs	r3, r0
 8000e68:	001c      	movs	r4, r3
 8000e6a:	0123      	lsls	r3, r4, #4
 8000e6c:	d579      	bpl.n	8000f62 <__aeabi_fmul+0x23e>
 8000e6e:	2301      	movs	r3, #1
 8000e70:	0862      	lsrs	r2, r4, #1
 8000e72:	401c      	ands	r4, r3
 8000e74:	4314      	orrs	r4, r2
 8000e76:	9a01      	ldr	r2, [sp, #4]
 8000e78:	327f      	adds	r2, #127	; 0x7f
 8000e7a:	2a00      	cmp	r2, #0
 8000e7c:	dd4d      	ble.n	8000f1a <__aeabi_fmul+0x1f6>
 8000e7e:	0763      	lsls	r3, r4, #29
 8000e80:	d004      	beq.n	8000e8c <__aeabi_fmul+0x168>
 8000e82:	230f      	movs	r3, #15
 8000e84:	4023      	ands	r3, r4
 8000e86:	2b04      	cmp	r3, #4
 8000e88:	d000      	beq.n	8000e8c <__aeabi_fmul+0x168>
 8000e8a:	3404      	adds	r4, #4
 8000e8c:	0123      	lsls	r3, r4, #4
 8000e8e:	d503      	bpl.n	8000e98 <__aeabi_fmul+0x174>
 8000e90:	4b3c      	ldr	r3, [pc, #240]	; (8000f84 <__aeabi_fmul+0x260>)
 8000e92:	9a01      	ldr	r2, [sp, #4]
 8000e94:	401c      	ands	r4, r3
 8000e96:	3280      	adds	r2, #128	; 0x80
 8000e98:	2afe      	cmp	r2, #254	; 0xfe
 8000e9a:	dcbc      	bgt.n	8000e16 <__aeabi_fmul+0xf2>
 8000e9c:	01a3      	lsls	r3, r4, #6
 8000e9e:	0a5b      	lsrs	r3, r3, #9
 8000ea0:	b2d2      	uxtb	r2, r2
 8000ea2:	e79a      	b.n	8000dda <__aeabi_fmul+0xb6>
 8000ea4:	230c      	movs	r3, #12
 8000ea6:	469a      	mov	sl, r3
 8000ea8:	3b09      	subs	r3, #9
 8000eaa:	25ff      	movs	r5, #255	; 0xff
 8000eac:	469b      	mov	fp, r3
 8000eae:	e754      	b.n	8000d5a <__aeabi_fmul+0x36>
 8000eb0:	0018      	movs	r0, r3
 8000eb2:	f002 f8e1 	bl	8003078 <__clzsi2>
 8000eb6:	464a      	mov	r2, r9
 8000eb8:	1f43      	subs	r3, r0, #5
 8000eba:	2576      	movs	r5, #118	; 0x76
 8000ebc:	409a      	lsls	r2, r3
 8000ebe:	2300      	movs	r3, #0
 8000ec0:	426d      	negs	r5, r5
 8000ec2:	4691      	mov	r9, r2
 8000ec4:	1a2d      	subs	r5, r5, r0
 8000ec6:	469a      	mov	sl, r3
 8000ec8:	469b      	mov	fp, r3
 8000eca:	e746      	b.n	8000d5a <__aeabi_fmul+0x36>
 8000ecc:	4652      	mov	r2, sl
 8000ece:	2303      	movs	r3, #3
 8000ed0:	431a      	orrs	r2, r3
 8000ed2:	4692      	mov	sl, r2
 8000ed4:	2003      	movs	r0, #3
 8000ed6:	e750      	b.n	8000d7a <__aeabi_fmul+0x56>
 8000ed8:	0020      	movs	r0, r4
 8000eda:	f002 f8cd 	bl	8003078 <__clzsi2>
 8000ede:	1f43      	subs	r3, r0, #5
 8000ee0:	1a2d      	subs	r5, r5, r0
 8000ee2:	409c      	lsls	r4, r3
 8000ee4:	3d76      	subs	r5, #118	; 0x76
 8000ee6:	2000      	movs	r0, #0
 8000ee8:	e747      	b.n	8000d7a <__aeabi_fmul+0x56>
 8000eea:	2380      	movs	r3, #128	; 0x80
 8000eec:	2700      	movs	r7, #0
 8000eee:	03db      	lsls	r3, r3, #15
 8000ef0:	22ff      	movs	r2, #255	; 0xff
 8000ef2:	e772      	b.n	8000dda <__aeabi_fmul+0xb6>
 8000ef4:	4642      	mov	r2, r8
 8000ef6:	e766      	b.n	8000dc6 <__aeabi_fmul+0xa2>
 8000ef8:	464c      	mov	r4, r9
 8000efa:	0032      	movs	r2, r6
 8000efc:	4658      	mov	r0, fp
 8000efe:	e762      	b.n	8000dc6 <__aeabi_fmul+0xa2>
 8000f00:	2380      	movs	r3, #128	; 0x80
 8000f02:	464a      	mov	r2, r9
 8000f04:	03db      	lsls	r3, r3, #15
 8000f06:	421a      	tst	r2, r3
 8000f08:	d022      	beq.n	8000f50 <__aeabi_fmul+0x22c>
 8000f0a:	421c      	tst	r4, r3
 8000f0c:	d120      	bne.n	8000f50 <__aeabi_fmul+0x22c>
 8000f0e:	4323      	orrs	r3, r4
 8000f10:	025b      	lsls	r3, r3, #9
 8000f12:	0a5b      	lsrs	r3, r3, #9
 8000f14:	4647      	mov	r7, r8
 8000f16:	22ff      	movs	r2, #255	; 0xff
 8000f18:	e75f      	b.n	8000dda <__aeabi_fmul+0xb6>
 8000f1a:	2301      	movs	r3, #1
 8000f1c:	1a9a      	subs	r2, r3, r2
 8000f1e:	2a1b      	cmp	r2, #27
 8000f20:	dc21      	bgt.n	8000f66 <__aeabi_fmul+0x242>
 8000f22:	0023      	movs	r3, r4
 8000f24:	9901      	ldr	r1, [sp, #4]
 8000f26:	40d3      	lsrs	r3, r2
 8000f28:	319e      	adds	r1, #158	; 0x9e
 8000f2a:	408c      	lsls	r4, r1
 8000f2c:	001a      	movs	r2, r3
 8000f2e:	0023      	movs	r3, r4
 8000f30:	1e5c      	subs	r4, r3, #1
 8000f32:	41a3      	sbcs	r3, r4
 8000f34:	4313      	orrs	r3, r2
 8000f36:	075a      	lsls	r2, r3, #29
 8000f38:	d004      	beq.n	8000f44 <__aeabi_fmul+0x220>
 8000f3a:	220f      	movs	r2, #15
 8000f3c:	401a      	ands	r2, r3
 8000f3e:	2a04      	cmp	r2, #4
 8000f40:	d000      	beq.n	8000f44 <__aeabi_fmul+0x220>
 8000f42:	3304      	adds	r3, #4
 8000f44:	015a      	lsls	r2, r3, #5
 8000f46:	d411      	bmi.n	8000f6c <__aeabi_fmul+0x248>
 8000f48:	019b      	lsls	r3, r3, #6
 8000f4a:	0a5b      	lsrs	r3, r3, #9
 8000f4c:	2200      	movs	r2, #0
 8000f4e:	e744      	b.n	8000dda <__aeabi_fmul+0xb6>
 8000f50:	2380      	movs	r3, #128	; 0x80
 8000f52:	464a      	mov	r2, r9
 8000f54:	03db      	lsls	r3, r3, #15
 8000f56:	4313      	orrs	r3, r2
 8000f58:	025b      	lsls	r3, r3, #9
 8000f5a:	0a5b      	lsrs	r3, r3, #9
 8000f5c:	0037      	movs	r7, r6
 8000f5e:	22ff      	movs	r2, #255	; 0xff
 8000f60:	e73b      	b.n	8000dda <__aeabi_fmul+0xb6>
 8000f62:	9501      	str	r5, [sp, #4]
 8000f64:	e787      	b.n	8000e76 <__aeabi_fmul+0x152>
 8000f66:	2200      	movs	r2, #0
 8000f68:	2300      	movs	r3, #0
 8000f6a:	e736      	b.n	8000dda <__aeabi_fmul+0xb6>
 8000f6c:	2201      	movs	r2, #1
 8000f6e:	2300      	movs	r3, #0
 8000f70:	e733      	b.n	8000dda <__aeabi_fmul+0xb6>
 8000f72:	2380      	movs	r3, #128	; 0x80
 8000f74:	03db      	lsls	r3, r3, #15
 8000f76:	4323      	orrs	r3, r4
 8000f78:	025b      	lsls	r3, r3, #9
 8000f7a:	0a5b      	lsrs	r3, r3, #9
 8000f7c:	22ff      	movs	r2, #255	; 0xff
 8000f7e:	e72c      	b.n	8000dda <__aeabi_fmul+0xb6>
 8000f80:	0800bc34 	.word	0x0800bc34
 8000f84:	f7ffffff 	.word	0xf7ffffff

08000f88 <__aeabi_fsub>:
 8000f88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f8a:	4647      	mov	r7, r8
 8000f8c:	46ce      	mov	lr, r9
 8000f8e:	0044      	lsls	r4, r0, #1
 8000f90:	0fc2      	lsrs	r2, r0, #31
 8000f92:	b580      	push	{r7, lr}
 8000f94:	0247      	lsls	r7, r0, #9
 8000f96:	0248      	lsls	r0, r1, #9
 8000f98:	0a40      	lsrs	r0, r0, #9
 8000f9a:	4684      	mov	ip, r0
 8000f9c:	4666      	mov	r6, ip
 8000f9e:	0048      	lsls	r0, r1, #1
 8000fa0:	0a7f      	lsrs	r7, r7, #9
 8000fa2:	0e24      	lsrs	r4, r4, #24
 8000fa4:	00f6      	lsls	r6, r6, #3
 8000fa6:	0025      	movs	r5, r4
 8000fa8:	4690      	mov	r8, r2
 8000faa:	00fb      	lsls	r3, r7, #3
 8000fac:	0e00      	lsrs	r0, r0, #24
 8000fae:	0fc9      	lsrs	r1, r1, #31
 8000fb0:	46b1      	mov	r9, r6
 8000fb2:	28ff      	cmp	r0, #255	; 0xff
 8000fb4:	d100      	bne.n	8000fb8 <__aeabi_fsub+0x30>
 8000fb6:	e085      	b.n	80010c4 <__aeabi_fsub+0x13c>
 8000fb8:	2601      	movs	r6, #1
 8000fba:	4071      	eors	r1, r6
 8000fbc:	1a26      	subs	r6, r4, r0
 8000fbe:	4291      	cmp	r1, r2
 8000fc0:	d057      	beq.n	8001072 <__aeabi_fsub+0xea>
 8000fc2:	2e00      	cmp	r6, #0
 8000fc4:	dd43      	ble.n	800104e <__aeabi_fsub+0xc6>
 8000fc6:	2800      	cmp	r0, #0
 8000fc8:	d000      	beq.n	8000fcc <__aeabi_fsub+0x44>
 8000fca:	e07f      	b.n	80010cc <__aeabi_fsub+0x144>
 8000fcc:	4649      	mov	r1, r9
 8000fce:	2900      	cmp	r1, #0
 8000fd0:	d100      	bne.n	8000fd4 <__aeabi_fsub+0x4c>
 8000fd2:	e0aa      	b.n	800112a <__aeabi_fsub+0x1a2>
 8000fd4:	3e01      	subs	r6, #1
 8000fd6:	2e00      	cmp	r6, #0
 8000fd8:	d000      	beq.n	8000fdc <__aeabi_fsub+0x54>
 8000fda:	e0f7      	b.n	80011cc <__aeabi_fsub+0x244>
 8000fdc:	1a5b      	subs	r3, r3, r1
 8000fde:	015a      	lsls	r2, r3, #5
 8000fe0:	d400      	bmi.n	8000fe4 <__aeabi_fsub+0x5c>
 8000fe2:	e08b      	b.n	80010fc <__aeabi_fsub+0x174>
 8000fe4:	019b      	lsls	r3, r3, #6
 8000fe6:	099c      	lsrs	r4, r3, #6
 8000fe8:	0020      	movs	r0, r4
 8000fea:	f002 f845 	bl	8003078 <__clzsi2>
 8000fee:	3805      	subs	r0, #5
 8000ff0:	4084      	lsls	r4, r0
 8000ff2:	4285      	cmp	r5, r0
 8000ff4:	dd00      	ble.n	8000ff8 <__aeabi_fsub+0x70>
 8000ff6:	e0d3      	b.n	80011a0 <__aeabi_fsub+0x218>
 8000ff8:	1b45      	subs	r5, r0, r5
 8000ffa:	0023      	movs	r3, r4
 8000ffc:	2020      	movs	r0, #32
 8000ffe:	3501      	adds	r5, #1
 8001000:	40eb      	lsrs	r3, r5
 8001002:	1b45      	subs	r5, r0, r5
 8001004:	40ac      	lsls	r4, r5
 8001006:	1e62      	subs	r2, r4, #1
 8001008:	4194      	sbcs	r4, r2
 800100a:	4323      	orrs	r3, r4
 800100c:	2407      	movs	r4, #7
 800100e:	2500      	movs	r5, #0
 8001010:	401c      	ands	r4, r3
 8001012:	2201      	movs	r2, #1
 8001014:	4641      	mov	r1, r8
 8001016:	400a      	ands	r2, r1
 8001018:	2c00      	cmp	r4, #0
 800101a:	d004      	beq.n	8001026 <__aeabi_fsub+0x9e>
 800101c:	210f      	movs	r1, #15
 800101e:	4019      	ands	r1, r3
 8001020:	2904      	cmp	r1, #4
 8001022:	d000      	beq.n	8001026 <__aeabi_fsub+0x9e>
 8001024:	3304      	adds	r3, #4
 8001026:	0159      	lsls	r1, r3, #5
 8001028:	d400      	bmi.n	800102c <__aeabi_fsub+0xa4>
 800102a:	e080      	b.n	800112e <__aeabi_fsub+0x1a6>
 800102c:	3501      	adds	r5, #1
 800102e:	b2ec      	uxtb	r4, r5
 8001030:	2dff      	cmp	r5, #255	; 0xff
 8001032:	d000      	beq.n	8001036 <__aeabi_fsub+0xae>
 8001034:	e0a3      	b.n	800117e <__aeabi_fsub+0x1f6>
 8001036:	24ff      	movs	r4, #255	; 0xff
 8001038:	2300      	movs	r3, #0
 800103a:	025b      	lsls	r3, r3, #9
 800103c:	05e4      	lsls	r4, r4, #23
 800103e:	0a58      	lsrs	r0, r3, #9
 8001040:	07d2      	lsls	r2, r2, #31
 8001042:	4320      	orrs	r0, r4
 8001044:	4310      	orrs	r0, r2
 8001046:	bc0c      	pop	{r2, r3}
 8001048:	4690      	mov	r8, r2
 800104a:	4699      	mov	r9, r3
 800104c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800104e:	2e00      	cmp	r6, #0
 8001050:	d174      	bne.n	800113c <__aeabi_fsub+0x1b4>
 8001052:	1c60      	adds	r0, r4, #1
 8001054:	b2c0      	uxtb	r0, r0
 8001056:	2801      	cmp	r0, #1
 8001058:	dc00      	bgt.n	800105c <__aeabi_fsub+0xd4>
 800105a:	e0a7      	b.n	80011ac <__aeabi_fsub+0x224>
 800105c:	464a      	mov	r2, r9
 800105e:	1a9c      	subs	r4, r3, r2
 8001060:	0162      	lsls	r2, r4, #5
 8001062:	d500      	bpl.n	8001066 <__aeabi_fsub+0xde>
 8001064:	e0b6      	b.n	80011d4 <__aeabi_fsub+0x24c>
 8001066:	2c00      	cmp	r4, #0
 8001068:	d1be      	bne.n	8000fe8 <__aeabi_fsub+0x60>
 800106a:	2200      	movs	r2, #0
 800106c:	2400      	movs	r4, #0
 800106e:	2300      	movs	r3, #0
 8001070:	e7e3      	b.n	800103a <__aeabi_fsub+0xb2>
 8001072:	2e00      	cmp	r6, #0
 8001074:	dc00      	bgt.n	8001078 <__aeabi_fsub+0xf0>
 8001076:	e085      	b.n	8001184 <__aeabi_fsub+0x1fc>
 8001078:	2800      	cmp	r0, #0
 800107a:	d046      	beq.n	800110a <__aeabi_fsub+0x182>
 800107c:	2cff      	cmp	r4, #255	; 0xff
 800107e:	d049      	beq.n	8001114 <__aeabi_fsub+0x18c>
 8001080:	2280      	movs	r2, #128	; 0x80
 8001082:	4648      	mov	r0, r9
 8001084:	04d2      	lsls	r2, r2, #19
 8001086:	4310      	orrs	r0, r2
 8001088:	4681      	mov	r9, r0
 800108a:	2201      	movs	r2, #1
 800108c:	2e1b      	cmp	r6, #27
 800108e:	dc09      	bgt.n	80010a4 <__aeabi_fsub+0x11c>
 8001090:	2020      	movs	r0, #32
 8001092:	464c      	mov	r4, r9
 8001094:	1b80      	subs	r0, r0, r6
 8001096:	4084      	lsls	r4, r0
 8001098:	464a      	mov	r2, r9
 800109a:	0020      	movs	r0, r4
 800109c:	40f2      	lsrs	r2, r6
 800109e:	1e44      	subs	r4, r0, #1
 80010a0:	41a0      	sbcs	r0, r4
 80010a2:	4302      	orrs	r2, r0
 80010a4:	189b      	adds	r3, r3, r2
 80010a6:	015a      	lsls	r2, r3, #5
 80010a8:	d528      	bpl.n	80010fc <__aeabi_fsub+0x174>
 80010aa:	3501      	adds	r5, #1
 80010ac:	2dff      	cmp	r5, #255	; 0xff
 80010ae:	d100      	bne.n	80010b2 <__aeabi_fsub+0x12a>
 80010b0:	e0a8      	b.n	8001204 <__aeabi_fsub+0x27c>
 80010b2:	2201      	movs	r2, #1
 80010b4:	2407      	movs	r4, #7
 80010b6:	4994      	ldr	r1, [pc, #592]	; (8001308 <__aeabi_fsub+0x380>)
 80010b8:	401a      	ands	r2, r3
 80010ba:	085b      	lsrs	r3, r3, #1
 80010bc:	400b      	ands	r3, r1
 80010be:	4313      	orrs	r3, r2
 80010c0:	401c      	ands	r4, r3
 80010c2:	e7a6      	b.n	8001012 <__aeabi_fsub+0x8a>
 80010c4:	2e00      	cmp	r6, #0
 80010c6:	d000      	beq.n	80010ca <__aeabi_fsub+0x142>
 80010c8:	e778      	b.n	8000fbc <__aeabi_fsub+0x34>
 80010ca:	e775      	b.n	8000fb8 <__aeabi_fsub+0x30>
 80010cc:	2cff      	cmp	r4, #255	; 0xff
 80010ce:	d054      	beq.n	800117a <__aeabi_fsub+0x1f2>
 80010d0:	2280      	movs	r2, #128	; 0x80
 80010d2:	4649      	mov	r1, r9
 80010d4:	04d2      	lsls	r2, r2, #19
 80010d6:	4311      	orrs	r1, r2
 80010d8:	4689      	mov	r9, r1
 80010da:	2201      	movs	r2, #1
 80010dc:	2e1b      	cmp	r6, #27
 80010de:	dc09      	bgt.n	80010f4 <__aeabi_fsub+0x16c>
 80010e0:	2120      	movs	r1, #32
 80010e2:	4648      	mov	r0, r9
 80010e4:	1b89      	subs	r1, r1, r6
 80010e6:	4088      	lsls	r0, r1
 80010e8:	464a      	mov	r2, r9
 80010ea:	0001      	movs	r1, r0
 80010ec:	40f2      	lsrs	r2, r6
 80010ee:	1e48      	subs	r0, r1, #1
 80010f0:	4181      	sbcs	r1, r0
 80010f2:	430a      	orrs	r2, r1
 80010f4:	1a9b      	subs	r3, r3, r2
 80010f6:	015a      	lsls	r2, r3, #5
 80010f8:	d500      	bpl.n	80010fc <__aeabi_fsub+0x174>
 80010fa:	e773      	b.n	8000fe4 <__aeabi_fsub+0x5c>
 80010fc:	2201      	movs	r2, #1
 80010fe:	4641      	mov	r1, r8
 8001100:	400a      	ands	r2, r1
 8001102:	0759      	lsls	r1, r3, #29
 8001104:	d000      	beq.n	8001108 <__aeabi_fsub+0x180>
 8001106:	e789      	b.n	800101c <__aeabi_fsub+0x94>
 8001108:	e011      	b.n	800112e <__aeabi_fsub+0x1a6>
 800110a:	4648      	mov	r0, r9
 800110c:	2800      	cmp	r0, #0
 800110e:	d158      	bne.n	80011c2 <__aeabi_fsub+0x23a>
 8001110:	2cff      	cmp	r4, #255	; 0xff
 8001112:	d10c      	bne.n	800112e <__aeabi_fsub+0x1a6>
 8001114:	08db      	lsrs	r3, r3, #3
 8001116:	2b00      	cmp	r3, #0
 8001118:	d100      	bne.n	800111c <__aeabi_fsub+0x194>
 800111a:	e78c      	b.n	8001036 <__aeabi_fsub+0xae>
 800111c:	2080      	movs	r0, #128	; 0x80
 800111e:	03c0      	lsls	r0, r0, #15
 8001120:	4303      	orrs	r3, r0
 8001122:	025b      	lsls	r3, r3, #9
 8001124:	0a5b      	lsrs	r3, r3, #9
 8001126:	24ff      	movs	r4, #255	; 0xff
 8001128:	e787      	b.n	800103a <__aeabi_fsub+0xb2>
 800112a:	2cff      	cmp	r4, #255	; 0xff
 800112c:	d025      	beq.n	800117a <__aeabi_fsub+0x1f2>
 800112e:	08db      	lsrs	r3, r3, #3
 8001130:	2dff      	cmp	r5, #255	; 0xff
 8001132:	d0f0      	beq.n	8001116 <__aeabi_fsub+0x18e>
 8001134:	025b      	lsls	r3, r3, #9
 8001136:	0a5b      	lsrs	r3, r3, #9
 8001138:	b2ec      	uxtb	r4, r5
 800113a:	e77e      	b.n	800103a <__aeabi_fsub+0xb2>
 800113c:	2c00      	cmp	r4, #0
 800113e:	d04d      	beq.n	80011dc <__aeabi_fsub+0x254>
 8001140:	28ff      	cmp	r0, #255	; 0xff
 8001142:	d018      	beq.n	8001176 <__aeabi_fsub+0x1ee>
 8001144:	2480      	movs	r4, #128	; 0x80
 8001146:	04e4      	lsls	r4, r4, #19
 8001148:	4272      	negs	r2, r6
 800114a:	4323      	orrs	r3, r4
 800114c:	2a1b      	cmp	r2, #27
 800114e:	dd00      	ble.n	8001152 <__aeabi_fsub+0x1ca>
 8001150:	e0c4      	b.n	80012dc <__aeabi_fsub+0x354>
 8001152:	001c      	movs	r4, r3
 8001154:	2520      	movs	r5, #32
 8001156:	40d4      	lsrs	r4, r2
 8001158:	1aaa      	subs	r2, r5, r2
 800115a:	4093      	lsls	r3, r2
 800115c:	1e5a      	subs	r2, r3, #1
 800115e:	4193      	sbcs	r3, r2
 8001160:	4323      	orrs	r3, r4
 8001162:	464a      	mov	r2, r9
 8001164:	0005      	movs	r5, r0
 8001166:	1ad3      	subs	r3, r2, r3
 8001168:	4688      	mov	r8, r1
 800116a:	e738      	b.n	8000fde <__aeabi_fsub+0x56>
 800116c:	1c72      	adds	r2, r6, #1
 800116e:	d0f8      	beq.n	8001162 <__aeabi_fsub+0x1da>
 8001170:	43f2      	mvns	r2, r6
 8001172:	28ff      	cmp	r0, #255	; 0xff
 8001174:	d1ea      	bne.n	800114c <__aeabi_fsub+0x1c4>
 8001176:	000a      	movs	r2, r1
 8001178:	464b      	mov	r3, r9
 800117a:	25ff      	movs	r5, #255	; 0xff
 800117c:	e7d7      	b.n	800112e <__aeabi_fsub+0x1a6>
 800117e:	019b      	lsls	r3, r3, #6
 8001180:	0a5b      	lsrs	r3, r3, #9
 8001182:	e75a      	b.n	800103a <__aeabi_fsub+0xb2>
 8001184:	2e00      	cmp	r6, #0
 8001186:	d141      	bne.n	800120c <__aeabi_fsub+0x284>
 8001188:	1c65      	adds	r5, r4, #1
 800118a:	b2e9      	uxtb	r1, r5
 800118c:	2901      	cmp	r1, #1
 800118e:	dd45      	ble.n	800121c <__aeabi_fsub+0x294>
 8001190:	2dff      	cmp	r5, #255	; 0xff
 8001192:	d100      	bne.n	8001196 <__aeabi_fsub+0x20e>
 8001194:	e74f      	b.n	8001036 <__aeabi_fsub+0xae>
 8001196:	2407      	movs	r4, #7
 8001198:	444b      	add	r3, r9
 800119a:	085b      	lsrs	r3, r3, #1
 800119c:	401c      	ands	r4, r3
 800119e:	e738      	b.n	8001012 <__aeabi_fsub+0x8a>
 80011a0:	2207      	movs	r2, #7
 80011a2:	4b5a      	ldr	r3, [pc, #360]	; (800130c <__aeabi_fsub+0x384>)
 80011a4:	1a2d      	subs	r5, r5, r0
 80011a6:	4023      	ands	r3, r4
 80011a8:	4014      	ands	r4, r2
 80011aa:	e732      	b.n	8001012 <__aeabi_fsub+0x8a>
 80011ac:	2c00      	cmp	r4, #0
 80011ae:	d11d      	bne.n	80011ec <__aeabi_fsub+0x264>
 80011b0:	2b00      	cmp	r3, #0
 80011b2:	d17a      	bne.n	80012aa <__aeabi_fsub+0x322>
 80011b4:	464b      	mov	r3, r9
 80011b6:	2b00      	cmp	r3, #0
 80011b8:	d100      	bne.n	80011bc <__aeabi_fsub+0x234>
 80011ba:	e091      	b.n	80012e0 <__aeabi_fsub+0x358>
 80011bc:	000a      	movs	r2, r1
 80011be:	2500      	movs	r5, #0
 80011c0:	e7b5      	b.n	800112e <__aeabi_fsub+0x1a6>
 80011c2:	3e01      	subs	r6, #1
 80011c4:	2e00      	cmp	r6, #0
 80011c6:	d119      	bne.n	80011fc <__aeabi_fsub+0x274>
 80011c8:	444b      	add	r3, r9
 80011ca:	e76c      	b.n	80010a6 <__aeabi_fsub+0x11e>
 80011cc:	2cff      	cmp	r4, #255	; 0xff
 80011ce:	d184      	bne.n	80010da <__aeabi_fsub+0x152>
 80011d0:	25ff      	movs	r5, #255	; 0xff
 80011d2:	e7ac      	b.n	800112e <__aeabi_fsub+0x1a6>
 80011d4:	464a      	mov	r2, r9
 80011d6:	4688      	mov	r8, r1
 80011d8:	1ad4      	subs	r4, r2, r3
 80011da:	e705      	b.n	8000fe8 <__aeabi_fsub+0x60>
 80011dc:	2b00      	cmp	r3, #0
 80011de:	d1c5      	bne.n	800116c <__aeabi_fsub+0x1e4>
 80011e0:	000a      	movs	r2, r1
 80011e2:	28ff      	cmp	r0, #255	; 0xff
 80011e4:	d0c8      	beq.n	8001178 <__aeabi_fsub+0x1f0>
 80011e6:	0005      	movs	r5, r0
 80011e8:	464b      	mov	r3, r9
 80011ea:	e7a0      	b.n	800112e <__aeabi_fsub+0x1a6>
 80011ec:	2b00      	cmp	r3, #0
 80011ee:	d149      	bne.n	8001284 <__aeabi_fsub+0x2fc>
 80011f0:	464b      	mov	r3, r9
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	d077      	beq.n	80012e6 <__aeabi_fsub+0x35e>
 80011f6:	000a      	movs	r2, r1
 80011f8:	25ff      	movs	r5, #255	; 0xff
 80011fa:	e798      	b.n	800112e <__aeabi_fsub+0x1a6>
 80011fc:	2cff      	cmp	r4, #255	; 0xff
 80011fe:	d000      	beq.n	8001202 <__aeabi_fsub+0x27a>
 8001200:	e743      	b.n	800108a <__aeabi_fsub+0x102>
 8001202:	e787      	b.n	8001114 <__aeabi_fsub+0x18c>
 8001204:	000a      	movs	r2, r1
 8001206:	24ff      	movs	r4, #255	; 0xff
 8001208:	2300      	movs	r3, #0
 800120a:	e716      	b.n	800103a <__aeabi_fsub+0xb2>
 800120c:	2c00      	cmp	r4, #0
 800120e:	d115      	bne.n	800123c <__aeabi_fsub+0x2b4>
 8001210:	2b00      	cmp	r3, #0
 8001212:	d157      	bne.n	80012c4 <__aeabi_fsub+0x33c>
 8001214:	28ff      	cmp	r0, #255	; 0xff
 8001216:	d1e6      	bne.n	80011e6 <__aeabi_fsub+0x25e>
 8001218:	464b      	mov	r3, r9
 800121a:	e77b      	b.n	8001114 <__aeabi_fsub+0x18c>
 800121c:	2c00      	cmp	r4, #0
 800121e:	d120      	bne.n	8001262 <__aeabi_fsub+0x2da>
 8001220:	2b00      	cmp	r3, #0
 8001222:	d057      	beq.n	80012d4 <__aeabi_fsub+0x34c>
 8001224:	4649      	mov	r1, r9
 8001226:	2900      	cmp	r1, #0
 8001228:	d053      	beq.n	80012d2 <__aeabi_fsub+0x34a>
 800122a:	444b      	add	r3, r9
 800122c:	015a      	lsls	r2, r3, #5
 800122e:	d568      	bpl.n	8001302 <__aeabi_fsub+0x37a>
 8001230:	2407      	movs	r4, #7
 8001232:	4a36      	ldr	r2, [pc, #216]	; (800130c <__aeabi_fsub+0x384>)
 8001234:	401c      	ands	r4, r3
 8001236:	2501      	movs	r5, #1
 8001238:	4013      	ands	r3, r2
 800123a:	e6ea      	b.n	8001012 <__aeabi_fsub+0x8a>
 800123c:	28ff      	cmp	r0, #255	; 0xff
 800123e:	d0eb      	beq.n	8001218 <__aeabi_fsub+0x290>
 8001240:	2280      	movs	r2, #128	; 0x80
 8001242:	04d2      	lsls	r2, r2, #19
 8001244:	4276      	negs	r6, r6
 8001246:	4313      	orrs	r3, r2
 8001248:	2e1b      	cmp	r6, #27
 800124a:	dc53      	bgt.n	80012f4 <__aeabi_fsub+0x36c>
 800124c:	2520      	movs	r5, #32
 800124e:	1bad      	subs	r5, r5, r6
 8001250:	001a      	movs	r2, r3
 8001252:	40ab      	lsls	r3, r5
 8001254:	40f2      	lsrs	r2, r6
 8001256:	1e5c      	subs	r4, r3, #1
 8001258:	41a3      	sbcs	r3, r4
 800125a:	4313      	orrs	r3, r2
 800125c:	444b      	add	r3, r9
 800125e:	0005      	movs	r5, r0
 8001260:	e721      	b.n	80010a6 <__aeabi_fsub+0x11e>
 8001262:	2b00      	cmp	r3, #0
 8001264:	d0d8      	beq.n	8001218 <__aeabi_fsub+0x290>
 8001266:	4649      	mov	r1, r9
 8001268:	2900      	cmp	r1, #0
 800126a:	d100      	bne.n	800126e <__aeabi_fsub+0x2e6>
 800126c:	e752      	b.n	8001114 <__aeabi_fsub+0x18c>
 800126e:	2180      	movs	r1, #128	; 0x80
 8001270:	03c9      	lsls	r1, r1, #15
 8001272:	420f      	tst	r7, r1
 8001274:	d100      	bne.n	8001278 <__aeabi_fsub+0x2f0>
 8001276:	e74d      	b.n	8001114 <__aeabi_fsub+0x18c>
 8001278:	4660      	mov	r0, ip
 800127a:	4208      	tst	r0, r1
 800127c:	d000      	beq.n	8001280 <__aeabi_fsub+0x2f8>
 800127e:	e749      	b.n	8001114 <__aeabi_fsub+0x18c>
 8001280:	464b      	mov	r3, r9
 8001282:	e747      	b.n	8001114 <__aeabi_fsub+0x18c>
 8001284:	4648      	mov	r0, r9
 8001286:	25ff      	movs	r5, #255	; 0xff
 8001288:	2800      	cmp	r0, #0
 800128a:	d100      	bne.n	800128e <__aeabi_fsub+0x306>
 800128c:	e74f      	b.n	800112e <__aeabi_fsub+0x1a6>
 800128e:	2280      	movs	r2, #128	; 0x80
 8001290:	03d2      	lsls	r2, r2, #15
 8001292:	4217      	tst	r7, r2
 8001294:	d004      	beq.n	80012a0 <__aeabi_fsub+0x318>
 8001296:	4660      	mov	r0, ip
 8001298:	4210      	tst	r0, r2
 800129a:	d101      	bne.n	80012a0 <__aeabi_fsub+0x318>
 800129c:	464b      	mov	r3, r9
 800129e:	4688      	mov	r8, r1
 80012a0:	2201      	movs	r2, #1
 80012a2:	4641      	mov	r1, r8
 80012a4:	25ff      	movs	r5, #255	; 0xff
 80012a6:	400a      	ands	r2, r1
 80012a8:	e741      	b.n	800112e <__aeabi_fsub+0x1a6>
 80012aa:	4648      	mov	r0, r9
 80012ac:	2800      	cmp	r0, #0
 80012ae:	d01f      	beq.n	80012f0 <__aeabi_fsub+0x368>
 80012b0:	1a1a      	subs	r2, r3, r0
 80012b2:	0150      	lsls	r0, r2, #5
 80012b4:	d520      	bpl.n	80012f8 <__aeabi_fsub+0x370>
 80012b6:	464a      	mov	r2, r9
 80012b8:	2407      	movs	r4, #7
 80012ba:	1ad3      	subs	r3, r2, r3
 80012bc:	401c      	ands	r4, r3
 80012be:	4688      	mov	r8, r1
 80012c0:	2500      	movs	r5, #0
 80012c2:	e6a6      	b.n	8001012 <__aeabi_fsub+0x8a>
 80012c4:	1c74      	adds	r4, r6, #1
 80012c6:	d0c9      	beq.n	800125c <__aeabi_fsub+0x2d4>
 80012c8:	43f6      	mvns	r6, r6
 80012ca:	28ff      	cmp	r0, #255	; 0xff
 80012cc:	d1bc      	bne.n	8001248 <__aeabi_fsub+0x2c0>
 80012ce:	464b      	mov	r3, r9
 80012d0:	e720      	b.n	8001114 <__aeabi_fsub+0x18c>
 80012d2:	4699      	mov	r9, r3
 80012d4:	464b      	mov	r3, r9
 80012d6:	2500      	movs	r5, #0
 80012d8:	08db      	lsrs	r3, r3, #3
 80012da:	e72b      	b.n	8001134 <__aeabi_fsub+0x1ac>
 80012dc:	2301      	movs	r3, #1
 80012de:	e740      	b.n	8001162 <__aeabi_fsub+0x1da>
 80012e0:	2200      	movs	r2, #0
 80012e2:	2300      	movs	r3, #0
 80012e4:	e6a9      	b.n	800103a <__aeabi_fsub+0xb2>
 80012e6:	2380      	movs	r3, #128	; 0x80
 80012e8:	2200      	movs	r2, #0
 80012ea:	03db      	lsls	r3, r3, #15
 80012ec:	24ff      	movs	r4, #255	; 0xff
 80012ee:	e6a4      	b.n	800103a <__aeabi_fsub+0xb2>
 80012f0:	2500      	movs	r5, #0
 80012f2:	e71c      	b.n	800112e <__aeabi_fsub+0x1a6>
 80012f4:	2301      	movs	r3, #1
 80012f6:	e7b1      	b.n	800125c <__aeabi_fsub+0x2d4>
 80012f8:	2a00      	cmp	r2, #0
 80012fa:	d0f1      	beq.n	80012e0 <__aeabi_fsub+0x358>
 80012fc:	0013      	movs	r3, r2
 80012fe:	2500      	movs	r5, #0
 8001300:	e6fc      	b.n	80010fc <__aeabi_fsub+0x174>
 8001302:	2500      	movs	r5, #0
 8001304:	e6fa      	b.n	80010fc <__aeabi_fsub+0x174>
 8001306:	46c0      	nop			; (mov r8, r8)
 8001308:	7dffffff 	.word	0x7dffffff
 800130c:	fbffffff 	.word	0xfbffffff

08001310 <__aeabi_ui2f>:
 8001310:	b570      	push	{r4, r5, r6, lr}
 8001312:	1e04      	subs	r4, r0, #0
 8001314:	d034      	beq.n	8001380 <__aeabi_ui2f+0x70>
 8001316:	f001 feaf 	bl	8003078 <__clzsi2>
 800131a:	229e      	movs	r2, #158	; 0x9e
 800131c:	1a12      	subs	r2, r2, r0
 800131e:	2a96      	cmp	r2, #150	; 0x96
 8001320:	dc07      	bgt.n	8001332 <__aeabi_ui2f+0x22>
 8001322:	b2d2      	uxtb	r2, r2
 8001324:	2808      	cmp	r0, #8
 8001326:	dd2e      	ble.n	8001386 <__aeabi_ui2f+0x76>
 8001328:	3808      	subs	r0, #8
 800132a:	4084      	lsls	r4, r0
 800132c:	0260      	lsls	r0, r4, #9
 800132e:	0a40      	lsrs	r0, r0, #9
 8001330:	e021      	b.n	8001376 <__aeabi_ui2f+0x66>
 8001332:	2a99      	cmp	r2, #153	; 0x99
 8001334:	dd09      	ble.n	800134a <__aeabi_ui2f+0x3a>
 8001336:	0003      	movs	r3, r0
 8001338:	0021      	movs	r1, r4
 800133a:	331b      	adds	r3, #27
 800133c:	4099      	lsls	r1, r3
 800133e:	1e4b      	subs	r3, r1, #1
 8001340:	4199      	sbcs	r1, r3
 8001342:	2305      	movs	r3, #5
 8001344:	1a1b      	subs	r3, r3, r0
 8001346:	40dc      	lsrs	r4, r3
 8001348:	430c      	orrs	r4, r1
 800134a:	2805      	cmp	r0, #5
 800134c:	dd01      	ble.n	8001352 <__aeabi_ui2f+0x42>
 800134e:	1f43      	subs	r3, r0, #5
 8001350:	409c      	lsls	r4, r3
 8001352:	0023      	movs	r3, r4
 8001354:	490d      	ldr	r1, [pc, #52]	; (800138c <__aeabi_ui2f+0x7c>)
 8001356:	400b      	ands	r3, r1
 8001358:	0765      	lsls	r5, r4, #29
 800135a:	d009      	beq.n	8001370 <__aeabi_ui2f+0x60>
 800135c:	250f      	movs	r5, #15
 800135e:	402c      	ands	r4, r5
 8001360:	2c04      	cmp	r4, #4
 8001362:	d005      	beq.n	8001370 <__aeabi_ui2f+0x60>
 8001364:	3304      	adds	r3, #4
 8001366:	015c      	lsls	r4, r3, #5
 8001368:	d502      	bpl.n	8001370 <__aeabi_ui2f+0x60>
 800136a:	229f      	movs	r2, #159	; 0x9f
 800136c:	400b      	ands	r3, r1
 800136e:	1a12      	subs	r2, r2, r0
 8001370:	019b      	lsls	r3, r3, #6
 8001372:	0a58      	lsrs	r0, r3, #9
 8001374:	b2d2      	uxtb	r2, r2
 8001376:	0240      	lsls	r0, r0, #9
 8001378:	05d2      	lsls	r2, r2, #23
 800137a:	0a40      	lsrs	r0, r0, #9
 800137c:	4310      	orrs	r0, r2
 800137e:	bd70      	pop	{r4, r5, r6, pc}
 8001380:	2200      	movs	r2, #0
 8001382:	2000      	movs	r0, #0
 8001384:	e7f7      	b.n	8001376 <__aeabi_ui2f+0x66>
 8001386:	0260      	lsls	r0, r4, #9
 8001388:	0a40      	lsrs	r0, r0, #9
 800138a:	e7f4      	b.n	8001376 <__aeabi_ui2f+0x66>
 800138c:	fbffffff 	.word	0xfbffffff

08001390 <__aeabi_dadd>:
 8001390:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001392:	464f      	mov	r7, r9
 8001394:	4646      	mov	r6, r8
 8001396:	46d6      	mov	lr, sl
 8001398:	000c      	movs	r4, r1
 800139a:	0309      	lsls	r1, r1, #12
 800139c:	b5c0      	push	{r6, r7, lr}
 800139e:	0a49      	lsrs	r1, r1, #9
 80013a0:	0f47      	lsrs	r7, r0, #29
 80013a2:	005e      	lsls	r6, r3, #1
 80013a4:	4339      	orrs	r1, r7
 80013a6:	031f      	lsls	r7, r3, #12
 80013a8:	0fdb      	lsrs	r3, r3, #31
 80013aa:	469c      	mov	ip, r3
 80013ac:	0065      	lsls	r5, r4, #1
 80013ae:	0a7b      	lsrs	r3, r7, #9
 80013b0:	0f57      	lsrs	r7, r2, #29
 80013b2:	431f      	orrs	r7, r3
 80013b4:	0d6d      	lsrs	r5, r5, #21
 80013b6:	0fe4      	lsrs	r4, r4, #31
 80013b8:	0d76      	lsrs	r6, r6, #21
 80013ba:	46a1      	mov	r9, r4
 80013bc:	00c0      	lsls	r0, r0, #3
 80013be:	46b8      	mov	r8, r7
 80013c0:	00d2      	lsls	r2, r2, #3
 80013c2:	1bab      	subs	r3, r5, r6
 80013c4:	4564      	cmp	r4, ip
 80013c6:	d07b      	beq.n	80014c0 <__aeabi_dadd+0x130>
 80013c8:	2b00      	cmp	r3, #0
 80013ca:	dd5f      	ble.n	800148c <__aeabi_dadd+0xfc>
 80013cc:	2e00      	cmp	r6, #0
 80013ce:	d000      	beq.n	80013d2 <__aeabi_dadd+0x42>
 80013d0:	e0a4      	b.n	800151c <__aeabi_dadd+0x18c>
 80013d2:	003e      	movs	r6, r7
 80013d4:	4316      	orrs	r6, r2
 80013d6:	d100      	bne.n	80013da <__aeabi_dadd+0x4a>
 80013d8:	e112      	b.n	8001600 <__aeabi_dadd+0x270>
 80013da:	1e5e      	subs	r6, r3, #1
 80013dc:	2e00      	cmp	r6, #0
 80013de:	d000      	beq.n	80013e2 <__aeabi_dadd+0x52>
 80013e0:	e19e      	b.n	8001720 <__aeabi_dadd+0x390>
 80013e2:	1a87      	subs	r7, r0, r2
 80013e4:	4643      	mov	r3, r8
 80013e6:	42b8      	cmp	r0, r7
 80013e8:	4180      	sbcs	r0, r0
 80013ea:	2501      	movs	r5, #1
 80013ec:	1ac9      	subs	r1, r1, r3
 80013ee:	4240      	negs	r0, r0
 80013f0:	1a09      	subs	r1, r1, r0
 80013f2:	020b      	lsls	r3, r1, #8
 80013f4:	d400      	bmi.n	80013f8 <__aeabi_dadd+0x68>
 80013f6:	e131      	b.n	800165c <__aeabi_dadd+0x2cc>
 80013f8:	0249      	lsls	r1, r1, #9
 80013fa:	0a4e      	lsrs	r6, r1, #9
 80013fc:	2e00      	cmp	r6, #0
 80013fe:	d100      	bne.n	8001402 <__aeabi_dadd+0x72>
 8001400:	e16e      	b.n	80016e0 <__aeabi_dadd+0x350>
 8001402:	0030      	movs	r0, r6
 8001404:	f001 fe38 	bl	8003078 <__clzsi2>
 8001408:	0003      	movs	r3, r0
 800140a:	3b08      	subs	r3, #8
 800140c:	2b1f      	cmp	r3, #31
 800140e:	dd00      	ble.n	8001412 <__aeabi_dadd+0x82>
 8001410:	e161      	b.n	80016d6 <__aeabi_dadd+0x346>
 8001412:	2220      	movs	r2, #32
 8001414:	0039      	movs	r1, r7
 8001416:	1ad2      	subs	r2, r2, r3
 8001418:	409e      	lsls	r6, r3
 800141a:	40d1      	lsrs	r1, r2
 800141c:	409f      	lsls	r7, r3
 800141e:	430e      	orrs	r6, r1
 8001420:	429d      	cmp	r5, r3
 8001422:	dd00      	ble.n	8001426 <__aeabi_dadd+0x96>
 8001424:	e151      	b.n	80016ca <__aeabi_dadd+0x33a>
 8001426:	1b5d      	subs	r5, r3, r5
 8001428:	1c6b      	adds	r3, r5, #1
 800142a:	2b1f      	cmp	r3, #31
 800142c:	dd00      	ble.n	8001430 <__aeabi_dadd+0xa0>
 800142e:	e17c      	b.n	800172a <__aeabi_dadd+0x39a>
 8001430:	2120      	movs	r1, #32
 8001432:	1ac9      	subs	r1, r1, r3
 8001434:	003d      	movs	r5, r7
 8001436:	0030      	movs	r0, r6
 8001438:	408f      	lsls	r7, r1
 800143a:	4088      	lsls	r0, r1
 800143c:	40dd      	lsrs	r5, r3
 800143e:	1e79      	subs	r1, r7, #1
 8001440:	418f      	sbcs	r7, r1
 8001442:	0031      	movs	r1, r6
 8001444:	2207      	movs	r2, #7
 8001446:	4328      	orrs	r0, r5
 8001448:	40d9      	lsrs	r1, r3
 800144a:	2500      	movs	r5, #0
 800144c:	4307      	orrs	r7, r0
 800144e:	403a      	ands	r2, r7
 8001450:	2a00      	cmp	r2, #0
 8001452:	d009      	beq.n	8001468 <__aeabi_dadd+0xd8>
 8001454:	230f      	movs	r3, #15
 8001456:	403b      	ands	r3, r7
 8001458:	2b04      	cmp	r3, #4
 800145a:	d005      	beq.n	8001468 <__aeabi_dadd+0xd8>
 800145c:	1d3b      	adds	r3, r7, #4
 800145e:	42bb      	cmp	r3, r7
 8001460:	41bf      	sbcs	r7, r7
 8001462:	427f      	negs	r7, r7
 8001464:	19c9      	adds	r1, r1, r7
 8001466:	001f      	movs	r7, r3
 8001468:	020b      	lsls	r3, r1, #8
 800146a:	d400      	bmi.n	800146e <__aeabi_dadd+0xde>
 800146c:	e226      	b.n	80018bc <__aeabi_dadd+0x52c>
 800146e:	1c6a      	adds	r2, r5, #1
 8001470:	4bc6      	ldr	r3, [pc, #792]	; (800178c <__aeabi_dadd+0x3fc>)
 8001472:	0555      	lsls	r5, r2, #21
 8001474:	0d6d      	lsrs	r5, r5, #21
 8001476:	429a      	cmp	r2, r3
 8001478:	d100      	bne.n	800147c <__aeabi_dadd+0xec>
 800147a:	e106      	b.n	800168a <__aeabi_dadd+0x2fa>
 800147c:	4ac4      	ldr	r2, [pc, #784]	; (8001790 <__aeabi_dadd+0x400>)
 800147e:	08ff      	lsrs	r7, r7, #3
 8001480:	400a      	ands	r2, r1
 8001482:	0753      	lsls	r3, r2, #29
 8001484:	0252      	lsls	r2, r2, #9
 8001486:	433b      	orrs	r3, r7
 8001488:	0b12      	lsrs	r2, r2, #12
 800148a:	e08e      	b.n	80015aa <__aeabi_dadd+0x21a>
 800148c:	2b00      	cmp	r3, #0
 800148e:	d000      	beq.n	8001492 <__aeabi_dadd+0x102>
 8001490:	e0b8      	b.n	8001604 <__aeabi_dadd+0x274>
 8001492:	1c6b      	adds	r3, r5, #1
 8001494:	055b      	lsls	r3, r3, #21
 8001496:	0d5b      	lsrs	r3, r3, #21
 8001498:	2b01      	cmp	r3, #1
 800149a:	dc00      	bgt.n	800149e <__aeabi_dadd+0x10e>
 800149c:	e130      	b.n	8001700 <__aeabi_dadd+0x370>
 800149e:	1a87      	subs	r7, r0, r2
 80014a0:	4643      	mov	r3, r8
 80014a2:	42b8      	cmp	r0, r7
 80014a4:	41b6      	sbcs	r6, r6
 80014a6:	1acb      	subs	r3, r1, r3
 80014a8:	4276      	negs	r6, r6
 80014aa:	1b9e      	subs	r6, r3, r6
 80014ac:	0233      	lsls	r3, r6, #8
 80014ae:	d500      	bpl.n	80014b2 <__aeabi_dadd+0x122>
 80014b0:	e14c      	b.n	800174c <__aeabi_dadd+0x3bc>
 80014b2:	003b      	movs	r3, r7
 80014b4:	4333      	orrs	r3, r6
 80014b6:	d1a1      	bne.n	80013fc <__aeabi_dadd+0x6c>
 80014b8:	2200      	movs	r2, #0
 80014ba:	2400      	movs	r4, #0
 80014bc:	2500      	movs	r5, #0
 80014be:	e070      	b.n	80015a2 <__aeabi_dadd+0x212>
 80014c0:	2b00      	cmp	r3, #0
 80014c2:	dc00      	bgt.n	80014c6 <__aeabi_dadd+0x136>
 80014c4:	e0e5      	b.n	8001692 <__aeabi_dadd+0x302>
 80014c6:	2e00      	cmp	r6, #0
 80014c8:	d100      	bne.n	80014cc <__aeabi_dadd+0x13c>
 80014ca:	e083      	b.n	80015d4 <__aeabi_dadd+0x244>
 80014cc:	4eaf      	ldr	r6, [pc, #700]	; (800178c <__aeabi_dadd+0x3fc>)
 80014ce:	42b5      	cmp	r5, r6
 80014d0:	d060      	beq.n	8001594 <__aeabi_dadd+0x204>
 80014d2:	2680      	movs	r6, #128	; 0x80
 80014d4:	0436      	lsls	r6, r6, #16
 80014d6:	4337      	orrs	r7, r6
 80014d8:	46b8      	mov	r8, r7
 80014da:	2b38      	cmp	r3, #56	; 0x38
 80014dc:	dc00      	bgt.n	80014e0 <__aeabi_dadd+0x150>
 80014de:	e13e      	b.n	800175e <__aeabi_dadd+0x3ce>
 80014e0:	4643      	mov	r3, r8
 80014e2:	4313      	orrs	r3, r2
 80014e4:	001f      	movs	r7, r3
 80014e6:	1e7a      	subs	r2, r7, #1
 80014e8:	4197      	sbcs	r7, r2
 80014ea:	183f      	adds	r7, r7, r0
 80014ec:	4287      	cmp	r7, r0
 80014ee:	4180      	sbcs	r0, r0
 80014f0:	4240      	negs	r0, r0
 80014f2:	1809      	adds	r1, r1, r0
 80014f4:	020b      	lsls	r3, r1, #8
 80014f6:	d400      	bmi.n	80014fa <__aeabi_dadd+0x16a>
 80014f8:	e0b0      	b.n	800165c <__aeabi_dadd+0x2cc>
 80014fa:	4ba4      	ldr	r3, [pc, #656]	; (800178c <__aeabi_dadd+0x3fc>)
 80014fc:	3501      	adds	r5, #1
 80014fe:	429d      	cmp	r5, r3
 8001500:	d100      	bne.n	8001504 <__aeabi_dadd+0x174>
 8001502:	e0c3      	b.n	800168c <__aeabi_dadd+0x2fc>
 8001504:	4aa2      	ldr	r2, [pc, #648]	; (8001790 <__aeabi_dadd+0x400>)
 8001506:	087b      	lsrs	r3, r7, #1
 8001508:	400a      	ands	r2, r1
 800150a:	2101      	movs	r1, #1
 800150c:	400f      	ands	r7, r1
 800150e:	431f      	orrs	r7, r3
 8001510:	0851      	lsrs	r1, r2, #1
 8001512:	07d3      	lsls	r3, r2, #31
 8001514:	2207      	movs	r2, #7
 8001516:	431f      	orrs	r7, r3
 8001518:	403a      	ands	r2, r7
 800151a:	e799      	b.n	8001450 <__aeabi_dadd+0xc0>
 800151c:	4e9b      	ldr	r6, [pc, #620]	; (800178c <__aeabi_dadd+0x3fc>)
 800151e:	42b5      	cmp	r5, r6
 8001520:	d038      	beq.n	8001594 <__aeabi_dadd+0x204>
 8001522:	2680      	movs	r6, #128	; 0x80
 8001524:	0436      	lsls	r6, r6, #16
 8001526:	4337      	orrs	r7, r6
 8001528:	46b8      	mov	r8, r7
 800152a:	2b38      	cmp	r3, #56	; 0x38
 800152c:	dd00      	ble.n	8001530 <__aeabi_dadd+0x1a0>
 800152e:	e0dc      	b.n	80016ea <__aeabi_dadd+0x35a>
 8001530:	2b1f      	cmp	r3, #31
 8001532:	dc00      	bgt.n	8001536 <__aeabi_dadd+0x1a6>
 8001534:	e130      	b.n	8001798 <__aeabi_dadd+0x408>
 8001536:	001e      	movs	r6, r3
 8001538:	4647      	mov	r7, r8
 800153a:	3e20      	subs	r6, #32
 800153c:	40f7      	lsrs	r7, r6
 800153e:	46bc      	mov	ip, r7
 8001540:	2b20      	cmp	r3, #32
 8001542:	d004      	beq.n	800154e <__aeabi_dadd+0x1be>
 8001544:	2640      	movs	r6, #64	; 0x40
 8001546:	1af3      	subs	r3, r6, r3
 8001548:	4646      	mov	r6, r8
 800154a:	409e      	lsls	r6, r3
 800154c:	4332      	orrs	r2, r6
 800154e:	0017      	movs	r7, r2
 8001550:	4663      	mov	r3, ip
 8001552:	1e7a      	subs	r2, r7, #1
 8001554:	4197      	sbcs	r7, r2
 8001556:	431f      	orrs	r7, r3
 8001558:	e0cc      	b.n	80016f4 <__aeabi_dadd+0x364>
 800155a:	2b00      	cmp	r3, #0
 800155c:	d100      	bne.n	8001560 <__aeabi_dadd+0x1d0>
 800155e:	e204      	b.n	800196a <__aeabi_dadd+0x5da>
 8001560:	4643      	mov	r3, r8
 8001562:	4313      	orrs	r3, r2
 8001564:	d100      	bne.n	8001568 <__aeabi_dadd+0x1d8>
 8001566:	e159      	b.n	800181c <__aeabi_dadd+0x48c>
 8001568:	074b      	lsls	r3, r1, #29
 800156a:	08c0      	lsrs	r0, r0, #3
 800156c:	4318      	orrs	r0, r3
 800156e:	2380      	movs	r3, #128	; 0x80
 8001570:	08c9      	lsrs	r1, r1, #3
 8001572:	031b      	lsls	r3, r3, #12
 8001574:	4219      	tst	r1, r3
 8001576:	d008      	beq.n	800158a <__aeabi_dadd+0x1fa>
 8001578:	4645      	mov	r5, r8
 800157a:	08ed      	lsrs	r5, r5, #3
 800157c:	421d      	tst	r5, r3
 800157e:	d104      	bne.n	800158a <__aeabi_dadd+0x1fa>
 8001580:	4643      	mov	r3, r8
 8001582:	08d0      	lsrs	r0, r2, #3
 8001584:	0759      	lsls	r1, r3, #29
 8001586:	4308      	orrs	r0, r1
 8001588:	0029      	movs	r1, r5
 800158a:	0f42      	lsrs	r2, r0, #29
 800158c:	00c9      	lsls	r1, r1, #3
 800158e:	4d7f      	ldr	r5, [pc, #508]	; (800178c <__aeabi_dadd+0x3fc>)
 8001590:	4311      	orrs	r1, r2
 8001592:	00c0      	lsls	r0, r0, #3
 8001594:	074b      	lsls	r3, r1, #29
 8001596:	08ca      	lsrs	r2, r1, #3
 8001598:	497c      	ldr	r1, [pc, #496]	; (800178c <__aeabi_dadd+0x3fc>)
 800159a:	08c0      	lsrs	r0, r0, #3
 800159c:	4303      	orrs	r3, r0
 800159e:	428d      	cmp	r5, r1
 80015a0:	d068      	beq.n	8001674 <__aeabi_dadd+0x2e4>
 80015a2:	0312      	lsls	r2, r2, #12
 80015a4:	056d      	lsls	r5, r5, #21
 80015a6:	0b12      	lsrs	r2, r2, #12
 80015a8:	0d6d      	lsrs	r5, r5, #21
 80015aa:	2100      	movs	r1, #0
 80015ac:	0312      	lsls	r2, r2, #12
 80015ae:	0018      	movs	r0, r3
 80015b0:	0b13      	lsrs	r3, r2, #12
 80015b2:	0d0a      	lsrs	r2, r1, #20
 80015b4:	0512      	lsls	r2, r2, #20
 80015b6:	431a      	orrs	r2, r3
 80015b8:	4b76      	ldr	r3, [pc, #472]	; (8001794 <__aeabi_dadd+0x404>)
 80015ba:	052d      	lsls	r5, r5, #20
 80015bc:	4013      	ands	r3, r2
 80015be:	432b      	orrs	r3, r5
 80015c0:	005b      	lsls	r3, r3, #1
 80015c2:	07e4      	lsls	r4, r4, #31
 80015c4:	085b      	lsrs	r3, r3, #1
 80015c6:	4323      	orrs	r3, r4
 80015c8:	0019      	movs	r1, r3
 80015ca:	bc1c      	pop	{r2, r3, r4}
 80015cc:	4690      	mov	r8, r2
 80015ce:	4699      	mov	r9, r3
 80015d0:	46a2      	mov	sl, r4
 80015d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015d4:	003e      	movs	r6, r7
 80015d6:	4316      	orrs	r6, r2
 80015d8:	d012      	beq.n	8001600 <__aeabi_dadd+0x270>
 80015da:	1e5e      	subs	r6, r3, #1
 80015dc:	2e00      	cmp	r6, #0
 80015de:	d000      	beq.n	80015e2 <__aeabi_dadd+0x252>
 80015e0:	e100      	b.n	80017e4 <__aeabi_dadd+0x454>
 80015e2:	1887      	adds	r7, r0, r2
 80015e4:	4287      	cmp	r7, r0
 80015e6:	4180      	sbcs	r0, r0
 80015e8:	4441      	add	r1, r8
 80015ea:	4240      	negs	r0, r0
 80015ec:	1809      	adds	r1, r1, r0
 80015ee:	2501      	movs	r5, #1
 80015f0:	020b      	lsls	r3, r1, #8
 80015f2:	d533      	bpl.n	800165c <__aeabi_dadd+0x2cc>
 80015f4:	2502      	movs	r5, #2
 80015f6:	e785      	b.n	8001504 <__aeabi_dadd+0x174>
 80015f8:	4664      	mov	r4, ip
 80015fa:	0033      	movs	r3, r6
 80015fc:	4641      	mov	r1, r8
 80015fe:	0010      	movs	r0, r2
 8001600:	001d      	movs	r5, r3
 8001602:	e7c7      	b.n	8001594 <__aeabi_dadd+0x204>
 8001604:	2d00      	cmp	r5, #0
 8001606:	d000      	beq.n	800160a <__aeabi_dadd+0x27a>
 8001608:	e0da      	b.n	80017c0 <__aeabi_dadd+0x430>
 800160a:	000c      	movs	r4, r1
 800160c:	4304      	orrs	r4, r0
 800160e:	d0f3      	beq.n	80015f8 <__aeabi_dadd+0x268>
 8001610:	1c5c      	adds	r4, r3, #1
 8001612:	d100      	bne.n	8001616 <__aeabi_dadd+0x286>
 8001614:	e19f      	b.n	8001956 <__aeabi_dadd+0x5c6>
 8001616:	4c5d      	ldr	r4, [pc, #372]	; (800178c <__aeabi_dadd+0x3fc>)
 8001618:	42a6      	cmp	r6, r4
 800161a:	d100      	bne.n	800161e <__aeabi_dadd+0x28e>
 800161c:	e12f      	b.n	800187e <__aeabi_dadd+0x4ee>
 800161e:	43db      	mvns	r3, r3
 8001620:	2b38      	cmp	r3, #56	; 0x38
 8001622:	dd00      	ble.n	8001626 <__aeabi_dadd+0x296>
 8001624:	e166      	b.n	80018f4 <__aeabi_dadd+0x564>
 8001626:	2b1f      	cmp	r3, #31
 8001628:	dd00      	ble.n	800162c <__aeabi_dadd+0x29c>
 800162a:	e183      	b.n	8001934 <__aeabi_dadd+0x5a4>
 800162c:	2420      	movs	r4, #32
 800162e:	0005      	movs	r5, r0
 8001630:	1ae4      	subs	r4, r4, r3
 8001632:	000f      	movs	r7, r1
 8001634:	40dd      	lsrs	r5, r3
 8001636:	40d9      	lsrs	r1, r3
 8001638:	40a0      	lsls	r0, r4
 800163a:	4643      	mov	r3, r8
 800163c:	40a7      	lsls	r7, r4
 800163e:	1a5b      	subs	r3, r3, r1
 8001640:	1e44      	subs	r4, r0, #1
 8001642:	41a0      	sbcs	r0, r4
 8001644:	4698      	mov	r8, r3
 8001646:	432f      	orrs	r7, r5
 8001648:	4338      	orrs	r0, r7
 800164a:	1a17      	subs	r7, r2, r0
 800164c:	42ba      	cmp	r2, r7
 800164e:	4192      	sbcs	r2, r2
 8001650:	4643      	mov	r3, r8
 8001652:	4252      	negs	r2, r2
 8001654:	1a99      	subs	r1, r3, r2
 8001656:	4664      	mov	r4, ip
 8001658:	0035      	movs	r5, r6
 800165a:	e6ca      	b.n	80013f2 <__aeabi_dadd+0x62>
 800165c:	2207      	movs	r2, #7
 800165e:	403a      	ands	r2, r7
 8001660:	2a00      	cmp	r2, #0
 8001662:	d000      	beq.n	8001666 <__aeabi_dadd+0x2d6>
 8001664:	e6f6      	b.n	8001454 <__aeabi_dadd+0xc4>
 8001666:	074b      	lsls	r3, r1, #29
 8001668:	08ca      	lsrs	r2, r1, #3
 800166a:	4948      	ldr	r1, [pc, #288]	; (800178c <__aeabi_dadd+0x3fc>)
 800166c:	08ff      	lsrs	r7, r7, #3
 800166e:	433b      	orrs	r3, r7
 8001670:	428d      	cmp	r5, r1
 8001672:	d196      	bne.n	80015a2 <__aeabi_dadd+0x212>
 8001674:	0019      	movs	r1, r3
 8001676:	4311      	orrs	r1, r2
 8001678:	d100      	bne.n	800167c <__aeabi_dadd+0x2ec>
 800167a:	e19e      	b.n	80019ba <__aeabi_dadd+0x62a>
 800167c:	2180      	movs	r1, #128	; 0x80
 800167e:	0309      	lsls	r1, r1, #12
 8001680:	430a      	orrs	r2, r1
 8001682:	0312      	lsls	r2, r2, #12
 8001684:	0b12      	lsrs	r2, r2, #12
 8001686:	4d41      	ldr	r5, [pc, #260]	; (800178c <__aeabi_dadd+0x3fc>)
 8001688:	e78f      	b.n	80015aa <__aeabi_dadd+0x21a>
 800168a:	0015      	movs	r5, r2
 800168c:	2200      	movs	r2, #0
 800168e:	2300      	movs	r3, #0
 8001690:	e78b      	b.n	80015aa <__aeabi_dadd+0x21a>
 8001692:	2b00      	cmp	r3, #0
 8001694:	d000      	beq.n	8001698 <__aeabi_dadd+0x308>
 8001696:	e0c7      	b.n	8001828 <__aeabi_dadd+0x498>
 8001698:	1c6b      	adds	r3, r5, #1
 800169a:	055f      	lsls	r7, r3, #21
 800169c:	0d7f      	lsrs	r7, r7, #21
 800169e:	2f01      	cmp	r7, #1
 80016a0:	dc00      	bgt.n	80016a4 <__aeabi_dadd+0x314>
 80016a2:	e0f1      	b.n	8001888 <__aeabi_dadd+0x4f8>
 80016a4:	4d39      	ldr	r5, [pc, #228]	; (800178c <__aeabi_dadd+0x3fc>)
 80016a6:	42ab      	cmp	r3, r5
 80016a8:	d100      	bne.n	80016ac <__aeabi_dadd+0x31c>
 80016aa:	e0b9      	b.n	8001820 <__aeabi_dadd+0x490>
 80016ac:	1885      	adds	r5, r0, r2
 80016ae:	000a      	movs	r2, r1
 80016b0:	4285      	cmp	r5, r0
 80016b2:	4189      	sbcs	r1, r1
 80016b4:	4442      	add	r2, r8
 80016b6:	4249      	negs	r1, r1
 80016b8:	1851      	adds	r1, r2, r1
 80016ba:	2207      	movs	r2, #7
 80016bc:	07cf      	lsls	r7, r1, #31
 80016be:	086d      	lsrs	r5, r5, #1
 80016c0:	432f      	orrs	r7, r5
 80016c2:	0849      	lsrs	r1, r1, #1
 80016c4:	403a      	ands	r2, r7
 80016c6:	001d      	movs	r5, r3
 80016c8:	e6c2      	b.n	8001450 <__aeabi_dadd+0xc0>
 80016ca:	2207      	movs	r2, #7
 80016cc:	4930      	ldr	r1, [pc, #192]	; (8001790 <__aeabi_dadd+0x400>)
 80016ce:	1aed      	subs	r5, r5, r3
 80016d0:	4031      	ands	r1, r6
 80016d2:	403a      	ands	r2, r7
 80016d4:	e6bc      	b.n	8001450 <__aeabi_dadd+0xc0>
 80016d6:	003e      	movs	r6, r7
 80016d8:	3828      	subs	r0, #40	; 0x28
 80016da:	4086      	lsls	r6, r0
 80016dc:	2700      	movs	r7, #0
 80016de:	e69f      	b.n	8001420 <__aeabi_dadd+0x90>
 80016e0:	0038      	movs	r0, r7
 80016e2:	f001 fcc9 	bl	8003078 <__clzsi2>
 80016e6:	3020      	adds	r0, #32
 80016e8:	e68e      	b.n	8001408 <__aeabi_dadd+0x78>
 80016ea:	4643      	mov	r3, r8
 80016ec:	4313      	orrs	r3, r2
 80016ee:	001f      	movs	r7, r3
 80016f0:	1e7a      	subs	r2, r7, #1
 80016f2:	4197      	sbcs	r7, r2
 80016f4:	1bc7      	subs	r7, r0, r7
 80016f6:	42b8      	cmp	r0, r7
 80016f8:	4180      	sbcs	r0, r0
 80016fa:	4240      	negs	r0, r0
 80016fc:	1a09      	subs	r1, r1, r0
 80016fe:	e678      	b.n	80013f2 <__aeabi_dadd+0x62>
 8001700:	000e      	movs	r6, r1
 8001702:	003b      	movs	r3, r7
 8001704:	4306      	orrs	r6, r0
 8001706:	4313      	orrs	r3, r2
 8001708:	2d00      	cmp	r5, #0
 800170a:	d161      	bne.n	80017d0 <__aeabi_dadd+0x440>
 800170c:	2e00      	cmp	r6, #0
 800170e:	d000      	beq.n	8001712 <__aeabi_dadd+0x382>
 8001710:	e0f4      	b.n	80018fc <__aeabi_dadd+0x56c>
 8001712:	2b00      	cmp	r3, #0
 8001714:	d100      	bne.n	8001718 <__aeabi_dadd+0x388>
 8001716:	e11b      	b.n	8001950 <__aeabi_dadd+0x5c0>
 8001718:	4664      	mov	r4, ip
 800171a:	0039      	movs	r1, r7
 800171c:	0010      	movs	r0, r2
 800171e:	e739      	b.n	8001594 <__aeabi_dadd+0x204>
 8001720:	4f1a      	ldr	r7, [pc, #104]	; (800178c <__aeabi_dadd+0x3fc>)
 8001722:	42bb      	cmp	r3, r7
 8001724:	d07a      	beq.n	800181c <__aeabi_dadd+0x48c>
 8001726:	0033      	movs	r3, r6
 8001728:	e6ff      	b.n	800152a <__aeabi_dadd+0x19a>
 800172a:	0030      	movs	r0, r6
 800172c:	3d1f      	subs	r5, #31
 800172e:	40e8      	lsrs	r0, r5
 8001730:	2b20      	cmp	r3, #32
 8001732:	d003      	beq.n	800173c <__aeabi_dadd+0x3ac>
 8001734:	2140      	movs	r1, #64	; 0x40
 8001736:	1acb      	subs	r3, r1, r3
 8001738:	409e      	lsls	r6, r3
 800173a:	4337      	orrs	r7, r6
 800173c:	1e7b      	subs	r3, r7, #1
 800173e:	419f      	sbcs	r7, r3
 8001740:	2207      	movs	r2, #7
 8001742:	4307      	orrs	r7, r0
 8001744:	403a      	ands	r2, r7
 8001746:	2100      	movs	r1, #0
 8001748:	2500      	movs	r5, #0
 800174a:	e789      	b.n	8001660 <__aeabi_dadd+0x2d0>
 800174c:	1a17      	subs	r7, r2, r0
 800174e:	4643      	mov	r3, r8
 8001750:	42ba      	cmp	r2, r7
 8001752:	41b6      	sbcs	r6, r6
 8001754:	1a59      	subs	r1, r3, r1
 8001756:	4276      	negs	r6, r6
 8001758:	1b8e      	subs	r6, r1, r6
 800175a:	4664      	mov	r4, ip
 800175c:	e64e      	b.n	80013fc <__aeabi_dadd+0x6c>
 800175e:	2b1f      	cmp	r3, #31
 8001760:	dd00      	ble.n	8001764 <__aeabi_dadd+0x3d4>
 8001762:	e0ad      	b.n	80018c0 <__aeabi_dadd+0x530>
 8001764:	2620      	movs	r6, #32
 8001766:	4647      	mov	r7, r8
 8001768:	1af6      	subs	r6, r6, r3
 800176a:	40b7      	lsls	r7, r6
 800176c:	46b9      	mov	r9, r7
 800176e:	0017      	movs	r7, r2
 8001770:	46b2      	mov	sl, r6
 8001772:	40df      	lsrs	r7, r3
 8001774:	464e      	mov	r6, r9
 8001776:	433e      	orrs	r6, r7
 8001778:	0037      	movs	r7, r6
 800177a:	4656      	mov	r6, sl
 800177c:	40b2      	lsls	r2, r6
 800177e:	1e56      	subs	r6, r2, #1
 8001780:	41b2      	sbcs	r2, r6
 8001782:	4317      	orrs	r7, r2
 8001784:	4642      	mov	r2, r8
 8001786:	40da      	lsrs	r2, r3
 8001788:	1889      	adds	r1, r1, r2
 800178a:	e6ae      	b.n	80014ea <__aeabi_dadd+0x15a>
 800178c:	000007ff 	.word	0x000007ff
 8001790:	ff7fffff 	.word	0xff7fffff
 8001794:	800fffff 	.word	0x800fffff
 8001798:	2620      	movs	r6, #32
 800179a:	4647      	mov	r7, r8
 800179c:	1af6      	subs	r6, r6, r3
 800179e:	40b7      	lsls	r7, r6
 80017a0:	46b9      	mov	r9, r7
 80017a2:	0017      	movs	r7, r2
 80017a4:	46b2      	mov	sl, r6
 80017a6:	40df      	lsrs	r7, r3
 80017a8:	464e      	mov	r6, r9
 80017aa:	433e      	orrs	r6, r7
 80017ac:	0037      	movs	r7, r6
 80017ae:	4656      	mov	r6, sl
 80017b0:	40b2      	lsls	r2, r6
 80017b2:	1e56      	subs	r6, r2, #1
 80017b4:	41b2      	sbcs	r2, r6
 80017b6:	4317      	orrs	r7, r2
 80017b8:	4642      	mov	r2, r8
 80017ba:	40da      	lsrs	r2, r3
 80017bc:	1a89      	subs	r1, r1, r2
 80017be:	e799      	b.n	80016f4 <__aeabi_dadd+0x364>
 80017c0:	4c7f      	ldr	r4, [pc, #508]	; (80019c0 <__aeabi_dadd+0x630>)
 80017c2:	42a6      	cmp	r6, r4
 80017c4:	d05b      	beq.n	800187e <__aeabi_dadd+0x4ee>
 80017c6:	2480      	movs	r4, #128	; 0x80
 80017c8:	0424      	lsls	r4, r4, #16
 80017ca:	425b      	negs	r3, r3
 80017cc:	4321      	orrs	r1, r4
 80017ce:	e727      	b.n	8001620 <__aeabi_dadd+0x290>
 80017d0:	2e00      	cmp	r6, #0
 80017d2:	d10c      	bne.n	80017ee <__aeabi_dadd+0x45e>
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d100      	bne.n	80017da <__aeabi_dadd+0x44a>
 80017d8:	e0cb      	b.n	8001972 <__aeabi_dadd+0x5e2>
 80017da:	4664      	mov	r4, ip
 80017dc:	0039      	movs	r1, r7
 80017de:	0010      	movs	r0, r2
 80017e0:	4d77      	ldr	r5, [pc, #476]	; (80019c0 <__aeabi_dadd+0x630>)
 80017e2:	e6d7      	b.n	8001594 <__aeabi_dadd+0x204>
 80017e4:	4f76      	ldr	r7, [pc, #472]	; (80019c0 <__aeabi_dadd+0x630>)
 80017e6:	42bb      	cmp	r3, r7
 80017e8:	d018      	beq.n	800181c <__aeabi_dadd+0x48c>
 80017ea:	0033      	movs	r3, r6
 80017ec:	e675      	b.n	80014da <__aeabi_dadd+0x14a>
 80017ee:	2b00      	cmp	r3, #0
 80017f0:	d014      	beq.n	800181c <__aeabi_dadd+0x48c>
 80017f2:	074b      	lsls	r3, r1, #29
 80017f4:	08c0      	lsrs	r0, r0, #3
 80017f6:	4318      	orrs	r0, r3
 80017f8:	2380      	movs	r3, #128	; 0x80
 80017fa:	08c9      	lsrs	r1, r1, #3
 80017fc:	031b      	lsls	r3, r3, #12
 80017fe:	4219      	tst	r1, r3
 8001800:	d007      	beq.n	8001812 <__aeabi_dadd+0x482>
 8001802:	08fc      	lsrs	r4, r7, #3
 8001804:	421c      	tst	r4, r3
 8001806:	d104      	bne.n	8001812 <__aeabi_dadd+0x482>
 8001808:	0779      	lsls	r1, r7, #29
 800180a:	08d0      	lsrs	r0, r2, #3
 800180c:	4308      	orrs	r0, r1
 800180e:	46e1      	mov	r9, ip
 8001810:	0021      	movs	r1, r4
 8001812:	464c      	mov	r4, r9
 8001814:	0f42      	lsrs	r2, r0, #29
 8001816:	00c9      	lsls	r1, r1, #3
 8001818:	4311      	orrs	r1, r2
 800181a:	00c0      	lsls	r0, r0, #3
 800181c:	4d68      	ldr	r5, [pc, #416]	; (80019c0 <__aeabi_dadd+0x630>)
 800181e:	e6b9      	b.n	8001594 <__aeabi_dadd+0x204>
 8001820:	001d      	movs	r5, r3
 8001822:	2200      	movs	r2, #0
 8001824:	2300      	movs	r3, #0
 8001826:	e6c0      	b.n	80015aa <__aeabi_dadd+0x21a>
 8001828:	2d00      	cmp	r5, #0
 800182a:	d15b      	bne.n	80018e4 <__aeabi_dadd+0x554>
 800182c:	000d      	movs	r5, r1
 800182e:	4305      	orrs	r5, r0
 8001830:	d100      	bne.n	8001834 <__aeabi_dadd+0x4a4>
 8001832:	e6e2      	b.n	80015fa <__aeabi_dadd+0x26a>
 8001834:	1c5d      	adds	r5, r3, #1
 8001836:	d100      	bne.n	800183a <__aeabi_dadd+0x4aa>
 8001838:	e0b0      	b.n	800199c <__aeabi_dadd+0x60c>
 800183a:	4d61      	ldr	r5, [pc, #388]	; (80019c0 <__aeabi_dadd+0x630>)
 800183c:	42ae      	cmp	r6, r5
 800183e:	d01f      	beq.n	8001880 <__aeabi_dadd+0x4f0>
 8001840:	43db      	mvns	r3, r3
 8001842:	2b38      	cmp	r3, #56	; 0x38
 8001844:	dc71      	bgt.n	800192a <__aeabi_dadd+0x59a>
 8001846:	2b1f      	cmp	r3, #31
 8001848:	dd00      	ble.n	800184c <__aeabi_dadd+0x4bc>
 800184a:	e096      	b.n	800197a <__aeabi_dadd+0x5ea>
 800184c:	2520      	movs	r5, #32
 800184e:	000f      	movs	r7, r1
 8001850:	1aed      	subs	r5, r5, r3
 8001852:	40af      	lsls	r7, r5
 8001854:	46b9      	mov	r9, r7
 8001856:	0007      	movs	r7, r0
 8001858:	46aa      	mov	sl, r5
 800185a:	40df      	lsrs	r7, r3
 800185c:	464d      	mov	r5, r9
 800185e:	433d      	orrs	r5, r7
 8001860:	002f      	movs	r7, r5
 8001862:	4655      	mov	r5, sl
 8001864:	40a8      	lsls	r0, r5
 8001866:	40d9      	lsrs	r1, r3
 8001868:	1e45      	subs	r5, r0, #1
 800186a:	41a8      	sbcs	r0, r5
 800186c:	4488      	add	r8, r1
 800186e:	4307      	orrs	r7, r0
 8001870:	18bf      	adds	r7, r7, r2
 8001872:	4297      	cmp	r7, r2
 8001874:	4192      	sbcs	r2, r2
 8001876:	4251      	negs	r1, r2
 8001878:	4441      	add	r1, r8
 800187a:	0035      	movs	r5, r6
 800187c:	e63a      	b.n	80014f4 <__aeabi_dadd+0x164>
 800187e:	4664      	mov	r4, ip
 8001880:	0035      	movs	r5, r6
 8001882:	4641      	mov	r1, r8
 8001884:	0010      	movs	r0, r2
 8001886:	e685      	b.n	8001594 <__aeabi_dadd+0x204>
 8001888:	000b      	movs	r3, r1
 800188a:	4303      	orrs	r3, r0
 800188c:	2d00      	cmp	r5, #0
 800188e:	d000      	beq.n	8001892 <__aeabi_dadd+0x502>
 8001890:	e663      	b.n	800155a <__aeabi_dadd+0x1ca>
 8001892:	2b00      	cmp	r3, #0
 8001894:	d0f5      	beq.n	8001882 <__aeabi_dadd+0x4f2>
 8001896:	4643      	mov	r3, r8
 8001898:	4313      	orrs	r3, r2
 800189a:	d100      	bne.n	800189e <__aeabi_dadd+0x50e>
 800189c:	e67a      	b.n	8001594 <__aeabi_dadd+0x204>
 800189e:	1887      	adds	r7, r0, r2
 80018a0:	4287      	cmp	r7, r0
 80018a2:	4180      	sbcs	r0, r0
 80018a4:	2207      	movs	r2, #7
 80018a6:	4441      	add	r1, r8
 80018a8:	4240      	negs	r0, r0
 80018aa:	1809      	adds	r1, r1, r0
 80018ac:	403a      	ands	r2, r7
 80018ae:	020b      	lsls	r3, r1, #8
 80018b0:	d400      	bmi.n	80018b4 <__aeabi_dadd+0x524>
 80018b2:	e6d5      	b.n	8001660 <__aeabi_dadd+0x2d0>
 80018b4:	4b43      	ldr	r3, [pc, #268]	; (80019c4 <__aeabi_dadd+0x634>)
 80018b6:	3501      	adds	r5, #1
 80018b8:	4019      	ands	r1, r3
 80018ba:	e5c9      	b.n	8001450 <__aeabi_dadd+0xc0>
 80018bc:	0038      	movs	r0, r7
 80018be:	e669      	b.n	8001594 <__aeabi_dadd+0x204>
 80018c0:	001e      	movs	r6, r3
 80018c2:	4647      	mov	r7, r8
 80018c4:	3e20      	subs	r6, #32
 80018c6:	40f7      	lsrs	r7, r6
 80018c8:	46bc      	mov	ip, r7
 80018ca:	2b20      	cmp	r3, #32
 80018cc:	d004      	beq.n	80018d8 <__aeabi_dadd+0x548>
 80018ce:	2640      	movs	r6, #64	; 0x40
 80018d0:	1af3      	subs	r3, r6, r3
 80018d2:	4646      	mov	r6, r8
 80018d4:	409e      	lsls	r6, r3
 80018d6:	4332      	orrs	r2, r6
 80018d8:	0017      	movs	r7, r2
 80018da:	4663      	mov	r3, ip
 80018dc:	1e7a      	subs	r2, r7, #1
 80018de:	4197      	sbcs	r7, r2
 80018e0:	431f      	orrs	r7, r3
 80018e2:	e602      	b.n	80014ea <__aeabi_dadd+0x15a>
 80018e4:	4d36      	ldr	r5, [pc, #216]	; (80019c0 <__aeabi_dadd+0x630>)
 80018e6:	42ae      	cmp	r6, r5
 80018e8:	d0ca      	beq.n	8001880 <__aeabi_dadd+0x4f0>
 80018ea:	2580      	movs	r5, #128	; 0x80
 80018ec:	042d      	lsls	r5, r5, #16
 80018ee:	425b      	negs	r3, r3
 80018f0:	4329      	orrs	r1, r5
 80018f2:	e7a6      	b.n	8001842 <__aeabi_dadd+0x4b2>
 80018f4:	4308      	orrs	r0, r1
 80018f6:	1e41      	subs	r1, r0, #1
 80018f8:	4188      	sbcs	r0, r1
 80018fa:	e6a6      	b.n	800164a <__aeabi_dadd+0x2ba>
 80018fc:	2b00      	cmp	r3, #0
 80018fe:	d100      	bne.n	8001902 <__aeabi_dadd+0x572>
 8001900:	e648      	b.n	8001594 <__aeabi_dadd+0x204>
 8001902:	1a87      	subs	r7, r0, r2
 8001904:	4643      	mov	r3, r8
 8001906:	42b8      	cmp	r0, r7
 8001908:	41b6      	sbcs	r6, r6
 800190a:	1acb      	subs	r3, r1, r3
 800190c:	4276      	negs	r6, r6
 800190e:	1b9e      	subs	r6, r3, r6
 8001910:	0233      	lsls	r3, r6, #8
 8001912:	d54b      	bpl.n	80019ac <__aeabi_dadd+0x61c>
 8001914:	1a17      	subs	r7, r2, r0
 8001916:	4643      	mov	r3, r8
 8001918:	42ba      	cmp	r2, r7
 800191a:	4192      	sbcs	r2, r2
 800191c:	1a59      	subs	r1, r3, r1
 800191e:	4252      	negs	r2, r2
 8001920:	1a89      	subs	r1, r1, r2
 8001922:	2207      	movs	r2, #7
 8001924:	4664      	mov	r4, ip
 8001926:	403a      	ands	r2, r7
 8001928:	e592      	b.n	8001450 <__aeabi_dadd+0xc0>
 800192a:	4301      	orrs	r1, r0
 800192c:	000f      	movs	r7, r1
 800192e:	1e79      	subs	r1, r7, #1
 8001930:	418f      	sbcs	r7, r1
 8001932:	e79d      	b.n	8001870 <__aeabi_dadd+0x4e0>
 8001934:	001c      	movs	r4, r3
 8001936:	000f      	movs	r7, r1
 8001938:	3c20      	subs	r4, #32
 800193a:	40e7      	lsrs	r7, r4
 800193c:	2b20      	cmp	r3, #32
 800193e:	d003      	beq.n	8001948 <__aeabi_dadd+0x5b8>
 8001940:	2440      	movs	r4, #64	; 0x40
 8001942:	1ae3      	subs	r3, r4, r3
 8001944:	4099      	lsls	r1, r3
 8001946:	4308      	orrs	r0, r1
 8001948:	1e41      	subs	r1, r0, #1
 800194a:	4188      	sbcs	r0, r1
 800194c:	4338      	orrs	r0, r7
 800194e:	e67c      	b.n	800164a <__aeabi_dadd+0x2ba>
 8001950:	2200      	movs	r2, #0
 8001952:	2400      	movs	r4, #0
 8001954:	e625      	b.n	80015a2 <__aeabi_dadd+0x212>
 8001956:	1a17      	subs	r7, r2, r0
 8001958:	4643      	mov	r3, r8
 800195a:	42ba      	cmp	r2, r7
 800195c:	4192      	sbcs	r2, r2
 800195e:	1a59      	subs	r1, r3, r1
 8001960:	4252      	negs	r2, r2
 8001962:	1a89      	subs	r1, r1, r2
 8001964:	4664      	mov	r4, ip
 8001966:	0035      	movs	r5, r6
 8001968:	e543      	b.n	80013f2 <__aeabi_dadd+0x62>
 800196a:	4641      	mov	r1, r8
 800196c:	0010      	movs	r0, r2
 800196e:	4d14      	ldr	r5, [pc, #80]	; (80019c0 <__aeabi_dadd+0x630>)
 8001970:	e610      	b.n	8001594 <__aeabi_dadd+0x204>
 8001972:	2280      	movs	r2, #128	; 0x80
 8001974:	2400      	movs	r4, #0
 8001976:	0312      	lsls	r2, r2, #12
 8001978:	e680      	b.n	800167c <__aeabi_dadd+0x2ec>
 800197a:	001d      	movs	r5, r3
 800197c:	000f      	movs	r7, r1
 800197e:	3d20      	subs	r5, #32
 8001980:	40ef      	lsrs	r7, r5
 8001982:	46bc      	mov	ip, r7
 8001984:	2b20      	cmp	r3, #32
 8001986:	d003      	beq.n	8001990 <__aeabi_dadd+0x600>
 8001988:	2540      	movs	r5, #64	; 0x40
 800198a:	1aeb      	subs	r3, r5, r3
 800198c:	4099      	lsls	r1, r3
 800198e:	4308      	orrs	r0, r1
 8001990:	0007      	movs	r7, r0
 8001992:	4663      	mov	r3, ip
 8001994:	1e78      	subs	r0, r7, #1
 8001996:	4187      	sbcs	r7, r0
 8001998:	431f      	orrs	r7, r3
 800199a:	e769      	b.n	8001870 <__aeabi_dadd+0x4e0>
 800199c:	1887      	adds	r7, r0, r2
 800199e:	4297      	cmp	r7, r2
 80019a0:	419b      	sbcs	r3, r3
 80019a2:	4441      	add	r1, r8
 80019a4:	425b      	negs	r3, r3
 80019a6:	18c9      	adds	r1, r1, r3
 80019a8:	0035      	movs	r5, r6
 80019aa:	e5a3      	b.n	80014f4 <__aeabi_dadd+0x164>
 80019ac:	003b      	movs	r3, r7
 80019ae:	4333      	orrs	r3, r6
 80019b0:	d0ce      	beq.n	8001950 <__aeabi_dadd+0x5c0>
 80019b2:	2207      	movs	r2, #7
 80019b4:	0031      	movs	r1, r6
 80019b6:	403a      	ands	r2, r7
 80019b8:	e652      	b.n	8001660 <__aeabi_dadd+0x2d0>
 80019ba:	2300      	movs	r3, #0
 80019bc:	001a      	movs	r2, r3
 80019be:	e5f4      	b.n	80015aa <__aeabi_dadd+0x21a>
 80019c0:	000007ff 	.word	0x000007ff
 80019c4:	ff7fffff 	.word	0xff7fffff

080019c8 <__aeabi_ddiv>:
 80019c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80019ca:	4657      	mov	r7, sl
 80019cc:	46de      	mov	lr, fp
 80019ce:	464e      	mov	r6, r9
 80019d0:	4645      	mov	r5, r8
 80019d2:	b5e0      	push	{r5, r6, r7, lr}
 80019d4:	4683      	mov	fp, r0
 80019d6:	0007      	movs	r7, r0
 80019d8:	030e      	lsls	r6, r1, #12
 80019da:	0048      	lsls	r0, r1, #1
 80019dc:	b085      	sub	sp, #20
 80019de:	4692      	mov	sl, r2
 80019e0:	001c      	movs	r4, r3
 80019e2:	0b36      	lsrs	r6, r6, #12
 80019e4:	0d40      	lsrs	r0, r0, #21
 80019e6:	0fcd      	lsrs	r5, r1, #31
 80019e8:	2800      	cmp	r0, #0
 80019ea:	d100      	bne.n	80019ee <__aeabi_ddiv+0x26>
 80019ec:	e09d      	b.n	8001b2a <__aeabi_ddiv+0x162>
 80019ee:	4b95      	ldr	r3, [pc, #596]	; (8001c44 <__aeabi_ddiv+0x27c>)
 80019f0:	4298      	cmp	r0, r3
 80019f2:	d039      	beq.n	8001a68 <__aeabi_ddiv+0xa0>
 80019f4:	2380      	movs	r3, #128	; 0x80
 80019f6:	00f6      	lsls	r6, r6, #3
 80019f8:	041b      	lsls	r3, r3, #16
 80019fa:	431e      	orrs	r6, r3
 80019fc:	4a92      	ldr	r2, [pc, #584]	; (8001c48 <__aeabi_ddiv+0x280>)
 80019fe:	0f7b      	lsrs	r3, r7, #29
 8001a00:	4333      	orrs	r3, r6
 8001a02:	4699      	mov	r9, r3
 8001a04:	4694      	mov	ip, r2
 8001a06:	0003      	movs	r3, r0
 8001a08:	4463      	add	r3, ip
 8001a0a:	9300      	str	r3, [sp, #0]
 8001a0c:	2300      	movs	r3, #0
 8001a0e:	2600      	movs	r6, #0
 8001a10:	00ff      	lsls	r7, r7, #3
 8001a12:	9302      	str	r3, [sp, #8]
 8001a14:	0323      	lsls	r3, r4, #12
 8001a16:	0b1b      	lsrs	r3, r3, #12
 8001a18:	4698      	mov	r8, r3
 8001a1a:	0063      	lsls	r3, r4, #1
 8001a1c:	0fe4      	lsrs	r4, r4, #31
 8001a1e:	4652      	mov	r2, sl
 8001a20:	0d5b      	lsrs	r3, r3, #21
 8001a22:	9401      	str	r4, [sp, #4]
 8001a24:	d100      	bne.n	8001a28 <__aeabi_ddiv+0x60>
 8001a26:	e0b3      	b.n	8001b90 <__aeabi_ddiv+0x1c8>
 8001a28:	4986      	ldr	r1, [pc, #536]	; (8001c44 <__aeabi_ddiv+0x27c>)
 8001a2a:	428b      	cmp	r3, r1
 8001a2c:	d100      	bne.n	8001a30 <__aeabi_ddiv+0x68>
 8001a2e:	e09e      	b.n	8001b6e <__aeabi_ddiv+0x1a6>
 8001a30:	4642      	mov	r2, r8
 8001a32:	00d1      	lsls	r1, r2, #3
 8001a34:	2280      	movs	r2, #128	; 0x80
 8001a36:	0412      	lsls	r2, r2, #16
 8001a38:	430a      	orrs	r2, r1
 8001a3a:	4651      	mov	r1, sl
 8001a3c:	0f49      	lsrs	r1, r1, #29
 8001a3e:	4311      	orrs	r1, r2
 8001a40:	468b      	mov	fp, r1
 8001a42:	4981      	ldr	r1, [pc, #516]	; (8001c48 <__aeabi_ddiv+0x280>)
 8001a44:	4652      	mov	r2, sl
 8001a46:	468c      	mov	ip, r1
 8001a48:	9900      	ldr	r1, [sp, #0]
 8001a4a:	4463      	add	r3, ip
 8001a4c:	1acb      	subs	r3, r1, r3
 8001a4e:	2100      	movs	r1, #0
 8001a50:	00d2      	lsls	r2, r2, #3
 8001a52:	9300      	str	r3, [sp, #0]
 8001a54:	002b      	movs	r3, r5
 8001a56:	4063      	eors	r3, r4
 8001a58:	469a      	mov	sl, r3
 8001a5a:	2e0f      	cmp	r6, #15
 8001a5c:	d900      	bls.n	8001a60 <__aeabi_ddiv+0x98>
 8001a5e:	e105      	b.n	8001c6c <__aeabi_ddiv+0x2a4>
 8001a60:	4b7a      	ldr	r3, [pc, #488]	; (8001c4c <__aeabi_ddiv+0x284>)
 8001a62:	00b6      	lsls	r6, r6, #2
 8001a64:	599b      	ldr	r3, [r3, r6]
 8001a66:	469f      	mov	pc, r3
 8001a68:	465b      	mov	r3, fp
 8001a6a:	4333      	orrs	r3, r6
 8001a6c:	4699      	mov	r9, r3
 8001a6e:	d000      	beq.n	8001a72 <__aeabi_ddiv+0xaa>
 8001a70:	e0b8      	b.n	8001be4 <__aeabi_ddiv+0x21c>
 8001a72:	2302      	movs	r3, #2
 8001a74:	2608      	movs	r6, #8
 8001a76:	2700      	movs	r7, #0
 8001a78:	9000      	str	r0, [sp, #0]
 8001a7a:	9302      	str	r3, [sp, #8]
 8001a7c:	e7ca      	b.n	8001a14 <__aeabi_ddiv+0x4c>
 8001a7e:	46cb      	mov	fp, r9
 8001a80:	003a      	movs	r2, r7
 8001a82:	9902      	ldr	r1, [sp, #8]
 8001a84:	9501      	str	r5, [sp, #4]
 8001a86:	9b01      	ldr	r3, [sp, #4]
 8001a88:	469a      	mov	sl, r3
 8001a8a:	2902      	cmp	r1, #2
 8001a8c:	d027      	beq.n	8001ade <__aeabi_ddiv+0x116>
 8001a8e:	2903      	cmp	r1, #3
 8001a90:	d100      	bne.n	8001a94 <__aeabi_ddiv+0xcc>
 8001a92:	e280      	b.n	8001f96 <__aeabi_ddiv+0x5ce>
 8001a94:	2901      	cmp	r1, #1
 8001a96:	d044      	beq.n	8001b22 <__aeabi_ddiv+0x15a>
 8001a98:	496d      	ldr	r1, [pc, #436]	; (8001c50 <__aeabi_ddiv+0x288>)
 8001a9a:	9b00      	ldr	r3, [sp, #0]
 8001a9c:	468c      	mov	ip, r1
 8001a9e:	4463      	add	r3, ip
 8001aa0:	001c      	movs	r4, r3
 8001aa2:	2c00      	cmp	r4, #0
 8001aa4:	dd38      	ble.n	8001b18 <__aeabi_ddiv+0x150>
 8001aa6:	0753      	lsls	r3, r2, #29
 8001aa8:	d000      	beq.n	8001aac <__aeabi_ddiv+0xe4>
 8001aaa:	e213      	b.n	8001ed4 <__aeabi_ddiv+0x50c>
 8001aac:	08d2      	lsrs	r2, r2, #3
 8001aae:	465b      	mov	r3, fp
 8001ab0:	01db      	lsls	r3, r3, #7
 8001ab2:	d509      	bpl.n	8001ac8 <__aeabi_ddiv+0x100>
 8001ab4:	4659      	mov	r1, fp
 8001ab6:	4b67      	ldr	r3, [pc, #412]	; (8001c54 <__aeabi_ddiv+0x28c>)
 8001ab8:	4019      	ands	r1, r3
 8001aba:	468b      	mov	fp, r1
 8001abc:	2180      	movs	r1, #128	; 0x80
 8001abe:	00c9      	lsls	r1, r1, #3
 8001ac0:	468c      	mov	ip, r1
 8001ac2:	9b00      	ldr	r3, [sp, #0]
 8001ac4:	4463      	add	r3, ip
 8001ac6:	001c      	movs	r4, r3
 8001ac8:	4b63      	ldr	r3, [pc, #396]	; (8001c58 <__aeabi_ddiv+0x290>)
 8001aca:	429c      	cmp	r4, r3
 8001acc:	dc07      	bgt.n	8001ade <__aeabi_ddiv+0x116>
 8001ace:	465b      	mov	r3, fp
 8001ad0:	0564      	lsls	r4, r4, #21
 8001ad2:	075f      	lsls	r7, r3, #29
 8001ad4:	025b      	lsls	r3, r3, #9
 8001ad6:	4317      	orrs	r7, r2
 8001ad8:	0b1b      	lsrs	r3, r3, #12
 8001ada:	0d62      	lsrs	r2, r4, #21
 8001adc:	e002      	b.n	8001ae4 <__aeabi_ddiv+0x11c>
 8001ade:	2300      	movs	r3, #0
 8001ae0:	2700      	movs	r7, #0
 8001ae2:	4a58      	ldr	r2, [pc, #352]	; (8001c44 <__aeabi_ddiv+0x27c>)
 8001ae4:	2100      	movs	r1, #0
 8001ae6:	031b      	lsls	r3, r3, #12
 8001ae8:	0b1c      	lsrs	r4, r3, #12
 8001aea:	0d0b      	lsrs	r3, r1, #20
 8001aec:	051b      	lsls	r3, r3, #20
 8001aee:	4323      	orrs	r3, r4
 8001af0:	0514      	lsls	r4, r2, #20
 8001af2:	4a5a      	ldr	r2, [pc, #360]	; (8001c5c <__aeabi_ddiv+0x294>)
 8001af4:	0038      	movs	r0, r7
 8001af6:	4013      	ands	r3, r2
 8001af8:	431c      	orrs	r4, r3
 8001afa:	4653      	mov	r3, sl
 8001afc:	0064      	lsls	r4, r4, #1
 8001afe:	07db      	lsls	r3, r3, #31
 8001b00:	0864      	lsrs	r4, r4, #1
 8001b02:	431c      	orrs	r4, r3
 8001b04:	0021      	movs	r1, r4
 8001b06:	b005      	add	sp, #20
 8001b08:	bc3c      	pop	{r2, r3, r4, r5}
 8001b0a:	4690      	mov	r8, r2
 8001b0c:	4699      	mov	r9, r3
 8001b0e:	46a2      	mov	sl, r4
 8001b10:	46ab      	mov	fp, r5
 8001b12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b14:	2201      	movs	r2, #1
 8001b16:	4252      	negs	r2, r2
 8001b18:	2301      	movs	r3, #1
 8001b1a:	1b1b      	subs	r3, r3, r4
 8001b1c:	2b38      	cmp	r3, #56	; 0x38
 8001b1e:	dc00      	bgt.n	8001b22 <__aeabi_ddiv+0x15a>
 8001b20:	e1ad      	b.n	8001e7e <__aeabi_ddiv+0x4b6>
 8001b22:	2200      	movs	r2, #0
 8001b24:	2300      	movs	r3, #0
 8001b26:	2700      	movs	r7, #0
 8001b28:	e7dc      	b.n	8001ae4 <__aeabi_ddiv+0x11c>
 8001b2a:	465b      	mov	r3, fp
 8001b2c:	4333      	orrs	r3, r6
 8001b2e:	4699      	mov	r9, r3
 8001b30:	d05e      	beq.n	8001bf0 <__aeabi_ddiv+0x228>
 8001b32:	2e00      	cmp	r6, #0
 8001b34:	d100      	bne.n	8001b38 <__aeabi_ddiv+0x170>
 8001b36:	e18a      	b.n	8001e4e <__aeabi_ddiv+0x486>
 8001b38:	0030      	movs	r0, r6
 8001b3a:	f001 fa9d 	bl	8003078 <__clzsi2>
 8001b3e:	0003      	movs	r3, r0
 8001b40:	3b0b      	subs	r3, #11
 8001b42:	2b1c      	cmp	r3, #28
 8001b44:	dd00      	ble.n	8001b48 <__aeabi_ddiv+0x180>
 8001b46:	e17b      	b.n	8001e40 <__aeabi_ddiv+0x478>
 8001b48:	221d      	movs	r2, #29
 8001b4a:	1ad3      	subs	r3, r2, r3
 8001b4c:	465a      	mov	r2, fp
 8001b4e:	0001      	movs	r1, r0
 8001b50:	40da      	lsrs	r2, r3
 8001b52:	3908      	subs	r1, #8
 8001b54:	408e      	lsls	r6, r1
 8001b56:	0013      	movs	r3, r2
 8001b58:	465f      	mov	r7, fp
 8001b5a:	4333      	orrs	r3, r6
 8001b5c:	4699      	mov	r9, r3
 8001b5e:	408f      	lsls	r7, r1
 8001b60:	4b3f      	ldr	r3, [pc, #252]	; (8001c60 <__aeabi_ddiv+0x298>)
 8001b62:	2600      	movs	r6, #0
 8001b64:	1a1b      	subs	r3, r3, r0
 8001b66:	9300      	str	r3, [sp, #0]
 8001b68:	2300      	movs	r3, #0
 8001b6a:	9302      	str	r3, [sp, #8]
 8001b6c:	e752      	b.n	8001a14 <__aeabi_ddiv+0x4c>
 8001b6e:	4641      	mov	r1, r8
 8001b70:	4653      	mov	r3, sl
 8001b72:	430b      	orrs	r3, r1
 8001b74:	493b      	ldr	r1, [pc, #236]	; (8001c64 <__aeabi_ddiv+0x29c>)
 8001b76:	469b      	mov	fp, r3
 8001b78:	468c      	mov	ip, r1
 8001b7a:	9b00      	ldr	r3, [sp, #0]
 8001b7c:	4463      	add	r3, ip
 8001b7e:	9300      	str	r3, [sp, #0]
 8001b80:	465b      	mov	r3, fp
 8001b82:	2b00      	cmp	r3, #0
 8001b84:	d13b      	bne.n	8001bfe <__aeabi_ddiv+0x236>
 8001b86:	2302      	movs	r3, #2
 8001b88:	2200      	movs	r2, #0
 8001b8a:	431e      	orrs	r6, r3
 8001b8c:	2102      	movs	r1, #2
 8001b8e:	e761      	b.n	8001a54 <__aeabi_ddiv+0x8c>
 8001b90:	4643      	mov	r3, r8
 8001b92:	4313      	orrs	r3, r2
 8001b94:	469b      	mov	fp, r3
 8001b96:	d037      	beq.n	8001c08 <__aeabi_ddiv+0x240>
 8001b98:	4643      	mov	r3, r8
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	d100      	bne.n	8001ba0 <__aeabi_ddiv+0x1d8>
 8001b9e:	e162      	b.n	8001e66 <__aeabi_ddiv+0x49e>
 8001ba0:	4640      	mov	r0, r8
 8001ba2:	f001 fa69 	bl	8003078 <__clzsi2>
 8001ba6:	0003      	movs	r3, r0
 8001ba8:	3b0b      	subs	r3, #11
 8001baa:	2b1c      	cmp	r3, #28
 8001bac:	dd00      	ble.n	8001bb0 <__aeabi_ddiv+0x1e8>
 8001bae:	e153      	b.n	8001e58 <__aeabi_ddiv+0x490>
 8001bb0:	0002      	movs	r2, r0
 8001bb2:	4641      	mov	r1, r8
 8001bb4:	3a08      	subs	r2, #8
 8001bb6:	4091      	lsls	r1, r2
 8001bb8:	4688      	mov	r8, r1
 8001bba:	211d      	movs	r1, #29
 8001bbc:	1acb      	subs	r3, r1, r3
 8001bbe:	4651      	mov	r1, sl
 8001bc0:	40d9      	lsrs	r1, r3
 8001bc2:	000b      	movs	r3, r1
 8001bc4:	4641      	mov	r1, r8
 8001bc6:	430b      	orrs	r3, r1
 8001bc8:	469b      	mov	fp, r3
 8001bca:	4653      	mov	r3, sl
 8001bcc:	4093      	lsls	r3, r2
 8001bce:	001a      	movs	r2, r3
 8001bd0:	9b00      	ldr	r3, [sp, #0]
 8001bd2:	4925      	ldr	r1, [pc, #148]	; (8001c68 <__aeabi_ddiv+0x2a0>)
 8001bd4:	469c      	mov	ip, r3
 8001bd6:	4460      	add	r0, ip
 8001bd8:	0003      	movs	r3, r0
 8001bda:	468c      	mov	ip, r1
 8001bdc:	4463      	add	r3, ip
 8001bde:	9300      	str	r3, [sp, #0]
 8001be0:	2100      	movs	r1, #0
 8001be2:	e737      	b.n	8001a54 <__aeabi_ddiv+0x8c>
 8001be4:	2303      	movs	r3, #3
 8001be6:	46b1      	mov	r9, r6
 8001be8:	9000      	str	r0, [sp, #0]
 8001bea:	260c      	movs	r6, #12
 8001bec:	9302      	str	r3, [sp, #8]
 8001bee:	e711      	b.n	8001a14 <__aeabi_ddiv+0x4c>
 8001bf0:	2300      	movs	r3, #0
 8001bf2:	9300      	str	r3, [sp, #0]
 8001bf4:	3301      	adds	r3, #1
 8001bf6:	2604      	movs	r6, #4
 8001bf8:	2700      	movs	r7, #0
 8001bfa:	9302      	str	r3, [sp, #8]
 8001bfc:	e70a      	b.n	8001a14 <__aeabi_ddiv+0x4c>
 8001bfe:	2303      	movs	r3, #3
 8001c00:	46c3      	mov	fp, r8
 8001c02:	431e      	orrs	r6, r3
 8001c04:	2103      	movs	r1, #3
 8001c06:	e725      	b.n	8001a54 <__aeabi_ddiv+0x8c>
 8001c08:	3301      	adds	r3, #1
 8001c0a:	431e      	orrs	r6, r3
 8001c0c:	2200      	movs	r2, #0
 8001c0e:	2101      	movs	r1, #1
 8001c10:	e720      	b.n	8001a54 <__aeabi_ddiv+0x8c>
 8001c12:	2300      	movs	r3, #0
 8001c14:	469a      	mov	sl, r3
 8001c16:	2380      	movs	r3, #128	; 0x80
 8001c18:	2700      	movs	r7, #0
 8001c1a:	031b      	lsls	r3, r3, #12
 8001c1c:	4a09      	ldr	r2, [pc, #36]	; (8001c44 <__aeabi_ddiv+0x27c>)
 8001c1e:	e761      	b.n	8001ae4 <__aeabi_ddiv+0x11c>
 8001c20:	2380      	movs	r3, #128	; 0x80
 8001c22:	4649      	mov	r1, r9
 8001c24:	031b      	lsls	r3, r3, #12
 8001c26:	4219      	tst	r1, r3
 8001c28:	d100      	bne.n	8001c2c <__aeabi_ddiv+0x264>
 8001c2a:	e0e2      	b.n	8001df2 <__aeabi_ddiv+0x42a>
 8001c2c:	4659      	mov	r1, fp
 8001c2e:	4219      	tst	r1, r3
 8001c30:	d000      	beq.n	8001c34 <__aeabi_ddiv+0x26c>
 8001c32:	e0de      	b.n	8001df2 <__aeabi_ddiv+0x42a>
 8001c34:	430b      	orrs	r3, r1
 8001c36:	031b      	lsls	r3, r3, #12
 8001c38:	0017      	movs	r7, r2
 8001c3a:	0b1b      	lsrs	r3, r3, #12
 8001c3c:	46a2      	mov	sl, r4
 8001c3e:	4a01      	ldr	r2, [pc, #4]	; (8001c44 <__aeabi_ddiv+0x27c>)
 8001c40:	e750      	b.n	8001ae4 <__aeabi_ddiv+0x11c>
 8001c42:	46c0      	nop			; (mov r8, r8)
 8001c44:	000007ff 	.word	0x000007ff
 8001c48:	fffffc01 	.word	0xfffffc01
 8001c4c:	0800bc74 	.word	0x0800bc74
 8001c50:	000003ff 	.word	0x000003ff
 8001c54:	feffffff 	.word	0xfeffffff
 8001c58:	000007fe 	.word	0x000007fe
 8001c5c:	800fffff 	.word	0x800fffff
 8001c60:	fffffc0d 	.word	0xfffffc0d
 8001c64:	fffff801 	.word	0xfffff801
 8001c68:	000003f3 	.word	0x000003f3
 8001c6c:	45d9      	cmp	r9, fp
 8001c6e:	d900      	bls.n	8001c72 <__aeabi_ddiv+0x2aa>
 8001c70:	e0cb      	b.n	8001e0a <__aeabi_ddiv+0x442>
 8001c72:	d100      	bne.n	8001c76 <__aeabi_ddiv+0x2ae>
 8001c74:	e0c6      	b.n	8001e04 <__aeabi_ddiv+0x43c>
 8001c76:	003c      	movs	r4, r7
 8001c78:	4648      	mov	r0, r9
 8001c7a:	2700      	movs	r7, #0
 8001c7c:	9b00      	ldr	r3, [sp, #0]
 8001c7e:	3b01      	subs	r3, #1
 8001c80:	9300      	str	r3, [sp, #0]
 8001c82:	465b      	mov	r3, fp
 8001c84:	0e16      	lsrs	r6, r2, #24
 8001c86:	021b      	lsls	r3, r3, #8
 8001c88:	431e      	orrs	r6, r3
 8001c8a:	0213      	lsls	r3, r2, #8
 8001c8c:	4698      	mov	r8, r3
 8001c8e:	0433      	lsls	r3, r6, #16
 8001c90:	0c1b      	lsrs	r3, r3, #16
 8001c92:	4699      	mov	r9, r3
 8001c94:	0c31      	lsrs	r1, r6, #16
 8001c96:	9101      	str	r1, [sp, #4]
 8001c98:	f7fe fae2 	bl	8000260 <__aeabi_uidivmod>
 8001c9c:	464a      	mov	r2, r9
 8001c9e:	4342      	muls	r2, r0
 8001ca0:	040b      	lsls	r3, r1, #16
 8001ca2:	0c21      	lsrs	r1, r4, #16
 8001ca4:	0005      	movs	r5, r0
 8001ca6:	4319      	orrs	r1, r3
 8001ca8:	428a      	cmp	r2, r1
 8001caa:	d907      	bls.n	8001cbc <__aeabi_ddiv+0x2f4>
 8001cac:	1989      	adds	r1, r1, r6
 8001cae:	3d01      	subs	r5, #1
 8001cb0:	428e      	cmp	r6, r1
 8001cb2:	d803      	bhi.n	8001cbc <__aeabi_ddiv+0x2f4>
 8001cb4:	428a      	cmp	r2, r1
 8001cb6:	d901      	bls.n	8001cbc <__aeabi_ddiv+0x2f4>
 8001cb8:	1e85      	subs	r5, r0, #2
 8001cba:	1989      	adds	r1, r1, r6
 8001cbc:	1a88      	subs	r0, r1, r2
 8001cbe:	9901      	ldr	r1, [sp, #4]
 8001cc0:	f7fe face 	bl	8000260 <__aeabi_uidivmod>
 8001cc4:	0409      	lsls	r1, r1, #16
 8001cc6:	468c      	mov	ip, r1
 8001cc8:	464a      	mov	r2, r9
 8001cca:	0421      	lsls	r1, r4, #16
 8001ccc:	4664      	mov	r4, ip
 8001cce:	4342      	muls	r2, r0
 8001cd0:	0c09      	lsrs	r1, r1, #16
 8001cd2:	0003      	movs	r3, r0
 8001cd4:	4321      	orrs	r1, r4
 8001cd6:	428a      	cmp	r2, r1
 8001cd8:	d904      	bls.n	8001ce4 <__aeabi_ddiv+0x31c>
 8001cda:	1989      	adds	r1, r1, r6
 8001cdc:	3b01      	subs	r3, #1
 8001cde:	428e      	cmp	r6, r1
 8001ce0:	d800      	bhi.n	8001ce4 <__aeabi_ddiv+0x31c>
 8001ce2:	e0f1      	b.n	8001ec8 <__aeabi_ddiv+0x500>
 8001ce4:	042d      	lsls	r5, r5, #16
 8001ce6:	431d      	orrs	r5, r3
 8001ce8:	46ab      	mov	fp, r5
 8001cea:	4643      	mov	r3, r8
 8001cec:	1a89      	subs	r1, r1, r2
 8001cee:	4642      	mov	r2, r8
 8001cf0:	0c28      	lsrs	r0, r5, #16
 8001cf2:	0412      	lsls	r2, r2, #16
 8001cf4:	0c1d      	lsrs	r5, r3, #16
 8001cf6:	465b      	mov	r3, fp
 8001cf8:	0c14      	lsrs	r4, r2, #16
 8001cfa:	0022      	movs	r2, r4
 8001cfc:	041b      	lsls	r3, r3, #16
 8001cfe:	0c1b      	lsrs	r3, r3, #16
 8001d00:	435a      	muls	r2, r3
 8001d02:	9403      	str	r4, [sp, #12]
 8001d04:	436b      	muls	r3, r5
 8001d06:	4344      	muls	r4, r0
 8001d08:	9502      	str	r5, [sp, #8]
 8001d0a:	4368      	muls	r0, r5
 8001d0c:	191b      	adds	r3, r3, r4
 8001d0e:	0c15      	lsrs	r5, r2, #16
 8001d10:	18eb      	adds	r3, r5, r3
 8001d12:	429c      	cmp	r4, r3
 8001d14:	d903      	bls.n	8001d1e <__aeabi_ddiv+0x356>
 8001d16:	2480      	movs	r4, #128	; 0x80
 8001d18:	0264      	lsls	r4, r4, #9
 8001d1a:	46a4      	mov	ip, r4
 8001d1c:	4460      	add	r0, ip
 8001d1e:	0c1c      	lsrs	r4, r3, #16
 8001d20:	0415      	lsls	r5, r2, #16
 8001d22:	041b      	lsls	r3, r3, #16
 8001d24:	0c2d      	lsrs	r5, r5, #16
 8001d26:	1820      	adds	r0, r4, r0
 8001d28:	195d      	adds	r5, r3, r5
 8001d2a:	4281      	cmp	r1, r0
 8001d2c:	d377      	bcc.n	8001e1e <__aeabi_ddiv+0x456>
 8001d2e:	d073      	beq.n	8001e18 <__aeabi_ddiv+0x450>
 8001d30:	1a0c      	subs	r4, r1, r0
 8001d32:	4aa2      	ldr	r2, [pc, #648]	; (8001fbc <__aeabi_ddiv+0x5f4>)
 8001d34:	1b7d      	subs	r5, r7, r5
 8001d36:	42af      	cmp	r7, r5
 8001d38:	41bf      	sbcs	r7, r7
 8001d3a:	4694      	mov	ip, r2
 8001d3c:	9b00      	ldr	r3, [sp, #0]
 8001d3e:	427f      	negs	r7, r7
 8001d40:	4463      	add	r3, ip
 8001d42:	1be0      	subs	r0, r4, r7
 8001d44:	001c      	movs	r4, r3
 8001d46:	4286      	cmp	r6, r0
 8001d48:	d100      	bne.n	8001d4c <__aeabi_ddiv+0x384>
 8001d4a:	e0db      	b.n	8001f04 <__aeabi_ddiv+0x53c>
 8001d4c:	9901      	ldr	r1, [sp, #4]
 8001d4e:	f7fe fa87 	bl	8000260 <__aeabi_uidivmod>
 8001d52:	464a      	mov	r2, r9
 8001d54:	4342      	muls	r2, r0
 8001d56:	040b      	lsls	r3, r1, #16
 8001d58:	0c29      	lsrs	r1, r5, #16
 8001d5a:	0007      	movs	r7, r0
 8001d5c:	4319      	orrs	r1, r3
 8001d5e:	428a      	cmp	r2, r1
 8001d60:	d907      	bls.n	8001d72 <__aeabi_ddiv+0x3aa>
 8001d62:	1989      	adds	r1, r1, r6
 8001d64:	3f01      	subs	r7, #1
 8001d66:	428e      	cmp	r6, r1
 8001d68:	d803      	bhi.n	8001d72 <__aeabi_ddiv+0x3aa>
 8001d6a:	428a      	cmp	r2, r1
 8001d6c:	d901      	bls.n	8001d72 <__aeabi_ddiv+0x3aa>
 8001d6e:	1e87      	subs	r7, r0, #2
 8001d70:	1989      	adds	r1, r1, r6
 8001d72:	1a88      	subs	r0, r1, r2
 8001d74:	9901      	ldr	r1, [sp, #4]
 8001d76:	f7fe fa73 	bl	8000260 <__aeabi_uidivmod>
 8001d7a:	0409      	lsls	r1, r1, #16
 8001d7c:	464a      	mov	r2, r9
 8001d7e:	4689      	mov	r9, r1
 8001d80:	0429      	lsls	r1, r5, #16
 8001d82:	464d      	mov	r5, r9
 8001d84:	4342      	muls	r2, r0
 8001d86:	0c09      	lsrs	r1, r1, #16
 8001d88:	0003      	movs	r3, r0
 8001d8a:	4329      	orrs	r1, r5
 8001d8c:	428a      	cmp	r2, r1
 8001d8e:	d907      	bls.n	8001da0 <__aeabi_ddiv+0x3d8>
 8001d90:	1989      	adds	r1, r1, r6
 8001d92:	3b01      	subs	r3, #1
 8001d94:	428e      	cmp	r6, r1
 8001d96:	d803      	bhi.n	8001da0 <__aeabi_ddiv+0x3d8>
 8001d98:	428a      	cmp	r2, r1
 8001d9a:	d901      	bls.n	8001da0 <__aeabi_ddiv+0x3d8>
 8001d9c:	1e83      	subs	r3, r0, #2
 8001d9e:	1989      	adds	r1, r1, r6
 8001da0:	043f      	lsls	r7, r7, #16
 8001da2:	1a89      	subs	r1, r1, r2
 8001da4:	003a      	movs	r2, r7
 8001da6:	9f03      	ldr	r7, [sp, #12]
 8001da8:	431a      	orrs	r2, r3
 8001daa:	0038      	movs	r0, r7
 8001dac:	0413      	lsls	r3, r2, #16
 8001dae:	0c1b      	lsrs	r3, r3, #16
 8001db0:	4358      	muls	r0, r3
 8001db2:	4681      	mov	r9, r0
 8001db4:	9802      	ldr	r0, [sp, #8]
 8001db6:	0c15      	lsrs	r5, r2, #16
 8001db8:	436f      	muls	r7, r5
 8001dba:	4343      	muls	r3, r0
 8001dbc:	4345      	muls	r5, r0
 8001dbe:	4648      	mov	r0, r9
 8001dc0:	0c00      	lsrs	r0, r0, #16
 8001dc2:	4684      	mov	ip, r0
 8001dc4:	19db      	adds	r3, r3, r7
 8001dc6:	4463      	add	r3, ip
 8001dc8:	429f      	cmp	r7, r3
 8001dca:	d903      	bls.n	8001dd4 <__aeabi_ddiv+0x40c>
 8001dcc:	2080      	movs	r0, #128	; 0x80
 8001dce:	0240      	lsls	r0, r0, #9
 8001dd0:	4684      	mov	ip, r0
 8001dd2:	4465      	add	r5, ip
 8001dd4:	4648      	mov	r0, r9
 8001dd6:	0c1f      	lsrs	r7, r3, #16
 8001dd8:	0400      	lsls	r0, r0, #16
 8001dda:	041b      	lsls	r3, r3, #16
 8001ddc:	0c00      	lsrs	r0, r0, #16
 8001dde:	197d      	adds	r5, r7, r5
 8001de0:	1818      	adds	r0, r3, r0
 8001de2:	42a9      	cmp	r1, r5
 8001de4:	d200      	bcs.n	8001de8 <__aeabi_ddiv+0x420>
 8001de6:	e084      	b.n	8001ef2 <__aeabi_ddiv+0x52a>
 8001de8:	d100      	bne.n	8001dec <__aeabi_ddiv+0x424>
 8001dea:	e07f      	b.n	8001eec <__aeabi_ddiv+0x524>
 8001dec:	2301      	movs	r3, #1
 8001dee:	431a      	orrs	r2, r3
 8001df0:	e657      	b.n	8001aa2 <__aeabi_ddiv+0xda>
 8001df2:	2380      	movs	r3, #128	; 0x80
 8001df4:	464a      	mov	r2, r9
 8001df6:	031b      	lsls	r3, r3, #12
 8001df8:	4313      	orrs	r3, r2
 8001dfa:	031b      	lsls	r3, r3, #12
 8001dfc:	0b1b      	lsrs	r3, r3, #12
 8001dfe:	46aa      	mov	sl, r5
 8001e00:	4a6f      	ldr	r2, [pc, #444]	; (8001fc0 <__aeabi_ddiv+0x5f8>)
 8001e02:	e66f      	b.n	8001ae4 <__aeabi_ddiv+0x11c>
 8001e04:	42ba      	cmp	r2, r7
 8001e06:	d900      	bls.n	8001e0a <__aeabi_ddiv+0x442>
 8001e08:	e735      	b.n	8001c76 <__aeabi_ddiv+0x2ae>
 8001e0a:	464b      	mov	r3, r9
 8001e0c:	07dc      	lsls	r4, r3, #31
 8001e0e:	0858      	lsrs	r0, r3, #1
 8001e10:	087b      	lsrs	r3, r7, #1
 8001e12:	431c      	orrs	r4, r3
 8001e14:	07ff      	lsls	r7, r7, #31
 8001e16:	e734      	b.n	8001c82 <__aeabi_ddiv+0x2ba>
 8001e18:	2400      	movs	r4, #0
 8001e1a:	42af      	cmp	r7, r5
 8001e1c:	d289      	bcs.n	8001d32 <__aeabi_ddiv+0x36a>
 8001e1e:	4447      	add	r7, r8
 8001e20:	4547      	cmp	r7, r8
 8001e22:	41a4      	sbcs	r4, r4
 8001e24:	465b      	mov	r3, fp
 8001e26:	4264      	negs	r4, r4
 8001e28:	19a4      	adds	r4, r4, r6
 8001e2a:	1864      	adds	r4, r4, r1
 8001e2c:	3b01      	subs	r3, #1
 8001e2e:	42a6      	cmp	r6, r4
 8001e30:	d21e      	bcs.n	8001e70 <__aeabi_ddiv+0x4a8>
 8001e32:	42a0      	cmp	r0, r4
 8001e34:	d86d      	bhi.n	8001f12 <__aeabi_ddiv+0x54a>
 8001e36:	d100      	bne.n	8001e3a <__aeabi_ddiv+0x472>
 8001e38:	e0b6      	b.n	8001fa8 <__aeabi_ddiv+0x5e0>
 8001e3a:	1a24      	subs	r4, r4, r0
 8001e3c:	469b      	mov	fp, r3
 8001e3e:	e778      	b.n	8001d32 <__aeabi_ddiv+0x36a>
 8001e40:	0003      	movs	r3, r0
 8001e42:	465a      	mov	r2, fp
 8001e44:	3b28      	subs	r3, #40	; 0x28
 8001e46:	409a      	lsls	r2, r3
 8001e48:	2700      	movs	r7, #0
 8001e4a:	4691      	mov	r9, r2
 8001e4c:	e688      	b.n	8001b60 <__aeabi_ddiv+0x198>
 8001e4e:	4658      	mov	r0, fp
 8001e50:	f001 f912 	bl	8003078 <__clzsi2>
 8001e54:	3020      	adds	r0, #32
 8001e56:	e672      	b.n	8001b3e <__aeabi_ddiv+0x176>
 8001e58:	0003      	movs	r3, r0
 8001e5a:	4652      	mov	r2, sl
 8001e5c:	3b28      	subs	r3, #40	; 0x28
 8001e5e:	409a      	lsls	r2, r3
 8001e60:	4693      	mov	fp, r2
 8001e62:	2200      	movs	r2, #0
 8001e64:	e6b4      	b.n	8001bd0 <__aeabi_ddiv+0x208>
 8001e66:	4650      	mov	r0, sl
 8001e68:	f001 f906 	bl	8003078 <__clzsi2>
 8001e6c:	3020      	adds	r0, #32
 8001e6e:	e69a      	b.n	8001ba6 <__aeabi_ddiv+0x1de>
 8001e70:	42a6      	cmp	r6, r4
 8001e72:	d1e2      	bne.n	8001e3a <__aeabi_ddiv+0x472>
 8001e74:	45b8      	cmp	r8, r7
 8001e76:	d9dc      	bls.n	8001e32 <__aeabi_ddiv+0x46a>
 8001e78:	1a34      	subs	r4, r6, r0
 8001e7a:	469b      	mov	fp, r3
 8001e7c:	e759      	b.n	8001d32 <__aeabi_ddiv+0x36a>
 8001e7e:	2b1f      	cmp	r3, #31
 8001e80:	dc65      	bgt.n	8001f4e <__aeabi_ddiv+0x586>
 8001e82:	4c50      	ldr	r4, [pc, #320]	; (8001fc4 <__aeabi_ddiv+0x5fc>)
 8001e84:	9900      	ldr	r1, [sp, #0]
 8001e86:	46a4      	mov	ip, r4
 8001e88:	465c      	mov	r4, fp
 8001e8a:	4461      	add	r1, ip
 8001e8c:	0008      	movs	r0, r1
 8001e8e:	408c      	lsls	r4, r1
 8001e90:	0011      	movs	r1, r2
 8001e92:	4082      	lsls	r2, r0
 8001e94:	40d9      	lsrs	r1, r3
 8001e96:	1e50      	subs	r0, r2, #1
 8001e98:	4182      	sbcs	r2, r0
 8001e9a:	430c      	orrs	r4, r1
 8001e9c:	4314      	orrs	r4, r2
 8001e9e:	465a      	mov	r2, fp
 8001ea0:	40da      	lsrs	r2, r3
 8001ea2:	0013      	movs	r3, r2
 8001ea4:	0762      	lsls	r2, r4, #29
 8001ea6:	d009      	beq.n	8001ebc <__aeabi_ddiv+0x4f4>
 8001ea8:	220f      	movs	r2, #15
 8001eaa:	4022      	ands	r2, r4
 8001eac:	2a04      	cmp	r2, #4
 8001eae:	d005      	beq.n	8001ebc <__aeabi_ddiv+0x4f4>
 8001eb0:	0022      	movs	r2, r4
 8001eb2:	1d14      	adds	r4, r2, #4
 8001eb4:	4294      	cmp	r4, r2
 8001eb6:	4189      	sbcs	r1, r1
 8001eb8:	4249      	negs	r1, r1
 8001eba:	185b      	adds	r3, r3, r1
 8001ebc:	021a      	lsls	r2, r3, #8
 8001ebe:	d562      	bpl.n	8001f86 <__aeabi_ddiv+0x5be>
 8001ec0:	2201      	movs	r2, #1
 8001ec2:	2300      	movs	r3, #0
 8001ec4:	2700      	movs	r7, #0
 8001ec6:	e60d      	b.n	8001ae4 <__aeabi_ddiv+0x11c>
 8001ec8:	428a      	cmp	r2, r1
 8001eca:	d800      	bhi.n	8001ece <__aeabi_ddiv+0x506>
 8001ecc:	e70a      	b.n	8001ce4 <__aeabi_ddiv+0x31c>
 8001ece:	1e83      	subs	r3, r0, #2
 8001ed0:	1989      	adds	r1, r1, r6
 8001ed2:	e707      	b.n	8001ce4 <__aeabi_ddiv+0x31c>
 8001ed4:	230f      	movs	r3, #15
 8001ed6:	4013      	ands	r3, r2
 8001ed8:	2b04      	cmp	r3, #4
 8001eda:	d100      	bne.n	8001ede <__aeabi_ddiv+0x516>
 8001edc:	e5e6      	b.n	8001aac <__aeabi_ddiv+0xe4>
 8001ede:	1d17      	adds	r7, r2, #4
 8001ee0:	4297      	cmp	r7, r2
 8001ee2:	4192      	sbcs	r2, r2
 8001ee4:	4253      	negs	r3, r2
 8001ee6:	449b      	add	fp, r3
 8001ee8:	08fa      	lsrs	r2, r7, #3
 8001eea:	e5e0      	b.n	8001aae <__aeabi_ddiv+0xe6>
 8001eec:	2800      	cmp	r0, #0
 8001eee:	d100      	bne.n	8001ef2 <__aeabi_ddiv+0x52a>
 8001ef0:	e5d7      	b.n	8001aa2 <__aeabi_ddiv+0xda>
 8001ef2:	1871      	adds	r1, r6, r1
 8001ef4:	1e53      	subs	r3, r2, #1
 8001ef6:	42b1      	cmp	r1, r6
 8001ef8:	d327      	bcc.n	8001f4a <__aeabi_ddiv+0x582>
 8001efa:	42a9      	cmp	r1, r5
 8001efc:	d315      	bcc.n	8001f2a <__aeabi_ddiv+0x562>
 8001efe:	d058      	beq.n	8001fb2 <__aeabi_ddiv+0x5ea>
 8001f00:	001a      	movs	r2, r3
 8001f02:	e773      	b.n	8001dec <__aeabi_ddiv+0x424>
 8001f04:	2b00      	cmp	r3, #0
 8001f06:	dc00      	bgt.n	8001f0a <__aeabi_ddiv+0x542>
 8001f08:	e604      	b.n	8001b14 <__aeabi_ddiv+0x14c>
 8001f0a:	2301      	movs	r3, #1
 8001f0c:	2200      	movs	r2, #0
 8001f0e:	449b      	add	fp, r3
 8001f10:	e5cd      	b.n	8001aae <__aeabi_ddiv+0xe6>
 8001f12:	2302      	movs	r3, #2
 8001f14:	4447      	add	r7, r8
 8001f16:	4547      	cmp	r7, r8
 8001f18:	4189      	sbcs	r1, r1
 8001f1a:	425b      	negs	r3, r3
 8001f1c:	469c      	mov	ip, r3
 8001f1e:	4249      	negs	r1, r1
 8001f20:	1989      	adds	r1, r1, r6
 8001f22:	190c      	adds	r4, r1, r4
 8001f24:	44e3      	add	fp, ip
 8001f26:	1a24      	subs	r4, r4, r0
 8001f28:	e703      	b.n	8001d32 <__aeabi_ddiv+0x36a>
 8001f2a:	4643      	mov	r3, r8
 8001f2c:	005f      	lsls	r7, r3, #1
 8001f2e:	4547      	cmp	r7, r8
 8001f30:	419b      	sbcs	r3, r3
 8001f32:	46b8      	mov	r8, r7
 8001f34:	425b      	negs	r3, r3
 8001f36:	199e      	adds	r6, r3, r6
 8001f38:	3a02      	subs	r2, #2
 8001f3a:	1989      	adds	r1, r1, r6
 8001f3c:	42a9      	cmp	r1, r5
 8001f3e:	d000      	beq.n	8001f42 <__aeabi_ddiv+0x57a>
 8001f40:	e754      	b.n	8001dec <__aeabi_ddiv+0x424>
 8001f42:	4540      	cmp	r0, r8
 8001f44:	d000      	beq.n	8001f48 <__aeabi_ddiv+0x580>
 8001f46:	e751      	b.n	8001dec <__aeabi_ddiv+0x424>
 8001f48:	e5ab      	b.n	8001aa2 <__aeabi_ddiv+0xda>
 8001f4a:	001a      	movs	r2, r3
 8001f4c:	e7f6      	b.n	8001f3c <__aeabi_ddiv+0x574>
 8001f4e:	211f      	movs	r1, #31
 8001f50:	465f      	mov	r7, fp
 8001f52:	4249      	negs	r1, r1
 8001f54:	1b0c      	subs	r4, r1, r4
 8001f56:	40e7      	lsrs	r7, r4
 8001f58:	2b20      	cmp	r3, #32
 8001f5a:	d007      	beq.n	8001f6c <__aeabi_ddiv+0x5a4>
 8001f5c:	491a      	ldr	r1, [pc, #104]	; (8001fc8 <__aeabi_ddiv+0x600>)
 8001f5e:	9b00      	ldr	r3, [sp, #0]
 8001f60:	468c      	mov	ip, r1
 8001f62:	4463      	add	r3, ip
 8001f64:	0018      	movs	r0, r3
 8001f66:	465b      	mov	r3, fp
 8001f68:	4083      	lsls	r3, r0
 8001f6a:	431a      	orrs	r2, r3
 8001f6c:	1e50      	subs	r0, r2, #1
 8001f6e:	4182      	sbcs	r2, r0
 8001f70:	433a      	orrs	r2, r7
 8001f72:	2707      	movs	r7, #7
 8001f74:	2300      	movs	r3, #0
 8001f76:	4017      	ands	r7, r2
 8001f78:	d009      	beq.n	8001f8e <__aeabi_ddiv+0x5c6>
 8001f7a:	210f      	movs	r1, #15
 8001f7c:	2300      	movs	r3, #0
 8001f7e:	4011      	ands	r1, r2
 8001f80:	0014      	movs	r4, r2
 8001f82:	2904      	cmp	r1, #4
 8001f84:	d195      	bne.n	8001eb2 <__aeabi_ddiv+0x4ea>
 8001f86:	0022      	movs	r2, r4
 8001f88:	075f      	lsls	r7, r3, #29
 8001f8a:	025b      	lsls	r3, r3, #9
 8001f8c:	0b1b      	lsrs	r3, r3, #12
 8001f8e:	08d2      	lsrs	r2, r2, #3
 8001f90:	4317      	orrs	r7, r2
 8001f92:	2200      	movs	r2, #0
 8001f94:	e5a6      	b.n	8001ae4 <__aeabi_ddiv+0x11c>
 8001f96:	2380      	movs	r3, #128	; 0x80
 8001f98:	4659      	mov	r1, fp
 8001f9a:	031b      	lsls	r3, r3, #12
 8001f9c:	430b      	orrs	r3, r1
 8001f9e:	031b      	lsls	r3, r3, #12
 8001fa0:	0017      	movs	r7, r2
 8001fa2:	0b1b      	lsrs	r3, r3, #12
 8001fa4:	4a06      	ldr	r2, [pc, #24]	; (8001fc0 <__aeabi_ddiv+0x5f8>)
 8001fa6:	e59d      	b.n	8001ae4 <__aeabi_ddiv+0x11c>
 8001fa8:	42bd      	cmp	r5, r7
 8001faa:	d8b2      	bhi.n	8001f12 <__aeabi_ddiv+0x54a>
 8001fac:	469b      	mov	fp, r3
 8001fae:	2400      	movs	r4, #0
 8001fb0:	e6bf      	b.n	8001d32 <__aeabi_ddiv+0x36a>
 8001fb2:	4580      	cmp	r8, r0
 8001fb4:	d3b9      	bcc.n	8001f2a <__aeabi_ddiv+0x562>
 8001fb6:	001a      	movs	r2, r3
 8001fb8:	e7c3      	b.n	8001f42 <__aeabi_ddiv+0x57a>
 8001fba:	46c0      	nop			; (mov r8, r8)
 8001fbc:	000003ff 	.word	0x000003ff
 8001fc0:	000007ff 	.word	0x000007ff
 8001fc4:	0000041e 	.word	0x0000041e
 8001fc8:	0000043e 	.word	0x0000043e

08001fcc <__eqdf2>:
 8001fcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001fce:	464f      	mov	r7, r9
 8001fd0:	4646      	mov	r6, r8
 8001fd2:	46d6      	mov	lr, sl
 8001fd4:	4684      	mov	ip, r0
 8001fd6:	b5c0      	push	{r6, r7, lr}
 8001fd8:	4680      	mov	r8, r0
 8001fda:	4e19      	ldr	r6, [pc, #100]	; (8002040 <__eqdf2+0x74>)
 8001fdc:	0318      	lsls	r0, r3, #12
 8001fde:	030f      	lsls	r7, r1, #12
 8001fe0:	004d      	lsls	r5, r1, #1
 8001fe2:	0b00      	lsrs	r0, r0, #12
 8001fe4:	005c      	lsls	r4, r3, #1
 8001fe6:	4682      	mov	sl, r0
 8001fe8:	0b3f      	lsrs	r7, r7, #12
 8001fea:	0d6d      	lsrs	r5, r5, #21
 8001fec:	0fc9      	lsrs	r1, r1, #31
 8001fee:	4691      	mov	r9, r2
 8001ff0:	0d64      	lsrs	r4, r4, #21
 8001ff2:	0fdb      	lsrs	r3, r3, #31
 8001ff4:	2001      	movs	r0, #1
 8001ff6:	42b5      	cmp	r5, r6
 8001ff8:	d00a      	beq.n	8002010 <__eqdf2+0x44>
 8001ffa:	42b4      	cmp	r4, r6
 8001ffc:	d003      	beq.n	8002006 <__eqdf2+0x3a>
 8001ffe:	42a5      	cmp	r5, r4
 8002000:	d101      	bne.n	8002006 <__eqdf2+0x3a>
 8002002:	4557      	cmp	r7, sl
 8002004:	d00c      	beq.n	8002020 <__eqdf2+0x54>
 8002006:	bc1c      	pop	{r2, r3, r4}
 8002008:	4690      	mov	r8, r2
 800200a:	4699      	mov	r9, r3
 800200c:	46a2      	mov	sl, r4
 800200e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002010:	4666      	mov	r6, ip
 8002012:	433e      	orrs	r6, r7
 8002014:	d1f7      	bne.n	8002006 <__eqdf2+0x3a>
 8002016:	42ac      	cmp	r4, r5
 8002018:	d1f5      	bne.n	8002006 <__eqdf2+0x3a>
 800201a:	4654      	mov	r4, sl
 800201c:	4314      	orrs	r4, r2
 800201e:	d1f2      	bne.n	8002006 <__eqdf2+0x3a>
 8002020:	2001      	movs	r0, #1
 8002022:	45c8      	cmp	r8, r9
 8002024:	d1ef      	bne.n	8002006 <__eqdf2+0x3a>
 8002026:	4299      	cmp	r1, r3
 8002028:	d007      	beq.n	800203a <__eqdf2+0x6e>
 800202a:	2d00      	cmp	r5, #0
 800202c:	d1eb      	bne.n	8002006 <__eqdf2+0x3a>
 800202e:	4663      	mov	r3, ip
 8002030:	431f      	orrs	r7, r3
 8002032:	0038      	movs	r0, r7
 8002034:	1e47      	subs	r7, r0, #1
 8002036:	41b8      	sbcs	r0, r7
 8002038:	e7e5      	b.n	8002006 <__eqdf2+0x3a>
 800203a:	2000      	movs	r0, #0
 800203c:	e7e3      	b.n	8002006 <__eqdf2+0x3a>
 800203e:	46c0      	nop			; (mov r8, r8)
 8002040:	000007ff 	.word	0x000007ff

08002044 <__gedf2>:
 8002044:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002046:	464f      	mov	r7, r9
 8002048:	4646      	mov	r6, r8
 800204a:	46d6      	mov	lr, sl
 800204c:	004d      	lsls	r5, r1, #1
 800204e:	b5c0      	push	{r6, r7, lr}
 8002050:	030e      	lsls	r6, r1, #12
 8002052:	0fc9      	lsrs	r1, r1, #31
 8002054:	468a      	mov	sl, r1
 8002056:	492c      	ldr	r1, [pc, #176]	; (8002108 <__gedf2+0xc4>)
 8002058:	031f      	lsls	r7, r3, #12
 800205a:	005c      	lsls	r4, r3, #1
 800205c:	4680      	mov	r8, r0
 800205e:	0b36      	lsrs	r6, r6, #12
 8002060:	0d6d      	lsrs	r5, r5, #21
 8002062:	4691      	mov	r9, r2
 8002064:	0b3f      	lsrs	r7, r7, #12
 8002066:	0d64      	lsrs	r4, r4, #21
 8002068:	0fdb      	lsrs	r3, r3, #31
 800206a:	428d      	cmp	r5, r1
 800206c:	d01e      	beq.n	80020ac <__gedf2+0x68>
 800206e:	428c      	cmp	r4, r1
 8002070:	d016      	beq.n	80020a0 <__gedf2+0x5c>
 8002072:	2d00      	cmp	r5, #0
 8002074:	d11e      	bne.n	80020b4 <__gedf2+0x70>
 8002076:	4330      	orrs	r0, r6
 8002078:	4684      	mov	ip, r0
 800207a:	2c00      	cmp	r4, #0
 800207c:	d101      	bne.n	8002082 <__gedf2+0x3e>
 800207e:	433a      	orrs	r2, r7
 8002080:	d023      	beq.n	80020ca <__gedf2+0x86>
 8002082:	4662      	mov	r2, ip
 8002084:	2a00      	cmp	r2, #0
 8002086:	d01a      	beq.n	80020be <__gedf2+0x7a>
 8002088:	459a      	cmp	sl, r3
 800208a:	d029      	beq.n	80020e0 <__gedf2+0x9c>
 800208c:	4651      	mov	r1, sl
 800208e:	2002      	movs	r0, #2
 8002090:	3901      	subs	r1, #1
 8002092:	4008      	ands	r0, r1
 8002094:	3801      	subs	r0, #1
 8002096:	bc1c      	pop	{r2, r3, r4}
 8002098:	4690      	mov	r8, r2
 800209a:	4699      	mov	r9, r3
 800209c:	46a2      	mov	sl, r4
 800209e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020a0:	0039      	movs	r1, r7
 80020a2:	4311      	orrs	r1, r2
 80020a4:	d0e5      	beq.n	8002072 <__gedf2+0x2e>
 80020a6:	2002      	movs	r0, #2
 80020a8:	4240      	negs	r0, r0
 80020aa:	e7f4      	b.n	8002096 <__gedf2+0x52>
 80020ac:	4330      	orrs	r0, r6
 80020ae:	d1fa      	bne.n	80020a6 <__gedf2+0x62>
 80020b0:	42ac      	cmp	r4, r5
 80020b2:	d00f      	beq.n	80020d4 <__gedf2+0x90>
 80020b4:	2c00      	cmp	r4, #0
 80020b6:	d10f      	bne.n	80020d8 <__gedf2+0x94>
 80020b8:	433a      	orrs	r2, r7
 80020ba:	d0e7      	beq.n	800208c <__gedf2+0x48>
 80020bc:	e00c      	b.n	80020d8 <__gedf2+0x94>
 80020be:	2201      	movs	r2, #1
 80020c0:	3b01      	subs	r3, #1
 80020c2:	4393      	bics	r3, r2
 80020c4:	0018      	movs	r0, r3
 80020c6:	3001      	adds	r0, #1
 80020c8:	e7e5      	b.n	8002096 <__gedf2+0x52>
 80020ca:	4663      	mov	r3, ip
 80020cc:	2000      	movs	r0, #0
 80020ce:	2b00      	cmp	r3, #0
 80020d0:	d0e1      	beq.n	8002096 <__gedf2+0x52>
 80020d2:	e7db      	b.n	800208c <__gedf2+0x48>
 80020d4:	433a      	orrs	r2, r7
 80020d6:	d1e6      	bne.n	80020a6 <__gedf2+0x62>
 80020d8:	459a      	cmp	sl, r3
 80020da:	d1d7      	bne.n	800208c <__gedf2+0x48>
 80020dc:	42a5      	cmp	r5, r4
 80020de:	dcd5      	bgt.n	800208c <__gedf2+0x48>
 80020e0:	42a5      	cmp	r5, r4
 80020e2:	db05      	blt.n	80020f0 <__gedf2+0xac>
 80020e4:	42be      	cmp	r6, r7
 80020e6:	d8d1      	bhi.n	800208c <__gedf2+0x48>
 80020e8:	d008      	beq.n	80020fc <__gedf2+0xb8>
 80020ea:	2000      	movs	r0, #0
 80020ec:	42be      	cmp	r6, r7
 80020ee:	d2d2      	bcs.n	8002096 <__gedf2+0x52>
 80020f0:	4650      	mov	r0, sl
 80020f2:	2301      	movs	r3, #1
 80020f4:	3801      	subs	r0, #1
 80020f6:	4398      	bics	r0, r3
 80020f8:	3001      	adds	r0, #1
 80020fa:	e7cc      	b.n	8002096 <__gedf2+0x52>
 80020fc:	45c8      	cmp	r8, r9
 80020fe:	d8c5      	bhi.n	800208c <__gedf2+0x48>
 8002100:	2000      	movs	r0, #0
 8002102:	45c8      	cmp	r8, r9
 8002104:	d3f4      	bcc.n	80020f0 <__gedf2+0xac>
 8002106:	e7c6      	b.n	8002096 <__gedf2+0x52>
 8002108:	000007ff 	.word	0x000007ff

0800210c <__ledf2>:
 800210c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800210e:	464f      	mov	r7, r9
 8002110:	4646      	mov	r6, r8
 8002112:	46d6      	mov	lr, sl
 8002114:	004d      	lsls	r5, r1, #1
 8002116:	b5c0      	push	{r6, r7, lr}
 8002118:	030e      	lsls	r6, r1, #12
 800211a:	0fc9      	lsrs	r1, r1, #31
 800211c:	468a      	mov	sl, r1
 800211e:	492e      	ldr	r1, [pc, #184]	; (80021d8 <__ledf2+0xcc>)
 8002120:	031f      	lsls	r7, r3, #12
 8002122:	005c      	lsls	r4, r3, #1
 8002124:	4680      	mov	r8, r0
 8002126:	0b36      	lsrs	r6, r6, #12
 8002128:	0d6d      	lsrs	r5, r5, #21
 800212a:	4691      	mov	r9, r2
 800212c:	0b3f      	lsrs	r7, r7, #12
 800212e:	0d64      	lsrs	r4, r4, #21
 8002130:	0fdb      	lsrs	r3, r3, #31
 8002132:	428d      	cmp	r5, r1
 8002134:	d018      	beq.n	8002168 <__ledf2+0x5c>
 8002136:	428c      	cmp	r4, r1
 8002138:	d011      	beq.n	800215e <__ledf2+0x52>
 800213a:	2d00      	cmp	r5, #0
 800213c:	d118      	bne.n	8002170 <__ledf2+0x64>
 800213e:	4330      	orrs	r0, r6
 8002140:	4684      	mov	ip, r0
 8002142:	2c00      	cmp	r4, #0
 8002144:	d11e      	bne.n	8002184 <__ledf2+0x78>
 8002146:	433a      	orrs	r2, r7
 8002148:	d11c      	bne.n	8002184 <__ledf2+0x78>
 800214a:	4663      	mov	r3, ip
 800214c:	2000      	movs	r0, #0
 800214e:	2b00      	cmp	r3, #0
 8002150:	d030      	beq.n	80021b4 <__ledf2+0xa8>
 8002152:	4651      	mov	r1, sl
 8002154:	2002      	movs	r0, #2
 8002156:	3901      	subs	r1, #1
 8002158:	4008      	ands	r0, r1
 800215a:	3801      	subs	r0, #1
 800215c:	e02a      	b.n	80021b4 <__ledf2+0xa8>
 800215e:	0039      	movs	r1, r7
 8002160:	4311      	orrs	r1, r2
 8002162:	d0ea      	beq.n	800213a <__ledf2+0x2e>
 8002164:	2002      	movs	r0, #2
 8002166:	e025      	b.n	80021b4 <__ledf2+0xa8>
 8002168:	4330      	orrs	r0, r6
 800216a:	d1fb      	bne.n	8002164 <__ledf2+0x58>
 800216c:	42ac      	cmp	r4, r5
 800216e:	d026      	beq.n	80021be <__ledf2+0xb2>
 8002170:	2c00      	cmp	r4, #0
 8002172:	d126      	bne.n	80021c2 <__ledf2+0xb6>
 8002174:	433a      	orrs	r2, r7
 8002176:	d124      	bne.n	80021c2 <__ledf2+0xb6>
 8002178:	4651      	mov	r1, sl
 800217a:	2002      	movs	r0, #2
 800217c:	3901      	subs	r1, #1
 800217e:	4008      	ands	r0, r1
 8002180:	3801      	subs	r0, #1
 8002182:	e017      	b.n	80021b4 <__ledf2+0xa8>
 8002184:	4662      	mov	r2, ip
 8002186:	2a00      	cmp	r2, #0
 8002188:	d00f      	beq.n	80021aa <__ledf2+0x9e>
 800218a:	459a      	cmp	sl, r3
 800218c:	d1e1      	bne.n	8002152 <__ledf2+0x46>
 800218e:	42a5      	cmp	r5, r4
 8002190:	db05      	blt.n	800219e <__ledf2+0x92>
 8002192:	42be      	cmp	r6, r7
 8002194:	d8dd      	bhi.n	8002152 <__ledf2+0x46>
 8002196:	d019      	beq.n	80021cc <__ledf2+0xc0>
 8002198:	2000      	movs	r0, #0
 800219a:	42be      	cmp	r6, r7
 800219c:	d20a      	bcs.n	80021b4 <__ledf2+0xa8>
 800219e:	4650      	mov	r0, sl
 80021a0:	2301      	movs	r3, #1
 80021a2:	3801      	subs	r0, #1
 80021a4:	4398      	bics	r0, r3
 80021a6:	3001      	adds	r0, #1
 80021a8:	e004      	b.n	80021b4 <__ledf2+0xa8>
 80021aa:	2201      	movs	r2, #1
 80021ac:	3b01      	subs	r3, #1
 80021ae:	4393      	bics	r3, r2
 80021b0:	0018      	movs	r0, r3
 80021b2:	3001      	adds	r0, #1
 80021b4:	bc1c      	pop	{r2, r3, r4}
 80021b6:	4690      	mov	r8, r2
 80021b8:	4699      	mov	r9, r3
 80021ba:	46a2      	mov	sl, r4
 80021bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021be:	433a      	orrs	r2, r7
 80021c0:	d1d0      	bne.n	8002164 <__ledf2+0x58>
 80021c2:	459a      	cmp	sl, r3
 80021c4:	d1c5      	bne.n	8002152 <__ledf2+0x46>
 80021c6:	42a5      	cmp	r5, r4
 80021c8:	dcc3      	bgt.n	8002152 <__ledf2+0x46>
 80021ca:	e7e0      	b.n	800218e <__ledf2+0x82>
 80021cc:	45c8      	cmp	r8, r9
 80021ce:	d8c0      	bhi.n	8002152 <__ledf2+0x46>
 80021d0:	2000      	movs	r0, #0
 80021d2:	45c8      	cmp	r8, r9
 80021d4:	d3e3      	bcc.n	800219e <__ledf2+0x92>
 80021d6:	e7ed      	b.n	80021b4 <__ledf2+0xa8>
 80021d8:	000007ff 	.word	0x000007ff

080021dc <__aeabi_dmul>:
 80021dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80021de:	4657      	mov	r7, sl
 80021e0:	46de      	mov	lr, fp
 80021e2:	464e      	mov	r6, r9
 80021e4:	4645      	mov	r5, r8
 80021e6:	b5e0      	push	{r5, r6, r7, lr}
 80021e8:	4683      	mov	fp, r0
 80021ea:	0006      	movs	r6, r0
 80021ec:	030f      	lsls	r7, r1, #12
 80021ee:	0048      	lsls	r0, r1, #1
 80021f0:	b087      	sub	sp, #28
 80021f2:	4692      	mov	sl, r2
 80021f4:	001d      	movs	r5, r3
 80021f6:	0b3f      	lsrs	r7, r7, #12
 80021f8:	0d40      	lsrs	r0, r0, #21
 80021fa:	0fcc      	lsrs	r4, r1, #31
 80021fc:	2800      	cmp	r0, #0
 80021fe:	d100      	bne.n	8002202 <__aeabi_dmul+0x26>
 8002200:	e06f      	b.n	80022e2 <__aeabi_dmul+0x106>
 8002202:	4bde      	ldr	r3, [pc, #888]	; (800257c <__aeabi_dmul+0x3a0>)
 8002204:	4298      	cmp	r0, r3
 8002206:	d038      	beq.n	800227a <__aeabi_dmul+0x9e>
 8002208:	2380      	movs	r3, #128	; 0x80
 800220a:	00ff      	lsls	r7, r7, #3
 800220c:	041b      	lsls	r3, r3, #16
 800220e:	431f      	orrs	r7, r3
 8002210:	0f73      	lsrs	r3, r6, #29
 8002212:	433b      	orrs	r3, r7
 8002214:	9301      	str	r3, [sp, #4]
 8002216:	4bda      	ldr	r3, [pc, #872]	; (8002580 <__aeabi_dmul+0x3a4>)
 8002218:	2700      	movs	r7, #0
 800221a:	4699      	mov	r9, r3
 800221c:	2300      	movs	r3, #0
 800221e:	469b      	mov	fp, r3
 8002220:	00f6      	lsls	r6, r6, #3
 8002222:	4481      	add	r9, r0
 8002224:	032b      	lsls	r3, r5, #12
 8002226:	0069      	lsls	r1, r5, #1
 8002228:	0b1b      	lsrs	r3, r3, #12
 800222a:	4652      	mov	r2, sl
 800222c:	4698      	mov	r8, r3
 800222e:	0d49      	lsrs	r1, r1, #21
 8002230:	0fed      	lsrs	r5, r5, #31
 8002232:	2900      	cmp	r1, #0
 8002234:	d100      	bne.n	8002238 <__aeabi_dmul+0x5c>
 8002236:	e085      	b.n	8002344 <__aeabi_dmul+0x168>
 8002238:	4bd0      	ldr	r3, [pc, #832]	; (800257c <__aeabi_dmul+0x3a0>)
 800223a:	4299      	cmp	r1, r3
 800223c:	d100      	bne.n	8002240 <__aeabi_dmul+0x64>
 800223e:	e073      	b.n	8002328 <__aeabi_dmul+0x14c>
 8002240:	4643      	mov	r3, r8
 8002242:	00da      	lsls	r2, r3, #3
 8002244:	2380      	movs	r3, #128	; 0x80
 8002246:	041b      	lsls	r3, r3, #16
 8002248:	4313      	orrs	r3, r2
 800224a:	4652      	mov	r2, sl
 800224c:	48cc      	ldr	r0, [pc, #816]	; (8002580 <__aeabi_dmul+0x3a4>)
 800224e:	0f52      	lsrs	r2, r2, #29
 8002250:	4684      	mov	ip, r0
 8002252:	4313      	orrs	r3, r2
 8002254:	4652      	mov	r2, sl
 8002256:	2000      	movs	r0, #0
 8002258:	4461      	add	r1, ip
 800225a:	00d2      	lsls	r2, r2, #3
 800225c:	4489      	add	r9, r1
 800225e:	0021      	movs	r1, r4
 8002260:	4069      	eors	r1, r5
 8002262:	9100      	str	r1, [sp, #0]
 8002264:	468c      	mov	ip, r1
 8002266:	2101      	movs	r1, #1
 8002268:	4449      	add	r1, r9
 800226a:	468a      	mov	sl, r1
 800226c:	2f0f      	cmp	r7, #15
 800226e:	d900      	bls.n	8002272 <__aeabi_dmul+0x96>
 8002270:	e090      	b.n	8002394 <__aeabi_dmul+0x1b8>
 8002272:	49c4      	ldr	r1, [pc, #784]	; (8002584 <__aeabi_dmul+0x3a8>)
 8002274:	00bf      	lsls	r7, r7, #2
 8002276:	59cf      	ldr	r7, [r1, r7]
 8002278:	46bf      	mov	pc, r7
 800227a:	465b      	mov	r3, fp
 800227c:	433b      	orrs	r3, r7
 800227e:	9301      	str	r3, [sp, #4]
 8002280:	d000      	beq.n	8002284 <__aeabi_dmul+0xa8>
 8002282:	e16a      	b.n	800255a <__aeabi_dmul+0x37e>
 8002284:	2302      	movs	r3, #2
 8002286:	2708      	movs	r7, #8
 8002288:	2600      	movs	r6, #0
 800228a:	4681      	mov	r9, r0
 800228c:	469b      	mov	fp, r3
 800228e:	e7c9      	b.n	8002224 <__aeabi_dmul+0x48>
 8002290:	0032      	movs	r2, r6
 8002292:	4658      	mov	r0, fp
 8002294:	9b01      	ldr	r3, [sp, #4]
 8002296:	4661      	mov	r1, ip
 8002298:	9100      	str	r1, [sp, #0]
 800229a:	2802      	cmp	r0, #2
 800229c:	d100      	bne.n	80022a0 <__aeabi_dmul+0xc4>
 800229e:	e075      	b.n	800238c <__aeabi_dmul+0x1b0>
 80022a0:	2803      	cmp	r0, #3
 80022a2:	d100      	bne.n	80022a6 <__aeabi_dmul+0xca>
 80022a4:	e1fe      	b.n	80026a4 <__aeabi_dmul+0x4c8>
 80022a6:	2801      	cmp	r0, #1
 80022a8:	d000      	beq.n	80022ac <__aeabi_dmul+0xd0>
 80022aa:	e12c      	b.n	8002506 <__aeabi_dmul+0x32a>
 80022ac:	2300      	movs	r3, #0
 80022ae:	2700      	movs	r7, #0
 80022b0:	2600      	movs	r6, #0
 80022b2:	2500      	movs	r5, #0
 80022b4:	033f      	lsls	r7, r7, #12
 80022b6:	0d2a      	lsrs	r2, r5, #20
 80022b8:	0b3f      	lsrs	r7, r7, #12
 80022ba:	48b3      	ldr	r0, [pc, #716]	; (8002588 <__aeabi_dmul+0x3ac>)
 80022bc:	0512      	lsls	r2, r2, #20
 80022be:	433a      	orrs	r2, r7
 80022c0:	4002      	ands	r2, r0
 80022c2:	051b      	lsls	r3, r3, #20
 80022c4:	4313      	orrs	r3, r2
 80022c6:	9a00      	ldr	r2, [sp, #0]
 80022c8:	005b      	lsls	r3, r3, #1
 80022ca:	07d1      	lsls	r1, r2, #31
 80022cc:	085b      	lsrs	r3, r3, #1
 80022ce:	430b      	orrs	r3, r1
 80022d0:	0030      	movs	r0, r6
 80022d2:	0019      	movs	r1, r3
 80022d4:	b007      	add	sp, #28
 80022d6:	bc3c      	pop	{r2, r3, r4, r5}
 80022d8:	4690      	mov	r8, r2
 80022da:	4699      	mov	r9, r3
 80022dc:	46a2      	mov	sl, r4
 80022de:	46ab      	mov	fp, r5
 80022e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022e2:	465b      	mov	r3, fp
 80022e4:	433b      	orrs	r3, r7
 80022e6:	9301      	str	r3, [sp, #4]
 80022e8:	d100      	bne.n	80022ec <__aeabi_dmul+0x110>
 80022ea:	e12f      	b.n	800254c <__aeabi_dmul+0x370>
 80022ec:	2f00      	cmp	r7, #0
 80022ee:	d100      	bne.n	80022f2 <__aeabi_dmul+0x116>
 80022f0:	e1a5      	b.n	800263e <__aeabi_dmul+0x462>
 80022f2:	0038      	movs	r0, r7
 80022f4:	f000 fec0 	bl	8003078 <__clzsi2>
 80022f8:	0003      	movs	r3, r0
 80022fa:	3b0b      	subs	r3, #11
 80022fc:	2b1c      	cmp	r3, #28
 80022fe:	dd00      	ble.n	8002302 <__aeabi_dmul+0x126>
 8002300:	e196      	b.n	8002630 <__aeabi_dmul+0x454>
 8002302:	221d      	movs	r2, #29
 8002304:	1ad3      	subs	r3, r2, r3
 8002306:	465a      	mov	r2, fp
 8002308:	0001      	movs	r1, r0
 800230a:	40da      	lsrs	r2, r3
 800230c:	465e      	mov	r6, fp
 800230e:	3908      	subs	r1, #8
 8002310:	408f      	lsls	r7, r1
 8002312:	0013      	movs	r3, r2
 8002314:	408e      	lsls	r6, r1
 8002316:	433b      	orrs	r3, r7
 8002318:	9301      	str	r3, [sp, #4]
 800231a:	4b9c      	ldr	r3, [pc, #624]	; (800258c <__aeabi_dmul+0x3b0>)
 800231c:	2700      	movs	r7, #0
 800231e:	1a1b      	subs	r3, r3, r0
 8002320:	4699      	mov	r9, r3
 8002322:	2300      	movs	r3, #0
 8002324:	469b      	mov	fp, r3
 8002326:	e77d      	b.n	8002224 <__aeabi_dmul+0x48>
 8002328:	4641      	mov	r1, r8
 800232a:	4653      	mov	r3, sl
 800232c:	430b      	orrs	r3, r1
 800232e:	4993      	ldr	r1, [pc, #588]	; (800257c <__aeabi_dmul+0x3a0>)
 8002330:	468c      	mov	ip, r1
 8002332:	44e1      	add	r9, ip
 8002334:	2b00      	cmp	r3, #0
 8002336:	d000      	beq.n	800233a <__aeabi_dmul+0x15e>
 8002338:	e11a      	b.n	8002570 <__aeabi_dmul+0x394>
 800233a:	2202      	movs	r2, #2
 800233c:	2002      	movs	r0, #2
 800233e:	4317      	orrs	r7, r2
 8002340:	2200      	movs	r2, #0
 8002342:	e78c      	b.n	800225e <__aeabi_dmul+0x82>
 8002344:	4313      	orrs	r3, r2
 8002346:	d100      	bne.n	800234a <__aeabi_dmul+0x16e>
 8002348:	e10d      	b.n	8002566 <__aeabi_dmul+0x38a>
 800234a:	4643      	mov	r3, r8
 800234c:	2b00      	cmp	r3, #0
 800234e:	d100      	bne.n	8002352 <__aeabi_dmul+0x176>
 8002350:	e181      	b.n	8002656 <__aeabi_dmul+0x47a>
 8002352:	4640      	mov	r0, r8
 8002354:	f000 fe90 	bl	8003078 <__clzsi2>
 8002358:	0002      	movs	r2, r0
 800235a:	3a0b      	subs	r2, #11
 800235c:	2a1c      	cmp	r2, #28
 800235e:	dd00      	ble.n	8002362 <__aeabi_dmul+0x186>
 8002360:	e172      	b.n	8002648 <__aeabi_dmul+0x46c>
 8002362:	0001      	movs	r1, r0
 8002364:	4643      	mov	r3, r8
 8002366:	3908      	subs	r1, #8
 8002368:	408b      	lsls	r3, r1
 800236a:	4698      	mov	r8, r3
 800236c:	231d      	movs	r3, #29
 800236e:	1a9a      	subs	r2, r3, r2
 8002370:	4653      	mov	r3, sl
 8002372:	40d3      	lsrs	r3, r2
 8002374:	001a      	movs	r2, r3
 8002376:	4643      	mov	r3, r8
 8002378:	4313      	orrs	r3, r2
 800237a:	4652      	mov	r2, sl
 800237c:	408a      	lsls	r2, r1
 800237e:	4649      	mov	r1, r9
 8002380:	1a08      	subs	r0, r1, r0
 8002382:	4982      	ldr	r1, [pc, #520]	; (800258c <__aeabi_dmul+0x3b0>)
 8002384:	4689      	mov	r9, r1
 8002386:	4481      	add	r9, r0
 8002388:	2000      	movs	r0, #0
 800238a:	e768      	b.n	800225e <__aeabi_dmul+0x82>
 800238c:	4b7b      	ldr	r3, [pc, #492]	; (800257c <__aeabi_dmul+0x3a0>)
 800238e:	2700      	movs	r7, #0
 8002390:	2600      	movs	r6, #0
 8002392:	e78e      	b.n	80022b2 <__aeabi_dmul+0xd6>
 8002394:	0c14      	lsrs	r4, r2, #16
 8002396:	0412      	lsls	r2, r2, #16
 8002398:	0c12      	lsrs	r2, r2, #16
 800239a:	0011      	movs	r1, r2
 800239c:	0c37      	lsrs	r7, r6, #16
 800239e:	0436      	lsls	r6, r6, #16
 80023a0:	0c35      	lsrs	r5, r6, #16
 80023a2:	4379      	muls	r1, r7
 80023a4:	0028      	movs	r0, r5
 80023a6:	468c      	mov	ip, r1
 80023a8:	002e      	movs	r6, r5
 80023aa:	4360      	muls	r0, r4
 80023ac:	4460      	add	r0, ip
 80023ae:	4683      	mov	fp, r0
 80023b0:	4356      	muls	r6, r2
 80023b2:	0021      	movs	r1, r4
 80023b4:	0c30      	lsrs	r0, r6, #16
 80023b6:	4680      	mov	r8, r0
 80023b8:	4658      	mov	r0, fp
 80023ba:	4379      	muls	r1, r7
 80023bc:	4440      	add	r0, r8
 80023be:	9102      	str	r1, [sp, #8]
 80023c0:	4584      	cmp	ip, r0
 80023c2:	d906      	bls.n	80023d2 <__aeabi_dmul+0x1f6>
 80023c4:	4688      	mov	r8, r1
 80023c6:	2180      	movs	r1, #128	; 0x80
 80023c8:	0249      	lsls	r1, r1, #9
 80023ca:	468c      	mov	ip, r1
 80023cc:	44e0      	add	r8, ip
 80023ce:	4641      	mov	r1, r8
 80023d0:	9102      	str	r1, [sp, #8]
 80023d2:	0436      	lsls	r6, r6, #16
 80023d4:	0c01      	lsrs	r1, r0, #16
 80023d6:	0c36      	lsrs	r6, r6, #16
 80023d8:	0400      	lsls	r0, r0, #16
 80023da:	468b      	mov	fp, r1
 80023dc:	1981      	adds	r1, r0, r6
 80023de:	0c1e      	lsrs	r6, r3, #16
 80023e0:	041b      	lsls	r3, r3, #16
 80023e2:	0c1b      	lsrs	r3, r3, #16
 80023e4:	9103      	str	r1, [sp, #12]
 80023e6:	0019      	movs	r1, r3
 80023e8:	4379      	muls	r1, r7
 80023ea:	468c      	mov	ip, r1
 80023ec:	0028      	movs	r0, r5
 80023ee:	4375      	muls	r5, r6
 80023f0:	4465      	add	r5, ip
 80023f2:	46a8      	mov	r8, r5
 80023f4:	4358      	muls	r0, r3
 80023f6:	0c05      	lsrs	r5, r0, #16
 80023f8:	4445      	add	r5, r8
 80023fa:	4377      	muls	r7, r6
 80023fc:	42a9      	cmp	r1, r5
 80023fe:	d903      	bls.n	8002408 <__aeabi_dmul+0x22c>
 8002400:	2180      	movs	r1, #128	; 0x80
 8002402:	0249      	lsls	r1, r1, #9
 8002404:	468c      	mov	ip, r1
 8002406:	4467      	add	r7, ip
 8002408:	0c29      	lsrs	r1, r5, #16
 800240a:	468c      	mov	ip, r1
 800240c:	0039      	movs	r1, r7
 800240e:	0400      	lsls	r0, r0, #16
 8002410:	0c00      	lsrs	r0, r0, #16
 8002412:	042d      	lsls	r5, r5, #16
 8002414:	182d      	adds	r5, r5, r0
 8002416:	4461      	add	r1, ip
 8002418:	44ab      	add	fp, r5
 800241a:	9105      	str	r1, [sp, #20]
 800241c:	4659      	mov	r1, fp
 800241e:	9104      	str	r1, [sp, #16]
 8002420:	9901      	ldr	r1, [sp, #4]
 8002422:	040f      	lsls	r7, r1, #16
 8002424:	0c3f      	lsrs	r7, r7, #16
 8002426:	0c08      	lsrs	r0, r1, #16
 8002428:	0039      	movs	r1, r7
 800242a:	4351      	muls	r1, r2
 800242c:	4342      	muls	r2, r0
 800242e:	4690      	mov	r8, r2
 8002430:	0002      	movs	r2, r0
 8002432:	468c      	mov	ip, r1
 8002434:	0c09      	lsrs	r1, r1, #16
 8002436:	468b      	mov	fp, r1
 8002438:	4362      	muls	r2, r4
 800243a:	437c      	muls	r4, r7
 800243c:	4444      	add	r4, r8
 800243e:	445c      	add	r4, fp
 8002440:	45a0      	cmp	r8, r4
 8002442:	d903      	bls.n	800244c <__aeabi_dmul+0x270>
 8002444:	2180      	movs	r1, #128	; 0x80
 8002446:	0249      	lsls	r1, r1, #9
 8002448:	4688      	mov	r8, r1
 800244a:	4442      	add	r2, r8
 800244c:	0c21      	lsrs	r1, r4, #16
 800244e:	4688      	mov	r8, r1
 8002450:	4661      	mov	r1, ip
 8002452:	0409      	lsls	r1, r1, #16
 8002454:	0c09      	lsrs	r1, r1, #16
 8002456:	468c      	mov	ip, r1
 8002458:	0039      	movs	r1, r7
 800245a:	4359      	muls	r1, r3
 800245c:	4343      	muls	r3, r0
 800245e:	4370      	muls	r0, r6
 8002460:	437e      	muls	r6, r7
 8002462:	0c0f      	lsrs	r7, r1, #16
 8002464:	18f6      	adds	r6, r6, r3
 8002466:	0424      	lsls	r4, r4, #16
 8002468:	19be      	adds	r6, r7, r6
 800246a:	4464      	add	r4, ip
 800246c:	4442      	add	r2, r8
 800246e:	468c      	mov	ip, r1
 8002470:	42b3      	cmp	r3, r6
 8002472:	d903      	bls.n	800247c <__aeabi_dmul+0x2a0>
 8002474:	2380      	movs	r3, #128	; 0x80
 8002476:	025b      	lsls	r3, r3, #9
 8002478:	4698      	mov	r8, r3
 800247a:	4440      	add	r0, r8
 800247c:	9b02      	ldr	r3, [sp, #8]
 800247e:	4661      	mov	r1, ip
 8002480:	4698      	mov	r8, r3
 8002482:	9b04      	ldr	r3, [sp, #16]
 8002484:	0437      	lsls	r7, r6, #16
 8002486:	4443      	add	r3, r8
 8002488:	469b      	mov	fp, r3
 800248a:	45ab      	cmp	fp, r5
 800248c:	41ad      	sbcs	r5, r5
 800248e:	426b      	negs	r3, r5
 8002490:	040d      	lsls	r5, r1, #16
 8002492:	9905      	ldr	r1, [sp, #20]
 8002494:	0c2d      	lsrs	r5, r5, #16
 8002496:	468c      	mov	ip, r1
 8002498:	197f      	adds	r7, r7, r5
 800249a:	4467      	add	r7, ip
 800249c:	18fd      	adds	r5, r7, r3
 800249e:	46a8      	mov	r8, r5
 80024a0:	465d      	mov	r5, fp
 80024a2:	192d      	adds	r5, r5, r4
 80024a4:	42a5      	cmp	r5, r4
 80024a6:	41a4      	sbcs	r4, r4
 80024a8:	4693      	mov	fp, r2
 80024aa:	4264      	negs	r4, r4
 80024ac:	46a4      	mov	ip, r4
 80024ae:	44c3      	add	fp, r8
 80024b0:	44dc      	add	ip, fp
 80024b2:	428f      	cmp	r7, r1
 80024b4:	41bf      	sbcs	r7, r7
 80024b6:	4598      	cmp	r8, r3
 80024b8:	419b      	sbcs	r3, r3
 80024ba:	4593      	cmp	fp, r2
 80024bc:	4192      	sbcs	r2, r2
 80024be:	45a4      	cmp	ip, r4
 80024c0:	41a4      	sbcs	r4, r4
 80024c2:	425b      	negs	r3, r3
 80024c4:	427f      	negs	r7, r7
 80024c6:	431f      	orrs	r7, r3
 80024c8:	0c36      	lsrs	r6, r6, #16
 80024ca:	4252      	negs	r2, r2
 80024cc:	4264      	negs	r4, r4
 80024ce:	19bf      	adds	r7, r7, r6
 80024d0:	4322      	orrs	r2, r4
 80024d2:	18bf      	adds	r7, r7, r2
 80024d4:	4662      	mov	r2, ip
 80024d6:	1838      	adds	r0, r7, r0
 80024d8:	0243      	lsls	r3, r0, #9
 80024da:	0dd2      	lsrs	r2, r2, #23
 80024dc:	9903      	ldr	r1, [sp, #12]
 80024de:	4313      	orrs	r3, r2
 80024e0:	026a      	lsls	r2, r5, #9
 80024e2:	430a      	orrs	r2, r1
 80024e4:	1e50      	subs	r0, r2, #1
 80024e6:	4182      	sbcs	r2, r0
 80024e8:	4661      	mov	r1, ip
 80024ea:	0ded      	lsrs	r5, r5, #23
 80024ec:	432a      	orrs	r2, r5
 80024ee:	024e      	lsls	r6, r1, #9
 80024f0:	4332      	orrs	r2, r6
 80024f2:	01d9      	lsls	r1, r3, #7
 80024f4:	d400      	bmi.n	80024f8 <__aeabi_dmul+0x31c>
 80024f6:	e0b3      	b.n	8002660 <__aeabi_dmul+0x484>
 80024f8:	2601      	movs	r6, #1
 80024fa:	0850      	lsrs	r0, r2, #1
 80024fc:	4032      	ands	r2, r6
 80024fe:	4302      	orrs	r2, r0
 8002500:	07de      	lsls	r6, r3, #31
 8002502:	4332      	orrs	r2, r6
 8002504:	085b      	lsrs	r3, r3, #1
 8002506:	4c22      	ldr	r4, [pc, #136]	; (8002590 <__aeabi_dmul+0x3b4>)
 8002508:	4454      	add	r4, sl
 800250a:	2c00      	cmp	r4, #0
 800250c:	dd62      	ble.n	80025d4 <__aeabi_dmul+0x3f8>
 800250e:	0751      	lsls	r1, r2, #29
 8002510:	d009      	beq.n	8002526 <__aeabi_dmul+0x34a>
 8002512:	200f      	movs	r0, #15
 8002514:	4010      	ands	r0, r2
 8002516:	2804      	cmp	r0, #4
 8002518:	d005      	beq.n	8002526 <__aeabi_dmul+0x34a>
 800251a:	1d10      	adds	r0, r2, #4
 800251c:	4290      	cmp	r0, r2
 800251e:	4192      	sbcs	r2, r2
 8002520:	4252      	negs	r2, r2
 8002522:	189b      	adds	r3, r3, r2
 8002524:	0002      	movs	r2, r0
 8002526:	01d9      	lsls	r1, r3, #7
 8002528:	d504      	bpl.n	8002534 <__aeabi_dmul+0x358>
 800252a:	2480      	movs	r4, #128	; 0x80
 800252c:	4819      	ldr	r0, [pc, #100]	; (8002594 <__aeabi_dmul+0x3b8>)
 800252e:	00e4      	lsls	r4, r4, #3
 8002530:	4003      	ands	r3, r0
 8002532:	4454      	add	r4, sl
 8002534:	4818      	ldr	r0, [pc, #96]	; (8002598 <__aeabi_dmul+0x3bc>)
 8002536:	4284      	cmp	r4, r0
 8002538:	dd00      	ble.n	800253c <__aeabi_dmul+0x360>
 800253a:	e727      	b.n	800238c <__aeabi_dmul+0x1b0>
 800253c:	075e      	lsls	r6, r3, #29
 800253e:	025b      	lsls	r3, r3, #9
 8002540:	08d2      	lsrs	r2, r2, #3
 8002542:	0b1f      	lsrs	r7, r3, #12
 8002544:	0563      	lsls	r3, r4, #21
 8002546:	4316      	orrs	r6, r2
 8002548:	0d5b      	lsrs	r3, r3, #21
 800254a:	e6b2      	b.n	80022b2 <__aeabi_dmul+0xd6>
 800254c:	2300      	movs	r3, #0
 800254e:	4699      	mov	r9, r3
 8002550:	3301      	adds	r3, #1
 8002552:	2704      	movs	r7, #4
 8002554:	2600      	movs	r6, #0
 8002556:	469b      	mov	fp, r3
 8002558:	e664      	b.n	8002224 <__aeabi_dmul+0x48>
 800255a:	2303      	movs	r3, #3
 800255c:	9701      	str	r7, [sp, #4]
 800255e:	4681      	mov	r9, r0
 8002560:	270c      	movs	r7, #12
 8002562:	469b      	mov	fp, r3
 8002564:	e65e      	b.n	8002224 <__aeabi_dmul+0x48>
 8002566:	2201      	movs	r2, #1
 8002568:	2001      	movs	r0, #1
 800256a:	4317      	orrs	r7, r2
 800256c:	2200      	movs	r2, #0
 800256e:	e676      	b.n	800225e <__aeabi_dmul+0x82>
 8002570:	2303      	movs	r3, #3
 8002572:	2003      	movs	r0, #3
 8002574:	431f      	orrs	r7, r3
 8002576:	4643      	mov	r3, r8
 8002578:	e671      	b.n	800225e <__aeabi_dmul+0x82>
 800257a:	46c0      	nop			; (mov r8, r8)
 800257c:	000007ff 	.word	0x000007ff
 8002580:	fffffc01 	.word	0xfffffc01
 8002584:	0800bcb4 	.word	0x0800bcb4
 8002588:	800fffff 	.word	0x800fffff
 800258c:	fffffc0d 	.word	0xfffffc0d
 8002590:	000003ff 	.word	0x000003ff
 8002594:	feffffff 	.word	0xfeffffff
 8002598:	000007fe 	.word	0x000007fe
 800259c:	2300      	movs	r3, #0
 800259e:	2780      	movs	r7, #128	; 0x80
 80025a0:	9300      	str	r3, [sp, #0]
 80025a2:	033f      	lsls	r7, r7, #12
 80025a4:	2600      	movs	r6, #0
 80025a6:	4b43      	ldr	r3, [pc, #268]	; (80026b4 <__aeabi_dmul+0x4d8>)
 80025a8:	e683      	b.n	80022b2 <__aeabi_dmul+0xd6>
 80025aa:	9b01      	ldr	r3, [sp, #4]
 80025ac:	0032      	movs	r2, r6
 80025ae:	46a4      	mov	ip, r4
 80025b0:	4658      	mov	r0, fp
 80025b2:	e670      	b.n	8002296 <__aeabi_dmul+0xba>
 80025b4:	46ac      	mov	ip, r5
 80025b6:	e66e      	b.n	8002296 <__aeabi_dmul+0xba>
 80025b8:	2780      	movs	r7, #128	; 0x80
 80025ba:	9901      	ldr	r1, [sp, #4]
 80025bc:	033f      	lsls	r7, r7, #12
 80025be:	4239      	tst	r1, r7
 80025c0:	d02d      	beq.n	800261e <__aeabi_dmul+0x442>
 80025c2:	423b      	tst	r3, r7
 80025c4:	d12b      	bne.n	800261e <__aeabi_dmul+0x442>
 80025c6:	431f      	orrs	r7, r3
 80025c8:	033f      	lsls	r7, r7, #12
 80025ca:	0b3f      	lsrs	r7, r7, #12
 80025cc:	9500      	str	r5, [sp, #0]
 80025ce:	0016      	movs	r6, r2
 80025d0:	4b38      	ldr	r3, [pc, #224]	; (80026b4 <__aeabi_dmul+0x4d8>)
 80025d2:	e66e      	b.n	80022b2 <__aeabi_dmul+0xd6>
 80025d4:	2501      	movs	r5, #1
 80025d6:	1b2d      	subs	r5, r5, r4
 80025d8:	2d38      	cmp	r5, #56	; 0x38
 80025da:	dd00      	ble.n	80025de <__aeabi_dmul+0x402>
 80025dc:	e666      	b.n	80022ac <__aeabi_dmul+0xd0>
 80025de:	2d1f      	cmp	r5, #31
 80025e0:	dc40      	bgt.n	8002664 <__aeabi_dmul+0x488>
 80025e2:	4835      	ldr	r0, [pc, #212]	; (80026b8 <__aeabi_dmul+0x4dc>)
 80025e4:	001c      	movs	r4, r3
 80025e6:	4450      	add	r0, sl
 80025e8:	0016      	movs	r6, r2
 80025ea:	4082      	lsls	r2, r0
 80025ec:	4084      	lsls	r4, r0
 80025ee:	40ee      	lsrs	r6, r5
 80025f0:	1e50      	subs	r0, r2, #1
 80025f2:	4182      	sbcs	r2, r0
 80025f4:	4334      	orrs	r4, r6
 80025f6:	4314      	orrs	r4, r2
 80025f8:	40eb      	lsrs	r3, r5
 80025fa:	0762      	lsls	r2, r4, #29
 80025fc:	d009      	beq.n	8002612 <__aeabi_dmul+0x436>
 80025fe:	220f      	movs	r2, #15
 8002600:	4022      	ands	r2, r4
 8002602:	2a04      	cmp	r2, #4
 8002604:	d005      	beq.n	8002612 <__aeabi_dmul+0x436>
 8002606:	0022      	movs	r2, r4
 8002608:	1d14      	adds	r4, r2, #4
 800260a:	4294      	cmp	r4, r2
 800260c:	4180      	sbcs	r0, r0
 800260e:	4240      	negs	r0, r0
 8002610:	181b      	adds	r3, r3, r0
 8002612:	021a      	lsls	r2, r3, #8
 8002614:	d53e      	bpl.n	8002694 <__aeabi_dmul+0x4b8>
 8002616:	2301      	movs	r3, #1
 8002618:	2700      	movs	r7, #0
 800261a:	2600      	movs	r6, #0
 800261c:	e649      	b.n	80022b2 <__aeabi_dmul+0xd6>
 800261e:	2780      	movs	r7, #128	; 0x80
 8002620:	9b01      	ldr	r3, [sp, #4]
 8002622:	033f      	lsls	r7, r7, #12
 8002624:	431f      	orrs	r7, r3
 8002626:	033f      	lsls	r7, r7, #12
 8002628:	0b3f      	lsrs	r7, r7, #12
 800262a:	9400      	str	r4, [sp, #0]
 800262c:	4b21      	ldr	r3, [pc, #132]	; (80026b4 <__aeabi_dmul+0x4d8>)
 800262e:	e640      	b.n	80022b2 <__aeabi_dmul+0xd6>
 8002630:	0003      	movs	r3, r0
 8002632:	465a      	mov	r2, fp
 8002634:	3b28      	subs	r3, #40	; 0x28
 8002636:	409a      	lsls	r2, r3
 8002638:	2600      	movs	r6, #0
 800263a:	9201      	str	r2, [sp, #4]
 800263c:	e66d      	b.n	800231a <__aeabi_dmul+0x13e>
 800263e:	4658      	mov	r0, fp
 8002640:	f000 fd1a 	bl	8003078 <__clzsi2>
 8002644:	3020      	adds	r0, #32
 8002646:	e657      	b.n	80022f8 <__aeabi_dmul+0x11c>
 8002648:	0003      	movs	r3, r0
 800264a:	4652      	mov	r2, sl
 800264c:	3b28      	subs	r3, #40	; 0x28
 800264e:	409a      	lsls	r2, r3
 8002650:	0013      	movs	r3, r2
 8002652:	2200      	movs	r2, #0
 8002654:	e693      	b.n	800237e <__aeabi_dmul+0x1a2>
 8002656:	4650      	mov	r0, sl
 8002658:	f000 fd0e 	bl	8003078 <__clzsi2>
 800265c:	3020      	adds	r0, #32
 800265e:	e67b      	b.n	8002358 <__aeabi_dmul+0x17c>
 8002660:	46ca      	mov	sl, r9
 8002662:	e750      	b.n	8002506 <__aeabi_dmul+0x32a>
 8002664:	201f      	movs	r0, #31
 8002666:	001e      	movs	r6, r3
 8002668:	4240      	negs	r0, r0
 800266a:	1b04      	subs	r4, r0, r4
 800266c:	40e6      	lsrs	r6, r4
 800266e:	2d20      	cmp	r5, #32
 8002670:	d003      	beq.n	800267a <__aeabi_dmul+0x49e>
 8002672:	4c12      	ldr	r4, [pc, #72]	; (80026bc <__aeabi_dmul+0x4e0>)
 8002674:	4454      	add	r4, sl
 8002676:	40a3      	lsls	r3, r4
 8002678:	431a      	orrs	r2, r3
 800267a:	1e50      	subs	r0, r2, #1
 800267c:	4182      	sbcs	r2, r0
 800267e:	4332      	orrs	r2, r6
 8002680:	2607      	movs	r6, #7
 8002682:	2700      	movs	r7, #0
 8002684:	4016      	ands	r6, r2
 8002686:	d009      	beq.n	800269c <__aeabi_dmul+0x4c0>
 8002688:	200f      	movs	r0, #15
 800268a:	2300      	movs	r3, #0
 800268c:	4010      	ands	r0, r2
 800268e:	0014      	movs	r4, r2
 8002690:	2804      	cmp	r0, #4
 8002692:	d1b9      	bne.n	8002608 <__aeabi_dmul+0x42c>
 8002694:	0022      	movs	r2, r4
 8002696:	075e      	lsls	r6, r3, #29
 8002698:	025b      	lsls	r3, r3, #9
 800269a:	0b1f      	lsrs	r7, r3, #12
 800269c:	08d2      	lsrs	r2, r2, #3
 800269e:	4316      	orrs	r6, r2
 80026a0:	2300      	movs	r3, #0
 80026a2:	e606      	b.n	80022b2 <__aeabi_dmul+0xd6>
 80026a4:	2780      	movs	r7, #128	; 0x80
 80026a6:	033f      	lsls	r7, r7, #12
 80026a8:	431f      	orrs	r7, r3
 80026aa:	033f      	lsls	r7, r7, #12
 80026ac:	0b3f      	lsrs	r7, r7, #12
 80026ae:	0016      	movs	r6, r2
 80026b0:	4b00      	ldr	r3, [pc, #0]	; (80026b4 <__aeabi_dmul+0x4d8>)
 80026b2:	e5fe      	b.n	80022b2 <__aeabi_dmul+0xd6>
 80026b4:	000007ff 	.word	0x000007ff
 80026b8:	0000041e 	.word	0x0000041e
 80026bc:	0000043e 	.word	0x0000043e

080026c0 <__aeabi_dsub>:
 80026c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026c2:	4657      	mov	r7, sl
 80026c4:	464e      	mov	r6, r9
 80026c6:	4645      	mov	r5, r8
 80026c8:	46de      	mov	lr, fp
 80026ca:	000c      	movs	r4, r1
 80026cc:	0309      	lsls	r1, r1, #12
 80026ce:	b5e0      	push	{r5, r6, r7, lr}
 80026d0:	0a49      	lsrs	r1, r1, #9
 80026d2:	0f46      	lsrs	r6, r0, #29
 80026d4:	005f      	lsls	r7, r3, #1
 80026d6:	4331      	orrs	r1, r6
 80026d8:	031e      	lsls	r6, r3, #12
 80026da:	0fdb      	lsrs	r3, r3, #31
 80026dc:	0a76      	lsrs	r6, r6, #9
 80026de:	469b      	mov	fp, r3
 80026e0:	0f53      	lsrs	r3, r2, #29
 80026e2:	4333      	orrs	r3, r6
 80026e4:	4ec8      	ldr	r6, [pc, #800]	; (8002a08 <__aeabi_dsub+0x348>)
 80026e6:	0065      	lsls	r5, r4, #1
 80026e8:	00c0      	lsls	r0, r0, #3
 80026ea:	0fe4      	lsrs	r4, r4, #31
 80026ec:	00d2      	lsls	r2, r2, #3
 80026ee:	0d6d      	lsrs	r5, r5, #21
 80026f0:	46a2      	mov	sl, r4
 80026f2:	4681      	mov	r9, r0
 80026f4:	0d7f      	lsrs	r7, r7, #21
 80026f6:	469c      	mov	ip, r3
 80026f8:	4690      	mov	r8, r2
 80026fa:	42b7      	cmp	r7, r6
 80026fc:	d100      	bne.n	8002700 <__aeabi_dsub+0x40>
 80026fe:	e0b9      	b.n	8002874 <__aeabi_dsub+0x1b4>
 8002700:	465b      	mov	r3, fp
 8002702:	2601      	movs	r6, #1
 8002704:	4073      	eors	r3, r6
 8002706:	469b      	mov	fp, r3
 8002708:	1bee      	subs	r6, r5, r7
 800270a:	45a3      	cmp	fp, r4
 800270c:	d100      	bne.n	8002710 <__aeabi_dsub+0x50>
 800270e:	e083      	b.n	8002818 <__aeabi_dsub+0x158>
 8002710:	2e00      	cmp	r6, #0
 8002712:	dd63      	ble.n	80027dc <__aeabi_dsub+0x11c>
 8002714:	2f00      	cmp	r7, #0
 8002716:	d000      	beq.n	800271a <__aeabi_dsub+0x5a>
 8002718:	e0b1      	b.n	800287e <__aeabi_dsub+0x1be>
 800271a:	4663      	mov	r3, ip
 800271c:	4313      	orrs	r3, r2
 800271e:	d100      	bne.n	8002722 <__aeabi_dsub+0x62>
 8002720:	e123      	b.n	800296a <__aeabi_dsub+0x2aa>
 8002722:	1e73      	subs	r3, r6, #1
 8002724:	2b00      	cmp	r3, #0
 8002726:	d000      	beq.n	800272a <__aeabi_dsub+0x6a>
 8002728:	e1ba      	b.n	8002aa0 <__aeabi_dsub+0x3e0>
 800272a:	1a86      	subs	r6, r0, r2
 800272c:	4663      	mov	r3, ip
 800272e:	42b0      	cmp	r0, r6
 8002730:	4180      	sbcs	r0, r0
 8002732:	2501      	movs	r5, #1
 8002734:	1ac9      	subs	r1, r1, r3
 8002736:	4240      	negs	r0, r0
 8002738:	1a09      	subs	r1, r1, r0
 800273a:	020b      	lsls	r3, r1, #8
 800273c:	d400      	bmi.n	8002740 <__aeabi_dsub+0x80>
 800273e:	e147      	b.n	80029d0 <__aeabi_dsub+0x310>
 8002740:	0249      	lsls	r1, r1, #9
 8002742:	0a4b      	lsrs	r3, r1, #9
 8002744:	4698      	mov	r8, r3
 8002746:	4643      	mov	r3, r8
 8002748:	2b00      	cmp	r3, #0
 800274a:	d100      	bne.n	800274e <__aeabi_dsub+0x8e>
 800274c:	e189      	b.n	8002a62 <__aeabi_dsub+0x3a2>
 800274e:	4640      	mov	r0, r8
 8002750:	f000 fc92 	bl	8003078 <__clzsi2>
 8002754:	0003      	movs	r3, r0
 8002756:	3b08      	subs	r3, #8
 8002758:	2b1f      	cmp	r3, #31
 800275a:	dd00      	ble.n	800275e <__aeabi_dsub+0x9e>
 800275c:	e17c      	b.n	8002a58 <__aeabi_dsub+0x398>
 800275e:	2220      	movs	r2, #32
 8002760:	0030      	movs	r0, r6
 8002762:	1ad2      	subs	r2, r2, r3
 8002764:	4641      	mov	r1, r8
 8002766:	40d0      	lsrs	r0, r2
 8002768:	4099      	lsls	r1, r3
 800276a:	0002      	movs	r2, r0
 800276c:	409e      	lsls	r6, r3
 800276e:	430a      	orrs	r2, r1
 8002770:	429d      	cmp	r5, r3
 8002772:	dd00      	ble.n	8002776 <__aeabi_dsub+0xb6>
 8002774:	e16a      	b.n	8002a4c <__aeabi_dsub+0x38c>
 8002776:	1b5d      	subs	r5, r3, r5
 8002778:	1c6b      	adds	r3, r5, #1
 800277a:	2b1f      	cmp	r3, #31
 800277c:	dd00      	ble.n	8002780 <__aeabi_dsub+0xc0>
 800277e:	e194      	b.n	8002aaa <__aeabi_dsub+0x3ea>
 8002780:	2120      	movs	r1, #32
 8002782:	0010      	movs	r0, r2
 8002784:	0035      	movs	r5, r6
 8002786:	1ac9      	subs	r1, r1, r3
 8002788:	408e      	lsls	r6, r1
 800278a:	40da      	lsrs	r2, r3
 800278c:	4088      	lsls	r0, r1
 800278e:	40dd      	lsrs	r5, r3
 8002790:	1e71      	subs	r1, r6, #1
 8002792:	418e      	sbcs	r6, r1
 8002794:	0011      	movs	r1, r2
 8002796:	2207      	movs	r2, #7
 8002798:	4328      	orrs	r0, r5
 800279a:	2500      	movs	r5, #0
 800279c:	4306      	orrs	r6, r0
 800279e:	4032      	ands	r2, r6
 80027a0:	2a00      	cmp	r2, #0
 80027a2:	d009      	beq.n	80027b8 <__aeabi_dsub+0xf8>
 80027a4:	230f      	movs	r3, #15
 80027a6:	4033      	ands	r3, r6
 80027a8:	2b04      	cmp	r3, #4
 80027aa:	d005      	beq.n	80027b8 <__aeabi_dsub+0xf8>
 80027ac:	1d33      	adds	r3, r6, #4
 80027ae:	42b3      	cmp	r3, r6
 80027b0:	41b6      	sbcs	r6, r6
 80027b2:	4276      	negs	r6, r6
 80027b4:	1989      	adds	r1, r1, r6
 80027b6:	001e      	movs	r6, r3
 80027b8:	020b      	lsls	r3, r1, #8
 80027ba:	d400      	bmi.n	80027be <__aeabi_dsub+0xfe>
 80027bc:	e23d      	b.n	8002c3a <__aeabi_dsub+0x57a>
 80027be:	1c6a      	adds	r2, r5, #1
 80027c0:	4b91      	ldr	r3, [pc, #580]	; (8002a08 <__aeabi_dsub+0x348>)
 80027c2:	0555      	lsls	r5, r2, #21
 80027c4:	0d6d      	lsrs	r5, r5, #21
 80027c6:	429a      	cmp	r2, r3
 80027c8:	d100      	bne.n	80027cc <__aeabi_dsub+0x10c>
 80027ca:	e119      	b.n	8002a00 <__aeabi_dsub+0x340>
 80027cc:	4a8f      	ldr	r2, [pc, #572]	; (8002a0c <__aeabi_dsub+0x34c>)
 80027ce:	08f6      	lsrs	r6, r6, #3
 80027d0:	400a      	ands	r2, r1
 80027d2:	0757      	lsls	r7, r2, #29
 80027d4:	0252      	lsls	r2, r2, #9
 80027d6:	4337      	orrs	r7, r6
 80027d8:	0b12      	lsrs	r2, r2, #12
 80027da:	e09b      	b.n	8002914 <__aeabi_dsub+0x254>
 80027dc:	2e00      	cmp	r6, #0
 80027de:	d000      	beq.n	80027e2 <__aeabi_dsub+0x122>
 80027e0:	e0c5      	b.n	800296e <__aeabi_dsub+0x2ae>
 80027e2:	1c6e      	adds	r6, r5, #1
 80027e4:	0576      	lsls	r6, r6, #21
 80027e6:	0d76      	lsrs	r6, r6, #21
 80027e8:	2e01      	cmp	r6, #1
 80027ea:	dc00      	bgt.n	80027ee <__aeabi_dsub+0x12e>
 80027ec:	e148      	b.n	8002a80 <__aeabi_dsub+0x3c0>
 80027ee:	4667      	mov	r7, ip
 80027f0:	1a86      	subs	r6, r0, r2
 80027f2:	1bcb      	subs	r3, r1, r7
 80027f4:	42b0      	cmp	r0, r6
 80027f6:	41bf      	sbcs	r7, r7
 80027f8:	427f      	negs	r7, r7
 80027fa:	46b8      	mov	r8, r7
 80027fc:	001f      	movs	r7, r3
 80027fe:	4643      	mov	r3, r8
 8002800:	1aff      	subs	r7, r7, r3
 8002802:	003b      	movs	r3, r7
 8002804:	46b8      	mov	r8, r7
 8002806:	021b      	lsls	r3, r3, #8
 8002808:	d500      	bpl.n	800280c <__aeabi_dsub+0x14c>
 800280a:	e15f      	b.n	8002acc <__aeabi_dsub+0x40c>
 800280c:	4337      	orrs	r7, r6
 800280e:	d19a      	bne.n	8002746 <__aeabi_dsub+0x86>
 8002810:	2200      	movs	r2, #0
 8002812:	2400      	movs	r4, #0
 8002814:	2500      	movs	r5, #0
 8002816:	e079      	b.n	800290c <__aeabi_dsub+0x24c>
 8002818:	2e00      	cmp	r6, #0
 800281a:	dc00      	bgt.n	800281e <__aeabi_dsub+0x15e>
 800281c:	e0fa      	b.n	8002a14 <__aeabi_dsub+0x354>
 800281e:	2f00      	cmp	r7, #0
 8002820:	d100      	bne.n	8002824 <__aeabi_dsub+0x164>
 8002822:	e08d      	b.n	8002940 <__aeabi_dsub+0x280>
 8002824:	4b78      	ldr	r3, [pc, #480]	; (8002a08 <__aeabi_dsub+0x348>)
 8002826:	429d      	cmp	r5, r3
 8002828:	d067      	beq.n	80028fa <__aeabi_dsub+0x23a>
 800282a:	2380      	movs	r3, #128	; 0x80
 800282c:	4667      	mov	r7, ip
 800282e:	041b      	lsls	r3, r3, #16
 8002830:	431f      	orrs	r7, r3
 8002832:	46bc      	mov	ip, r7
 8002834:	2e38      	cmp	r6, #56	; 0x38
 8002836:	dc00      	bgt.n	800283a <__aeabi_dsub+0x17a>
 8002838:	e152      	b.n	8002ae0 <__aeabi_dsub+0x420>
 800283a:	4663      	mov	r3, ip
 800283c:	4313      	orrs	r3, r2
 800283e:	1e5a      	subs	r2, r3, #1
 8002840:	4193      	sbcs	r3, r2
 8002842:	181e      	adds	r6, r3, r0
 8002844:	4286      	cmp	r6, r0
 8002846:	4180      	sbcs	r0, r0
 8002848:	4240      	negs	r0, r0
 800284a:	1809      	adds	r1, r1, r0
 800284c:	020b      	lsls	r3, r1, #8
 800284e:	d400      	bmi.n	8002852 <__aeabi_dsub+0x192>
 8002850:	e0be      	b.n	80029d0 <__aeabi_dsub+0x310>
 8002852:	4b6d      	ldr	r3, [pc, #436]	; (8002a08 <__aeabi_dsub+0x348>)
 8002854:	3501      	adds	r5, #1
 8002856:	429d      	cmp	r5, r3
 8002858:	d100      	bne.n	800285c <__aeabi_dsub+0x19c>
 800285a:	e0d2      	b.n	8002a02 <__aeabi_dsub+0x342>
 800285c:	4a6b      	ldr	r2, [pc, #428]	; (8002a0c <__aeabi_dsub+0x34c>)
 800285e:	0873      	lsrs	r3, r6, #1
 8002860:	400a      	ands	r2, r1
 8002862:	2101      	movs	r1, #1
 8002864:	400e      	ands	r6, r1
 8002866:	431e      	orrs	r6, r3
 8002868:	0851      	lsrs	r1, r2, #1
 800286a:	07d3      	lsls	r3, r2, #31
 800286c:	2207      	movs	r2, #7
 800286e:	431e      	orrs	r6, r3
 8002870:	4032      	ands	r2, r6
 8002872:	e795      	b.n	80027a0 <__aeabi_dsub+0xe0>
 8002874:	001e      	movs	r6, r3
 8002876:	4316      	orrs	r6, r2
 8002878:	d000      	beq.n	800287c <__aeabi_dsub+0x1bc>
 800287a:	e745      	b.n	8002708 <__aeabi_dsub+0x48>
 800287c:	e740      	b.n	8002700 <__aeabi_dsub+0x40>
 800287e:	4b62      	ldr	r3, [pc, #392]	; (8002a08 <__aeabi_dsub+0x348>)
 8002880:	429d      	cmp	r5, r3
 8002882:	d03a      	beq.n	80028fa <__aeabi_dsub+0x23a>
 8002884:	2380      	movs	r3, #128	; 0x80
 8002886:	4667      	mov	r7, ip
 8002888:	041b      	lsls	r3, r3, #16
 800288a:	431f      	orrs	r7, r3
 800288c:	46bc      	mov	ip, r7
 800288e:	2e38      	cmp	r6, #56	; 0x38
 8002890:	dd00      	ble.n	8002894 <__aeabi_dsub+0x1d4>
 8002892:	e0eb      	b.n	8002a6c <__aeabi_dsub+0x3ac>
 8002894:	2e1f      	cmp	r6, #31
 8002896:	dc00      	bgt.n	800289a <__aeabi_dsub+0x1da>
 8002898:	e13a      	b.n	8002b10 <__aeabi_dsub+0x450>
 800289a:	0033      	movs	r3, r6
 800289c:	4667      	mov	r7, ip
 800289e:	3b20      	subs	r3, #32
 80028a0:	40df      	lsrs	r7, r3
 80028a2:	003b      	movs	r3, r7
 80028a4:	2e20      	cmp	r6, #32
 80028a6:	d005      	beq.n	80028b4 <__aeabi_dsub+0x1f4>
 80028a8:	2740      	movs	r7, #64	; 0x40
 80028aa:	1bbf      	subs	r7, r7, r6
 80028ac:	4666      	mov	r6, ip
 80028ae:	40be      	lsls	r6, r7
 80028b0:	4332      	orrs	r2, r6
 80028b2:	4690      	mov	r8, r2
 80028b4:	4646      	mov	r6, r8
 80028b6:	1e72      	subs	r2, r6, #1
 80028b8:	4196      	sbcs	r6, r2
 80028ba:	4333      	orrs	r3, r6
 80028bc:	e0da      	b.n	8002a74 <__aeabi_dsub+0x3b4>
 80028be:	2b00      	cmp	r3, #0
 80028c0:	d100      	bne.n	80028c4 <__aeabi_dsub+0x204>
 80028c2:	e214      	b.n	8002cee <__aeabi_dsub+0x62e>
 80028c4:	4663      	mov	r3, ip
 80028c6:	4313      	orrs	r3, r2
 80028c8:	d100      	bne.n	80028cc <__aeabi_dsub+0x20c>
 80028ca:	e168      	b.n	8002b9e <__aeabi_dsub+0x4de>
 80028cc:	2380      	movs	r3, #128	; 0x80
 80028ce:	074e      	lsls	r6, r1, #29
 80028d0:	08c0      	lsrs	r0, r0, #3
 80028d2:	08c9      	lsrs	r1, r1, #3
 80028d4:	031b      	lsls	r3, r3, #12
 80028d6:	4306      	orrs	r6, r0
 80028d8:	4219      	tst	r1, r3
 80028da:	d008      	beq.n	80028ee <__aeabi_dsub+0x22e>
 80028dc:	4660      	mov	r0, ip
 80028de:	08c0      	lsrs	r0, r0, #3
 80028e0:	4218      	tst	r0, r3
 80028e2:	d104      	bne.n	80028ee <__aeabi_dsub+0x22e>
 80028e4:	4663      	mov	r3, ip
 80028e6:	0001      	movs	r1, r0
 80028e8:	08d2      	lsrs	r2, r2, #3
 80028ea:	075e      	lsls	r6, r3, #29
 80028ec:	4316      	orrs	r6, r2
 80028ee:	00f3      	lsls	r3, r6, #3
 80028f0:	4699      	mov	r9, r3
 80028f2:	00c9      	lsls	r1, r1, #3
 80028f4:	0f72      	lsrs	r2, r6, #29
 80028f6:	4d44      	ldr	r5, [pc, #272]	; (8002a08 <__aeabi_dsub+0x348>)
 80028f8:	4311      	orrs	r1, r2
 80028fa:	464b      	mov	r3, r9
 80028fc:	08de      	lsrs	r6, r3, #3
 80028fe:	4b42      	ldr	r3, [pc, #264]	; (8002a08 <__aeabi_dsub+0x348>)
 8002900:	074f      	lsls	r7, r1, #29
 8002902:	4337      	orrs	r7, r6
 8002904:	08ca      	lsrs	r2, r1, #3
 8002906:	429d      	cmp	r5, r3
 8002908:	d100      	bne.n	800290c <__aeabi_dsub+0x24c>
 800290a:	e06e      	b.n	80029ea <__aeabi_dsub+0x32a>
 800290c:	0312      	lsls	r2, r2, #12
 800290e:	056d      	lsls	r5, r5, #21
 8002910:	0b12      	lsrs	r2, r2, #12
 8002912:	0d6d      	lsrs	r5, r5, #21
 8002914:	2100      	movs	r1, #0
 8002916:	0312      	lsls	r2, r2, #12
 8002918:	0b13      	lsrs	r3, r2, #12
 800291a:	0d0a      	lsrs	r2, r1, #20
 800291c:	0512      	lsls	r2, r2, #20
 800291e:	431a      	orrs	r2, r3
 8002920:	4b3b      	ldr	r3, [pc, #236]	; (8002a10 <__aeabi_dsub+0x350>)
 8002922:	052d      	lsls	r5, r5, #20
 8002924:	4013      	ands	r3, r2
 8002926:	432b      	orrs	r3, r5
 8002928:	005b      	lsls	r3, r3, #1
 800292a:	07e4      	lsls	r4, r4, #31
 800292c:	085b      	lsrs	r3, r3, #1
 800292e:	4323      	orrs	r3, r4
 8002930:	0038      	movs	r0, r7
 8002932:	0019      	movs	r1, r3
 8002934:	bc3c      	pop	{r2, r3, r4, r5}
 8002936:	4690      	mov	r8, r2
 8002938:	4699      	mov	r9, r3
 800293a:	46a2      	mov	sl, r4
 800293c:	46ab      	mov	fp, r5
 800293e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002940:	4663      	mov	r3, ip
 8002942:	4313      	orrs	r3, r2
 8002944:	d011      	beq.n	800296a <__aeabi_dsub+0x2aa>
 8002946:	1e73      	subs	r3, r6, #1
 8002948:	2b00      	cmp	r3, #0
 800294a:	d000      	beq.n	800294e <__aeabi_dsub+0x28e>
 800294c:	e107      	b.n	8002b5e <__aeabi_dsub+0x49e>
 800294e:	1886      	adds	r6, r0, r2
 8002950:	4286      	cmp	r6, r0
 8002952:	4180      	sbcs	r0, r0
 8002954:	4461      	add	r1, ip
 8002956:	4240      	negs	r0, r0
 8002958:	1809      	adds	r1, r1, r0
 800295a:	2501      	movs	r5, #1
 800295c:	020b      	lsls	r3, r1, #8
 800295e:	d537      	bpl.n	80029d0 <__aeabi_dsub+0x310>
 8002960:	2502      	movs	r5, #2
 8002962:	e77b      	b.n	800285c <__aeabi_dsub+0x19c>
 8002964:	003e      	movs	r6, r7
 8002966:	4661      	mov	r1, ip
 8002968:	4691      	mov	r9, r2
 800296a:	0035      	movs	r5, r6
 800296c:	e7c5      	b.n	80028fa <__aeabi_dsub+0x23a>
 800296e:	465c      	mov	r4, fp
 8002970:	2d00      	cmp	r5, #0
 8002972:	d000      	beq.n	8002976 <__aeabi_dsub+0x2b6>
 8002974:	e0e1      	b.n	8002b3a <__aeabi_dsub+0x47a>
 8002976:	000b      	movs	r3, r1
 8002978:	4303      	orrs	r3, r0
 800297a:	d0f3      	beq.n	8002964 <__aeabi_dsub+0x2a4>
 800297c:	1c73      	adds	r3, r6, #1
 800297e:	d100      	bne.n	8002982 <__aeabi_dsub+0x2c2>
 8002980:	e1ac      	b.n	8002cdc <__aeabi_dsub+0x61c>
 8002982:	4b21      	ldr	r3, [pc, #132]	; (8002a08 <__aeabi_dsub+0x348>)
 8002984:	429f      	cmp	r7, r3
 8002986:	d100      	bne.n	800298a <__aeabi_dsub+0x2ca>
 8002988:	e13a      	b.n	8002c00 <__aeabi_dsub+0x540>
 800298a:	43f3      	mvns	r3, r6
 800298c:	2b38      	cmp	r3, #56	; 0x38
 800298e:	dd00      	ble.n	8002992 <__aeabi_dsub+0x2d2>
 8002990:	e16f      	b.n	8002c72 <__aeabi_dsub+0x5b2>
 8002992:	2b1f      	cmp	r3, #31
 8002994:	dd00      	ble.n	8002998 <__aeabi_dsub+0x2d8>
 8002996:	e18c      	b.n	8002cb2 <__aeabi_dsub+0x5f2>
 8002998:	2520      	movs	r5, #32
 800299a:	000e      	movs	r6, r1
 800299c:	1aed      	subs	r5, r5, r3
 800299e:	40ae      	lsls	r6, r5
 80029a0:	46b0      	mov	r8, r6
 80029a2:	0006      	movs	r6, r0
 80029a4:	46aa      	mov	sl, r5
 80029a6:	40de      	lsrs	r6, r3
 80029a8:	4645      	mov	r5, r8
 80029aa:	4335      	orrs	r5, r6
 80029ac:	002e      	movs	r6, r5
 80029ae:	4655      	mov	r5, sl
 80029b0:	40d9      	lsrs	r1, r3
 80029b2:	40a8      	lsls	r0, r5
 80029b4:	4663      	mov	r3, ip
 80029b6:	1e45      	subs	r5, r0, #1
 80029b8:	41a8      	sbcs	r0, r5
 80029ba:	1a5b      	subs	r3, r3, r1
 80029bc:	469c      	mov	ip, r3
 80029be:	4330      	orrs	r0, r6
 80029c0:	1a16      	subs	r6, r2, r0
 80029c2:	42b2      	cmp	r2, r6
 80029c4:	4192      	sbcs	r2, r2
 80029c6:	4663      	mov	r3, ip
 80029c8:	4252      	negs	r2, r2
 80029ca:	1a99      	subs	r1, r3, r2
 80029cc:	003d      	movs	r5, r7
 80029ce:	e6b4      	b.n	800273a <__aeabi_dsub+0x7a>
 80029d0:	2207      	movs	r2, #7
 80029d2:	4032      	ands	r2, r6
 80029d4:	2a00      	cmp	r2, #0
 80029d6:	d000      	beq.n	80029da <__aeabi_dsub+0x31a>
 80029d8:	e6e4      	b.n	80027a4 <__aeabi_dsub+0xe4>
 80029da:	4b0b      	ldr	r3, [pc, #44]	; (8002a08 <__aeabi_dsub+0x348>)
 80029dc:	08f6      	lsrs	r6, r6, #3
 80029de:	074f      	lsls	r7, r1, #29
 80029e0:	4337      	orrs	r7, r6
 80029e2:	08ca      	lsrs	r2, r1, #3
 80029e4:	429d      	cmp	r5, r3
 80029e6:	d000      	beq.n	80029ea <__aeabi_dsub+0x32a>
 80029e8:	e790      	b.n	800290c <__aeabi_dsub+0x24c>
 80029ea:	003b      	movs	r3, r7
 80029ec:	4313      	orrs	r3, r2
 80029ee:	d100      	bne.n	80029f2 <__aeabi_dsub+0x332>
 80029f0:	e1a6      	b.n	8002d40 <__aeabi_dsub+0x680>
 80029f2:	2380      	movs	r3, #128	; 0x80
 80029f4:	031b      	lsls	r3, r3, #12
 80029f6:	431a      	orrs	r2, r3
 80029f8:	0312      	lsls	r2, r2, #12
 80029fa:	0b12      	lsrs	r2, r2, #12
 80029fc:	4d02      	ldr	r5, [pc, #8]	; (8002a08 <__aeabi_dsub+0x348>)
 80029fe:	e789      	b.n	8002914 <__aeabi_dsub+0x254>
 8002a00:	0015      	movs	r5, r2
 8002a02:	2200      	movs	r2, #0
 8002a04:	2700      	movs	r7, #0
 8002a06:	e785      	b.n	8002914 <__aeabi_dsub+0x254>
 8002a08:	000007ff 	.word	0x000007ff
 8002a0c:	ff7fffff 	.word	0xff7fffff
 8002a10:	800fffff 	.word	0x800fffff
 8002a14:	2e00      	cmp	r6, #0
 8002a16:	d000      	beq.n	8002a1a <__aeabi_dsub+0x35a>
 8002a18:	e0c7      	b.n	8002baa <__aeabi_dsub+0x4ea>
 8002a1a:	1c6b      	adds	r3, r5, #1
 8002a1c:	055e      	lsls	r6, r3, #21
 8002a1e:	0d76      	lsrs	r6, r6, #21
 8002a20:	2e01      	cmp	r6, #1
 8002a22:	dc00      	bgt.n	8002a26 <__aeabi_dsub+0x366>
 8002a24:	e0f0      	b.n	8002c08 <__aeabi_dsub+0x548>
 8002a26:	4dc8      	ldr	r5, [pc, #800]	; (8002d48 <__aeabi_dsub+0x688>)
 8002a28:	42ab      	cmp	r3, r5
 8002a2a:	d100      	bne.n	8002a2e <__aeabi_dsub+0x36e>
 8002a2c:	e0b9      	b.n	8002ba2 <__aeabi_dsub+0x4e2>
 8002a2e:	1885      	adds	r5, r0, r2
 8002a30:	000a      	movs	r2, r1
 8002a32:	4285      	cmp	r5, r0
 8002a34:	4189      	sbcs	r1, r1
 8002a36:	4462      	add	r2, ip
 8002a38:	4249      	negs	r1, r1
 8002a3a:	1851      	adds	r1, r2, r1
 8002a3c:	2207      	movs	r2, #7
 8002a3e:	07ce      	lsls	r6, r1, #31
 8002a40:	086d      	lsrs	r5, r5, #1
 8002a42:	432e      	orrs	r6, r5
 8002a44:	0849      	lsrs	r1, r1, #1
 8002a46:	4032      	ands	r2, r6
 8002a48:	001d      	movs	r5, r3
 8002a4a:	e6a9      	b.n	80027a0 <__aeabi_dsub+0xe0>
 8002a4c:	49bf      	ldr	r1, [pc, #764]	; (8002d4c <__aeabi_dsub+0x68c>)
 8002a4e:	1aed      	subs	r5, r5, r3
 8002a50:	4011      	ands	r1, r2
 8002a52:	2207      	movs	r2, #7
 8002a54:	4032      	ands	r2, r6
 8002a56:	e6a3      	b.n	80027a0 <__aeabi_dsub+0xe0>
 8002a58:	0032      	movs	r2, r6
 8002a5a:	3828      	subs	r0, #40	; 0x28
 8002a5c:	4082      	lsls	r2, r0
 8002a5e:	2600      	movs	r6, #0
 8002a60:	e686      	b.n	8002770 <__aeabi_dsub+0xb0>
 8002a62:	0030      	movs	r0, r6
 8002a64:	f000 fb08 	bl	8003078 <__clzsi2>
 8002a68:	3020      	adds	r0, #32
 8002a6a:	e673      	b.n	8002754 <__aeabi_dsub+0x94>
 8002a6c:	4663      	mov	r3, ip
 8002a6e:	4313      	orrs	r3, r2
 8002a70:	1e5a      	subs	r2, r3, #1
 8002a72:	4193      	sbcs	r3, r2
 8002a74:	1ac6      	subs	r6, r0, r3
 8002a76:	42b0      	cmp	r0, r6
 8002a78:	4180      	sbcs	r0, r0
 8002a7a:	4240      	negs	r0, r0
 8002a7c:	1a09      	subs	r1, r1, r0
 8002a7e:	e65c      	b.n	800273a <__aeabi_dsub+0x7a>
 8002a80:	000e      	movs	r6, r1
 8002a82:	4667      	mov	r7, ip
 8002a84:	4306      	orrs	r6, r0
 8002a86:	4317      	orrs	r7, r2
 8002a88:	2d00      	cmp	r5, #0
 8002a8a:	d15e      	bne.n	8002b4a <__aeabi_dsub+0x48a>
 8002a8c:	2e00      	cmp	r6, #0
 8002a8e:	d000      	beq.n	8002a92 <__aeabi_dsub+0x3d2>
 8002a90:	e0f3      	b.n	8002c7a <__aeabi_dsub+0x5ba>
 8002a92:	2f00      	cmp	r7, #0
 8002a94:	d100      	bne.n	8002a98 <__aeabi_dsub+0x3d8>
 8002a96:	e11e      	b.n	8002cd6 <__aeabi_dsub+0x616>
 8002a98:	465c      	mov	r4, fp
 8002a9a:	4661      	mov	r1, ip
 8002a9c:	4691      	mov	r9, r2
 8002a9e:	e72c      	b.n	80028fa <__aeabi_dsub+0x23a>
 8002aa0:	4fa9      	ldr	r7, [pc, #676]	; (8002d48 <__aeabi_dsub+0x688>)
 8002aa2:	42be      	cmp	r6, r7
 8002aa4:	d07b      	beq.n	8002b9e <__aeabi_dsub+0x4de>
 8002aa6:	001e      	movs	r6, r3
 8002aa8:	e6f1      	b.n	800288e <__aeabi_dsub+0x1ce>
 8002aaa:	0010      	movs	r0, r2
 8002aac:	3d1f      	subs	r5, #31
 8002aae:	40e8      	lsrs	r0, r5
 8002ab0:	2b20      	cmp	r3, #32
 8002ab2:	d003      	beq.n	8002abc <__aeabi_dsub+0x3fc>
 8002ab4:	2140      	movs	r1, #64	; 0x40
 8002ab6:	1acb      	subs	r3, r1, r3
 8002ab8:	409a      	lsls	r2, r3
 8002aba:	4316      	orrs	r6, r2
 8002abc:	1e73      	subs	r3, r6, #1
 8002abe:	419e      	sbcs	r6, r3
 8002ac0:	2207      	movs	r2, #7
 8002ac2:	4306      	orrs	r6, r0
 8002ac4:	4032      	ands	r2, r6
 8002ac6:	2100      	movs	r1, #0
 8002ac8:	2500      	movs	r5, #0
 8002aca:	e783      	b.n	80029d4 <__aeabi_dsub+0x314>
 8002acc:	1a16      	subs	r6, r2, r0
 8002ace:	4663      	mov	r3, ip
 8002ad0:	42b2      	cmp	r2, r6
 8002ad2:	4180      	sbcs	r0, r0
 8002ad4:	1a59      	subs	r1, r3, r1
 8002ad6:	4240      	negs	r0, r0
 8002ad8:	1a0b      	subs	r3, r1, r0
 8002ada:	4698      	mov	r8, r3
 8002adc:	465c      	mov	r4, fp
 8002ade:	e632      	b.n	8002746 <__aeabi_dsub+0x86>
 8002ae0:	2e1f      	cmp	r6, #31
 8002ae2:	dd00      	ble.n	8002ae6 <__aeabi_dsub+0x426>
 8002ae4:	e0ab      	b.n	8002c3e <__aeabi_dsub+0x57e>
 8002ae6:	2720      	movs	r7, #32
 8002ae8:	1bbb      	subs	r3, r7, r6
 8002aea:	469a      	mov	sl, r3
 8002aec:	4663      	mov	r3, ip
 8002aee:	4657      	mov	r7, sl
 8002af0:	40bb      	lsls	r3, r7
 8002af2:	4699      	mov	r9, r3
 8002af4:	0013      	movs	r3, r2
 8002af6:	464f      	mov	r7, r9
 8002af8:	40f3      	lsrs	r3, r6
 8002afa:	431f      	orrs	r7, r3
 8002afc:	003b      	movs	r3, r7
 8002afe:	4657      	mov	r7, sl
 8002b00:	40ba      	lsls	r2, r7
 8002b02:	1e57      	subs	r7, r2, #1
 8002b04:	41ba      	sbcs	r2, r7
 8002b06:	4313      	orrs	r3, r2
 8002b08:	4662      	mov	r2, ip
 8002b0a:	40f2      	lsrs	r2, r6
 8002b0c:	1889      	adds	r1, r1, r2
 8002b0e:	e698      	b.n	8002842 <__aeabi_dsub+0x182>
 8002b10:	2720      	movs	r7, #32
 8002b12:	1bbb      	subs	r3, r7, r6
 8002b14:	469a      	mov	sl, r3
 8002b16:	4663      	mov	r3, ip
 8002b18:	4657      	mov	r7, sl
 8002b1a:	40bb      	lsls	r3, r7
 8002b1c:	4699      	mov	r9, r3
 8002b1e:	0013      	movs	r3, r2
 8002b20:	464f      	mov	r7, r9
 8002b22:	40f3      	lsrs	r3, r6
 8002b24:	431f      	orrs	r7, r3
 8002b26:	003b      	movs	r3, r7
 8002b28:	4657      	mov	r7, sl
 8002b2a:	40ba      	lsls	r2, r7
 8002b2c:	1e57      	subs	r7, r2, #1
 8002b2e:	41ba      	sbcs	r2, r7
 8002b30:	4313      	orrs	r3, r2
 8002b32:	4662      	mov	r2, ip
 8002b34:	40f2      	lsrs	r2, r6
 8002b36:	1a89      	subs	r1, r1, r2
 8002b38:	e79c      	b.n	8002a74 <__aeabi_dsub+0x3b4>
 8002b3a:	4b83      	ldr	r3, [pc, #524]	; (8002d48 <__aeabi_dsub+0x688>)
 8002b3c:	429f      	cmp	r7, r3
 8002b3e:	d05f      	beq.n	8002c00 <__aeabi_dsub+0x540>
 8002b40:	2580      	movs	r5, #128	; 0x80
 8002b42:	042d      	lsls	r5, r5, #16
 8002b44:	4273      	negs	r3, r6
 8002b46:	4329      	orrs	r1, r5
 8002b48:	e720      	b.n	800298c <__aeabi_dsub+0x2cc>
 8002b4a:	2e00      	cmp	r6, #0
 8002b4c:	d10c      	bne.n	8002b68 <__aeabi_dsub+0x4a8>
 8002b4e:	2f00      	cmp	r7, #0
 8002b50:	d100      	bne.n	8002b54 <__aeabi_dsub+0x494>
 8002b52:	e0d0      	b.n	8002cf6 <__aeabi_dsub+0x636>
 8002b54:	465c      	mov	r4, fp
 8002b56:	4661      	mov	r1, ip
 8002b58:	4691      	mov	r9, r2
 8002b5a:	4d7b      	ldr	r5, [pc, #492]	; (8002d48 <__aeabi_dsub+0x688>)
 8002b5c:	e6cd      	b.n	80028fa <__aeabi_dsub+0x23a>
 8002b5e:	4f7a      	ldr	r7, [pc, #488]	; (8002d48 <__aeabi_dsub+0x688>)
 8002b60:	42be      	cmp	r6, r7
 8002b62:	d01c      	beq.n	8002b9e <__aeabi_dsub+0x4de>
 8002b64:	001e      	movs	r6, r3
 8002b66:	e665      	b.n	8002834 <__aeabi_dsub+0x174>
 8002b68:	2f00      	cmp	r7, #0
 8002b6a:	d018      	beq.n	8002b9e <__aeabi_dsub+0x4de>
 8002b6c:	08c0      	lsrs	r0, r0, #3
 8002b6e:	074e      	lsls	r6, r1, #29
 8002b70:	4306      	orrs	r6, r0
 8002b72:	2080      	movs	r0, #128	; 0x80
 8002b74:	08c9      	lsrs	r1, r1, #3
 8002b76:	0300      	lsls	r0, r0, #12
 8002b78:	4201      	tst	r1, r0
 8002b7a:	d008      	beq.n	8002b8e <__aeabi_dsub+0x4ce>
 8002b7c:	4663      	mov	r3, ip
 8002b7e:	08dc      	lsrs	r4, r3, #3
 8002b80:	4204      	tst	r4, r0
 8002b82:	d104      	bne.n	8002b8e <__aeabi_dsub+0x4ce>
 8002b84:	0021      	movs	r1, r4
 8002b86:	46da      	mov	sl, fp
 8002b88:	08d2      	lsrs	r2, r2, #3
 8002b8a:	075e      	lsls	r6, r3, #29
 8002b8c:	4316      	orrs	r6, r2
 8002b8e:	00f3      	lsls	r3, r6, #3
 8002b90:	4699      	mov	r9, r3
 8002b92:	2401      	movs	r4, #1
 8002b94:	4653      	mov	r3, sl
 8002b96:	00c9      	lsls	r1, r1, #3
 8002b98:	0f72      	lsrs	r2, r6, #29
 8002b9a:	4311      	orrs	r1, r2
 8002b9c:	401c      	ands	r4, r3
 8002b9e:	4d6a      	ldr	r5, [pc, #424]	; (8002d48 <__aeabi_dsub+0x688>)
 8002ba0:	e6ab      	b.n	80028fa <__aeabi_dsub+0x23a>
 8002ba2:	001d      	movs	r5, r3
 8002ba4:	2200      	movs	r2, #0
 8002ba6:	2700      	movs	r7, #0
 8002ba8:	e6b4      	b.n	8002914 <__aeabi_dsub+0x254>
 8002baa:	2d00      	cmp	r5, #0
 8002bac:	d159      	bne.n	8002c62 <__aeabi_dsub+0x5a2>
 8002bae:	000b      	movs	r3, r1
 8002bb0:	4303      	orrs	r3, r0
 8002bb2:	d100      	bne.n	8002bb6 <__aeabi_dsub+0x4f6>
 8002bb4:	e6d6      	b.n	8002964 <__aeabi_dsub+0x2a4>
 8002bb6:	1c73      	adds	r3, r6, #1
 8002bb8:	d100      	bne.n	8002bbc <__aeabi_dsub+0x4fc>
 8002bba:	e0b2      	b.n	8002d22 <__aeabi_dsub+0x662>
 8002bbc:	4b62      	ldr	r3, [pc, #392]	; (8002d48 <__aeabi_dsub+0x688>)
 8002bbe:	429f      	cmp	r7, r3
 8002bc0:	d01e      	beq.n	8002c00 <__aeabi_dsub+0x540>
 8002bc2:	43f3      	mvns	r3, r6
 8002bc4:	2b38      	cmp	r3, #56	; 0x38
 8002bc6:	dc6f      	bgt.n	8002ca8 <__aeabi_dsub+0x5e8>
 8002bc8:	2b1f      	cmp	r3, #31
 8002bca:	dd00      	ble.n	8002bce <__aeabi_dsub+0x50e>
 8002bcc:	e097      	b.n	8002cfe <__aeabi_dsub+0x63e>
 8002bce:	2520      	movs	r5, #32
 8002bd0:	000e      	movs	r6, r1
 8002bd2:	1aed      	subs	r5, r5, r3
 8002bd4:	40ae      	lsls	r6, r5
 8002bd6:	46b0      	mov	r8, r6
 8002bd8:	0006      	movs	r6, r0
 8002bda:	46aa      	mov	sl, r5
 8002bdc:	40de      	lsrs	r6, r3
 8002bde:	4645      	mov	r5, r8
 8002be0:	4335      	orrs	r5, r6
 8002be2:	002e      	movs	r6, r5
 8002be4:	4655      	mov	r5, sl
 8002be6:	40a8      	lsls	r0, r5
 8002be8:	40d9      	lsrs	r1, r3
 8002bea:	1e45      	subs	r5, r0, #1
 8002bec:	41a8      	sbcs	r0, r5
 8002bee:	448c      	add	ip, r1
 8002bf0:	4306      	orrs	r6, r0
 8002bf2:	18b6      	adds	r6, r6, r2
 8002bf4:	4296      	cmp	r6, r2
 8002bf6:	4192      	sbcs	r2, r2
 8002bf8:	4251      	negs	r1, r2
 8002bfa:	4461      	add	r1, ip
 8002bfc:	003d      	movs	r5, r7
 8002bfe:	e625      	b.n	800284c <__aeabi_dsub+0x18c>
 8002c00:	003d      	movs	r5, r7
 8002c02:	4661      	mov	r1, ip
 8002c04:	4691      	mov	r9, r2
 8002c06:	e678      	b.n	80028fa <__aeabi_dsub+0x23a>
 8002c08:	000b      	movs	r3, r1
 8002c0a:	4303      	orrs	r3, r0
 8002c0c:	2d00      	cmp	r5, #0
 8002c0e:	d000      	beq.n	8002c12 <__aeabi_dsub+0x552>
 8002c10:	e655      	b.n	80028be <__aeabi_dsub+0x1fe>
 8002c12:	2b00      	cmp	r3, #0
 8002c14:	d0f5      	beq.n	8002c02 <__aeabi_dsub+0x542>
 8002c16:	4663      	mov	r3, ip
 8002c18:	4313      	orrs	r3, r2
 8002c1a:	d100      	bne.n	8002c1e <__aeabi_dsub+0x55e>
 8002c1c:	e66d      	b.n	80028fa <__aeabi_dsub+0x23a>
 8002c1e:	1886      	adds	r6, r0, r2
 8002c20:	4286      	cmp	r6, r0
 8002c22:	4180      	sbcs	r0, r0
 8002c24:	4461      	add	r1, ip
 8002c26:	4240      	negs	r0, r0
 8002c28:	1809      	adds	r1, r1, r0
 8002c2a:	2200      	movs	r2, #0
 8002c2c:	020b      	lsls	r3, r1, #8
 8002c2e:	d400      	bmi.n	8002c32 <__aeabi_dsub+0x572>
 8002c30:	e6d0      	b.n	80029d4 <__aeabi_dsub+0x314>
 8002c32:	4b46      	ldr	r3, [pc, #280]	; (8002d4c <__aeabi_dsub+0x68c>)
 8002c34:	3501      	adds	r5, #1
 8002c36:	4019      	ands	r1, r3
 8002c38:	e5b2      	b.n	80027a0 <__aeabi_dsub+0xe0>
 8002c3a:	46b1      	mov	r9, r6
 8002c3c:	e65d      	b.n	80028fa <__aeabi_dsub+0x23a>
 8002c3e:	0033      	movs	r3, r6
 8002c40:	4667      	mov	r7, ip
 8002c42:	3b20      	subs	r3, #32
 8002c44:	40df      	lsrs	r7, r3
 8002c46:	003b      	movs	r3, r7
 8002c48:	2e20      	cmp	r6, #32
 8002c4a:	d005      	beq.n	8002c58 <__aeabi_dsub+0x598>
 8002c4c:	2740      	movs	r7, #64	; 0x40
 8002c4e:	1bbf      	subs	r7, r7, r6
 8002c50:	4666      	mov	r6, ip
 8002c52:	40be      	lsls	r6, r7
 8002c54:	4332      	orrs	r2, r6
 8002c56:	4690      	mov	r8, r2
 8002c58:	4646      	mov	r6, r8
 8002c5a:	1e72      	subs	r2, r6, #1
 8002c5c:	4196      	sbcs	r6, r2
 8002c5e:	4333      	orrs	r3, r6
 8002c60:	e5ef      	b.n	8002842 <__aeabi_dsub+0x182>
 8002c62:	4b39      	ldr	r3, [pc, #228]	; (8002d48 <__aeabi_dsub+0x688>)
 8002c64:	429f      	cmp	r7, r3
 8002c66:	d0cb      	beq.n	8002c00 <__aeabi_dsub+0x540>
 8002c68:	2580      	movs	r5, #128	; 0x80
 8002c6a:	042d      	lsls	r5, r5, #16
 8002c6c:	4273      	negs	r3, r6
 8002c6e:	4329      	orrs	r1, r5
 8002c70:	e7a8      	b.n	8002bc4 <__aeabi_dsub+0x504>
 8002c72:	4308      	orrs	r0, r1
 8002c74:	1e41      	subs	r1, r0, #1
 8002c76:	4188      	sbcs	r0, r1
 8002c78:	e6a2      	b.n	80029c0 <__aeabi_dsub+0x300>
 8002c7a:	2f00      	cmp	r7, #0
 8002c7c:	d100      	bne.n	8002c80 <__aeabi_dsub+0x5c0>
 8002c7e:	e63c      	b.n	80028fa <__aeabi_dsub+0x23a>
 8002c80:	4663      	mov	r3, ip
 8002c82:	1a86      	subs	r6, r0, r2
 8002c84:	1acf      	subs	r7, r1, r3
 8002c86:	42b0      	cmp	r0, r6
 8002c88:	419b      	sbcs	r3, r3
 8002c8a:	425b      	negs	r3, r3
 8002c8c:	1afb      	subs	r3, r7, r3
 8002c8e:	4698      	mov	r8, r3
 8002c90:	021b      	lsls	r3, r3, #8
 8002c92:	d54e      	bpl.n	8002d32 <__aeabi_dsub+0x672>
 8002c94:	1a16      	subs	r6, r2, r0
 8002c96:	4663      	mov	r3, ip
 8002c98:	42b2      	cmp	r2, r6
 8002c9a:	4192      	sbcs	r2, r2
 8002c9c:	1a59      	subs	r1, r3, r1
 8002c9e:	4252      	negs	r2, r2
 8002ca0:	1a89      	subs	r1, r1, r2
 8002ca2:	465c      	mov	r4, fp
 8002ca4:	2200      	movs	r2, #0
 8002ca6:	e57b      	b.n	80027a0 <__aeabi_dsub+0xe0>
 8002ca8:	4301      	orrs	r1, r0
 8002caa:	000e      	movs	r6, r1
 8002cac:	1e71      	subs	r1, r6, #1
 8002cae:	418e      	sbcs	r6, r1
 8002cb0:	e79f      	b.n	8002bf2 <__aeabi_dsub+0x532>
 8002cb2:	001d      	movs	r5, r3
 8002cb4:	000e      	movs	r6, r1
 8002cb6:	3d20      	subs	r5, #32
 8002cb8:	40ee      	lsrs	r6, r5
 8002cba:	46b0      	mov	r8, r6
 8002cbc:	2b20      	cmp	r3, #32
 8002cbe:	d004      	beq.n	8002cca <__aeabi_dsub+0x60a>
 8002cc0:	2540      	movs	r5, #64	; 0x40
 8002cc2:	1aeb      	subs	r3, r5, r3
 8002cc4:	4099      	lsls	r1, r3
 8002cc6:	4308      	orrs	r0, r1
 8002cc8:	4681      	mov	r9, r0
 8002cca:	4648      	mov	r0, r9
 8002ccc:	4643      	mov	r3, r8
 8002cce:	1e41      	subs	r1, r0, #1
 8002cd0:	4188      	sbcs	r0, r1
 8002cd2:	4318      	orrs	r0, r3
 8002cd4:	e674      	b.n	80029c0 <__aeabi_dsub+0x300>
 8002cd6:	2200      	movs	r2, #0
 8002cd8:	2400      	movs	r4, #0
 8002cda:	e617      	b.n	800290c <__aeabi_dsub+0x24c>
 8002cdc:	1a16      	subs	r6, r2, r0
 8002cde:	4663      	mov	r3, ip
 8002ce0:	42b2      	cmp	r2, r6
 8002ce2:	4192      	sbcs	r2, r2
 8002ce4:	1a59      	subs	r1, r3, r1
 8002ce6:	4252      	negs	r2, r2
 8002ce8:	1a89      	subs	r1, r1, r2
 8002cea:	003d      	movs	r5, r7
 8002cec:	e525      	b.n	800273a <__aeabi_dsub+0x7a>
 8002cee:	4661      	mov	r1, ip
 8002cf0:	4691      	mov	r9, r2
 8002cf2:	4d15      	ldr	r5, [pc, #84]	; (8002d48 <__aeabi_dsub+0x688>)
 8002cf4:	e601      	b.n	80028fa <__aeabi_dsub+0x23a>
 8002cf6:	2280      	movs	r2, #128	; 0x80
 8002cf8:	2400      	movs	r4, #0
 8002cfa:	0312      	lsls	r2, r2, #12
 8002cfc:	e679      	b.n	80029f2 <__aeabi_dsub+0x332>
 8002cfe:	001d      	movs	r5, r3
 8002d00:	000e      	movs	r6, r1
 8002d02:	3d20      	subs	r5, #32
 8002d04:	40ee      	lsrs	r6, r5
 8002d06:	46b0      	mov	r8, r6
 8002d08:	2b20      	cmp	r3, #32
 8002d0a:	d004      	beq.n	8002d16 <__aeabi_dsub+0x656>
 8002d0c:	2540      	movs	r5, #64	; 0x40
 8002d0e:	1aeb      	subs	r3, r5, r3
 8002d10:	4099      	lsls	r1, r3
 8002d12:	4308      	orrs	r0, r1
 8002d14:	4681      	mov	r9, r0
 8002d16:	464e      	mov	r6, r9
 8002d18:	4643      	mov	r3, r8
 8002d1a:	1e71      	subs	r1, r6, #1
 8002d1c:	418e      	sbcs	r6, r1
 8002d1e:	431e      	orrs	r6, r3
 8002d20:	e767      	b.n	8002bf2 <__aeabi_dsub+0x532>
 8002d22:	1886      	adds	r6, r0, r2
 8002d24:	4296      	cmp	r6, r2
 8002d26:	419b      	sbcs	r3, r3
 8002d28:	4461      	add	r1, ip
 8002d2a:	425b      	negs	r3, r3
 8002d2c:	18c9      	adds	r1, r1, r3
 8002d2e:	003d      	movs	r5, r7
 8002d30:	e58c      	b.n	800284c <__aeabi_dsub+0x18c>
 8002d32:	4647      	mov	r7, r8
 8002d34:	4337      	orrs	r7, r6
 8002d36:	d0ce      	beq.n	8002cd6 <__aeabi_dsub+0x616>
 8002d38:	2207      	movs	r2, #7
 8002d3a:	4641      	mov	r1, r8
 8002d3c:	4032      	ands	r2, r6
 8002d3e:	e649      	b.n	80029d4 <__aeabi_dsub+0x314>
 8002d40:	2700      	movs	r7, #0
 8002d42:	003a      	movs	r2, r7
 8002d44:	e5e6      	b.n	8002914 <__aeabi_dsub+0x254>
 8002d46:	46c0      	nop			; (mov r8, r8)
 8002d48:	000007ff 	.word	0x000007ff
 8002d4c:	ff7fffff 	.word	0xff7fffff

08002d50 <__aeabi_dcmpun>:
 8002d50:	b570      	push	{r4, r5, r6, lr}
 8002d52:	4e0c      	ldr	r6, [pc, #48]	; (8002d84 <__aeabi_dcmpun+0x34>)
 8002d54:	030d      	lsls	r5, r1, #12
 8002d56:	031c      	lsls	r4, r3, #12
 8002d58:	0049      	lsls	r1, r1, #1
 8002d5a:	005b      	lsls	r3, r3, #1
 8002d5c:	0b2d      	lsrs	r5, r5, #12
 8002d5e:	0d49      	lsrs	r1, r1, #21
 8002d60:	0b24      	lsrs	r4, r4, #12
 8002d62:	0d5b      	lsrs	r3, r3, #21
 8002d64:	42b1      	cmp	r1, r6
 8002d66:	d008      	beq.n	8002d7a <__aeabi_dcmpun+0x2a>
 8002d68:	4906      	ldr	r1, [pc, #24]	; (8002d84 <__aeabi_dcmpun+0x34>)
 8002d6a:	2000      	movs	r0, #0
 8002d6c:	428b      	cmp	r3, r1
 8002d6e:	d103      	bne.n	8002d78 <__aeabi_dcmpun+0x28>
 8002d70:	4314      	orrs	r4, r2
 8002d72:	0020      	movs	r0, r4
 8002d74:	1e44      	subs	r4, r0, #1
 8002d76:	41a0      	sbcs	r0, r4
 8002d78:	bd70      	pop	{r4, r5, r6, pc}
 8002d7a:	4305      	orrs	r5, r0
 8002d7c:	2001      	movs	r0, #1
 8002d7e:	2d00      	cmp	r5, #0
 8002d80:	d1fa      	bne.n	8002d78 <__aeabi_dcmpun+0x28>
 8002d82:	e7f1      	b.n	8002d68 <__aeabi_dcmpun+0x18>
 8002d84:	000007ff 	.word	0x000007ff

08002d88 <__aeabi_d2iz>:
 8002d88:	b530      	push	{r4, r5, lr}
 8002d8a:	4d14      	ldr	r5, [pc, #80]	; (8002ddc <__aeabi_d2iz+0x54>)
 8002d8c:	030a      	lsls	r2, r1, #12
 8002d8e:	004b      	lsls	r3, r1, #1
 8002d90:	0b12      	lsrs	r2, r2, #12
 8002d92:	0d5b      	lsrs	r3, r3, #21
 8002d94:	0fc9      	lsrs	r1, r1, #31
 8002d96:	2400      	movs	r4, #0
 8002d98:	42ab      	cmp	r3, r5
 8002d9a:	dd11      	ble.n	8002dc0 <__aeabi_d2iz+0x38>
 8002d9c:	4c10      	ldr	r4, [pc, #64]	; (8002de0 <__aeabi_d2iz+0x58>)
 8002d9e:	42a3      	cmp	r3, r4
 8002da0:	dc10      	bgt.n	8002dc4 <__aeabi_d2iz+0x3c>
 8002da2:	2480      	movs	r4, #128	; 0x80
 8002da4:	0364      	lsls	r4, r4, #13
 8002da6:	4322      	orrs	r2, r4
 8002da8:	4c0e      	ldr	r4, [pc, #56]	; (8002de4 <__aeabi_d2iz+0x5c>)
 8002daa:	1ae4      	subs	r4, r4, r3
 8002dac:	2c1f      	cmp	r4, #31
 8002dae:	dd0c      	ble.n	8002dca <__aeabi_d2iz+0x42>
 8002db0:	480d      	ldr	r0, [pc, #52]	; (8002de8 <__aeabi_d2iz+0x60>)
 8002db2:	1ac3      	subs	r3, r0, r3
 8002db4:	40da      	lsrs	r2, r3
 8002db6:	0013      	movs	r3, r2
 8002db8:	425c      	negs	r4, r3
 8002dba:	2900      	cmp	r1, #0
 8002dbc:	d100      	bne.n	8002dc0 <__aeabi_d2iz+0x38>
 8002dbe:	001c      	movs	r4, r3
 8002dc0:	0020      	movs	r0, r4
 8002dc2:	bd30      	pop	{r4, r5, pc}
 8002dc4:	4b09      	ldr	r3, [pc, #36]	; (8002dec <__aeabi_d2iz+0x64>)
 8002dc6:	18cc      	adds	r4, r1, r3
 8002dc8:	e7fa      	b.n	8002dc0 <__aeabi_d2iz+0x38>
 8002dca:	4d09      	ldr	r5, [pc, #36]	; (8002df0 <__aeabi_d2iz+0x68>)
 8002dcc:	40e0      	lsrs	r0, r4
 8002dce:	46ac      	mov	ip, r5
 8002dd0:	4463      	add	r3, ip
 8002dd2:	409a      	lsls	r2, r3
 8002dd4:	0013      	movs	r3, r2
 8002dd6:	4303      	orrs	r3, r0
 8002dd8:	e7ee      	b.n	8002db8 <__aeabi_d2iz+0x30>
 8002dda:	46c0      	nop			; (mov r8, r8)
 8002ddc:	000003fe 	.word	0x000003fe
 8002de0:	0000041d 	.word	0x0000041d
 8002de4:	00000433 	.word	0x00000433
 8002de8:	00000413 	.word	0x00000413
 8002dec:	7fffffff 	.word	0x7fffffff
 8002df0:	fffffbed 	.word	0xfffffbed

08002df4 <__aeabi_i2d>:
 8002df4:	b570      	push	{r4, r5, r6, lr}
 8002df6:	2800      	cmp	r0, #0
 8002df8:	d02d      	beq.n	8002e56 <__aeabi_i2d+0x62>
 8002dfa:	17c3      	asrs	r3, r0, #31
 8002dfc:	18c5      	adds	r5, r0, r3
 8002dfe:	405d      	eors	r5, r3
 8002e00:	0fc4      	lsrs	r4, r0, #31
 8002e02:	0028      	movs	r0, r5
 8002e04:	f000 f938 	bl	8003078 <__clzsi2>
 8002e08:	4b15      	ldr	r3, [pc, #84]	; (8002e60 <__aeabi_i2d+0x6c>)
 8002e0a:	1a1b      	subs	r3, r3, r0
 8002e0c:	055b      	lsls	r3, r3, #21
 8002e0e:	0d5b      	lsrs	r3, r3, #21
 8002e10:	280a      	cmp	r0, #10
 8002e12:	dd15      	ble.n	8002e40 <__aeabi_i2d+0x4c>
 8002e14:	380b      	subs	r0, #11
 8002e16:	4085      	lsls	r5, r0
 8002e18:	2200      	movs	r2, #0
 8002e1a:	032d      	lsls	r5, r5, #12
 8002e1c:	0b2d      	lsrs	r5, r5, #12
 8002e1e:	2100      	movs	r1, #0
 8002e20:	0010      	movs	r0, r2
 8002e22:	032d      	lsls	r5, r5, #12
 8002e24:	0d0a      	lsrs	r2, r1, #20
 8002e26:	0b2d      	lsrs	r5, r5, #12
 8002e28:	0512      	lsls	r2, r2, #20
 8002e2a:	432a      	orrs	r2, r5
 8002e2c:	4d0d      	ldr	r5, [pc, #52]	; (8002e64 <__aeabi_i2d+0x70>)
 8002e2e:	051b      	lsls	r3, r3, #20
 8002e30:	402a      	ands	r2, r5
 8002e32:	4313      	orrs	r3, r2
 8002e34:	005b      	lsls	r3, r3, #1
 8002e36:	07e4      	lsls	r4, r4, #31
 8002e38:	085b      	lsrs	r3, r3, #1
 8002e3a:	4323      	orrs	r3, r4
 8002e3c:	0019      	movs	r1, r3
 8002e3e:	bd70      	pop	{r4, r5, r6, pc}
 8002e40:	0002      	movs	r2, r0
 8002e42:	0029      	movs	r1, r5
 8002e44:	3215      	adds	r2, #21
 8002e46:	4091      	lsls	r1, r2
 8002e48:	000a      	movs	r2, r1
 8002e4a:	210b      	movs	r1, #11
 8002e4c:	1a08      	subs	r0, r1, r0
 8002e4e:	40c5      	lsrs	r5, r0
 8002e50:	032d      	lsls	r5, r5, #12
 8002e52:	0b2d      	lsrs	r5, r5, #12
 8002e54:	e7e3      	b.n	8002e1e <__aeabi_i2d+0x2a>
 8002e56:	2400      	movs	r4, #0
 8002e58:	2300      	movs	r3, #0
 8002e5a:	2500      	movs	r5, #0
 8002e5c:	2200      	movs	r2, #0
 8002e5e:	e7de      	b.n	8002e1e <__aeabi_i2d+0x2a>
 8002e60:	0000041e 	.word	0x0000041e
 8002e64:	800fffff 	.word	0x800fffff

08002e68 <__aeabi_ui2d>:
 8002e68:	b510      	push	{r4, lr}
 8002e6a:	1e04      	subs	r4, r0, #0
 8002e6c:	d025      	beq.n	8002eba <__aeabi_ui2d+0x52>
 8002e6e:	f000 f903 	bl	8003078 <__clzsi2>
 8002e72:	4b14      	ldr	r3, [pc, #80]	; (8002ec4 <__aeabi_ui2d+0x5c>)
 8002e74:	1a1b      	subs	r3, r3, r0
 8002e76:	055b      	lsls	r3, r3, #21
 8002e78:	0d5b      	lsrs	r3, r3, #21
 8002e7a:	280a      	cmp	r0, #10
 8002e7c:	dd12      	ble.n	8002ea4 <__aeabi_ui2d+0x3c>
 8002e7e:	380b      	subs	r0, #11
 8002e80:	4084      	lsls	r4, r0
 8002e82:	2200      	movs	r2, #0
 8002e84:	0324      	lsls	r4, r4, #12
 8002e86:	0b24      	lsrs	r4, r4, #12
 8002e88:	2100      	movs	r1, #0
 8002e8a:	0010      	movs	r0, r2
 8002e8c:	0324      	lsls	r4, r4, #12
 8002e8e:	0d0a      	lsrs	r2, r1, #20
 8002e90:	0b24      	lsrs	r4, r4, #12
 8002e92:	0512      	lsls	r2, r2, #20
 8002e94:	4322      	orrs	r2, r4
 8002e96:	4c0c      	ldr	r4, [pc, #48]	; (8002ec8 <__aeabi_ui2d+0x60>)
 8002e98:	051b      	lsls	r3, r3, #20
 8002e9a:	4022      	ands	r2, r4
 8002e9c:	4313      	orrs	r3, r2
 8002e9e:	005b      	lsls	r3, r3, #1
 8002ea0:	0859      	lsrs	r1, r3, #1
 8002ea2:	bd10      	pop	{r4, pc}
 8002ea4:	0002      	movs	r2, r0
 8002ea6:	0021      	movs	r1, r4
 8002ea8:	3215      	adds	r2, #21
 8002eaa:	4091      	lsls	r1, r2
 8002eac:	000a      	movs	r2, r1
 8002eae:	210b      	movs	r1, #11
 8002eb0:	1a08      	subs	r0, r1, r0
 8002eb2:	40c4      	lsrs	r4, r0
 8002eb4:	0324      	lsls	r4, r4, #12
 8002eb6:	0b24      	lsrs	r4, r4, #12
 8002eb8:	e7e6      	b.n	8002e88 <__aeabi_ui2d+0x20>
 8002eba:	2300      	movs	r3, #0
 8002ebc:	2400      	movs	r4, #0
 8002ebe:	2200      	movs	r2, #0
 8002ec0:	e7e2      	b.n	8002e88 <__aeabi_ui2d+0x20>
 8002ec2:	46c0      	nop			; (mov r8, r8)
 8002ec4:	0000041e 	.word	0x0000041e
 8002ec8:	800fffff 	.word	0x800fffff

08002ecc <__aeabi_f2d>:
 8002ecc:	0041      	lsls	r1, r0, #1
 8002ece:	0e09      	lsrs	r1, r1, #24
 8002ed0:	1c4b      	adds	r3, r1, #1
 8002ed2:	b570      	push	{r4, r5, r6, lr}
 8002ed4:	b2db      	uxtb	r3, r3
 8002ed6:	0246      	lsls	r6, r0, #9
 8002ed8:	0a75      	lsrs	r5, r6, #9
 8002eda:	0fc4      	lsrs	r4, r0, #31
 8002edc:	2b01      	cmp	r3, #1
 8002ede:	dd14      	ble.n	8002f0a <__aeabi_f2d+0x3e>
 8002ee0:	23e0      	movs	r3, #224	; 0xe0
 8002ee2:	009b      	lsls	r3, r3, #2
 8002ee4:	076d      	lsls	r5, r5, #29
 8002ee6:	0b36      	lsrs	r6, r6, #12
 8002ee8:	18cb      	adds	r3, r1, r3
 8002eea:	2100      	movs	r1, #0
 8002eec:	0d0a      	lsrs	r2, r1, #20
 8002eee:	0028      	movs	r0, r5
 8002ef0:	0512      	lsls	r2, r2, #20
 8002ef2:	4d1c      	ldr	r5, [pc, #112]	; (8002f64 <__aeabi_f2d+0x98>)
 8002ef4:	4332      	orrs	r2, r6
 8002ef6:	055b      	lsls	r3, r3, #21
 8002ef8:	402a      	ands	r2, r5
 8002efa:	085b      	lsrs	r3, r3, #1
 8002efc:	4313      	orrs	r3, r2
 8002efe:	005b      	lsls	r3, r3, #1
 8002f00:	07e4      	lsls	r4, r4, #31
 8002f02:	085b      	lsrs	r3, r3, #1
 8002f04:	4323      	orrs	r3, r4
 8002f06:	0019      	movs	r1, r3
 8002f08:	bd70      	pop	{r4, r5, r6, pc}
 8002f0a:	2900      	cmp	r1, #0
 8002f0c:	d114      	bne.n	8002f38 <__aeabi_f2d+0x6c>
 8002f0e:	2d00      	cmp	r5, #0
 8002f10:	d01e      	beq.n	8002f50 <__aeabi_f2d+0x84>
 8002f12:	0028      	movs	r0, r5
 8002f14:	f000 f8b0 	bl	8003078 <__clzsi2>
 8002f18:	280a      	cmp	r0, #10
 8002f1a:	dc1c      	bgt.n	8002f56 <__aeabi_f2d+0x8a>
 8002f1c:	230b      	movs	r3, #11
 8002f1e:	002a      	movs	r2, r5
 8002f20:	1a1b      	subs	r3, r3, r0
 8002f22:	40da      	lsrs	r2, r3
 8002f24:	0003      	movs	r3, r0
 8002f26:	3315      	adds	r3, #21
 8002f28:	409d      	lsls	r5, r3
 8002f2a:	4b0f      	ldr	r3, [pc, #60]	; (8002f68 <__aeabi_f2d+0x9c>)
 8002f2c:	0312      	lsls	r2, r2, #12
 8002f2e:	1a1b      	subs	r3, r3, r0
 8002f30:	055b      	lsls	r3, r3, #21
 8002f32:	0b16      	lsrs	r6, r2, #12
 8002f34:	0d5b      	lsrs	r3, r3, #21
 8002f36:	e7d8      	b.n	8002eea <__aeabi_f2d+0x1e>
 8002f38:	2d00      	cmp	r5, #0
 8002f3a:	d006      	beq.n	8002f4a <__aeabi_f2d+0x7e>
 8002f3c:	0b32      	lsrs	r2, r6, #12
 8002f3e:	2680      	movs	r6, #128	; 0x80
 8002f40:	0336      	lsls	r6, r6, #12
 8002f42:	076d      	lsls	r5, r5, #29
 8002f44:	4316      	orrs	r6, r2
 8002f46:	4b09      	ldr	r3, [pc, #36]	; (8002f6c <__aeabi_f2d+0xa0>)
 8002f48:	e7cf      	b.n	8002eea <__aeabi_f2d+0x1e>
 8002f4a:	4b08      	ldr	r3, [pc, #32]	; (8002f6c <__aeabi_f2d+0xa0>)
 8002f4c:	2600      	movs	r6, #0
 8002f4e:	e7cc      	b.n	8002eea <__aeabi_f2d+0x1e>
 8002f50:	2300      	movs	r3, #0
 8002f52:	2600      	movs	r6, #0
 8002f54:	e7c9      	b.n	8002eea <__aeabi_f2d+0x1e>
 8002f56:	0003      	movs	r3, r0
 8002f58:	002a      	movs	r2, r5
 8002f5a:	3b0b      	subs	r3, #11
 8002f5c:	409a      	lsls	r2, r3
 8002f5e:	2500      	movs	r5, #0
 8002f60:	e7e3      	b.n	8002f2a <__aeabi_f2d+0x5e>
 8002f62:	46c0      	nop			; (mov r8, r8)
 8002f64:	800fffff 	.word	0x800fffff
 8002f68:	00000389 	.word	0x00000389
 8002f6c:	000007ff 	.word	0x000007ff

08002f70 <__aeabi_d2f>:
 8002f70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002f72:	004c      	lsls	r4, r1, #1
 8002f74:	0d64      	lsrs	r4, r4, #21
 8002f76:	030b      	lsls	r3, r1, #12
 8002f78:	1c62      	adds	r2, r4, #1
 8002f7a:	0a5b      	lsrs	r3, r3, #9
 8002f7c:	0f46      	lsrs	r6, r0, #29
 8002f7e:	0552      	lsls	r2, r2, #21
 8002f80:	0fc9      	lsrs	r1, r1, #31
 8002f82:	431e      	orrs	r6, r3
 8002f84:	00c5      	lsls	r5, r0, #3
 8002f86:	0d52      	lsrs	r2, r2, #21
 8002f88:	2a01      	cmp	r2, #1
 8002f8a:	dd29      	ble.n	8002fe0 <__aeabi_d2f+0x70>
 8002f8c:	4b37      	ldr	r3, [pc, #220]	; (800306c <__aeabi_d2f+0xfc>)
 8002f8e:	18e7      	adds	r7, r4, r3
 8002f90:	2ffe      	cmp	r7, #254	; 0xfe
 8002f92:	dc1c      	bgt.n	8002fce <__aeabi_d2f+0x5e>
 8002f94:	2f00      	cmp	r7, #0
 8002f96:	dd3b      	ble.n	8003010 <__aeabi_d2f+0xa0>
 8002f98:	0180      	lsls	r0, r0, #6
 8002f9a:	1e43      	subs	r3, r0, #1
 8002f9c:	4198      	sbcs	r0, r3
 8002f9e:	2207      	movs	r2, #7
 8002fa0:	00f3      	lsls	r3, r6, #3
 8002fa2:	0f6d      	lsrs	r5, r5, #29
 8002fa4:	4303      	orrs	r3, r0
 8002fa6:	432b      	orrs	r3, r5
 8002fa8:	401a      	ands	r2, r3
 8002faa:	2a00      	cmp	r2, #0
 8002fac:	d004      	beq.n	8002fb8 <__aeabi_d2f+0x48>
 8002fae:	220f      	movs	r2, #15
 8002fb0:	401a      	ands	r2, r3
 8002fb2:	2a04      	cmp	r2, #4
 8002fb4:	d000      	beq.n	8002fb8 <__aeabi_d2f+0x48>
 8002fb6:	3304      	adds	r3, #4
 8002fb8:	2280      	movs	r2, #128	; 0x80
 8002fba:	04d2      	lsls	r2, r2, #19
 8002fbc:	401a      	ands	r2, r3
 8002fbe:	d024      	beq.n	800300a <__aeabi_d2f+0x9a>
 8002fc0:	3701      	adds	r7, #1
 8002fc2:	b2fa      	uxtb	r2, r7
 8002fc4:	2fff      	cmp	r7, #255	; 0xff
 8002fc6:	d002      	beq.n	8002fce <__aeabi_d2f+0x5e>
 8002fc8:	019b      	lsls	r3, r3, #6
 8002fca:	0a58      	lsrs	r0, r3, #9
 8002fcc:	e001      	b.n	8002fd2 <__aeabi_d2f+0x62>
 8002fce:	22ff      	movs	r2, #255	; 0xff
 8002fd0:	2000      	movs	r0, #0
 8002fd2:	0240      	lsls	r0, r0, #9
 8002fd4:	05d2      	lsls	r2, r2, #23
 8002fd6:	0a40      	lsrs	r0, r0, #9
 8002fd8:	07c9      	lsls	r1, r1, #31
 8002fda:	4310      	orrs	r0, r2
 8002fdc:	4308      	orrs	r0, r1
 8002fde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002fe0:	4335      	orrs	r5, r6
 8002fe2:	2c00      	cmp	r4, #0
 8002fe4:	d104      	bne.n	8002ff0 <__aeabi_d2f+0x80>
 8002fe6:	2d00      	cmp	r5, #0
 8002fe8:	d10a      	bne.n	8003000 <__aeabi_d2f+0x90>
 8002fea:	2200      	movs	r2, #0
 8002fec:	2000      	movs	r0, #0
 8002fee:	e7f0      	b.n	8002fd2 <__aeabi_d2f+0x62>
 8002ff0:	2d00      	cmp	r5, #0
 8002ff2:	d0ec      	beq.n	8002fce <__aeabi_d2f+0x5e>
 8002ff4:	2080      	movs	r0, #128	; 0x80
 8002ff6:	03c0      	lsls	r0, r0, #15
 8002ff8:	4330      	orrs	r0, r6
 8002ffa:	22ff      	movs	r2, #255	; 0xff
 8002ffc:	e7e9      	b.n	8002fd2 <__aeabi_d2f+0x62>
 8002ffe:	2400      	movs	r4, #0
 8003000:	2300      	movs	r3, #0
 8003002:	025b      	lsls	r3, r3, #9
 8003004:	0a58      	lsrs	r0, r3, #9
 8003006:	b2e2      	uxtb	r2, r4
 8003008:	e7e3      	b.n	8002fd2 <__aeabi_d2f+0x62>
 800300a:	08db      	lsrs	r3, r3, #3
 800300c:	003c      	movs	r4, r7
 800300e:	e7f8      	b.n	8003002 <__aeabi_d2f+0x92>
 8003010:	003b      	movs	r3, r7
 8003012:	3317      	adds	r3, #23
 8003014:	dbf3      	blt.n	8002ffe <__aeabi_d2f+0x8e>
 8003016:	2380      	movs	r3, #128	; 0x80
 8003018:	041b      	lsls	r3, r3, #16
 800301a:	4333      	orrs	r3, r6
 800301c:	261e      	movs	r6, #30
 800301e:	1bf6      	subs	r6, r6, r7
 8003020:	2e1f      	cmp	r6, #31
 8003022:	dd14      	ble.n	800304e <__aeabi_d2f+0xde>
 8003024:	2202      	movs	r2, #2
 8003026:	4252      	negs	r2, r2
 8003028:	1bd7      	subs	r7, r2, r7
 800302a:	001a      	movs	r2, r3
 800302c:	40fa      	lsrs	r2, r7
 800302e:	0017      	movs	r7, r2
 8003030:	2e20      	cmp	r6, #32
 8003032:	d004      	beq.n	800303e <__aeabi_d2f+0xce>
 8003034:	4a0e      	ldr	r2, [pc, #56]	; (8003070 <__aeabi_d2f+0x100>)
 8003036:	4694      	mov	ip, r2
 8003038:	4464      	add	r4, ip
 800303a:	40a3      	lsls	r3, r4
 800303c:	431d      	orrs	r5, r3
 800303e:	002b      	movs	r3, r5
 8003040:	1e5d      	subs	r5, r3, #1
 8003042:	41ab      	sbcs	r3, r5
 8003044:	2207      	movs	r2, #7
 8003046:	433b      	orrs	r3, r7
 8003048:	401a      	ands	r2, r3
 800304a:	2700      	movs	r7, #0
 800304c:	e7ad      	b.n	8002faa <__aeabi_d2f+0x3a>
 800304e:	4a09      	ldr	r2, [pc, #36]	; (8003074 <__aeabi_d2f+0x104>)
 8003050:	0028      	movs	r0, r5
 8003052:	18a2      	adds	r2, r4, r2
 8003054:	4095      	lsls	r5, r2
 8003056:	4093      	lsls	r3, r2
 8003058:	1e6c      	subs	r4, r5, #1
 800305a:	41a5      	sbcs	r5, r4
 800305c:	40f0      	lsrs	r0, r6
 800305e:	2207      	movs	r2, #7
 8003060:	432b      	orrs	r3, r5
 8003062:	4303      	orrs	r3, r0
 8003064:	401a      	ands	r2, r3
 8003066:	2700      	movs	r7, #0
 8003068:	e79f      	b.n	8002faa <__aeabi_d2f+0x3a>
 800306a:	46c0      	nop			; (mov r8, r8)
 800306c:	fffffc80 	.word	0xfffffc80
 8003070:	fffffca2 	.word	0xfffffca2
 8003074:	fffffc82 	.word	0xfffffc82

08003078 <__clzsi2>:
 8003078:	211c      	movs	r1, #28
 800307a:	2301      	movs	r3, #1
 800307c:	041b      	lsls	r3, r3, #16
 800307e:	4298      	cmp	r0, r3
 8003080:	d301      	bcc.n	8003086 <__clzsi2+0xe>
 8003082:	0c00      	lsrs	r0, r0, #16
 8003084:	3910      	subs	r1, #16
 8003086:	0a1b      	lsrs	r3, r3, #8
 8003088:	4298      	cmp	r0, r3
 800308a:	d301      	bcc.n	8003090 <__clzsi2+0x18>
 800308c:	0a00      	lsrs	r0, r0, #8
 800308e:	3908      	subs	r1, #8
 8003090:	091b      	lsrs	r3, r3, #4
 8003092:	4298      	cmp	r0, r3
 8003094:	d301      	bcc.n	800309a <__clzsi2+0x22>
 8003096:	0900      	lsrs	r0, r0, #4
 8003098:	3904      	subs	r1, #4
 800309a:	a202      	add	r2, pc, #8	; (adr r2, 80030a4 <__clzsi2+0x2c>)
 800309c:	5c10      	ldrb	r0, [r2, r0]
 800309e:	1840      	adds	r0, r0, r1
 80030a0:	4770      	bx	lr
 80030a2:	46c0      	nop			; (mov r8, r8)
 80030a4:	02020304 	.word	0x02020304
 80030a8:	01010101 	.word	0x01010101
	...

080030b4 <__divdi3>:
 80030b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80030b6:	464e      	mov	r6, r9
 80030b8:	4657      	mov	r7, sl
 80030ba:	46de      	mov	lr, fp
 80030bc:	4645      	mov	r5, r8
 80030be:	b5e0      	push	{r5, r6, r7, lr}
 80030c0:	000f      	movs	r7, r1
 80030c2:	2100      	movs	r1, #0
 80030c4:	b083      	sub	sp, #12
 80030c6:	0006      	movs	r6, r0
 80030c8:	4689      	mov	r9, r1
 80030ca:	2f00      	cmp	r7, #0
 80030cc:	da06      	bge.n	80030dc <__divdi3+0x28>
 80030ce:	0039      	movs	r1, r7
 80030d0:	2700      	movs	r7, #0
 80030d2:	4246      	negs	r6, r0
 80030d4:	418f      	sbcs	r7, r1
 80030d6:	2101      	movs	r1, #1
 80030d8:	4249      	negs	r1, r1
 80030da:	4689      	mov	r9, r1
 80030dc:	2b00      	cmp	r3, #0
 80030de:	da07      	bge.n	80030f0 <__divdi3+0x3c>
 80030e0:	4649      	mov	r1, r9
 80030e2:	43c9      	mvns	r1, r1
 80030e4:	0010      	movs	r0, r2
 80030e6:	4689      	mov	r9, r1
 80030e8:	0019      	movs	r1, r3
 80030ea:	2300      	movs	r3, #0
 80030ec:	4242      	negs	r2, r0
 80030ee:	418b      	sbcs	r3, r1
 80030f0:	0034      	movs	r4, r6
 80030f2:	003d      	movs	r5, r7
 80030f4:	4692      	mov	sl, r2
 80030f6:	4698      	mov	r8, r3
 80030f8:	42bb      	cmp	r3, r7
 80030fa:	d869      	bhi.n	80031d0 <__divdi3+0x11c>
 80030fc:	d066      	beq.n	80031cc <__divdi3+0x118>
 80030fe:	4641      	mov	r1, r8
 8003100:	4650      	mov	r0, sl
 8003102:	f000 f8af 	bl	8003264 <__clzdi2>
 8003106:	4683      	mov	fp, r0
 8003108:	0039      	movs	r1, r7
 800310a:	0030      	movs	r0, r6
 800310c:	f000 f8aa 	bl	8003264 <__clzdi2>
 8003110:	465b      	mov	r3, fp
 8003112:	1a1b      	subs	r3, r3, r0
 8003114:	469c      	mov	ip, r3
 8003116:	3b20      	subs	r3, #32
 8003118:	469b      	mov	fp, r3
 800311a:	d500      	bpl.n	800311e <__divdi3+0x6a>
 800311c:	e075      	b.n	800320a <__divdi3+0x156>
 800311e:	4651      	mov	r1, sl
 8003120:	4658      	mov	r0, fp
 8003122:	4081      	lsls	r1, r0
 8003124:	000b      	movs	r3, r1
 8003126:	4651      	mov	r1, sl
 8003128:	4660      	mov	r0, ip
 800312a:	4081      	lsls	r1, r0
 800312c:	000a      	movs	r2, r1
 800312e:	42bb      	cmp	r3, r7
 8003130:	d861      	bhi.n	80031f6 <__divdi3+0x142>
 8003132:	d05e      	beq.n	80031f2 <__divdi3+0x13e>
 8003134:	0034      	movs	r4, r6
 8003136:	003d      	movs	r5, r7
 8003138:	4659      	mov	r1, fp
 800313a:	1aa4      	subs	r4, r4, r2
 800313c:	419d      	sbcs	r5, r3
 800313e:	2900      	cmp	r1, #0
 8003140:	da00      	bge.n	8003144 <__divdi3+0x90>
 8003142:	e07a      	b.n	800323a <__divdi3+0x186>
 8003144:	2100      	movs	r1, #0
 8003146:	2000      	movs	r0, #0
 8003148:	2601      	movs	r6, #1
 800314a:	9000      	str	r0, [sp, #0]
 800314c:	9101      	str	r1, [sp, #4]
 800314e:	4659      	mov	r1, fp
 8003150:	408e      	lsls	r6, r1
 8003152:	9601      	str	r6, [sp, #4]
 8003154:	4661      	mov	r1, ip
 8003156:	2601      	movs	r6, #1
 8003158:	408e      	lsls	r6, r1
 800315a:	4661      	mov	r1, ip
 800315c:	9600      	str	r6, [sp, #0]
 800315e:	2900      	cmp	r1, #0
 8003160:	d050      	beq.n	8003204 <__divdi3+0x150>
 8003162:	07d9      	lsls	r1, r3, #31
 8003164:	0856      	lsrs	r6, r2, #1
 8003166:	085f      	lsrs	r7, r3, #1
 8003168:	430e      	orrs	r6, r1
 800316a:	4663      	mov	r3, ip
 800316c:	e00e      	b.n	800318c <__divdi3+0xd8>
 800316e:	42af      	cmp	r7, r5
 8003170:	d101      	bne.n	8003176 <__divdi3+0xc2>
 8003172:	42a6      	cmp	r6, r4
 8003174:	d80c      	bhi.n	8003190 <__divdi3+0xdc>
 8003176:	1ba4      	subs	r4, r4, r6
 8003178:	41bd      	sbcs	r5, r7
 800317a:	2101      	movs	r1, #1
 800317c:	1924      	adds	r4, r4, r4
 800317e:	416d      	adcs	r5, r5
 8003180:	2200      	movs	r2, #0
 8003182:	3b01      	subs	r3, #1
 8003184:	1864      	adds	r4, r4, r1
 8003186:	4155      	adcs	r5, r2
 8003188:	2b00      	cmp	r3, #0
 800318a:	d006      	beq.n	800319a <__divdi3+0xe6>
 800318c:	42af      	cmp	r7, r5
 800318e:	d9ee      	bls.n	800316e <__divdi3+0xba>
 8003190:	3b01      	subs	r3, #1
 8003192:	1924      	adds	r4, r4, r4
 8003194:	416d      	adcs	r5, r5
 8003196:	2b00      	cmp	r3, #0
 8003198:	d1f8      	bne.n	800318c <__divdi3+0xd8>
 800319a:	9800      	ldr	r0, [sp, #0]
 800319c:	9901      	ldr	r1, [sp, #4]
 800319e:	465b      	mov	r3, fp
 80031a0:	1900      	adds	r0, r0, r4
 80031a2:	4169      	adcs	r1, r5
 80031a4:	2b00      	cmp	r3, #0
 80031a6:	db3d      	blt.n	8003224 <__divdi3+0x170>
 80031a8:	002e      	movs	r6, r5
 80031aa:	40de      	lsrs	r6, r3
 80031ac:	4663      	mov	r3, ip
 80031ae:	002c      	movs	r4, r5
 80031b0:	40dc      	lsrs	r4, r3
 80031b2:	465b      	mov	r3, fp
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	db4b      	blt.n	8003250 <__divdi3+0x19c>
 80031b8:	0034      	movs	r4, r6
 80031ba:	465d      	mov	r5, fp
 80031bc:	40ac      	lsls	r4, r5
 80031be:	0023      	movs	r3, r4
 80031c0:	4664      	mov	r4, ip
 80031c2:	40a6      	lsls	r6, r4
 80031c4:	0032      	movs	r2, r6
 80031c6:	1a80      	subs	r0, r0, r2
 80031c8:	4199      	sbcs	r1, r3
 80031ca:	e003      	b.n	80031d4 <__divdi3+0x120>
 80031cc:	42b2      	cmp	r2, r6
 80031ce:	d996      	bls.n	80030fe <__divdi3+0x4a>
 80031d0:	2000      	movs	r0, #0
 80031d2:	2100      	movs	r1, #0
 80031d4:	464b      	mov	r3, r9
 80031d6:	2b00      	cmp	r3, #0
 80031d8:	d004      	beq.n	80031e4 <__divdi3+0x130>
 80031da:	0003      	movs	r3, r0
 80031dc:	000c      	movs	r4, r1
 80031de:	2100      	movs	r1, #0
 80031e0:	4258      	negs	r0, r3
 80031e2:	41a1      	sbcs	r1, r4
 80031e4:	b003      	add	sp, #12
 80031e6:	bc3c      	pop	{r2, r3, r4, r5}
 80031e8:	4690      	mov	r8, r2
 80031ea:	4699      	mov	r9, r3
 80031ec:	46a2      	mov	sl, r4
 80031ee:	46ab      	mov	fp, r5
 80031f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80031f2:	42b1      	cmp	r1, r6
 80031f4:	d99e      	bls.n	8003134 <__divdi3+0x80>
 80031f6:	2100      	movs	r1, #0
 80031f8:	2000      	movs	r0, #0
 80031fa:	9000      	str	r0, [sp, #0]
 80031fc:	9101      	str	r1, [sp, #4]
 80031fe:	4661      	mov	r1, ip
 8003200:	2900      	cmp	r1, #0
 8003202:	d1ae      	bne.n	8003162 <__divdi3+0xae>
 8003204:	9800      	ldr	r0, [sp, #0]
 8003206:	9901      	ldr	r1, [sp, #4]
 8003208:	e7e4      	b.n	80031d4 <__divdi3+0x120>
 800320a:	2320      	movs	r3, #32
 800320c:	4662      	mov	r2, ip
 800320e:	4651      	mov	r1, sl
 8003210:	1a9b      	subs	r3, r3, r2
 8003212:	40d9      	lsrs	r1, r3
 8003214:	4640      	mov	r0, r8
 8003216:	9100      	str	r1, [sp, #0]
 8003218:	4661      	mov	r1, ip
 800321a:	4088      	lsls	r0, r1
 800321c:	0003      	movs	r3, r0
 800321e:	9900      	ldr	r1, [sp, #0]
 8003220:	430b      	orrs	r3, r1
 8003222:	e780      	b.n	8003126 <__divdi3+0x72>
 8003224:	4662      	mov	r2, ip
 8003226:	2320      	movs	r3, #32
 8003228:	1a9b      	subs	r3, r3, r2
 800322a:	002a      	movs	r2, r5
 800322c:	409a      	lsls	r2, r3
 800322e:	0026      	movs	r6, r4
 8003230:	0013      	movs	r3, r2
 8003232:	4662      	mov	r2, ip
 8003234:	40d6      	lsrs	r6, r2
 8003236:	431e      	orrs	r6, r3
 8003238:	e7b8      	b.n	80031ac <__divdi3+0xf8>
 800323a:	4661      	mov	r1, ip
 800323c:	2620      	movs	r6, #32
 800323e:	2701      	movs	r7, #1
 8003240:	1a76      	subs	r6, r6, r1
 8003242:	2000      	movs	r0, #0
 8003244:	2100      	movs	r1, #0
 8003246:	40f7      	lsrs	r7, r6
 8003248:	9000      	str	r0, [sp, #0]
 800324a:	9101      	str	r1, [sp, #4]
 800324c:	9701      	str	r7, [sp, #4]
 800324e:	e781      	b.n	8003154 <__divdi3+0xa0>
 8003250:	4667      	mov	r7, ip
 8003252:	2320      	movs	r3, #32
 8003254:	4662      	mov	r2, ip
 8003256:	0035      	movs	r5, r6
 8003258:	40bc      	lsls	r4, r7
 800325a:	1a9b      	subs	r3, r3, r2
 800325c:	40dd      	lsrs	r5, r3
 800325e:	0023      	movs	r3, r4
 8003260:	432b      	orrs	r3, r5
 8003262:	e7ad      	b.n	80031c0 <__divdi3+0x10c>

08003264 <__clzdi2>:
 8003264:	b510      	push	{r4, lr}
 8003266:	2900      	cmp	r1, #0
 8003268:	d103      	bne.n	8003272 <__clzdi2+0xe>
 800326a:	f7ff ff05 	bl	8003078 <__clzsi2>
 800326e:	3020      	adds	r0, #32
 8003270:	e002      	b.n	8003278 <__clzdi2+0x14>
 8003272:	1c08      	adds	r0, r1, #0
 8003274:	f7ff ff00 	bl	8003078 <__clzsi2>
 8003278:	bd10      	pop	{r4, pc}
 800327a:	46c0      	nop			; (mov r8, r8)

0800327c <__NVIC_EnableIRQ>:
  \brief   Enable Interrupt
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn){
 800327c:	b580      	push	{r7, lr}
 800327e:	b082      	sub	sp, #8
 8003280:	af00      	add	r7, sp, #0
 8003282:	0002      	movs	r2, r0
 8003284:	1dfb      	adds	r3, r7, #7
 8003286:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8003288:	1dfb      	adds	r3, r7, #7
 800328a:	781b      	ldrb	r3, [r3, #0]
 800328c:	2b7f      	cmp	r3, #127	; 0x7f
 800328e:	d809      	bhi.n	80032a4 <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003290:	1dfb      	adds	r3, r7, #7
 8003292:	781b      	ldrb	r3, [r3, #0]
 8003294:	001a      	movs	r2, r3
 8003296:	231f      	movs	r3, #31
 8003298:	401a      	ands	r2, r3
 800329a:	4b04      	ldr	r3, [pc, #16]	; (80032ac <__NVIC_EnableIRQ+0x30>)
 800329c:	2101      	movs	r1, #1
 800329e:	4091      	lsls	r1, r2
 80032a0:	000a      	movs	r2, r1
 80032a2:	601a      	str	r2, [r3, #0]
  }
}
 80032a4:	46c0      	nop			; (mov r8, r8)
 80032a6:	46bd      	mov	sp, r7
 80032a8:	b002      	add	sp, #8
 80032aa:	bd80      	pop	{r7, pc}
 80032ac:	e000e100 	.word	0xe000e100

080032b0 <__NVIC_SetPriority>:
           or negative to specify a processor exception.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority){
 80032b0:	b590      	push	{r4, r7, lr}
 80032b2:	b083      	sub	sp, #12
 80032b4:	af00      	add	r7, sp, #0
 80032b6:	0002      	movs	r2, r0
 80032b8:	6039      	str	r1, [r7, #0]
 80032ba:	1dfb      	adds	r3, r7, #7
 80032bc:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80032be:	1dfb      	adds	r3, r7, #7
 80032c0:	781b      	ldrb	r3, [r3, #0]
 80032c2:	2b7f      	cmp	r3, #127	; 0x7f
 80032c4:	d828      	bhi.n	8003318 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)] = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80032c6:	4a2f      	ldr	r2, [pc, #188]	; (8003384 <__NVIC_SetPriority+0xd4>)
 80032c8:	1dfb      	adds	r3, r7, #7
 80032ca:	781b      	ldrb	r3, [r3, #0]
 80032cc:	b25b      	sxtb	r3, r3
 80032ce:	089b      	lsrs	r3, r3, #2
 80032d0:	33c0      	adds	r3, #192	; 0xc0
 80032d2:	009b      	lsls	r3, r3, #2
 80032d4:	589b      	ldr	r3, [r3, r2]
 80032d6:	1dfa      	adds	r2, r7, #7
 80032d8:	7812      	ldrb	r2, [r2, #0]
 80032da:	0011      	movs	r1, r2
 80032dc:	2203      	movs	r2, #3
 80032de:	400a      	ands	r2, r1
 80032e0:	00d2      	lsls	r2, r2, #3
 80032e2:	21ff      	movs	r1, #255	; 0xff
 80032e4:	4091      	lsls	r1, r2
 80032e6:	000a      	movs	r2, r1
 80032e8:	43d2      	mvns	r2, r2
 80032ea:	401a      	ands	r2, r3
 80032ec:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80032ee:	683b      	ldr	r3, [r7, #0]
 80032f0:	019b      	lsls	r3, r3, #6
 80032f2:	22ff      	movs	r2, #255	; 0xff
 80032f4:	401a      	ands	r2, r3
 80032f6:	1dfb      	adds	r3, r7, #7
 80032f8:	781b      	ldrb	r3, [r3, #0]
 80032fa:	0018      	movs	r0, r3
 80032fc:	2303      	movs	r3, #3
 80032fe:	4003      	ands	r3, r0
 8003300:	00db      	lsls	r3, r3, #3
 8003302:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)] = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003304:	481f      	ldr	r0, [pc, #124]	; (8003384 <__NVIC_SetPriority+0xd4>)
 8003306:	1dfb      	adds	r3, r7, #7
 8003308:	781b      	ldrb	r3, [r3, #0]
 800330a:	b25b      	sxtb	r3, r3
 800330c:	089b      	lsrs	r3, r3, #2
 800330e:	430a      	orrs	r2, r1
 8003310:	33c0      	adds	r3, #192	; 0xc0
 8003312:	009b      	lsls	r3, r3, #2
 8003314:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8003316:	e031      	b.n	800337c <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003318:	4a1b      	ldr	r2, [pc, #108]	; (8003388 <__NVIC_SetPriority+0xd8>)
 800331a:	1dfb      	adds	r3, r7, #7
 800331c:	781b      	ldrb	r3, [r3, #0]
 800331e:	0019      	movs	r1, r3
 8003320:	230f      	movs	r3, #15
 8003322:	400b      	ands	r3, r1
 8003324:	3b08      	subs	r3, #8
 8003326:	089b      	lsrs	r3, r3, #2
 8003328:	3306      	adds	r3, #6
 800332a:	009b      	lsls	r3, r3, #2
 800332c:	18d3      	adds	r3, r2, r3
 800332e:	3304      	adds	r3, #4
 8003330:	681b      	ldr	r3, [r3, #0]
 8003332:	1dfa      	adds	r2, r7, #7
 8003334:	7812      	ldrb	r2, [r2, #0]
 8003336:	0011      	movs	r1, r2
 8003338:	2203      	movs	r2, #3
 800333a:	400a      	ands	r2, r1
 800333c:	00d2      	lsls	r2, r2, #3
 800333e:	21ff      	movs	r1, #255	; 0xff
 8003340:	4091      	lsls	r1, r2
 8003342:	000a      	movs	r2, r1
 8003344:	43d2      	mvns	r2, r2
 8003346:	401a      	ands	r2, r3
 8003348:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800334a:	683b      	ldr	r3, [r7, #0]
 800334c:	019b      	lsls	r3, r3, #6
 800334e:	22ff      	movs	r2, #255	; 0xff
 8003350:	401a      	ands	r2, r3
 8003352:	1dfb      	adds	r3, r7, #7
 8003354:	781b      	ldrb	r3, [r3, #0]
 8003356:	0018      	movs	r0, r3
 8003358:	2303      	movs	r3, #3
 800335a:	4003      	ands	r3, r0
 800335c:	00db      	lsls	r3, r3, #3
 800335e:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003360:	4809      	ldr	r0, [pc, #36]	; (8003388 <__NVIC_SetPriority+0xd8>)
 8003362:	1dfb      	adds	r3, r7, #7
 8003364:	781b      	ldrb	r3, [r3, #0]
 8003366:	001c      	movs	r4, r3
 8003368:	230f      	movs	r3, #15
 800336a:	4023      	ands	r3, r4
 800336c:	3b08      	subs	r3, #8
 800336e:	089b      	lsrs	r3, r3, #2
 8003370:	430a      	orrs	r2, r1
 8003372:	3306      	adds	r3, #6
 8003374:	009b      	lsls	r3, r3, #2
 8003376:	18c3      	adds	r3, r0, r3
 8003378:	3304      	adds	r3, #4
 800337a:	601a      	str	r2, [r3, #0]
}
 800337c:	46c0      	nop			; (mov r8, r8)
 800337e:	46bd      	mov	sp, r7
 8003380:	b003      	add	sp, #12
 8003382:	bd90      	pop	{r4, r7, pc}
 8003384:	e000e100 	.word	0xe000e100
 8003388:	e000ed00 	.word	0xe000ed00

0800338c <canFilterConfig>:
/*                                                                            */
/******************************************************************************/

/******************* Configure the CAN to filter the data frames from the RPI ********************/

void canFilterConfig(){
 800338c:	b580      	push	{r7, lr}
 800338e:	af00      	add	r7, sp, #0

  printf("********** CAN FILTER CONFIGURATION **********\r\n");
 8003390:	4bfd      	ldr	r3, [pc, #1012]	; (8003788 <canFilterConfig+0x3fc>)
 8003392:	0018      	movs	r0, r3
 8003394:	f003 fb76 	bl	8006a84 <puts>

  // Enter filter initialization mode
  CAN->FMR |= CAN_FMR_FINIT; // 0: Active filters mode, 1: Initialization mode for the filters
 8003398:	4afc      	ldr	r2, [pc, #1008]	; (800378c <canFilterConfig+0x400>)
 800339a:	2380      	movs	r3, #128	; 0x80
 800339c:	009b      	lsls	r3, r3, #2
 800339e:	58d3      	ldr	r3, [r2, r3]
 80033a0:	49fa      	ldr	r1, [pc, #1000]	; (800378c <canFilterConfig+0x400>)
 80033a2:	2201      	movs	r2, #1
 80033a4:	431a      	orrs	r2, r3
 80033a6:	2380      	movs	r3, #128	; 0x80
 80033a8:	009b      	lsls	r3, r3, #2
 80033aa:	50ca      	str	r2, [r1, r3]

  // Identifier mode for the filters 0 to 5
  CAN->FM1R |= CAN_FM1R_FBM0 | CAN_FM1R_FBM1 | CAN_FM1R_FBM2 | CAN_FM1R_FBM3 | CAN_FM1R_FBM4 | CAN_FM1R_FBM5;  // 0: Mask mode, 1: Identifier mode
 80033ac:	4af7      	ldr	r2, [pc, #988]	; (800378c <canFilterConfig+0x400>)
 80033ae:	2381      	movs	r3, #129	; 0x81
 80033b0:	009b      	lsls	r3, r3, #2
 80033b2:	58d3      	ldr	r3, [r2, r3]
 80033b4:	49f5      	ldr	r1, [pc, #980]	; (800378c <canFilterConfig+0x400>)
 80033b6:	223f      	movs	r2, #63	; 0x3f
 80033b8:	431a      	orrs	r2, r3
 80033ba:	2381      	movs	r3, #129	; 0x81
 80033bc:	009b      	lsls	r3, r3, #2
 80033be:	50ca      	str	r2, [r1, r3]

  // Identifier mode for the filters 6 to 11
  CAN->FM1R |= CAN_FM1R_FBM6 | CAN_FM1R_FBM7 | CAN_FM1R_FBM8 | CAN_FM1R_FBM9 | CAN_FM1R_FBM10 | CAN_FM1R_FBM11;  // 0: Mask mode, 1: Identifier mode
 80033c0:	4af2      	ldr	r2, [pc, #968]	; (800378c <canFilterConfig+0x400>)
 80033c2:	2381      	movs	r3, #129	; 0x81
 80033c4:	009b      	lsls	r3, r3, #2
 80033c6:	58d3      	ldr	r3, [r2, r3]
 80033c8:	49f0      	ldr	r1, [pc, #960]	; (800378c <canFilterConfig+0x400>)
 80033ca:	22fc      	movs	r2, #252	; 0xfc
 80033cc:	0112      	lsls	r2, r2, #4
 80033ce:	431a      	orrs	r2, r3
 80033d0:	2381      	movs	r3, #129	; 0x81
 80033d2:	009b      	lsls	r3, r3, #2
 80033d4:	50ca      	str	r2, [r1, r3]

  // Single 32-bit scale configuration mode for the filters 0 to 5
  CAN->FS1R |= CAN_FS1R_FSC0 | CAN_FS1R_FSC1 | CAN_FS1R_FSC2 | CAN_FS1R_FSC3 | CAN_FS1R_FSC4 | CAN_FS1R_FSC5; // 0: Dual 16-bit scale configuration, 1: Single 32-bit scale configuration
 80033d6:	4aed      	ldr	r2, [pc, #948]	; (800378c <canFilterConfig+0x400>)
 80033d8:	2383      	movs	r3, #131	; 0x83
 80033da:	009b      	lsls	r3, r3, #2
 80033dc:	58d3      	ldr	r3, [r2, r3]
 80033de:	49eb      	ldr	r1, [pc, #940]	; (800378c <canFilterConfig+0x400>)
 80033e0:	223f      	movs	r2, #63	; 0x3f
 80033e2:	431a      	orrs	r2, r3
 80033e4:	2383      	movs	r3, #131	; 0x83
 80033e6:	009b      	lsls	r3, r3, #2
 80033e8:	50ca      	str	r2, [r1, r3]

  // Single 32-bit scale configuration mode for the filters 6 to 11
  CAN->FS1R |= CAN_FS1R_FSC6 | CAN_FS1R_FSC7 | CAN_FS1R_FSC8 | CAN_FS1R_FSC9 | CAN_FS1R_FSC10 | CAN_FS1R_FSC11; // 0: Dual 16-bit scale configuration, 1: Single 32-bit scale configuration
 80033ea:	4ae8      	ldr	r2, [pc, #928]	; (800378c <canFilterConfig+0x400>)
 80033ec:	2383      	movs	r3, #131	; 0x83
 80033ee:	009b      	lsls	r3, r3, #2
 80033f0:	58d3      	ldr	r3, [r2, r3]
 80033f2:	49e6      	ldr	r1, [pc, #920]	; (800378c <canFilterConfig+0x400>)
 80033f4:	22fc      	movs	r2, #252	; 0xfc
 80033f6:	0112      	lsls	r2, r2, #4
 80033f8:	431a      	orrs	r2, r3
 80033fa:	2383      	movs	r3, #131	; 0x83
 80033fc:	009b      	lsls	r3, r3, #2
 80033fe:	50ca      	str	r2, [r1, r3]

  // The message passing through the filter 0 to 5 will be stored in the FIFO 0
  CAN->FFA1R &= ~CAN_FFA1R_FFA0_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003400:	4ae2      	ldr	r2, [pc, #904]	; (800378c <canFilterConfig+0x400>)
 8003402:	2385      	movs	r3, #133	; 0x85
 8003404:	009b      	lsls	r3, r3, #2
 8003406:	58d3      	ldr	r3, [r2, r3]
 8003408:	49e0      	ldr	r1, [pc, #896]	; (800378c <canFilterConfig+0x400>)
 800340a:	2201      	movs	r2, #1
 800340c:	4393      	bics	r3, r2
 800340e:	001a      	movs	r2, r3
 8003410:	2385      	movs	r3, #133	; 0x85
 8003412:	009b      	lsls	r3, r3, #2
 8003414:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA1_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003416:	4add      	ldr	r2, [pc, #884]	; (800378c <canFilterConfig+0x400>)
 8003418:	2385      	movs	r3, #133	; 0x85
 800341a:	009b      	lsls	r3, r3, #2
 800341c:	58d3      	ldr	r3, [r2, r3]
 800341e:	49db      	ldr	r1, [pc, #876]	; (800378c <canFilterConfig+0x400>)
 8003420:	2202      	movs	r2, #2
 8003422:	4393      	bics	r3, r2
 8003424:	001a      	movs	r2, r3
 8003426:	2385      	movs	r3, #133	; 0x85
 8003428:	009b      	lsls	r3, r3, #2
 800342a:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA2_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 800342c:	4ad7      	ldr	r2, [pc, #860]	; (800378c <canFilterConfig+0x400>)
 800342e:	2385      	movs	r3, #133	; 0x85
 8003430:	009b      	lsls	r3, r3, #2
 8003432:	58d3      	ldr	r3, [r2, r3]
 8003434:	49d5      	ldr	r1, [pc, #852]	; (800378c <canFilterConfig+0x400>)
 8003436:	2204      	movs	r2, #4
 8003438:	4393      	bics	r3, r2
 800343a:	001a      	movs	r2, r3
 800343c:	2385      	movs	r3, #133	; 0x85
 800343e:	009b      	lsls	r3, r3, #2
 8003440:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA3_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003442:	4ad2      	ldr	r2, [pc, #840]	; (800378c <canFilterConfig+0x400>)
 8003444:	2385      	movs	r3, #133	; 0x85
 8003446:	009b      	lsls	r3, r3, #2
 8003448:	58d3      	ldr	r3, [r2, r3]
 800344a:	49d0      	ldr	r1, [pc, #832]	; (800378c <canFilterConfig+0x400>)
 800344c:	2208      	movs	r2, #8
 800344e:	4393      	bics	r3, r2
 8003450:	001a      	movs	r2, r3
 8003452:	2385      	movs	r3, #133	; 0x85
 8003454:	009b      	lsls	r3, r3, #2
 8003456:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA4_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003458:	4acc      	ldr	r2, [pc, #816]	; (800378c <canFilterConfig+0x400>)
 800345a:	2385      	movs	r3, #133	; 0x85
 800345c:	009b      	lsls	r3, r3, #2
 800345e:	58d3      	ldr	r3, [r2, r3]
 8003460:	49ca      	ldr	r1, [pc, #808]	; (800378c <canFilterConfig+0x400>)
 8003462:	2210      	movs	r2, #16
 8003464:	4393      	bics	r3, r2
 8003466:	001a      	movs	r2, r3
 8003468:	2385      	movs	r3, #133	; 0x85
 800346a:	009b      	lsls	r3, r3, #2
 800346c:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R &= ~CAN_FFA1R_FFA5_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 800346e:	4ac7      	ldr	r2, [pc, #796]	; (800378c <canFilterConfig+0x400>)
 8003470:	2385      	movs	r3, #133	; 0x85
 8003472:	009b      	lsls	r3, r3, #2
 8003474:	58d3      	ldr	r3, [r2, r3]
 8003476:	49c5      	ldr	r1, [pc, #788]	; (800378c <canFilterConfig+0x400>)
 8003478:	2220      	movs	r2, #32
 800347a:	4393      	bics	r3, r2
 800347c:	001a      	movs	r2, r3
 800347e:	2385      	movs	r3, #133	; 0x85
 8003480:	009b      	lsls	r3, r3, #2
 8003482:	50ca      	str	r2, [r1, r3]

  CAN->FFA1R |= CAN_FFA1R_FFA6_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003484:	4ac1      	ldr	r2, [pc, #772]	; (800378c <canFilterConfig+0x400>)
 8003486:	2385      	movs	r3, #133	; 0x85
 8003488:	009b      	lsls	r3, r3, #2
 800348a:	58d3      	ldr	r3, [r2, r3]
 800348c:	49bf      	ldr	r1, [pc, #764]	; (800378c <canFilterConfig+0x400>)
 800348e:	2240      	movs	r2, #64	; 0x40
 8003490:	431a      	orrs	r2, r3
 8003492:	2385      	movs	r3, #133	; 0x85
 8003494:	009b      	lsls	r3, r3, #2
 8003496:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA7_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 8003498:	4abc      	ldr	r2, [pc, #752]	; (800378c <canFilterConfig+0x400>)
 800349a:	2385      	movs	r3, #133	; 0x85
 800349c:	009b      	lsls	r3, r3, #2
 800349e:	58d3      	ldr	r3, [r2, r3]
 80034a0:	49ba      	ldr	r1, [pc, #744]	; (800378c <canFilterConfig+0x400>)
 80034a2:	2280      	movs	r2, #128	; 0x80
 80034a4:	431a      	orrs	r2, r3
 80034a6:	2385      	movs	r3, #133	; 0x85
 80034a8:	009b      	lsls	r3, r3, #2
 80034aa:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA8_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80034ac:	4ab7      	ldr	r2, [pc, #732]	; (800378c <canFilterConfig+0x400>)
 80034ae:	2385      	movs	r3, #133	; 0x85
 80034b0:	009b      	lsls	r3, r3, #2
 80034b2:	58d3      	ldr	r3, [r2, r3]
 80034b4:	49b5      	ldr	r1, [pc, #724]	; (800378c <canFilterConfig+0x400>)
 80034b6:	2280      	movs	r2, #128	; 0x80
 80034b8:	0052      	lsls	r2, r2, #1
 80034ba:	431a      	orrs	r2, r3
 80034bc:	2385      	movs	r3, #133	; 0x85
 80034be:	009b      	lsls	r3, r3, #2
 80034c0:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA9_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80034c2:	4ab2      	ldr	r2, [pc, #712]	; (800378c <canFilterConfig+0x400>)
 80034c4:	2385      	movs	r3, #133	; 0x85
 80034c6:	009b      	lsls	r3, r3, #2
 80034c8:	58d3      	ldr	r3, [r2, r3]
 80034ca:	49b0      	ldr	r1, [pc, #704]	; (800378c <canFilterConfig+0x400>)
 80034cc:	2280      	movs	r2, #128	; 0x80
 80034ce:	0092      	lsls	r2, r2, #2
 80034d0:	431a      	orrs	r2, r3
 80034d2:	2385      	movs	r3, #133	; 0x85
 80034d4:	009b      	lsls	r3, r3, #2
 80034d6:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA10_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80034d8:	4aac      	ldr	r2, [pc, #688]	; (800378c <canFilterConfig+0x400>)
 80034da:	2385      	movs	r3, #133	; 0x85
 80034dc:	009b      	lsls	r3, r3, #2
 80034de:	58d3      	ldr	r3, [r2, r3]
 80034e0:	49aa      	ldr	r1, [pc, #680]	; (800378c <canFilterConfig+0x400>)
 80034e2:	2280      	movs	r2, #128	; 0x80
 80034e4:	00d2      	lsls	r2, r2, #3
 80034e6:	431a      	orrs	r2, r3
 80034e8:	2385      	movs	r3, #133	; 0x85
 80034ea:	009b      	lsls	r3, r3, #2
 80034ec:	50ca      	str	r2, [r1, r3]
  CAN->FFA1R |= CAN_FFA1R_FFA11_Msk; // 0: Filter assigned to FIFO 0, 1: Filter assigned to FIFO 1
 80034ee:	4aa7      	ldr	r2, [pc, #668]	; (800378c <canFilterConfig+0x400>)
 80034f0:	2385      	movs	r3, #133	; 0x85
 80034f2:	009b      	lsls	r3, r3, #2
 80034f4:	58d3      	ldr	r3, [r2, r3]
 80034f6:	49a5      	ldr	r1, [pc, #660]	; (800378c <canFilterConfig+0x400>)
 80034f8:	2280      	movs	r2, #128	; 0x80
 80034fa:	0112      	lsls	r2, r2, #4
 80034fc:	431a      	orrs	r2, r3
 80034fe:	2385      	movs	r3, #133	; 0x85
 8003500:	009b      	lsls	r3, r3, #2
 8003502:	50ca      	str	r2, [r1, r3]

  // Activate filter 0 to 5
  CAN->FA1R |= CAN_FA1R_FACT0 | CAN_FA1R_FACT1 | CAN_FA1R_FACT2 | CAN_FA1R_FACT3 | CAN_FA1R_FACT4 | CAN_FA1R_FACT5;
 8003504:	4aa1      	ldr	r2, [pc, #644]	; (800378c <canFilterConfig+0x400>)
 8003506:	2387      	movs	r3, #135	; 0x87
 8003508:	009b      	lsls	r3, r3, #2
 800350a:	58d3      	ldr	r3, [r2, r3]
 800350c:	499f      	ldr	r1, [pc, #636]	; (800378c <canFilterConfig+0x400>)
 800350e:	223f      	movs	r2, #63	; 0x3f
 8003510:	431a      	orrs	r2, r3
 8003512:	2387      	movs	r3, #135	; 0x87
 8003514:	009b      	lsls	r3, r3, #2
 8003516:	50ca      	str	r2, [r1, r3]

  // Activate filter 6 to 11
  CAN->FA1R |= CAN_FA1R_FACT6 | CAN_FA1R_FACT7 | CAN_FA1R_FACT8 | CAN_FA1R_FACT9 | CAN_FA1R_FACT10 | CAN_FA1R_FACT11;
 8003518:	4a9c      	ldr	r2, [pc, #624]	; (800378c <canFilterConfig+0x400>)
 800351a:	2387      	movs	r3, #135	; 0x87
 800351c:	009b      	lsls	r3, r3, #2
 800351e:	58d3      	ldr	r3, [r2, r3]
 8003520:	499a      	ldr	r1, [pc, #616]	; (800378c <canFilterConfig+0x400>)
 8003522:	22fc      	movs	r2, #252	; 0xfc
 8003524:	0112      	lsls	r2, r2, #4
 8003526:	431a      	orrs	r2, r3
 8003528:	2387      	movs	r3, #135	; 0x87
 800352a:	009b      	lsls	r3, r3, #2
 800352c:	50ca      	str	r2, [r1, r3]
  /********** FIFO 0 **********/
  /* Filter bank 0 register 1 and filter bank 0 register 2 are both identifier registers */
  /* The data frames will be accepted only if the ID is between 0x01 and 0x06 */

  // Filter bank 0 register 1
  CAN->sFilterRegister[0].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800352e:	4a97      	ldr	r2, [pc, #604]	; (800378c <canFilterConfig+0x400>)
 8003530:	2390      	movs	r3, #144	; 0x90
 8003532:	009b      	lsls	r3, r3, #2
 8003534:	58d3      	ldr	r3, [r2, r3]
 8003536:	4a95      	ldr	r2, [pc, #596]	; (800378c <canFilterConfig+0x400>)
 8003538:	2390      	movs	r3, #144	; 0x90
 800353a:	009b      	lsls	r3, r3, #2
 800353c:	2100      	movs	r1, #0
 800353e:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[0].FR1 |= (0x01 << CAN_F0R1_FB21_Pos); // Identifier is 0x01
 8003540:	4a92      	ldr	r2, [pc, #584]	; (800378c <canFilterConfig+0x400>)
 8003542:	2390      	movs	r3, #144	; 0x90
 8003544:	009b      	lsls	r3, r3, #2
 8003546:	58d3      	ldr	r3, [r2, r3]
 8003548:	4990      	ldr	r1, [pc, #576]	; (800378c <canFilterConfig+0x400>)
 800354a:	2280      	movs	r2, #128	; 0x80
 800354c:	0392      	lsls	r2, r2, #14
 800354e:	431a      	orrs	r2, r3
 8003550:	2390      	movs	r3, #144	; 0x90
 8003552:	009b      	lsls	r3, r3, #2
 8003554:	50ca      	str	r2, [r1, r3]

  // Filter bank 0 register 2
  CAN->sFilterRegister[0].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003556:	4a8d      	ldr	r2, [pc, #564]	; (800378c <canFilterConfig+0x400>)
 8003558:	2391      	movs	r3, #145	; 0x91
 800355a:	009b      	lsls	r3, r3, #2
 800355c:	58d3      	ldr	r3, [r2, r3]
 800355e:	4a8b      	ldr	r2, [pc, #556]	; (800378c <canFilterConfig+0x400>)
 8003560:	2391      	movs	r3, #145	; 0x91
 8003562:	009b      	lsls	r3, r3, #2
 8003564:	2100      	movs	r1, #0
 8003566:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[0].FR2 |= (0x01 << CAN_F0R2_FB21_Pos); // Identifier is 0x01
 8003568:	4a88      	ldr	r2, [pc, #544]	; (800378c <canFilterConfig+0x400>)
 800356a:	2391      	movs	r3, #145	; 0x91
 800356c:	009b      	lsls	r3, r3, #2
 800356e:	58d3      	ldr	r3, [r2, r3]
 8003570:	4986      	ldr	r1, [pc, #536]	; (800378c <canFilterConfig+0x400>)
 8003572:	2280      	movs	r2, #128	; 0x80
 8003574:	0392      	lsls	r2, r2, #14
 8003576:	431a      	orrs	r2, r3
 8003578:	2391      	movs	r3, #145	; 0x91
 800357a:	009b      	lsls	r3, r3, #2
 800357c:	50ca      	str	r2, [r1, r3]

  // Filter bank 1 register 1
  CAN->sFilterRegister[1].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800357e:	4a83      	ldr	r2, [pc, #524]	; (800378c <canFilterConfig+0x400>)
 8003580:	2392      	movs	r3, #146	; 0x92
 8003582:	009b      	lsls	r3, r3, #2
 8003584:	58d3      	ldr	r3, [r2, r3]
 8003586:	4a81      	ldr	r2, [pc, #516]	; (800378c <canFilterConfig+0x400>)
 8003588:	2392      	movs	r3, #146	; 0x92
 800358a:	009b      	lsls	r3, r3, #2
 800358c:	2100      	movs	r1, #0
 800358e:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[1].FR1 |= (0x02 << CAN_F0R1_FB21_Pos); // Identifier is 0x02
 8003590:	4a7e      	ldr	r2, [pc, #504]	; (800378c <canFilterConfig+0x400>)
 8003592:	2392      	movs	r3, #146	; 0x92
 8003594:	009b      	lsls	r3, r3, #2
 8003596:	58d3      	ldr	r3, [r2, r3]
 8003598:	497c      	ldr	r1, [pc, #496]	; (800378c <canFilterConfig+0x400>)
 800359a:	2280      	movs	r2, #128	; 0x80
 800359c:	03d2      	lsls	r2, r2, #15
 800359e:	431a      	orrs	r2, r3
 80035a0:	2392      	movs	r3, #146	; 0x92
 80035a2:	009b      	lsls	r3, r3, #2
 80035a4:	50ca      	str	r2, [r1, r3]

  // Filter bank 1 register 2
  CAN->sFilterRegister[1].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80035a6:	4a79      	ldr	r2, [pc, #484]	; (800378c <canFilterConfig+0x400>)
 80035a8:	2393      	movs	r3, #147	; 0x93
 80035aa:	009b      	lsls	r3, r3, #2
 80035ac:	58d3      	ldr	r3, [r2, r3]
 80035ae:	4a77      	ldr	r2, [pc, #476]	; (800378c <canFilterConfig+0x400>)
 80035b0:	2393      	movs	r3, #147	; 0x93
 80035b2:	009b      	lsls	r3, r3, #2
 80035b4:	2100      	movs	r1, #0
 80035b6:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[1].FR2 |= (0x02 << CAN_F0R2_FB21_Pos); // Identifier is 0x02
 80035b8:	4a74      	ldr	r2, [pc, #464]	; (800378c <canFilterConfig+0x400>)
 80035ba:	2393      	movs	r3, #147	; 0x93
 80035bc:	009b      	lsls	r3, r3, #2
 80035be:	58d3      	ldr	r3, [r2, r3]
 80035c0:	4972      	ldr	r1, [pc, #456]	; (800378c <canFilterConfig+0x400>)
 80035c2:	2280      	movs	r2, #128	; 0x80
 80035c4:	03d2      	lsls	r2, r2, #15
 80035c6:	431a      	orrs	r2, r3
 80035c8:	2393      	movs	r3, #147	; 0x93
 80035ca:	009b      	lsls	r3, r3, #2
 80035cc:	50ca      	str	r2, [r1, r3]

  // Filter bank 2 register 1
  CAN->sFilterRegister[2].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80035ce:	4a6f      	ldr	r2, [pc, #444]	; (800378c <canFilterConfig+0x400>)
 80035d0:	2394      	movs	r3, #148	; 0x94
 80035d2:	009b      	lsls	r3, r3, #2
 80035d4:	58d3      	ldr	r3, [r2, r3]
 80035d6:	4a6d      	ldr	r2, [pc, #436]	; (800378c <canFilterConfig+0x400>)
 80035d8:	2394      	movs	r3, #148	; 0x94
 80035da:	009b      	lsls	r3, r3, #2
 80035dc:	2100      	movs	r1, #0
 80035de:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[2].FR1 |= (0x03 << CAN_F0R1_FB21_Pos); // Identifier is 0x03
 80035e0:	4a6a      	ldr	r2, [pc, #424]	; (800378c <canFilterConfig+0x400>)
 80035e2:	2394      	movs	r3, #148	; 0x94
 80035e4:	009b      	lsls	r3, r3, #2
 80035e6:	58d3      	ldr	r3, [r2, r3]
 80035e8:	4968      	ldr	r1, [pc, #416]	; (800378c <canFilterConfig+0x400>)
 80035ea:	22c0      	movs	r2, #192	; 0xc0
 80035ec:	03d2      	lsls	r2, r2, #15
 80035ee:	431a      	orrs	r2, r3
 80035f0:	2394      	movs	r3, #148	; 0x94
 80035f2:	009b      	lsls	r3, r3, #2
 80035f4:	50ca      	str	r2, [r1, r3]

  // Filter bank 2 register 2
  CAN->sFilterRegister[2].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80035f6:	4a65      	ldr	r2, [pc, #404]	; (800378c <canFilterConfig+0x400>)
 80035f8:	2395      	movs	r3, #149	; 0x95
 80035fa:	009b      	lsls	r3, r3, #2
 80035fc:	58d3      	ldr	r3, [r2, r3]
 80035fe:	4a63      	ldr	r2, [pc, #396]	; (800378c <canFilterConfig+0x400>)
 8003600:	2395      	movs	r3, #149	; 0x95
 8003602:	009b      	lsls	r3, r3, #2
 8003604:	2100      	movs	r1, #0
 8003606:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[2].FR2 |= (0x03 << CAN_F0R2_FB21_Pos); // Identifier is 0x03
 8003608:	4a60      	ldr	r2, [pc, #384]	; (800378c <canFilterConfig+0x400>)
 800360a:	2395      	movs	r3, #149	; 0x95
 800360c:	009b      	lsls	r3, r3, #2
 800360e:	58d3      	ldr	r3, [r2, r3]
 8003610:	495e      	ldr	r1, [pc, #376]	; (800378c <canFilterConfig+0x400>)
 8003612:	22c0      	movs	r2, #192	; 0xc0
 8003614:	03d2      	lsls	r2, r2, #15
 8003616:	431a      	orrs	r2, r3
 8003618:	2395      	movs	r3, #149	; 0x95
 800361a:	009b      	lsls	r3, r3, #2
 800361c:	50ca      	str	r2, [r1, r3]

  // Filter bank 3 register 1
  CAN->sFilterRegister[3].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800361e:	4a5b      	ldr	r2, [pc, #364]	; (800378c <canFilterConfig+0x400>)
 8003620:	2396      	movs	r3, #150	; 0x96
 8003622:	009b      	lsls	r3, r3, #2
 8003624:	58d3      	ldr	r3, [r2, r3]
 8003626:	4a59      	ldr	r2, [pc, #356]	; (800378c <canFilterConfig+0x400>)
 8003628:	2396      	movs	r3, #150	; 0x96
 800362a:	009b      	lsls	r3, r3, #2
 800362c:	2100      	movs	r1, #0
 800362e:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[3].FR1 |= (0x04 << CAN_F0R1_FB21_Pos); // Identifier is 0x04
 8003630:	4a56      	ldr	r2, [pc, #344]	; (800378c <canFilterConfig+0x400>)
 8003632:	2396      	movs	r3, #150	; 0x96
 8003634:	009b      	lsls	r3, r3, #2
 8003636:	58d3      	ldr	r3, [r2, r3]
 8003638:	4954      	ldr	r1, [pc, #336]	; (800378c <canFilterConfig+0x400>)
 800363a:	2280      	movs	r2, #128	; 0x80
 800363c:	0412      	lsls	r2, r2, #16
 800363e:	431a      	orrs	r2, r3
 8003640:	2396      	movs	r3, #150	; 0x96
 8003642:	009b      	lsls	r3, r3, #2
 8003644:	50ca      	str	r2, [r1, r3]

  // Filter bank 3 register 2
  CAN->sFilterRegister[3].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003646:	4a51      	ldr	r2, [pc, #324]	; (800378c <canFilterConfig+0x400>)
 8003648:	2397      	movs	r3, #151	; 0x97
 800364a:	009b      	lsls	r3, r3, #2
 800364c:	58d3      	ldr	r3, [r2, r3]
 800364e:	4a4f      	ldr	r2, [pc, #316]	; (800378c <canFilterConfig+0x400>)
 8003650:	2397      	movs	r3, #151	; 0x97
 8003652:	009b      	lsls	r3, r3, #2
 8003654:	2100      	movs	r1, #0
 8003656:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[3].FR2 |= (0x04 << CAN_F0R2_FB21_Pos); // Identifier is 0x04
 8003658:	4a4c      	ldr	r2, [pc, #304]	; (800378c <canFilterConfig+0x400>)
 800365a:	2397      	movs	r3, #151	; 0x97
 800365c:	009b      	lsls	r3, r3, #2
 800365e:	58d3      	ldr	r3, [r2, r3]
 8003660:	494a      	ldr	r1, [pc, #296]	; (800378c <canFilterConfig+0x400>)
 8003662:	2280      	movs	r2, #128	; 0x80
 8003664:	0412      	lsls	r2, r2, #16
 8003666:	431a      	orrs	r2, r3
 8003668:	2397      	movs	r3, #151	; 0x97
 800366a:	009b      	lsls	r3, r3, #2
 800366c:	50ca      	str	r2, [r1, r3]

  // Filter bank 4 register 1
  CAN->sFilterRegister[4].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800366e:	4a47      	ldr	r2, [pc, #284]	; (800378c <canFilterConfig+0x400>)
 8003670:	2398      	movs	r3, #152	; 0x98
 8003672:	009b      	lsls	r3, r3, #2
 8003674:	58d3      	ldr	r3, [r2, r3]
 8003676:	4a45      	ldr	r2, [pc, #276]	; (800378c <canFilterConfig+0x400>)
 8003678:	2398      	movs	r3, #152	; 0x98
 800367a:	009b      	lsls	r3, r3, #2
 800367c:	2100      	movs	r1, #0
 800367e:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[4].FR1 |= (0x05 << CAN_F0R1_FB21_Pos); // Identifier is 0x05
 8003680:	4a42      	ldr	r2, [pc, #264]	; (800378c <canFilterConfig+0x400>)
 8003682:	2398      	movs	r3, #152	; 0x98
 8003684:	009b      	lsls	r3, r3, #2
 8003686:	58d3      	ldr	r3, [r2, r3]
 8003688:	4940      	ldr	r1, [pc, #256]	; (800378c <canFilterConfig+0x400>)
 800368a:	22a0      	movs	r2, #160	; 0xa0
 800368c:	0412      	lsls	r2, r2, #16
 800368e:	431a      	orrs	r2, r3
 8003690:	2398      	movs	r3, #152	; 0x98
 8003692:	009b      	lsls	r3, r3, #2
 8003694:	50ca      	str	r2, [r1, r3]

  // Filter bank 4 register 2
  CAN->sFilterRegister[4].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003696:	4a3d      	ldr	r2, [pc, #244]	; (800378c <canFilterConfig+0x400>)
 8003698:	2399      	movs	r3, #153	; 0x99
 800369a:	009b      	lsls	r3, r3, #2
 800369c:	58d3      	ldr	r3, [r2, r3]
 800369e:	4a3b      	ldr	r2, [pc, #236]	; (800378c <canFilterConfig+0x400>)
 80036a0:	2399      	movs	r3, #153	; 0x99
 80036a2:	009b      	lsls	r3, r3, #2
 80036a4:	2100      	movs	r1, #0
 80036a6:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[4].FR2 |= (0x05 << CAN_F0R2_FB21_Pos); // Identifier is 0x05
 80036a8:	4a38      	ldr	r2, [pc, #224]	; (800378c <canFilterConfig+0x400>)
 80036aa:	2399      	movs	r3, #153	; 0x99
 80036ac:	009b      	lsls	r3, r3, #2
 80036ae:	58d3      	ldr	r3, [r2, r3]
 80036b0:	4936      	ldr	r1, [pc, #216]	; (800378c <canFilterConfig+0x400>)
 80036b2:	22a0      	movs	r2, #160	; 0xa0
 80036b4:	0412      	lsls	r2, r2, #16
 80036b6:	431a      	orrs	r2, r3
 80036b8:	2399      	movs	r3, #153	; 0x99
 80036ba:	009b      	lsls	r3, r3, #2
 80036bc:	50ca      	str	r2, [r1, r3]

  // Filter bank 5 register 1
  CAN->sFilterRegister[5].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80036be:	4a33      	ldr	r2, [pc, #204]	; (800378c <canFilterConfig+0x400>)
 80036c0:	239a      	movs	r3, #154	; 0x9a
 80036c2:	009b      	lsls	r3, r3, #2
 80036c4:	58d3      	ldr	r3, [r2, r3]
 80036c6:	4a31      	ldr	r2, [pc, #196]	; (800378c <canFilterConfig+0x400>)
 80036c8:	239a      	movs	r3, #154	; 0x9a
 80036ca:	009b      	lsls	r3, r3, #2
 80036cc:	2100      	movs	r1, #0
 80036ce:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[5].FR1 |= (0x06 << CAN_F0R1_FB21_Pos); // Identifier is 0x06
 80036d0:	4a2e      	ldr	r2, [pc, #184]	; (800378c <canFilterConfig+0x400>)
 80036d2:	239a      	movs	r3, #154	; 0x9a
 80036d4:	009b      	lsls	r3, r3, #2
 80036d6:	58d3      	ldr	r3, [r2, r3]
 80036d8:	492c      	ldr	r1, [pc, #176]	; (800378c <canFilterConfig+0x400>)
 80036da:	22c0      	movs	r2, #192	; 0xc0
 80036dc:	0412      	lsls	r2, r2, #16
 80036de:	431a      	orrs	r2, r3
 80036e0:	239a      	movs	r3, #154	; 0x9a
 80036e2:	009b      	lsls	r3, r3, #2
 80036e4:	50ca      	str	r2, [r1, r3]

  // Filter bank 5 register 2
  CAN->sFilterRegister[5].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80036e6:	4a29      	ldr	r2, [pc, #164]	; (800378c <canFilterConfig+0x400>)
 80036e8:	239b      	movs	r3, #155	; 0x9b
 80036ea:	009b      	lsls	r3, r3, #2
 80036ec:	58d3      	ldr	r3, [r2, r3]
 80036ee:	4a27      	ldr	r2, [pc, #156]	; (800378c <canFilterConfig+0x400>)
 80036f0:	239b      	movs	r3, #155	; 0x9b
 80036f2:	009b      	lsls	r3, r3, #2
 80036f4:	2100      	movs	r1, #0
 80036f6:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[5].FR2 |= (0x06 << CAN_F0R2_FB21_Pos); // Identifier is 0x06
 80036f8:	4a24      	ldr	r2, [pc, #144]	; (800378c <canFilterConfig+0x400>)
 80036fa:	239b      	movs	r3, #155	; 0x9b
 80036fc:	009b      	lsls	r3, r3, #2
 80036fe:	58d3      	ldr	r3, [r2, r3]
 8003700:	4922      	ldr	r1, [pc, #136]	; (800378c <canFilterConfig+0x400>)
 8003702:	22c0      	movs	r2, #192	; 0xc0
 8003704:	0412      	lsls	r2, r2, #16
 8003706:	431a      	orrs	r2, r3
 8003708:	239b      	movs	r3, #155	; 0x9b
 800370a:	009b      	lsls	r3, r3, #2
 800370c:	50ca      	str	r2, [r1, r3]

  /* Filter bank 0 register 1 and filter bank 0 register 2 are both identifier registers */
  /* The data frames will be accepted only if the ID is between 0x01 and 0x06 */

  // Filter bank 6 register 1
  CAN->sFilterRegister[6].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800370e:	4a1f      	ldr	r2, [pc, #124]	; (800378c <canFilterConfig+0x400>)
 8003710:	239c      	movs	r3, #156	; 0x9c
 8003712:	009b      	lsls	r3, r3, #2
 8003714:	58d3      	ldr	r3, [r2, r3]
 8003716:	4a1d      	ldr	r2, [pc, #116]	; (800378c <canFilterConfig+0x400>)
 8003718:	239c      	movs	r3, #156	; 0x9c
 800371a:	009b      	lsls	r3, r3, #2
 800371c:	2100      	movs	r1, #0
 800371e:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[6].FR1 |= (0x01 << CAN_F0R1_FB21_Pos); // Identifier is 0x01
 8003720:	4a1a      	ldr	r2, [pc, #104]	; (800378c <canFilterConfig+0x400>)
 8003722:	239c      	movs	r3, #156	; 0x9c
 8003724:	009b      	lsls	r3, r3, #2
 8003726:	58d3      	ldr	r3, [r2, r3]
 8003728:	4918      	ldr	r1, [pc, #96]	; (800378c <canFilterConfig+0x400>)
 800372a:	2280      	movs	r2, #128	; 0x80
 800372c:	0392      	lsls	r2, r2, #14
 800372e:	431a      	orrs	r2, r3
 8003730:	239c      	movs	r3, #156	; 0x9c
 8003732:	009b      	lsls	r3, r3, #2
 8003734:	50ca      	str	r2, [r1, r3]

  // Filter bank 6 register 2
  CAN->sFilterRegister[6].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003736:	4a15      	ldr	r2, [pc, #84]	; (800378c <canFilterConfig+0x400>)
 8003738:	239d      	movs	r3, #157	; 0x9d
 800373a:	009b      	lsls	r3, r3, #2
 800373c:	58d3      	ldr	r3, [r2, r3]
 800373e:	4a13      	ldr	r2, [pc, #76]	; (800378c <canFilterConfig+0x400>)
 8003740:	239d      	movs	r3, #157	; 0x9d
 8003742:	009b      	lsls	r3, r3, #2
 8003744:	2100      	movs	r1, #0
 8003746:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[6].FR2 |= (0x01 << CAN_F0R2_FB21_Pos); // Identifier is 0x01
 8003748:	4a10      	ldr	r2, [pc, #64]	; (800378c <canFilterConfig+0x400>)
 800374a:	239d      	movs	r3, #157	; 0x9d
 800374c:	009b      	lsls	r3, r3, #2
 800374e:	58d3      	ldr	r3, [r2, r3]
 8003750:	490e      	ldr	r1, [pc, #56]	; (800378c <canFilterConfig+0x400>)
 8003752:	2280      	movs	r2, #128	; 0x80
 8003754:	0392      	lsls	r2, r2, #14
 8003756:	431a      	orrs	r2, r3
 8003758:	239d      	movs	r3, #157	; 0x9d
 800375a:	009b      	lsls	r3, r3, #2
 800375c:	50ca      	str	r2, [r1, r3]

  // Filter bank 7 register 1
  CAN->sFilterRegister[7].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 800375e:	4a0b      	ldr	r2, [pc, #44]	; (800378c <canFilterConfig+0x400>)
 8003760:	239e      	movs	r3, #158	; 0x9e
 8003762:	009b      	lsls	r3, r3, #2
 8003764:	58d3      	ldr	r3, [r2, r3]
 8003766:	4a09      	ldr	r2, [pc, #36]	; (800378c <canFilterConfig+0x400>)
 8003768:	239e      	movs	r3, #158	; 0x9e
 800376a:	009b      	lsls	r3, r3, #2
 800376c:	2100      	movs	r1, #0
 800376e:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[7].FR1 |= (0x02 << CAN_F0R1_FB21_Pos); // Identifier is 0x02
 8003770:	4a06      	ldr	r2, [pc, #24]	; (800378c <canFilterConfig+0x400>)
 8003772:	239e      	movs	r3, #158	; 0x9e
 8003774:	009b      	lsls	r3, r3, #2
 8003776:	58d3      	ldr	r3, [r2, r3]
 8003778:	4904      	ldr	r1, [pc, #16]	; (800378c <canFilterConfig+0x400>)
 800377a:	2280      	movs	r2, #128	; 0x80
 800377c:	03d2      	lsls	r2, r2, #15
 800377e:	431a      	orrs	r2, r3
 8003780:	239e      	movs	r3, #158	; 0x9e
 8003782:	009b      	lsls	r3, r3, #2
 8003784:	50ca      	str	r2, [r1, r3]
 8003786:	e003      	b.n	8003790 <canFilterConfig+0x404>
 8003788:	0800ada8 	.word	0x0800ada8
 800378c:	40006400 	.word	0x40006400

  // Filter bank 7 register 2
  CAN->sFilterRegister[7].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003790:	4a62      	ldr	r2, [pc, #392]	; (800391c <canFilterConfig+0x590>)
 8003792:	239f      	movs	r3, #159	; 0x9f
 8003794:	009b      	lsls	r3, r3, #2
 8003796:	58d3      	ldr	r3, [r2, r3]
 8003798:	4a60      	ldr	r2, [pc, #384]	; (800391c <canFilterConfig+0x590>)
 800379a:	239f      	movs	r3, #159	; 0x9f
 800379c:	009b      	lsls	r3, r3, #2
 800379e:	2100      	movs	r1, #0
 80037a0:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[7].FR2 |= (0x02 << CAN_F0R2_FB21_Pos); // Identifier is 0x02
 80037a2:	4a5e      	ldr	r2, [pc, #376]	; (800391c <canFilterConfig+0x590>)
 80037a4:	239f      	movs	r3, #159	; 0x9f
 80037a6:	009b      	lsls	r3, r3, #2
 80037a8:	58d3      	ldr	r3, [r2, r3]
 80037aa:	495c      	ldr	r1, [pc, #368]	; (800391c <canFilterConfig+0x590>)
 80037ac:	2280      	movs	r2, #128	; 0x80
 80037ae:	03d2      	lsls	r2, r2, #15
 80037b0:	431a      	orrs	r2, r3
 80037b2:	239f      	movs	r3, #159	; 0x9f
 80037b4:	009b      	lsls	r3, r3, #2
 80037b6:	50ca      	str	r2, [r1, r3]

  // Filter bank 8 register 1
  CAN->sFilterRegister[8].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80037b8:	4a58      	ldr	r2, [pc, #352]	; (800391c <canFilterConfig+0x590>)
 80037ba:	23a0      	movs	r3, #160	; 0xa0
 80037bc:	009b      	lsls	r3, r3, #2
 80037be:	58d3      	ldr	r3, [r2, r3]
 80037c0:	4a56      	ldr	r2, [pc, #344]	; (800391c <canFilterConfig+0x590>)
 80037c2:	23a0      	movs	r3, #160	; 0xa0
 80037c4:	009b      	lsls	r3, r3, #2
 80037c6:	2100      	movs	r1, #0
 80037c8:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[8].FR1 |= (0x03 << CAN_F0R1_FB21_Pos); // Identifier is 0x03
 80037ca:	4a54      	ldr	r2, [pc, #336]	; (800391c <canFilterConfig+0x590>)
 80037cc:	23a0      	movs	r3, #160	; 0xa0
 80037ce:	009b      	lsls	r3, r3, #2
 80037d0:	58d3      	ldr	r3, [r2, r3]
 80037d2:	4952      	ldr	r1, [pc, #328]	; (800391c <canFilterConfig+0x590>)
 80037d4:	22c0      	movs	r2, #192	; 0xc0
 80037d6:	03d2      	lsls	r2, r2, #15
 80037d8:	431a      	orrs	r2, r3
 80037da:	23a0      	movs	r3, #160	; 0xa0
 80037dc:	009b      	lsls	r3, r3, #2
 80037de:	50ca      	str	r2, [r1, r3]

  // Filter bank 8 register 2
  CAN->sFilterRegister[8].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80037e0:	4a4e      	ldr	r2, [pc, #312]	; (800391c <canFilterConfig+0x590>)
 80037e2:	23a1      	movs	r3, #161	; 0xa1
 80037e4:	009b      	lsls	r3, r3, #2
 80037e6:	58d3      	ldr	r3, [r2, r3]
 80037e8:	4a4c      	ldr	r2, [pc, #304]	; (800391c <canFilterConfig+0x590>)
 80037ea:	23a1      	movs	r3, #161	; 0xa1
 80037ec:	009b      	lsls	r3, r3, #2
 80037ee:	2100      	movs	r1, #0
 80037f0:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[8].FR2 |= (0x03 << CAN_F0R2_FB21_Pos); // Identifier is 0x03
 80037f2:	4a4a      	ldr	r2, [pc, #296]	; (800391c <canFilterConfig+0x590>)
 80037f4:	23a1      	movs	r3, #161	; 0xa1
 80037f6:	009b      	lsls	r3, r3, #2
 80037f8:	58d3      	ldr	r3, [r2, r3]
 80037fa:	4948      	ldr	r1, [pc, #288]	; (800391c <canFilterConfig+0x590>)
 80037fc:	22c0      	movs	r2, #192	; 0xc0
 80037fe:	03d2      	lsls	r2, r2, #15
 8003800:	431a      	orrs	r2, r3
 8003802:	23a1      	movs	r3, #161	; 0xa1
 8003804:	009b      	lsls	r3, r3, #2
 8003806:	50ca      	str	r2, [r1, r3]

  // Filter bank 9 register 1
  CAN->sFilterRegister[9].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 8003808:	4a44      	ldr	r2, [pc, #272]	; (800391c <canFilterConfig+0x590>)
 800380a:	23a2      	movs	r3, #162	; 0xa2
 800380c:	009b      	lsls	r3, r3, #2
 800380e:	58d3      	ldr	r3, [r2, r3]
 8003810:	4a42      	ldr	r2, [pc, #264]	; (800391c <canFilterConfig+0x590>)
 8003812:	23a2      	movs	r3, #162	; 0xa2
 8003814:	009b      	lsls	r3, r3, #2
 8003816:	2100      	movs	r1, #0
 8003818:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[9].FR1 |= (0x04 << CAN_F0R1_FB21_Pos); // Identifier is 0x04
 800381a:	4a40      	ldr	r2, [pc, #256]	; (800391c <canFilterConfig+0x590>)
 800381c:	23a2      	movs	r3, #162	; 0xa2
 800381e:	009b      	lsls	r3, r3, #2
 8003820:	58d3      	ldr	r3, [r2, r3]
 8003822:	493e      	ldr	r1, [pc, #248]	; (800391c <canFilterConfig+0x590>)
 8003824:	2280      	movs	r2, #128	; 0x80
 8003826:	0412      	lsls	r2, r2, #16
 8003828:	431a      	orrs	r2, r3
 800382a:	23a2      	movs	r3, #162	; 0xa2
 800382c:	009b      	lsls	r3, r3, #2
 800382e:	50ca      	str	r2, [r1, r3]

  // Filter bank 9 register 2
  CAN->sFilterRegister[9].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003830:	4a3a      	ldr	r2, [pc, #232]	; (800391c <canFilterConfig+0x590>)
 8003832:	23a3      	movs	r3, #163	; 0xa3
 8003834:	009b      	lsls	r3, r3, #2
 8003836:	58d3      	ldr	r3, [r2, r3]
 8003838:	4a38      	ldr	r2, [pc, #224]	; (800391c <canFilterConfig+0x590>)
 800383a:	23a3      	movs	r3, #163	; 0xa3
 800383c:	009b      	lsls	r3, r3, #2
 800383e:	2100      	movs	r1, #0
 8003840:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[9].FR2 |= (0x04 << CAN_F0R2_FB21_Pos); // Identifier is 0x04
 8003842:	4a36      	ldr	r2, [pc, #216]	; (800391c <canFilterConfig+0x590>)
 8003844:	23a3      	movs	r3, #163	; 0xa3
 8003846:	009b      	lsls	r3, r3, #2
 8003848:	58d3      	ldr	r3, [r2, r3]
 800384a:	4934      	ldr	r1, [pc, #208]	; (800391c <canFilterConfig+0x590>)
 800384c:	2280      	movs	r2, #128	; 0x80
 800384e:	0412      	lsls	r2, r2, #16
 8003850:	431a      	orrs	r2, r3
 8003852:	23a3      	movs	r3, #163	; 0xa3
 8003854:	009b      	lsls	r3, r3, #2
 8003856:	50ca      	str	r2, [r1, r3]

  // Filter bank 10 register 1
  CAN->sFilterRegister[10].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 8003858:	4a30      	ldr	r2, [pc, #192]	; (800391c <canFilterConfig+0x590>)
 800385a:	23a4      	movs	r3, #164	; 0xa4
 800385c:	009b      	lsls	r3, r3, #2
 800385e:	58d3      	ldr	r3, [r2, r3]
 8003860:	4a2e      	ldr	r2, [pc, #184]	; (800391c <canFilterConfig+0x590>)
 8003862:	23a4      	movs	r3, #164	; 0xa4
 8003864:	009b      	lsls	r3, r3, #2
 8003866:	2100      	movs	r1, #0
 8003868:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[10].FR1 |= (0x05 << CAN_F0R1_FB21_Pos); // Identifier is 0x05
 800386a:	4a2c      	ldr	r2, [pc, #176]	; (800391c <canFilterConfig+0x590>)
 800386c:	23a4      	movs	r3, #164	; 0xa4
 800386e:	009b      	lsls	r3, r3, #2
 8003870:	58d3      	ldr	r3, [r2, r3]
 8003872:	492a      	ldr	r1, [pc, #168]	; (800391c <canFilterConfig+0x590>)
 8003874:	22a0      	movs	r2, #160	; 0xa0
 8003876:	0412      	lsls	r2, r2, #16
 8003878:	431a      	orrs	r2, r3
 800387a:	23a4      	movs	r3, #164	; 0xa4
 800387c:	009b      	lsls	r3, r3, #2
 800387e:	50ca      	str	r2, [r1, r3]

  // Filter bank 10 register 2
  CAN->sFilterRegister[10].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 8003880:	4a26      	ldr	r2, [pc, #152]	; (800391c <canFilterConfig+0x590>)
 8003882:	23a5      	movs	r3, #165	; 0xa5
 8003884:	009b      	lsls	r3, r3, #2
 8003886:	58d3      	ldr	r3, [r2, r3]
 8003888:	4a24      	ldr	r2, [pc, #144]	; (800391c <canFilterConfig+0x590>)
 800388a:	23a5      	movs	r3, #165	; 0xa5
 800388c:	009b      	lsls	r3, r3, #2
 800388e:	2100      	movs	r1, #0
 8003890:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[10].FR2 |= (0x05 << CAN_F0R2_FB21_Pos); // Identifier is 0x05
 8003892:	4a22      	ldr	r2, [pc, #136]	; (800391c <canFilterConfig+0x590>)
 8003894:	23a5      	movs	r3, #165	; 0xa5
 8003896:	009b      	lsls	r3, r3, #2
 8003898:	58d3      	ldr	r3, [r2, r3]
 800389a:	4920      	ldr	r1, [pc, #128]	; (800391c <canFilterConfig+0x590>)
 800389c:	22a0      	movs	r2, #160	; 0xa0
 800389e:	0412      	lsls	r2, r2, #16
 80038a0:	431a      	orrs	r2, r3
 80038a2:	23a5      	movs	r3, #165	; 0xa5
 80038a4:	009b      	lsls	r3, r3, #2
 80038a6:	50ca      	str	r2, [r1, r3]

  // Filter bank 11 register 1
  CAN->sFilterRegister[11].FR1 &= ~(0xFFFFFFFF << CAN_F0R1_FB0_Pos); // Clear
 80038a8:	4a1c      	ldr	r2, [pc, #112]	; (800391c <canFilterConfig+0x590>)
 80038aa:	23a6      	movs	r3, #166	; 0xa6
 80038ac:	009b      	lsls	r3, r3, #2
 80038ae:	58d3      	ldr	r3, [r2, r3]
 80038b0:	4a1a      	ldr	r2, [pc, #104]	; (800391c <canFilterConfig+0x590>)
 80038b2:	23a6      	movs	r3, #166	; 0xa6
 80038b4:	009b      	lsls	r3, r3, #2
 80038b6:	2100      	movs	r1, #0
 80038b8:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[11].FR1 |= (0x06 << CAN_F0R1_FB21_Pos); // Identifier is 0x06
 80038ba:	4a18      	ldr	r2, [pc, #96]	; (800391c <canFilterConfig+0x590>)
 80038bc:	23a6      	movs	r3, #166	; 0xa6
 80038be:	009b      	lsls	r3, r3, #2
 80038c0:	58d3      	ldr	r3, [r2, r3]
 80038c2:	4916      	ldr	r1, [pc, #88]	; (800391c <canFilterConfig+0x590>)
 80038c4:	22c0      	movs	r2, #192	; 0xc0
 80038c6:	0412      	lsls	r2, r2, #16
 80038c8:	431a      	orrs	r2, r3
 80038ca:	23a6      	movs	r3, #166	; 0xa6
 80038cc:	009b      	lsls	r3, r3, #2
 80038ce:	50ca      	str	r2, [r1, r3]

  // Filter bank 5 register 2
  CAN->sFilterRegister[11].FR2 &= ~(0xFFFFFFFF << CAN_F0R2_FB0_Pos); // Clear
 80038d0:	4a12      	ldr	r2, [pc, #72]	; (800391c <canFilterConfig+0x590>)
 80038d2:	23a7      	movs	r3, #167	; 0xa7
 80038d4:	009b      	lsls	r3, r3, #2
 80038d6:	58d3      	ldr	r3, [r2, r3]
 80038d8:	4a10      	ldr	r2, [pc, #64]	; (800391c <canFilterConfig+0x590>)
 80038da:	23a7      	movs	r3, #167	; 0xa7
 80038dc:	009b      	lsls	r3, r3, #2
 80038de:	2100      	movs	r1, #0
 80038e0:	50d1      	str	r1, [r2, r3]
  CAN->sFilterRegister[11].FR2 |= (0x06 << CAN_F0R2_FB21_Pos); // Identifier is 0x06
 80038e2:	4a0e      	ldr	r2, [pc, #56]	; (800391c <canFilterConfig+0x590>)
 80038e4:	23a7      	movs	r3, #167	; 0xa7
 80038e6:	009b      	lsls	r3, r3, #2
 80038e8:	58d3      	ldr	r3, [r2, r3]
 80038ea:	490c      	ldr	r1, [pc, #48]	; (800391c <canFilterConfig+0x590>)
 80038ec:	22c0      	movs	r2, #192	; 0xc0
 80038ee:	0412      	lsls	r2, r2, #16
 80038f0:	431a      	orrs	r2, r3
 80038f2:	23a7      	movs	r3, #167	; 0xa7
 80038f4:	009b      	lsls	r3, r3, #2
 80038f6:	50ca      	str	r2, [r1, r3]

  // Leave filter initialization mode
  CAN->FMR &=~ CAN_FMR_FINIT;
 80038f8:	4a08      	ldr	r2, [pc, #32]	; (800391c <canFilterConfig+0x590>)
 80038fa:	2380      	movs	r3, #128	; 0x80
 80038fc:	009b      	lsls	r3, r3, #2
 80038fe:	58d3      	ldr	r3, [r2, r3]
 8003900:	4906      	ldr	r1, [pc, #24]	; (800391c <canFilterConfig+0x590>)
 8003902:	2201      	movs	r2, #1
 8003904:	4393      	bics	r3, r2
 8003906:	001a      	movs	r2, r3
 8003908:	2380      	movs	r3, #128	; 0x80
 800390a:	009b      	lsls	r3, r3, #2
 800390c:	50ca      	str	r2, [r1, r3]

  printf("CAN FILTER CONFIGURATION OK\r\n");
 800390e:	4b04      	ldr	r3, [pc, #16]	; (8003920 <canFilterConfig+0x594>)
 8003910:	0018      	movs	r0, r3
 8003912:	f003 f8b7 	bl	8006a84 <puts>

}
 8003916:	46c0      	nop			; (mov r8, r8)
 8003918:	46bd      	mov	sp, r7
 800391a:	bd80      	pop	{r7, pc}
 800391c:	40006400 	.word	0x40006400
 8003920:	0800add8 	.word	0x0800add8

08003924 <canInit>:

/******************* Initialize the CAN peripheral ********************/

void canInit(){
 8003924:	b580      	push	{r7, lr}
 8003926:	af00      	add	r7, sp, #0

  printf("********** CAN INITIALIZATION **********\r\n");
 8003928:	4ba1      	ldr	r3, [pc, #644]	; (8003bb0 <canInit+0x28c>)
 800392a:	0018      	movs	r0, r3
 800392c:	f003 f8aa 	bl	8006a84 <puts>

  // Enable the clock for the GPIOA at 8 Mhz
  RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8003930:	4ba0      	ldr	r3, [pc, #640]	; (8003bb4 <canInit+0x290>)
 8003932:	695a      	ldr	r2, [r3, #20]
 8003934:	4b9f      	ldr	r3, [pc, #636]	; (8003bb4 <canInit+0x290>)
 8003936:	2180      	movs	r1, #128	; 0x80
 8003938:	0289      	lsls	r1, r1, #10
 800393a:	430a      	orrs	r2, r1
 800393c:	615a      	str	r2, [r3, #20]

  // Enable the clock for the CAN at 8 Mhz
  RCC->APB1ENR |= RCC_APB1ENR_CANEN;
 800393e:	4b9d      	ldr	r3, [pc, #628]	; (8003bb4 <canInit+0x290>)
 8003940:	69da      	ldr	r2, [r3, #28]
 8003942:	4b9c      	ldr	r3, [pc, #624]	; (8003bb4 <canInit+0x290>)
 8003944:	2180      	movs	r1, #128	; 0x80
 8003946:	0489      	lsls	r1, r1, #18
 8003948:	430a      	orrs	r2, r1
 800394a:	61da      	str	r2, [r3, #28]

  /* PA12 is the TX pin and PA11 is the RX pin */

  // Activate PA12 mode to alternate function
  GPIOA->MODER &= ~GPIO_MODER_MODER12_Msk; // Clear
 800394c:	2390      	movs	r3, #144	; 0x90
 800394e:	05db      	lsls	r3, r3, #23
 8003950:	681a      	ldr	r2, [r3, #0]
 8003952:	2390      	movs	r3, #144	; 0x90
 8003954:	05db      	lsls	r3, r3, #23
 8003956:	4998      	ldr	r1, [pc, #608]	; (8003bb8 <canInit+0x294>)
 8003958:	400a      	ands	r2, r1
 800395a:	601a      	str	r2, [r3, #0]
  GPIOA->MODER |= (0x02 <<GPIO_MODER_MODER12_Pos); // 00: Input mode (reset state), 01: General purpose output mode, 10 : Alternate function mode, 11: Analog mode
 800395c:	2390      	movs	r3, #144	; 0x90
 800395e:	05db      	lsls	r3, r3, #23
 8003960:	681a      	ldr	r2, [r3, #0]
 8003962:	2390      	movs	r3, #144	; 0x90
 8003964:	05db      	lsls	r3, r3, #23
 8003966:	2180      	movs	r1, #128	; 0x80
 8003968:	0489      	lsls	r1, r1, #18
 800396a:	430a      	orrs	r2, r1
 800396c:	601a      	str	r2, [r3, #0]

  // Configure PA12 as High-Speed Output
  GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR12_Msk;
 800396e:	2390      	movs	r3, #144	; 0x90
 8003970:	05db      	lsls	r3, r3, #23
 8003972:	689a      	ldr	r2, [r3, #8]
 8003974:	2390      	movs	r3, #144	; 0x90
 8003976:	05db      	lsls	r3, r3, #23
 8003978:	498f      	ldr	r1, [pc, #572]	; (8003bb8 <canInit+0x294>)
 800397a:	400a      	ands	r2, r1
 800397c:	609a      	str	r2, [r3, #8]
  GPIOA->OSPEEDR |= (0x03 <<GPIO_OSPEEDR_OSPEEDR12_Pos); // x0: Low speed, 01: Medium speed, 11: High speed
 800397e:	2390      	movs	r3, #144	; 0x90
 8003980:	05db      	lsls	r3, r3, #23
 8003982:	689a      	ldr	r2, [r3, #8]
 8003984:	2390      	movs	r3, #144	; 0x90
 8003986:	05db      	lsls	r3, r3, #23
 8003988:	21c0      	movs	r1, #192	; 0xc0
 800398a:	0489      	lsls	r1, r1, #18
 800398c:	430a      	orrs	r2, r1
 800398e:	609a      	str	r2, [r3, #8]

  // Disable PA12 Pull-up/Pull-down
  GPIOA->PUPDR &= ~GPIO_PUPDR_PUPDR12_Msk; // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8003990:	2390      	movs	r3, #144	; 0x90
 8003992:	05db      	lsls	r3, r3, #23
 8003994:	68da      	ldr	r2, [r3, #12]
 8003996:	2390      	movs	r3, #144	; 0x90
 8003998:	05db      	lsls	r3, r3, #23
 800399a:	4987      	ldr	r1, [pc, #540]	; (8003bb8 <canInit+0x294>)
 800399c:	400a      	ands	r2, r1
 800399e:	60da      	str	r2, [r3, #12]

  // Alternative mapping for PA12
  GPIOA->AFR[1] &= ~GPIO_AFRH_AFSEL12_Msk; // Clear
 80039a0:	2390      	movs	r3, #144	; 0x90
 80039a2:	05db      	lsls	r3, r3, #23
 80039a4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80039a6:	2390      	movs	r3, #144	; 0x90
 80039a8:	05db      	lsls	r3, r3, #23
 80039aa:	4984      	ldr	r1, [pc, #528]	; (8003bbc <canInit+0x298>)
 80039ac:	400a      	ands	r2, r1
 80039ae:	625a      	str	r2, [r3, #36]	; 0x24
  GPIOA->AFR[1] |= (0x04 << GPIO_AFRH_AFSEL12_Pos); // Alternate function as TX pin for the CAN
 80039b0:	2390      	movs	r3, #144	; 0x90
 80039b2:	05db      	lsls	r3, r3, #23
 80039b4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80039b6:	2390      	movs	r3, #144	; 0x90
 80039b8:	05db      	lsls	r3, r3, #23
 80039ba:	2180      	movs	r1, #128	; 0x80
 80039bc:	02c9      	lsls	r1, r1, #11
 80039be:	430a      	orrs	r2, r1
 80039c0:	625a      	str	r2, [r3, #36]	; 0x24

  //Activate PA11 mode to alternate function
  GPIOA->MODER &= ~GPIO_MODER_MODER11_Msk; // Clear
 80039c2:	2390      	movs	r3, #144	; 0x90
 80039c4:	05db      	lsls	r3, r3, #23
 80039c6:	681a      	ldr	r2, [r3, #0]
 80039c8:	2390      	movs	r3, #144	; 0x90
 80039ca:	05db      	lsls	r3, r3, #23
 80039cc:	497c      	ldr	r1, [pc, #496]	; (8003bc0 <canInit+0x29c>)
 80039ce:	400a      	ands	r2, r1
 80039d0:	601a      	str	r2, [r3, #0]
  GPIOA->MODER |= (0x02 <<GPIO_MODER_MODER11_Pos); // 00: Input mode (reset state), 01: General purpose output mode, 10 : Alternate function mode, 11: Analog mode
 80039d2:	2390      	movs	r3, #144	; 0x90
 80039d4:	05db      	lsls	r3, r3, #23
 80039d6:	681a      	ldr	r2, [r3, #0]
 80039d8:	2390      	movs	r3, #144	; 0x90
 80039da:	05db      	lsls	r3, r3, #23
 80039dc:	2180      	movs	r1, #128	; 0x80
 80039de:	0409      	lsls	r1, r1, #16
 80039e0:	430a      	orrs	r2, r1
 80039e2:	601a      	str	r2, [r3, #0]

  // Configure PA11 as High-Speed Output
  GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR11_Msk; // Clear
 80039e4:	2390      	movs	r3, #144	; 0x90
 80039e6:	05db      	lsls	r3, r3, #23
 80039e8:	689a      	ldr	r2, [r3, #8]
 80039ea:	2390      	movs	r3, #144	; 0x90
 80039ec:	05db      	lsls	r3, r3, #23
 80039ee:	4974      	ldr	r1, [pc, #464]	; (8003bc0 <canInit+0x29c>)
 80039f0:	400a      	ands	r2, r1
 80039f2:	609a      	str	r2, [r3, #8]
  GPIOA->OSPEEDR |= (0x03 <<GPIO_OSPEEDR_OSPEEDR11_Pos); // x0: Low speed, 01: Medium speed, 11: High speed
 80039f4:	2390      	movs	r3, #144	; 0x90
 80039f6:	05db      	lsls	r3, r3, #23
 80039f8:	689a      	ldr	r2, [r3, #8]
 80039fa:	2390      	movs	r3, #144	; 0x90
 80039fc:	05db      	lsls	r3, r3, #23
 80039fe:	21c0      	movs	r1, #192	; 0xc0
 8003a00:	0409      	lsls	r1, r1, #16
 8003a02:	430a      	orrs	r2, r1
 8003a04:	609a      	str	r2, [r3, #8]

  // Disable PA11 Pull-up/Pull-down
  GPIOA->PUPDR &= ~GPIO_PUPDR_PUPDR11_Msk; // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8003a06:	2390      	movs	r3, #144	; 0x90
 8003a08:	05db      	lsls	r3, r3, #23
 8003a0a:	68da      	ldr	r2, [r3, #12]
 8003a0c:	2390      	movs	r3, #144	; 0x90
 8003a0e:	05db      	lsls	r3, r3, #23
 8003a10:	496b      	ldr	r1, [pc, #428]	; (8003bc0 <canInit+0x29c>)
 8003a12:	400a      	ands	r2, r1
 8003a14:	60da      	str	r2, [r3, #12]

  // Alternative mapping for PA11
  GPIOA->AFR[1] &= ~GPIO_AFRH_AFSEL11_Msk; // Clear
 8003a16:	2390      	movs	r3, #144	; 0x90
 8003a18:	05db      	lsls	r3, r3, #23
 8003a1a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a1c:	2390      	movs	r3, #144	; 0x90
 8003a1e:	05db      	lsls	r3, r3, #23
 8003a20:	4968      	ldr	r1, [pc, #416]	; (8003bc4 <canInit+0x2a0>)
 8003a22:	400a      	ands	r2, r1
 8003a24:	625a      	str	r2, [r3, #36]	; 0x24
  GPIOA->AFR[1] |= (0x04 << GPIO_AFRH_AFSEL11_Pos); // Alternate function as RX pin for the CAN
 8003a26:	2390      	movs	r3, #144	; 0x90
 8003a28:	05db      	lsls	r3, r3, #23
 8003a2a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a2c:	2390      	movs	r3, #144	; 0x90
 8003a2e:	05db      	lsls	r3, r3, #23
 8003a30:	2180      	movs	r1, #128	; 0x80
 8003a32:	01c9      	lsls	r1, r1, #7
 8003a34:	430a      	orrs	r2, r1
 8003a36:	625a      	str	r2, [r3, #36]	; 0x24

  // Exit freeze mode while using DEBUG
  CAN->MCR &= ~CAN_MCR_DBF_Msk;
 8003a38:	4b63      	ldr	r3, [pc, #396]	; (8003bc8 <canInit+0x2a4>)
 8003a3a:	681a      	ldr	r2, [r3, #0]
 8003a3c:	4b62      	ldr	r3, [pc, #392]	; (8003bc8 <canInit+0x2a4>)
 8003a3e:	4963      	ldr	r1, [pc, #396]	; (8003bcc <canInit+0x2a8>)
 8003a40:	400a      	ands	r2, r1
 8003a42:	601a      	str	r2, [r3, #0]

  // Initialization request for the CAN
  CAN->MCR |= CAN_MCR_INRQ;
 8003a44:	4b60      	ldr	r3, [pc, #384]	; (8003bc8 <canInit+0x2a4>)
 8003a46:	681a      	ldr	r2, [r3, #0]
 8003a48:	4b5f      	ldr	r3, [pc, #380]	; (8003bc8 <canInit+0x2a4>)
 8003a4a:	2101      	movs	r1, #1
 8003a4c:	430a      	orrs	r2, r1
 8003a4e:	601a      	str	r2, [r3, #0]

  while ( (CAN->MSR & CAN_MSR_INAK) != CAN_MSR_INAK){
 8003a50:	e003      	b.n	8003a5a <canInit+0x136>

    printf("Wait until INAK bit is set to enter in can initialization mode\r\n");
 8003a52:	4b5f      	ldr	r3, [pc, #380]	; (8003bd0 <canInit+0x2ac>)
 8003a54:	0018      	movs	r0, r3
 8003a56:	f003 f815 	bl	8006a84 <puts>
  while ( (CAN->MSR & CAN_MSR_INAK) != CAN_MSR_INAK){
 8003a5a:	4b5b      	ldr	r3, [pc, #364]	; (8003bc8 <canInit+0x2a4>)
 8003a5c:	685b      	ldr	r3, [r3, #4]
 8003a5e:	2201      	movs	r2, #1
 8003a60:	4013      	ands	r3, r2
 8003a62:	2b01      	cmp	r3, #1
 8003a64:	d1f5      	bne.n	8003a52 <canInit+0x12e>
  } // Wait until we reach initialization mode

  // Exit from sleep mode
  CAN->MCR &= ~CAN_MCR_SLEEP;
 8003a66:	4b58      	ldr	r3, [pc, #352]	; (8003bc8 <canInit+0x2a4>)
 8003a68:	681a      	ldr	r2, [r3, #0]
 8003a6a:	4b57      	ldr	r3, [pc, #348]	; (8003bc8 <canInit+0x2a4>)
 8003a6c:	2102      	movs	r1, #2
 8003a6e:	438a      	bics	r2, r1
 8003a70:	601a      	str	r2, [r3, #0]

  // Time triggered mode disable
  CAN->MCR &= ~CAN_MCR_TTCM;
 8003a72:	4b55      	ldr	r3, [pc, #340]	; (8003bc8 <canInit+0x2a4>)
 8003a74:	681a      	ldr	r2, [r3, #0]
 8003a76:	4b54      	ldr	r3, [pc, #336]	; (8003bc8 <canInit+0x2a4>)
 8003a78:	2180      	movs	r1, #128	; 0x80
 8003a7a:	438a      	bics	r2, r1
 8003a7c:	601a      	str	r2, [r3, #0]

  // Automatic retransmission diseable
  CAN->MCR |= CAN_MCR_NART;
 8003a7e:	4b52      	ldr	r3, [pc, #328]	; (8003bc8 <canInit+0x2a4>)
 8003a80:	681a      	ldr	r2, [r3, #0]
 8003a82:	4b51      	ldr	r3, [pc, #324]	; (8003bc8 <canInit+0x2a4>)
 8003a84:	2110      	movs	r1, #16
 8003a86:	430a      	orrs	r2, r1
 8003a88:	601a      	str	r2, [r3, #0]

  // Receive fifo locked disable
  CAN->MCR &= ~CAN_MCR_RFLM;
 8003a8a:	4b4f      	ldr	r3, [pc, #316]	; (8003bc8 <canInit+0x2a4>)
 8003a8c:	681a      	ldr	r2, [r3, #0]
 8003a8e:	4b4e      	ldr	r3, [pc, #312]	; (8003bc8 <canInit+0x2a4>)
 8003a90:	2108      	movs	r1, #8
 8003a92:	438a      	bics	r2, r1
 8003a94:	601a      	str	r2, [r3, #0]

  // Auto wake up disable
  CAN->MCR &= ~CAN_MCR_AWUM;
 8003a96:	4b4c      	ldr	r3, [pc, #304]	; (8003bc8 <canInit+0x2a4>)
 8003a98:	681a      	ldr	r2, [r3, #0]
 8003a9a:	4b4b      	ldr	r3, [pc, #300]	; (8003bc8 <canInit+0x2a4>)
 8003a9c:	2120      	movs	r1, #32
 8003a9e:	438a      	bics	r2, r1
 8003aa0:	601a      	str	r2, [r3, #0]

  // Transmit fifo priority disable
  CAN->MCR &= ~CAN_MCR_TXFP;
 8003aa2:	4b49      	ldr	r3, [pc, #292]	; (8003bc8 <canInit+0x2a4>)
 8003aa4:	681a      	ldr	r2, [r3, #0]
 8003aa6:	4b48      	ldr	r3, [pc, #288]	; (8003bc8 <canInit+0x2a4>)
 8003aa8:	2104      	movs	r1, #4
 8003aaa:	438a      	bics	r2, r1
 8003aac:	601a      	str	r2, [r3, #0]

  // Normal mode
  CAN->BTR &= ~CAN_BTR_LBKM_Msk; // 0: Loop Back Mode disabled, 1: Loop Back Mode enabled
 8003aae:	4b46      	ldr	r3, [pc, #280]	; (8003bc8 <canInit+0x2a4>)
 8003ab0:	69da      	ldr	r2, [r3, #28]
 8003ab2:	4b45      	ldr	r3, [pc, #276]	; (8003bc8 <canInit+0x2a4>)
 8003ab4:	4947      	ldr	r1, [pc, #284]	; (8003bd4 <canInit+0x2b0>)
 8003ab6:	400a      	ands	r2, r1
 8003ab8:	61da      	str	r2, [r3, #28]
  CAN->BTR &= ~CAN_BTR_SILM_Msk; // 0: Normal operation, 1: Silent Mode
 8003aba:	4b43      	ldr	r3, [pc, #268]	; (8003bc8 <canInit+0x2a4>)
 8003abc:	69da      	ldr	r2, [r3, #28]
 8003abe:	4b42      	ldr	r3, [pc, #264]	; (8003bc8 <canInit+0x2a4>)
 8003ac0:	0052      	lsls	r2, r2, #1
 8003ac2:	0852      	lsrs	r2, r2, #1
 8003ac4:	61da      	str	r2, [r3, #28]

  /* The bit timing are given from this website : http://www.bittiming.can-wiki.info */

  // Synchronization segment of 1 TQ
  CAN->BTR &= ~CAN_BTR_SJW_Msk;
 8003ac6:	4b40      	ldr	r3, [pc, #256]	; (8003bc8 <canInit+0x2a4>)
 8003ac8:	69da      	ldr	r2, [r3, #28]
 8003aca:	4b3f      	ldr	r3, [pc, #252]	; (8003bc8 <canInit+0x2a4>)
 8003acc:	493a      	ldr	r1, [pc, #232]	; (8003bb8 <canInit+0x294>)
 8003ace:	400a      	ands	r2, r1
 8003ad0:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x01 - 0x01) << CAN_BTR_SJW_Pos );
 8003ad2:	4a3d      	ldr	r2, [pc, #244]	; (8003bc8 <canInit+0x2a4>)
 8003ad4:	4b3c      	ldr	r3, [pc, #240]	; (8003bc8 <canInit+0x2a4>)
 8003ad6:	69d2      	ldr	r2, [r2, #28]
 8003ad8:	61da      	str	r2, [r3, #28]

  // Prescaler of 1
  CAN->BTR &= ~CAN_BTR_BRP_Msk;
 8003ada:	4b3b      	ldr	r3, [pc, #236]	; (8003bc8 <canInit+0x2a4>)
 8003adc:	69da      	ldr	r2, [r3, #28]
 8003ade:	4b3a      	ldr	r3, [pc, #232]	; (8003bc8 <canInit+0x2a4>)
 8003ae0:	0a92      	lsrs	r2, r2, #10
 8003ae2:	0292      	lsls	r2, r2, #10
 8003ae4:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x01 - 0x01) << CAN_BTR_BRP_Pos );
 8003ae6:	4a38      	ldr	r2, [pc, #224]	; (8003bc8 <canInit+0x2a4>)
 8003ae8:	4b37      	ldr	r3, [pc, #220]	; (8003bc8 <canInit+0x2a4>)
 8003aea:	69d2      	ldr	r2, [r2, #28]
 8003aec:	61da      	str	r2, [r3, #28]

  // Segment 2 of 2 TQ
  CAN->BTR &= ~CAN_BTR_TS2_Msk; // Clear
 8003aee:	4b36      	ldr	r3, [pc, #216]	; (8003bc8 <canInit+0x2a4>)
 8003af0:	69da      	ldr	r2, [r3, #28]
 8003af2:	4b35      	ldr	r3, [pc, #212]	; (8003bc8 <canInit+0x2a4>)
 8003af4:	4938      	ldr	r1, [pc, #224]	; (8003bd8 <canInit+0x2b4>)
 8003af6:	400a      	ands	r2, r1
 8003af8:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x02 - 0x01) << CAN_BTR_TS2_Pos );
 8003afa:	4b33      	ldr	r3, [pc, #204]	; (8003bc8 <canInit+0x2a4>)
 8003afc:	69da      	ldr	r2, [r3, #28]
 8003afe:	4b32      	ldr	r3, [pc, #200]	; (8003bc8 <canInit+0x2a4>)
 8003b00:	2180      	movs	r1, #128	; 0x80
 8003b02:	0349      	lsls	r1, r1, #13
 8003b04:	430a      	orrs	r2, r1
 8003b06:	61da      	str	r2, [r3, #28]

  // Segment 1 of 13 TQ
  CAN->BTR &= ~CAN_BTR_TS1_Msk; // Clear
 8003b08:	4b2f      	ldr	r3, [pc, #188]	; (8003bc8 <canInit+0x2a4>)
 8003b0a:	69da      	ldr	r2, [r3, #28]
 8003b0c:	4b2e      	ldr	r3, [pc, #184]	; (8003bc8 <canInit+0x2a4>)
 8003b0e:	492b      	ldr	r1, [pc, #172]	; (8003bbc <canInit+0x298>)
 8003b10:	400a      	ands	r2, r1
 8003b12:	61da      	str	r2, [r3, #28]
  CAN->BTR |= ( (0x0D - 0x01) << CAN_BTR_TS1_Pos );
 8003b14:	4b2c      	ldr	r3, [pc, #176]	; (8003bc8 <canInit+0x2a4>)
 8003b16:	69da      	ldr	r2, [r3, #28]
 8003b18:	4b2b      	ldr	r3, [pc, #172]	; (8003bc8 <canInit+0x2a4>)
 8003b1a:	21c0      	movs	r1, #192	; 0xc0
 8003b1c:	0309      	lsls	r1, r1, #12
 8003b1e:	430a      	orrs	r2, r1
 8003b20:	61da      	str	r2, [r3, #28]

  canFilterConfig();
 8003b22:	f7ff fc33 	bl	800338c <canFilterConfig>

  // Configure the sources of interruption
  CAN->IER |= CAN_IER_TMEIE; // Interruption on completed transmission request (ok, arbitration loss, abort and error)
 8003b26:	4b28      	ldr	r3, [pc, #160]	; (8003bc8 <canInit+0x2a4>)
 8003b28:	695a      	ldr	r2, [r3, #20]
 8003b2a:	4b27      	ldr	r3, [pc, #156]	; (8003bc8 <canInit+0x2a4>)
 8003b2c:	2101      	movs	r1, #1
 8003b2e:	430a      	orrs	r2, r1
 8003b30:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FMPIE0; // Interruption on message pending into the fifo 0
 8003b32:	4b25      	ldr	r3, [pc, #148]	; (8003bc8 <canInit+0x2a4>)
 8003b34:	695a      	ldr	r2, [r3, #20]
 8003b36:	4b24      	ldr	r3, [pc, #144]	; (8003bc8 <canInit+0x2a4>)
 8003b38:	2102      	movs	r1, #2
 8003b3a:	430a      	orrs	r2, r1
 8003b3c:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FMPIE1; // Interruption on message pending into the fifo 1
 8003b3e:	4b22      	ldr	r3, [pc, #136]	; (8003bc8 <canInit+0x2a4>)
 8003b40:	695a      	ldr	r2, [r3, #20]
 8003b42:	4b21      	ldr	r3, [pc, #132]	; (8003bc8 <canInit+0x2a4>)
 8003b44:	2110      	movs	r1, #16
 8003b46:	430a      	orrs	r2, r1
 8003b48:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FOVIE0; // Interruption on message overrun into the fifo 0
 8003b4a:	4b1f      	ldr	r3, [pc, #124]	; (8003bc8 <canInit+0x2a4>)
 8003b4c:	695a      	ldr	r2, [r3, #20]
 8003b4e:	4b1e      	ldr	r3, [pc, #120]	; (8003bc8 <canInit+0x2a4>)
 8003b50:	2108      	movs	r1, #8
 8003b52:	430a      	orrs	r2, r1
 8003b54:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_FOVIE1; // Interruption on message overrun into the fifo 1
 8003b56:	4b1c      	ldr	r3, [pc, #112]	; (8003bc8 <canInit+0x2a4>)
 8003b58:	695a      	ldr	r2, [r3, #20]
 8003b5a:	4b1b      	ldr	r3, [pc, #108]	; (8003bc8 <canInit+0x2a4>)
 8003b5c:	2140      	movs	r1, #64	; 0x40
 8003b5e:	430a      	orrs	r2, r1
 8003b60:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_ERRIE; // Interruption on error
 8003b62:	4b19      	ldr	r3, [pc, #100]	; (8003bc8 <canInit+0x2a4>)
 8003b64:	695a      	ldr	r2, [r3, #20]
 8003b66:	4b18      	ldr	r3, [pc, #96]	; (8003bc8 <canInit+0x2a4>)
 8003b68:	2180      	movs	r1, #128	; 0x80
 8003b6a:	0209      	lsls	r1, r1, #8
 8003b6c:	430a      	orrs	r2, r1
 8003b6e:	615a      	str	r2, [r3, #20]
  CAN->IER |= CAN_IER_LECIE; // Interruption on last error code
 8003b70:	4b15      	ldr	r3, [pc, #84]	; (8003bc8 <canInit+0x2a4>)
 8003b72:	695a      	ldr	r2, [r3, #20]
 8003b74:	4b14      	ldr	r3, [pc, #80]	; (8003bc8 <canInit+0x2a4>)
 8003b76:	2180      	movs	r1, #128	; 0x80
 8003b78:	0109      	lsls	r1, r1, #4
 8003b7a:	430a      	orrs	r2, r1
 8003b7c:	615a      	str	r2, [r3, #20]


  // Request exit from initialization mode
  CAN->MCR &= ~CAN_MCR_INRQ;
 8003b7e:	4b12      	ldr	r3, [pc, #72]	; (8003bc8 <canInit+0x2a4>)
 8003b80:	681a      	ldr	r2, [r3, #0]
 8003b82:	4b11      	ldr	r3, [pc, #68]	; (8003bc8 <canInit+0x2a4>)
 8003b84:	2101      	movs	r1, #1
 8003b86:	438a      	bics	r2, r1
 8003b88:	601a      	str	r2, [r3, #0]

  while ((CAN->MSR & CAN_MSR_INAK) == CAN_MSR_INAK){
 8003b8a:	e003      	b.n	8003b94 <canInit+0x270>
    printf("Wait until INAK bit is clear to exit from can initialization mode\r\n");
 8003b8c:	4b13      	ldr	r3, [pc, #76]	; (8003bdc <canInit+0x2b8>)
 8003b8e:	0018      	movs	r0, r3
 8003b90:	f002 ff78 	bl	8006a84 <puts>
  while ((CAN->MSR & CAN_MSR_INAK) == CAN_MSR_INAK){
 8003b94:	4b0c      	ldr	r3, [pc, #48]	; (8003bc8 <canInit+0x2a4>)
 8003b96:	685b      	ldr	r3, [r3, #4]
 8003b98:	2201      	movs	r2, #1
 8003b9a:	4013      	ands	r3, r2
 8003b9c:	2b01      	cmp	r3, #1
 8003b9e:	d0f5      	beq.n	8003b8c <canInit+0x268>
  } // Wait until we quit initialization mode

  printf("CAN INITIALIZATION OK\r\n");
 8003ba0:	4b0f      	ldr	r3, [pc, #60]	; (8003be0 <canInit+0x2bc>)
 8003ba2:	0018      	movs	r0, r3
 8003ba4:	f002 ff6e 	bl	8006a84 <puts>

}
 8003ba8:	46c0      	nop			; (mov r8, r8)
 8003baa:	46bd      	mov	sp, r7
 8003bac:	bd80      	pop	{r7, pc}
 8003bae:	46c0      	nop			; (mov r8, r8)
 8003bb0:	0800adf8 	.word	0x0800adf8
 8003bb4:	40021000 	.word	0x40021000
 8003bb8:	fcffffff 	.word	0xfcffffff
 8003bbc:	fff0ffff 	.word	0xfff0ffff
 8003bc0:	ff3fffff 	.word	0xff3fffff
 8003bc4:	ffff0fff 	.word	0xffff0fff
 8003bc8:	40006400 	.word	0x40006400
 8003bcc:	fffeffff 	.word	0xfffeffff
 8003bd0:	0800ae24 	.word	0x0800ae24
 8003bd4:	bfffffff 	.word	0xbfffffff
 8003bd8:	ff8fffff 	.word	0xff8fffff
 8003bdc:	0800ae64 	.word	0x0800ae64
 8003be0:	0800aea8 	.word	0x0800aea8

08003be4 <sendRemoteFrame>:

/******************* Send remote frames to the RPI in order to get information about the 4 next passes ********************/

void sendRemoteFrame(){
 8003be4:	b580      	push	{r7, lr}
 8003be6:	b082      	sub	sp, #8
 8003be8:	af00      	add	r7, sp, #0

	nextRemoteFrameId = (numberOfDataFrameReceived >= 6) ? ( ( numberOfDataFrameReceived % 6 ) + 1 ) : (numberOfDataFrameReceived + 1);
 8003bea:	4b54      	ldr	r3, [pc, #336]	; (8003d3c <sendRemoteFrame+0x158>)
 8003bec:	681b      	ldr	r3, [r3, #0]
 8003bee:	2b05      	cmp	r3, #5
 8003bf0:	d908      	bls.n	8003c04 <sendRemoteFrame+0x20>
 8003bf2:	4b52      	ldr	r3, [pc, #328]	; (8003d3c <sendRemoteFrame+0x158>)
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	2106      	movs	r1, #6
 8003bf8:	0018      	movs	r0, r3
 8003bfa:	f7fc fb31 	bl	8000260 <__aeabi_uidivmod>
 8003bfe:	000b      	movs	r3, r1
 8003c00:	1c5a      	adds	r2, r3, #1
 8003c02:	e002      	b.n	8003c0a <sendRemoteFrame+0x26>
 8003c04:	4b4d      	ldr	r3, [pc, #308]	; (8003d3c <sendRemoteFrame+0x158>)
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	1c5a      	adds	r2, r3, #1
 8003c0a:	4b4d      	ldr	r3, [pc, #308]	; (8003d40 <sendRemoteFrame+0x15c>)
 8003c0c:	601a      	str	r2, [r3, #0]

	printf("********** SEND REMOTE FRAME WITH ID N°%ld **********\r\n", nextRemoteFrameId);
 8003c0e:	4b4c      	ldr	r3, [pc, #304]	; (8003d40 <sendRemoteFrame+0x15c>)
 8003c10:	681a      	ldr	r2, [r3, #0]
 8003c12:	4b4c      	ldr	r3, [pc, #304]	; (8003d44 <sendRemoteFrame+0x160>)
 8003c14:	0011      	movs	r1, r2
 8003c16:	0018      	movs	r0, r3
 8003c18:	f002 feba 	bl	8006990 <iprintf>

	uint32_t emptyMailbox;

	// Check that all the Tx mailboxes are not full
	if ( ( (CAN->TSR & CAN_TSR_TME0) != 0U ) || ( (CAN->TSR & CAN_TSR_TME1) != 0U ) || ( (CAN->TSR & CAN_TSR_TME2) != 0U) ){
 8003c1c:	4b4a      	ldr	r3, [pc, #296]	; (8003d48 <sendRemoteFrame+0x164>)
 8003c1e:	689a      	ldr	r2, [r3, #8]
 8003c20:	2380      	movs	r3, #128	; 0x80
 8003c22:	04db      	lsls	r3, r3, #19
 8003c24:	4013      	ands	r3, r2
 8003c26:	d10b      	bne.n	8003c40 <sendRemoteFrame+0x5c>
 8003c28:	4b47      	ldr	r3, [pc, #284]	; (8003d48 <sendRemoteFrame+0x164>)
 8003c2a:	689a      	ldr	r2, [r3, #8]
 8003c2c:	2380      	movs	r3, #128	; 0x80
 8003c2e:	051b      	lsls	r3, r3, #20
 8003c30:	4013      	ands	r3, r2
 8003c32:	d105      	bne.n	8003c40 <sendRemoteFrame+0x5c>
 8003c34:	4b44      	ldr	r3, [pc, #272]	; (8003d48 <sendRemoteFrame+0x164>)
 8003c36:	689a      	ldr	r2, [r3, #8]
 8003c38:	2380      	movs	r3, #128	; 0x80
 8003c3a:	055b      	lsls	r3, r3, #21
 8003c3c:	4013      	ands	r3, r2
 8003c3e:	d074      	beq.n	8003d2a <sendRemoteFrame+0x146>

		// Select an empty transmit mailbox
		emptyMailbox = (CAN->TSR & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 8003c40:	4b41      	ldr	r3, [pc, #260]	; (8003d48 <sendRemoteFrame+0x164>)
 8003c42:	689b      	ldr	r3, [r3, #8]
 8003c44:	0e1b      	lsrs	r3, r3, #24
 8003c46:	2203      	movs	r2, #3
 8003c48:	4013      	ands	r3, r2
 8003c4a:	607b      	str	r3, [r7, #4]

		printf("The transmit mailbox selected for the ID n°%ld is mailbox %ld\r\n", nextRemoteFrameId, emptyMailbox);
 8003c4c:	4b3c      	ldr	r3, [pc, #240]	; (8003d40 <sendRemoteFrame+0x15c>)
 8003c4e:	6819      	ldr	r1, [r3, #0]
 8003c50:	687a      	ldr	r2, [r7, #4]
 8003c52:	4b3e      	ldr	r3, [pc, #248]	; (8003d4c <sendRemoteFrame+0x168>)
 8003c54:	0018      	movs	r0, r3
 8003c56:	f002 fe9b 	bl	8006990 <iprintf>

		// IDE bit set to 0 because we use format CAN Strandard format (2.0A)
		CAN->sTxMailBox[emptyMailbox].TIR &= ~(0x01 << 2); // Set bit 2 to 0
 8003c5a:	4a3b      	ldr	r2, [pc, #236]	; (8003d48 <sendRemoteFrame+0x164>)
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	3318      	adds	r3, #24
 8003c60:	011b      	lsls	r3, r3, #4
 8003c62:	589b      	ldr	r3, [r3, r2]
 8003c64:	4938      	ldr	r1, [pc, #224]	; (8003d48 <sendRemoteFrame+0x164>)
 8003c66:	2204      	movs	r2, #4
 8003c68:	4393      	bics	r3, r2
 8003c6a:	001a      	movs	r2, r3
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	3318      	adds	r3, #24
 8003c70:	011b      	lsls	r3, r3, #4
 8003c72:	505a      	str	r2, [r3, r1]

		// RTR bit set to 1 because we send a request frame
		CAN->sTxMailBox[emptyMailbox].TIR |= (0x01 << 1); // Set bit 1 to 1
 8003c74:	4a34      	ldr	r2, [pc, #208]	; (8003d48 <sendRemoteFrame+0x164>)
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	3318      	adds	r3, #24
 8003c7a:	011b      	lsls	r3, r3, #4
 8003c7c:	589b      	ldr	r3, [r3, r2]
 8003c7e:	4932      	ldr	r1, [pc, #200]	; (8003d48 <sendRemoteFrame+0x164>)
 8003c80:	2202      	movs	r2, #2
 8003c82:	431a      	orrs	r2, r3
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	3318      	adds	r3, #24
 8003c88:	011b      	lsls	r3, r3, #4
 8003c8a:	505a      	str	r2, [r3, r1]

		// Set the identifier field according to the parameter "nextRemoteFrameId"
		CAN->sTxMailBox[emptyMailbox].TIR &= ~(0x00003FFFF << 3); // Clear bits 3 to 20
 8003c8c:	4a2e      	ldr	r2, [pc, #184]	; (8003d48 <sendRemoteFrame+0x164>)
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	3318      	adds	r3, #24
 8003c92:	011b      	lsls	r3, r3, #4
 8003c94:	589b      	ldr	r3, [r3, r2]
 8003c96:	492c      	ldr	r1, [pc, #176]	; (8003d48 <sendRemoteFrame+0x164>)
 8003c98:	4a2d      	ldr	r2, [pc, #180]	; (8003d50 <sendRemoteFrame+0x16c>)
 8003c9a:	401a      	ands	r2, r3
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	3318      	adds	r3, #24
 8003ca0:	011b      	lsls	r3, r3, #4
 8003ca2:	505a      	str	r2, [r3, r1]
		CAN->sTxMailBox[emptyMailbox].TIR &= ~(0x000007FF << 21); // Clear bits 21 to 31
 8003ca4:	4a28      	ldr	r2, [pc, #160]	; (8003d48 <sendRemoteFrame+0x164>)
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	3318      	adds	r3, #24
 8003caa:	011b      	lsls	r3, r3, #4
 8003cac:	589b      	ldr	r3, [r3, r2]
 8003cae:	4926      	ldr	r1, [pc, #152]	; (8003d48 <sendRemoteFrame+0x164>)
 8003cb0:	02db      	lsls	r3, r3, #11
 8003cb2:	0ada      	lsrs	r2, r3, #11
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	3318      	adds	r3, #24
 8003cb8:	011b      	lsls	r3, r3, #4
 8003cba:	505a      	str	r2, [r3, r1]
		CAN->sTxMailBox[emptyMailbox].TIR = ( (uint32_t) nextRemoteFrameId << 21);
 8003cbc:	4b20      	ldr	r3, [pc, #128]	; (8003d40 <sendRemoteFrame+0x15c>)
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	4921      	ldr	r1, [pc, #132]	; (8003d48 <sendRemoteFrame+0x164>)
 8003cc2:	055a      	lsls	r2, r3, #21
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	3318      	adds	r3, #24
 8003cc8:	011b      	lsls	r3, r3, #4
 8003cca:	505a      	str	r2, [r3, r1]

		// Size of the data frame according to the parameter "nbBytesCanFrame"
		CAN->sTxMailBox[emptyMailbox].TDTR &= ~(0xFFFFFFFF << 0); // Clear bits 0 to 3
 8003ccc:	4a1e      	ldr	r2, [pc, #120]	; (8003d48 <sendRemoteFrame+0x164>)
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	3318      	adds	r3, #24
 8003cd2:	011b      	lsls	r3, r3, #4
 8003cd4:	18d3      	adds	r3, r2, r3
 8003cd6:	3304      	adds	r3, #4
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	4a1b      	ldr	r2, [pc, #108]	; (8003d48 <sendRemoteFrame+0x164>)
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	3318      	adds	r3, #24
 8003ce0:	011b      	lsls	r3, r3, #4
 8003ce2:	18d3      	adds	r3, r2, r3
 8003ce4:	3304      	adds	r3, #4
 8003ce6:	2200      	movs	r2, #0
 8003ce8:	601a      	str	r2, [r3, #0]
		CAN->sTxMailBox[emptyMailbox].TDTR |= ( ( (uint32_t) nbBytesCanFrame[nextRemoteFrameId - 1] ) << 0);
 8003cea:	4a17      	ldr	r2, [pc, #92]	; (8003d48 <sendRemoteFrame+0x164>)
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	3318      	adds	r3, #24
 8003cf0:	011b      	lsls	r3, r3, #4
 8003cf2:	18d3      	adds	r3, r2, r3
 8003cf4:	3304      	adds	r3, #4
 8003cf6:	681a      	ldr	r2, [r3, #0]
 8003cf8:	4b11      	ldr	r3, [pc, #68]	; (8003d40 <sendRemoteFrame+0x15c>)
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	1e59      	subs	r1, r3, #1
 8003cfe:	4b15      	ldr	r3, [pc, #84]	; (8003d54 <sendRemoteFrame+0x170>)
 8003d00:	0089      	lsls	r1, r1, #2
 8003d02:	58cb      	ldr	r3, [r1, r3]
 8003d04:	4910      	ldr	r1, [pc, #64]	; (8003d48 <sendRemoteFrame+0x164>)
 8003d06:	431a      	orrs	r2, r3
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	3318      	adds	r3, #24
 8003d0c:	011b      	lsls	r3, r3, #4
 8003d0e:	18cb      	adds	r3, r1, r3
 8003d10:	3304      	adds	r3, #4
 8003d12:	601a      	str	r2, [r3, #0]

		// Ask for transmission request : TXRQ = 1
		CAN->sTxMailBox[0].TIR |= CAN_TI0R_TXRQ;
 8003d14:	4a0c      	ldr	r2, [pc, #48]	; (8003d48 <sendRemoteFrame+0x164>)
 8003d16:	23c0      	movs	r3, #192	; 0xc0
 8003d18:	005b      	lsls	r3, r3, #1
 8003d1a:	58d3      	ldr	r3, [r2, r3]
 8003d1c:	490a      	ldr	r1, [pc, #40]	; (8003d48 <sendRemoteFrame+0x164>)
 8003d1e:	2201      	movs	r2, #1
 8003d20:	431a      	orrs	r2, r3
 8003d22:	23c0      	movs	r3, #192	; 0xc0
 8003d24:	005b      	lsls	r3, r3, #1
 8003d26:	50ca      	str	r2, [r1, r3]
 8003d28:	e003      	b.n	8003d32 <sendRemoteFrame+0x14e>

	}

	else{

		printf("All the mailbox are full\r\n");
 8003d2a:	4b0b      	ldr	r3, [pc, #44]	; (8003d58 <sendRemoteFrame+0x174>)
 8003d2c:	0018      	movs	r0, r3
 8003d2e:	f002 fea9 	bl	8006a84 <puts>
	}

}
 8003d32:	46c0      	nop			; (mov r8, r8)
 8003d34:	46bd      	mov	sp, r7
 8003d36:	b002      	add	sp, #8
 8003d38:	bd80      	pop	{r7, pc}
 8003d3a:	46c0      	nop			; (mov r8, r8)
 8003d3c:	20000274 	.word	0x20000274
 8003d40:	20000278 	.word	0x20000278
 8003d44:	0800aec0 	.word	0x0800aec0
 8003d48:	40006400 	.word	0x40006400
 8003d4c:	0800aefc 	.word	0x0800aefc
 8003d50:	ffe00007 	.word	0xffe00007
 8003d54:	20000000 	.word	0x20000000
 8003d58:	0800af40 	.word	0x0800af40

08003d5c <concat>:

/*******************  Concatenate to integer into one  ********************/

int concat(int a, int b){
 8003d5c:	b5b0      	push	{r4, r5, r7, lr}
 8003d5e:	b08e      	sub	sp, #56	; 0x38
 8003d60:	af00      	add	r7, sp, #0
 8003d62:	6078      	str	r0, [r7, #4]
 8003d64:	6039      	str	r1, [r7, #0]

	char s1[20];
	char s2[20];

    // Convert both the integers to string
    sprintf(s1, "%d", a);
 8003d66:	687a      	ldr	r2, [r7, #4]
 8003d68:	490e      	ldr	r1, [pc, #56]	; (8003da4 <concat+0x48>)
 8003d6a:	2420      	movs	r4, #32
 8003d6c:	193b      	adds	r3, r7, r4
 8003d6e:	0018      	movs	r0, r3
 8003d70:	f002 fea4 	bl	8006abc <siprintf>
    sprintf(s2, "%d", b);
 8003d74:	683a      	ldr	r2, [r7, #0]
 8003d76:	490b      	ldr	r1, [pc, #44]	; (8003da4 <concat+0x48>)
 8003d78:	250c      	movs	r5, #12
 8003d7a:	197b      	adds	r3, r7, r5
 8003d7c:	0018      	movs	r0, r3
 8003d7e:	f002 fe9d 	bl	8006abc <siprintf>

    // Concatenate both strings
    strcat(s1, s2);
 8003d82:	197a      	adds	r2, r7, r5
 8003d84:	193b      	adds	r3, r7, r4
 8003d86:	0011      	movs	r1, r2
 8003d88:	0018      	movs	r0, r3
 8003d8a:	f002 feb7 	bl	8006afc <strcat>

    // Convert the concatenated string
    // to integer
    int c = atoi(s1);
 8003d8e:	193b      	adds	r3, r7, r4
 8003d90:	0018      	movs	r0, r3
 8003d92:	f001 ffa2 	bl	8005cda <atoi>
 8003d96:	0003      	movs	r3, r0
 8003d98:	637b      	str	r3, [r7, #52]	; 0x34

    // return the formed integer
    return c;
 8003d9a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
}
 8003d9c:	0018      	movs	r0, r3
 8003d9e:	46bd      	mov	sp, r7
 8003da0:	b00e      	add	sp, #56	; 0x38
 8003da2:	bdb0      	pop	{r4, r5, r7, pc}
 8003da4:	0800af5c 	.word	0x0800af5c

08003da8 <receiveDataFrame>:

/******************* Receive data frames from the RPI in order to get information about the 4 next passes ********************/

void receiveDataFrame(){
 8003da8:	b5b0      	push	{r4, r5, r7, lr}
 8003daa:	b088      	sub	sp, #32
 8003dac:	af00      	add	r7, sp, #0

	passNumberToUpdate = (numberOfDataFrameReceived < 6) ? 0 : ( (numberOfDataFrameReceived < 12) ? 1 : ( (numberOfDataFrameReceived < 18) ? 2 : 3) );
 8003dae:	4bb8      	ldr	r3, [pc, #736]	; (8004090 <receiveDataFrame+0x2e8>)
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	2b05      	cmp	r3, #5
 8003db4:	d90d      	bls.n	8003dd2 <receiveDataFrame+0x2a>
 8003db6:	4bb6      	ldr	r3, [pc, #728]	; (8004090 <receiveDataFrame+0x2e8>)
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	2b0b      	cmp	r3, #11
 8003dbc:	d907      	bls.n	8003dce <receiveDataFrame+0x26>
 8003dbe:	4bb4      	ldr	r3, [pc, #720]	; (8004090 <receiveDataFrame+0x2e8>)
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	2b11      	cmp	r3, #17
 8003dc4:	d801      	bhi.n	8003dca <receiveDataFrame+0x22>
 8003dc6:	2302      	movs	r3, #2
 8003dc8:	e004      	b.n	8003dd4 <receiveDataFrame+0x2c>
 8003dca:	2303      	movs	r3, #3
 8003dcc:	e002      	b.n	8003dd4 <receiveDataFrame+0x2c>
 8003dce:	2301      	movs	r3, #1
 8003dd0:	e000      	b.n	8003dd4 <receiveDataFrame+0x2c>
 8003dd2:	2300      	movs	r3, #0
 8003dd4:	4aaf      	ldr	r2, [pc, #700]	; (8004094 <receiveDataFrame+0x2ec>)
 8003dd6:	6013      	str	r3, [r2, #0]
	nextDataFrameId = (numberOfDataFrameReceived >= 6) ? ( ( numberOfDataFrameReceived % 6 ) + 1 ) : (numberOfDataFrameReceived + 1);
 8003dd8:	4bad      	ldr	r3, [pc, #692]	; (8004090 <receiveDataFrame+0x2e8>)
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	2b05      	cmp	r3, #5
 8003dde:	d908      	bls.n	8003df2 <receiveDataFrame+0x4a>
 8003de0:	4bab      	ldr	r3, [pc, #684]	; (8004090 <receiveDataFrame+0x2e8>)
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	2106      	movs	r1, #6
 8003de6:	0018      	movs	r0, r3
 8003de8:	f7fc fa3a 	bl	8000260 <__aeabi_uidivmod>
 8003dec:	000b      	movs	r3, r1
 8003dee:	1c5a      	adds	r2, r3, #1
 8003df0:	e002      	b.n	8003df8 <receiveDataFrame+0x50>
 8003df2:	4ba7      	ldr	r3, [pc, #668]	; (8004090 <receiveDataFrame+0x2e8>)
 8003df4:	681b      	ldr	r3, [r3, #0]
 8003df6:	1c5a      	adds	r2, r3, #1
 8003df8:	4ba7      	ldr	r3, [pc, #668]	; (8004098 <receiveDataFrame+0x2f0>)
 8003dfa:	601a      	str	r2, [r3, #0]

	// Get the fifo number where the data frame is stored
	uint32_t fifoNumber = ((CAN->RF0R & CAN_RF0R_FMP0) != 0U) ? 0 : 1;
 8003dfc:	4ba7      	ldr	r3, [pc, #668]	; (800409c <receiveDataFrame+0x2f4>)
 8003dfe:	68db      	ldr	r3, [r3, #12]
 8003e00:	2203      	movs	r2, #3
 8003e02:	4013      	ands	r3, r2
 8003e04:	425a      	negs	r2, r3
 8003e06:	4153      	adcs	r3, r2
 8003e08:	b2db      	uxtb	r3, r3
 8003e0a:	61fb      	str	r3, [r7, #28]
	printf("The data frame was store into the fifo %ld \r\n", fifoNumber);
 8003e0c:	69fa      	ldr	r2, [r7, #28]
 8003e0e:	4ba4      	ldr	r3, [pc, #656]	; (80040a0 <receiveDataFrame+0x2f8>)
 8003e10:	0011      	movs	r1, r2
 8003e12:	0018      	movs	r0, r3
 8003e14:	f002 fdbc 	bl	8006990 <iprintf>

	// Get the id of the received data frame
	uint32_t receivedDataFrameId = (CAN_RI0R_STID & CAN->sFIFOMailBox[fifoNumber].RIR) >> CAN_TI0R_STID_Pos;
 8003e18:	4aa0      	ldr	r2, [pc, #640]	; (800409c <receiveDataFrame+0x2f4>)
 8003e1a:	69fb      	ldr	r3, [r7, #28]
 8003e1c:	331b      	adds	r3, #27
 8003e1e:	011b      	lsls	r3, r3, #4
 8003e20:	589b      	ldr	r3, [r3, r2]
 8003e22:	0d5b      	lsrs	r3, r3, #21
 8003e24:	055b      	lsls	r3, r3, #21
 8003e26:	0d5b      	lsrs	r3, r3, #21
 8003e28:	61bb      	str	r3, [r7, #24]
	printf("The identifier received for the data frame is %ld \r\n", receivedDataFrameId);
 8003e2a:	69ba      	ldr	r2, [r7, #24]
 8003e2c:	4b9d      	ldr	r3, [pc, #628]	; (80040a4 <receiveDataFrame+0x2fc>)
 8003e2e:	0011      	movs	r1, r2
 8003e30:	0018      	movs	r0, r3
 8003e32:	f002 fdad 	bl	8006990 <iprintf>

	// Check if the identifier from the received data frame and the supposed next id to receive are the same
	if(receivedDataFrameId == nextDataFrameId){
 8003e36:	4b98      	ldr	r3, [pc, #608]	; (8004098 <receiveDataFrame+0x2f0>)
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	69ba      	ldr	r2, [r7, #24]
 8003e3c:	429a      	cmp	r2, r3
 8003e3e:	d001      	beq.n	8003e44 <receiveDataFrame+0x9c>
 8003e40:	f000 fdc8 	bl	80049d4 <receiveDataFrame+0xc2c>

		// Get the size of the received data frame
	    uint32_t receivedDataFrameDlc = (CAN_RDT0R_DLC & CAN->sFIFOMailBox[fifoNumber].RDTR) >> CAN_RDT0R_DLC_Pos;
 8003e44:	4a95      	ldr	r2, [pc, #596]	; (800409c <receiveDataFrame+0x2f4>)
 8003e46:	69fb      	ldr	r3, [r7, #28]
 8003e48:	331b      	adds	r3, #27
 8003e4a:	011b      	lsls	r3, r3, #4
 8003e4c:	18d3      	adds	r3, r2, r3
 8003e4e:	3304      	adds	r3, #4
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	220f      	movs	r2, #15
 8003e54:	4013      	ands	r3, r2
 8003e56:	617b      	str	r3, [r7, #20]
	    printf("The size from the received data frame is %ld bytes \r\n",receivedDataFrameDlc);
 8003e58:	697a      	ldr	r2, [r7, #20]
 8003e5a:	4b93      	ldr	r3, [pc, #588]	; (80040a8 <receiveDataFrame+0x300>)
 8003e5c:	0011      	movs	r1, r2
 8003e5e:	0018      	movs	r0, r3
 8003e60:	f002 fd96 	bl	8006990 <iprintf>

	    // Check if the data lenght received and the supposed next data lenght to receive are same
	    if(receivedDataFrameDlc == (nbBytesCanFrame[nextDataFrameId - 1])){
 8003e64:	4b8c      	ldr	r3, [pc, #560]	; (8004098 <receiveDataFrame+0x2f0>)
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	1e5a      	subs	r2, r3, #1
 8003e6a:	4b90      	ldr	r3, [pc, #576]	; (80040ac <receiveDataFrame+0x304>)
 8003e6c:	0092      	lsls	r2, r2, #2
 8003e6e:	58d3      	ldr	r3, [r2, r3]
 8003e70:	697a      	ldr	r2, [r7, #20]
 8003e72:	429a      	cmp	r2, r3
 8003e74:	d001      	beq.n	8003e7a <receiveDataFrame+0xd2>
 8003e76:	f000 fda8 	bl	80049ca <receiveDataFrame+0xc22>

	    	printf("The received data frame has the right size \r\n");
 8003e7a:	4b8d      	ldr	r3, [pc, #564]	; (80040b0 <receiveDataFrame+0x308>)
 8003e7c:	0018      	movs	r0, r3
 8003e7e:	f002 fe01 	bl	8006a84 <puts>

	    	printf("********** RECEIVE DATA FRAME WITH ID N°%ld FOR PASS N°%ld **********\r\n", nextDataFrameId, (passNumberToUpdate + 1));
 8003e82:	4b85      	ldr	r3, [pc, #532]	; (8004098 <receiveDataFrame+0x2f0>)
 8003e84:	6819      	ldr	r1, [r3, #0]
 8003e86:	4b83      	ldr	r3, [pc, #524]	; (8004094 <receiveDataFrame+0x2ec>)
 8003e88:	681b      	ldr	r3, [r3, #0]
 8003e8a:	1c5a      	adds	r2, r3, #1
 8003e8c:	4b89      	ldr	r3, [pc, #548]	; (80040b4 <receiveDataFrame+0x30c>)
 8003e8e:	0018      	movs	r0, r3
 8003e90:	f002 fd7e 	bl	8006990 <iprintf>

	    	switch (nextDataFrameId){
 8003e94:	4b80      	ldr	r3, [pc, #512]	; (8004098 <receiveDataFrame+0x2f0>)
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	2b06      	cmp	r3, #6
 8003e9a:	d901      	bls.n	8003ea0 <receiveDataFrame+0xf8>
 8003e9c:	f000 fd87 	bl	80049ae <receiveDataFrame+0xc06>
 8003ea0:	009a      	lsls	r2, r3, #2
 8003ea2:	4b85      	ldr	r3, [pc, #532]	; (80040b8 <receiveDataFrame+0x310>)
 8003ea4:	18d3      	adds	r3, r2, r3
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	469f      	mov	pc, r3
	    		uint32_t hundreds, milli, minuteUnit, minuteTeens, second;

	    		// Get the AOS date
	    		case 1:

	    			passes[passNumberToUpdate].passTime.year =  concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ); // Year
 8003eaa:	4a7c      	ldr	r2, [pc, #496]	; (800409c <receiveDataFrame+0x2f4>)
 8003eac:	23dc      	movs	r3, #220	; 0xdc
 8003eae:	005b      	lsls	r3, r3, #1
 8003eb0:	58d3      	ldr	r3, [r2, r3]
 8003eb2:	b2db      	uxtb	r3, r3
 8003eb4:	3b30      	subs	r3, #48	; 0x30
 8003eb6:	0018      	movs	r0, r3
 8003eb8:	4a78      	ldr	r2, [pc, #480]	; (800409c <receiveDataFrame+0x2f4>)
 8003eba:	23dc      	movs	r3, #220	; 0xdc
 8003ebc:	005b      	lsls	r3, r3, #1
 8003ebe:	58d3      	ldr	r3, [r2, r3]
 8003ec0:	0a1b      	lsrs	r3, r3, #8
 8003ec2:	b2db      	uxtb	r3, r3
 8003ec4:	3b30      	subs	r3, #48	; 0x30
 8003ec6:	0019      	movs	r1, r3
 8003ec8:	f7ff ff48 	bl	8003d5c <concat>
 8003ecc:	0001      	movs	r1, r0
 8003ece:	4b71      	ldr	r3, [pc, #452]	; (8004094 <receiveDataFrame+0x2ec>)
 8003ed0:	681a      	ldr	r2, [r3, #0]
 8003ed2:	0008      	movs	r0, r1
 8003ed4:	4b79      	ldr	r3, [pc, #484]	; (80040bc <receiveDataFrame+0x314>)
 8003ed6:	2164      	movs	r1, #100	; 0x64
 8003ed8:	434a      	muls	r2, r1
 8003eda:	50d0      	str	r0, [r2, r3]
	    			printf("The AOS date year is : %ld\r\n", passes[passNumberToUpdate].passTime.year);
 8003edc:	4b6d      	ldr	r3, [pc, #436]	; (8004094 <receiveDataFrame+0x2ec>)
 8003ede:	681a      	ldr	r2, [r3, #0]
 8003ee0:	4b76      	ldr	r3, [pc, #472]	; (80040bc <receiveDataFrame+0x314>)
 8003ee2:	2164      	movs	r1, #100	; 0x64
 8003ee4:	434a      	muls	r2, r1
 8003ee6:	58d2      	ldr	r2, [r2, r3]
 8003ee8:	4b75      	ldr	r3, [pc, #468]	; (80040c0 <receiveDataFrame+0x318>)
 8003eea:	0011      	movs	r1, r2
 8003eec:	0018      	movs	r0, r3
 8003eee:	f002 fd4f 	bl	8006990 <iprintf>

	    			passes[passNumberToUpdate].passTime.month = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) ); // Month
 8003ef2:	4a6a      	ldr	r2, [pc, #424]	; (800409c <receiveDataFrame+0x2f4>)
 8003ef4:	23dc      	movs	r3, #220	; 0xdc
 8003ef6:	005b      	lsls	r3, r3, #1
 8003ef8:	58d3      	ldr	r3, [r2, r3]
 8003efa:	0e1b      	lsrs	r3, r3, #24
 8003efc:	b2db      	uxtb	r3, r3
 8003efe:	3b30      	subs	r3, #48	; 0x30
 8003f00:	0018      	movs	r0, r3
 8003f02:	4a66      	ldr	r2, [pc, #408]	; (800409c <receiveDataFrame+0x2f4>)
 8003f04:	23de      	movs	r3, #222	; 0xde
 8003f06:	005b      	lsls	r3, r3, #1
 8003f08:	58d3      	ldr	r3, [r2, r3]
 8003f0a:	b2db      	uxtb	r3, r3
 8003f0c:	3b30      	subs	r3, #48	; 0x30
 8003f0e:	0019      	movs	r1, r3
 8003f10:	f7ff ff24 	bl	8003d5c <concat>
 8003f14:	0002      	movs	r2, r0
 8003f16:	4b5f      	ldr	r3, [pc, #380]	; (8004094 <receiveDataFrame+0x2ec>)
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	0010      	movs	r0, r2
 8003f1c:	4a67      	ldr	r2, [pc, #412]	; (80040bc <receiveDataFrame+0x314>)
 8003f1e:	2164      	movs	r1, #100	; 0x64
 8003f20:	434b      	muls	r3, r1
 8003f22:	18d3      	adds	r3, r2, r3
 8003f24:	3304      	adds	r3, #4
 8003f26:	6018      	str	r0, [r3, #0]
	    			printf("The AOS date month is : %ld\r\n", passes[passNumberToUpdate].passTime.month);
 8003f28:	4b5a      	ldr	r3, [pc, #360]	; (8004094 <receiveDataFrame+0x2ec>)
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	4a63      	ldr	r2, [pc, #396]	; (80040bc <receiveDataFrame+0x314>)
 8003f2e:	2164      	movs	r1, #100	; 0x64
 8003f30:	434b      	muls	r3, r1
 8003f32:	18d3      	adds	r3, r2, r3
 8003f34:	3304      	adds	r3, #4
 8003f36:	681a      	ldr	r2, [r3, #0]
 8003f38:	4b62      	ldr	r3, [pc, #392]	; (80040c4 <receiveDataFrame+0x31c>)
 8003f3a:	0011      	movs	r1, r2
 8003f3c:	0018      	movs	r0, r3
 8003f3e:	f002 fd27 	bl	8006990 <iprintf>

	    			passes[passNumberToUpdate].passTime.day = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA6 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA6_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA7 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA7_Pos) ) - '0' ) ); // Day
 8003f42:	4a56      	ldr	r2, [pc, #344]	; (800409c <receiveDataFrame+0x2f4>)
 8003f44:	23de      	movs	r3, #222	; 0xde
 8003f46:	005b      	lsls	r3, r3, #1
 8003f48:	58d3      	ldr	r3, [r2, r3]
 8003f4a:	0c1b      	lsrs	r3, r3, #16
 8003f4c:	b2db      	uxtb	r3, r3
 8003f4e:	3b30      	subs	r3, #48	; 0x30
 8003f50:	0018      	movs	r0, r3
 8003f52:	4a52      	ldr	r2, [pc, #328]	; (800409c <receiveDataFrame+0x2f4>)
 8003f54:	23de      	movs	r3, #222	; 0xde
 8003f56:	005b      	lsls	r3, r3, #1
 8003f58:	58d3      	ldr	r3, [r2, r3]
 8003f5a:	0e1b      	lsrs	r3, r3, #24
 8003f5c:	b2db      	uxtb	r3, r3
 8003f5e:	3b30      	subs	r3, #48	; 0x30
 8003f60:	0019      	movs	r1, r3
 8003f62:	f7ff fefb 	bl	8003d5c <concat>
 8003f66:	0002      	movs	r2, r0
 8003f68:	4b4a      	ldr	r3, [pc, #296]	; (8004094 <receiveDataFrame+0x2ec>)
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	0010      	movs	r0, r2
 8003f6e:	4a53      	ldr	r2, [pc, #332]	; (80040bc <receiveDataFrame+0x314>)
 8003f70:	2164      	movs	r1, #100	; 0x64
 8003f72:	434b      	muls	r3, r1
 8003f74:	18d3      	adds	r3, r2, r3
 8003f76:	3308      	adds	r3, #8
 8003f78:	6018      	str	r0, [r3, #0]
	    			printf("The AOS date day is : %ld\r\n", passes[passNumberToUpdate].passTime.day);
 8003f7a:	4b46      	ldr	r3, [pc, #280]	; (8004094 <receiveDataFrame+0x2ec>)
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	4a4f      	ldr	r2, [pc, #316]	; (80040bc <receiveDataFrame+0x314>)
 8003f80:	2164      	movs	r1, #100	; 0x64
 8003f82:	434b      	muls	r3, r1
 8003f84:	18d3      	adds	r3, r2, r3
 8003f86:	3308      	adds	r3, #8
 8003f88:	681a      	ldr	r2, [r3, #0]
 8003f8a:	4b4f      	ldr	r3, [pc, #316]	; (80040c8 <receiveDataFrame+0x320>)
 8003f8c:	0011      	movs	r1, r2
 8003f8e:	0018      	movs	r0, r3
 8003f90:	f002 fcfe 	bl	8006990 <iprintf>

	    			break;
 8003f94:	f000 fd0b 	bl	80049ae <receiveDataFrame+0xc06>

	    		// Get the AOS time
	    		case 2:

	    			passes[passNumberToUpdate].passTime.hour =  concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ); // Year
 8003f98:	4a40      	ldr	r2, [pc, #256]	; (800409c <receiveDataFrame+0x2f4>)
 8003f9a:	23dc      	movs	r3, #220	; 0xdc
 8003f9c:	005b      	lsls	r3, r3, #1
 8003f9e:	58d3      	ldr	r3, [r2, r3]
 8003fa0:	b2db      	uxtb	r3, r3
 8003fa2:	3b30      	subs	r3, #48	; 0x30
 8003fa4:	0018      	movs	r0, r3
 8003fa6:	4a3d      	ldr	r2, [pc, #244]	; (800409c <receiveDataFrame+0x2f4>)
 8003fa8:	23dc      	movs	r3, #220	; 0xdc
 8003faa:	005b      	lsls	r3, r3, #1
 8003fac:	58d3      	ldr	r3, [r2, r3]
 8003fae:	0a1b      	lsrs	r3, r3, #8
 8003fb0:	b2db      	uxtb	r3, r3
 8003fb2:	3b30      	subs	r3, #48	; 0x30
 8003fb4:	0019      	movs	r1, r3
 8003fb6:	f7ff fed1 	bl	8003d5c <concat>
 8003fba:	0002      	movs	r2, r0
 8003fbc:	4b35      	ldr	r3, [pc, #212]	; (8004094 <receiveDataFrame+0x2ec>)
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	0010      	movs	r0, r2
 8003fc2:	4a3e      	ldr	r2, [pc, #248]	; (80040bc <receiveDataFrame+0x314>)
 8003fc4:	2164      	movs	r1, #100	; 0x64
 8003fc6:	434b      	muls	r3, r1
 8003fc8:	18d3      	adds	r3, r2, r3
 8003fca:	330c      	adds	r3, #12
 8003fcc:	6018      	str	r0, [r3, #0]
	    			printf("The AOS time hour is : %ld\r\n", passes[passNumberToUpdate].passTime.hour);
 8003fce:	4b31      	ldr	r3, [pc, #196]	; (8004094 <receiveDataFrame+0x2ec>)
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	4a3a      	ldr	r2, [pc, #232]	; (80040bc <receiveDataFrame+0x314>)
 8003fd4:	2164      	movs	r1, #100	; 0x64
 8003fd6:	434b      	muls	r3, r1
 8003fd8:	18d3      	adds	r3, r2, r3
 8003fda:	330c      	adds	r3, #12
 8003fdc:	681a      	ldr	r2, [r3, #0]
 8003fde:	4b3b      	ldr	r3, [pc, #236]	; (80040cc <receiveDataFrame+0x324>)
 8003fe0:	0011      	movs	r1, r2
 8003fe2:	0018      	movs	r0, r3
 8003fe4:	f002 fcd4 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].passTime.minute = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) ); // Month
 8003fe8:	4a2c      	ldr	r2, [pc, #176]	; (800409c <receiveDataFrame+0x2f4>)
 8003fea:	23dc      	movs	r3, #220	; 0xdc
 8003fec:	005b      	lsls	r3, r3, #1
 8003fee:	58d3      	ldr	r3, [r2, r3]
 8003ff0:	0e1b      	lsrs	r3, r3, #24
 8003ff2:	b2db      	uxtb	r3, r3
 8003ff4:	3b30      	subs	r3, #48	; 0x30
 8003ff6:	0018      	movs	r0, r3
 8003ff8:	4a28      	ldr	r2, [pc, #160]	; (800409c <receiveDataFrame+0x2f4>)
 8003ffa:	23de      	movs	r3, #222	; 0xde
 8003ffc:	005b      	lsls	r3, r3, #1
 8003ffe:	58d3      	ldr	r3, [r2, r3]
 8004000:	b2db      	uxtb	r3, r3
 8004002:	3b30      	subs	r3, #48	; 0x30
 8004004:	0019      	movs	r1, r3
 8004006:	f7ff fea9 	bl	8003d5c <concat>
 800400a:	0002      	movs	r2, r0
 800400c:	4b21      	ldr	r3, [pc, #132]	; (8004094 <receiveDataFrame+0x2ec>)
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	0010      	movs	r0, r2
 8004012:	4a2a      	ldr	r2, [pc, #168]	; (80040bc <receiveDataFrame+0x314>)
 8004014:	2164      	movs	r1, #100	; 0x64
 8004016:	434b      	muls	r3, r1
 8004018:	18d3      	adds	r3, r2, r3
 800401a:	3310      	adds	r3, #16
 800401c:	6018      	str	r0, [r3, #0]
	    			printf("The AOS time minute is : %ld\r\n", passes[passNumberToUpdate].passTime.minute);
 800401e:	4b1d      	ldr	r3, [pc, #116]	; (8004094 <receiveDataFrame+0x2ec>)
 8004020:	681b      	ldr	r3, [r3, #0]
 8004022:	4a26      	ldr	r2, [pc, #152]	; (80040bc <receiveDataFrame+0x314>)
 8004024:	2164      	movs	r1, #100	; 0x64
 8004026:	434b      	muls	r3, r1
 8004028:	18d3      	adds	r3, r2, r3
 800402a:	3310      	adds	r3, #16
 800402c:	681a      	ldr	r2, [r3, #0]
 800402e:	4b28      	ldr	r3, [pc, #160]	; (80040d0 <receiveDataFrame+0x328>)
 8004030:	0011      	movs	r1, r2
 8004032:	0018      	movs	r0, r3
 8004034:	f002 fcac 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].passTime.second = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA6 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA6_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA7 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA7_Pos) ) - '0' ) ); // Day
 8004038:	4a18      	ldr	r2, [pc, #96]	; (800409c <receiveDataFrame+0x2f4>)
 800403a:	23de      	movs	r3, #222	; 0xde
 800403c:	005b      	lsls	r3, r3, #1
 800403e:	58d3      	ldr	r3, [r2, r3]
 8004040:	0c1b      	lsrs	r3, r3, #16
 8004042:	b2db      	uxtb	r3, r3
 8004044:	3b30      	subs	r3, #48	; 0x30
 8004046:	0018      	movs	r0, r3
 8004048:	4a14      	ldr	r2, [pc, #80]	; (800409c <receiveDataFrame+0x2f4>)
 800404a:	23de      	movs	r3, #222	; 0xde
 800404c:	005b      	lsls	r3, r3, #1
 800404e:	58d3      	ldr	r3, [r2, r3]
 8004050:	0e1b      	lsrs	r3, r3, #24
 8004052:	b2db      	uxtb	r3, r3
 8004054:	3b30      	subs	r3, #48	; 0x30
 8004056:	0019      	movs	r1, r3
 8004058:	f7ff fe80 	bl	8003d5c <concat>
 800405c:	0002      	movs	r2, r0
 800405e:	4b0d      	ldr	r3, [pc, #52]	; (8004094 <receiveDataFrame+0x2ec>)
 8004060:	681b      	ldr	r3, [r3, #0]
 8004062:	0010      	movs	r0, r2
 8004064:	4a15      	ldr	r2, [pc, #84]	; (80040bc <receiveDataFrame+0x314>)
 8004066:	2164      	movs	r1, #100	; 0x64
 8004068:	434b      	muls	r3, r1
 800406a:	18d3      	adds	r3, r2, r3
 800406c:	3314      	adds	r3, #20
 800406e:	6018      	str	r0, [r3, #0]
	    			printf("The AOS time second is : %ld\r\n", passes[passNumberToUpdate].passTime.second);
 8004070:	4b08      	ldr	r3, [pc, #32]	; (8004094 <receiveDataFrame+0x2ec>)
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	4a11      	ldr	r2, [pc, #68]	; (80040bc <receiveDataFrame+0x314>)
 8004076:	2164      	movs	r1, #100	; 0x64
 8004078:	434b      	muls	r3, r1
 800407a:	18d3      	adds	r3, r2, r3
 800407c:	3314      	adds	r3, #20
 800407e:	681a      	ldr	r2, [r3, #0]
 8004080:	4b14      	ldr	r3, [pc, #80]	; (80040d4 <receiveDataFrame+0x32c>)
 8004082:	0011      	movs	r1, r2
 8004084:	0018      	movs	r0, r3
 8004086:	f002 fc83 	bl	8006990 <iprintf>
	    			break;
 800408a:	f000 fc90 	bl	80049ae <receiveDataFrame+0xc06>
 800408e:	46c0      	nop			; (mov r8, r8)
 8004090:	20000274 	.word	0x20000274
 8004094:	20000280 	.word	0x20000280
 8004098:	2000027c 	.word	0x2000027c
 800409c:	40006400 	.word	0x40006400
 80040a0:	0800af60 	.word	0x0800af60
 80040a4:	0800af90 	.word	0x0800af90
 80040a8:	0800afc8 	.word	0x0800afc8
 80040ac:	20000000 	.word	0x20000000
 80040b0:	0800b000 	.word	0x0800b000
 80040b4:	0800b030 	.word	0x0800b030
 80040b8:	0800bcf4 	.word	0x0800bcf4
 80040bc:	20000284 	.word	0x20000284
 80040c0:	0800b07c 	.word	0x0800b07c
 80040c4:	0800b09c 	.word	0x0800b09c
 80040c8:	0800b0bc 	.word	0x0800b0bc
 80040cc:	0800b0d8 	.word	0x0800b0d8
 80040d0:	0800b0f8 	.word	0x0800b0f8
 80040d4:	0800b118 	.word	0x0800b118

	    		// Get the transit time
	    		case 3:
	    			minuteUnit = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) );
 80040d8:	4aeb      	ldr	r2, [pc, #940]	; (8004488 <receiveDataFrame+0x6e0>)
 80040da:	23dc      	movs	r3, #220	; 0xdc
 80040dc:	005b      	lsls	r3, r3, #1
 80040de:	58d3      	ldr	r3, [r2, r3]
 80040e0:	b2db      	uxtb	r3, r3
 80040e2:	3b30      	subs	r3, #48	; 0x30
 80040e4:	0018      	movs	r0, r3
 80040e6:	4ae8      	ldr	r2, [pc, #928]	; (8004488 <receiveDataFrame+0x6e0>)
 80040e8:	23dc      	movs	r3, #220	; 0xdc
 80040ea:	005b      	lsls	r3, r3, #1
 80040ec:	58d3      	ldr	r3, [r2, r3]
 80040ee:	0a1b      	lsrs	r3, r3, #8
 80040f0:	b2db      	uxtb	r3, r3
 80040f2:	3b30      	subs	r3, #48	; 0x30
 80040f4:	0019      	movs	r1, r3
 80040f6:	f7ff fe31 	bl	8003d5c <concat>
 80040fa:	0003      	movs	r3, r0
 80040fc:	60bb      	str	r3, [r7, #8]
	    			printf("The transit time minute unit is : %ld\r\n", minuteUnit);
 80040fe:	68ba      	ldr	r2, [r7, #8]
 8004100:	4be2      	ldr	r3, [pc, #904]	; (800448c <receiveDataFrame+0x6e4>)
 8004102:	0011      	movs	r1, r2
 8004104:	0018      	movs	r0, r3
 8004106:	f002 fc43 	bl	8006990 <iprintf>
	    			minuteTeens = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) );
 800410a:	4adf      	ldr	r2, [pc, #892]	; (8004488 <receiveDataFrame+0x6e0>)
 800410c:	23dc      	movs	r3, #220	; 0xdc
 800410e:	005b      	lsls	r3, r3, #1
 8004110:	58d3      	ldr	r3, [r2, r3]
 8004112:	0e1b      	lsrs	r3, r3, #24
 8004114:	b2db      	uxtb	r3, r3
 8004116:	3b30      	subs	r3, #48	; 0x30
 8004118:	0018      	movs	r0, r3
 800411a:	4adb      	ldr	r2, [pc, #876]	; (8004488 <receiveDataFrame+0x6e0>)
 800411c:	23de      	movs	r3, #222	; 0xde
 800411e:	005b      	lsls	r3, r3, #1
 8004120:	58d3      	ldr	r3, [r2, r3]
 8004122:	b2db      	uxtb	r3, r3
 8004124:	3b30      	subs	r3, #48	; 0x30
 8004126:	0019      	movs	r1, r3
 8004128:	f7ff fe18 	bl	8003d5c <concat>
 800412c:	0003      	movs	r3, r0
 800412e:	607b      	str	r3, [r7, #4]
	    			printf("The transit time minute teens is : %ld\r\n", minuteTeens);
 8004130:	687a      	ldr	r2, [r7, #4]
 8004132:	4bd7      	ldr	r3, [pc, #860]	; (8004490 <receiveDataFrame+0x6e8>)
 8004134:	0011      	movs	r1, r2
 8004136:	0018      	movs	r0, r3
 8004138:	f002 fc2a 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].transitTimeMinute = floorf( ( minuteUnit + (minuteTeens /100.f) ) * 100000 ) / 100000;
 800413c:	68b8      	ldr	r0, [r7, #8]
 800413e:	f7fd f8e7 	bl	8001310 <__aeabi_ui2f>
 8004142:	1c04      	adds	r4, r0, #0
 8004144:	6878      	ldr	r0, [r7, #4]
 8004146:	f7fd f8e3 	bl	8001310 <__aeabi_ui2f>
 800414a:	1c03      	adds	r3, r0, #0
 800414c:	49d1      	ldr	r1, [pc, #836]	; (8004494 <receiveDataFrame+0x6ec>)
 800414e:	1c18      	adds	r0, r3, #0
 8004150:	f7fc fc10 	bl	8000974 <__aeabi_fdiv>
 8004154:	1c03      	adds	r3, r0, #0
 8004156:	1c19      	adds	r1, r3, #0
 8004158:	1c20      	adds	r0, r4, #0
 800415a:	f7fc fa71 	bl	8000640 <__aeabi_fadd>
 800415e:	1c03      	adds	r3, r0, #0
 8004160:	49cd      	ldr	r1, [pc, #820]	; (8004498 <receiveDataFrame+0x6f0>)
 8004162:	1c18      	adds	r0, r3, #0
 8004164:	f7fc fdde 	bl	8000d24 <__aeabi_fmul>
 8004168:	1c03      	adds	r3, r0, #0
 800416a:	1c18      	adds	r0, r3, #0
 800416c:	f006 fdd0 	bl	800ad10 <floorf>
 8004170:	1c02      	adds	r2, r0, #0
 8004172:	4bca      	ldr	r3, [pc, #808]	; (800449c <receiveDataFrame+0x6f4>)
 8004174:	681c      	ldr	r4, [r3, #0]
 8004176:	49c8      	ldr	r1, [pc, #800]	; (8004498 <receiveDataFrame+0x6f0>)
 8004178:	1c10      	adds	r0, r2, #0
 800417a:	f7fc fbfb 	bl	8000974 <__aeabi_fdiv>
 800417e:	1c03      	adds	r3, r0, #0
 8004180:	1c19      	adds	r1, r3, #0
 8004182:	4ac7      	ldr	r2, [pc, #796]	; (80044a0 <receiveDataFrame+0x6f8>)
 8004184:	2364      	movs	r3, #100	; 0x64
 8004186:	4363      	muls	r3, r4
 8004188:	18d3      	adds	r3, r2, r3
 800418a:	3318      	adds	r3, #24
 800418c:	6019      	str	r1, [r3, #0]
	    			printf("The total transit time minute is : %f\r\n", passes[passNumberToUpdate].transitTimeMinute);
 800418e:	4bc3      	ldr	r3, [pc, #780]	; (800449c <receiveDataFrame+0x6f4>)
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	4ac3      	ldr	r2, [pc, #780]	; (80044a0 <receiveDataFrame+0x6f8>)
 8004194:	2164      	movs	r1, #100	; 0x64
 8004196:	434b      	muls	r3, r1
 8004198:	18d3      	adds	r3, r2, r3
 800419a:	3318      	adds	r3, #24
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	1c18      	adds	r0, r3, #0
 80041a0:	f7fe fe94 	bl	8002ecc <__aeabi_f2d>
 80041a4:	0003      	movs	r3, r0
 80041a6:	000c      	movs	r4, r1
 80041a8:	49be      	ldr	r1, [pc, #760]	; (80044a4 <receiveDataFrame+0x6fc>)
 80041aa:	001a      	movs	r2, r3
 80041ac:	0023      	movs	r3, r4
 80041ae:	0008      	movs	r0, r1
 80041b0:	f002 fbee 	bl	8006990 <iprintf>

	    			second = ( (float) (passes[passNumberToUpdate].transitTimeMinute) ) * 60.0 ;
 80041b4:	4bb9      	ldr	r3, [pc, #740]	; (800449c <receiveDataFrame+0x6f4>)
 80041b6:	681b      	ldr	r3, [r3, #0]
 80041b8:	4ab9      	ldr	r2, [pc, #740]	; (80044a0 <receiveDataFrame+0x6f8>)
 80041ba:	2164      	movs	r1, #100	; 0x64
 80041bc:	434b      	muls	r3, r1
 80041be:	18d3      	adds	r3, r2, r3
 80041c0:	3318      	adds	r3, #24
 80041c2:	681b      	ldr	r3, [r3, #0]
 80041c4:	1c18      	adds	r0, r3, #0
 80041c6:	f7fe fe81 	bl	8002ecc <__aeabi_f2d>
 80041ca:	2200      	movs	r2, #0
 80041cc:	4bb6      	ldr	r3, [pc, #728]	; (80044a8 <receiveDataFrame+0x700>)
 80041ce:	f7fe f805 	bl	80021dc <__aeabi_dmul>
 80041d2:	0003      	movs	r3, r0
 80041d4:	000c      	movs	r4, r1
 80041d6:	0018      	movs	r0, r3
 80041d8:	0021      	movs	r1, r4
 80041da:	f7fc f9f7 	bl	80005cc <__aeabi_d2uiz>
 80041de:	0003      	movs	r3, r0
 80041e0:	603b      	str	r3, [r7, #0]
	    			passes[passNumberToUpdate].transitTimeSecond = floorf( second * 100000 ) / 100000;
 80041e2:	683b      	ldr	r3, [r7, #0]
 80041e4:	4ab1      	ldr	r2, [pc, #708]	; (80044ac <receiveDataFrame+0x704>)
 80041e6:	4353      	muls	r3, r2
 80041e8:	0018      	movs	r0, r3
 80041ea:	f7fd f891 	bl	8001310 <__aeabi_ui2f>
 80041ee:	1c02      	adds	r2, r0, #0
 80041f0:	4baa      	ldr	r3, [pc, #680]	; (800449c <receiveDataFrame+0x6f4>)
 80041f2:	681c      	ldr	r4, [r3, #0]
 80041f4:	49a8      	ldr	r1, [pc, #672]	; (8004498 <receiveDataFrame+0x6f0>)
 80041f6:	1c10      	adds	r0, r2, #0
 80041f8:	f7fc fbbc 	bl	8000974 <__aeabi_fdiv>
 80041fc:	1c03      	adds	r3, r0, #0
 80041fe:	1c19      	adds	r1, r3, #0
 8004200:	4aa7      	ldr	r2, [pc, #668]	; (80044a0 <receiveDataFrame+0x6f8>)
 8004202:	2364      	movs	r3, #100	; 0x64
 8004204:	4363      	muls	r3, r4
 8004206:	18d3      	adds	r3, r2, r3
 8004208:	331c      	adds	r3, #28
 800420a:	6019      	str	r1, [r3, #0]
	    			printf("The total transit time second is : %f\r\n", passes[passNumberToUpdate].transitTimeSecond);
 800420c:	4ba3      	ldr	r3, [pc, #652]	; (800449c <receiveDataFrame+0x6f4>)
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	4aa3      	ldr	r2, [pc, #652]	; (80044a0 <receiveDataFrame+0x6f8>)
 8004212:	2164      	movs	r1, #100	; 0x64
 8004214:	434b      	muls	r3, r1
 8004216:	18d3      	adds	r3, r2, r3
 8004218:	331c      	adds	r3, #28
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	1c18      	adds	r0, r3, #0
 800421e:	f7fe fe55 	bl	8002ecc <__aeabi_f2d>
 8004222:	0003      	movs	r3, r0
 8004224:	000c      	movs	r4, r1
 8004226:	49a2      	ldr	r1, [pc, #648]	; (80044b0 <receiveDataFrame+0x708>)
 8004228:	001a      	movs	r2, r3
 800422a:	0023      	movs	r3, r4
 800422c:	0008      	movs	r0, r1
 800422e:	f002 fbaf 	bl	8006990 <iprintf>
	    			break;
 8004232:	e3bc      	b.n	80049ae <receiveDataFrame+0xc06>

	    		// Get the start point AZ
	    		case 4:

	    			hundreds = concat ( concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA2 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA2_Pos) ) - '0' ) );
 8004234:	4a94      	ldr	r2, [pc, #592]	; (8004488 <receiveDataFrame+0x6e0>)
 8004236:	23dc      	movs	r3, #220	; 0xdc
 8004238:	005b      	lsls	r3, r3, #1
 800423a:	58d3      	ldr	r3, [r2, r3]
 800423c:	b2db      	uxtb	r3, r3
 800423e:	3b30      	subs	r3, #48	; 0x30
 8004240:	0018      	movs	r0, r3
 8004242:	4a91      	ldr	r2, [pc, #580]	; (8004488 <receiveDataFrame+0x6e0>)
 8004244:	23dc      	movs	r3, #220	; 0xdc
 8004246:	005b      	lsls	r3, r3, #1
 8004248:	58d3      	ldr	r3, [r2, r3]
 800424a:	0a1b      	lsrs	r3, r3, #8
 800424c:	b2db      	uxtb	r3, r3
 800424e:	3b30      	subs	r3, #48	; 0x30
 8004250:	0019      	movs	r1, r3
 8004252:	f7ff fd83 	bl	8003d5c <concat>
 8004256:	4a8c      	ldr	r2, [pc, #560]	; (8004488 <receiveDataFrame+0x6e0>)
 8004258:	23dc      	movs	r3, #220	; 0xdc
 800425a:	005b      	lsls	r3, r3, #1
 800425c:	58d3      	ldr	r3, [r2, r3]
 800425e:	0c1b      	lsrs	r3, r3, #16
 8004260:	b2db      	uxtb	r3, r3
 8004262:	3b30      	subs	r3, #48	; 0x30
 8004264:	0019      	movs	r1, r3
 8004266:	f7ff fd79 	bl	8003d5c <concat>
 800426a:	0003      	movs	r3, r0
 800426c:	613b      	str	r3, [r7, #16]
	    			printf("The hundreds from the start point are : %ld\r\n", hundreds);
 800426e:	693a      	ldr	r2, [r7, #16]
 8004270:	4b90      	ldr	r3, [pc, #576]	; (80044b4 <receiveDataFrame+0x70c>)
 8004272:	0011      	movs	r1, r2
 8004274:	0018      	movs	r0, r3
 8004276:	f002 fb8b 	bl	8006990 <iprintf>
	    			milli = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA5 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA5_Pos) ) - '0' ) );
 800427a:	4a83      	ldr	r2, [pc, #524]	; (8004488 <receiveDataFrame+0x6e0>)
 800427c:	23de      	movs	r3, #222	; 0xde
 800427e:	005b      	lsls	r3, r3, #1
 8004280:	58d3      	ldr	r3, [r2, r3]
 8004282:	b2db      	uxtb	r3, r3
 8004284:	3b30      	subs	r3, #48	; 0x30
 8004286:	0018      	movs	r0, r3
 8004288:	4a7f      	ldr	r2, [pc, #508]	; (8004488 <receiveDataFrame+0x6e0>)
 800428a:	23de      	movs	r3, #222	; 0xde
 800428c:	005b      	lsls	r3, r3, #1
 800428e:	58d3      	ldr	r3, [r2, r3]
 8004290:	0a1b      	lsrs	r3, r3, #8
 8004292:	b2db      	uxtb	r3, r3
 8004294:	3b30      	subs	r3, #48	; 0x30
 8004296:	0019      	movs	r1, r3
 8004298:	f7ff fd60 	bl	8003d5c <concat>
 800429c:	0003      	movs	r3, r0
 800429e:	60fb      	str	r3, [r7, #12]
	    			printf("The milli from the start point are : %ld\r\n", milli);
 80042a0:	68fa      	ldr	r2, [r7, #12]
 80042a2:	4b85      	ldr	r3, [pc, #532]	; (80044b8 <receiveDataFrame+0x710>)
 80042a4:	0011      	movs	r1, r2
 80042a6:	0018      	movs	r0, r3
 80042a8:	f002 fb72 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].startPoint.azCoordinate = floorf( ( hundreds + (milli /100.f) ) * 100000 ) / 100000;
 80042ac:	6938      	ldr	r0, [r7, #16]
 80042ae:	f7fd f82f 	bl	8001310 <__aeabi_ui2f>
 80042b2:	1c04      	adds	r4, r0, #0
 80042b4:	68f8      	ldr	r0, [r7, #12]
 80042b6:	f7fd f82b 	bl	8001310 <__aeabi_ui2f>
 80042ba:	1c03      	adds	r3, r0, #0
 80042bc:	4975      	ldr	r1, [pc, #468]	; (8004494 <receiveDataFrame+0x6ec>)
 80042be:	1c18      	adds	r0, r3, #0
 80042c0:	f7fc fb58 	bl	8000974 <__aeabi_fdiv>
 80042c4:	1c03      	adds	r3, r0, #0
 80042c6:	1c19      	adds	r1, r3, #0
 80042c8:	1c20      	adds	r0, r4, #0
 80042ca:	f7fc f9b9 	bl	8000640 <__aeabi_fadd>
 80042ce:	1c03      	adds	r3, r0, #0
 80042d0:	4971      	ldr	r1, [pc, #452]	; (8004498 <receiveDataFrame+0x6f0>)
 80042d2:	1c18      	adds	r0, r3, #0
 80042d4:	f7fc fd26 	bl	8000d24 <__aeabi_fmul>
 80042d8:	1c03      	adds	r3, r0, #0
 80042da:	1c18      	adds	r0, r3, #0
 80042dc:	f006 fd18 	bl	800ad10 <floorf>
 80042e0:	1c02      	adds	r2, r0, #0
 80042e2:	4b6e      	ldr	r3, [pc, #440]	; (800449c <receiveDataFrame+0x6f4>)
 80042e4:	681c      	ldr	r4, [r3, #0]
 80042e6:	496c      	ldr	r1, [pc, #432]	; (8004498 <receiveDataFrame+0x6f0>)
 80042e8:	1c10      	adds	r0, r2, #0
 80042ea:	f7fc fb43 	bl	8000974 <__aeabi_fdiv>
 80042ee:	1c03      	adds	r3, r0, #0
 80042f0:	1c19      	adds	r1, r3, #0
 80042f2:	4a6b      	ldr	r2, [pc, #428]	; (80044a0 <receiveDataFrame+0x6f8>)
 80042f4:	2364      	movs	r3, #100	; 0x64
 80042f6:	4363      	muls	r3, r4
 80042f8:	18d3      	adds	r3, r2, r3
 80042fa:	3320      	adds	r3, #32
 80042fc:	6019      	str	r1, [r3, #0]
	    			printf("The startPoint.azCoordinate is : %f\r\n", passes[passNumberToUpdate].startPoint.azCoordinate);
 80042fe:	4b67      	ldr	r3, [pc, #412]	; (800449c <receiveDataFrame+0x6f4>)
 8004300:	681b      	ldr	r3, [r3, #0]
 8004302:	4a67      	ldr	r2, [pc, #412]	; (80044a0 <receiveDataFrame+0x6f8>)
 8004304:	2164      	movs	r1, #100	; 0x64
 8004306:	434b      	muls	r3, r1
 8004308:	18d3      	adds	r3, r2, r3
 800430a:	3320      	adds	r3, #32
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	1c18      	adds	r0, r3, #0
 8004310:	f7fe fddc 	bl	8002ecc <__aeabi_f2d>
 8004314:	0003      	movs	r3, r0
 8004316:	000c      	movs	r4, r1
 8004318:	4968      	ldr	r1, [pc, #416]	; (80044bc <receiveDataFrame+0x714>)
 800431a:	001a      	movs	r2, r3
 800431c:	0023      	movs	r3, r4
 800431e:	0008      	movs	r0, r1
 8004320:	f002 fb36 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].startPoint.elCoordinate = floorf( 0 * 100000 ) / 100000;
 8004324:	4b5d      	ldr	r3, [pc, #372]	; (800449c <receiveDataFrame+0x6f4>)
 8004326:	681b      	ldr	r3, [r3, #0]
 8004328:	4a5d      	ldr	r2, [pc, #372]	; (80044a0 <receiveDataFrame+0x6f8>)
 800432a:	2164      	movs	r1, #100	; 0x64
 800432c:	434b      	muls	r3, r1
 800432e:	18d3      	adds	r3, r2, r3
 8004330:	3324      	adds	r3, #36	; 0x24
 8004332:	2200      	movs	r2, #0
 8004334:	601a      	str	r2, [r3, #0]
	    			printf("The startPoint.elCoordinate is : %f\r\n", passes[passNumberToUpdate].startPoint.elCoordinate);
 8004336:	4b59      	ldr	r3, [pc, #356]	; (800449c <receiveDataFrame+0x6f4>)
 8004338:	681b      	ldr	r3, [r3, #0]
 800433a:	4a59      	ldr	r2, [pc, #356]	; (80044a0 <receiveDataFrame+0x6f8>)
 800433c:	2164      	movs	r1, #100	; 0x64
 800433e:	434b      	muls	r3, r1
 8004340:	18d3      	adds	r3, r2, r3
 8004342:	3324      	adds	r3, #36	; 0x24
 8004344:	681b      	ldr	r3, [r3, #0]
 8004346:	1c18      	adds	r0, r3, #0
 8004348:	f7fe fdc0 	bl	8002ecc <__aeabi_f2d>
 800434c:	0003      	movs	r3, r0
 800434e:	000c      	movs	r4, r1
 8004350:	495b      	ldr	r1, [pc, #364]	; (80044c0 <receiveDataFrame+0x718>)
 8004352:	001a      	movs	r2, r3
 8004354:	0023      	movs	r3, r4
 8004356:	0008      	movs	r0, r1
 8004358:	f002 fb1a 	bl	8006990 <iprintf>
	    			break;
 800435c:	e327      	b.n	80049ae <receiveDataFrame+0xc06>

	    		// Get the end point AZ
	    		case 5:

	    			hundreds = concat ( concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) ), (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA2 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA2_Pos) ) - '0' ) );
 800435e:	4a4a      	ldr	r2, [pc, #296]	; (8004488 <receiveDataFrame+0x6e0>)
 8004360:	23dc      	movs	r3, #220	; 0xdc
 8004362:	005b      	lsls	r3, r3, #1
 8004364:	58d3      	ldr	r3, [r2, r3]
 8004366:	b2db      	uxtb	r3, r3
 8004368:	3b30      	subs	r3, #48	; 0x30
 800436a:	0018      	movs	r0, r3
 800436c:	4a46      	ldr	r2, [pc, #280]	; (8004488 <receiveDataFrame+0x6e0>)
 800436e:	23dc      	movs	r3, #220	; 0xdc
 8004370:	005b      	lsls	r3, r3, #1
 8004372:	58d3      	ldr	r3, [r2, r3]
 8004374:	0a1b      	lsrs	r3, r3, #8
 8004376:	b2db      	uxtb	r3, r3
 8004378:	3b30      	subs	r3, #48	; 0x30
 800437a:	0019      	movs	r1, r3
 800437c:	f7ff fcee 	bl	8003d5c <concat>
 8004380:	4a41      	ldr	r2, [pc, #260]	; (8004488 <receiveDataFrame+0x6e0>)
 8004382:	23dc      	movs	r3, #220	; 0xdc
 8004384:	005b      	lsls	r3, r3, #1
 8004386:	58d3      	ldr	r3, [r2, r3]
 8004388:	0c1b      	lsrs	r3, r3, #16
 800438a:	b2db      	uxtb	r3, r3
 800438c:	3b30      	subs	r3, #48	; 0x30
 800438e:	0019      	movs	r1, r3
 8004390:	f7ff fce4 	bl	8003d5c <concat>
 8004394:	0003      	movs	r3, r0
 8004396:	613b      	str	r3, [r7, #16]
	    			printf("The hundreds from the end point are : %ld\r\n", hundreds);
 8004398:	693a      	ldr	r2, [r7, #16]
 800439a:	4b4a      	ldr	r3, [pc, #296]	; (80044c4 <receiveDataFrame+0x71c>)
 800439c:	0011      	movs	r1, r2
 800439e:	0018      	movs	r0, r3
 80043a0:	f002 faf6 	bl	8006990 <iprintf>
	    			milli = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA5 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA5_Pos) ) - '0' ) );
 80043a4:	4a38      	ldr	r2, [pc, #224]	; (8004488 <receiveDataFrame+0x6e0>)
 80043a6:	23de      	movs	r3, #222	; 0xde
 80043a8:	005b      	lsls	r3, r3, #1
 80043aa:	58d3      	ldr	r3, [r2, r3]
 80043ac:	b2db      	uxtb	r3, r3
 80043ae:	3b30      	subs	r3, #48	; 0x30
 80043b0:	0018      	movs	r0, r3
 80043b2:	4a35      	ldr	r2, [pc, #212]	; (8004488 <receiveDataFrame+0x6e0>)
 80043b4:	23de      	movs	r3, #222	; 0xde
 80043b6:	005b      	lsls	r3, r3, #1
 80043b8:	58d3      	ldr	r3, [r2, r3]
 80043ba:	0a1b      	lsrs	r3, r3, #8
 80043bc:	b2db      	uxtb	r3, r3
 80043be:	3b30      	subs	r3, #48	; 0x30
 80043c0:	0019      	movs	r1, r3
 80043c2:	f7ff fccb 	bl	8003d5c <concat>
 80043c6:	0003      	movs	r3, r0
 80043c8:	60fb      	str	r3, [r7, #12]
	    			printf("The milli from the end point are : %ld\r\n", milli);
 80043ca:	68fa      	ldr	r2, [r7, #12]
 80043cc:	4b3e      	ldr	r3, [pc, #248]	; (80044c8 <receiveDataFrame+0x720>)
 80043ce:	0011      	movs	r1, r2
 80043d0:	0018      	movs	r0, r3
 80043d2:	f002 fadd 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].endPoint.azCoordinate = floorf( ( hundreds + (milli /100.f) ) * 100000 ) / 100000;
 80043d6:	6938      	ldr	r0, [r7, #16]
 80043d8:	f7fc ff9a 	bl	8001310 <__aeabi_ui2f>
 80043dc:	1c04      	adds	r4, r0, #0
 80043de:	68f8      	ldr	r0, [r7, #12]
 80043e0:	f7fc ff96 	bl	8001310 <__aeabi_ui2f>
 80043e4:	1c03      	adds	r3, r0, #0
 80043e6:	492b      	ldr	r1, [pc, #172]	; (8004494 <receiveDataFrame+0x6ec>)
 80043e8:	1c18      	adds	r0, r3, #0
 80043ea:	f7fc fac3 	bl	8000974 <__aeabi_fdiv>
 80043ee:	1c03      	adds	r3, r0, #0
 80043f0:	1c19      	adds	r1, r3, #0
 80043f2:	1c20      	adds	r0, r4, #0
 80043f4:	f7fc f924 	bl	8000640 <__aeabi_fadd>
 80043f8:	1c03      	adds	r3, r0, #0
 80043fa:	4927      	ldr	r1, [pc, #156]	; (8004498 <receiveDataFrame+0x6f0>)
 80043fc:	1c18      	adds	r0, r3, #0
 80043fe:	f7fc fc91 	bl	8000d24 <__aeabi_fmul>
 8004402:	1c03      	adds	r3, r0, #0
 8004404:	1c18      	adds	r0, r3, #0
 8004406:	f006 fc83 	bl	800ad10 <floorf>
 800440a:	1c02      	adds	r2, r0, #0
 800440c:	4b23      	ldr	r3, [pc, #140]	; (800449c <receiveDataFrame+0x6f4>)
 800440e:	681c      	ldr	r4, [r3, #0]
 8004410:	4921      	ldr	r1, [pc, #132]	; (8004498 <receiveDataFrame+0x6f0>)
 8004412:	1c10      	adds	r0, r2, #0
 8004414:	f7fc faae 	bl	8000974 <__aeabi_fdiv>
 8004418:	1c03      	adds	r3, r0, #0
 800441a:	1c19      	adds	r1, r3, #0
 800441c:	4a20      	ldr	r2, [pc, #128]	; (80044a0 <receiveDataFrame+0x6f8>)
 800441e:	2364      	movs	r3, #100	; 0x64
 8004420:	4363      	muls	r3, r4
 8004422:	18d3      	adds	r3, r2, r3
 8004424:	3328      	adds	r3, #40	; 0x28
 8004426:	6019      	str	r1, [r3, #0]
	    			printf("The endPoint.azCoordinate is : %f\n", passes[passNumberToUpdate].endPoint.azCoordinate);
 8004428:	4b1c      	ldr	r3, [pc, #112]	; (800449c <receiveDataFrame+0x6f4>)
 800442a:	681b      	ldr	r3, [r3, #0]
 800442c:	4a1c      	ldr	r2, [pc, #112]	; (80044a0 <receiveDataFrame+0x6f8>)
 800442e:	2164      	movs	r1, #100	; 0x64
 8004430:	434b      	muls	r3, r1
 8004432:	18d3      	adds	r3, r2, r3
 8004434:	3328      	adds	r3, #40	; 0x28
 8004436:	681b      	ldr	r3, [r3, #0]
 8004438:	1c18      	adds	r0, r3, #0
 800443a:	f7fe fd47 	bl	8002ecc <__aeabi_f2d>
 800443e:	0003      	movs	r3, r0
 8004440:	000c      	movs	r4, r1
 8004442:	4922      	ldr	r1, [pc, #136]	; (80044cc <receiveDataFrame+0x724>)
 8004444:	001a      	movs	r2, r3
 8004446:	0023      	movs	r3, r4
 8004448:	0008      	movs	r0, r1
 800444a:	f002 faa1 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].endPoint.elCoordinate = floorf( 0 * 100000 ) / 100000;
 800444e:	4b13      	ldr	r3, [pc, #76]	; (800449c <receiveDataFrame+0x6f4>)
 8004450:	681b      	ldr	r3, [r3, #0]
 8004452:	4a13      	ldr	r2, [pc, #76]	; (80044a0 <receiveDataFrame+0x6f8>)
 8004454:	2164      	movs	r1, #100	; 0x64
 8004456:	434b      	muls	r3, r1
 8004458:	18d3      	adds	r3, r2, r3
 800445a:	332c      	adds	r3, #44	; 0x2c
 800445c:	2200      	movs	r2, #0
 800445e:	601a      	str	r2, [r3, #0]
	    			printf("The endPoint.elCoordinate is : %f\n", passes[passNumberToUpdate].endPoint.elCoordinate);
 8004460:	4b0e      	ldr	r3, [pc, #56]	; (800449c <receiveDataFrame+0x6f4>)
 8004462:	681b      	ldr	r3, [r3, #0]
 8004464:	4a0e      	ldr	r2, [pc, #56]	; (80044a0 <receiveDataFrame+0x6f8>)
 8004466:	2164      	movs	r1, #100	; 0x64
 8004468:	434b      	muls	r3, r1
 800446a:	18d3      	adds	r3, r2, r3
 800446c:	332c      	adds	r3, #44	; 0x2c
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	1c18      	adds	r0, r3, #0
 8004472:	f7fe fd2b 	bl	8002ecc <__aeabi_f2d>
 8004476:	0003      	movs	r3, r0
 8004478:	000c      	movs	r4, r1
 800447a:	4915      	ldr	r1, [pc, #84]	; (80044d0 <receiveDataFrame+0x728>)
 800447c:	001a      	movs	r2, r3
 800447e:	0023      	movs	r3, r4
 8004480:	0008      	movs	r0, r1
 8004482:	f002 fa85 	bl	8006990 <iprintf>
	    			break;
 8004486:	e292      	b.n	80049ae <receiveDataFrame+0xc06>
 8004488:	40006400 	.word	0x40006400
 800448c:	0800b138 	.word	0x0800b138
 8004490:	0800b160 	.word	0x0800b160
 8004494:	42c80000 	.word	0x42c80000
 8004498:	47c35000 	.word	0x47c35000
 800449c:	20000280 	.word	0x20000280
 80044a0:	20000284 	.word	0x20000284
 80044a4:	0800b18c 	.word	0x0800b18c
 80044a8:	404e0000 	.word	0x404e0000
 80044ac:	000186a0 	.word	0x000186a0
 80044b0:	0800b1b4 	.word	0x0800b1b4
 80044b4:	0800b1dc 	.word	0x0800b1dc
 80044b8:	0800b20c 	.word	0x0800b20c
 80044bc:	0800b238 	.word	0x0800b238
 80044c0:	0800b260 	.word	0x0800b260
 80044c4:	0800b288 	.word	0x0800b288
 80044c8:	0800b2b4 	.word	0x0800b2b4
 80044cc:	0800b2e0 	.word	0x0800b2e0
 80044d0:	0800b304 	.word	0x0800b304

	    		// Get the middle point EL
	    		case 6:

	    			hundreds = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA0 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA0_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA1 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA1_Pos) ) - '0' ) );
 80044d4:	4afe      	ldr	r2, [pc, #1016]	; (80048d0 <receiveDataFrame+0xb28>)
 80044d6:	23dc      	movs	r3, #220	; 0xdc
 80044d8:	005b      	lsls	r3, r3, #1
 80044da:	58d3      	ldr	r3, [r2, r3]
 80044dc:	b2db      	uxtb	r3, r3
 80044de:	3b30      	subs	r3, #48	; 0x30
 80044e0:	0018      	movs	r0, r3
 80044e2:	4afb      	ldr	r2, [pc, #1004]	; (80048d0 <receiveDataFrame+0xb28>)
 80044e4:	23dc      	movs	r3, #220	; 0xdc
 80044e6:	005b      	lsls	r3, r3, #1
 80044e8:	58d3      	ldr	r3, [r2, r3]
 80044ea:	0a1b      	lsrs	r3, r3, #8
 80044ec:	b2db      	uxtb	r3, r3
 80044ee:	3b30      	subs	r3, #48	; 0x30
 80044f0:	0019      	movs	r1, r3
 80044f2:	f7ff fc33 	bl	8003d5c <concat>
 80044f6:	0003      	movs	r3, r0
 80044f8:	613b      	str	r3, [r7, #16]
	    			printf("The hundreds from the peak point are : %ld\r\n", hundreds);
 80044fa:	693a      	ldr	r2, [r7, #16]
 80044fc:	4bf5      	ldr	r3, [pc, #980]	; (80048d4 <receiveDataFrame+0xb2c>)
 80044fe:	0011      	movs	r1, r2
 8004500:	0018      	movs	r0, r3
 8004502:	f002 fa45 	bl	8006990 <iprintf>
	    			milli  = concat( (uint32_t) ( ( (uint8_t) ( (CAN_RDL0R_DATA3 & CAN->sFIFOMailBox[0].RDLR) >> CAN_RDL0R_DATA3_Pos) ) - '0' ) , (uint32_t) ( ( (uint8_t) ( (CAN_RDH0R_DATA4 & CAN->sFIFOMailBox[0].RDHR) >> CAN_RDH0R_DATA4_Pos) ) - '0' ) );
 8004506:	4af2      	ldr	r2, [pc, #968]	; (80048d0 <receiveDataFrame+0xb28>)
 8004508:	23dc      	movs	r3, #220	; 0xdc
 800450a:	005b      	lsls	r3, r3, #1
 800450c:	58d3      	ldr	r3, [r2, r3]
 800450e:	0e1b      	lsrs	r3, r3, #24
 8004510:	b2db      	uxtb	r3, r3
 8004512:	3b30      	subs	r3, #48	; 0x30
 8004514:	0018      	movs	r0, r3
 8004516:	4aee      	ldr	r2, [pc, #952]	; (80048d0 <receiveDataFrame+0xb28>)
 8004518:	23de      	movs	r3, #222	; 0xde
 800451a:	005b      	lsls	r3, r3, #1
 800451c:	58d3      	ldr	r3, [r2, r3]
 800451e:	b2db      	uxtb	r3, r3
 8004520:	3b30      	subs	r3, #48	; 0x30
 8004522:	0019      	movs	r1, r3
 8004524:	f7ff fc1a 	bl	8003d5c <concat>
 8004528:	0003      	movs	r3, r0
 800452a:	60fb      	str	r3, [r7, #12]
	    			printf("The milli from the peak point are : %ld\r\n", milli);
 800452c:	68fa      	ldr	r2, [r7, #12]
 800452e:	4bea      	ldr	r3, [pc, #936]	; (80048d8 <receiveDataFrame+0xb30>)
 8004530:	0011      	movs	r1, r2
 8004532:	0018      	movs	r0, r3
 8004534:	f002 fa2c 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].peakPoint.azCoordinate = floorf( fabsf( ( (passes[passNumberToUpdate].endPoint.azCoordinate) + (passes[passNumberToUpdate].startPoint.azCoordinate) ) / 2.0 ) * 100000 ) / 100000;
 8004538:	4be8      	ldr	r3, [pc, #928]	; (80048dc <receiveDataFrame+0xb34>)
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	4ae8      	ldr	r2, [pc, #928]	; (80048e0 <receiveDataFrame+0xb38>)
 800453e:	2164      	movs	r1, #100	; 0x64
 8004540:	434b      	muls	r3, r1
 8004542:	18d3      	adds	r3, r2, r3
 8004544:	3328      	adds	r3, #40	; 0x28
 8004546:	6818      	ldr	r0, [r3, #0]
 8004548:	4be4      	ldr	r3, [pc, #912]	; (80048dc <receiveDataFrame+0xb34>)
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	4ae4      	ldr	r2, [pc, #912]	; (80048e0 <receiveDataFrame+0xb38>)
 800454e:	2164      	movs	r1, #100	; 0x64
 8004550:	434b      	muls	r3, r1
 8004552:	18d3      	adds	r3, r2, r3
 8004554:	3320      	adds	r3, #32
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	1c19      	adds	r1, r3, #0
 800455a:	f7fc f871 	bl	8000640 <__aeabi_fadd>
 800455e:	1c03      	adds	r3, r0, #0
 8004560:	2180      	movs	r1, #128	; 0x80
 8004562:	05c9      	lsls	r1, r1, #23
 8004564:	1c18      	adds	r0, r3, #0
 8004566:	f7fc fa05 	bl	8000974 <__aeabi_fdiv>
 800456a:	1c03      	adds	r3, r0, #0
 800456c:	005b      	lsls	r3, r3, #1
 800456e:	085b      	lsrs	r3, r3, #1
 8004570:	49dc      	ldr	r1, [pc, #880]	; (80048e4 <receiveDataFrame+0xb3c>)
 8004572:	1c18      	adds	r0, r3, #0
 8004574:	f7fc fbd6 	bl	8000d24 <__aeabi_fmul>
 8004578:	1c03      	adds	r3, r0, #0
 800457a:	1c18      	adds	r0, r3, #0
 800457c:	f006 fbc8 	bl	800ad10 <floorf>
 8004580:	1c02      	adds	r2, r0, #0
 8004582:	4bd6      	ldr	r3, [pc, #856]	; (80048dc <receiveDataFrame+0xb34>)
 8004584:	681c      	ldr	r4, [r3, #0]
 8004586:	49d7      	ldr	r1, [pc, #860]	; (80048e4 <receiveDataFrame+0xb3c>)
 8004588:	1c10      	adds	r0, r2, #0
 800458a:	f7fc f9f3 	bl	8000974 <__aeabi_fdiv>
 800458e:	1c03      	adds	r3, r0, #0
 8004590:	1c19      	adds	r1, r3, #0
 8004592:	4ad3      	ldr	r2, [pc, #844]	; (80048e0 <receiveDataFrame+0xb38>)
 8004594:	2364      	movs	r3, #100	; 0x64
 8004596:	4363      	muls	r3, r4
 8004598:	18d3      	adds	r3, r2, r3
 800459a:	3330      	adds	r3, #48	; 0x30
 800459c:	6019      	str	r1, [r3, #0]
	    			printf("The peakPoint.azCoordinate is : %f\r\n", passes[passNumberToUpdate].peakPoint.azCoordinate);
 800459e:	4bcf      	ldr	r3, [pc, #828]	; (80048dc <receiveDataFrame+0xb34>)
 80045a0:	681b      	ldr	r3, [r3, #0]
 80045a2:	4acf      	ldr	r2, [pc, #828]	; (80048e0 <receiveDataFrame+0xb38>)
 80045a4:	2164      	movs	r1, #100	; 0x64
 80045a6:	434b      	muls	r3, r1
 80045a8:	18d3      	adds	r3, r2, r3
 80045aa:	3330      	adds	r3, #48	; 0x30
 80045ac:	681b      	ldr	r3, [r3, #0]
 80045ae:	1c18      	adds	r0, r3, #0
 80045b0:	f7fe fc8c 	bl	8002ecc <__aeabi_f2d>
 80045b4:	0003      	movs	r3, r0
 80045b6:	000c      	movs	r4, r1
 80045b8:	49cb      	ldr	r1, [pc, #812]	; (80048e8 <receiveDataFrame+0xb40>)
 80045ba:	001a      	movs	r2, r3
 80045bc:	0023      	movs	r3, r4
 80045be:	0008      	movs	r0, r1
 80045c0:	f002 f9e6 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].peakPoint.elCoordinate = floorf( ( hundreds + (milli /100.f) ) * 100000 ) / 100000;
 80045c4:	6938      	ldr	r0, [r7, #16]
 80045c6:	f7fc fea3 	bl	8001310 <__aeabi_ui2f>
 80045ca:	1c04      	adds	r4, r0, #0
 80045cc:	68f8      	ldr	r0, [r7, #12]
 80045ce:	f7fc fe9f 	bl	8001310 <__aeabi_ui2f>
 80045d2:	1c03      	adds	r3, r0, #0
 80045d4:	49c5      	ldr	r1, [pc, #788]	; (80048ec <receiveDataFrame+0xb44>)
 80045d6:	1c18      	adds	r0, r3, #0
 80045d8:	f7fc f9cc 	bl	8000974 <__aeabi_fdiv>
 80045dc:	1c03      	adds	r3, r0, #0
 80045de:	1c19      	adds	r1, r3, #0
 80045e0:	1c20      	adds	r0, r4, #0
 80045e2:	f7fc f82d 	bl	8000640 <__aeabi_fadd>
 80045e6:	1c03      	adds	r3, r0, #0
 80045e8:	49be      	ldr	r1, [pc, #760]	; (80048e4 <receiveDataFrame+0xb3c>)
 80045ea:	1c18      	adds	r0, r3, #0
 80045ec:	f7fc fb9a 	bl	8000d24 <__aeabi_fmul>
 80045f0:	1c03      	adds	r3, r0, #0
 80045f2:	1c18      	adds	r0, r3, #0
 80045f4:	f006 fb8c 	bl	800ad10 <floorf>
 80045f8:	1c02      	adds	r2, r0, #0
 80045fa:	4bb8      	ldr	r3, [pc, #736]	; (80048dc <receiveDataFrame+0xb34>)
 80045fc:	681c      	ldr	r4, [r3, #0]
 80045fe:	49b9      	ldr	r1, [pc, #740]	; (80048e4 <receiveDataFrame+0xb3c>)
 8004600:	1c10      	adds	r0, r2, #0
 8004602:	f7fc f9b7 	bl	8000974 <__aeabi_fdiv>
 8004606:	1c03      	adds	r3, r0, #0
 8004608:	1c19      	adds	r1, r3, #0
 800460a:	4ab5      	ldr	r2, [pc, #724]	; (80048e0 <receiveDataFrame+0xb38>)
 800460c:	2364      	movs	r3, #100	; 0x64
 800460e:	4363      	muls	r3, r4
 8004610:	18d3      	adds	r3, r2, r3
 8004612:	3334      	adds	r3, #52	; 0x34
 8004614:	6019      	str	r1, [r3, #0]
	    			printf("The peakPoint.elCoordinate is : %f\r\n", passes[passNumberToUpdate].peakPoint.elCoordinate);
 8004616:	4bb1      	ldr	r3, [pc, #708]	; (80048dc <receiveDataFrame+0xb34>)
 8004618:	681b      	ldr	r3, [r3, #0]
 800461a:	4ab1      	ldr	r2, [pc, #708]	; (80048e0 <receiveDataFrame+0xb38>)
 800461c:	2164      	movs	r1, #100	; 0x64
 800461e:	434b      	muls	r3, r1
 8004620:	18d3      	adds	r3, r2, r3
 8004622:	3334      	adds	r3, #52	; 0x34
 8004624:	681b      	ldr	r3, [r3, #0]
 8004626:	1c18      	adds	r0, r3, #0
 8004628:	f7fe fc50 	bl	8002ecc <__aeabi_f2d>
 800462c:	0003      	movs	r3, r0
 800462e:	000c      	movs	r4, r1
 8004630:	49af      	ldr	r1, [pc, #700]	; (80048f0 <receiveDataFrame+0xb48>)
 8004632:	001a      	movs	r2, r3
 8004634:	0023      	movs	r3, r4
 8004636:	0008      	movs	r0, r1
 8004638:	f002 f9aa 	bl	8006990 <iprintf>

	    			// Initialize the average speed for the pass in AZ and in EL
	    			passes[passNumberToUpdate].averageSpeedAz = floorf( ( fabsf( (passes[passNumberToUpdate].endPoint.azCoordinate - passes[passNumberToUpdate].startPoint.azCoordinate) ) / ( (float) (passes[passNumberToUpdate].transitTimeMinute) ) ) * 100000 ) / 100000;
 800463c:	4ba7      	ldr	r3, [pc, #668]	; (80048dc <receiveDataFrame+0xb34>)
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	4aa7      	ldr	r2, [pc, #668]	; (80048e0 <receiveDataFrame+0xb38>)
 8004642:	2164      	movs	r1, #100	; 0x64
 8004644:	434b      	muls	r3, r1
 8004646:	18d3      	adds	r3, r2, r3
 8004648:	3328      	adds	r3, #40	; 0x28
 800464a:	6818      	ldr	r0, [r3, #0]
 800464c:	4ba3      	ldr	r3, [pc, #652]	; (80048dc <receiveDataFrame+0xb34>)
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	4aa3      	ldr	r2, [pc, #652]	; (80048e0 <receiveDataFrame+0xb38>)
 8004652:	2164      	movs	r1, #100	; 0x64
 8004654:	434b      	muls	r3, r1
 8004656:	18d3      	adds	r3, r2, r3
 8004658:	3320      	adds	r3, #32
 800465a:	681b      	ldr	r3, [r3, #0]
 800465c:	1c19      	adds	r1, r3, #0
 800465e:	f7fc fc93 	bl	8000f88 <__aeabi_fsub>
 8004662:	1c03      	adds	r3, r0, #0
 8004664:	005b      	lsls	r3, r3, #1
 8004666:	0858      	lsrs	r0, r3, #1
 8004668:	4b9c      	ldr	r3, [pc, #624]	; (80048dc <receiveDataFrame+0xb34>)
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	4a9c      	ldr	r2, [pc, #624]	; (80048e0 <receiveDataFrame+0xb38>)
 800466e:	2164      	movs	r1, #100	; 0x64
 8004670:	434b      	muls	r3, r1
 8004672:	18d3      	adds	r3, r2, r3
 8004674:	3318      	adds	r3, #24
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	1c19      	adds	r1, r3, #0
 800467a:	f7fc f97b 	bl	8000974 <__aeabi_fdiv>
 800467e:	1c03      	adds	r3, r0, #0
 8004680:	4998      	ldr	r1, [pc, #608]	; (80048e4 <receiveDataFrame+0xb3c>)
 8004682:	1c18      	adds	r0, r3, #0
 8004684:	f7fc fb4e 	bl	8000d24 <__aeabi_fmul>
 8004688:	1c03      	adds	r3, r0, #0
 800468a:	1c18      	adds	r0, r3, #0
 800468c:	f006 fb40 	bl	800ad10 <floorf>
 8004690:	1c02      	adds	r2, r0, #0
 8004692:	4b92      	ldr	r3, [pc, #584]	; (80048dc <receiveDataFrame+0xb34>)
 8004694:	681c      	ldr	r4, [r3, #0]
 8004696:	4993      	ldr	r1, [pc, #588]	; (80048e4 <receiveDataFrame+0xb3c>)
 8004698:	1c10      	adds	r0, r2, #0
 800469a:	f7fc f96b 	bl	8000974 <__aeabi_fdiv>
 800469e:	1c03      	adds	r3, r0, #0
 80046a0:	1c19      	adds	r1, r3, #0
 80046a2:	4a8f      	ldr	r2, [pc, #572]	; (80048e0 <receiveDataFrame+0xb38>)
 80046a4:	2364      	movs	r3, #100	; 0x64
 80046a6:	4363      	muls	r3, r4
 80046a8:	18d3      	adds	r3, r2, r3
 80046aa:	3338      	adds	r3, #56	; 0x38
 80046ac:	6019      	str	r1, [r3, #0]
	    			printf("The pass.averageSpeedAz is : %f\r\n", passes[passNumberToUpdate].averageSpeedAz);
 80046ae:	4b8b      	ldr	r3, [pc, #556]	; (80048dc <receiveDataFrame+0xb34>)
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	4a8b      	ldr	r2, [pc, #556]	; (80048e0 <receiveDataFrame+0xb38>)
 80046b4:	2164      	movs	r1, #100	; 0x64
 80046b6:	434b      	muls	r3, r1
 80046b8:	18d3      	adds	r3, r2, r3
 80046ba:	3338      	adds	r3, #56	; 0x38
 80046bc:	681b      	ldr	r3, [r3, #0]
 80046be:	1c18      	adds	r0, r3, #0
 80046c0:	f7fe fc04 	bl	8002ecc <__aeabi_f2d>
 80046c4:	0003      	movs	r3, r0
 80046c6:	000c      	movs	r4, r1
 80046c8:	498a      	ldr	r1, [pc, #552]	; (80048f4 <receiveDataFrame+0xb4c>)
 80046ca:	001a      	movs	r2, r3
 80046cc:	0023      	movs	r3, r4
 80046ce:	0008      	movs	r0, r1
 80046d0:	f002 f95e 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].averageSpeedEl = floorf( ( (passes[passNumberToUpdate].peakPoint.elCoordinate * 2.0) / ( (float) (passes[passNumberToUpdate].transitTimeMinute) ) ) * 100000 ) / 100000;
 80046d4:	4b81      	ldr	r3, [pc, #516]	; (80048dc <receiveDataFrame+0xb34>)
 80046d6:	681b      	ldr	r3, [r3, #0]
 80046d8:	4a81      	ldr	r2, [pc, #516]	; (80048e0 <receiveDataFrame+0xb38>)
 80046da:	2164      	movs	r1, #100	; 0x64
 80046dc:	434b      	muls	r3, r1
 80046de:	18d3      	adds	r3, r2, r3
 80046e0:	3334      	adds	r3, #52	; 0x34
 80046e2:	681b      	ldr	r3, [r3, #0]
 80046e4:	1c18      	adds	r0, r3, #0
 80046e6:	f7fe fbf1 	bl	8002ecc <__aeabi_f2d>
 80046ea:	0002      	movs	r2, r0
 80046ec:	000b      	movs	r3, r1
 80046ee:	f7fc fe4f 	bl	8001390 <__aeabi_dadd>
 80046f2:	0003      	movs	r3, r0
 80046f4:	000c      	movs	r4, r1
 80046f6:	0025      	movs	r5, r4
 80046f8:	001c      	movs	r4, r3
 80046fa:	4b78      	ldr	r3, [pc, #480]	; (80048dc <receiveDataFrame+0xb34>)
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	4a78      	ldr	r2, [pc, #480]	; (80048e0 <receiveDataFrame+0xb38>)
 8004700:	2164      	movs	r1, #100	; 0x64
 8004702:	434b      	muls	r3, r1
 8004704:	18d3      	adds	r3, r2, r3
 8004706:	3318      	adds	r3, #24
 8004708:	681b      	ldr	r3, [r3, #0]
 800470a:	1c18      	adds	r0, r3, #0
 800470c:	f7fe fbde 	bl	8002ecc <__aeabi_f2d>
 8004710:	0002      	movs	r2, r0
 8004712:	000b      	movs	r3, r1
 8004714:	0020      	movs	r0, r4
 8004716:	0029      	movs	r1, r5
 8004718:	f7fd f956 	bl	80019c8 <__aeabi_ddiv>
 800471c:	0003      	movs	r3, r0
 800471e:	000c      	movs	r4, r1
 8004720:	0018      	movs	r0, r3
 8004722:	0021      	movs	r1, r4
 8004724:	2200      	movs	r2, #0
 8004726:	4b74      	ldr	r3, [pc, #464]	; (80048f8 <receiveDataFrame+0xb50>)
 8004728:	f7fd fd58 	bl	80021dc <__aeabi_dmul>
 800472c:	0003      	movs	r3, r0
 800472e:	000c      	movs	r4, r1
 8004730:	0018      	movs	r0, r3
 8004732:	0021      	movs	r1, r4
 8004734:	f7fe fc1c 	bl	8002f70 <__aeabi_d2f>
 8004738:	1c03      	adds	r3, r0, #0
 800473a:	1c18      	adds	r0, r3, #0
 800473c:	f006 fae8 	bl	800ad10 <floorf>
 8004740:	1c02      	adds	r2, r0, #0
 8004742:	4b66      	ldr	r3, [pc, #408]	; (80048dc <receiveDataFrame+0xb34>)
 8004744:	681c      	ldr	r4, [r3, #0]
 8004746:	4967      	ldr	r1, [pc, #412]	; (80048e4 <receiveDataFrame+0xb3c>)
 8004748:	1c10      	adds	r0, r2, #0
 800474a:	f7fc f913 	bl	8000974 <__aeabi_fdiv>
 800474e:	1c03      	adds	r3, r0, #0
 8004750:	1c19      	adds	r1, r3, #0
 8004752:	4a63      	ldr	r2, [pc, #396]	; (80048e0 <receiveDataFrame+0xb38>)
 8004754:	2364      	movs	r3, #100	; 0x64
 8004756:	4363      	muls	r3, r4
 8004758:	18d3      	adds	r3, r2, r3
 800475a:	333c      	adds	r3, #60	; 0x3c
 800475c:	6019      	str	r1, [r3, #0]
	    			printf("The pass.averageSpeedEl is : %f\r\n", passes[passNumberToUpdate].averageSpeedEl);
 800475e:	4b5f      	ldr	r3, [pc, #380]	; (80048dc <receiveDataFrame+0xb34>)
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	4a5f      	ldr	r2, [pc, #380]	; (80048e0 <receiveDataFrame+0xb38>)
 8004764:	2164      	movs	r1, #100	; 0x64
 8004766:	434b      	muls	r3, r1
 8004768:	18d3      	adds	r3, r2, r3
 800476a:	333c      	adds	r3, #60	; 0x3c
 800476c:	681b      	ldr	r3, [r3, #0]
 800476e:	1c18      	adds	r0, r3, #0
 8004770:	f7fe fbac 	bl	8002ecc <__aeabi_f2d>
 8004774:	0003      	movs	r3, r0
 8004776:	000c      	movs	r4, r1
 8004778:	4960      	ldr	r1, [pc, #384]	; (80048fc <receiveDataFrame+0xb54>)
 800477a:	001a      	movs	r2, r3
 800477c:	0023      	movs	r3, r4
 800477e:	0008      	movs	r0, r1
 8004780:	f002 f906 	bl	8006990 <iprintf>

	    			// Initialize the time of the tracking to 0
	    			passes[passNumberToUpdate].tracking.currentTimeSecond = floorf( 0 * 100000 ) / 100000;
 8004784:	4b55      	ldr	r3, [pc, #340]	; (80048dc <receiveDataFrame+0xb34>)
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	4a55      	ldr	r2, [pc, #340]	; (80048e0 <receiveDataFrame+0xb38>)
 800478a:	2164      	movs	r1, #100	; 0x64
 800478c:	434b      	muls	r3, r1
 800478e:	18d3      	adds	r3, r2, r3
 8004790:	3344      	adds	r3, #68	; 0x44
 8004792:	2200      	movs	r2, #0
 8004794:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentTimeSecond is : %f\r\n", passes[passNumberToUpdate].tracking.currentTimeSecond);
 8004796:	4b51      	ldr	r3, [pc, #324]	; (80048dc <receiveDataFrame+0xb34>)
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	4a51      	ldr	r2, [pc, #324]	; (80048e0 <receiveDataFrame+0xb38>)
 800479c:	2164      	movs	r1, #100	; 0x64
 800479e:	434b      	muls	r3, r1
 80047a0:	18d3      	adds	r3, r2, r3
 80047a2:	3344      	adds	r3, #68	; 0x44
 80047a4:	681b      	ldr	r3, [r3, #0]
 80047a6:	1c18      	adds	r0, r3, #0
 80047a8:	f7fe fb90 	bl	8002ecc <__aeabi_f2d>
 80047ac:	0003      	movs	r3, r0
 80047ae:	000c      	movs	r4, r1
 80047b0:	4953      	ldr	r1, [pc, #332]	; (8004900 <receiveDataFrame+0xb58>)
 80047b2:	001a      	movs	r2, r3
 80047b4:	0023      	movs	r3, r4
 80047b6:	0008      	movs	r0, r1
 80047b8:	f002 f8ea 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].tracking.currentTimeMinute = floorf( 0 * 100000 ) / 100000;
 80047bc:	4b47      	ldr	r3, [pc, #284]	; (80048dc <receiveDataFrame+0xb34>)
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	4a47      	ldr	r2, [pc, #284]	; (80048e0 <receiveDataFrame+0xb38>)
 80047c2:	2164      	movs	r1, #100	; 0x64
 80047c4:	434b      	muls	r3, r1
 80047c6:	18d3      	adds	r3, r2, r3
 80047c8:	3340      	adds	r3, #64	; 0x40
 80047ca:	2200      	movs	r2, #0
 80047cc:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentTimeMinute is : %f\r\n", passes[passNumberToUpdate].tracking.currentTimeMinute);
 80047ce:	4b43      	ldr	r3, [pc, #268]	; (80048dc <receiveDataFrame+0xb34>)
 80047d0:	681b      	ldr	r3, [r3, #0]
 80047d2:	4a43      	ldr	r2, [pc, #268]	; (80048e0 <receiveDataFrame+0xb38>)
 80047d4:	2164      	movs	r1, #100	; 0x64
 80047d6:	434b      	muls	r3, r1
 80047d8:	18d3      	adds	r3, r2, r3
 80047da:	3340      	adds	r3, #64	; 0x40
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	1c18      	adds	r0, r3, #0
 80047e0:	f7fe fb74 	bl	8002ecc <__aeabi_f2d>
 80047e4:	0003      	movs	r3, r0
 80047e6:	000c      	movs	r4, r1
 80047e8:	4946      	ldr	r1, [pc, #280]	; (8004904 <receiveDataFrame+0xb5c>)
 80047ea:	001a      	movs	r2, r3
 80047ec:	0023      	movs	r3, r4
 80047ee:	0008      	movs	r0, r1
 80047f0:	f002 f8ce 	bl	8006990 <iprintf>

	    			// Initialize the current speed of the tracking to 0
	    			passes[passNumberToUpdate].tracking.currentSpeedAz = floorf( 0 * 100000 ) / 10000;
 80047f4:	4b39      	ldr	r3, [pc, #228]	; (80048dc <receiveDataFrame+0xb34>)
 80047f6:	681b      	ldr	r3, [r3, #0]
 80047f8:	4a39      	ldr	r2, [pc, #228]	; (80048e0 <receiveDataFrame+0xb38>)
 80047fa:	2164      	movs	r1, #100	; 0x64
 80047fc:	434b      	muls	r3, r1
 80047fe:	18d3      	adds	r3, r2, r3
 8004800:	3348      	adds	r3, #72	; 0x48
 8004802:	2200      	movs	r2, #0
 8004804:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentSpeedAz is : %f\r\n", passes[passNumberToUpdate].tracking.currentSpeedAz);
 8004806:	4b35      	ldr	r3, [pc, #212]	; (80048dc <receiveDataFrame+0xb34>)
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	4a35      	ldr	r2, [pc, #212]	; (80048e0 <receiveDataFrame+0xb38>)
 800480c:	2164      	movs	r1, #100	; 0x64
 800480e:	434b      	muls	r3, r1
 8004810:	18d3      	adds	r3, r2, r3
 8004812:	3348      	adds	r3, #72	; 0x48
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	1c18      	adds	r0, r3, #0
 8004818:	f7fe fb58 	bl	8002ecc <__aeabi_f2d>
 800481c:	0003      	movs	r3, r0
 800481e:	000c      	movs	r4, r1
 8004820:	4939      	ldr	r1, [pc, #228]	; (8004908 <receiveDataFrame+0xb60>)
 8004822:	001a      	movs	r2, r3
 8004824:	0023      	movs	r3, r4
 8004826:	0008      	movs	r0, r1
 8004828:	f002 f8b2 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].tracking.currentSpeedEl = floorf( 0 * 100000 ) / 100000;
 800482c:	4b2b      	ldr	r3, [pc, #172]	; (80048dc <receiveDataFrame+0xb34>)
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	4a2b      	ldr	r2, [pc, #172]	; (80048e0 <receiveDataFrame+0xb38>)
 8004832:	2164      	movs	r1, #100	; 0x64
 8004834:	434b      	muls	r3, r1
 8004836:	18d3      	adds	r3, r2, r3
 8004838:	334c      	adds	r3, #76	; 0x4c
 800483a:	2200      	movs	r2, #0
 800483c:	601a      	str	r2, [r3, #0]
	    			printf("The pass.tracking.currentSpeedEl is : %f\r\n", passes[passNumberToUpdate].tracking.currentSpeedAz);
 800483e:	4b27      	ldr	r3, [pc, #156]	; (80048dc <receiveDataFrame+0xb34>)
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	4a27      	ldr	r2, [pc, #156]	; (80048e0 <receiveDataFrame+0xb38>)
 8004844:	2164      	movs	r1, #100	; 0x64
 8004846:	434b      	muls	r3, r1
 8004848:	18d3      	adds	r3, r2, r3
 800484a:	3348      	adds	r3, #72	; 0x48
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	1c18      	adds	r0, r3, #0
 8004850:	f7fe fb3c 	bl	8002ecc <__aeabi_f2d>
 8004854:	0003      	movs	r3, r0
 8004856:	000c      	movs	r4, r1
 8004858:	492c      	ldr	r1, [pc, #176]	; (800490c <receiveDataFrame+0xb64>)
 800485a:	001a      	movs	r2, r3
 800485c:	0023      	movs	r3, r4
 800485e:	0008      	movs	r0, r1
 8004860:	f002 f896 	bl	8006990 <iprintf>

	    			// The maximum speed of the tracking in AZ and in EL is two times the value of the average speed
	    			passes[passNumberToUpdate].tracking.maximumSpeedAz = floorf( ( 2 * (passes[passNumberToUpdate].averageSpeedAz) ) * 100000 ) / 100000;
 8004864:	4b1d      	ldr	r3, [pc, #116]	; (80048dc <receiveDataFrame+0xb34>)
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	4a1d      	ldr	r2, [pc, #116]	; (80048e0 <receiveDataFrame+0xb38>)
 800486a:	2164      	movs	r1, #100	; 0x64
 800486c:	434b      	muls	r3, r1
 800486e:	18d3      	adds	r3, r2, r3
 8004870:	3338      	adds	r3, #56	; 0x38
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	1c19      	adds	r1, r3, #0
 8004876:	1c18      	adds	r0, r3, #0
 8004878:	f7fb fee2 	bl	8000640 <__aeabi_fadd>
 800487c:	1c03      	adds	r3, r0, #0
 800487e:	4919      	ldr	r1, [pc, #100]	; (80048e4 <receiveDataFrame+0xb3c>)
 8004880:	1c18      	adds	r0, r3, #0
 8004882:	f7fc fa4f 	bl	8000d24 <__aeabi_fmul>
 8004886:	1c03      	adds	r3, r0, #0
 8004888:	1c18      	adds	r0, r3, #0
 800488a:	f006 fa41 	bl	800ad10 <floorf>
 800488e:	1c02      	adds	r2, r0, #0
 8004890:	4b12      	ldr	r3, [pc, #72]	; (80048dc <receiveDataFrame+0xb34>)
 8004892:	681c      	ldr	r4, [r3, #0]
 8004894:	4913      	ldr	r1, [pc, #76]	; (80048e4 <receiveDataFrame+0xb3c>)
 8004896:	1c10      	adds	r0, r2, #0
 8004898:	f7fc f86c 	bl	8000974 <__aeabi_fdiv>
 800489c:	1c03      	adds	r3, r0, #0
 800489e:	1c19      	adds	r1, r3, #0
 80048a0:	4a0f      	ldr	r2, [pc, #60]	; (80048e0 <receiveDataFrame+0xb38>)
 80048a2:	2364      	movs	r3, #100	; 0x64
 80048a4:	4363      	muls	r3, r4
 80048a6:	18d3      	adds	r3, r2, r3
 80048a8:	3350      	adds	r3, #80	; 0x50
 80048aa:	6019      	str	r1, [r3, #0]
	    			printf("The pass.tracking.maximumSpeedAz is : %f\r\n", passes[passNumberToUpdate].tracking.maximumSpeedAz);
 80048ac:	4b0b      	ldr	r3, [pc, #44]	; (80048dc <receiveDataFrame+0xb34>)
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	4a0b      	ldr	r2, [pc, #44]	; (80048e0 <receiveDataFrame+0xb38>)
 80048b2:	2164      	movs	r1, #100	; 0x64
 80048b4:	434b      	muls	r3, r1
 80048b6:	18d3      	adds	r3, r2, r3
 80048b8:	3350      	adds	r3, #80	; 0x50
 80048ba:	681b      	ldr	r3, [r3, #0]
 80048bc:	1c18      	adds	r0, r3, #0
 80048be:	f7fe fb05 	bl	8002ecc <__aeabi_f2d>
 80048c2:	0003      	movs	r3, r0
 80048c4:	000c      	movs	r4, r1
 80048c6:	4912      	ldr	r1, [pc, #72]	; (8004910 <receiveDataFrame+0xb68>)
 80048c8:	001a      	movs	r2, r3
 80048ca:	0023      	movs	r3, r4
 80048cc:	e022      	b.n	8004914 <receiveDataFrame+0xb6c>
 80048ce:	46c0      	nop			; (mov r8, r8)
 80048d0:	40006400 	.word	0x40006400
 80048d4:	0800b328 	.word	0x0800b328
 80048d8:	0800b358 	.word	0x0800b358
 80048dc:	20000280 	.word	0x20000280
 80048e0:	20000284 	.word	0x20000284
 80048e4:	47c35000 	.word	0x47c35000
 80048e8:	0800b384 	.word	0x0800b384
 80048ec:	42c80000 	.word	0x42c80000
 80048f0:	0800b3ac 	.word	0x0800b3ac
 80048f4:	0800b3d4 	.word	0x0800b3d4
 80048f8:	40f86a00 	.word	0x40f86a00
 80048fc:	0800b3f8 	.word	0x0800b3f8
 8004900:	0800b41c 	.word	0x0800b41c
 8004904:	0800b44c 	.word	0x0800b44c
 8004908:	0800b47c 	.word	0x0800b47c
 800490c:	0800b4a8 	.word	0x0800b4a8
 8004910:	0800b4d4 	.word	0x0800b4d4
 8004914:	0008      	movs	r0, r1
 8004916:	f002 f83b 	bl	8006990 <iprintf>
	    			passes[passNumberToUpdate].tracking.maximumSpeedEl = floorf( ( 2 * (passes[passNumberToUpdate].averageSpeedEl) ) * 100000 )/ 100000;
 800491a:	4b3a      	ldr	r3, [pc, #232]	; (8004a04 <receiveDataFrame+0xc5c>)
 800491c:	681b      	ldr	r3, [r3, #0]
 800491e:	4a3a      	ldr	r2, [pc, #232]	; (8004a08 <receiveDataFrame+0xc60>)
 8004920:	2164      	movs	r1, #100	; 0x64
 8004922:	434b      	muls	r3, r1
 8004924:	18d3      	adds	r3, r2, r3
 8004926:	333c      	adds	r3, #60	; 0x3c
 8004928:	681b      	ldr	r3, [r3, #0]
 800492a:	1c19      	adds	r1, r3, #0
 800492c:	1c18      	adds	r0, r3, #0
 800492e:	f7fb fe87 	bl	8000640 <__aeabi_fadd>
 8004932:	1c03      	adds	r3, r0, #0
 8004934:	4935      	ldr	r1, [pc, #212]	; (8004a0c <receiveDataFrame+0xc64>)
 8004936:	1c18      	adds	r0, r3, #0
 8004938:	f7fc f9f4 	bl	8000d24 <__aeabi_fmul>
 800493c:	1c03      	adds	r3, r0, #0
 800493e:	1c18      	adds	r0, r3, #0
 8004940:	f006 f9e6 	bl	800ad10 <floorf>
 8004944:	1c02      	adds	r2, r0, #0
 8004946:	4b2f      	ldr	r3, [pc, #188]	; (8004a04 <receiveDataFrame+0xc5c>)
 8004948:	681c      	ldr	r4, [r3, #0]
 800494a:	4930      	ldr	r1, [pc, #192]	; (8004a0c <receiveDataFrame+0xc64>)
 800494c:	1c10      	adds	r0, r2, #0
 800494e:	f7fc f811 	bl	8000974 <__aeabi_fdiv>
 8004952:	1c03      	adds	r3, r0, #0
 8004954:	1c19      	adds	r1, r3, #0
 8004956:	4a2c      	ldr	r2, [pc, #176]	; (8004a08 <receiveDataFrame+0xc60>)
 8004958:	2364      	movs	r3, #100	; 0x64
 800495a:	4363      	muls	r3, r4
 800495c:	18d3      	adds	r3, r2, r3
 800495e:	3354      	adds	r3, #84	; 0x54
 8004960:	6019      	str	r1, [r3, #0]
	    			printf("The pass.tracking.maximumSpeedEl is : %f\r\n", passes[passNumberToUpdate].tracking.maximumSpeedEl);
 8004962:	4b28      	ldr	r3, [pc, #160]	; (8004a04 <receiveDataFrame+0xc5c>)
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	4a28      	ldr	r2, [pc, #160]	; (8004a08 <receiveDataFrame+0xc60>)
 8004968:	2164      	movs	r1, #100	; 0x64
 800496a:	434b      	muls	r3, r1
 800496c:	18d3      	adds	r3, r2, r3
 800496e:	3354      	adds	r3, #84	; 0x54
 8004970:	681b      	ldr	r3, [r3, #0]
 8004972:	1c18      	adds	r0, r3, #0
 8004974:	f7fe faaa 	bl	8002ecc <__aeabi_f2d>
 8004978:	0003      	movs	r3, r0
 800497a:	000c      	movs	r4, r1
 800497c:	4924      	ldr	r1, [pc, #144]	; (8004a10 <receiveDataFrame+0xc68>)
 800497e:	001a      	movs	r2, r3
 8004980:	0023      	movs	r3, r4
 8004982:	0008      	movs	r0, r1
 8004984:	f002 f804 	bl	8006990 <iprintf>

	    			// Set the speed of the motors at 12V in °/min
	    			passes[passNumberToUpdate].tracking.maximumMotorSpeedAz = 131; // 80 rpm at 12V ( 131 / 360 * 220 = 80 )
 8004988:	4b1e      	ldr	r3, [pc, #120]	; (8004a04 <receiveDataFrame+0xc5c>)
 800498a:	681b      	ldr	r3, [r3, #0]
 800498c:	4a1e      	ldr	r2, [pc, #120]	; (8004a08 <receiveDataFrame+0xc60>)
 800498e:	2164      	movs	r1, #100	; 0x64
 8004990:	434b      	muls	r3, r1
 8004992:	18d3      	adds	r3, r2, r3
 8004994:	3358      	adds	r3, #88	; 0x58
 8004996:	4a1f      	ldr	r2, [pc, #124]	; (8004a14 <receiveDataFrame+0xc6c>)
 8004998:	601a      	str	r2, [r3, #0]
	    			passes[passNumberToUpdate].tracking.maximumMotorSpeedEl = 16.5; // 10 rpm at 12V ( 16.5 / 360 * 220 = 10 )
 800499a:	4b1a      	ldr	r3, [pc, #104]	; (8004a04 <receiveDataFrame+0xc5c>)
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	4a1a      	ldr	r2, [pc, #104]	; (8004a08 <receiveDataFrame+0xc60>)
 80049a0:	2164      	movs	r1, #100	; 0x64
 80049a2:	434b      	muls	r3, r1
 80049a4:	18d3      	adds	r3, r2, r3
 80049a6:	335c      	adds	r3, #92	; 0x5c
 80049a8:	4a1b      	ldr	r2, [pc, #108]	; (8004a18 <receiveDataFrame+0xc70>)
 80049aa:	601a      	str	r2, [r3, #0]

	    			break;
 80049ac:	46c0      	nop			; (mov r8, r8)

	    		}

	    	numberOfDataFrameReceived++;
 80049ae:	4b1b      	ldr	r3, [pc, #108]	; (8004a1c <receiveDataFrame+0xc74>)
 80049b0:	681b      	ldr	r3, [r3, #0]
 80049b2:	1c5a      	adds	r2, r3, #1
 80049b4:	4b19      	ldr	r3, [pc, #100]	; (8004a1c <receiveDataFrame+0xc74>)
 80049b6:	601a      	str	r2, [r3, #0]

	    	// Set the alarm for passes[0]
	    	if(numberOfDataFrameReceived == 2){
 80049b8:	4b18      	ldr	r3, [pc, #96]	; (8004a1c <receiveDataFrame+0xc74>)
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	2b02      	cmp	r3, #2
 80049be:	d10d      	bne.n	80049dc <receiveDataFrame+0xc34>
	    		rtcSetAlarm();
 80049c0:	f000 ff1e 	bl	8005800 <rtcSetAlarm>
	    		rtcGetAlarm();
 80049c4:	f001 f8e4 	bl	8005b90 <rtcGetAlarm>
 80049c8:	e008      	b.n	80049dc <receiveDataFrame+0xc34>

	    }

	    else{

	    	printf("The size of the received data frame is not the right one \r\n");
 80049ca:	4b15      	ldr	r3, [pc, #84]	; (8004a20 <receiveDataFrame+0xc78>)
 80049cc:	0018      	movs	r0, r3
 80049ce:	f002 f859 	bl	8006a84 <puts>
 80049d2:	e003      	b.n	80049dc <receiveDataFrame+0xc34>
	    }
	}

	else {

		printf("The id of the received data frame is not the one we are looking for \r\n");
 80049d4:	4b13      	ldr	r3, [pc, #76]	; (8004a24 <receiveDataFrame+0xc7c>)
 80049d6:	0018      	movs	r0, r3
 80049d8:	f002 f854 	bl	8006a84 <puts>

	}

	// Release the FIFO
	(fifoNumber == 0) ? (CAN->RF0R |= CAN_RF0R_RFOM0) : (CAN->RF1R |= CAN_RF1R_RFOM1);
 80049dc:	69fb      	ldr	r3, [r7, #28]
 80049de:	2b00      	cmp	r3, #0
 80049e0:	d106      	bne.n	80049f0 <receiveDataFrame+0xc48>
 80049e2:	4b11      	ldr	r3, [pc, #68]	; (8004a28 <receiveDataFrame+0xc80>)
 80049e4:	68da      	ldr	r2, [r3, #12]
 80049e6:	4b10      	ldr	r3, [pc, #64]	; (8004a28 <receiveDataFrame+0xc80>)
 80049e8:	2120      	movs	r1, #32
 80049ea:	430a      	orrs	r2, r1
 80049ec:	60da      	str	r2, [r3, #12]

}
 80049ee:	e005      	b.n	80049fc <receiveDataFrame+0xc54>
	(fifoNumber == 0) ? (CAN->RF0R |= CAN_RF0R_RFOM0) : (CAN->RF1R |= CAN_RF1R_RFOM1);
 80049f0:	4b0d      	ldr	r3, [pc, #52]	; (8004a28 <receiveDataFrame+0xc80>)
 80049f2:	691a      	ldr	r2, [r3, #16]
 80049f4:	4b0c      	ldr	r3, [pc, #48]	; (8004a28 <receiveDataFrame+0xc80>)
 80049f6:	2120      	movs	r1, #32
 80049f8:	430a      	orrs	r2, r1
 80049fa:	611a      	str	r2, [r3, #16]
}
 80049fc:	46c0      	nop			; (mov r8, r8)
 80049fe:	46bd      	mov	sp, r7
 8004a00:	b008      	add	sp, #32
 8004a02:	bdb0      	pop	{r4, r5, r7, pc}
 8004a04:	20000280 	.word	0x20000280
 8004a08:	20000284 	.word	0x20000284
 8004a0c:	47c35000 	.word	0x47c35000
 8004a10:	0800b500 	.word	0x0800b500
 8004a14:	43030000 	.word	0x43030000
 8004a18:	41840000 	.word	0x41840000
 8004a1c:	20000274 	.word	0x20000274
 8004a20:	0800b52c 	.word	0x0800b52c
 8004a24:	0800b568 	.word	0x0800b568
 8004a28:	40006400 	.word	0x40006400

08004a2c <canEnableIRQ>:

void canEnableIRQ(){
 8004a2c:	b580      	push	{r7, lr}
 8004a2e:	af00      	add	r7, sp, #0

	NVIC_SetPriority(CEC_CAN_IRQn, 1); // Set interruption priority level to 1
 8004a30:	2101      	movs	r1, #1
 8004a32:	201e      	movs	r0, #30
 8004a34:	f7fe fc3c 	bl	80032b0 <__NVIC_SetPriority>
	NVIC_EnableIRQ(CEC_CAN_IRQn); // Enable interruption for the NVIC
 8004a38:	201e      	movs	r0, #30
 8004a3a:	f7fe fc1f 	bl	800327c <__NVIC_EnableIRQ>
}
 8004a3e:	46c0      	nop			; (mov r8, r8)
 8004a40:	46bd      	mov	sp, r7
 8004a42:	bd80      	pop	{r7, pc}

08004a44 <canDisableIRQ>:

void canDisableIRQ(){
 8004a44:	b580      	push	{r7, lr}
 8004a46:	af00      	add	r7, sp, #0

	CAN->IER &= ~(CAN_IER_TMEIE); // Interruption on completed transmission request (ok, arbitration loss, abort and error)
 8004a48:	4b16      	ldr	r3, [pc, #88]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a4a:	695a      	ldr	r2, [r3, #20]
 8004a4c:	4b15      	ldr	r3, [pc, #84]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a4e:	2101      	movs	r1, #1
 8004a50:	438a      	bics	r2, r1
 8004a52:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FMPIE0); // Interruption on message pending into the fifo 0
 8004a54:	4b13      	ldr	r3, [pc, #76]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a56:	695a      	ldr	r2, [r3, #20]
 8004a58:	4b12      	ldr	r3, [pc, #72]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a5a:	2102      	movs	r1, #2
 8004a5c:	438a      	bics	r2, r1
 8004a5e:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FMPIE1); // Interruption on message pending into the fifo 1
 8004a60:	4b10      	ldr	r3, [pc, #64]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a62:	695a      	ldr	r2, [r3, #20]
 8004a64:	4b0f      	ldr	r3, [pc, #60]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a66:	2110      	movs	r1, #16
 8004a68:	438a      	bics	r2, r1
 8004a6a:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FOVIE0); // Interruption on message overrun into the fifo 0
 8004a6c:	4b0d      	ldr	r3, [pc, #52]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a6e:	695a      	ldr	r2, [r3, #20]
 8004a70:	4b0c      	ldr	r3, [pc, #48]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a72:	2108      	movs	r1, #8
 8004a74:	438a      	bics	r2, r1
 8004a76:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_FOVIE1); // Interruption on message overrun into the fifo 1
 8004a78:	4b0a      	ldr	r3, [pc, #40]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a7a:	695a      	ldr	r2, [r3, #20]
 8004a7c:	4b09      	ldr	r3, [pc, #36]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a7e:	2140      	movs	r1, #64	; 0x40
 8004a80:	438a      	bics	r2, r1
 8004a82:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_ERRIE); // Interruption on error
 8004a84:	4b07      	ldr	r3, [pc, #28]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a86:	695a      	ldr	r2, [r3, #20]
 8004a88:	4b06      	ldr	r3, [pc, #24]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a8a:	4907      	ldr	r1, [pc, #28]	; (8004aa8 <canDisableIRQ+0x64>)
 8004a8c:	400a      	ands	r2, r1
 8004a8e:	615a      	str	r2, [r3, #20]
	CAN->IER &= ~(CAN_IER_LECIE); // Interruption on last error code
 8004a90:	4b04      	ldr	r3, [pc, #16]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a92:	695a      	ldr	r2, [r3, #20]
 8004a94:	4b03      	ldr	r3, [pc, #12]	; (8004aa4 <canDisableIRQ+0x60>)
 8004a96:	4905      	ldr	r1, [pc, #20]	; (8004aac <canDisableIRQ+0x68>)
 8004a98:	400a      	ands	r2, r1
 8004a9a:	615a      	str	r2, [r3, #20]
}
 8004a9c:	46c0      	nop			; (mov r8, r8)
 8004a9e:	46bd      	mov	sp, r7
 8004aa0:	bd80      	pop	{r7, pc}
 8004aa2:	46c0      	nop			; (mov r8, r8)
 8004aa4:	40006400 	.word	0x40006400
 8004aa8:	ffff7fff 	.word	0xffff7fff
 8004aac:	fffff7ff 	.word	0xfffff7ff

08004ab0 <CEC_CAN_IRQHandler>:

void CEC_CAN_IRQHandler(void){
 8004ab0:	b580      	push	{r7, lr}
 8004ab2:	b086      	sub	sp, #24
 8004ab4:	af00      	add	r7, sp, #0

	uint32_t interrupts = CAN->IER;
 8004ab6:	4bc8      	ldr	r3, [pc, #800]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004ab8:	695b      	ldr	r3, [r3, #20]
 8004aba:	617b      	str	r3, [r7, #20]
	uint32_t msrflags = CAN->MSR;
 8004abc:	4bc6      	ldr	r3, [pc, #792]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004abe:	685b      	ldr	r3, [r3, #4]
 8004ac0:	613b      	str	r3, [r7, #16]
	uint32_t tsrflags = CAN->TSR;
 8004ac2:	4bc5      	ldr	r3, [pc, #788]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004ac4:	689b      	ldr	r3, [r3, #8]
 8004ac6:	60fb      	str	r3, [r7, #12]
	uint32_t rf0rflags = CAN->RF0R;
 8004ac8:	4bc3      	ldr	r3, [pc, #780]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004aca:	68db      	ldr	r3, [r3, #12]
 8004acc:	60bb      	str	r3, [r7, #8]
	uint32_t rf1rflags = CAN->RF1R;
 8004ace:	4bc2      	ldr	r3, [pc, #776]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004ad0:	691b      	ldr	r3, [r3, #16]
 8004ad2:	607b      	str	r3, [r7, #4]
	uint32_t esrflags = CAN->ESR;
 8004ad4:	4bc0      	ldr	r3, [pc, #768]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004ad6:	699b      	ldr	r3, [r3, #24]
 8004ad8:	603b      	str	r3, [r7, #0]

	/********** TRANSMIT INTERRUPT **********/
	if ((interrupts & CAN_IER_TMEIE) != 0U){
 8004ada:	697b      	ldr	r3, [r7, #20]
 8004adc:	2201      	movs	r2, #1
 8004ade:	4013      	ands	r3, r2
 8004ae0:	d100      	bne.n	8004ae4 <CEC_CAN_IRQHandler+0x34>
 8004ae2:	e0f3      	b.n	8004ccc <CEC_CAN_IRQHandler+0x21c>

    	// Transmit interrupt mailbox 0
		if ((tsrflags & CAN_TSR_RQCP0) != 0U) {
 8004ae4:	68fb      	ldr	r3, [r7, #12]
 8004ae6:	2201      	movs	r2, #1
 8004ae8:	4013      	ands	r3, r2
 8004aea:	d049      	beq.n	8004b80 <CEC_CAN_IRQHandler+0xd0>

    		// Clear RQCP0, TXOK0, ALST0 and TERR0 bits
    		CAN->TSR &= ~CAN_TSR_RQCP0_Msk;
 8004aec:	4bba      	ldr	r3, [pc, #744]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004aee:	689a      	ldr	r2, [r3, #8]
 8004af0:	4bb9      	ldr	r3, [pc, #740]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004af2:	2101      	movs	r1, #1
 8004af4:	438a      	bics	r2, r1
 8004af6:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TXOK0_Msk;
 8004af8:	4bb7      	ldr	r3, [pc, #732]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004afa:	689a      	ldr	r2, [r3, #8]
 8004afc:	4bb6      	ldr	r3, [pc, #728]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004afe:	2102      	movs	r1, #2
 8004b00:	438a      	bics	r2, r1
 8004b02:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_ALST0_Msk;
 8004b04:	4bb4      	ldr	r3, [pc, #720]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004b06:	689a      	ldr	r2, [r3, #8]
 8004b08:	4bb3      	ldr	r3, [pc, #716]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004b0a:	2104      	movs	r1, #4
 8004b0c:	438a      	bics	r2, r1
 8004b0e:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TERR0_Msk;
 8004b10:	4bb1      	ldr	r3, [pc, #708]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004b12:	689a      	ldr	r2, [r3, #8]
 8004b14:	4bb0      	ldr	r3, [pc, #704]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004b16:	2108      	movs	r1, #8
 8004b18:	438a      	bics	r2, r1
 8004b1a:	609a      	str	r2, [r3, #8]

      		// Transmission succeed
    		if ((tsrflags & CAN_TSR_TXOK0) != 0U){
 8004b1c:	68fb      	ldr	r3, [r7, #12]
 8004b1e:	2202      	movs	r2, #2
 8004b20:	4013      	ands	r3, r2
 8004b22:	d003      	beq.n	8004b2c <CEC_CAN_IRQHandler+0x7c>

        		printf("Transmission succeed from mailbox 0 ! \r\n");
 8004b24:	4bad      	ldr	r3, [pc, #692]	; (8004ddc <CEC_CAN_IRQHandler+0x32c>)
 8004b26:	0018      	movs	r0, r3
 8004b28:	f001 ffac 	bl	8006a84 <puts>

    		}

    		// Transmission failed due to arbitration lost
      		if ((tsrflags & CAN_TSR_ALST0) != 0U){
 8004b2c:	68fb      	ldr	r3, [r7, #12]
 8004b2e:	2204      	movs	r2, #4
 8004b30:	4013      	ands	r3, r2
 8004b32:	d009      	beq.n	8004b48 <CEC_CAN_IRQHandler+0x98>

          		printf("Transmission fail due to arbitration lost from mailbox 0 ! \r\n");
 8004b34:	4baa      	ldr	r3, [pc, #680]	; (8004de0 <CEC_CAN_IRQHandler+0x330>)
 8004b36:	0018      	movs	r0, r3
 8004b38:	f001 ffa4 	bl	8006a84 <puts>
          		printf("Send new remote frame ! \r\n");
 8004b3c:	4ba9      	ldr	r3, [pc, #676]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004b3e:	0018      	movs	r0, r3
 8004b40:	f001 ffa0 	bl	8006a84 <puts>
          		sendRemoteFrame();
 8004b44:	f7ff f84e 	bl	8003be4 <sendRemoteFrame>
        	}

        	// Transmission failed due error
        	if ((tsrflags & CAN_TSR_TERR0) != 0U){
 8004b48:	68fb      	ldr	r3, [r7, #12]
 8004b4a:	2208      	movs	r2, #8
 8004b4c:	4013      	ands	r3, r2
 8004b4e:	d009      	beq.n	8004b64 <CEC_CAN_IRQHandler+0xb4>

          		printf("Transmission fail due to error from mailbox 0 ! \r\n");
 8004b50:	4ba5      	ldr	r3, [pc, #660]	; (8004de8 <CEC_CAN_IRQHandler+0x338>)
 8004b52:	0018      	movs	r0, r3
 8004b54:	f001 ff96 	bl	8006a84 <puts>
          		printf("Send new remote frame ! \r\n");
 8004b58:	4ba2      	ldr	r3, [pc, #648]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004b5a:	0018      	movs	r0, r3
 8004b5c:	f001 ff92 	bl	8006a84 <puts>
          		sendRemoteFrame();
 8004b60:	f7ff f840 	bl	8003be4 <sendRemoteFrame>

        	}

        	// Transmission aborted
        	if ((tsrflags & CAN_TSR_ABRQ0) != 0U) {
 8004b64:	68fb      	ldr	r3, [r7, #12]
 8004b66:	2280      	movs	r2, #128	; 0x80
 8004b68:	4013      	ands	r3, r2
 8004b6a:	d009      	beq.n	8004b80 <CEC_CAN_IRQHandler+0xd0>

        		printf("Transmission aborted from mailbox 0 ! \r\n");
 8004b6c:	4b9f      	ldr	r3, [pc, #636]	; (8004dec <CEC_CAN_IRQHandler+0x33c>)
 8004b6e:	0018      	movs	r0, r3
 8004b70:	f001 ff88 	bl	8006a84 <puts>
        		printf("Send new remote frame ! \r\n");
 8004b74:	4b9b      	ldr	r3, [pc, #620]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004b76:	0018      	movs	r0, r3
 8004b78:	f001 ff84 	bl	8006a84 <puts>
        		sendRemoteFrame();
 8004b7c:	f7ff f832 	bl	8003be4 <sendRemoteFrame>

        	}
      	}

    	// Transmit interrupt mailbox 1
    	if ((tsrflags & CAN_TSR_RQCP1) != 0U) {
 8004b80:	68fa      	ldr	r2, [r7, #12]
 8004b82:	2380      	movs	r3, #128	; 0x80
 8004b84:	005b      	lsls	r3, r3, #1
 8004b86:	4013      	ands	r3, r2
 8004b88:	d04d      	beq.n	8004c26 <CEC_CAN_IRQHandler+0x176>

    		// Clear RQCP0, TXOK0, ALST0 and TERR0 bits
    		CAN->TSR &= ~CAN_TSR_RQCP1_Msk;
 8004b8a:	4b93      	ldr	r3, [pc, #588]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004b8c:	689a      	ldr	r2, [r3, #8]
 8004b8e:	4b92      	ldr	r3, [pc, #584]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004b90:	4997      	ldr	r1, [pc, #604]	; (8004df0 <CEC_CAN_IRQHandler+0x340>)
 8004b92:	400a      	ands	r2, r1
 8004b94:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TXOK1_Msk;
 8004b96:	4b90      	ldr	r3, [pc, #576]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004b98:	689a      	ldr	r2, [r3, #8]
 8004b9a:	4b8f      	ldr	r3, [pc, #572]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004b9c:	4995      	ldr	r1, [pc, #596]	; (8004df4 <CEC_CAN_IRQHandler+0x344>)
 8004b9e:	400a      	ands	r2, r1
 8004ba0:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_ALST1_Msk;
 8004ba2:	4b8d      	ldr	r3, [pc, #564]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004ba4:	689a      	ldr	r2, [r3, #8]
 8004ba6:	4b8c      	ldr	r3, [pc, #560]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004ba8:	4993      	ldr	r1, [pc, #588]	; (8004df8 <CEC_CAN_IRQHandler+0x348>)
 8004baa:	400a      	ands	r2, r1
 8004bac:	609a      	str	r2, [r3, #8]
    		CAN->TSR &= ~CAN_TSR_TERR1_Msk;
 8004bae:	4b8a      	ldr	r3, [pc, #552]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004bb0:	689a      	ldr	r2, [r3, #8]
 8004bb2:	4b89      	ldr	r3, [pc, #548]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004bb4:	4991      	ldr	r1, [pc, #580]	; (8004dfc <CEC_CAN_IRQHandler+0x34c>)
 8004bb6:	400a      	ands	r2, r1
 8004bb8:	609a      	str	r2, [r3, #8]

    		// Transmission succeed
    	    if ((tsrflags & CAN_TSR_TXOK1) != 0U){
 8004bba:	68fa      	ldr	r2, [r7, #12]
 8004bbc:	2380      	movs	r3, #128	; 0x80
 8004bbe:	009b      	lsls	r3, r3, #2
 8004bc0:	4013      	ands	r3, r2
 8004bc2:	d003      	beq.n	8004bcc <CEC_CAN_IRQHandler+0x11c>

    	        printf("Transmission succeed from mailbox 1 ! \r\n");
 8004bc4:	4b8e      	ldr	r3, [pc, #568]	; (8004e00 <CEC_CAN_IRQHandler+0x350>)
 8004bc6:	0018      	movs	r0, r3
 8004bc8:	f001 ff5c 	bl	8006a84 <puts>

    	    }

    	    // Transmission failed due to arbitration lost
    	    if ((tsrflags & CAN_TSR_ALST1) != 0U){
 8004bcc:	68fa      	ldr	r2, [r7, #12]
 8004bce:	2380      	movs	r3, #128	; 0x80
 8004bd0:	00db      	lsls	r3, r3, #3
 8004bd2:	4013      	ands	r3, r2
 8004bd4:	d009      	beq.n	8004bea <CEC_CAN_IRQHandler+0x13a>

    	    	printf("Transmission fail due to arbitration lost from mailbox 1 ! \r\n");
 8004bd6:	4b8b      	ldr	r3, [pc, #556]	; (8004e04 <CEC_CAN_IRQHandler+0x354>)
 8004bd8:	0018      	movs	r0, r3
 8004bda:	f001 ff53 	bl	8006a84 <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004bde:	4b81      	ldr	r3, [pc, #516]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004be0:	0018      	movs	r0, r3
 8004be2:	f001 ff4f 	bl	8006a84 <puts>
    	    	sendRemoteFrame();
 8004be6:	f7fe fffd 	bl	8003be4 <sendRemoteFrame>
    	    }

    	    // Transmission failed due error
    	    if ((tsrflags & CAN_TSR_TERR1) != 0U){
 8004bea:	68fa      	ldr	r2, [r7, #12]
 8004bec:	2380      	movs	r3, #128	; 0x80
 8004bee:	011b      	lsls	r3, r3, #4
 8004bf0:	4013      	ands	r3, r2
 8004bf2:	d009      	beq.n	8004c08 <CEC_CAN_IRQHandler+0x158>

    	    	printf("Transmission fail due to error from mailbox 1 ! \r\n");
 8004bf4:	4b84      	ldr	r3, [pc, #528]	; (8004e08 <CEC_CAN_IRQHandler+0x358>)
 8004bf6:	0018      	movs	r0, r3
 8004bf8:	f001 ff44 	bl	8006a84 <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004bfc:	4b79      	ldr	r3, [pc, #484]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004bfe:	0018      	movs	r0, r3
 8004c00:	f001 ff40 	bl	8006a84 <puts>
    	    	sendRemoteFrame();
 8004c04:	f7fe ffee 	bl	8003be4 <sendRemoteFrame>
    	    }

    	    // Transmission aborted
    	    if ((tsrflags & CAN_TSR_ABRQ1) != 0U) {
 8004c08:	68fa      	ldr	r2, [r7, #12]
 8004c0a:	2380      	movs	r3, #128	; 0x80
 8004c0c:	021b      	lsls	r3, r3, #8
 8004c0e:	4013      	ands	r3, r2
 8004c10:	d009      	beq.n	8004c26 <CEC_CAN_IRQHandler+0x176>

    	        printf("Transmission aborted from mailbox 1 !\r\n");
 8004c12:	4b7e      	ldr	r3, [pc, #504]	; (8004e0c <CEC_CAN_IRQHandler+0x35c>)
 8004c14:	0018      	movs	r0, r3
 8004c16:	f001 ff35 	bl	8006a84 <puts>
    	        printf("Send new remote frame ! \r\n");
 8004c1a:	4b72      	ldr	r3, [pc, #456]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004c1c:	0018      	movs	r0, r3
 8004c1e:	f001 ff31 	bl	8006a84 <puts>
    	        sendRemoteFrame();
 8004c22:	f7fe ffdf 	bl	8003be4 <sendRemoteFrame>
    	    }
    	}

    	// Transmit interrupt mailbox 2
    	if ((tsrflags & CAN_TSR_RQCP2) != 0U) {
 8004c26:	68fa      	ldr	r2, [r7, #12]
 8004c28:	2380      	movs	r3, #128	; 0x80
 8004c2a:	025b      	lsls	r3, r3, #9
 8004c2c:	4013      	ands	r3, r2
 8004c2e:	d04d      	beq.n	8004ccc <CEC_CAN_IRQHandler+0x21c>

    		// Clear RQCP2, TXOK2, ALST2 and TERR2 bits
    		CAN->TSR &= ~CAN_TSR_RQCP2_Msk;
 8004c30:	4b69      	ldr	r3, [pc, #420]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004c32:	689a      	ldr	r2, [r3, #8]
 8004c34:	4b68      	ldr	r3, [pc, #416]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004c36:	4976      	ldr	r1, [pc, #472]	; (8004e10 <CEC_CAN_IRQHandler+0x360>)
 8004c38:	400a      	ands	r2, r1
 8004c3a:	609a      	str	r2, [r3, #8]
    	    CAN->TSR &= ~CAN_TSR_TXOK2_Msk;
 8004c3c:	4b66      	ldr	r3, [pc, #408]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004c3e:	689a      	ldr	r2, [r3, #8]
 8004c40:	4b65      	ldr	r3, [pc, #404]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004c42:	4974      	ldr	r1, [pc, #464]	; (8004e14 <CEC_CAN_IRQHandler+0x364>)
 8004c44:	400a      	ands	r2, r1
 8004c46:	609a      	str	r2, [r3, #8]
    	    CAN->TSR &= ~CAN_TSR_ALST2_Msk;
 8004c48:	4b63      	ldr	r3, [pc, #396]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004c4a:	689a      	ldr	r2, [r3, #8]
 8004c4c:	4b62      	ldr	r3, [pc, #392]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004c4e:	4972      	ldr	r1, [pc, #456]	; (8004e18 <CEC_CAN_IRQHandler+0x368>)
 8004c50:	400a      	ands	r2, r1
 8004c52:	609a      	str	r2, [r3, #8]
    	    CAN->TSR &= ~CAN_TSR_TERR2_Msk;
 8004c54:	4b60      	ldr	r3, [pc, #384]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004c56:	689a      	ldr	r2, [r3, #8]
 8004c58:	4b5f      	ldr	r3, [pc, #380]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004c5a:	4970      	ldr	r1, [pc, #448]	; (8004e1c <CEC_CAN_IRQHandler+0x36c>)
 8004c5c:	400a      	ands	r2, r1
 8004c5e:	609a      	str	r2, [r3, #8]

    	    // Transmission succeed
    	    if ((tsrflags & CAN_TSR_TXOK2) != 0U){
 8004c60:	68fa      	ldr	r2, [r7, #12]
 8004c62:	2380      	movs	r3, #128	; 0x80
 8004c64:	029b      	lsls	r3, r3, #10
 8004c66:	4013      	ands	r3, r2
 8004c68:	d003      	beq.n	8004c72 <CEC_CAN_IRQHandler+0x1c2>

    	    	printf("Transmission succeed from mailbox 2 !\r\n");
 8004c6a:	4b6d      	ldr	r3, [pc, #436]	; (8004e20 <CEC_CAN_IRQHandler+0x370>)
 8004c6c:	0018      	movs	r0, r3
 8004c6e:	f001 ff09 	bl	8006a84 <puts>

    	    }

    	    // Transmission failed due to arbitration lost
    	    if ((tsrflags & CAN_TSR_ALST2) != 0U){
 8004c72:	68fa      	ldr	r2, [r7, #12]
 8004c74:	2380      	movs	r3, #128	; 0x80
 8004c76:	02db      	lsls	r3, r3, #11
 8004c78:	4013      	ands	r3, r2
 8004c7a:	d009      	beq.n	8004c90 <CEC_CAN_IRQHandler+0x1e0>

    	    	printf("Transmission fail due to arbitration lost from mailbox 2 !\r\n");
 8004c7c:	4b69      	ldr	r3, [pc, #420]	; (8004e24 <CEC_CAN_IRQHandler+0x374>)
 8004c7e:	0018      	movs	r0, r3
 8004c80:	f001 ff00 	bl	8006a84 <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004c84:	4b57      	ldr	r3, [pc, #348]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004c86:	0018      	movs	r0, r3
 8004c88:	f001 fefc 	bl	8006a84 <puts>
    	    	sendRemoteFrame();
 8004c8c:	f7fe ffaa 	bl	8003be4 <sendRemoteFrame>
    	    }

    	    // Transmission failed due error
    	    if ((tsrflags & CAN_TSR_TERR2) != 0U){
 8004c90:	68fa      	ldr	r2, [r7, #12]
 8004c92:	2380      	movs	r3, #128	; 0x80
 8004c94:	031b      	lsls	r3, r3, #12
 8004c96:	4013      	ands	r3, r2
 8004c98:	d009      	beq.n	8004cae <CEC_CAN_IRQHandler+0x1fe>

    	    	printf("Transmission fail due to error from mailbox 2 !\r\n");
 8004c9a:	4b63      	ldr	r3, [pc, #396]	; (8004e28 <CEC_CAN_IRQHandler+0x378>)
 8004c9c:	0018      	movs	r0, r3
 8004c9e:	f001 fef1 	bl	8006a84 <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004ca2:	4b50      	ldr	r3, [pc, #320]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004ca4:	0018      	movs	r0, r3
 8004ca6:	f001 feed 	bl	8006a84 <puts>
    	    	sendRemoteFrame();
 8004caa:	f7fe ff9b 	bl	8003be4 <sendRemoteFrame>
    	    }

    	    // Transmission aborted
    	    if ((tsrflags & CAN_TSR_ABRQ2) != 0U) {
 8004cae:	68fa      	ldr	r2, [r7, #12]
 8004cb0:	2380      	movs	r3, #128	; 0x80
 8004cb2:	041b      	lsls	r3, r3, #16
 8004cb4:	4013      	ands	r3, r2
 8004cb6:	d009      	beq.n	8004ccc <CEC_CAN_IRQHandler+0x21c>

    	    	printf("Transmission aborted from mailbox 2 !\r\n");
 8004cb8:	4b5c      	ldr	r3, [pc, #368]	; (8004e2c <CEC_CAN_IRQHandler+0x37c>)
 8004cba:	0018      	movs	r0, r3
 8004cbc:	f001 fee2 	bl	8006a84 <puts>
    	    	printf("Send new remote frame ! \r\n");
 8004cc0:	4b48      	ldr	r3, [pc, #288]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004cc2:	0018      	movs	r0, r3
 8004cc4:	f001 fede 	bl	8006a84 <puts>
    	    	sendRemoteFrame();
 8004cc8:	f7fe ff8c 	bl	8003be4 <sendRemoteFrame>
	}

	/********** FIFO 0 INTERRUPT **********/

	// Fifo 0 overrun
  	if ((interrupts & CAN_IER_FOVIE0) != 0U){
 8004ccc:	697b      	ldr	r3, [r7, #20]
 8004cce:	2208      	movs	r2, #8
 8004cd0:	4013      	ands	r3, r2
 8004cd2:	d013      	beq.n	8004cfc <CEC_CAN_IRQHandler+0x24c>

    	if ((rf0rflags & CAN_RF0R_FOVR0) != 0U) {
 8004cd4:	68bb      	ldr	r3, [r7, #8]
 8004cd6:	2210      	movs	r2, #16
 8004cd8:	4013      	ands	r3, r2
 8004cda:	d00f      	beq.n	8004cfc <CEC_CAN_IRQHandler+0x24c>

      		printf("Fifo 0 overrun ! \r\n");
 8004cdc:	4b54      	ldr	r3, [pc, #336]	; (8004e30 <CEC_CAN_IRQHandler+0x380>)
 8004cde:	0018      	movs	r0, r3
 8004ce0:	f001 fed0 	bl	8006a84 <puts>
      		printf("Send new remote frame ! \r\n");
 8004ce4:	4b3f      	ldr	r3, [pc, #252]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004ce6:	0018      	movs	r0, r3
 8004ce8:	f001 fecc 	bl	8006a84 <puts>
      		sendRemoteFrame();
 8004cec:	f7fe ff7a 	bl	8003be4 <sendRemoteFrame>

      		// Clear fifo 0 overrun flag
      		CAN->RF0R &= ~CAN_RF0R_FOVR0_Msk;
 8004cf0:	4b39      	ldr	r3, [pc, #228]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004cf2:	68da      	ldr	r2, [r3, #12]
 8004cf4:	4b38      	ldr	r3, [pc, #224]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004cf6:	2110      	movs	r1, #16
 8004cf8:	438a      	bics	r2, r1
 8004cfa:	60da      	str	r2, [r3, #12]
    	}
  	}

  	// Fifo 0 full
  	if ((interrupts & CAN_IER_FFIE0) != 0U)	{
 8004cfc:	697b      	ldr	r3, [r7, #20]
 8004cfe:	2204      	movs	r2, #4
 8004d00:	4013      	ands	r3, r2
 8004d02:	d00d      	beq.n	8004d20 <CEC_CAN_IRQHandler+0x270>

    	if ((rf0rflags & CAN_RF0R_FULL0) != 0U)	{
 8004d04:	68bb      	ldr	r3, [r7, #8]
 8004d06:	2208      	movs	r2, #8
 8004d08:	4013      	ands	r3, r2
 8004d0a:	d009      	beq.n	8004d20 <CEC_CAN_IRQHandler+0x270>

      		printf("Fifo 0 full ! \r\n");
 8004d0c:	4b49      	ldr	r3, [pc, #292]	; (8004e34 <CEC_CAN_IRQHandler+0x384>)
 8004d0e:	0018      	movs	r0, r3
 8004d10:	f001 feb8 	bl	8006a84 <puts>

      		// Clear fifo 0 full flag
      		CAN->RF0R &= ~CAN_RF0R_FULL0_Msk;
 8004d14:	4b30      	ldr	r3, [pc, #192]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004d16:	68da      	ldr	r2, [r3, #12]
 8004d18:	4b2f      	ldr	r3, [pc, #188]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004d1a:	2108      	movs	r1, #8
 8004d1c:	438a      	bics	r2, r1
 8004d1e:	60da      	str	r2, [r3, #12]
    	}
  	}

  	// Fifo 0 message pending
  	if ((interrupts & CAN_IER_FMPIE0) != 0U) {
 8004d20:	697b      	ldr	r3, [r7, #20]
 8004d22:	2202      	movs	r2, #2
 8004d24:	4013      	ands	r3, r2
 8004d26:	d017      	beq.n	8004d58 <CEC_CAN_IRQHandler+0x2a8>

    	// Check if message is still pending
    	if ((CAN->RF0R & CAN_RF0R_FMP0) != 0U) {
 8004d28:	4b2b      	ldr	r3, [pc, #172]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004d2a:	68db      	ldr	r3, [r3, #12]
 8004d2c:	2203      	movs	r2, #3
 8004d2e:	4013      	ands	r3, r2
 8004d30:	d012      	beq.n	8004d58 <CEC_CAN_IRQHandler+0x2a8>

    		printf("Fifo 0 message pending ! \r\n");
 8004d32:	4b41      	ldr	r3, [pc, #260]	; (8004e38 <CEC_CAN_IRQHandler+0x388>)
 8004d34:	0018      	movs	r0, r3
 8004d36:	f001 fea5 	bl	8006a84 <puts>
    		receiveDataFrame();
 8004d3a:	f7ff f835 	bl	8003da8 <receiveDataFrame>

    		// Ask for informations about the four next passes
    		if (numberOfDataFrameReceived < 24) {
 8004d3e:	4b3f      	ldr	r3, [pc, #252]	; (8004e3c <CEC_CAN_IRQHandler+0x38c>)
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	2b17      	cmp	r3, #23
 8004d44:	d802      	bhi.n	8004d4c <CEC_CAN_IRQHandler+0x29c>
    			sendRemoteFrame();
 8004d46:	f7fe ff4d 	bl	8003be4 <sendRemoteFrame>
 8004d4a:	e005      	b.n	8004d58 <CEC_CAN_IRQHandler+0x2a8>
    		}

    		// Disable CAN IRQ if we already have the informations about the four next passes
    		else {

    			printf("Disable CAN IRQ because we have the informations about the 4 next passes ! \r\n");
 8004d4c:	4b3c      	ldr	r3, [pc, #240]	; (8004e40 <CEC_CAN_IRQHandler+0x390>)
 8004d4e:	0018      	movs	r0, r3
 8004d50:	f001 fe98 	bl	8006a84 <puts>
    			canDisableIRQ();
 8004d54:	f7ff fe76 	bl	8004a44 <canDisableIRQ>
  	}

  	/********** FIFO 1 INTERRUPT **********/

  		// Fifo 1 overrun
  	  	if ((interrupts & CAN_IER_FOVIE1) != 0U){
 8004d58:	697b      	ldr	r3, [r7, #20]
 8004d5a:	2240      	movs	r2, #64	; 0x40
 8004d5c:	4013      	ands	r3, r2
 8004d5e:	d013      	beq.n	8004d88 <CEC_CAN_IRQHandler+0x2d8>

  	    	if ((rf1rflags & CAN_RF1R_FOVR1) != 0U) {
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	2210      	movs	r2, #16
 8004d64:	4013      	ands	r3, r2
 8004d66:	d00f      	beq.n	8004d88 <CEC_CAN_IRQHandler+0x2d8>

  	      		printf("Fifo 1 overrun ! \r\n");
 8004d68:	4b36      	ldr	r3, [pc, #216]	; (8004e44 <CEC_CAN_IRQHandler+0x394>)
 8004d6a:	0018      	movs	r0, r3
 8004d6c:	f001 fe8a 	bl	8006a84 <puts>
  	      		printf("Send new remote frame ! \r\n");
 8004d70:	4b1c      	ldr	r3, [pc, #112]	; (8004de4 <CEC_CAN_IRQHandler+0x334>)
 8004d72:	0018      	movs	r0, r3
 8004d74:	f001 fe86 	bl	8006a84 <puts>
  	      		sendRemoteFrame();
 8004d78:	f7fe ff34 	bl	8003be4 <sendRemoteFrame>

  	      		// Clear fifo 1 overrun flag
  	      		CAN->RF1R &= ~CAN_RF1R_FOVR1_Msk;
 8004d7c:	4b16      	ldr	r3, [pc, #88]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004d7e:	691a      	ldr	r2, [r3, #16]
 8004d80:	4b15      	ldr	r3, [pc, #84]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004d82:	2110      	movs	r1, #16
 8004d84:	438a      	bics	r2, r1
 8004d86:	611a      	str	r2, [r3, #16]
  	    	}
  	  	}

  	  	// Fifo 1 full
  	  	if ((interrupts & CAN_IER_FFIE1) != 0U)	{
 8004d88:	697b      	ldr	r3, [r7, #20]
 8004d8a:	2220      	movs	r2, #32
 8004d8c:	4013      	ands	r3, r2
 8004d8e:	d00d      	beq.n	8004dac <CEC_CAN_IRQHandler+0x2fc>

  	    	if ((rf1rflags & CAN_RF1R_FULL1) != 0U)	{
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	2208      	movs	r2, #8
 8004d94:	4013      	ands	r3, r2
 8004d96:	d009      	beq.n	8004dac <CEC_CAN_IRQHandler+0x2fc>

  	      		printf("Fifo 1 full ! \r\n");
 8004d98:	4b2b      	ldr	r3, [pc, #172]	; (8004e48 <CEC_CAN_IRQHandler+0x398>)
 8004d9a:	0018      	movs	r0, r3
 8004d9c:	f001 fe72 	bl	8006a84 <puts>

  	      		// Clear fifo 1 full flag
  	      		CAN->RF1R &= ~CAN_RF1R_FULL1_Msk;
 8004da0:	4b0d      	ldr	r3, [pc, #52]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004da2:	691a      	ldr	r2, [r3, #16]
 8004da4:	4b0c      	ldr	r3, [pc, #48]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004da6:	2108      	movs	r1, #8
 8004da8:	438a      	bics	r2, r1
 8004daa:	611a      	str	r2, [r3, #16]
  	    	}
  	  	}

  	  	// Fifo 1 message pending
  	  	if ((interrupts & CAN_IER_FMPIE1) != 0U) {
 8004dac:	697b      	ldr	r3, [r7, #20]
 8004dae:	2210      	movs	r2, #16
 8004db0:	4013      	ands	r3, r2
 8004db2:	d053      	beq.n	8004e5c <CEC_CAN_IRQHandler+0x3ac>

  	    	// Check if message is still pending
  	    	if ((CAN->RF1R & CAN_RF1R_FMP1) != 0U) {
 8004db4:	4b08      	ldr	r3, [pc, #32]	; (8004dd8 <CEC_CAN_IRQHandler+0x328>)
 8004db6:	691b      	ldr	r3, [r3, #16]
 8004db8:	2203      	movs	r2, #3
 8004dba:	4013      	ands	r3, r2
 8004dbc:	d04e      	beq.n	8004e5c <CEC_CAN_IRQHandler+0x3ac>

  	    		printf("Fifo 1 message pending ! \r\n");
 8004dbe:	4b23      	ldr	r3, [pc, #140]	; (8004e4c <CEC_CAN_IRQHandler+0x39c>)
 8004dc0:	0018      	movs	r0, r3
 8004dc2:	f001 fe5f 	bl	8006a84 <puts>
  	    		receiveDataFrame();
 8004dc6:	f7fe ffef 	bl	8003da8 <receiveDataFrame>

  	    		// Ask for informations about the four next passes
  	    		if (numberOfDataFrameReceived < 24) {
 8004dca:	4b1c      	ldr	r3, [pc, #112]	; (8004e3c <CEC_CAN_IRQHandler+0x38c>)
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	2b17      	cmp	r3, #23
 8004dd0:	d83e      	bhi.n	8004e50 <CEC_CAN_IRQHandler+0x3a0>
  	    		    sendRemoteFrame();
 8004dd2:	f7fe ff07 	bl	8003be4 <sendRemoteFrame>
 8004dd6:	e041      	b.n	8004e5c <CEC_CAN_IRQHandler+0x3ac>
 8004dd8:	40006400 	.word	0x40006400
 8004ddc:	0800b5b0 	.word	0x0800b5b0
 8004de0:	0800b5d8 	.word	0x0800b5d8
 8004de4:	0800b618 	.word	0x0800b618
 8004de8:	0800b634 	.word	0x0800b634
 8004dec:	0800b668 	.word	0x0800b668
 8004df0:	fffffeff 	.word	0xfffffeff
 8004df4:	fffffdff 	.word	0xfffffdff
 8004df8:	fffffbff 	.word	0xfffffbff
 8004dfc:	fffff7ff 	.word	0xfffff7ff
 8004e00:	0800b690 	.word	0x0800b690
 8004e04:	0800b6b8 	.word	0x0800b6b8
 8004e08:	0800b6f8 	.word	0x0800b6f8
 8004e0c:	0800b72c 	.word	0x0800b72c
 8004e10:	fffeffff 	.word	0xfffeffff
 8004e14:	fffdffff 	.word	0xfffdffff
 8004e18:	fffbffff 	.word	0xfffbffff
 8004e1c:	fff7ffff 	.word	0xfff7ffff
 8004e20:	0800b754 	.word	0x0800b754
 8004e24:	0800b77c 	.word	0x0800b77c
 8004e28:	0800b7b8 	.word	0x0800b7b8
 8004e2c:	0800b7ec 	.word	0x0800b7ec
 8004e30:	0800b814 	.word	0x0800b814
 8004e34:	0800b828 	.word	0x0800b828
 8004e38:	0800b838 	.word	0x0800b838
 8004e3c:	20000274 	.word	0x20000274
 8004e40:	0800b854 	.word	0x0800b854
 8004e44:	0800b8a4 	.word	0x0800b8a4
 8004e48:	0800b8b8 	.word	0x0800b8b8
 8004e4c:	0800b8c8 	.word	0x0800b8c8
  	    		}

  	    		// Disable CAN IRQ if we already have the informations about the four next passes
  	    		else {

  	    			printf("Disable CAN IRQ because we have the informations about the 4 next passes ! \r\n");
 8004e50:	4b5d      	ldr	r3, [pc, #372]	; (8004fc8 <CEC_CAN_IRQHandler+0x518>)
 8004e52:	0018      	movs	r0, r3
 8004e54:	f001 fe16 	bl	8006a84 <puts>
  	    			canDisableIRQ();
 8004e58:	f7ff fdf4 	bl	8004a44 <canDisableIRQ>
  	  	}

  	/********** STATUS CHANGE ERROR INTERRUPT **********/

	// Sleep aknowledge
	if ((interrupts & CAN_IER_SLKIE) != 0U) {
 8004e5c:	697a      	ldr	r2, [r7, #20]
 8004e5e:	2380      	movs	r3, #128	; 0x80
 8004e60:	029b      	lsls	r3, r3, #10
 8004e62:	4013      	ands	r3, r2
 8004e64:	d00d      	beq.n	8004e82 <CEC_CAN_IRQHandler+0x3d2>

    	if ((msrflags & CAN_MSR_SLAKI) != 0U) {
 8004e66:	693b      	ldr	r3, [r7, #16]
 8004e68:	2210      	movs	r2, #16
 8004e6a:	4013      	ands	r3, r2
 8004e6c:	d009      	beq.n	8004e82 <CEC_CAN_IRQHandler+0x3d2>

    		printf("Sleep aknowledge for the can ! \r\n");
 8004e6e:	4b57      	ldr	r3, [pc, #348]	; (8004fcc <CEC_CAN_IRQHandler+0x51c>)
 8004e70:	0018      	movs	r0, r3
 8004e72:	f001 fe07 	bl	8006a84 <puts>

    		// Clear Sleep interrupt Flag
    		CAN->MSR &= ~CAN_MSR_SLAKI_Msk;
 8004e76:	4b56      	ldr	r3, [pc, #344]	; (8004fd0 <CEC_CAN_IRQHandler+0x520>)
 8004e78:	685a      	ldr	r2, [r3, #4]
 8004e7a:	4b55      	ldr	r3, [pc, #340]	; (8004fd0 <CEC_CAN_IRQHandler+0x520>)
 8004e7c:	2110      	movs	r1, #16
 8004e7e:	438a      	bics	r2, r1
 8004e80:	605a      	str	r2, [r3, #4]
    	}
  	}

	// WakeUp aknowledge
  	if ((interrupts & CAN_IER_WKUIE) != 0U){
 8004e82:	697a      	ldr	r2, [r7, #20]
 8004e84:	2380      	movs	r3, #128	; 0x80
 8004e86:	025b      	lsls	r3, r3, #9
 8004e88:	4013      	ands	r3, r2
 8004e8a:	d00d      	beq.n	8004ea8 <CEC_CAN_IRQHandler+0x3f8>

    	if ((msrflags & CAN_MSR_WKUI) != 0U){
 8004e8c:	693b      	ldr	r3, [r7, #16]
 8004e8e:	2208      	movs	r2, #8
 8004e90:	4013      	ands	r3, r2
 8004e92:	d009      	beq.n	8004ea8 <CEC_CAN_IRQHandler+0x3f8>


      	printf("Wakeup aknowledge for the can ! \r\n");
 8004e94:	4b4f      	ldr	r3, [pc, #316]	; (8004fd4 <CEC_CAN_IRQHandler+0x524>)
 8004e96:	0018      	movs	r0, r3
 8004e98:	f001 fdf4 	bl	8006a84 <puts>

      	// Clear WakeUp Flag
     	CAN->MSR &= ~CAN_MSR_WKUI_Msk;
 8004e9c:	4b4c      	ldr	r3, [pc, #304]	; (8004fd0 <CEC_CAN_IRQHandler+0x520>)
 8004e9e:	685a      	ldr	r2, [r3, #4]
 8004ea0:	4b4b      	ldr	r3, [pc, #300]	; (8004fd0 <CEC_CAN_IRQHandler+0x520>)
 8004ea2:	2108      	movs	r1, #8
 8004ea4:	438a      	bics	r2, r1
 8004ea6:	605a      	str	r2, [r3, #4]

    	}
  	}

  	// Error
	if ((interrupts & CAN_IER_ERRIE) != 0U){
 8004ea8:	697a      	ldr	r2, [r7, #20]
 8004eaa:	2380      	movs	r3, #128	; 0x80
 8004eac:	021b      	lsls	r3, r3, #8
 8004eae:	4013      	ands	r3, r2
 8004eb0:	d100      	bne.n	8004eb4 <CEC_CAN_IRQHandler+0x404>
 8004eb2:	e085      	b.n	8004fc0 <CEC_CAN_IRQHandler+0x510>

    	if ((msrflags & CAN_MSR_ERRI) != 0U){
 8004eb4:	693b      	ldr	r3, [r7, #16]
 8004eb6:	2204      	movs	r2, #4
 8004eb8:	4013      	ands	r3, r2
 8004eba:	d100      	bne.n	8004ebe <CEC_CAN_IRQHandler+0x40e>
 8004ebc:	e07a      	b.n	8004fb4 <CEC_CAN_IRQHandler+0x504>

      		// Error Warning Flag
      		if (((interrupts & CAN_IER_EWGIE) != 0U) && ((esrflags & CAN_ESR_EWGF) != 0U)){
 8004ebe:	697a      	ldr	r2, [r7, #20]
 8004ec0:	2380      	movs	r3, #128	; 0x80
 8004ec2:	005b      	lsls	r3, r3, #1
 8004ec4:	4013      	ands	r3, r2
 8004ec6:	d007      	beq.n	8004ed8 <CEC_CAN_IRQHandler+0x428>
 8004ec8:	683b      	ldr	r3, [r7, #0]
 8004eca:	2201      	movs	r2, #1
 8004ecc:	4013      	ands	r3, r2
 8004ece:	d003      	beq.n	8004ed8 <CEC_CAN_IRQHandler+0x428>

        		printf("Error warning flag ! \r\n");
 8004ed0:	4b41      	ldr	r3, [pc, #260]	; (8004fd8 <CEC_CAN_IRQHandler+0x528>)
 8004ed2:	0018      	movs	r0, r3
 8004ed4:	f001 fdd6 	bl	8006a84 <puts>

      		}

      		// Error Passive Flag
      		if (((CAN_IER_EPVIE) != 0U) && ((esrflags & CAN_ESR_EPVF) != 0U)) {
 8004ed8:	683b      	ldr	r3, [r7, #0]
 8004eda:	2202      	movs	r2, #2
 8004edc:	4013      	ands	r3, r2
 8004ede:	d003      	beq.n	8004ee8 <CEC_CAN_IRQHandler+0x438>


        		printf("Error passive flag ! \r\n");
 8004ee0:	4b3e      	ldr	r3, [pc, #248]	; (8004fdc <CEC_CAN_IRQHandler+0x52c>)
 8004ee2:	0018      	movs	r0, r3
 8004ee4:	f001 fdce 	bl	8006a84 <puts>

      		}

      		// Bus-off Flag
      		if (((interrupts & CAN_IER_BOFIE) != 0U) && ((esrflags & CAN_ESR_BOFF) != 0U)) {
 8004ee8:	697a      	ldr	r2, [r7, #20]
 8004eea:	2380      	movs	r3, #128	; 0x80
 8004eec:	00db      	lsls	r3, r3, #3
 8004eee:	4013      	ands	r3, r2
 8004ef0:	d007      	beq.n	8004f02 <CEC_CAN_IRQHandler+0x452>
 8004ef2:	683b      	ldr	r3, [r7, #0]
 8004ef4:	2204      	movs	r2, #4
 8004ef6:	4013      	ands	r3, r2
 8004ef8:	d003      	beq.n	8004f02 <CEC_CAN_IRQHandler+0x452>

        		printf("Error bus-off flag ! \r\n");
 8004efa:	4b39      	ldr	r3, [pc, #228]	; (8004fe0 <CEC_CAN_IRQHandler+0x530>)
 8004efc:	0018      	movs	r0, r3
 8004efe:	f001 fdc1 	bl	8006a84 <puts>

      		}

      		// Error Code Flag
      		if (((interrupts & CAN_IER_LECIE) != 0U) && ((esrflags & CAN_ESR_LEC) != 0U)) {
 8004f02:	697a      	ldr	r2, [r7, #20]
 8004f04:	2380      	movs	r3, #128	; 0x80
 8004f06:	011b      	lsls	r3, r3, #4
 8004f08:	4013      	ands	r3, r2
 8004f0a:	d053      	beq.n	8004fb4 <CEC_CAN_IRQHandler+0x504>
 8004f0c:	683b      	ldr	r3, [r7, #0]
 8004f0e:	2270      	movs	r2, #112	; 0x70
 8004f10:	4013      	ands	r3, r2
 8004f12:	d04f      	beq.n	8004fb4 <CEC_CAN_IRQHandler+0x504>

      			sendRemoteFrame();
 8004f14:	f7fe fe66 	bl	8003be4 <sendRemoteFrame>

        		switch (esrflags & CAN_ESR_LEC) {
 8004f18:	683b      	ldr	r3, [r7, #0]
 8004f1a:	2270      	movs	r2, #112	; 0x70
 8004f1c:	4013      	ands	r3, r2
 8004f1e:	2b30      	cmp	r3, #48	; 0x30
 8004f20:	d01e      	beq.n	8004f60 <CEC_CAN_IRQHandler+0x4b0>
 8004f22:	d804      	bhi.n	8004f2e <CEC_CAN_IRQHandler+0x47e>
 8004f24:	2b10      	cmp	r3, #16
 8004f26:	d009      	beq.n	8004f3c <CEC_CAN_IRQHandler+0x48c>
 8004f28:	2b20      	cmp	r3, #32
 8004f2a:	d010      	beq.n	8004f4e <CEC_CAN_IRQHandler+0x49e>
            		printf("CRC error ! \r\n");
          			printf("Send new remote frame ! \r\n");
           			break;

          			default:
            		break;
 8004f2c:	e03c      	b.n	8004fa8 <CEC_CAN_IRQHandler+0x4f8>
        		switch (esrflags & CAN_ESR_LEC) {
 8004f2e:	2b50      	cmp	r3, #80	; 0x50
 8004f30:	d028      	beq.n	8004f84 <CEC_CAN_IRQHandler+0x4d4>
 8004f32:	2b60      	cmp	r3, #96	; 0x60
 8004f34:	d02f      	beq.n	8004f96 <CEC_CAN_IRQHandler+0x4e6>
 8004f36:	2b40      	cmp	r3, #64	; 0x40
 8004f38:	d01b      	beq.n	8004f72 <CEC_CAN_IRQHandler+0x4c2>
            		break;
 8004f3a:	e035      	b.n	8004fa8 <CEC_CAN_IRQHandler+0x4f8>
            		printf("Stuff error ! \r\n");
 8004f3c:	4b29      	ldr	r3, [pc, #164]	; (8004fe4 <CEC_CAN_IRQHandler+0x534>)
 8004f3e:	0018      	movs	r0, r3
 8004f40:	f001 fda0 	bl	8006a84 <puts>
          			printf("Send new remote frame ! \r\n");
 8004f44:	4b28      	ldr	r3, [pc, #160]	; (8004fe8 <CEC_CAN_IRQHandler+0x538>)
 8004f46:	0018      	movs	r0, r3
 8004f48:	f001 fd9c 	bl	8006a84 <puts>
            		break;
 8004f4c:	e02c      	b.n	8004fa8 <CEC_CAN_IRQHandler+0x4f8>
            		printf("Form error ! \r\n");
 8004f4e:	4b27      	ldr	r3, [pc, #156]	; (8004fec <CEC_CAN_IRQHandler+0x53c>)
 8004f50:	0018      	movs	r0, r3
 8004f52:	f001 fd97 	bl	8006a84 <puts>
          			printf("Send new remote frame ! \r\n");
 8004f56:	4b24      	ldr	r3, [pc, #144]	; (8004fe8 <CEC_CAN_IRQHandler+0x538>)
 8004f58:	0018      	movs	r0, r3
 8004f5a:	f001 fd93 	bl	8006a84 <puts>
            		break;
 8004f5e:	e023      	b.n	8004fa8 <CEC_CAN_IRQHandler+0x4f8>
            		printf("Acknowledgment error ! \r\n");
 8004f60:	4b23      	ldr	r3, [pc, #140]	; (8004ff0 <CEC_CAN_IRQHandler+0x540>)
 8004f62:	0018      	movs	r0, r3
 8004f64:	f001 fd8e 	bl	8006a84 <puts>
          			printf("Send new remote frame ! \r\n");
 8004f68:	4b1f      	ldr	r3, [pc, #124]	; (8004fe8 <CEC_CAN_IRQHandler+0x538>)
 8004f6a:	0018      	movs	r0, r3
 8004f6c:	f001 fd8a 	bl	8006a84 <puts>
            		break;
 8004f70:	e01a      	b.n	8004fa8 <CEC_CAN_IRQHandler+0x4f8>
            		printf("Bit recessive error ! \r\n");
 8004f72:	4b20      	ldr	r3, [pc, #128]	; (8004ff4 <CEC_CAN_IRQHandler+0x544>)
 8004f74:	0018      	movs	r0, r3
 8004f76:	f001 fd85 	bl	8006a84 <puts>
          			printf("Send new remote frame ! \r\n");
 8004f7a:	4b1b      	ldr	r3, [pc, #108]	; (8004fe8 <CEC_CAN_IRQHandler+0x538>)
 8004f7c:	0018      	movs	r0, r3
 8004f7e:	f001 fd81 	bl	8006a84 <puts>
            		break;
 8004f82:	e011      	b.n	8004fa8 <CEC_CAN_IRQHandler+0x4f8>
            		printf("Bit dominant error ! \r\n");
 8004f84:	4b1c      	ldr	r3, [pc, #112]	; (8004ff8 <CEC_CAN_IRQHandler+0x548>)
 8004f86:	0018      	movs	r0, r3
 8004f88:	f001 fd7c 	bl	8006a84 <puts>
          			printf("Send new remote frame ! \r\n");
 8004f8c:	4b16      	ldr	r3, [pc, #88]	; (8004fe8 <CEC_CAN_IRQHandler+0x538>)
 8004f8e:	0018      	movs	r0, r3
 8004f90:	f001 fd78 	bl	8006a84 <puts>
            		break;
 8004f94:	e008      	b.n	8004fa8 <CEC_CAN_IRQHandler+0x4f8>
            		printf("CRC error ! \r\n");
 8004f96:	4b19      	ldr	r3, [pc, #100]	; (8004ffc <CEC_CAN_IRQHandler+0x54c>)
 8004f98:	0018      	movs	r0, r3
 8004f9a:	f001 fd73 	bl	8006a84 <puts>
          			printf("Send new remote frame ! \r\n");
 8004f9e:	4b12      	ldr	r3, [pc, #72]	; (8004fe8 <CEC_CAN_IRQHandler+0x538>)
 8004fa0:	0018      	movs	r0, r3
 8004fa2:	f001 fd6f 	bl	8006a84 <puts>
           			break;
 8004fa6:	46c0      	nop			; (mov r8, r8)
        		}


        		// Clear Last error code Flag
        		CAN->ESR &= ~CAN_ESR_LEC_Msk;
 8004fa8:	4b09      	ldr	r3, [pc, #36]	; (8004fd0 <CEC_CAN_IRQHandler+0x520>)
 8004faa:	699a      	ldr	r2, [r3, #24]
 8004fac:	4b08      	ldr	r3, [pc, #32]	; (8004fd0 <CEC_CAN_IRQHandler+0x520>)
 8004fae:	2170      	movs	r1, #112	; 0x70
 8004fb0:	438a      	bics	r2, r1
 8004fb2:	619a      	str	r2, [r3, #24]
      		}
    	}

    	// Clear ERRI Flag
    	CAN->MSR &= ~CAN_MSR_ERRI_Msk;
 8004fb4:	4b06      	ldr	r3, [pc, #24]	; (8004fd0 <CEC_CAN_IRQHandler+0x520>)
 8004fb6:	685a      	ldr	r2, [r3, #4]
 8004fb8:	4b05      	ldr	r3, [pc, #20]	; (8004fd0 <CEC_CAN_IRQHandler+0x520>)
 8004fba:	2104      	movs	r1, #4
 8004fbc:	438a      	bics	r2, r1
 8004fbe:	605a      	str	r2, [r3, #4]
  	}

}
 8004fc0:	46c0      	nop			; (mov r8, r8)
 8004fc2:	46bd      	mov	sp, r7
 8004fc4:	b006      	add	sp, #24
 8004fc6:	bd80      	pop	{r7, pc}
 8004fc8:	0800b854 	.word	0x0800b854
 8004fcc:	0800b8e4 	.word	0x0800b8e4
 8004fd0:	40006400 	.word	0x40006400
 8004fd4:	0800b908 	.word	0x0800b908
 8004fd8:	0800b92c 	.word	0x0800b92c
 8004fdc:	0800b944 	.word	0x0800b944
 8004fe0:	0800b95c 	.word	0x0800b95c
 8004fe4:	0800b974 	.word	0x0800b974
 8004fe8:	0800b618 	.word	0x0800b618
 8004fec:	0800b984 	.word	0x0800b984
 8004ff0:	0800b994 	.word	0x0800b994
 8004ff4:	0800b9b0 	.word	0x0800b9b0
 8004ff8:	0800b9c8 	.word	0x0800b9c8
 8004ffc:	0800b9e0 	.word	0x0800b9e0

08005000 <pwmInit>:
/*                                                                            */
/*                   Pulse width modulation (PWM)                             */
/*                                                                            */
/******************************************************************************/

void pwmInit(){
 8005000:	b580      	push	{r7, lr}
 8005002:	af00      	add	r7, sp, #0

	// Enable GPIOA clock
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8005004:	4b5a      	ldr	r3, [pc, #360]	; (8005170 <pwmInit+0x170>)
 8005006:	695a      	ldr	r2, [r3, #20]
 8005008:	4b59      	ldr	r3, [pc, #356]	; (8005170 <pwmInit+0x170>)
 800500a:	2180      	movs	r1, #128	; 0x80
 800500c:	0289      	lsls	r1, r1, #10
 800500e:	430a      	orrs	r2, r1
 8005010:	615a      	str	r2, [r3, #20]

	// Configure PA0 and PA1 AZ direction pin as output pin
	GPIOA->MODER &= ~(GPIO_MODER_MODER0_Msk | GPIO_MODER_MODER1_Msk);
 8005012:	2390      	movs	r3, #144	; 0x90
 8005014:	05db      	lsls	r3, r3, #23
 8005016:	681a      	ldr	r2, [r3, #0]
 8005018:	2390      	movs	r3, #144	; 0x90
 800501a:	05db      	lsls	r3, r3, #23
 800501c:	210f      	movs	r1, #15
 800501e:	438a      	bics	r2, r1
 8005020:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |=  (0x01 << GPIO_MODER_MODER0_Pos) | (0x01 << GPIO_MODER_MODER1_Pos);
 8005022:	2390      	movs	r3, #144	; 0x90
 8005024:	05db      	lsls	r3, r3, #23
 8005026:	681a      	ldr	r2, [r3, #0]
 8005028:	2390      	movs	r3, #144	; 0x90
 800502a:	05db      	lsls	r3, r3, #23
 800502c:	2105      	movs	r1, #5
 800502e:	430a      	orrs	r2, r1
 8005030:	601a      	str	r2, [r3, #0]

	// Configure PA6 and PA7 EL direction pin as output pin
	GPIOA->MODER &= ~(GPIO_MODER_MODER6_Msk | GPIO_MODER_MODER7_Msk);
 8005032:	2390      	movs	r3, #144	; 0x90
 8005034:	05db      	lsls	r3, r3, #23
 8005036:	681a      	ldr	r2, [r3, #0]
 8005038:	2390      	movs	r3, #144	; 0x90
 800503a:	05db      	lsls	r3, r3, #23
 800503c:	494d      	ldr	r1, [pc, #308]	; (8005174 <pwmInit+0x174>)
 800503e:	400a      	ands	r2, r1
 8005040:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |=  (0x01 << GPIO_MODER_MODER6_Pos) | (0x01 << GPIO_MODER_MODER7_Pos);
 8005042:	2390      	movs	r3, #144	; 0x90
 8005044:	05db      	lsls	r3, r3, #23
 8005046:	681a      	ldr	r2, [r3, #0]
 8005048:	2390      	movs	r3, #144	; 0x90
 800504a:	05db      	lsls	r3, r3, #23
 800504c:	21a0      	movs	r1, #160	; 0xa0
 800504e:	01c9      	lsls	r1, r1, #7
 8005050:	430a      	orrs	r2, r1
 8005052:	601a      	str	r2, [r3, #0]

	// Configure PA0 and PA1 AZ direction pin as output pin with open drain (PMOS not present, NMOS only)
	GPIOA->OTYPER |= GPIO_OTYPER_OT_0 | GPIO_OTYPER_OT_1;
 8005054:	2390      	movs	r3, #144	; 0x90
 8005056:	05db      	lsls	r3, r3, #23
 8005058:	685a      	ldr	r2, [r3, #4]
 800505a:	2390      	movs	r3, #144	; 0x90
 800505c:	05db      	lsls	r3, r3, #23
 800505e:	2103      	movs	r1, #3
 8005060:	430a      	orrs	r2, r1
 8005062:	605a      	str	r2, [r3, #4]

	// Configure PA6 and PA7 EL direction pin as output pin with open drain (PMOS not present, NMOS only)
	GPIOA->OTYPER |= GPIO_OTYPER_OT_6 | GPIO_OTYPER_OT_7;
 8005064:	2390      	movs	r3, #144	; 0x90
 8005066:	05db      	lsls	r3, r3, #23
 8005068:	685a      	ldr	r2, [r3, #4]
 800506a:	2390      	movs	r3, #144	; 0x90
 800506c:	05db      	lsls	r3, r3, #23
 800506e:	21c0      	movs	r1, #192	; 0xc0
 8005070:	430a      	orrs	r2, r1
 8005072:	605a      	str	r2, [r3, #4]

	// Configure PA0 and PA1 AZ direction pin as output pin with pull up resistor
	GPIOA->PUPDR &= ~(GPIO_PUPDR_PUPDR0_Msk | GPIO_PUPDR_PUPDR1_Msk); // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8005074:	2390      	movs	r3, #144	; 0x90
 8005076:	05db      	lsls	r3, r3, #23
 8005078:	68da      	ldr	r2, [r3, #12]
 800507a:	2390      	movs	r3, #144	; 0x90
 800507c:	05db      	lsls	r3, r3, #23
 800507e:	210f      	movs	r1, #15
 8005080:	438a      	bics	r2, r1
 8005082:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR |=  (0x01 << GPIO_PUPDR_PUPDR0_Pos) | (0x01 << GPIO_PUPDR_PUPDR1_Pos);
 8005084:	2390      	movs	r3, #144	; 0x90
 8005086:	05db      	lsls	r3, r3, #23
 8005088:	68da      	ldr	r2, [r3, #12]
 800508a:	2390      	movs	r3, #144	; 0x90
 800508c:	05db      	lsls	r3, r3, #23
 800508e:	2105      	movs	r1, #5
 8005090:	430a      	orrs	r2, r1
 8005092:	60da      	str	r2, [r3, #12]

	// Configure PA6 and PA7 EL direction pin as output pin with pull up resistor
	GPIOA->PUPDR &= ~(GPIO_PUPDR_PUPDR6_Msk | GPIO_PUPDR_PUPDR7_Msk); // 00: No pull-up, pull-down, 01: Pull-up, 10: Pull-down, 11: Reserved
 8005094:	2390      	movs	r3, #144	; 0x90
 8005096:	05db      	lsls	r3, r3, #23
 8005098:	68da      	ldr	r2, [r3, #12]
 800509a:	2390      	movs	r3, #144	; 0x90
 800509c:	05db      	lsls	r3, r3, #23
 800509e:	4935      	ldr	r1, [pc, #212]	; (8005174 <pwmInit+0x174>)
 80050a0:	400a      	ands	r2, r1
 80050a2:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR |=  (0x01 << GPIO_PUPDR_PUPDR6_Pos) | (0x01 << GPIO_PUPDR_PUPDR7_Pos);
 80050a4:	2390      	movs	r3, #144	; 0x90
 80050a6:	05db      	lsls	r3, r3, #23
 80050a8:	68da      	ldr	r2, [r3, #12]
 80050aa:	2390      	movs	r3, #144	; 0x90
 80050ac:	05db      	lsls	r3, r3, #23
 80050ae:	21a0      	movs	r1, #160	; 0xa0
 80050b0:	01c9      	lsls	r1, r1, #7
 80050b2:	430a      	orrs	r2, r1
 80050b4:	60da      	str	r2, [r3, #12]

	// Configure PA8 and PA9 as Alternate Function
	GPIOA->MODER &= ~(GPIO_MODER_MODER8_Msk | GPIO_MODER_MODER9_Msk);
 80050b6:	2390      	movs	r3, #144	; 0x90
 80050b8:	05db      	lsls	r3, r3, #23
 80050ba:	681a      	ldr	r2, [r3, #0]
 80050bc:	2390      	movs	r3, #144	; 0x90
 80050be:	05db      	lsls	r3, r3, #23
 80050c0:	492d      	ldr	r1, [pc, #180]	; (8005178 <pwmInit+0x178>)
 80050c2:	400a      	ands	r2, r1
 80050c4:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |=  (0x02 <<GPIO_MODER_MODER8_Pos) | (0x02 <<GPIO_MODER_MODER9_Pos);
 80050c6:	2390      	movs	r3, #144	; 0x90
 80050c8:	05db      	lsls	r3, r3, #23
 80050ca:	681a      	ldr	r2, [r3, #0]
 80050cc:	2390      	movs	r3, #144	; 0x90
 80050ce:	05db      	lsls	r3, r3, #23
 80050d0:	21a0      	movs	r1, #160	; 0xa0
 80050d2:	0309      	lsls	r1, r1, #12
 80050d4:	430a      	orrs	r2, r1
 80050d6:	601a      	str	r2, [r3, #0]

	// Set PA8 and PA9 to AF2 (TIM1)
	GPIOA->AFR[1] &= ~(0x000000FF);
 80050d8:	2390      	movs	r3, #144	; 0x90
 80050da:	05db      	lsls	r3, r3, #23
 80050dc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80050de:	2390      	movs	r3, #144	; 0x90
 80050e0:	05db      	lsls	r3, r3, #23
 80050e2:	21ff      	movs	r1, #255	; 0xff
 80050e4:	438a      	bics	r2, r1
 80050e6:	625a      	str	r2, [r3, #36]	; 0x24
	GPIOA->AFR[1] |=  (0x00000022);
 80050e8:	2390      	movs	r3, #144	; 0x90
 80050ea:	05db      	lsls	r3, r3, #23
 80050ec:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80050ee:	2390      	movs	r3, #144	; 0x90
 80050f0:	05db      	lsls	r3, r3, #23
 80050f2:	2122      	movs	r1, #34	; 0x22
 80050f4:	430a      	orrs	r2, r1
 80050f6:	625a      	str	r2, [r3, #36]	; 0x24

	// Enable TIM1 clock
	RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;
 80050f8:	4b1d      	ldr	r3, [pc, #116]	; (8005170 <pwmInit+0x170>)
 80050fa:	699a      	ldr	r2, [r3, #24]
 80050fc:	4b1c      	ldr	r3, [pc, #112]	; (8005170 <pwmInit+0x170>)
 80050fe:	2180      	movs	r1, #128	; 0x80
 8005100:	0109      	lsls	r1, r1, #4
 8005102:	430a      	orrs	r2, r1
 8005104:	619a      	str	r2, [r3, #24]

	// Reset TIM1 configuration
	TIM1->CR1 = 0x0000;
 8005106:	4b1d      	ldr	r3, [pc, #116]	; (800517c <pwmInit+0x17c>)
 8005108:	2200      	movs	r2, #0
 800510a:	601a      	str	r2, [r3, #0]
	TIM1->CR2 = 0x0000;
 800510c:	4b1b      	ldr	r3, [pc, #108]	; (800517c <pwmInit+0x17c>)
 800510e:	2200      	movs	r2, #0
 8005110:	605a      	str	r2, [r3, #4]
	TIM1->CCER = 0x0000;
 8005112:	4b1a      	ldr	r3, [pc, #104]	; (800517c <pwmInit+0x17c>)
 8005114:	2200      	movs	r2, #0
 8005116:	621a      	str	r2, [r3, #32]

	// Set TIM1 prescaler to 1MHz counting frequency (1µs resolution)
	TIM1->PSC = (uint16_t) 8 - 1;
 8005118:	4b18      	ldr	r3, [pc, #96]	; (800517c <pwmInit+0x17c>)
 800511a:	2207      	movs	r2, #7
 800511c:	629a      	str	r2, [r3, #40]	; 0x28

	// Set Auto-Reload to period 20 ms
	TIM1->ARR = (uint16_t) 200;
 800511e:	4b17      	ldr	r3, [pc, #92]	; (800517c <pwmInit+0x17c>)
 8005120:	22c8      	movs	r2, #200	; 0xc8
 8005122:	62da      	str	r2, [r3, #44]	; 0x2c

	// Enable Auto-Reload Preload register
	TIM1->CR1 |= TIM_CR1_ARPE;
 8005124:	4b15      	ldr	r3, [pc, #84]	; (800517c <pwmInit+0x17c>)
 8005126:	681a      	ldr	r2, [r3, #0]
 8005128:	4b14      	ldr	r3, [pc, #80]	; (800517c <pwmInit+0x17c>)
 800512a:	2180      	movs	r1, #128	; 0x80
 800512c:	430a      	orrs	r2, r1
 800512e:	601a      	str	r2, [r3, #0]

	// Setup Input Capture
	TIM1->CCMR1 = 0x0000;
 8005130:	4b12      	ldr	r3, [pc, #72]	; (800517c <pwmInit+0x17c>)
 8005132:	2200      	movs	r2, #0
 8005134:	619a      	str	r2, [r3, #24]
	TIM1->CCMR2 = 0x0000;
 8005136:	4b11      	ldr	r3, [pc, #68]	; (800517c <pwmInit+0x17c>)
 8005138:	2200      	movs	r2, #0
 800513a:	61da      	str	r2, [r3, #28]

	// Setup PWM mode 1 output
	TIM1->CCMR1 |= (0x06 <<TIM_CCMR1_OC1M_Pos) | TIM_CCMR1_OC1PE;
 800513c:	4b0f      	ldr	r3, [pc, #60]	; (800517c <pwmInit+0x17c>)
 800513e:	699a      	ldr	r2, [r3, #24]
 8005140:	4b0e      	ldr	r3, [pc, #56]	; (800517c <pwmInit+0x17c>)
 8005142:	2168      	movs	r1, #104	; 0x68
 8005144:	430a      	orrs	r2, r1
 8005146:	619a      	str	r2, [r3, #24]
	TIM1->CCMR1 |= (0x06 <<TIM_CCMR1_OC2M_Pos) | TIM_CCMR1_OC2PE;
 8005148:	4b0c      	ldr	r3, [pc, #48]	; (800517c <pwmInit+0x17c>)
 800514a:	699a      	ldr	r2, [r3, #24]
 800514c:	4b0b      	ldr	r3, [pc, #44]	; (800517c <pwmInit+0x17c>)
 800514e:	21d0      	movs	r1, #208	; 0xd0
 8005150:	01c9      	lsls	r1, r1, #7
 8005152:	430a      	orrs	r2, r1
 8005154:	619a      	str	r2, [r3, #24]

	// Set default PWM values
	TIM1->CCR1 = 0x0000;
 8005156:	4b09      	ldr	r3, [pc, #36]	; (800517c <pwmInit+0x17c>)
 8005158:	2200      	movs	r2, #0
 800515a:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR2 = 0x0000;
 800515c:	4b07      	ldr	r3, [pc, #28]	; (800517c <pwmInit+0x17c>)
 800515e:	2200      	movs	r2, #0
 8005160:	639a      	str	r2, [r3, #56]	; 0x38

	printf("PWM INIT OK ! \r\n");
 8005162:	4b07      	ldr	r3, [pc, #28]	; (8005180 <pwmInit+0x180>)
 8005164:	0018      	movs	r0, r3
 8005166:	f001 fc8d 	bl	8006a84 <puts>
}
 800516a:	46c0      	nop			; (mov r8, r8)
 800516c:	46bd      	mov	sp, r7
 800516e:	bd80      	pop	{r7, pc}
 8005170:	40021000 	.word	0x40021000
 8005174:	ffff0fff 	.word	0xffff0fff
 8005178:	fff0ffff 	.word	0xfff0ffff
 800517c:	40012c00 	.word	0x40012c00
 8005180:	0800b9f0 	.word	0x0800b9f0

08005184 <pwmHomeStart>:

void pwmHomeStart(){
 8005184:	b580      	push	{r7, lr}
 8005186:	af00      	add	r7, sp, #0

	/*********** SET AZ HOMING ROTATION DIRECTION TO CLOCKWISE **********/

	// AZ direction pins are PA0 and PA1
	GPIOA->ODR |= GPIO_ODR_0; // Set PA0 value to low
 8005188:	2390      	movs	r3, #144	; 0x90
 800518a:	05db      	lsls	r3, r3, #23
 800518c:	695a      	ldr	r2, [r3, #20]
 800518e:	2390      	movs	r3, #144	; 0x90
 8005190:	05db      	lsls	r3, r3, #23
 8005192:	2101      	movs	r1, #1
 8005194:	430a      	orrs	r2, r1
 8005196:	615a      	str	r2, [r3, #20]
	GPIOA->ODR &= ~(GPIO_ODR_1); // Set PA1 value to high
 8005198:	2390      	movs	r3, #144	; 0x90
 800519a:	05db      	lsls	r3, r3, #23
 800519c:	695a      	ldr	r2, [r3, #20]
 800519e:	2390      	movs	r3, #144	; 0x90
 80051a0:	05db      	lsls	r3, r3, #23
 80051a2:	2102      	movs	r1, #2
 80051a4:	438a      	bics	r2, r1
 80051a6:	615a      	str	r2, [r3, #20]

	/*********** SET EL HOMING ROTATION DIRECTION TO CLOCKWISE **********/

	// EL direction pins are PA6 and PA7
	GPIOA->ODR |= GPIO_ODR_6; // Set PA6 value to low
 80051a8:	2390      	movs	r3, #144	; 0x90
 80051aa:	05db      	lsls	r3, r3, #23
 80051ac:	695a      	ldr	r2, [r3, #20]
 80051ae:	2390      	movs	r3, #144	; 0x90
 80051b0:	05db      	lsls	r3, r3, #23
 80051b2:	2140      	movs	r1, #64	; 0x40
 80051b4:	430a      	orrs	r2, r1
 80051b6:	615a      	str	r2, [r3, #20]
	GPIOA->ODR &= ~(GPIO_ODR_7); // Set PA7 value to high
 80051b8:	2390      	movs	r3, #144	; 0x90
 80051ba:	05db      	lsls	r3, r3, #23
 80051bc:	695a      	ldr	r2, [r3, #20]
 80051be:	2390      	movs	r3, #144	; 0x90
 80051c0:	05db      	lsls	r3, r3, #23
 80051c2:	2180      	movs	r1, #128	; 0x80
 80051c4:	438a      	bics	r2, r1
 80051c6:	615a      	str	r2, [r3, #20]

	/*********** AZ and EL MOTOR TURN AT THE MAXIMUM SPEED **********/

	// Timer 1 channel 1 is PA8 pin and Timer 1 channel 2 is PA9 pin
	TIM1->CCR1 = (uint16_t) 2000;
 80051c8:	4b13      	ldr	r3, [pc, #76]	; (8005218 <pwmHomeStart+0x94>)
 80051ca:	22fa      	movs	r2, #250	; 0xfa
 80051cc:	00d2      	lsls	r2, r2, #3
 80051ce:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR2 = (uint16_t) 2000;
 80051d0:	4b11      	ldr	r3, [pc, #68]	; (8005218 <pwmHomeStart+0x94>)
 80051d2:	22fa      	movs	r2, #250	; 0xfa
 80051d4:	00d2      	lsls	r2, r2, #3
 80051d6:	639a      	str	r2, [r3, #56]	; 0x38

	// Resets TIM1 counter
	TIM1->EGR |= TIM_EGR_UG;
 80051d8:	4b0f      	ldr	r3, [pc, #60]	; (8005218 <pwmHomeStart+0x94>)
 80051da:	695a      	ldr	r2, [r3, #20]
 80051dc:	4b0e      	ldr	r3, [pc, #56]	; (8005218 <pwmHomeStart+0x94>)
 80051de:	2101      	movs	r1, #1
 80051e0:	430a      	orrs	r2, r1
 80051e2:	615a      	str	r2, [r3, #20]

	// Enable Outputs
	TIM1->CCER |= TIM_CCER_CC1E | TIM_CCER_CC2E;
 80051e4:	4b0c      	ldr	r3, [pc, #48]	; (8005218 <pwmHomeStart+0x94>)
 80051e6:	6a1a      	ldr	r2, [r3, #32]
 80051e8:	4b0b      	ldr	r3, [pc, #44]	; (8005218 <pwmHomeStart+0x94>)
 80051ea:	2111      	movs	r1, #17
 80051ec:	430a      	orrs	r2, r1
 80051ee:	621a      	str	r2, [r3, #32]

	// Enable Main output
	TIM1->BDTR |= TIM_BDTR_MOE;
 80051f0:	4b09      	ldr	r3, [pc, #36]	; (8005218 <pwmHomeStart+0x94>)
 80051f2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80051f4:	4b08      	ldr	r3, [pc, #32]	; (8005218 <pwmHomeStart+0x94>)
 80051f6:	2180      	movs	r1, #128	; 0x80
 80051f8:	0209      	lsls	r1, r1, #8
 80051fa:	430a      	orrs	r2, r1
 80051fc:	645a      	str	r2, [r3, #68]	; 0x44

	// Enable TIM1
	TIM1->CR1 |= TIM_CR1_CEN;
 80051fe:	4b06      	ldr	r3, [pc, #24]	; (8005218 <pwmHomeStart+0x94>)
 8005200:	681a      	ldr	r2, [r3, #0]
 8005202:	4b05      	ldr	r3, [pc, #20]	; (8005218 <pwmHomeStart+0x94>)
 8005204:	2101      	movs	r1, #1
 8005206:	430a      	orrs	r2, r1
 8005208:	601a      	str	r2, [r3, #0]

	printf("PWM HOME START ! \r\n");
 800520a:	4b04      	ldr	r3, [pc, #16]	; (800521c <pwmHomeStart+0x98>)
 800520c:	0018      	movs	r0, r3
 800520e:	f001 fc39 	bl	8006a84 <puts>

}
 8005212:	46c0      	nop			; (mov r8, r8)
 8005214:	46bd      	mov	sp, r7
 8005216:	bd80      	pop	{r7, pc}
 8005218:	40012c00 	.word	0x40012c00
 800521c:	0800ba00 	.word	0x0800ba00

08005220 <pwmHomeUpdate>:

void pwmHomeUpdate(){
 8005220:	b580      	push	{r7, lr}
 8005222:	af00      	add	r7, sp, #0


	TIM1->CCR1 = (!isHomeAz) ? (uint16_t) 2000 : (uint16_t) 0;
 8005224:	4b13      	ldr	r3, [pc, #76]	; (8005274 <pwmHomeUpdate+0x54>)
 8005226:	781b      	ldrb	r3, [r3, #0]
 8005228:	2b00      	cmp	r3, #0
 800522a:	d102      	bne.n	8005232 <pwmHomeUpdate+0x12>
 800522c:	23fa      	movs	r3, #250	; 0xfa
 800522e:	00da      	lsls	r2, r3, #3
 8005230:	e000      	b.n	8005234 <pwmHomeUpdate+0x14>
 8005232:	2200      	movs	r2, #0
 8005234:	4b10      	ldr	r3, [pc, #64]	; (8005278 <pwmHomeUpdate+0x58>)
 8005236:	635a      	str	r2, [r3, #52]	; 0x34

	if(isHomeAz){
 8005238:	4b0e      	ldr	r3, [pc, #56]	; (8005274 <pwmHomeUpdate+0x54>)
 800523a:	781b      	ldrb	r3, [r3, #0]
 800523c:	2b00      	cmp	r3, #0
 800523e:	d003      	beq.n	8005248 <pwmHomeUpdate+0x28>
		printf("Set az pwm speed to 0 \r\n");
 8005240:	4b0e      	ldr	r3, [pc, #56]	; (800527c <pwmHomeUpdate+0x5c>)
 8005242:	0018      	movs	r0, r3
 8005244:	f001 fc1e 	bl	8006a84 <puts>
	}

	TIM1->CCR2 = (!isHomeEl) ? (uint16_t) 2000 : (uint16_t) 0;
 8005248:	4b0d      	ldr	r3, [pc, #52]	; (8005280 <pwmHomeUpdate+0x60>)
 800524a:	781b      	ldrb	r3, [r3, #0]
 800524c:	2b00      	cmp	r3, #0
 800524e:	d102      	bne.n	8005256 <pwmHomeUpdate+0x36>
 8005250:	23fa      	movs	r3, #250	; 0xfa
 8005252:	00da      	lsls	r2, r3, #3
 8005254:	e000      	b.n	8005258 <pwmHomeUpdate+0x38>
 8005256:	2200      	movs	r2, #0
 8005258:	4b07      	ldr	r3, [pc, #28]	; (8005278 <pwmHomeUpdate+0x58>)
 800525a:	639a      	str	r2, [r3, #56]	; 0x38

	if(isHomeEl){
 800525c:	4b08      	ldr	r3, [pc, #32]	; (8005280 <pwmHomeUpdate+0x60>)
 800525e:	781b      	ldrb	r3, [r3, #0]
 8005260:	2b00      	cmp	r3, #0
 8005262:	d003      	beq.n	800526c <pwmHomeUpdate+0x4c>
		printf("Set el pwm speed to 0 \r\n");
 8005264:	4b07      	ldr	r3, [pc, #28]	; (8005284 <pwmHomeUpdate+0x64>)
 8005266:	0018      	movs	r0, r3
 8005268:	f001 fc0c 	bl	8006a84 <puts>
	}

}
 800526c:	46c0      	nop			; (mov r8, r8)
 800526e:	46bd      	mov	sp, r7
 8005270:	bd80      	pop	{r7, pc}
 8005272:	46c0      	nop			; (mov r8, r8)
 8005274:	20000414 	.word	0x20000414
 8005278:	40012c00 	.word	0x40012c00
 800527c:	0800ba14 	.word	0x0800ba14
 8005280:	20000415 	.word	0x20000415
 8005284:	0800ba2c 	.word	0x0800ba2c

08005288 <pwmHomeStop>:

void pwmHomeStop(){
 8005288:	b5b0      	push	{r4, r5, r7, lr}
 800528a:	af00      	add	r7, sp, #0

	isHomeAz = 0;
 800528c:	4b25      	ldr	r3, [pc, #148]	; (8005324 <pwmHomeStop+0x9c>)
 800528e:	2200      	movs	r2, #0
 8005290:	701a      	strb	r2, [r3, #0]
	isHomeEl = 0;
 8005292:	4b25      	ldr	r3, [pc, #148]	; (8005328 <pwmHomeStop+0xa0>)
 8005294:	2200      	movs	r2, #0
 8005296:	701a      	strb	r2, [r3, #0]

	systemPosition.azCoordinate = 0.0;
 8005298:	4b24      	ldr	r3, [pc, #144]	; (800532c <pwmHomeStop+0xa4>)
 800529a:	2200      	movs	r2, #0
 800529c:	601a      	str	r2, [r3, #0]
	systemPosition.elCoordinate = 0.0;
 800529e:	4b23      	ldr	r3, [pc, #140]	; (800532c <pwmHomeStop+0xa4>)
 80052a0:	2200      	movs	r2, #0
 80052a2:	605a      	str	r2, [r3, #4]

	printf("systemPosition.azCoordinate : %f \r\n", systemPosition.azCoordinate);
 80052a4:	4b21      	ldr	r3, [pc, #132]	; (800532c <pwmHomeStop+0xa4>)
 80052a6:	681b      	ldr	r3, [r3, #0]
 80052a8:	1c18      	adds	r0, r3, #0
 80052aa:	f7fd fe0f 	bl	8002ecc <__aeabi_f2d>
 80052ae:	0003      	movs	r3, r0
 80052b0:	000c      	movs	r4, r1
 80052b2:	491f      	ldr	r1, [pc, #124]	; (8005330 <pwmHomeStop+0xa8>)
 80052b4:	001a      	movs	r2, r3
 80052b6:	0023      	movs	r3, r4
 80052b8:	0008      	movs	r0, r1
 80052ba:	f001 fb69 	bl	8006990 <iprintf>
	printf("systemPosition.elCoordinate : %f \r\n", systemPosition.elCoordinate);
 80052be:	4b1b      	ldr	r3, [pc, #108]	; (800532c <pwmHomeStop+0xa4>)
 80052c0:	685b      	ldr	r3, [r3, #4]
 80052c2:	1c18      	adds	r0, r3, #0
 80052c4:	f7fd fe02 	bl	8002ecc <__aeabi_f2d>
 80052c8:	0003      	movs	r3, r0
 80052ca:	000c      	movs	r4, r1
 80052cc:	4919      	ldr	r1, [pc, #100]	; (8005334 <pwmHomeStop+0xac>)
 80052ce:	001a      	movs	r2, r3
 80052d0:	0023      	movs	r3, r4
 80052d2:	0008      	movs	r0, r1
 80052d4:	f001 fb5c 	bl	8006990 <iprintf>

	// Disable TIM1
	TIM1->CR1 &= ~TIM_CR1_CEN;
 80052d8:	4b17      	ldr	r3, [pc, #92]	; (8005338 <pwmHomeStop+0xb0>)
 80052da:	681a      	ldr	r2, [r3, #0]
 80052dc:	4b16      	ldr	r3, [pc, #88]	; (8005338 <pwmHomeStop+0xb0>)
 80052de:	2101      	movs	r1, #1
 80052e0:	438a      	bics	r2, r1
 80052e2:	601a      	str	r2, [r3, #0]

	// Resets TIM1 counter
	TIM1->EGR |= TIM_EGR_UG;
 80052e4:	4b14      	ldr	r3, [pc, #80]	; (8005338 <pwmHomeStop+0xb0>)
 80052e6:	695a      	ldr	r2, [r3, #20]
 80052e8:	4b13      	ldr	r3, [pc, #76]	; (8005338 <pwmHomeStop+0xb0>)
 80052ea:	2101      	movs	r1, #1
 80052ec:	430a      	orrs	r2, r1
 80052ee:	615a      	str	r2, [r3, #20]

	// Disable output
	TIM1->CCER &= ~TIM_CCER_CC1E;
 80052f0:	4b11      	ldr	r3, [pc, #68]	; (8005338 <pwmHomeStop+0xb0>)
 80052f2:	6a1a      	ldr	r2, [r3, #32]
 80052f4:	4b10      	ldr	r3, [pc, #64]	; (8005338 <pwmHomeStop+0xb0>)
 80052f6:	2101      	movs	r1, #1
 80052f8:	438a      	bics	r2, r1
 80052fa:	621a      	str	r2, [r3, #32]
	TIM1->CCER &= ~TIM_CCER_CC2E;
 80052fc:	4b0e      	ldr	r3, [pc, #56]	; (8005338 <pwmHomeStop+0xb0>)
 80052fe:	6a1a      	ldr	r2, [r3, #32]
 8005300:	4b0d      	ldr	r3, [pc, #52]	; (8005338 <pwmHomeStop+0xb0>)
 8005302:	2110      	movs	r1, #16
 8005304:	438a      	bics	r2, r1
 8005306:	621a      	str	r2, [r3, #32]

	// Disable Main output
	TIM1->BDTR &= ~TIM_BDTR_MOE;
 8005308:	4b0b      	ldr	r3, [pc, #44]	; (8005338 <pwmHomeStop+0xb0>)
 800530a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800530c:	4b0a      	ldr	r3, [pc, #40]	; (8005338 <pwmHomeStop+0xb0>)
 800530e:	490b      	ldr	r1, [pc, #44]	; (800533c <pwmHomeStop+0xb4>)
 8005310:	400a      	ands	r2, r1
 8005312:	645a      	str	r2, [r3, #68]	; 0x44

	printf("PWM HOME STOP ! \r\n");
 8005314:	4b0a      	ldr	r3, [pc, #40]	; (8005340 <pwmHomeStop+0xb8>)
 8005316:	0018      	movs	r0, r3
 8005318:	f001 fbb4 	bl	8006a84 <puts>
}
 800531c:	46c0      	nop			; (mov r8, r8)
 800531e:	46bd      	mov	sp, r7
 8005320:	bdb0      	pop	{r4, r5, r7, pc}
 8005322:	46c0      	nop			; (mov r8, r8)
 8005324:	20000414 	.word	0x20000414
 8005328:	20000415 	.word	0x20000415
 800532c:	20000418 	.word	0x20000418
 8005330:	0800ba44 	.word	0x0800ba44
 8005334:	0800ba68 	.word	0x0800ba68
 8005338:	40012c00 	.word	0x40012c00
 800533c:	ffff7fff 	.word	0xffff7fff
 8005340:	0800ba8c 	.word	0x0800ba8c

08005344 <home>:

void home(){
 8005344:	b580      	push	{r7, lr}
 8005346:	af00      	add	r7, sp, #0

	// Enable GPIOB clock
	RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 8005348:	4b37      	ldr	r3, [pc, #220]	; (8005428 <home+0xe4>)
 800534a:	695a      	ldr	r2, [r3, #20]
 800534c:	4b36      	ldr	r3, [pc, #216]	; (8005428 <home+0xe4>)
 800534e:	2180      	movs	r1, #128	; 0x80
 8005350:	02c9      	lsls	r1, r1, #11
 8005352:	430a      	orrs	r2, r1
 8005354:	615a      	str	r2, [r3, #20]

	/*********** CONFIGURE AZ INPUT (PB2) AS AZ ENCODER INDEX (I)  **********/

	// Configure PB2 for AZ Home as input
	GPIOB->MODER &= ~(GPIO_MODER_MODER2_Msk);
 8005356:	4b35      	ldr	r3, [pc, #212]	; (800542c <home+0xe8>)
 8005358:	681a      	ldr	r2, [r3, #0]
 800535a:	4b34      	ldr	r3, [pc, #208]	; (800542c <home+0xe8>)
 800535c:	2130      	movs	r1, #48	; 0x30
 800535e:	438a      	bics	r2, r1
 8005360:	601a      	str	r2, [r3, #0]

	// PB2 no pull-up, pull-down
	GPIOB->PUPDR &= ~(GPIO_PUPDR_PUPDR2_Msk);
 8005362:	4b32      	ldr	r3, [pc, #200]	; (800542c <home+0xe8>)
 8005364:	68da      	ldr	r2, [r3, #12]
 8005366:	4b31      	ldr	r3, [pc, #196]	; (800542c <home+0xe8>)
 8005368:	2130      	movs	r1, #48	; 0x30
 800536a:	438a      	bics	r2, r1
 800536c:	60da      	str	r2, [r3, #12]

	/*********** CONFIGURE EL INPUT (PB3) AS EL ENCODER INDEX (I)  **********/

	// Configure PB3 for EL Home as input
	GPIOB->MODER &= ~(GPIO_MODER_MODER3_Msk);
 800536e:	4b2f      	ldr	r3, [pc, #188]	; (800542c <home+0xe8>)
 8005370:	681a      	ldr	r2, [r3, #0]
 8005372:	4b2e      	ldr	r3, [pc, #184]	; (800542c <home+0xe8>)
 8005374:	21c0      	movs	r1, #192	; 0xc0
 8005376:	438a      	bics	r2, r1
 8005378:	601a      	str	r2, [r3, #0]

	// PB3 no pull-up, pull-down
	GPIOB->PUPDR &= ~(GPIO_PUPDR_PUPDR3_Msk);
 800537a:	4b2c      	ldr	r3, [pc, #176]	; (800542c <home+0xe8>)
 800537c:	68da      	ldr	r2, [r3, #12]
 800537e:	4b2b      	ldr	r3, [pc, #172]	; (800542c <home+0xe8>)
 8005380:	21c0      	movs	r1, #192	; 0xc0
 8005382:	438a      	bics	r2, r1
 8005384:	60da      	str	r2, [r3, #12]

	/*********** CONFIGURE INTERRUPTION SOURCES  **********/

	// Enable SYSCFG clock
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 8005386:	4b28      	ldr	r3, [pc, #160]	; (8005428 <home+0xe4>)
 8005388:	699a      	ldr	r2, [r3, #24]
 800538a:	4b27      	ldr	r3, [pc, #156]	; (8005428 <home+0xe4>)
 800538c:	2101      	movs	r1, #1
 800538e:	430a      	orrs	r2, r1
 8005390:	619a      	str	r2, [r3, #24]

	// Select Port B as interrupt source for EXTI line 2 i.e PB2
	SYSCFG->EXTICR[0] &= ~(SYSCFG_EXTICR1_EXTI2_Msk);
 8005392:	4b27      	ldr	r3, [pc, #156]	; (8005430 <home+0xec>)
 8005394:	689a      	ldr	r2, [r3, #8]
 8005396:	4b26      	ldr	r3, [pc, #152]	; (8005430 <home+0xec>)
 8005398:	4926      	ldr	r1, [pc, #152]	; (8005434 <home+0xf0>)
 800539a:	400a      	ands	r2, r1
 800539c:	609a      	str	r2, [r3, #8]
	SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI2_PB;
 800539e:	4b24      	ldr	r3, [pc, #144]	; (8005430 <home+0xec>)
 80053a0:	689a      	ldr	r2, [r3, #8]
 80053a2:	4b23      	ldr	r3, [pc, #140]	; (8005430 <home+0xec>)
 80053a4:	2180      	movs	r1, #128	; 0x80
 80053a6:	0049      	lsls	r1, r1, #1
 80053a8:	430a      	orrs	r2, r1
 80053aa:	609a      	str	r2, [r3, #8]

	// Select Port B as interrupt source for EXTI line 3 i.e PB3
	SYSCFG->EXTICR[0] &= ~(SYSCFG_EXTICR1_EXTI3_Msk);
 80053ac:	4b20      	ldr	r3, [pc, #128]	; (8005430 <home+0xec>)
 80053ae:	689a      	ldr	r2, [r3, #8]
 80053b0:	4b1f      	ldr	r3, [pc, #124]	; (8005430 <home+0xec>)
 80053b2:	4921      	ldr	r1, [pc, #132]	; (8005438 <home+0xf4>)
 80053b4:	400a      	ands	r2, r1
 80053b6:	609a      	str	r2, [r3, #8]
	SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI3_PB;
 80053b8:	4b1d      	ldr	r3, [pc, #116]	; (8005430 <home+0xec>)
 80053ba:	689a      	ldr	r2, [r3, #8]
 80053bc:	4b1c      	ldr	r3, [pc, #112]	; (8005430 <home+0xec>)
 80053be:	2180      	movs	r1, #128	; 0x80
 80053c0:	0149      	lsls	r1, r1, #5
 80053c2:	430a      	orrs	r2, r1
 80053c4:	609a      	str	r2, [r3, #8]

	// Enable EXTI line 2 for PB2
	EXTI->IMR |= EXTI_IMR_IM2;
 80053c6:	4b1d      	ldr	r3, [pc, #116]	; (800543c <home+0xf8>)
 80053c8:	681a      	ldr	r2, [r3, #0]
 80053ca:	4b1c      	ldr	r3, [pc, #112]	; (800543c <home+0xf8>)
 80053cc:	2104      	movs	r1, #4
 80053ce:	430a      	orrs	r2, r1
 80053d0:	601a      	str	r2, [r3, #0]

	// Enable EXTI line 3 for PB3
	EXTI->IMR |= EXTI_IMR_IM3;
 80053d2:	4b1a      	ldr	r3, [pc, #104]	; (800543c <home+0xf8>)
 80053d4:	681a      	ldr	r2, [r3, #0]
 80053d6:	4b19      	ldr	r3, [pc, #100]	; (800543c <home+0xf8>)
 80053d8:	2108      	movs	r1, #8
 80053da:	430a      	orrs	r2, r1
 80053dc:	601a      	str	r2, [r3, #0]

	// Disable Falling / Enable rising trigger
	EXTI->RTSR |= EXTI_RTSR_RT2;
 80053de:	4b17      	ldr	r3, [pc, #92]	; (800543c <home+0xf8>)
 80053e0:	689a      	ldr	r2, [r3, #8]
 80053e2:	4b16      	ldr	r3, [pc, #88]	; (800543c <home+0xf8>)
 80053e4:	2104      	movs	r1, #4
 80053e6:	430a      	orrs	r2, r1
 80053e8:	609a      	str	r2, [r3, #8]
	EXTI->FTSR &= ~(EXTI_FTSR_FT2);
 80053ea:	4b14      	ldr	r3, [pc, #80]	; (800543c <home+0xf8>)
 80053ec:	68da      	ldr	r2, [r3, #12]
 80053ee:	4b13      	ldr	r3, [pc, #76]	; (800543c <home+0xf8>)
 80053f0:	2104      	movs	r1, #4
 80053f2:	438a      	bics	r2, r1
 80053f4:	60da      	str	r2, [r3, #12]

	// Disable Falling / Enable rising trigger
	EXTI->RTSR |= EXTI_RTSR_RT3;
 80053f6:	4b11      	ldr	r3, [pc, #68]	; (800543c <home+0xf8>)
 80053f8:	689a      	ldr	r2, [r3, #8]
 80053fa:	4b10      	ldr	r3, [pc, #64]	; (800543c <home+0xf8>)
 80053fc:	2108      	movs	r1, #8
 80053fe:	430a      	orrs	r2, r1
 8005400:	609a      	str	r2, [r3, #8]
	EXTI->FTSR &= ~(EXTI_FTSR_FT3);
 8005402:	4b0e      	ldr	r3, [pc, #56]	; (800543c <home+0xf8>)
 8005404:	68da      	ldr	r2, [r3, #12]
 8005406:	4b0d      	ldr	r3, [pc, #52]	; (800543c <home+0xf8>)
 8005408:	2108      	movs	r1, #8
 800540a:	438a      	bics	r2, r1
 800540c:	60da      	str	r2, [r3, #12]

	// Set maximum priority for EXTI line 4 to 15 interrupts
	NVIC_SetPriority(EXTI2_3_IRQn, 0);
 800540e:	2100      	movs	r1, #0
 8005410:	2006      	movs	r0, #6
 8005412:	f7fd ff4d 	bl	80032b0 <__NVIC_SetPriority>

	// Enable EXTI line 4 to 15 (user button on line 13) interrupts
	NVIC_EnableIRQ(EXTI2_3_IRQn);
 8005416:	2006      	movs	r0, #6
 8005418:	f7fd ff30 	bl	800327c <__NVIC_EnableIRQ>

	pwmHomeStart();
 800541c:	f7ff feb2 	bl	8005184 <pwmHomeStart>

}
 8005420:	46c0      	nop			; (mov r8, r8)
 8005422:	46bd      	mov	sp, r7
 8005424:	bd80      	pop	{r7, pc}
 8005426:	46c0      	nop			; (mov r8, r8)
 8005428:	40021000 	.word	0x40021000
 800542c:	48000400 	.word	0x48000400
 8005430:	40010000 	.word	0x40010000
 8005434:	fffff0ff 	.word	0xfffff0ff
 8005438:	ffff0fff 	.word	0xffff0fff
 800543c:	40010400 	.word	0x40010400

08005440 <EXTI2_3_IRQHandler>:

void EXTI2_3_IRQHandler(){
 8005440:	b580      	push	{r7, lr}
 8005442:	af00      	add	r7, sp, #0

	// Test for line 2 pending interrupt i.e AZ home reach
	if ((EXTI->PR & EXTI_PR_PR2_Msk) != 0){
 8005444:	4b1f      	ldr	r3, [pc, #124]	; (80054c4 <EXTI2_3_IRQHandler+0x84>)
 8005446:	695b      	ldr	r3, [r3, #20]
 8005448:	2204      	movs	r2, #4
 800544a:	4013      	ands	r3, r2
 800544c:	d011      	beq.n	8005472 <EXTI2_3_IRQHandler+0x32>

		// Clear pending bit 2 by writing a '1'
		EXTI->PR = EXTI_PR_PR2;
 800544e:	4b1d      	ldr	r3, [pc, #116]	; (80054c4 <EXTI2_3_IRQHandler+0x84>)
 8005450:	2204      	movs	r2, #4
 8005452:	615a      	str	r2, [r3, #20]

		// Disable interruption on line 2
		EXTI->IMR &= ~(EXTI_IMR_IM2);
 8005454:	4b1b      	ldr	r3, [pc, #108]	; (80054c4 <EXTI2_3_IRQHandler+0x84>)
 8005456:	681a      	ldr	r2, [r3, #0]
 8005458:	4b1a      	ldr	r3, [pc, #104]	; (80054c4 <EXTI2_3_IRQHandler+0x84>)
 800545a:	2104      	movs	r1, #4
 800545c:	438a      	bics	r2, r1
 800545e:	601a      	str	r2, [r3, #0]

		isHomeAz = 1;
 8005460:	4b19      	ldr	r3, [pc, #100]	; (80054c8 <EXTI2_3_IRQHandler+0x88>)
 8005462:	2201      	movs	r2, #1
 8005464:	701a      	strb	r2, [r3, #0]

		printf("AZ HOME REACH ! \r\n");
 8005466:	4b19      	ldr	r3, [pc, #100]	; (80054cc <EXTI2_3_IRQHandler+0x8c>)
 8005468:	0018      	movs	r0, r3
 800546a:	f001 fb0b 	bl	8006a84 <puts>

		pwmHomeUpdate();
 800546e:	f7ff fed7 	bl	8005220 <pwmHomeUpdate>

	}

	// Test for line 3 pending interrupt i.e EL home reach
	if ((EXTI->PR & EXTI_PR_PR3_Msk) != 0){
 8005472:	4b14      	ldr	r3, [pc, #80]	; (80054c4 <EXTI2_3_IRQHandler+0x84>)
 8005474:	695b      	ldr	r3, [r3, #20]
 8005476:	2208      	movs	r2, #8
 8005478:	4013      	ands	r3, r2
 800547a:	d011      	beq.n	80054a0 <EXTI2_3_IRQHandler+0x60>

		// Clear pending bit 3 by writing a '1'
		EXTI->PR = EXTI_PR_PR3;
 800547c:	4b11      	ldr	r3, [pc, #68]	; (80054c4 <EXTI2_3_IRQHandler+0x84>)
 800547e:	2208      	movs	r2, #8
 8005480:	615a      	str	r2, [r3, #20]

		// Disable interruption on line 3
		EXTI->IMR &= ~(EXTI_IMR_IM3);
 8005482:	4b10      	ldr	r3, [pc, #64]	; (80054c4 <EXTI2_3_IRQHandler+0x84>)
 8005484:	681a      	ldr	r2, [r3, #0]
 8005486:	4b0f      	ldr	r3, [pc, #60]	; (80054c4 <EXTI2_3_IRQHandler+0x84>)
 8005488:	2108      	movs	r1, #8
 800548a:	438a      	bics	r2, r1
 800548c:	601a      	str	r2, [r3, #0]

		isHomeEl = 1;
 800548e:	4b10      	ldr	r3, [pc, #64]	; (80054d0 <EXTI2_3_IRQHandler+0x90>)
 8005490:	2201      	movs	r2, #1
 8005492:	701a      	strb	r2, [r3, #0]

		printf("EL HOME REACH ! \r\n");
 8005494:	4b0f      	ldr	r3, [pc, #60]	; (80054d4 <EXTI2_3_IRQHandler+0x94>)
 8005496:	0018      	movs	r0, r3
 8005498:	f001 faf4 	bl	8006a84 <puts>

		pwmHomeUpdate();
 800549c:	f7ff fec0 	bl	8005220 <pwmHomeUpdate>
	}

	if(isHomeAz && isHomeEl){
 80054a0:	4b09      	ldr	r3, [pc, #36]	; (80054c8 <EXTI2_3_IRQHandler+0x88>)
 80054a2:	781b      	ldrb	r3, [r3, #0]
 80054a4:	2b00      	cmp	r3, #0
 80054a6:	d009      	beq.n	80054bc <EXTI2_3_IRQHandler+0x7c>
 80054a8:	4b09      	ldr	r3, [pc, #36]	; (80054d0 <EXTI2_3_IRQHandler+0x90>)
 80054aa:	781b      	ldrb	r3, [r3, #0]
 80054ac:	2b00      	cmp	r3, #0
 80054ae:	d005      	beq.n	80054bc <EXTI2_3_IRQHandler+0x7c>

		printf("ALL HOME REACH ! \r\n");
 80054b0:	4b09      	ldr	r3, [pc, #36]	; (80054d8 <EXTI2_3_IRQHandler+0x98>)
 80054b2:	0018      	movs	r0, r3
 80054b4:	f001 fae6 	bl	8006a84 <puts>
		pwmHomeStop();
 80054b8:	f7ff fee6 	bl	8005288 <pwmHomeStop>
	}
}
 80054bc:	46c0      	nop			; (mov r8, r8)
 80054be:	46bd      	mov	sp, r7
 80054c0:	bd80      	pop	{r7, pc}
 80054c2:	46c0      	nop			; (mov r8, r8)
 80054c4:	40010400 	.word	0x40010400
 80054c8:	20000414 	.word	0x20000414
 80054cc:	0800baa0 	.word	0x0800baa0
 80054d0:	20000415 	.word	0x20000415
 80054d4:	0800bab4 	.word	0x0800bab4
 80054d8:	0800bac8 	.word	0x0800bac8

080054dc <byte2bcd>:
/*                                                                            */
/*                   Real time Clock (RTC)                            		  */
/*                                                                            */
/******************************************************************************/

uint8_t byte2bcd(uint8_t byte){
 80054dc:	b580      	push	{r7, lr}
 80054de:	b084      	sub	sp, #16
 80054e0:	af00      	add	r7, sp, #0
 80054e2:	0002      	movs	r2, r0
 80054e4:	1dfb      	adds	r3, r7, #7
 80054e6:	701a      	strb	r2, [r3, #0]
  uint8_t bcdhigh = 0;
 80054e8:	230f      	movs	r3, #15
 80054ea:	18fb      	adds	r3, r7, r3
 80054ec:	2200      	movs	r2, #0
 80054ee:	701a      	strb	r2, [r3, #0]

  while (byte >= 10){
 80054f0:	e00a      	b.n	8005508 <byte2bcd+0x2c>
    bcdhigh++;
 80054f2:	210f      	movs	r1, #15
 80054f4:	187b      	adds	r3, r7, r1
 80054f6:	781a      	ldrb	r2, [r3, #0]
 80054f8:	187b      	adds	r3, r7, r1
 80054fa:	3201      	adds	r2, #1
 80054fc:	701a      	strb	r2, [r3, #0]
    byte -= 10;
 80054fe:	1dfb      	adds	r3, r7, #7
 8005500:	1dfa      	adds	r2, r7, #7
 8005502:	7812      	ldrb	r2, [r2, #0]
 8005504:	3a0a      	subs	r2, #10
 8005506:	701a      	strb	r2, [r3, #0]
  while (byte >= 10){
 8005508:	1dfb      	adds	r3, r7, #7
 800550a:	781b      	ldrb	r3, [r3, #0]
 800550c:	2b09      	cmp	r3, #9
 800550e:	d8f0      	bhi.n	80054f2 <byte2bcd+0x16>
  }

  return  ((uint8_t)(bcdhigh << 4) | byte);
 8005510:	230f      	movs	r3, #15
 8005512:	18fb      	adds	r3, r7, r3
 8005514:	781b      	ldrb	r3, [r3, #0]
 8005516:	011b      	lsls	r3, r3, #4
 8005518:	b2da      	uxtb	r2, r3
 800551a:	1dfb      	adds	r3, r7, #7
 800551c:	781b      	ldrb	r3, [r3, #0]
 800551e:	4313      	orrs	r3, r2
 8005520:	b2db      	uxtb	r3, r3
}
 8005522:	0018      	movs	r0, r3
 8005524:	46bd      	mov	sp, r7
 8005526:	b004      	add	sp, #16
 8005528:	bd80      	pop	{r7, pc}

0800552a <bcd2byte>:

uint8_t bcd2byte(uint8_t bcd){
 800552a:	b580      	push	{r7, lr}
 800552c:	b084      	sub	sp, #16
 800552e:	af00      	add	r7, sp, #0
 8005530:	0002      	movs	r2, r0
 8005532:	1dfb      	adds	r3, r7, #7
 8005534:	701a      	strb	r2, [r3, #0]
  uint8_t tmp = 0;
 8005536:	200f      	movs	r0, #15
 8005538:	183b      	adds	r3, r7, r0
 800553a:	2200      	movs	r2, #0
 800553c:	701a      	strb	r2, [r3, #0]

  tmp = ((uint8_t)(bcd & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
 800553e:	1dfb      	adds	r3, r7, #7
 8005540:	781b      	ldrb	r3, [r3, #0]
 8005542:	091b      	lsrs	r3, r3, #4
 8005544:	b2db      	uxtb	r3, r3
 8005546:	183a      	adds	r2, r7, r0
 8005548:	1c19      	adds	r1, r3, #0
 800554a:	0089      	lsls	r1, r1, #2
 800554c:	18cb      	adds	r3, r1, r3
 800554e:	18db      	adds	r3, r3, r3
 8005550:	7013      	strb	r3, [r2, #0]

  return (tmp + (bcd & (uint8_t)0x0F));
 8005552:	1dfb      	adds	r3, r7, #7
 8005554:	781b      	ldrb	r3, [r3, #0]
 8005556:	220f      	movs	r2, #15
 8005558:	4013      	ands	r3, r2
 800555a:	b2da      	uxtb	r2, r3
 800555c:	183b      	adds	r3, r7, r0
 800555e:	781b      	ldrb	r3, [r3, #0]
 8005560:	18d3      	adds	r3, r2, r3
 8005562:	b2db      	uxtb	r3, r3
}
 8005564:	0018      	movs	r0, r3
 8005566:	46bd      	mov	sp, r7
 8005568:	b004      	add	sp, #16
 800556a:	bd80      	pop	{r7, pc}

0800556c <rtcCalendarInit>:

void rtcCalendarInit(void){
 800556c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800556e:	b093      	sub	sp, #76	; 0x4c
 8005570:	af04      	add	r7, sp, #16

	// Enable the PWR clock
	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8005572:	4b96      	ldr	r3, [pc, #600]	; (80057cc <rtcCalendarInit+0x260>)
 8005574:	69da      	ldr	r2, [r3, #28]
 8005576:	4b95      	ldr	r3, [pc, #596]	; (80057cc <rtcCalendarInit+0x260>)
 8005578:	2180      	movs	r1, #128	; 0x80
 800557a:	0549      	lsls	r1, r1, #21
 800557c:	430a      	orrs	r2, r1
 800557e:	61da      	str	r2, [r3, #28]

	// Enable access to RTC and Backup registers
	PWR->CR |= PWR_CR_DBP;
 8005580:	4b93      	ldr	r3, [pc, #588]	; (80057d0 <rtcCalendarInit+0x264>)
 8005582:	681a      	ldr	r2, [r3, #0]
 8005584:	4b92      	ldr	r3, [pc, #584]	; (80057d0 <rtcCalendarInit+0x264>)
 8005586:	2180      	movs	r1, #128	; 0x80
 8005588:	0049      	lsls	r1, r1, #1
 800558a:	430a      	orrs	r2, r1
 800558c:	601a      	str	r2, [r3, #0]

	// Resets Backup Domain Config
	RCC->BDCR |= RCC_BDCR_BDRST;
 800558e:	4b8f      	ldr	r3, [pc, #572]	; (80057cc <rtcCalendarInit+0x260>)
 8005590:	6a1a      	ldr	r2, [r3, #32]
 8005592:	4b8e      	ldr	r3, [pc, #568]	; (80057cc <rtcCalendarInit+0x260>)
 8005594:	2180      	movs	r1, #128	; 0x80
 8005596:	0249      	lsls	r1, r1, #9
 8005598:	430a      	orrs	r2, r1
 800559a:	621a      	str	r2, [r3, #32]
	RCC->BDCR &= ~RCC_BDCR_BDRST;
 800559c:	4b8b      	ldr	r3, [pc, #556]	; (80057cc <rtcCalendarInit+0x260>)
 800559e:	6a1a      	ldr	r2, [r3, #32]
 80055a0:	4b8a      	ldr	r3, [pc, #552]	; (80057cc <rtcCalendarInit+0x260>)
 80055a2:	498c      	ldr	r1, [pc, #560]	; (80057d4 <rtcCalendarInit+0x268>)
 80055a4:	400a      	ands	r2, r1
 80055a6:	621a      	str	r2, [r3, #32]

	// Set driving capability to medium high
	RCC->BDCR &= ~RCC_BDCR_LSEDRV_Msk; //Clear
 80055a8:	4b88      	ldr	r3, [pc, #544]	; (80057cc <rtcCalendarInit+0x260>)
 80055aa:	6a1a      	ldr	r2, [r3, #32]
 80055ac:	4b87      	ldr	r3, [pc, #540]	; (80057cc <rtcCalendarInit+0x260>)
 80055ae:	2118      	movs	r1, #24
 80055b0:	438a      	bics	r2, r1
 80055b2:	621a      	str	r2, [r3, #32]
	RCC->BDCR |= (0x02 << RCC_BDCR_LSEDRV_Pos);
 80055b4:	4b85      	ldr	r3, [pc, #532]	; (80057cc <rtcCalendarInit+0x260>)
 80055b6:	6a1a      	ldr	r2, [r3, #32]
 80055b8:	4b84      	ldr	r3, [pc, #528]	; (80057cc <rtcCalendarInit+0x260>)
 80055ba:	2110      	movs	r1, #16
 80055bc:	430a      	orrs	r2, r1
 80055be:	621a      	str	r2, [r3, #32]

	// Start LSE clock
	RCC->BDCR |= RCC_BDCR_LSEON;
 80055c0:	4b82      	ldr	r3, [pc, #520]	; (80057cc <rtcCalendarInit+0x260>)
 80055c2:	6a1a      	ldr	r2, [r3, #32]
 80055c4:	4b81      	ldr	r3, [pc, #516]	; (80057cc <rtcCalendarInit+0x260>)
 80055c6:	2101      	movs	r1, #1
 80055c8:	430a      	orrs	r2, r1
 80055ca:	621a      	str	r2, [r3, #32]

	// Wait until LSE is ready
	while ( (RCC->BDCR & RCC_BDCR_LSERDY) != RCC_BDCR_LSERDY);
 80055cc:	46c0      	nop			; (mov r8, r8)
 80055ce:	4b7f      	ldr	r3, [pc, #508]	; (80057cc <rtcCalendarInit+0x260>)
 80055d0:	6a1b      	ldr	r3, [r3, #32]
 80055d2:	2202      	movs	r2, #2
 80055d4:	4013      	ands	r3, r2
 80055d6:	2b02      	cmp	r3, #2
 80055d8:	d1f9      	bne.n	80055ce <rtcCalendarInit+0x62>

	// Select LSE as RTC clock source
	RCC->BDCR &= ~RCC_BDCR_RTCSEL_Msk;
 80055da:	4b7c      	ldr	r3, [pc, #496]	; (80057cc <rtcCalendarInit+0x260>)
 80055dc:	6a1a      	ldr	r2, [r3, #32]
 80055de:	4b7b      	ldr	r3, [pc, #492]	; (80057cc <rtcCalendarInit+0x260>)
 80055e0:	497d      	ldr	r1, [pc, #500]	; (80057d8 <rtcCalendarInit+0x26c>)
 80055e2:	400a      	ands	r2, r1
 80055e4:	621a      	str	r2, [r3, #32]
	RCC->BDCR |= RCC_BDCR_RTCSEL_LSE;
 80055e6:	4b79      	ldr	r3, [pc, #484]	; (80057cc <rtcCalendarInit+0x260>)
 80055e8:	6a1a      	ldr	r2, [r3, #32]
 80055ea:	4b78      	ldr	r3, [pc, #480]	; (80057cc <rtcCalendarInit+0x260>)
 80055ec:	2180      	movs	r1, #128	; 0x80
 80055ee:	0049      	lsls	r1, r1, #1
 80055f0:	430a      	orrs	r2, r1
 80055f2:	621a      	str	r2, [r3, #32]

	// Enable RTC clock
	RCC->BDCR |= RCC_BDCR_RTCEN;
 80055f4:	4b75      	ldr	r3, [pc, #468]	; (80057cc <rtcCalendarInit+0x260>)
 80055f6:	6a1a      	ldr	r2, [r3, #32]
 80055f8:	4b74      	ldr	r3, [pc, #464]	; (80057cc <rtcCalendarInit+0x260>)
 80055fa:	2180      	movs	r1, #128	; 0x80
 80055fc:	0209      	lsls	r1, r1, #8
 80055fe:	430a      	orrs	r2, r1
 8005600:	621a      	str	r2, [r3, #32]

	// Enable Write access for RTC registers
	RTC->WPR = 0xCA;
 8005602:	4b76      	ldr	r3, [pc, #472]	; (80057dc <rtcCalendarInit+0x270>)
 8005604:	22ca      	movs	r2, #202	; 0xca
 8005606:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x53;
 8005608:	4b74      	ldr	r3, [pc, #464]	; (80057dc <rtcCalendarInit+0x270>)
 800560a:	2253      	movs	r2, #83	; 0x53
 800560c:	625a      	str	r2, [r3, #36]	; 0x24

	// Enter Init
	RTC->ISR |= RTC_ISR_INIT;
 800560e:	4b73      	ldr	r3, [pc, #460]	; (80057dc <rtcCalendarInit+0x270>)
 8005610:	68da      	ldr	r2, [r3, #12]
 8005612:	4b72      	ldr	r3, [pc, #456]	; (80057dc <rtcCalendarInit+0x270>)
 8005614:	2180      	movs	r1, #128	; 0x80
 8005616:	430a      	orrs	r2, r1
 8005618:	60da      	str	r2, [r3, #12]
	while ((RTC->ISR & RTC_ISR_INITF) != RTC_ISR_INITF);
 800561a:	46c0      	nop			; (mov r8, r8)
 800561c:	4b6f      	ldr	r3, [pc, #444]	; (80057dc <rtcCalendarInit+0x270>)
 800561e:	68db      	ldr	r3, [r3, #12]
 8005620:	2240      	movs	r2, #64	; 0x40
 8005622:	4013      	ands	r3, r2
 8005624:	2b40      	cmp	r3, #64	; 0x40
 8005626:	d1f9      	bne.n	800561c <rtcCalendarInit+0xb0>

	// Setup prescalers for 1s RTC clock
	RTC->PRER = 0x007F00FF;
 8005628:	4b6c      	ldr	r3, [pc, #432]	; (80057dc <rtcCalendarInit+0x270>)
 800562a:	4a6d      	ldr	r2, [pc, #436]	; (80057e0 <rtcCalendarInit+0x274>)
 800562c:	611a      	str	r2, [r3, #16]

	// Get the UTC local time
	time_t t = time(NULL);
 800562e:	2000      	movs	r0, #0
 8005630:	f002 f912 	bl	8007858 <time>
 8005634:	0003      	movs	r3, r0
 8005636:	000c      	movs	r4, r1
 8005638:	623b      	str	r3, [r7, #32]
 800563a:	627c      	str	r4, [r7, #36]	; 0x24
	struct tm *tm = localtime(&t);
 800563c:	2320      	movs	r3, #32
 800563e:	18fb      	adds	r3, r7, r3
 8005640:	0018      	movs	r0, r3
 8005642:	f000 fb7b 	bl	8005d3c <localtime>
 8005646:	0003      	movs	r3, r0
 8005648:	637b      	str	r3, [r7, #52]	; 0x34

	// Create a variable to save the fields of the time structure
	char utc2Timezone[3];

	// Update the field of the time structure according to UTC time
	tm->tm_hour += 2; //UTC+2
 800564a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800564c:	689b      	ldr	r3, [r3, #8]
 800564e:	1c9a      	adds	r2, r3, #2
 8005650:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005652:	609a      	str	r2, [r3, #8]
	//tm->tm_min += 1;

	// Save the field of the time structure according to a specific format
	Time initTime;

	strftime(utc2Timezone,3, "%y", tm);
 8005654:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005656:	4a63      	ldr	r2, [pc, #396]	; (80057e4 <rtcCalendarInit+0x278>)
 8005658:	241c      	movs	r4, #28
 800565a:	1938      	adds	r0, r7, r4
 800565c:	2103      	movs	r1, #3
 800565e:	f001 ff9d 	bl	800759c <strftime>
	//printf("Year : %s\n",utc2Timezone);
	initTime.year = atoi(utc2Timezone);
 8005662:	193b      	adds	r3, r7, r4
 8005664:	0018      	movs	r0, r3
 8005666:	f000 fb38 	bl	8005cda <atoi>
 800566a:	0003      	movs	r3, r0
 800566c:	001a      	movs	r2, r3
 800566e:	1d3b      	adds	r3, r7, #4
 8005670:	601a      	str	r2, [r3, #0]

	strftime(utc2Timezone,3, "%m", tm);
 8005672:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005674:	4a5c      	ldr	r2, [pc, #368]	; (80057e8 <rtcCalendarInit+0x27c>)
 8005676:	1938      	adds	r0, r7, r4
 8005678:	2103      	movs	r1, #3
 800567a:	f001 ff8f 	bl	800759c <strftime>
	//printf("Month : %s\n",utc2Timezone);
	initTime.month = atoi(utc2Timezone);
 800567e:	193b      	adds	r3, r7, r4
 8005680:	0018      	movs	r0, r3
 8005682:	f000 fb2a 	bl	8005cda <atoi>
 8005686:	0003      	movs	r3, r0
 8005688:	001a      	movs	r2, r3
 800568a:	1d3b      	adds	r3, r7, #4
 800568c:	605a      	str	r2, [r3, #4]

	strftime(utc2Timezone,3, "%d", tm);
 800568e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005690:	4a56      	ldr	r2, [pc, #344]	; (80057ec <rtcCalendarInit+0x280>)
 8005692:	1938      	adds	r0, r7, r4
 8005694:	2103      	movs	r1, #3
 8005696:	f001 ff81 	bl	800759c <strftime>
	//printf("Day : %s\n",utc2Timezone);
	initTime.day = atoi(utc2Timezone);
 800569a:	193b      	adds	r3, r7, r4
 800569c:	0018      	movs	r0, r3
 800569e:	f000 fb1c 	bl	8005cda <atoi>
 80056a2:	0003      	movs	r3, r0
 80056a4:	001a      	movs	r2, r3
 80056a6:	1d3b      	adds	r3, r7, #4
 80056a8:	609a      	str	r2, [r3, #8]

	strftime(utc2Timezone,3, "%H", tm);
 80056aa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80056ac:	4a50      	ldr	r2, [pc, #320]	; (80057f0 <rtcCalendarInit+0x284>)
 80056ae:	1938      	adds	r0, r7, r4
 80056b0:	2103      	movs	r1, #3
 80056b2:	f001 ff73 	bl	800759c <strftime>
	//printf("Hour : %s\n",utc2Timezone);
	initTime.hour = atoi(utc2Timezone);
 80056b6:	193b      	adds	r3, r7, r4
 80056b8:	0018      	movs	r0, r3
 80056ba:	f000 fb0e 	bl	8005cda <atoi>
 80056be:	0003      	movs	r3, r0
 80056c0:	001a      	movs	r2, r3
 80056c2:	1d3b      	adds	r3, r7, #4
 80056c4:	60da      	str	r2, [r3, #12]

	strftime(utc2Timezone,3, "%M", tm);
 80056c6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80056c8:	4a4a      	ldr	r2, [pc, #296]	; (80057f4 <rtcCalendarInit+0x288>)
 80056ca:	1938      	adds	r0, r7, r4
 80056cc:	2103      	movs	r1, #3
 80056ce:	f001 ff65 	bl	800759c <strftime>
	//printf("Minute : %s\n",utc2Timezone);
	initTime.minute = atoi(utc2Timezone);
 80056d2:	193b      	adds	r3, r7, r4
 80056d4:	0018      	movs	r0, r3
 80056d6:	f000 fb00 	bl	8005cda <atoi>
 80056da:	0003      	movs	r3, r0
 80056dc:	001a      	movs	r2, r3
 80056de:	1d3b      	adds	r3, r7, #4
 80056e0:	611a      	str	r2, [r3, #16]

	strftime(utc2Timezone,3, "%S", tm);
 80056e2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80056e4:	4a44      	ldr	r2, [pc, #272]	; (80057f8 <rtcCalendarInit+0x28c>)
 80056e6:	1938      	adds	r0, r7, r4
 80056e8:	2103      	movs	r1, #3
 80056ea:	f001 ff57 	bl	800759c <strftime>
	//printf("Second : %s\n",utc2Timezone);
	initTime.second = atoi(utc2Timezone);
 80056ee:	193b      	adds	r3, r7, r4
 80056f0:	0018      	movs	r0, r3
 80056f2:	f000 faf2 	bl	8005cda <atoi>
 80056f6:	0003      	movs	r3, r0
 80056f8:	001a      	movs	r2, r3
 80056fa:	1d3b      	adds	r3, r7, #4
 80056fc:	615a      	str	r2, [r3, #20]

	printf("Initialization time : %ld/%.2ld/%ld %ld:%ld:%ld\n",initTime.year,initTime.month, initTime.day, initTime.hour,initTime.minute, initTime.second);
 80056fe:	1d3b      	adds	r3, r7, #4
 8005700:	681c      	ldr	r4, [r3, #0]
 8005702:	1d3b      	adds	r3, r7, #4
 8005704:	685d      	ldr	r5, [r3, #4]
 8005706:	1d3b      	adds	r3, r7, #4
 8005708:	689e      	ldr	r6, [r3, #8]
 800570a:	1d3b      	adds	r3, r7, #4
 800570c:	68da      	ldr	r2, [r3, #12]
 800570e:	1d3b      	adds	r3, r7, #4
 8005710:	6919      	ldr	r1, [r3, #16]
 8005712:	1d3b      	adds	r3, r7, #4
 8005714:	695b      	ldr	r3, [r3, #20]
 8005716:	4839      	ldr	r0, [pc, #228]	; (80057fc <rtcCalendarInit+0x290>)
 8005718:	9302      	str	r3, [sp, #8]
 800571a:	9101      	str	r1, [sp, #4]
 800571c:	9200      	str	r2, [sp, #0]
 800571e:	0033      	movs	r3, r6
 8005720:	002a      	movs	r2, r5
 8005722:	0021      	movs	r1, r4
 8005724:	f001 f934 	bl	8006990 <iprintf>

	uint32_t bcdtime, bcddate;

	bcdtime = ( ( byte2bcd(initTime.hour) ) << 16U) | ( ( byte2bcd(initTime.minute) ) << 8U) | ( ( byte2bcd(initTime.second)) << 0U);
 8005728:	1d3b      	adds	r3, r7, #4
 800572a:	68db      	ldr	r3, [r3, #12]
 800572c:	b2db      	uxtb	r3, r3
 800572e:	0018      	movs	r0, r3
 8005730:	f7ff fed4 	bl	80054dc <byte2bcd>
 8005734:	0003      	movs	r3, r0
 8005736:	041c      	lsls	r4, r3, #16
 8005738:	1d3b      	adds	r3, r7, #4
 800573a:	691b      	ldr	r3, [r3, #16]
 800573c:	b2db      	uxtb	r3, r3
 800573e:	0018      	movs	r0, r3
 8005740:	f7ff fecc 	bl	80054dc <byte2bcd>
 8005744:	0003      	movs	r3, r0
 8005746:	021b      	lsls	r3, r3, #8
 8005748:	431c      	orrs	r4, r3
 800574a:	1d3b      	adds	r3, r7, #4
 800574c:	695b      	ldr	r3, [r3, #20]
 800574e:	b2db      	uxtb	r3, r3
 8005750:	0018      	movs	r0, r3
 8005752:	f7ff fec3 	bl	80054dc <byte2bcd>
 8005756:	0003      	movs	r3, r0
 8005758:	4323      	orrs	r3, r4
 800575a:	633b      	str	r3, [r7, #48]	; 0x30

	bcddate = ( ( byte2bcd(initTime.year) ) << 16U) | ( ( byte2bcd(initTime.month) ) << 8U) | ( ( byte2bcd(initTime.day)) << 0U);
 800575c:	1d3b      	adds	r3, r7, #4
 800575e:	681b      	ldr	r3, [r3, #0]
 8005760:	b2db      	uxtb	r3, r3
 8005762:	0018      	movs	r0, r3
 8005764:	f7ff feba 	bl	80054dc <byte2bcd>
 8005768:	0003      	movs	r3, r0
 800576a:	041c      	lsls	r4, r3, #16
 800576c:	1d3b      	adds	r3, r7, #4
 800576e:	685b      	ldr	r3, [r3, #4]
 8005770:	b2db      	uxtb	r3, r3
 8005772:	0018      	movs	r0, r3
 8005774:	f7ff feb2 	bl	80054dc <byte2bcd>
 8005778:	0003      	movs	r3, r0
 800577a:	021b      	lsls	r3, r3, #8
 800577c:	431c      	orrs	r4, r3
 800577e:	1d3b      	adds	r3, r7, #4
 8005780:	689b      	ldr	r3, [r3, #8]
 8005782:	b2db      	uxtb	r3, r3
 8005784:	0018      	movs	r0, r3
 8005786:	f7ff fea9 	bl	80054dc <byte2bcd>
 800578a:	0003      	movs	r3, r0
 800578c:	4323      	orrs	r3, r4
 800578e:	62fb      	str	r3, [r7, #44]	; 0x2c

	// Set time
	RTC->DR = bcddate;
 8005790:	4b12      	ldr	r3, [pc, #72]	; (80057dc <rtcCalendarInit+0x270>)
 8005792:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005794:	605a      	str	r2, [r3, #4]
	RTC->TR = bcdtime;
 8005796:	4b11      	ldr	r3, [pc, #68]	; (80057dc <rtcCalendarInit+0x270>)
 8005798:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800579a:	601a      	str	r2, [r3, #0]

	// Set priority level 1 for RTC interrupt
	NVIC_SetPriority(RTC_IRQn, 2);
 800579c:	2102      	movs	r1, #2
 800579e:	2002      	movs	r0, #2
 80057a0:	f7fd fd86 	bl	80032b0 <__NVIC_SetPriority>

	// Enable RTC interrupts
	NVIC_EnableIRQ(RTC_IRQn);
 80057a4:	2002      	movs	r0, #2
 80057a6:	f7fd fd69 	bl	800327c <__NVIC_EnableIRQ>

	// Exit Init
	RTC->ISR &= ~RTC_ISR_INIT;
 80057aa:	4b0c      	ldr	r3, [pc, #48]	; (80057dc <rtcCalendarInit+0x270>)
 80057ac:	68da      	ldr	r2, [r3, #12]
 80057ae:	4b0b      	ldr	r3, [pc, #44]	; (80057dc <rtcCalendarInit+0x270>)
 80057b0:	2180      	movs	r1, #128	; 0x80
 80057b2:	438a      	bics	r2, r1
 80057b4:	60da      	str	r2, [r3, #12]

	// Disable Write access for RTC registers
	RTC->WPR = 0xFE;
 80057b6:	4b09      	ldr	r3, [pc, #36]	; (80057dc <rtcCalendarInit+0x270>)
 80057b8:	22fe      	movs	r2, #254	; 0xfe
 80057ba:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x64;
 80057bc:	4b07      	ldr	r3, [pc, #28]	; (80057dc <rtcCalendarInit+0x270>)
 80057be:	2264      	movs	r2, #100	; 0x64
 80057c0:	625a      	str	r2, [r3, #36]	; 0x24
}
 80057c2:	46c0      	nop			; (mov r8, r8)
 80057c4:	46bd      	mov	sp, r7
 80057c6:	b00f      	add	sp, #60	; 0x3c
 80057c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80057ca:	46c0      	nop			; (mov r8, r8)
 80057cc:	40021000 	.word	0x40021000
 80057d0:	40007000 	.word	0x40007000
 80057d4:	fffeffff 	.word	0xfffeffff
 80057d8:	fffffcff 	.word	0xfffffcff
 80057dc:	40002800 	.word	0x40002800
 80057e0:	007f00ff 	.word	0x007f00ff
 80057e4:	0800badc 	.word	0x0800badc
 80057e8:	0800bae0 	.word	0x0800bae0
 80057ec:	0800af5c 	.word	0x0800af5c
 80057f0:	0800bae4 	.word	0x0800bae4
 80057f4:	0800bae8 	.word	0x0800bae8
 80057f8:	0800baec 	.word	0x0800baec
 80057fc:	0800baf0 	.word	0x0800baf0

08005800 <rtcSetAlarm>:

void rtcSetAlarm(){
 8005800:	b590      	push	{r4, r7, lr}
 8005802:	b085      	sub	sp, #20
 8005804:	af00      	add	r7, sp, #0
	uint32_t bcdtime, bcddate;
	uint32_t minuteFirstAlarm;
	uint32_t hourFirstAlarm;

	// First alarm
	if (isFirstAlarm){
 8005806:	4b69      	ldr	r3, [pc, #420]	; (80059ac <rtcSetAlarm+0x1ac>)
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	2b00      	cmp	r3, #0
 800580c:	d031      	beq.n	8005872 <rtcSetAlarm+0x72>

		/* Manage alarm time minute substraction*/
		// current time minute >= 15
		if( (passes[0].passTime.minute) >= 15){
 800580e:	4b68      	ldr	r3, [pc, #416]	; (80059b0 <rtcSetAlarm+0x1b0>)
 8005810:	691b      	ldr	r3, [r3, #16]
 8005812:	2b0e      	cmp	r3, #14
 8005814:	d914      	bls.n	8005840 <rtcSetAlarm+0x40>
			bcdtime = ( ( byte2bcd(passes[0].passTime.hour) ) << 16U) | ( (byte2bcd((passes[0].passTime.minute) - 15) ) << 8U);
 8005816:	4b66      	ldr	r3, [pc, #408]	; (80059b0 <rtcSetAlarm+0x1b0>)
 8005818:	68db      	ldr	r3, [r3, #12]
 800581a:	b2db      	uxtb	r3, r3
 800581c:	0018      	movs	r0, r3
 800581e:	f7ff fe5d 	bl	80054dc <byte2bcd>
 8005822:	0003      	movs	r3, r0
 8005824:	041c      	lsls	r4, r3, #16
 8005826:	4b62      	ldr	r3, [pc, #392]	; (80059b0 <rtcSetAlarm+0x1b0>)
 8005828:	691b      	ldr	r3, [r3, #16]
 800582a:	b2db      	uxtb	r3, r3
 800582c:	3b0f      	subs	r3, #15
 800582e:	b2db      	uxtb	r3, r3
 8005830:	0018      	movs	r0, r3
 8005832:	f7ff fe53 	bl	80054dc <byte2bcd>
 8005836:	0003      	movs	r3, r0
 8005838:	021b      	lsls	r3, r3, #8
 800583a:	4323      	orrs	r3, r4
 800583c:	60fb      	str	r3, [r7, #12]
 800583e:	e02a      	b.n	8005896 <rtcSetAlarm+0x96>
		}

		// current time minute < 15
		else {

			hourFirstAlarm = passes[0].passTime.hour - 1;
 8005840:	4b5b      	ldr	r3, [pc, #364]	; (80059b0 <rtcSetAlarm+0x1b0>)
 8005842:	68db      	ldr	r3, [r3, #12]
 8005844:	3b01      	subs	r3, #1
 8005846:	60bb      	str	r3, [r7, #8]
			minuteFirstAlarm = 60 + (passes[0].passTime.minute) - 15;
 8005848:	4b59      	ldr	r3, [pc, #356]	; (80059b0 <rtcSetAlarm+0x1b0>)
 800584a:	691b      	ldr	r3, [r3, #16]
 800584c:	332d      	adds	r3, #45	; 0x2d
 800584e:	607b      	str	r3, [r7, #4]
			bcdtime = ( ( byte2bcd(hourFirstAlarm) ) << 16U ) | ( byte2bcd((minuteFirstAlarm) ) << 8U );
 8005850:	68bb      	ldr	r3, [r7, #8]
 8005852:	b2db      	uxtb	r3, r3
 8005854:	0018      	movs	r0, r3
 8005856:	f7ff fe41 	bl	80054dc <byte2bcd>
 800585a:	0003      	movs	r3, r0
 800585c:	041c      	lsls	r4, r3, #16
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	b2db      	uxtb	r3, r3
 8005862:	0018      	movs	r0, r3
 8005864:	f7ff fe3a 	bl	80054dc <byte2bcd>
 8005868:	0003      	movs	r3, r0
 800586a:	021b      	lsls	r3, r3, #8
 800586c:	4323      	orrs	r3, r4
 800586e:	60fb      	str	r3, [r7, #12]
 8005870:	e011      	b.n	8005896 <rtcSetAlarm+0x96>
		}
	}

	// Second alarm
	else {
		bcdtime = ( ( byte2bcd(passes[0].passTime.hour) ) << 16U) | ( (byte2bcd(passes[0].passTime.minute) ) << 8U);
 8005872:	4b4f      	ldr	r3, [pc, #316]	; (80059b0 <rtcSetAlarm+0x1b0>)
 8005874:	68db      	ldr	r3, [r3, #12]
 8005876:	b2db      	uxtb	r3, r3
 8005878:	0018      	movs	r0, r3
 800587a:	f7ff fe2f 	bl	80054dc <byte2bcd>
 800587e:	0003      	movs	r3, r0
 8005880:	041c      	lsls	r4, r3, #16
 8005882:	4b4b      	ldr	r3, [pc, #300]	; (80059b0 <rtcSetAlarm+0x1b0>)
 8005884:	691b      	ldr	r3, [r3, #16]
 8005886:	b2db      	uxtb	r3, r3
 8005888:	0018      	movs	r0, r3
 800588a:	f7ff fe27 	bl	80054dc <byte2bcd>
 800588e:	0003      	movs	r3, r0
 8005890:	021b      	lsls	r3, r3, #8
 8005892:	4323      	orrs	r3, r4
 8005894:	60fb      	str	r3, [r7, #12]
	}

	bcddate = ( ( byte2bcd(passes[0].passTime.day)) << 24U);
 8005896:	4b46      	ldr	r3, [pc, #280]	; (80059b0 <rtcSetAlarm+0x1b0>)
 8005898:	689b      	ldr	r3, [r3, #8]
 800589a:	b2db      	uxtb	r3, r3
 800589c:	0018      	movs	r0, r3
 800589e:	f7ff fe1d 	bl	80054dc <byte2bcd>
 80058a2:	0003      	movs	r3, r0
 80058a4:	061b      	lsls	r3, r3, #24
 80058a6:	603b      	str	r3, [r7, #0]

	// Enable Write access for RTC registers
	RTC->WPR = 0xCA;
 80058a8:	4b42      	ldr	r3, [pc, #264]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058aa:	22ca      	movs	r2, #202	; 0xca
 80058ac:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x53;
 80058ae:	4b41      	ldr	r3, [pc, #260]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058b0:	2253      	movs	r2, #83	; 0x53
 80058b2:	625a      	str	r2, [r3, #36]	; 0x24

	// Disable Alarm A
	RTC->CR &= ~RTC_CR_ALRAE;
 80058b4:	4b3f      	ldr	r3, [pc, #252]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058b6:	689a      	ldr	r2, [r3, #8]
 80058b8:	4b3e      	ldr	r3, [pc, #248]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058ba:	493f      	ldr	r1, [pc, #252]	; (80059b8 <rtcSetAlarm+0x1b8>)
 80058bc:	400a      	ands	r2, r1
 80058be:	609a      	str	r2, [r3, #8]

	// Set alarm using date field
	RTC->ALRMAR &= ~RTC_ALRMAR_PM; // 24h format
 80058c0:	4b3c      	ldr	r3, [pc, #240]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058c2:	69da      	ldr	r2, [r3, #28]
 80058c4:	4b3b      	ldr	r3, [pc, #236]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058c6:	493d      	ldr	r1, [pc, #244]	; (80059bc <rtcSetAlarm+0x1bc>)
 80058c8:	400a      	ands	r2, r1
 80058ca:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_WDSEL; // Date
 80058cc:	4b39      	ldr	r3, [pc, #228]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058ce:	69da      	ldr	r2, [r3, #28]
 80058d0:	4b38      	ldr	r3, [pc, #224]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058d2:	493b      	ldr	r1, [pc, #236]	; (80059c0 <rtcSetAlarm+0x1c0>)
 80058d4:	400a      	ands	r2, r1
 80058d6:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_MSK4; // Date
 80058d8:	4b36      	ldr	r3, [pc, #216]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058da:	69da      	ldr	r2, [r3, #28]
 80058dc:	4b35      	ldr	r3, [pc, #212]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058de:	0052      	lsls	r2, r2, #1
 80058e0:	0852      	lsrs	r2, r2, #1
 80058e2:	61da      	str	r2, [r3, #28]

	// Set alarm using time field (hour and minute)
	RTC->ALRMAR &= ~RTC_ALRMAR_MSK3; // Hour
 80058e4:	4b33      	ldr	r3, [pc, #204]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058e6:	69da      	ldr	r2, [r3, #28]
 80058e8:	4b32      	ldr	r3, [pc, #200]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058ea:	4936      	ldr	r1, [pc, #216]	; (80059c4 <rtcSetAlarm+0x1c4>)
 80058ec:	400a      	ands	r2, r1
 80058ee:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_MSK2; // Minute
 80058f0:	4b30      	ldr	r3, [pc, #192]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058f2:	69da      	ldr	r2, [r3, #28]
 80058f4:	4b2f      	ldr	r3, [pc, #188]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058f6:	4934      	ldr	r1, [pc, #208]	; (80059c8 <rtcSetAlarm+0x1c8>)
 80058f8:	400a      	ands	r2, r1
 80058fa:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR |= RTC_ALRMAR_MSK1; // Second
 80058fc:	4b2d      	ldr	r3, [pc, #180]	; (80059b4 <rtcSetAlarm+0x1b4>)
 80058fe:	69da      	ldr	r2, [r3, #28]
 8005900:	4b2c      	ldr	r3, [pc, #176]	; (80059b4 <rtcSetAlarm+0x1b4>)
 8005902:	2180      	movs	r1, #128	; 0x80
 8005904:	430a      	orrs	r2, r1
 8005906:	61da      	str	r2, [r3, #28]

	// Set alarm
	RTC->ALRMAR &= ~RTC_ALRMAR_DU_Msk; // Reset date unit
 8005908:	4b2a      	ldr	r3, [pc, #168]	; (80059b4 <rtcSetAlarm+0x1b4>)
 800590a:	69da      	ldr	r2, [r3, #28]
 800590c:	4b29      	ldr	r3, [pc, #164]	; (80059b4 <rtcSetAlarm+0x1b4>)
 800590e:	492f      	ldr	r1, [pc, #188]	; (80059cc <rtcSetAlarm+0x1cc>)
 8005910:	400a      	ands	r2, r1
 8005912:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_DT_Msk; // Reset date teens
 8005914:	4b27      	ldr	r3, [pc, #156]	; (80059b4 <rtcSetAlarm+0x1b4>)
 8005916:	69da      	ldr	r2, [r3, #28]
 8005918:	4b26      	ldr	r3, [pc, #152]	; (80059b4 <rtcSetAlarm+0x1b4>)
 800591a:	492d      	ldr	r1, [pc, #180]	; (80059d0 <rtcSetAlarm+0x1d0>)
 800591c:	400a      	ands	r2, r1
 800591e:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_HU_Msk; // Reset date unit
 8005920:	4b24      	ldr	r3, [pc, #144]	; (80059b4 <rtcSetAlarm+0x1b4>)
 8005922:	69da      	ldr	r2, [r3, #28]
 8005924:	4b23      	ldr	r3, [pc, #140]	; (80059b4 <rtcSetAlarm+0x1b4>)
 8005926:	492b      	ldr	r1, [pc, #172]	; (80059d4 <rtcSetAlarm+0x1d4>)
 8005928:	400a      	ands	r2, r1
 800592a:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_HT_Msk; // Reset hour teens
 800592c:	4b21      	ldr	r3, [pc, #132]	; (80059b4 <rtcSetAlarm+0x1b4>)
 800592e:	69da      	ldr	r2, [r3, #28]
 8005930:	4b20      	ldr	r3, [pc, #128]	; (80059b4 <rtcSetAlarm+0x1b4>)
 8005932:	4929      	ldr	r1, [pc, #164]	; (80059d8 <rtcSetAlarm+0x1d8>)
 8005934:	400a      	ands	r2, r1
 8005936:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_MNU_Msk; // Reset hour teens
 8005938:	4b1e      	ldr	r3, [pc, #120]	; (80059b4 <rtcSetAlarm+0x1b4>)
 800593a:	69da      	ldr	r2, [r3, #28]
 800593c:	4b1d      	ldr	r3, [pc, #116]	; (80059b4 <rtcSetAlarm+0x1b4>)
 800593e:	4927      	ldr	r1, [pc, #156]	; (80059dc <rtcSetAlarm+0x1dc>)
 8005940:	400a      	ands	r2, r1
 8005942:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR &= ~RTC_ALRMAR_MNT_Msk; // Reset date unit
 8005944:	4b1b      	ldr	r3, [pc, #108]	; (80059b4 <rtcSetAlarm+0x1b4>)
 8005946:	69da      	ldr	r2, [r3, #28]
 8005948:	4b1a      	ldr	r3, [pc, #104]	; (80059b4 <rtcSetAlarm+0x1b4>)
 800594a:	4925      	ldr	r1, [pc, #148]	; (80059e0 <rtcSetAlarm+0x1e0>)
 800594c:	400a      	ands	r2, r1
 800594e:	61da      	str	r2, [r3, #28]
	RTC->ALRMAR |= bcdtime | bcddate;
 8005950:	4b18      	ldr	r3, [pc, #96]	; (80059b4 <rtcSetAlarm+0x1b4>)
 8005952:	69d9      	ldr	r1, [r3, #28]
 8005954:	68fa      	ldr	r2, [r7, #12]
 8005956:	683b      	ldr	r3, [r7, #0]
 8005958:	431a      	orrs	r2, r3
 800595a:	4b16      	ldr	r3, [pc, #88]	; (80059b4 <rtcSetAlarm+0x1b4>)
 800595c:	430a      	orrs	r2, r1
 800595e:	61da      	str	r2, [r3, #28]

	// Enable Alarm A and associated interrupt
	RTC->CR |= RTC_CR_ALRAE | RTC_CR_ALRAIE;
 8005960:	4b14      	ldr	r3, [pc, #80]	; (80059b4 <rtcSetAlarm+0x1b4>)
 8005962:	689a      	ldr	r2, [r3, #8]
 8005964:	4b13      	ldr	r3, [pc, #76]	; (80059b4 <rtcSetAlarm+0x1b4>)
 8005966:	2188      	movs	r1, #136	; 0x88
 8005968:	0149      	lsls	r1, r1, #5
 800596a:	430a      	orrs	r2, r1
 800596c:	609a      	str	r2, [r3, #8]

	// Enable EXTI line 17
	EXTI->IMR |= EXTI_IMR_IM17;
 800596e:	4b1d      	ldr	r3, [pc, #116]	; (80059e4 <rtcSetAlarm+0x1e4>)
 8005970:	681a      	ldr	r2, [r3, #0]
 8005972:	4b1c      	ldr	r3, [pc, #112]	; (80059e4 <rtcSetAlarm+0x1e4>)
 8005974:	2180      	movs	r1, #128	; 0x80
 8005976:	0289      	lsls	r1, r1, #10
 8005978:	430a      	orrs	r2, r1
 800597a:	601a      	str	r2, [r3, #0]

	// Enable Rising / Disable Falling trigger
	EXTI->RTSR |=  EXTI_RTSR_RT17;
 800597c:	4b19      	ldr	r3, [pc, #100]	; (80059e4 <rtcSetAlarm+0x1e4>)
 800597e:	689a      	ldr	r2, [r3, #8]
 8005980:	4b18      	ldr	r3, [pc, #96]	; (80059e4 <rtcSetAlarm+0x1e4>)
 8005982:	2180      	movs	r1, #128	; 0x80
 8005984:	0289      	lsls	r1, r1, #10
 8005986:	430a      	orrs	r2, r1
 8005988:	609a      	str	r2, [r3, #8]
	EXTI->FTSR &= ~EXTI_FTSR_FT17;
 800598a:	4b16      	ldr	r3, [pc, #88]	; (80059e4 <rtcSetAlarm+0x1e4>)
 800598c:	68da      	ldr	r2, [r3, #12]
 800598e:	4b15      	ldr	r3, [pc, #84]	; (80059e4 <rtcSetAlarm+0x1e4>)
 8005990:	4915      	ldr	r1, [pc, #84]	; (80059e8 <rtcSetAlarm+0x1e8>)
 8005992:	400a      	ands	r2, r1
 8005994:	60da      	str	r2, [r3, #12]

	// Disable Write access for RTC registers
	RTC->WPR = 0xFE;
 8005996:	4b07      	ldr	r3, [pc, #28]	; (80059b4 <rtcSetAlarm+0x1b4>)
 8005998:	22fe      	movs	r2, #254	; 0xfe
 800599a:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x64;
 800599c:	4b05      	ldr	r3, [pc, #20]	; (80059b4 <rtcSetAlarm+0x1b4>)
 800599e:	2264      	movs	r2, #100	; 0x64
 80059a0:	625a      	str	r2, [r3, #36]	; 0x24
}
 80059a2:	46c0      	nop			; (mov r8, r8)
 80059a4:	46bd      	mov	sp, r7
 80059a6:	b005      	add	sp, #20
 80059a8:	bd90      	pop	{r4, r7, pc}
 80059aa:	46c0      	nop			; (mov r8, r8)
 80059ac:	20000018 	.word	0x20000018
 80059b0:	20000284 	.word	0x20000284
 80059b4:	40002800 	.word	0x40002800
 80059b8:	fffffeff 	.word	0xfffffeff
 80059bc:	ffbfffff 	.word	0xffbfffff
 80059c0:	bfffffff 	.word	0xbfffffff
 80059c4:	ff7fffff 	.word	0xff7fffff
 80059c8:	ffff7fff 	.word	0xffff7fff
 80059cc:	f0ffffff 	.word	0xf0ffffff
 80059d0:	cfffffff 	.word	0xcfffffff
 80059d4:	fff0ffff 	.word	0xfff0ffff
 80059d8:	ffcfffff 	.word	0xffcfffff
 80059dc:	fffff0ff 	.word	0xfffff0ff
 80059e0:	ffff8fff 	.word	0xffff8fff
 80059e4:	40010400 	.word	0x40010400
 80059e8:	fffdffff 	.word	0xfffdffff

080059ec <rtcDisableAlarm>:

void rtcDisableAlarm(){
 80059ec:	b580      	push	{r7, lr}
 80059ee:	af00      	add	r7, sp, #0

	// Enable Write access for RTC registers
	RTC->WPR = 0xCA;
 80059f0:	4b0a      	ldr	r3, [pc, #40]	; (8005a1c <rtcDisableAlarm+0x30>)
 80059f2:	22ca      	movs	r2, #202	; 0xca
 80059f4:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x53;
 80059f6:	4b09      	ldr	r3, [pc, #36]	; (8005a1c <rtcDisableAlarm+0x30>)
 80059f8:	2253      	movs	r2, #83	; 0x53
 80059fa:	625a      	str	r2, [r3, #36]	; 0x24

	// Disable Alarm A
	RTC->CR &= ~RTC_CR_ALRAE;
 80059fc:	4b07      	ldr	r3, [pc, #28]	; (8005a1c <rtcDisableAlarm+0x30>)
 80059fe:	689a      	ldr	r2, [r3, #8]
 8005a00:	4b06      	ldr	r3, [pc, #24]	; (8005a1c <rtcDisableAlarm+0x30>)
 8005a02:	4907      	ldr	r1, [pc, #28]	; (8005a20 <rtcDisableAlarm+0x34>)
 8005a04:	400a      	ands	r2, r1
 8005a06:	609a      	str	r2, [r3, #8]

	// Disable Write access for RTC registers
	RTC->WPR = 0xFE;
 8005a08:	4b04      	ldr	r3, [pc, #16]	; (8005a1c <rtcDisableAlarm+0x30>)
 8005a0a:	22fe      	movs	r2, #254	; 0xfe
 8005a0c:	625a      	str	r2, [r3, #36]	; 0x24
	RTC->WPR = 0x64;
 8005a0e:	4b03      	ldr	r3, [pc, #12]	; (8005a1c <rtcDisableAlarm+0x30>)
 8005a10:	2264      	movs	r2, #100	; 0x64
 8005a12:	625a      	str	r2, [r3, #36]	; 0x24

}
 8005a14:	46c0      	nop			; (mov r8, r8)
 8005a16:	46bd      	mov	sp, r7
 8005a18:	bd80      	pop	{r7, pc}
 8005a1a:	46c0      	nop			; (mov r8, r8)
 8005a1c:	40002800 	.word	0x40002800
 8005a20:	fffffeff 	.word	0xfffffeff

08005a24 <RTC_IRQHandler>:

void RTC_IRQHandler(){
 8005a24:	b580      	push	{r7, lr}
 8005a26:	af00      	add	r7, sp, #0

	// Test for RTC Alarm A
	if ((RTC->ISR & RTC_ISR_ALRAF) == RTC_ISR_ALRAF){
 8005a28:	4b18      	ldr	r3, [pc, #96]	; (8005a8c <RTC_IRQHandler+0x68>)
 8005a2a:	68da      	ldr	r2, [r3, #12]
 8005a2c:	2380      	movs	r3, #128	; 0x80
 8005a2e:	005b      	lsls	r3, r3, #1
 8005a30:	401a      	ands	r2, r3
 8005a32:	2380      	movs	r3, #128	; 0x80
 8005a34:	005b      	lsls	r3, r3, #1
 8005a36:	429a      	cmp	r2, r3
 8005a38:	d124      	bne.n	8005a84 <RTC_IRQHandler+0x60>

		// Get the current time
		rtcGetTime();
 8005a3a:	f000 f833 	bl	8005aa4 <rtcGetTime>

		// Disable the alarm
		rtcDisableAlarm();
 8005a3e:	f7ff ffd5 	bl	80059ec <rtcDisableAlarm>

		// Clear the interrupt pending bit
		RTC->ISR &= ~RTC_ISR_ALRAF;
 8005a42:	4b12      	ldr	r3, [pc, #72]	; (8005a8c <RTC_IRQHandler+0x68>)
 8005a44:	68da      	ldr	r2, [r3, #12]
 8005a46:	4b11      	ldr	r3, [pc, #68]	; (8005a8c <RTC_IRQHandler+0x68>)
 8005a48:	4911      	ldr	r1, [pc, #68]	; (8005a90 <RTC_IRQHandler+0x6c>)
 8005a4a:	400a      	ands	r2, r1
 8005a4c:	60da      	str	r2, [r3, #12]

		// Clear EXTI pending bit also
		EXTI->PR = EXTI_PR_PR17;
 8005a4e:	4b11      	ldr	r3, [pc, #68]	; (8005a94 <RTC_IRQHandler+0x70>)
 8005a50:	2280      	movs	r2, #128	; 0x80
 8005a52:	0292      	lsls	r2, r2, #10
 8005a54:	615a      	str	r2, [r3, #20]

		// First alarm : Go to the next pass starting point
		if(isFirstAlarm){
 8005a56:	4b10      	ldr	r3, [pc, #64]	; (8005a98 <RTC_IRQHandler+0x74>)
 8005a58:	681b      	ldr	r3, [r3, #0]
 8005a5a:	2b00      	cmp	r3, #0
 8005a5c:	d00b      	beq.n	8005a76 <RTC_IRQHandler+0x52>

			printf("Go to next pass starting point \r\n");
 8005a5e:	4b0f      	ldr	r3, [pc, #60]	; (8005a9c <RTC_IRQHandler+0x78>)
 8005a60:	0018      	movs	r0, r3
 8005a62:	f001 f80f 	bl	8006a84 <puts>

			isFirstAlarm = 0;
 8005a66:	4b0c      	ldr	r3, [pc, #48]	; (8005a98 <RTC_IRQHandler+0x74>)
 8005a68:	2200      	movs	r2, #0
 8005a6a:	601a      	str	r2, [r3, #0]

			rtcSetAlarm();
 8005a6c:	f7ff fec8 	bl	8005800 <rtcSetAlarm>
			rtcGetAlarm();
 8005a70:	f000 f88e 	bl	8005b90 <rtcGetAlarm>

			isFirstAlarm = 1;
		}

	}
}
 8005a74:	e006      	b.n	8005a84 <RTC_IRQHandler+0x60>
			printf("Start the tracking \r\n");
 8005a76:	4b0a      	ldr	r3, [pc, #40]	; (8005aa0 <RTC_IRQHandler+0x7c>)
 8005a78:	0018      	movs	r0, r3
 8005a7a:	f001 f803 	bl	8006a84 <puts>
			isFirstAlarm = 1;
 8005a7e:	4b06      	ldr	r3, [pc, #24]	; (8005a98 <RTC_IRQHandler+0x74>)
 8005a80:	2201      	movs	r2, #1
 8005a82:	601a      	str	r2, [r3, #0]
}
 8005a84:	46c0      	nop			; (mov r8, r8)
 8005a86:	46bd      	mov	sp, r7
 8005a88:	bd80      	pop	{r7, pc}
 8005a8a:	46c0      	nop			; (mov r8, r8)
 8005a8c:	40002800 	.word	0x40002800
 8005a90:	fffffeff 	.word	0xfffffeff
 8005a94:	40010400 	.word	0x40010400
 8005a98:	20000018 	.word	0x20000018
 8005a9c:	0800bb24 	.word	0x0800bb24
 8005aa0:	0800bb48 	.word	0x0800bb48

08005aa4 <rtcGetTime>:

void rtcGetTime(){
 8005aa4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005aa6:	b08b      	sub	sp, #44	; 0x2c
 8005aa8:	af04      	add	r7, sp, #16

	Time currentTime;

	// Wait until the calendar shadow registers are synchronized
	while((RTC->ISR & RTC_ISR_RSF) != RTC_ISR_RSF);
 8005aaa:	46c0      	nop			; (mov r8, r8)
 8005aac:	4b36      	ldr	r3, [pc, #216]	; (8005b88 <rtcGetTime+0xe4>)
 8005aae:	68db      	ldr	r3, [r3, #12]
 8005ab0:	2220      	movs	r2, #32
 8005ab2:	4013      	ands	r3, r2
 8005ab4:	2b20      	cmp	r3, #32
 8005ab6:	d1f9      	bne.n	8005aac <rtcGetTime+0x8>

	currentTime.year = bcd2byte((RTC->DR & (RTC_DR_YT_Msk  | RTC_DR_YU_Msk )) >> RTC_DR_YU_Pos);
 8005ab8:	4b33      	ldr	r3, [pc, #204]	; (8005b88 <rtcGetTime+0xe4>)
 8005aba:	685b      	ldr	r3, [r3, #4]
 8005abc:	0c1b      	lsrs	r3, r3, #16
 8005abe:	b2db      	uxtb	r3, r3
 8005ac0:	0018      	movs	r0, r3
 8005ac2:	f7ff fd32 	bl	800552a <bcd2byte>
 8005ac6:	0003      	movs	r3, r0
 8005ac8:	001a      	movs	r2, r3
 8005aca:	003b      	movs	r3, r7
 8005acc:	601a      	str	r2, [r3, #0]
	currentTime.month = bcd2byte((RTC->DR & (RTC_DR_MT_Msk | RTC_DR_MU_Msk)) >> RTC_DR_MU_Pos);
 8005ace:	4b2e      	ldr	r3, [pc, #184]	; (8005b88 <rtcGetTime+0xe4>)
 8005ad0:	685b      	ldr	r3, [r3, #4]
 8005ad2:	0a1b      	lsrs	r3, r3, #8
 8005ad4:	b2db      	uxtb	r3, r3
 8005ad6:	221f      	movs	r2, #31
 8005ad8:	4013      	ands	r3, r2
 8005ada:	b2db      	uxtb	r3, r3
 8005adc:	0018      	movs	r0, r3
 8005ade:	f7ff fd24 	bl	800552a <bcd2byte>
 8005ae2:	0003      	movs	r3, r0
 8005ae4:	001a      	movs	r2, r3
 8005ae6:	003b      	movs	r3, r7
 8005ae8:	605a      	str	r2, [r3, #4]
	currentTime.day = bcd2byte((RTC->DR & (RTC_DR_DT_Msk  | RTC_DR_DU_Msk )) >> RTC_DR_DU_Pos);
 8005aea:	4b27      	ldr	r3, [pc, #156]	; (8005b88 <rtcGetTime+0xe4>)
 8005aec:	685b      	ldr	r3, [r3, #4]
 8005aee:	b2db      	uxtb	r3, r3
 8005af0:	223f      	movs	r2, #63	; 0x3f
 8005af2:	4013      	ands	r3, r2
 8005af4:	b2db      	uxtb	r3, r3
 8005af6:	0018      	movs	r0, r3
 8005af8:	f7ff fd17 	bl	800552a <bcd2byte>
 8005afc:	0003      	movs	r3, r0
 8005afe:	001a      	movs	r2, r3
 8005b00:	003b      	movs	r3, r7
 8005b02:	609a      	str	r2, [r3, #8]

	currentTime.hour = bcd2byte((RTC->TR & (RTC_TR_HT_Msk  | RTC_TR_HU_Msk )) >> RTC_TR_HU_Pos);
 8005b04:	4b20      	ldr	r3, [pc, #128]	; (8005b88 <rtcGetTime+0xe4>)
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	0c1b      	lsrs	r3, r3, #16
 8005b0a:	b2db      	uxtb	r3, r3
 8005b0c:	223f      	movs	r2, #63	; 0x3f
 8005b0e:	4013      	ands	r3, r2
 8005b10:	b2db      	uxtb	r3, r3
 8005b12:	0018      	movs	r0, r3
 8005b14:	f7ff fd09 	bl	800552a <bcd2byte>
 8005b18:	0003      	movs	r3, r0
 8005b1a:	001a      	movs	r2, r3
 8005b1c:	003b      	movs	r3, r7
 8005b1e:	60da      	str	r2, [r3, #12]
	currentTime.minute = bcd2byte((RTC->TR & (RTC_TR_MNT_Msk | RTC_TR_MNU_Msk)) >> RTC_TR_MNU_Pos);
 8005b20:	4b19      	ldr	r3, [pc, #100]	; (8005b88 <rtcGetTime+0xe4>)
 8005b22:	681b      	ldr	r3, [r3, #0]
 8005b24:	0a1b      	lsrs	r3, r3, #8
 8005b26:	b2db      	uxtb	r3, r3
 8005b28:	227f      	movs	r2, #127	; 0x7f
 8005b2a:	4013      	ands	r3, r2
 8005b2c:	b2db      	uxtb	r3, r3
 8005b2e:	0018      	movs	r0, r3
 8005b30:	f7ff fcfb 	bl	800552a <bcd2byte>
 8005b34:	0003      	movs	r3, r0
 8005b36:	001a      	movs	r2, r3
 8005b38:	003b      	movs	r3, r7
 8005b3a:	611a      	str	r2, [r3, #16]
	currentTime.second = bcd2byte((RTC->TR & (RTC_TR_ST_Msk  | RTC_TR_SU_Msk )) >> RTC_TR_SU_Pos);
 8005b3c:	4b12      	ldr	r3, [pc, #72]	; (8005b88 <rtcGetTime+0xe4>)
 8005b3e:	681b      	ldr	r3, [r3, #0]
 8005b40:	b2db      	uxtb	r3, r3
 8005b42:	227f      	movs	r2, #127	; 0x7f
 8005b44:	4013      	ands	r3, r2
 8005b46:	b2db      	uxtb	r3, r3
 8005b48:	0018      	movs	r0, r3
 8005b4a:	f7ff fcee 	bl	800552a <bcd2byte>
 8005b4e:	0003      	movs	r3, r0
 8005b50:	001a      	movs	r2, r3
 8005b52:	003b      	movs	r3, r7
 8005b54:	615a      	str	r2, [r3, #20]

	printf("CurrentTime : %ld/%.2ld/%ld %ld:%ld:%ld\n",currentTime.year,currentTime.month, currentTime.day, currentTime.hour,currentTime.minute, currentTime.second);
 8005b56:	003b      	movs	r3, r7
 8005b58:	681c      	ldr	r4, [r3, #0]
 8005b5a:	003b      	movs	r3, r7
 8005b5c:	685d      	ldr	r5, [r3, #4]
 8005b5e:	003b      	movs	r3, r7
 8005b60:	689e      	ldr	r6, [r3, #8]
 8005b62:	003b      	movs	r3, r7
 8005b64:	68da      	ldr	r2, [r3, #12]
 8005b66:	003b      	movs	r3, r7
 8005b68:	6919      	ldr	r1, [r3, #16]
 8005b6a:	003b      	movs	r3, r7
 8005b6c:	695b      	ldr	r3, [r3, #20]
 8005b6e:	4807      	ldr	r0, [pc, #28]	; (8005b8c <rtcGetTime+0xe8>)
 8005b70:	9302      	str	r3, [sp, #8]
 8005b72:	9101      	str	r1, [sp, #4]
 8005b74:	9200      	str	r2, [sp, #0]
 8005b76:	0033      	movs	r3, r6
 8005b78:	002a      	movs	r2, r5
 8005b7a:	0021      	movs	r1, r4
 8005b7c:	f000 ff08 	bl	8006990 <iprintf>

}
 8005b80:	46c0      	nop			; (mov r8, r8)
 8005b82:	46bd      	mov	sp, r7
 8005b84:	b007      	add	sp, #28
 8005b86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005b88:	40002800 	.word	0x40002800
 8005b8c:	0800bb60 	.word	0x0800bb60

08005b90 <rtcGetAlarm>:

void rtcGetAlarm(){
 8005b90:	b580      	push	{r7, lr}
 8005b92:	b086      	sub	sp, #24
 8005b94:	af00      	add	r7, sp, #0

	Time alarmTime;

	alarmTime.day = bcd2byte((RTC->ALRMAR & (RTC_ALRMAR_DT_Msk | RTC_ALRMAR_DU_Msk )) >> RTC_ALRMAR_DU_Pos);
 8005b96:	4b1b      	ldr	r3, [pc, #108]	; (8005c04 <rtcGetAlarm+0x74>)
 8005b98:	69db      	ldr	r3, [r3, #28]
 8005b9a:	0e1b      	lsrs	r3, r3, #24
 8005b9c:	b2db      	uxtb	r3, r3
 8005b9e:	223f      	movs	r2, #63	; 0x3f
 8005ba0:	4013      	ands	r3, r2
 8005ba2:	b2db      	uxtb	r3, r3
 8005ba4:	0018      	movs	r0, r3
 8005ba6:	f7ff fcc0 	bl	800552a <bcd2byte>
 8005baa:	0003      	movs	r3, r0
 8005bac:	001a      	movs	r2, r3
 8005bae:	003b      	movs	r3, r7
 8005bb0:	609a      	str	r2, [r3, #8]

	alarmTime.hour = bcd2byte((RTC->ALRMAR & (RTC_ALRMAR_HT_Msk | RTC_ALRMAR_HU_Msk )) >>RTC_ALRMAR_HU_Pos);
 8005bb2:	4b14      	ldr	r3, [pc, #80]	; (8005c04 <rtcGetAlarm+0x74>)
 8005bb4:	69db      	ldr	r3, [r3, #28]
 8005bb6:	0c1b      	lsrs	r3, r3, #16
 8005bb8:	b2db      	uxtb	r3, r3
 8005bba:	223f      	movs	r2, #63	; 0x3f
 8005bbc:	4013      	ands	r3, r2
 8005bbe:	b2db      	uxtb	r3, r3
 8005bc0:	0018      	movs	r0, r3
 8005bc2:	f7ff fcb2 	bl	800552a <bcd2byte>
 8005bc6:	0003      	movs	r3, r0
 8005bc8:	001a      	movs	r2, r3
 8005bca:	003b      	movs	r3, r7
 8005bcc:	60da      	str	r2, [r3, #12]

	alarmTime.minute = bcd2byte((RTC->ALRMAR & (RTC_ALRMAR_MNT_Msk | RTC_ALRMAR_MNU_Msk)) >> RTC_ALRMAR_MNU_Pos);
 8005bce:	4b0d      	ldr	r3, [pc, #52]	; (8005c04 <rtcGetAlarm+0x74>)
 8005bd0:	69db      	ldr	r3, [r3, #28]
 8005bd2:	0a1b      	lsrs	r3, r3, #8
 8005bd4:	b2db      	uxtb	r3, r3
 8005bd6:	227f      	movs	r2, #127	; 0x7f
 8005bd8:	4013      	ands	r3, r2
 8005bda:	b2db      	uxtb	r3, r3
 8005bdc:	0018      	movs	r0, r3
 8005bde:	f7ff fca4 	bl	800552a <bcd2byte>
 8005be2:	0003      	movs	r3, r0
 8005be4:	001a      	movs	r2, r3
 8005be6:	003b      	movs	r3, r7
 8005be8:	611a      	str	r2, [r3, #16]

	printf("alarmTime : %ld %ld:%ld\n",alarmTime.day, alarmTime.hour,alarmTime.minute);
 8005bea:	003b      	movs	r3, r7
 8005bec:	6899      	ldr	r1, [r3, #8]
 8005bee:	003b      	movs	r3, r7
 8005bf0:	68da      	ldr	r2, [r3, #12]
 8005bf2:	003b      	movs	r3, r7
 8005bf4:	691b      	ldr	r3, [r3, #16]
 8005bf6:	4804      	ldr	r0, [pc, #16]	; (8005c08 <rtcGetAlarm+0x78>)
 8005bf8:	f000 feca 	bl	8006990 <iprintf>
}
 8005bfc:	46c0      	nop			; (mov r8, r8)
 8005bfe:	46bd      	mov	sp, r7
 8005c00:	b006      	add	sp, #24
 8005c02:	bd80      	pop	{r7, pc}
 8005c04:	40002800 	.word	0x40002800
 8005c08:	0800bb8c 	.word	0x0800bb8c

08005c0c <main>:
extern void pwmInit(void);
extern void home(void);

extern void initialise_monitor_handles();

int main(void){
 8005c0c:	b580      	push	{r7, lr}
 8005c0e:	af00      	add	r7, sp, #0

	initialise_monitor_handles();
 8005c10:	f004 fff0 	bl	800abf4 <initialise_monitor_handles>

	canInit();
 8005c14:	f7fd fe86 	bl	8003924 <canInit>

	rtcCalendarInit();
 8005c18:	f7ff fca8 	bl	800556c <rtcCalendarInit>

	pwmInit();
 8005c1c:	f7ff f9f0 	bl	8005000 <pwmInit>

	canEnableIRQ();
 8005c20:	f7fe ff04 	bl	8004a2c <canEnableIRQ>

	sendRemoteFrame();
 8005c24:	f7fd ffde 	bl	8003be4 <sendRemoteFrame>

	home();
 8005c28:	f7ff fb8c 	bl	8005344 <home>

	while(1){
 8005c2c:	e7fe      	b.n	8005c2c <main+0x20>
	...

08005c30 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8005c30:	b580      	push	{r7, lr}
 8005c32:	b084      	sub	sp, #16
 8005c34:	af00      	add	r7, sp, #0
 8005c36:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8005c38:	4b11      	ldr	r3, [pc, #68]	; (8005c80 <_sbrk+0x50>)
 8005c3a:	681b      	ldr	r3, [r3, #0]
 8005c3c:	2b00      	cmp	r3, #0
 8005c3e:	d102      	bne.n	8005c46 <_sbrk+0x16>
		heap_end = &end;
 8005c40:	4b0f      	ldr	r3, [pc, #60]	; (8005c80 <_sbrk+0x50>)
 8005c42:	4a10      	ldr	r2, [pc, #64]	; (8005c84 <_sbrk+0x54>)
 8005c44:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8005c46:	4b0e      	ldr	r3, [pc, #56]	; (8005c80 <_sbrk+0x50>)
 8005c48:	681b      	ldr	r3, [r3, #0]
 8005c4a:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8005c4c:	4b0c      	ldr	r3, [pc, #48]	; (8005c80 <_sbrk+0x50>)
 8005c4e:	681a      	ldr	r2, [r3, #0]
 8005c50:	687b      	ldr	r3, [r7, #4]
 8005c52:	18d3      	adds	r3, r2, r3
 8005c54:	466a      	mov	r2, sp
 8005c56:	4293      	cmp	r3, r2
 8005c58:	d907      	bls.n	8005c6a <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8005c5a:	f000 f845 	bl	8005ce8 <__errno>
 8005c5e:	0003      	movs	r3, r0
 8005c60:	220c      	movs	r2, #12
 8005c62:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8005c64:	2301      	movs	r3, #1
 8005c66:	425b      	negs	r3, r3
 8005c68:	e006      	b.n	8005c78 <_sbrk+0x48>
	}

	heap_end += incr;
 8005c6a:	4b05      	ldr	r3, [pc, #20]	; (8005c80 <_sbrk+0x50>)
 8005c6c:	681a      	ldr	r2, [r3, #0]
 8005c6e:	687b      	ldr	r3, [r7, #4]
 8005c70:	18d2      	adds	r2, r2, r3
 8005c72:	4b03      	ldr	r3, [pc, #12]	; (8005c80 <_sbrk+0x50>)
 8005c74:	601a      	str	r2, [r3, #0]

	return (caddr_t) prev_heap_end;
 8005c76:	68fb      	ldr	r3, [r7, #12]
}
 8005c78:	0018      	movs	r0, r3
 8005c7a:	46bd      	mov	sp, r7
 8005c7c:	b004      	add	sp, #16
 8005c7e:	bd80      	pop	{r7, pc}
 8005c80:	20000420 	.word	0x20000420
 8005c84:	20000508 	.word	0x20000508

08005c88 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8005c88:	480d      	ldr	r0, [pc, #52]	; (8005cc0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8005c8a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8005c8c:	480d      	ldr	r0, [pc, #52]	; (8005cc4 <LoopForever+0x6>)
  ldr r1, =_edata
 8005c8e:	490e      	ldr	r1, [pc, #56]	; (8005cc8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8005c90:	4a0e      	ldr	r2, [pc, #56]	; (8005ccc <LoopForever+0xe>)
  movs r3, #0
 8005c92:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8005c94:	e002      	b.n	8005c9c <LoopCopyDataInit>

08005c96 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8005c96:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8005c98:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8005c9a:	3304      	adds	r3, #4

08005c9c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8005c9c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8005c9e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8005ca0:	d3f9      	bcc.n	8005c96 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8005ca2:	4a0b      	ldr	r2, [pc, #44]	; (8005cd0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8005ca4:	4c0b      	ldr	r4, [pc, #44]	; (8005cd4 <LoopForever+0x16>)
  movs r3, #0
 8005ca6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8005ca8:	e001      	b.n	8005cae <LoopFillZerobss>

08005caa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8005caa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8005cac:	3204      	adds	r2, #4

08005cae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8005cae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8005cb0:	d3fb      	bcc.n	8005caa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8005cb2:	e000      	b.n	8005cb6 <LoopFillZerobss+0x8>
 8005cb4:	bf00      	nop
/* Call static constructors */
  bl __libc_init_array
 8005cb6:	f000 f81d 	bl	8005cf4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8005cba:	f7ff ffa7 	bl	8005c0c <main>

08005cbe <LoopForever>:

LoopForever:
    b LoopForever
 8005cbe:	e7fe      	b.n	8005cbe <LoopForever>
  ldr   r0, =_estack
 8005cc0:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8005cc4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8005cc8:	20000258 	.word	0x20000258
  ldr r2, =_sidata
 8005ccc:	0800c334 	.word	0x0800c334
  ldr r2, =_sbss
 8005cd0:	20000258 	.word	0x20000258
  ldr r4, =_ebss
 8005cd4:	20000504 	.word	0x20000504

08005cd8 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8005cd8:	e7fe      	b.n	8005cd8 <ADC_COMP_IRQHandler>

08005cda <atoi>:
 8005cda:	b510      	push	{r4, lr}
 8005cdc:	220a      	movs	r2, #10
 8005cde:	2100      	movs	r1, #0
 8005ce0:	f001 fcfe 	bl	80076e0 <strtol>
 8005ce4:	bd10      	pop	{r4, pc}
	...

08005ce8 <__errno>:
 8005ce8:	4b01      	ldr	r3, [pc, #4]	; (8005cf0 <__errno+0x8>)
 8005cea:	6818      	ldr	r0, [r3, #0]
 8005cec:	4770      	bx	lr
 8005cee:	46c0      	nop			; (mov r8, r8)
 8005cf0:	2000001c 	.word	0x2000001c

08005cf4 <__libc_init_array>:
 8005cf4:	b570      	push	{r4, r5, r6, lr}
 8005cf6:	2600      	movs	r6, #0
 8005cf8:	4d0c      	ldr	r5, [pc, #48]	; (8005d2c <__libc_init_array+0x38>)
 8005cfa:	4c0d      	ldr	r4, [pc, #52]	; (8005d30 <__libc_init_array+0x3c>)
 8005cfc:	1b64      	subs	r4, r4, r5
 8005cfe:	10a4      	asrs	r4, r4, #2
 8005d00:	42a6      	cmp	r6, r4
 8005d02:	d109      	bne.n	8005d18 <__libc_init_array+0x24>
 8005d04:	2600      	movs	r6, #0
 8005d06:	f005 f841 	bl	800ad8c <_init>
 8005d0a:	4d0a      	ldr	r5, [pc, #40]	; (8005d34 <__libc_init_array+0x40>)
 8005d0c:	4c0a      	ldr	r4, [pc, #40]	; (8005d38 <__libc_init_array+0x44>)
 8005d0e:	1b64      	subs	r4, r4, r5
 8005d10:	10a4      	asrs	r4, r4, #2
 8005d12:	42a6      	cmp	r6, r4
 8005d14:	d105      	bne.n	8005d22 <__libc_init_array+0x2e>
 8005d16:	bd70      	pop	{r4, r5, r6, pc}
 8005d18:	00b3      	lsls	r3, r6, #2
 8005d1a:	58eb      	ldr	r3, [r5, r3]
 8005d1c:	4798      	blx	r3
 8005d1e:	3601      	adds	r6, #1
 8005d20:	e7ee      	b.n	8005d00 <__libc_init_array+0xc>
 8005d22:	00b3      	lsls	r3, r6, #2
 8005d24:	58eb      	ldr	r3, [r5, r3]
 8005d26:	4798      	blx	r3
 8005d28:	3601      	adds	r6, #1
 8005d2a:	e7f2      	b.n	8005d12 <__libc_init_array+0x1e>
 8005d2c:	0800c32c 	.word	0x0800c32c
 8005d30:	0800c32c 	.word	0x0800c32c
 8005d34:	0800c32c 	.word	0x0800c32c
 8005d38:	0800c330 	.word	0x0800c330

08005d3c <localtime>:
 8005d3c:	4b07      	ldr	r3, [pc, #28]	; (8005d5c <localtime+0x20>)
 8005d3e:	b570      	push	{r4, r5, r6, lr}
 8005d40:	681c      	ldr	r4, [r3, #0]
 8005d42:	0005      	movs	r5, r0
 8005d44:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005d46:	2b00      	cmp	r3, #0
 8005d48:	d103      	bne.n	8005d52 <localtime+0x16>
 8005d4a:	2024      	movs	r0, #36	; 0x24
 8005d4c:	f000 f8fe 	bl	8005f4c <malloc>
 8005d50:	63e0      	str	r0, [r4, #60]	; 0x3c
 8005d52:	0028      	movs	r0, r5
 8005d54:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8005d56:	f000 f803 	bl	8005d60 <localtime_r>
 8005d5a:	bd70      	pop	{r4, r5, r6, pc}
 8005d5c:	2000001c 	.word	0x2000001c

08005d60 <localtime_r>:
 8005d60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005d62:	000c      	movs	r4, r1
 8005d64:	0007      	movs	r7, r0
 8005d66:	f003 f8df 	bl	8008f28 <__gettzinfo>
 8005d6a:	0021      	movs	r1, r4
 8005d6c:	0005      	movs	r5, r0
 8005d6e:	0038      	movs	r0, r7
 8005d70:	f003 f8de 	bl	8008f30 <gmtime_r>
 8005d74:	4a71      	ldr	r2, [pc, #452]	; (8005f3c <localtime_r+0x1dc>)
 8005d76:	6943      	ldr	r3, [r0, #20]
 8005d78:	0004      	movs	r4, r0
 8005d7a:	189e      	adds	r6, r3, r2
 8005d7c:	07b3      	lsls	r3, r6, #30
 8005d7e:	d106      	bne.n	8005d8e <localtime_r+0x2e>
 8005d80:	2164      	movs	r1, #100	; 0x64
 8005d82:	0030      	movs	r0, r6
 8005d84:	f7fa fb56 	bl	8000434 <__aeabi_idivmod>
 8005d88:	2301      	movs	r3, #1
 8005d8a:	2900      	cmp	r1, #0
 8005d8c:	d106      	bne.n	8005d9c <localtime_r+0x3c>
 8005d8e:	21c8      	movs	r1, #200	; 0xc8
 8005d90:	0030      	movs	r0, r6
 8005d92:	0049      	lsls	r1, r1, #1
 8005d94:	f7fa fb4e 	bl	8000434 <__aeabi_idivmod>
 8005d98:	424b      	negs	r3, r1
 8005d9a:	414b      	adcs	r3, r1
 8005d9c:	2130      	movs	r1, #48	; 0x30
 8005d9e:	434b      	muls	r3, r1
 8005da0:	4967      	ldr	r1, [pc, #412]	; (8005f40 <localtime_r+0x1e0>)
 8005da2:	185b      	adds	r3, r3, r1
 8005da4:	9301      	str	r3, [sp, #4]
 8005da6:	f001 fe21 	bl	80079ec <__tz_lock>
 8005daa:	f001 fe21 	bl	80079f0 <_tzset_unlocked>
 8005dae:	4b65      	ldr	r3, [pc, #404]	; (8005f44 <localtime_r+0x1e4>)
 8005db0:	681b      	ldr	r3, [r3, #0]
 8005db2:	2b00      	cmp	r3, #0
 8005db4:	d025      	beq.n	8005e02 <localtime_r+0xa2>
 8005db6:	686b      	ldr	r3, [r5, #4]
 8005db8:	42b3      	cmp	r3, r6
 8005dba:	d10c      	bne.n	8005dd6 <localtime_r+0x76>
 8005dbc:	cf06      	ldmia	r7!, {r1, r2}
 8005dbe:	682e      	ldr	r6, [r5, #0]
 8005dc0:	6a28      	ldr	r0, [r5, #32]
 8005dc2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005dc4:	2e00      	cmp	r6, #0
 8005dc6:	d10e      	bne.n	8005de6 <localtime_r+0x86>
 8005dc8:	4293      	cmp	r3, r2
 8005dca:	dc11      	bgt.n	8005df0 <localtime_r+0x90>
 8005dcc:	d101      	bne.n	8005dd2 <localtime_r+0x72>
 8005dce:	4288      	cmp	r0, r1
 8005dd0:	d80e      	bhi.n	8005df0 <localtime_r+0x90>
 8005dd2:	2301      	movs	r3, #1
 8005dd4:	e015      	b.n	8005e02 <localtime_r+0xa2>
 8005dd6:	0030      	movs	r0, r6
 8005dd8:	f001 fd58 	bl	800788c <__tzcalc_limits>
 8005ddc:	2800      	cmp	r0, #0
 8005dde:	d1ed      	bne.n	8005dbc <localtime_r+0x5c>
 8005de0:	2301      	movs	r3, #1
 8005de2:	425b      	negs	r3, r3
 8005de4:	e00d      	b.n	8005e02 <localtime_r+0xa2>
 8005de6:	4293      	cmp	r3, r2
 8005de8:	dc0a      	bgt.n	8005e00 <localtime_r+0xa0>
 8005dea:	d101      	bne.n	8005df0 <localtime_r+0x90>
 8005dec:	4288      	cmp	r0, r1
 8005dee:	d807      	bhi.n	8005e00 <localtime_r+0xa0>
 8005df0:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
 8005df2:	2301      	movs	r3, #1
 8005df4:	4290      	cmp	r0, r2
 8005df6:	dc04      	bgt.n	8005e02 <localtime_r+0xa2>
 8005df8:	d102      	bne.n	8005e00 <localtime_r+0xa0>
 8005dfa:	6caa      	ldr	r2, [r5, #72]	; 0x48
 8005dfc:	428a      	cmp	r2, r1
 8005dfe:	d800      	bhi.n	8005e02 <localtime_r+0xa2>
 8005e00:	2300      	movs	r3, #0
 8005e02:	6223      	str	r3, [r4, #32]
 8005e04:	6a23      	ldr	r3, [r4, #32]
 8005e06:	2b01      	cmp	r3, #1
 8005e08:	d149      	bne.n	8005e9e <localtime_r+0x13e>
 8005e0a:	6d2f      	ldr	r7, [r5, #80]	; 0x50
 8005e0c:	21e1      	movs	r1, #225	; 0xe1
 8005e0e:	0038      	movs	r0, r7
 8005e10:	0109      	lsls	r1, r1, #4
 8005e12:	f7fa fb0f 	bl	8000434 <__aeabi_idivmod>
 8005e16:	000e      	movs	r6, r1
 8005e18:	213c      	movs	r1, #60	; 0x3c
 8005e1a:	0030      	movs	r0, r6
 8005e1c:	f7fa fb0a 	bl	8000434 <__aeabi_idivmod>
 8005e20:	6823      	ldr	r3, [r4, #0]
 8005e22:	0030      	movs	r0, r6
 8005e24:	1a5d      	subs	r5, r3, r1
 8005e26:	6025      	str	r5, [r4, #0]
 8005e28:	213c      	movs	r1, #60	; 0x3c
 8005e2a:	f7fa fa1d 	bl	8000268 <__divsi3>
 8005e2e:	21e1      	movs	r1, #225	; 0xe1
 8005e30:	6863      	ldr	r3, [r4, #4]
 8005e32:	0109      	lsls	r1, r1, #4
 8005e34:	1a1e      	subs	r6, r3, r0
 8005e36:	6066      	str	r6, [r4, #4]
 8005e38:	0038      	movs	r0, r7
 8005e3a:	f7fa fa15 	bl	8000268 <__divsi3>
 8005e3e:	68a3      	ldr	r3, [r4, #8]
 8005e40:	1a1b      	subs	r3, r3, r0
 8005e42:	60a3      	str	r3, [r4, #8]
 8005e44:	2d3b      	cmp	r5, #59	; 0x3b
 8005e46:	dd2c      	ble.n	8005ea2 <localtime_r+0x142>
 8005e48:	3601      	adds	r6, #1
 8005e4a:	6066      	str	r6, [r4, #4]
 8005e4c:	3d3c      	subs	r5, #60	; 0x3c
 8005e4e:	6025      	str	r5, [r4, #0]
 8005e50:	6862      	ldr	r2, [r4, #4]
 8005e52:	2a3b      	cmp	r2, #59	; 0x3b
 8005e54:	dd2b      	ble.n	8005eae <localtime_r+0x14e>
 8005e56:	3301      	adds	r3, #1
 8005e58:	60a3      	str	r3, [r4, #8]
 8005e5a:	3a3c      	subs	r2, #60	; 0x3c
 8005e5c:	6062      	str	r2, [r4, #4]
 8005e5e:	68a2      	ldr	r2, [r4, #8]
 8005e60:	2a17      	cmp	r2, #23
 8005e62:	dd33      	ble.n	8005ecc <localtime_r+0x16c>
 8005e64:	69e3      	ldr	r3, [r4, #28]
 8005e66:	3301      	adds	r3, #1
 8005e68:	61e3      	str	r3, [r4, #28]
 8005e6a:	69a3      	ldr	r3, [r4, #24]
 8005e6c:	3301      	adds	r3, #1
 8005e6e:	2b06      	cmp	r3, #6
 8005e70:	dc23      	bgt.n	8005eba <localtime_r+0x15a>
 8005e72:	61a3      	str	r3, [r4, #24]
 8005e74:	3a18      	subs	r2, #24
 8005e76:	68e3      	ldr	r3, [r4, #12]
 8005e78:	60a2      	str	r2, [r4, #8]
 8005e7a:	6922      	ldr	r2, [r4, #16]
 8005e7c:	3301      	adds	r3, #1
 8005e7e:	9801      	ldr	r0, [sp, #4]
 8005e80:	60e3      	str	r3, [r4, #12]
 8005e82:	0091      	lsls	r1, r2, #2
 8005e84:	5809      	ldr	r1, [r1, r0]
 8005e86:	428b      	cmp	r3, r1
 8005e88:	dd05      	ble.n	8005e96 <localtime_r+0x136>
 8005e8a:	1a5b      	subs	r3, r3, r1
 8005e8c:	3201      	adds	r2, #1
 8005e8e:	60e3      	str	r3, [r4, #12]
 8005e90:	2a0c      	cmp	r2, #12
 8005e92:	d014      	beq.n	8005ebe <localtime_r+0x15e>
 8005e94:	6122      	str	r2, [r4, #16]
 8005e96:	f001 fdaa 	bl	80079ee <__tz_unlock>
 8005e9a:	0020      	movs	r0, r4
 8005e9c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005e9e:	6aaf      	ldr	r7, [r5, #40]	; 0x28
 8005ea0:	e7b4      	b.n	8005e0c <localtime_r+0xac>
 8005ea2:	2d00      	cmp	r5, #0
 8005ea4:	dad4      	bge.n	8005e50 <localtime_r+0xf0>
 8005ea6:	3e01      	subs	r6, #1
 8005ea8:	6066      	str	r6, [r4, #4]
 8005eaa:	353c      	adds	r5, #60	; 0x3c
 8005eac:	e7cf      	b.n	8005e4e <localtime_r+0xee>
 8005eae:	2a00      	cmp	r2, #0
 8005eb0:	dad5      	bge.n	8005e5e <localtime_r+0xfe>
 8005eb2:	3b01      	subs	r3, #1
 8005eb4:	60a3      	str	r3, [r4, #8]
 8005eb6:	323c      	adds	r2, #60	; 0x3c
 8005eb8:	e7d0      	b.n	8005e5c <localtime_r+0xfc>
 8005eba:	2300      	movs	r3, #0
 8005ebc:	e7d9      	b.n	8005e72 <localtime_r+0x112>
 8005ebe:	2200      	movs	r2, #0
 8005ec0:	6963      	ldr	r3, [r4, #20]
 8005ec2:	6122      	str	r2, [r4, #16]
 8005ec4:	3301      	adds	r3, #1
 8005ec6:	6163      	str	r3, [r4, #20]
 8005ec8:	61e2      	str	r2, [r4, #28]
 8005eca:	e7e4      	b.n	8005e96 <localtime_r+0x136>
 8005ecc:	2a00      	cmp	r2, #0
 8005ece:	dae2      	bge.n	8005e96 <localtime_r+0x136>
 8005ed0:	69e3      	ldr	r3, [r4, #28]
 8005ed2:	3b01      	subs	r3, #1
 8005ed4:	61e3      	str	r3, [r4, #28]
 8005ed6:	69a3      	ldr	r3, [r4, #24]
 8005ed8:	3b01      	subs	r3, #1
 8005eda:	d411      	bmi.n	8005f00 <localtime_r+0x1a0>
 8005edc:	61a3      	str	r3, [r4, #24]
 8005ede:	68e3      	ldr	r3, [r4, #12]
 8005ee0:	3218      	adds	r2, #24
 8005ee2:	1e59      	subs	r1, r3, #1
 8005ee4:	60e1      	str	r1, [r4, #12]
 8005ee6:	60a2      	str	r2, [r4, #8]
 8005ee8:	2900      	cmp	r1, #0
 8005eea:	d1d4      	bne.n	8005e96 <localtime_r+0x136>
 8005eec:	6923      	ldr	r3, [r4, #16]
 8005eee:	3b01      	subs	r3, #1
 8005ef0:	d408      	bmi.n	8005f04 <localtime_r+0x1a4>
 8005ef2:	6123      	str	r3, [r4, #16]
 8005ef4:	6923      	ldr	r3, [r4, #16]
 8005ef6:	9a01      	ldr	r2, [sp, #4]
 8005ef8:	009b      	lsls	r3, r3, #2
 8005efa:	589b      	ldr	r3, [r3, r2]
 8005efc:	60e3      	str	r3, [r4, #12]
 8005efe:	e7ca      	b.n	8005e96 <localtime_r+0x136>
 8005f00:	2306      	movs	r3, #6
 8005f02:	e7eb      	b.n	8005edc <localtime_r+0x17c>
 8005f04:	230b      	movs	r3, #11
 8005f06:	6965      	ldr	r5, [r4, #20]
 8005f08:	4a0f      	ldr	r2, [pc, #60]	; (8005f48 <localtime_r+0x1e8>)
 8005f0a:	6123      	str	r3, [r4, #16]
 8005f0c:	1e6b      	subs	r3, r5, #1
 8005f0e:	6163      	str	r3, [r4, #20]
 8005f10:	18ad      	adds	r5, r5, r2
 8005f12:	079b      	lsls	r3, r3, #30
 8005f14:	d106      	bne.n	8005f24 <localtime_r+0x1c4>
 8005f16:	2164      	movs	r1, #100	; 0x64
 8005f18:	0028      	movs	r0, r5
 8005f1a:	f7fa fa8b 	bl	8000434 <__aeabi_idivmod>
 8005f1e:	2301      	movs	r3, #1
 8005f20:	2900      	cmp	r1, #0
 8005f22:	d106      	bne.n	8005f32 <localtime_r+0x1d2>
 8005f24:	21c8      	movs	r1, #200	; 0xc8
 8005f26:	0028      	movs	r0, r5
 8005f28:	0049      	lsls	r1, r1, #1
 8005f2a:	f7fa fa83 	bl	8000434 <__aeabi_idivmod>
 8005f2e:	424b      	negs	r3, r1
 8005f30:	414b      	adcs	r3, r1
 8005f32:	336d      	adds	r3, #109	; 0x6d
 8005f34:	33ff      	adds	r3, #255	; 0xff
 8005f36:	61e3      	str	r3, [r4, #28]
 8005f38:	e7dc      	b.n	8005ef4 <localtime_r+0x194>
 8005f3a:	46c0      	nop			; (mov r8, r8)
 8005f3c:	0000076c 	.word	0x0000076c
 8005f40:	0800bd14 	.word	0x0800bd14
 8005f44:	20000448 	.word	0x20000448
 8005f48:	0000076b 	.word	0x0000076b

08005f4c <malloc>:
 8005f4c:	b510      	push	{r4, lr}
 8005f4e:	4b03      	ldr	r3, [pc, #12]	; (8005f5c <malloc+0x10>)
 8005f50:	0001      	movs	r1, r0
 8005f52:	6818      	ldr	r0, [r3, #0]
 8005f54:	f000 f860 	bl	8006018 <_malloc_r>
 8005f58:	bd10      	pop	{r4, pc}
 8005f5a:	46c0      	nop			; (mov r8, r8)
 8005f5c:	2000001c 	.word	0x2000001c

08005f60 <free>:
 8005f60:	b510      	push	{r4, lr}
 8005f62:	4b03      	ldr	r3, [pc, #12]	; (8005f70 <free+0x10>)
 8005f64:	0001      	movs	r1, r0
 8005f66:	6818      	ldr	r0, [r3, #0]
 8005f68:	f000 f80c 	bl	8005f84 <_free_r>
 8005f6c:	bd10      	pop	{r4, pc}
 8005f6e:	46c0      	nop			; (mov r8, r8)
 8005f70:	2000001c 	.word	0x2000001c

08005f74 <memset>:
 8005f74:	0003      	movs	r3, r0
 8005f76:	1812      	adds	r2, r2, r0
 8005f78:	4293      	cmp	r3, r2
 8005f7a:	d100      	bne.n	8005f7e <memset+0xa>
 8005f7c:	4770      	bx	lr
 8005f7e:	7019      	strb	r1, [r3, #0]
 8005f80:	3301      	adds	r3, #1
 8005f82:	e7f9      	b.n	8005f78 <memset+0x4>

08005f84 <_free_r>:
 8005f84:	b570      	push	{r4, r5, r6, lr}
 8005f86:	0005      	movs	r5, r0
 8005f88:	2900      	cmp	r1, #0
 8005f8a:	d010      	beq.n	8005fae <_free_r+0x2a>
 8005f8c:	1f0c      	subs	r4, r1, #4
 8005f8e:	6823      	ldr	r3, [r4, #0]
 8005f90:	2b00      	cmp	r3, #0
 8005f92:	da00      	bge.n	8005f96 <_free_r+0x12>
 8005f94:	18e4      	adds	r4, r4, r3
 8005f96:	0028      	movs	r0, r5
 8005f98:	f003 f94c 	bl	8009234 <__malloc_lock>
 8005f9c:	4a1d      	ldr	r2, [pc, #116]	; (8006014 <_free_r+0x90>)
 8005f9e:	6813      	ldr	r3, [r2, #0]
 8005fa0:	2b00      	cmp	r3, #0
 8005fa2:	d105      	bne.n	8005fb0 <_free_r+0x2c>
 8005fa4:	6063      	str	r3, [r4, #4]
 8005fa6:	6014      	str	r4, [r2, #0]
 8005fa8:	0028      	movs	r0, r5
 8005faa:	f003 f944 	bl	8009236 <__malloc_unlock>
 8005fae:	bd70      	pop	{r4, r5, r6, pc}
 8005fb0:	42a3      	cmp	r3, r4
 8005fb2:	d909      	bls.n	8005fc8 <_free_r+0x44>
 8005fb4:	6821      	ldr	r1, [r4, #0]
 8005fb6:	1860      	adds	r0, r4, r1
 8005fb8:	4283      	cmp	r3, r0
 8005fba:	d1f3      	bne.n	8005fa4 <_free_r+0x20>
 8005fbc:	6818      	ldr	r0, [r3, #0]
 8005fbe:	685b      	ldr	r3, [r3, #4]
 8005fc0:	1841      	adds	r1, r0, r1
 8005fc2:	6021      	str	r1, [r4, #0]
 8005fc4:	e7ee      	b.n	8005fa4 <_free_r+0x20>
 8005fc6:	0013      	movs	r3, r2
 8005fc8:	685a      	ldr	r2, [r3, #4]
 8005fca:	2a00      	cmp	r2, #0
 8005fcc:	d001      	beq.n	8005fd2 <_free_r+0x4e>
 8005fce:	42a2      	cmp	r2, r4
 8005fd0:	d9f9      	bls.n	8005fc6 <_free_r+0x42>
 8005fd2:	6819      	ldr	r1, [r3, #0]
 8005fd4:	1858      	adds	r0, r3, r1
 8005fd6:	42a0      	cmp	r0, r4
 8005fd8:	d10b      	bne.n	8005ff2 <_free_r+0x6e>
 8005fda:	6820      	ldr	r0, [r4, #0]
 8005fdc:	1809      	adds	r1, r1, r0
 8005fde:	1858      	adds	r0, r3, r1
 8005fe0:	6019      	str	r1, [r3, #0]
 8005fe2:	4282      	cmp	r2, r0
 8005fe4:	d1e0      	bne.n	8005fa8 <_free_r+0x24>
 8005fe6:	6810      	ldr	r0, [r2, #0]
 8005fe8:	6852      	ldr	r2, [r2, #4]
 8005fea:	1841      	adds	r1, r0, r1
 8005fec:	6019      	str	r1, [r3, #0]
 8005fee:	605a      	str	r2, [r3, #4]
 8005ff0:	e7da      	b.n	8005fa8 <_free_r+0x24>
 8005ff2:	42a0      	cmp	r0, r4
 8005ff4:	d902      	bls.n	8005ffc <_free_r+0x78>
 8005ff6:	230c      	movs	r3, #12
 8005ff8:	602b      	str	r3, [r5, #0]
 8005ffa:	e7d5      	b.n	8005fa8 <_free_r+0x24>
 8005ffc:	6821      	ldr	r1, [r4, #0]
 8005ffe:	1860      	adds	r0, r4, r1
 8006000:	4282      	cmp	r2, r0
 8006002:	d103      	bne.n	800600c <_free_r+0x88>
 8006004:	6810      	ldr	r0, [r2, #0]
 8006006:	6852      	ldr	r2, [r2, #4]
 8006008:	1841      	adds	r1, r0, r1
 800600a:	6021      	str	r1, [r4, #0]
 800600c:	6062      	str	r2, [r4, #4]
 800600e:	605c      	str	r4, [r3, #4]
 8006010:	e7ca      	b.n	8005fa8 <_free_r+0x24>
 8006012:	46c0      	nop			; (mov r8, r8)
 8006014:	20000424 	.word	0x20000424

08006018 <_malloc_r>:
 8006018:	2303      	movs	r3, #3
 800601a:	b570      	push	{r4, r5, r6, lr}
 800601c:	1ccd      	adds	r5, r1, #3
 800601e:	439d      	bics	r5, r3
 8006020:	3508      	adds	r5, #8
 8006022:	0006      	movs	r6, r0
 8006024:	2d0c      	cmp	r5, #12
 8006026:	d21e      	bcs.n	8006066 <_malloc_r+0x4e>
 8006028:	250c      	movs	r5, #12
 800602a:	42a9      	cmp	r1, r5
 800602c:	d81d      	bhi.n	800606a <_malloc_r+0x52>
 800602e:	0030      	movs	r0, r6
 8006030:	f003 f900 	bl	8009234 <__malloc_lock>
 8006034:	4a25      	ldr	r2, [pc, #148]	; (80060cc <_malloc_r+0xb4>)
 8006036:	6814      	ldr	r4, [r2, #0]
 8006038:	0021      	movs	r1, r4
 800603a:	2900      	cmp	r1, #0
 800603c:	d119      	bne.n	8006072 <_malloc_r+0x5a>
 800603e:	4c24      	ldr	r4, [pc, #144]	; (80060d0 <_malloc_r+0xb8>)
 8006040:	6823      	ldr	r3, [r4, #0]
 8006042:	2b00      	cmp	r3, #0
 8006044:	d103      	bne.n	800604e <_malloc_r+0x36>
 8006046:	0030      	movs	r0, r6
 8006048:	f000 fd26 	bl	8006a98 <_sbrk_r>
 800604c:	6020      	str	r0, [r4, #0]
 800604e:	0029      	movs	r1, r5
 8006050:	0030      	movs	r0, r6
 8006052:	f000 fd21 	bl	8006a98 <_sbrk_r>
 8006056:	1c43      	adds	r3, r0, #1
 8006058:	d12b      	bne.n	80060b2 <_malloc_r+0x9a>
 800605a:	230c      	movs	r3, #12
 800605c:	0030      	movs	r0, r6
 800605e:	6033      	str	r3, [r6, #0]
 8006060:	f003 f8e9 	bl	8009236 <__malloc_unlock>
 8006064:	e003      	b.n	800606e <_malloc_r+0x56>
 8006066:	2d00      	cmp	r5, #0
 8006068:	dadf      	bge.n	800602a <_malloc_r+0x12>
 800606a:	230c      	movs	r3, #12
 800606c:	6033      	str	r3, [r6, #0]
 800606e:	2000      	movs	r0, #0
 8006070:	bd70      	pop	{r4, r5, r6, pc}
 8006072:	680b      	ldr	r3, [r1, #0]
 8006074:	1b5b      	subs	r3, r3, r5
 8006076:	d419      	bmi.n	80060ac <_malloc_r+0x94>
 8006078:	2b0b      	cmp	r3, #11
 800607a:	d903      	bls.n	8006084 <_malloc_r+0x6c>
 800607c:	600b      	str	r3, [r1, #0]
 800607e:	18cc      	adds	r4, r1, r3
 8006080:	6025      	str	r5, [r4, #0]
 8006082:	e003      	b.n	800608c <_malloc_r+0x74>
 8006084:	684b      	ldr	r3, [r1, #4]
 8006086:	428c      	cmp	r4, r1
 8006088:	d10d      	bne.n	80060a6 <_malloc_r+0x8e>
 800608a:	6013      	str	r3, [r2, #0]
 800608c:	0030      	movs	r0, r6
 800608e:	f003 f8d2 	bl	8009236 <__malloc_unlock>
 8006092:	0020      	movs	r0, r4
 8006094:	2207      	movs	r2, #7
 8006096:	300b      	adds	r0, #11
 8006098:	1d23      	adds	r3, r4, #4
 800609a:	4390      	bics	r0, r2
 800609c:	1ac3      	subs	r3, r0, r3
 800609e:	d0e7      	beq.n	8006070 <_malloc_r+0x58>
 80060a0:	425a      	negs	r2, r3
 80060a2:	50e2      	str	r2, [r4, r3]
 80060a4:	e7e4      	b.n	8006070 <_malloc_r+0x58>
 80060a6:	6063      	str	r3, [r4, #4]
 80060a8:	000c      	movs	r4, r1
 80060aa:	e7ef      	b.n	800608c <_malloc_r+0x74>
 80060ac:	000c      	movs	r4, r1
 80060ae:	6849      	ldr	r1, [r1, #4]
 80060b0:	e7c3      	b.n	800603a <_malloc_r+0x22>
 80060b2:	2303      	movs	r3, #3
 80060b4:	1cc4      	adds	r4, r0, #3
 80060b6:	439c      	bics	r4, r3
 80060b8:	42a0      	cmp	r0, r4
 80060ba:	d0e1      	beq.n	8006080 <_malloc_r+0x68>
 80060bc:	1a21      	subs	r1, r4, r0
 80060be:	0030      	movs	r0, r6
 80060c0:	f000 fcea 	bl	8006a98 <_sbrk_r>
 80060c4:	1c43      	adds	r3, r0, #1
 80060c6:	d1db      	bne.n	8006080 <_malloc_r+0x68>
 80060c8:	e7c7      	b.n	800605a <_malloc_r+0x42>
 80060ca:	46c0      	nop			; (mov r8, r8)
 80060cc:	20000424 	.word	0x20000424
 80060d0:	20000428 	.word	0x20000428

080060d4 <__cvt>:
 80060d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80060d6:	b08b      	sub	sp, #44	; 0x2c
 80060d8:	0014      	movs	r4, r2
 80060da:	1e1d      	subs	r5, r3, #0
 80060dc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80060de:	da53      	bge.n	8006188 <__cvt+0xb4>
 80060e0:	2480      	movs	r4, #128	; 0x80
 80060e2:	0624      	lsls	r4, r4, #24
 80060e4:	191b      	adds	r3, r3, r4
 80060e6:	001d      	movs	r5, r3
 80060e8:	0014      	movs	r4, r2
 80060ea:	232d      	movs	r3, #45	; 0x2d
 80060ec:	700b      	strb	r3, [r1, #0]
 80060ee:	2320      	movs	r3, #32
 80060f0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80060f2:	2203      	movs	r2, #3
 80060f4:	439e      	bics	r6, r3
 80060f6:	2e46      	cmp	r6, #70	; 0x46
 80060f8:	d007      	beq.n	800610a <__cvt+0x36>
 80060fa:	0033      	movs	r3, r6
 80060fc:	3b45      	subs	r3, #69	; 0x45
 80060fe:	4259      	negs	r1, r3
 8006100:	414b      	adcs	r3, r1
 8006102:	9910      	ldr	r1, [sp, #64]	; 0x40
 8006104:	3a01      	subs	r2, #1
 8006106:	18cb      	adds	r3, r1, r3
 8006108:	9310      	str	r3, [sp, #64]	; 0x40
 800610a:	ab09      	add	r3, sp, #36	; 0x24
 800610c:	9304      	str	r3, [sp, #16]
 800610e:	ab08      	add	r3, sp, #32
 8006110:	9303      	str	r3, [sp, #12]
 8006112:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8006114:	9200      	str	r2, [sp, #0]
 8006116:	9302      	str	r3, [sp, #8]
 8006118:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800611a:	0022      	movs	r2, r4
 800611c:	9301      	str	r3, [sp, #4]
 800611e:	002b      	movs	r3, r5
 8006120:	f001 ff42 	bl	8007fa8 <_dtoa_r>
 8006124:	0007      	movs	r7, r0
 8006126:	2e47      	cmp	r6, #71	; 0x47
 8006128:	d102      	bne.n	8006130 <__cvt+0x5c>
 800612a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800612c:	07db      	lsls	r3, r3, #31
 800612e:	d524      	bpl.n	800617a <__cvt+0xa6>
 8006130:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006132:	18fb      	adds	r3, r7, r3
 8006134:	9307      	str	r3, [sp, #28]
 8006136:	2e46      	cmp	r6, #70	; 0x46
 8006138:	d114      	bne.n	8006164 <__cvt+0x90>
 800613a:	783b      	ldrb	r3, [r7, #0]
 800613c:	2b30      	cmp	r3, #48	; 0x30
 800613e:	d10c      	bne.n	800615a <__cvt+0x86>
 8006140:	2200      	movs	r2, #0
 8006142:	2300      	movs	r3, #0
 8006144:	0020      	movs	r0, r4
 8006146:	0029      	movs	r1, r5
 8006148:	f7fa f98a 	bl	8000460 <__aeabi_dcmpeq>
 800614c:	2800      	cmp	r0, #0
 800614e:	d104      	bne.n	800615a <__cvt+0x86>
 8006150:	2301      	movs	r3, #1
 8006152:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006154:	1a9b      	subs	r3, r3, r2
 8006156:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8006158:	6013      	str	r3, [r2, #0]
 800615a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800615c:	9a07      	ldr	r2, [sp, #28]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	18d3      	adds	r3, r2, r3
 8006162:	9307      	str	r3, [sp, #28]
 8006164:	2200      	movs	r2, #0
 8006166:	2300      	movs	r3, #0
 8006168:	0020      	movs	r0, r4
 800616a:	0029      	movs	r1, r5
 800616c:	f7fa f978 	bl	8000460 <__aeabi_dcmpeq>
 8006170:	2230      	movs	r2, #48	; 0x30
 8006172:	2800      	cmp	r0, #0
 8006174:	d00d      	beq.n	8006192 <__cvt+0xbe>
 8006176:	9b07      	ldr	r3, [sp, #28]
 8006178:	9309      	str	r3, [sp, #36]	; 0x24
 800617a:	0038      	movs	r0, r7
 800617c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800617e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8006180:	1bdb      	subs	r3, r3, r7
 8006182:	6013      	str	r3, [r2, #0]
 8006184:	b00b      	add	sp, #44	; 0x2c
 8006186:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006188:	2300      	movs	r3, #0
 800618a:	e7af      	b.n	80060ec <__cvt+0x18>
 800618c:	1c59      	adds	r1, r3, #1
 800618e:	9109      	str	r1, [sp, #36]	; 0x24
 8006190:	701a      	strb	r2, [r3, #0]
 8006192:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006194:	9907      	ldr	r1, [sp, #28]
 8006196:	428b      	cmp	r3, r1
 8006198:	d3f8      	bcc.n	800618c <__cvt+0xb8>
 800619a:	e7ee      	b.n	800617a <__cvt+0xa6>

0800619c <__exponent>:
 800619c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800619e:	1c83      	adds	r3, r0, #2
 80061a0:	b085      	sub	sp, #20
 80061a2:	9301      	str	r3, [sp, #4]
 80061a4:	0006      	movs	r6, r0
 80061a6:	000c      	movs	r4, r1
 80061a8:	7002      	strb	r2, [r0, #0]
 80061aa:	232b      	movs	r3, #43	; 0x2b
 80061ac:	2900      	cmp	r1, #0
 80061ae:	da01      	bge.n	80061b4 <__exponent+0x18>
 80061b0:	232d      	movs	r3, #45	; 0x2d
 80061b2:	424c      	negs	r4, r1
 80061b4:	7073      	strb	r3, [r6, #1]
 80061b6:	2c09      	cmp	r4, #9
 80061b8:	dd22      	ble.n	8006200 <__exponent+0x64>
 80061ba:	ab02      	add	r3, sp, #8
 80061bc:	1ddd      	adds	r5, r3, #7
 80061be:	0020      	movs	r0, r4
 80061c0:	210a      	movs	r1, #10
 80061c2:	f7fa f937 	bl	8000434 <__aeabi_idivmod>
 80061c6:	1e6f      	subs	r7, r5, #1
 80061c8:	3130      	adds	r1, #48	; 0x30
 80061ca:	7039      	strb	r1, [r7, #0]
 80061cc:	0020      	movs	r0, r4
 80061ce:	210a      	movs	r1, #10
 80061d0:	f7fa f84a 	bl	8000268 <__divsi3>
 80061d4:	0004      	movs	r4, r0
 80061d6:	2809      	cmp	r0, #9
 80061d8:	dc0b      	bgt.n	80061f2 <__exponent+0x56>
 80061da:	3d02      	subs	r5, #2
 80061dc:	3430      	adds	r4, #48	; 0x30
 80061de:	9b01      	ldr	r3, [sp, #4]
 80061e0:	702c      	strb	r4, [r5, #0]
 80061e2:	aa02      	add	r2, sp, #8
 80061e4:	3207      	adds	r2, #7
 80061e6:	0018      	movs	r0, r3
 80061e8:	42aa      	cmp	r2, r5
 80061ea:	d804      	bhi.n	80061f6 <__exponent+0x5a>
 80061ec:	1b80      	subs	r0, r0, r6
 80061ee:	b005      	add	sp, #20
 80061f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80061f2:	003d      	movs	r5, r7
 80061f4:	e7e3      	b.n	80061be <__exponent+0x22>
 80061f6:	782a      	ldrb	r2, [r5, #0]
 80061f8:	3501      	adds	r5, #1
 80061fa:	701a      	strb	r2, [r3, #0]
 80061fc:	3301      	adds	r3, #1
 80061fe:	e7f0      	b.n	80061e2 <__exponent+0x46>
 8006200:	2330      	movs	r3, #48	; 0x30
 8006202:	18e4      	adds	r4, r4, r3
 8006204:	70b3      	strb	r3, [r6, #2]
 8006206:	1d30      	adds	r0, r6, #4
 8006208:	70f4      	strb	r4, [r6, #3]
 800620a:	e7ef      	b.n	80061ec <__exponent+0x50>

0800620c <_printf_float>:
 800620c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800620e:	b095      	sub	sp, #84	; 0x54
 8006210:	000c      	movs	r4, r1
 8006212:	920a      	str	r2, [sp, #40]	; 0x28
 8006214:	930b      	str	r3, [sp, #44]	; 0x2c
 8006216:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8006218:	9009      	str	r0, [sp, #36]	; 0x24
 800621a:	f002 ff6d 	bl	80090f8 <_localeconv_r>
 800621e:	6803      	ldr	r3, [r0, #0]
 8006220:	0018      	movs	r0, r3
 8006222:	930c      	str	r3, [sp, #48]	; 0x30
 8006224:	f7f9 ff70 	bl	8000108 <strlen>
 8006228:	2300      	movs	r3, #0
 800622a:	9312      	str	r3, [sp, #72]	; 0x48
 800622c:	6823      	ldr	r3, [r4, #0]
 800622e:	900e      	str	r0, [sp, #56]	; 0x38
 8006230:	930d      	str	r3, [sp, #52]	; 0x34
 8006232:	990d      	ldr	r1, [sp, #52]	; 0x34
 8006234:	7e27      	ldrb	r7, [r4, #24]
 8006236:	682b      	ldr	r3, [r5, #0]
 8006238:	2207      	movs	r2, #7
 800623a:	05c9      	lsls	r1, r1, #23
 800623c:	d545      	bpl.n	80062ca <_printf_float+0xbe>
 800623e:	189b      	adds	r3, r3, r2
 8006240:	4393      	bics	r3, r2
 8006242:	001a      	movs	r2, r3
 8006244:	3208      	adds	r2, #8
 8006246:	602a      	str	r2, [r5, #0]
 8006248:	681a      	ldr	r2, [r3, #0]
 800624a:	685b      	ldr	r3, [r3, #4]
 800624c:	64a2      	str	r2, [r4, #72]	; 0x48
 800624e:	64e3      	str	r3, [r4, #76]	; 0x4c
 8006250:	2201      	movs	r2, #1
 8006252:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8006254:	6ca6      	ldr	r6, [r4, #72]	; 0x48
 8006256:	006b      	lsls	r3, r5, #1
 8006258:	085b      	lsrs	r3, r3, #1
 800625a:	930f      	str	r3, [sp, #60]	; 0x3c
 800625c:	4252      	negs	r2, r2
 800625e:	4bac      	ldr	r3, [pc, #688]	; (8006510 <_printf_float+0x304>)
 8006260:	0030      	movs	r0, r6
 8006262:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006264:	f7fc fd74 	bl	8002d50 <__aeabi_dcmpun>
 8006268:	2800      	cmp	r0, #0
 800626a:	d130      	bne.n	80062ce <_printf_float+0xc2>
 800626c:	2201      	movs	r2, #1
 800626e:	4ba8      	ldr	r3, [pc, #672]	; (8006510 <_printf_float+0x304>)
 8006270:	4252      	negs	r2, r2
 8006272:	0030      	movs	r0, r6
 8006274:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006276:	f7fa f903 	bl	8000480 <__aeabi_dcmple>
 800627a:	2800      	cmp	r0, #0
 800627c:	d127      	bne.n	80062ce <_printf_float+0xc2>
 800627e:	2200      	movs	r2, #0
 8006280:	2300      	movs	r3, #0
 8006282:	0030      	movs	r0, r6
 8006284:	0029      	movs	r1, r5
 8006286:	f7fa f8f1 	bl	800046c <__aeabi_dcmplt>
 800628a:	2800      	cmp	r0, #0
 800628c:	d003      	beq.n	8006296 <_printf_float+0x8a>
 800628e:	0023      	movs	r3, r4
 8006290:	222d      	movs	r2, #45	; 0x2d
 8006292:	3343      	adds	r3, #67	; 0x43
 8006294:	701a      	strb	r2, [r3, #0]
 8006296:	4d9f      	ldr	r5, [pc, #636]	; (8006514 <_printf_float+0x308>)
 8006298:	2f47      	cmp	r7, #71	; 0x47
 800629a:	d800      	bhi.n	800629e <_printf_float+0x92>
 800629c:	4d9e      	ldr	r5, [pc, #632]	; (8006518 <_printf_float+0x30c>)
 800629e:	2303      	movs	r3, #3
 80062a0:	2600      	movs	r6, #0
 80062a2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80062a4:	6123      	str	r3, [r4, #16]
 80062a6:	3301      	adds	r3, #1
 80062a8:	439a      	bics	r2, r3
 80062aa:	6022      	str	r2, [r4, #0]
 80062ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80062ae:	aa13      	add	r2, sp, #76	; 0x4c
 80062b0:	9300      	str	r3, [sp, #0]
 80062b2:	0021      	movs	r1, r4
 80062b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80062b6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80062b8:	f000 f9f4 	bl	80066a4 <_printf_common>
 80062bc:	1c43      	adds	r3, r0, #1
 80062be:	d000      	beq.n	80062c2 <_printf_float+0xb6>
 80062c0:	e093      	b.n	80063ea <_printf_float+0x1de>
 80062c2:	2001      	movs	r0, #1
 80062c4:	4240      	negs	r0, r0
 80062c6:	b015      	add	sp, #84	; 0x54
 80062c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80062ca:	3307      	adds	r3, #7
 80062cc:	e7b8      	b.n	8006240 <_printf_float+0x34>
 80062ce:	0032      	movs	r2, r6
 80062d0:	002b      	movs	r3, r5
 80062d2:	0030      	movs	r0, r6
 80062d4:	0029      	movs	r1, r5
 80062d6:	f7fc fd3b 	bl	8002d50 <__aeabi_dcmpun>
 80062da:	2800      	cmp	r0, #0
 80062dc:	d004      	beq.n	80062e8 <_printf_float+0xdc>
 80062de:	4d8f      	ldr	r5, [pc, #572]	; (800651c <_printf_float+0x310>)
 80062e0:	2f47      	cmp	r7, #71	; 0x47
 80062e2:	d8dc      	bhi.n	800629e <_printf_float+0x92>
 80062e4:	4d8e      	ldr	r5, [pc, #568]	; (8006520 <_printf_float+0x314>)
 80062e6:	e7da      	b.n	800629e <_printf_float+0x92>
 80062e8:	2380      	movs	r3, #128	; 0x80
 80062ea:	990d      	ldr	r1, [sp, #52]	; 0x34
 80062ec:	6862      	ldr	r2, [r4, #4]
 80062ee:	00db      	lsls	r3, r3, #3
 80062f0:	430b      	orrs	r3, r1
 80062f2:	1c51      	adds	r1, r2, #1
 80062f4:	d143      	bne.n	800637e <_printf_float+0x172>
 80062f6:	3207      	adds	r2, #7
 80062f8:	6062      	str	r2, [r4, #4]
 80062fa:	aa12      	add	r2, sp, #72	; 0x48
 80062fc:	2100      	movs	r1, #0
 80062fe:	9205      	str	r2, [sp, #20]
 8006300:	aa11      	add	r2, sp, #68	; 0x44
 8006302:	9203      	str	r2, [sp, #12]
 8006304:	2223      	movs	r2, #35	; 0x23
 8006306:	6023      	str	r3, [r4, #0]
 8006308:	9106      	str	r1, [sp, #24]
 800630a:	9301      	str	r3, [sp, #4]
 800630c:	a908      	add	r1, sp, #32
 800630e:	6863      	ldr	r3, [r4, #4]
 8006310:	1852      	adds	r2, r2, r1
 8006312:	9202      	str	r2, [sp, #8]
 8006314:	9300      	str	r3, [sp, #0]
 8006316:	0032      	movs	r2, r6
 8006318:	002b      	movs	r3, r5
 800631a:	9704      	str	r7, [sp, #16]
 800631c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800631e:	f7ff fed9 	bl	80060d4 <__cvt>
 8006322:	2320      	movs	r3, #32
 8006324:	003a      	movs	r2, r7
 8006326:	0005      	movs	r5, r0
 8006328:	439a      	bics	r2, r3
 800632a:	2a47      	cmp	r2, #71	; 0x47
 800632c:	d107      	bne.n	800633e <_printf_float+0x132>
 800632e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006330:	1cda      	adds	r2, r3, #3
 8006332:	db02      	blt.n	800633a <_printf_float+0x12e>
 8006334:	6862      	ldr	r2, [r4, #4]
 8006336:	4293      	cmp	r3, r2
 8006338:	dd45      	ble.n	80063c6 <_printf_float+0x1ba>
 800633a:	3f02      	subs	r7, #2
 800633c:	b2ff      	uxtb	r7, r7
 800633e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006340:	2f65      	cmp	r7, #101	; 0x65
 8006342:	d825      	bhi.n	8006390 <_printf_float+0x184>
 8006344:	0020      	movs	r0, r4
 8006346:	3901      	subs	r1, #1
 8006348:	003a      	movs	r2, r7
 800634a:	3050      	adds	r0, #80	; 0x50
 800634c:	9111      	str	r1, [sp, #68]	; 0x44
 800634e:	f7ff ff25 	bl	800619c <__exponent>
 8006352:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006354:	0006      	movs	r6, r0
 8006356:	1813      	adds	r3, r2, r0
 8006358:	6123      	str	r3, [r4, #16]
 800635a:	2a01      	cmp	r2, #1
 800635c:	dc02      	bgt.n	8006364 <_printf_float+0x158>
 800635e:	6822      	ldr	r2, [r4, #0]
 8006360:	07d2      	lsls	r2, r2, #31
 8006362:	d501      	bpl.n	8006368 <_printf_float+0x15c>
 8006364:	3301      	adds	r3, #1
 8006366:	6123      	str	r3, [r4, #16]
 8006368:	2323      	movs	r3, #35	; 0x23
 800636a:	aa08      	add	r2, sp, #32
 800636c:	189b      	adds	r3, r3, r2
 800636e:	781b      	ldrb	r3, [r3, #0]
 8006370:	2b00      	cmp	r3, #0
 8006372:	d09b      	beq.n	80062ac <_printf_float+0xa0>
 8006374:	0023      	movs	r3, r4
 8006376:	222d      	movs	r2, #45	; 0x2d
 8006378:	3343      	adds	r3, #67	; 0x43
 800637a:	701a      	strb	r2, [r3, #0]
 800637c:	e796      	b.n	80062ac <_printf_float+0xa0>
 800637e:	2f67      	cmp	r7, #103	; 0x67
 8006380:	d100      	bne.n	8006384 <_printf_float+0x178>
 8006382:	e176      	b.n	8006672 <_printf_float+0x466>
 8006384:	2f47      	cmp	r7, #71	; 0x47
 8006386:	d1b8      	bne.n	80062fa <_printf_float+0xee>
 8006388:	2a00      	cmp	r2, #0
 800638a:	d1b6      	bne.n	80062fa <_printf_float+0xee>
 800638c:	2201      	movs	r2, #1
 800638e:	e7b3      	b.n	80062f8 <_printf_float+0xec>
 8006390:	2f66      	cmp	r7, #102	; 0x66
 8006392:	d119      	bne.n	80063c8 <_printf_float+0x1bc>
 8006394:	6863      	ldr	r3, [r4, #4]
 8006396:	2900      	cmp	r1, #0
 8006398:	dd0c      	ble.n	80063b4 <_printf_float+0x1a8>
 800639a:	6121      	str	r1, [r4, #16]
 800639c:	2b00      	cmp	r3, #0
 800639e:	d102      	bne.n	80063a6 <_printf_float+0x19a>
 80063a0:	6822      	ldr	r2, [r4, #0]
 80063a2:	07d2      	lsls	r2, r2, #31
 80063a4:	d502      	bpl.n	80063ac <_printf_float+0x1a0>
 80063a6:	3301      	adds	r3, #1
 80063a8:	185b      	adds	r3, r3, r1
 80063aa:	6123      	str	r3, [r4, #16]
 80063ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80063ae:	2600      	movs	r6, #0
 80063b0:	65a3      	str	r3, [r4, #88]	; 0x58
 80063b2:	e7d9      	b.n	8006368 <_printf_float+0x15c>
 80063b4:	2b00      	cmp	r3, #0
 80063b6:	d103      	bne.n	80063c0 <_printf_float+0x1b4>
 80063b8:	2201      	movs	r2, #1
 80063ba:	6821      	ldr	r1, [r4, #0]
 80063bc:	4211      	tst	r1, r2
 80063be:	d000      	beq.n	80063c2 <_printf_float+0x1b6>
 80063c0:	1c9a      	adds	r2, r3, #2
 80063c2:	6122      	str	r2, [r4, #16]
 80063c4:	e7f2      	b.n	80063ac <_printf_float+0x1a0>
 80063c6:	2767      	movs	r7, #103	; 0x67
 80063c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80063ca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80063cc:	4293      	cmp	r3, r2
 80063ce:	db05      	blt.n	80063dc <_printf_float+0x1d0>
 80063d0:	6822      	ldr	r2, [r4, #0]
 80063d2:	6123      	str	r3, [r4, #16]
 80063d4:	07d2      	lsls	r2, r2, #31
 80063d6:	d5e9      	bpl.n	80063ac <_printf_float+0x1a0>
 80063d8:	3301      	adds	r3, #1
 80063da:	e7e6      	b.n	80063aa <_printf_float+0x19e>
 80063dc:	2101      	movs	r1, #1
 80063de:	2b00      	cmp	r3, #0
 80063e0:	dc01      	bgt.n	80063e6 <_printf_float+0x1da>
 80063e2:	1849      	adds	r1, r1, r1
 80063e4:	1ac9      	subs	r1, r1, r3
 80063e6:	1852      	adds	r2, r2, r1
 80063e8:	e7eb      	b.n	80063c2 <_printf_float+0x1b6>
 80063ea:	6822      	ldr	r2, [r4, #0]
 80063ec:	0553      	lsls	r3, r2, #21
 80063ee:	d408      	bmi.n	8006402 <_printf_float+0x1f6>
 80063f0:	6923      	ldr	r3, [r4, #16]
 80063f2:	002a      	movs	r2, r5
 80063f4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80063f6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80063f8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80063fa:	47a8      	blx	r5
 80063fc:	1c43      	adds	r3, r0, #1
 80063fe:	d129      	bne.n	8006454 <_printf_float+0x248>
 8006400:	e75f      	b.n	80062c2 <_printf_float+0xb6>
 8006402:	2f65      	cmp	r7, #101	; 0x65
 8006404:	d800      	bhi.n	8006408 <_printf_float+0x1fc>
 8006406:	e0e0      	b.n	80065ca <_printf_float+0x3be>
 8006408:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800640a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800640c:	2200      	movs	r2, #0
 800640e:	2300      	movs	r3, #0
 8006410:	f7fa f826 	bl	8000460 <__aeabi_dcmpeq>
 8006414:	2800      	cmp	r0, #0
 8006416:	d034      	beq.n	8006482 <_printf_float+0x276>
 8006418:	2301      	movs	r3, #1
 800641a:	4a42      	ldr	r2, [pc, #264]	; (8006524 <_printf_float+0x318>)
 800641c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800641e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006420:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8006422:	47a8      	blx	r5
 8006424:	1c43      	adds	r3, r0, #1
 8006426:	d100      	bne.n	800642a <_printf_float+0x21e>
 8006428:	e74b      	b.n	80062c2 <_printf_float+0xb6>
 800642a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800642c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800642e:	4293      	cmp	r3, r2
 8006430:	db02      	blt.n	8006438 <_printf_float+0x22c>
 8006432:	6823      	ldr	r3, [r4, #0]
 8006434:	07db      	lsls	r3, r3, #31
 8006436:	d50d      	bpl.n	8006454 <_printf_float+0x248>
 8006438:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800643a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800643c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800643e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006440:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006442:	47a8      	blx	r5
 8006444:	2500      	movs	r5, #0
 8006446:	1c43      	adds	r3, r0, #1
 8006448:	d100      	bne.n	800644c <_printf_float+0x240>
 800644a:	e73a      	b.n	80062c2 <_printf_float+0xb6>
 800644c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800644e:	3b01      	subs	r3, #1
 8006450:	42ab      	cmp	r3, r5
 8006452:	dc0a      	bgt.n	800646a <_printf_float+0x25e>
 8006454:	6823      	ldr	r3, [r4, #0]
 8006456:	079b      	lsls	r3, r3, #30
 8006458:	d500      	bpl.n	800645c <_printf_float+0x250>
 800645a:	e108      	b.n	800666e <_printf_float+0x462>
 800645c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800645e:	68e0      	ldr	r0, [r4, #12]
 8006460:	4298      	cmp	r0, r3
 8006462:	db00      	blt.n	8006466 <_printf_float+0x25a>
 8006464:	e72f      	b.n	80062c6 <_printf_float+0xba>
 8006466:	0018      	movs	r0, r3
 8006468:	e72d      	b.n	80062c6 <_printf_float+0xba>
 800646a:	0022      	movs	r2, r4
 800646c:	2301      	movs	r3, #1
 800646e:	321a      	adds	r2, #26
 8006470:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006472:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006474:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006476:	47b0      	blx	r6
 8006478:	1c43      	adds	r3, r0, #1
 800647a:	d100      	bne.n	800647e <_printf_float+0x272>
 800647c:	e721      	b.n	80062c2 <_printf_float+0xb6>
 800647e:	3501      	adds	r5, #1
 8006480:	e7e4      	b.n	800644c <_printf_float+0x240>
 8006482:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006484:	2b00      	cmp	r3, #0
 8006486:	dc2d      	bgt.n	80064e4 <_printf_float+0x2d8>
 8006488:	2301      	movs	r3, #1
 800648a:	4a26      	ldr	r2, [pc, #152]	; (8006524 <_printf_float+0x318>)
 800648c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800648e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006490:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006492:	47b0      	blx	r6
 8006494:	1c43      	adds	r3, r0, #1
 8006496:	d100      	bne.n	800649a <_printf_float+0x28e>
 8006498:	e713      	b.n	80062c2 <_printf_float+0xb6>
 800649a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800649c:	2b00      	cmp	r3, #0
 800649e:	d105      	bne.n	80064ac <_printf_float+0x2a0>
 80064a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80064a2:	2b00      	cmp	r3, #0
 80064a4:	d102      	bne.n	80064ac <_printf_float+0x2a0>
 80064a6:	6823      	ldr	r3, [r4, #0]
 80064a8:	07db      	lsls	r3, r3, #31
 80064aa:	d5d3      	bpl.n	8006454 <_printf_float+0x248>
 80064ac:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80064ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80064b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80064b2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80064b4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80064b6:	47b0      	blx	r6
 80064b8:	2600      	movs	r6, #0
 80064ba:	1c43      	adds	r3, r0, #1
 80064bc:	d100      	bne.n	80064c0 <_printf_float+0x2b4>
 80064be:	e700      	b.n	80062c2 <_printf_float+0xb6>
 80064c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80064c2:	425b      	negs	r3, r3
 80064c4:	42b3      	cmp	r3, r6
 80064c6:	dc01      	bgt.n	80064cc <_printf_float+0x2c0>
 80064c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80064ca:	e792      	b.n	80063f2 <_printf_float+0x1e6>
 80064cc:	0022      	movs	r2, r4
 80064ce:	2301      	movs	r3, #1
 80064d0:	321a      	adds	r2, #26
 80064d2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80064d4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80064d6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80064d8:	47b8      	blx	r7
 80064da:	1c43      	adds	r3, r0, #1
 80064dc:	d100      	bne.n	80064e0 <_printf_float+0x2d4>
 80064de:	e6f0      	b.n	80062c2 <_printf_float+0xb6>
 80064e0:	3601      	adds	r6, #1
 80064e2:	e7ed      	b.n	80064c0 <_printf_float+0x2b4>
 80064e4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80064e6:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80064e8:	429f      	cmp	r7, r3
 80064ea:	dd00      	ble.n	80064ee <_printf_float+0x2e2>
 80064ec:	001f      	movs	r7, r3
 80064ee:	2f00      	cmp	r7, #0
 80064f0:	dd08      	ble.n	8006504 <_printf_float+0x2f8>
 80064f2:	003b      	movs	r3, r7
 80064f4:	002a      	movs	r2, r5
 80064f6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80064f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80064fa:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80064fc:	47b0      	blx	r6
 80064fe:	1c43      	adds	r3, r0, #1
 8006500:	d100      	bne.n	8006504 <_printf_float+0x2f8>
 8006502:	e6de      	b.n	80062c2 <_printf_float+0xb6>
 8006504:	2300      	movs	r3, #0
 8006506:	930d      	str	r3, [sp, #52]	; 0x34
 8006508:	43fb      	mvns	r3, r7
 800650a:	17db      	asrs	r3, r3, #31
 800650c:	930f      	str	r3, [sp, #60]	; 0x3c
 800650e:	e018      	b.n	8006542 <_printf_float+0x336>
 8006510:	7fefffff 	.word	0x7fefffff
 8006514:	0800bd78 	.word	0x0800bd78
 8006518:	0800bd74 	.word	0x0800bd74
 800651c:	0800bd80 	.word	0x0800bd80
 8006520:	0800bd7c 	.word	0x0800bd7c
 8006524:	0800c304 	.word	0x0800c304
 8006528:	0022      	movs	r2, r4
 800652a:	2301      	movs	r3, #1
 800652c:	321a      	adds	r2, #26
 800652e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006530:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006532:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006534:	47b0      	blx	r6
 8006536:	1c43      	adds	r3, r0, #1
 8006538:	d100      	bne.n	800653c <_printf_float+0x330>
 800653a:	e6c2      	b.n	80062c2 <_printf_float+0xb6>
 800653c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800653e:	3301      	adds	r3, #1
 8006540:	930d      	str	r3, [sp, #52]	; 0x34
 8006542:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006544:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8006546:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006548:	403b      	ands	r3, r7
 800654a:	1af3      	subs	r3, r6, r3
 800654c:	4293      	cmp	r3, r2
 800654e:	dceb      	bgt.n	8006528 <_printf_float+0x31c>
 8006550:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006552:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006554:	19ad      	adds	r5, r5, r6
 8006556:	4293      	cmp	r3, r2
 8006558:	db10      	blt.n	800657c <_printf_float+0x370>
 800655a:	6823      	ldr	r3, [r4, #0]
 800655c:	07db      	lsls	r3, r3, #31
 800655e:	d40d      	bmi.n	800657c <_printf_float+0x370>
 8006560:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8006562:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006564:	1bbe      	subs	r6, r7, r6
 8006566:	1aff      	subs	r7, r7, r3
 8006568:	42b7      	cmp	r7, r6
 800656a:	dd00      	ble.n	800656e <_printf_float+0x362>
 800656c:	0037      	movs	r7, r6
 800656e:	2f00      	cmp	r7, #0
 8006570:	dc0d      	bgt.n	800658e <_printf_float+0x382>
 8006572:	43fe      	mvns	r6, r7
 8006574:	17f3      	asrs	r3, r6, #31
 8006576:	2500      	movs	r5, #0
 8006578:	930c      	str	r3, [sp, #48]	; 0x30
 800657a:	e01c      	b.n	80065b6 <_printf_float+0x3aa>
 800657c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800657e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006580:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006582:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006584:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8006586:	47b8      	blx	r7
 8006588:	1c43      	adds	r3, r0, #1
 800658a:	d1e9      	bne.n	8006560 <_printf_float+0x354>
 800658c:	e699      	b.n	80062c2 <_printf_float+0xb6>
 800658e:	003b      	movs	r3, r7
 8006590:	002a      	movs	r2, r5
 8006592:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006594:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006596:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8006598:	47a8      	blx	r5
 800659a:	1c43      	adds	r3, r0, #1
 800659c:	d1e9      	bne.n	8006572 <_printf_float+0x366>
 800659e:	e690      	b.n	80062c2 <_printf_float+0xb6>
 80065a0:	0022      	movs	r2, r4
 80065a2:	2301      	movs	r3, #1
 80065a4:	321a      	adds	r2, #26
 80065a6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80065a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80065aa:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80065ac:	47b0      	blx	r6
 80065ae:	1c43      	adds	r3, r0, #1
 80065b0:	d100      	bne.n	80065b4 <_printf_float+0x3a8>
 80065b2:	e686      	b.n	80062c2 <_printf_float+0xb6>
 80065b4:	3501      	adds	r5, #1
 80065b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80065b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80065ba:	990c      	ldr	r1, [sp, #48]	; 0x30
 80065bc:	1a9b      	subs	r3, r3, r2
 80065be:	003a      	movs	r2, r7
 80065c0:	400a      	ands	r2, r1
 80065c2:	1a9b      	subs	r3, r3, r2
 80065c4:	42ab      	cmp	r3, r5
 80065c6:	dceb      	bgt.n	80065a0 <_printf_float+0x394>
 80065c8:	e744      	b.n	8006454 <_printf_float+0x248>
 80065ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80065cc:	2b01      	cmp	r3, #1
 80065ce:	dc02      	bgt.n	80065d6 <_printf_float+0x3ca>
 80065d0:	2301      	movs	r3, #1
 80065d2:	421a      	tst	r2, r3
 80065d4:	d032      	beq.n	800663c <_printf_float+0x430>
 80065d6:	2301      	movs	r3, #1
 80065d8:	002a      	movs	r2, r5
 80065da:	990a      	ldr	r1, [sp, #40]	; 0x28
 80065dc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80065de:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80065e0:	47b8      	blx	r7
 80065e2:	1c43      	adds	r3, r0, #1
 80065e4:	d100      	bne.n	80065e8 <_printf_float+0x3dc>
 80065e6:	e66c      	b.n	80062c2 <_printf_float+0xb6>
 80065e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80065ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80065ec:	990a      	ldr	r1, [sp, #40]	; 0x28
 80065ee:	9809      	ldr	r0, [sp, #36]	; 0x24
 80065f0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80065f2:	3501      	adds	r5, #1
 80065f4:	47b8      	blx	r7
 80065f6:	1c43      	adds	r3, r0, #1
 80065f8:	d100      	bne.n	80065fc <_printf_float+0x3f0>
 80065fa:	e662      	b.n	80062c2 <_printf_float+0xb6>
 80065fc:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80065fe:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8006600:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006602:	2200      	movs	r2, #0
 8006604:	1e5f      	subs	r7, r3, #1
 8006606:	2300      	movs	r3, #0
 8006608:	f7f9 ff2a 	bl	8000460 <__aeabi_dcmpeq>
 800660c:	003b      	movs	r3, r7
 800660e:	2800      	cmp	r0, #0
 8006610:	d014      	beq.n	800663c <_printf_float+0x430>
 8006612:	2500      	movs	r5, #0
 8006614:	e00a      	b.n	800662c <_printf_float+0x420>
 8006616:	0022      	movs	r2, r4
 8006618:	2301      	movs	r3, #1
 800661a:	321a      	adds	r2, #26
 800661c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800661e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006620:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8006622:	47b8      	blx	r7
 8006624:	1c43      	adds	r3, r0, #1
 8006626:	d100      	bne.n	800662a <_printf_float+0x41e>
 8006628:	e64b      	b.n	80062c2 <_printf_float+0xb6>
 800662a:	3501      	adds	r5, #1
 800662c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800662e:	3b01      	subs	r3, #1
 8006630:	42ab      	cmp	r3, r5
 8006632:	dcf0      	bgt.n	8006616 <_printf_float+0x40a>
 8006634:	0022      	movs	r2, r4
 8006636:	0033      	movs	r3, r6
 8006638:	3250      	adds	r2, #80	; 0x50
 800663a:	e6db      	b.n	80063f4 <_printf_float+0x1e8>
 800663c:	002a      	movs	r2, r5
 800663e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006640:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006642:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8006644:	47a8      	blx	r5
 8006646:	1c43      	adds	r3, r0, #1
 8006648:	d1f4      	bne.n	8006634 <_printf_float+0x428>
 800664a:	e63a      	b.n	80062c2 <_printf_float+0xb6>
 800664c:	0022      	movs	r2, r4
 800664e:	2301      	movs	r3, #1
 8006650:	3219      	adds	r2, #25
 8006652:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006654:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006656:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006658:	47b0      	blx	r6
 800665a:	1c43      	adds	r3, r0, #1
 800665c:	d100      	bne.n	8006660 <_printf_float+0x454>
 800665e:	e630      	b.n	80062c2 <_printf_float+0xb6>
 8006660:	3501      	adds	r5, #1
 8006662:	68e3      	ldr	r3, [r4, #12]
 8006664:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8006666:	1a9b      	subs	r3, r3, r2
 8006668:	42ab      	cmp	r3, r5
 800666a:	dcef      	bgt.n	800664c <_printf_float+0x440>
 800666c:	e6f6      	b.n	800645c <_printf_float+0x250>
 800666e:	2500      	movs	r5, #0
 8006670:	e7f7      	b.n	8006662 <_printf_float+0x456>
 8006672:	2a00      	cmp	r2, #0
 8006674:	d100      	bne.n	8006678 <_printf_float+0x46c>
 8006676:	e689      	b.n	800638c <_printf_float+0x180>
 8006678:	2100      	movs	r1, #0
 800667a:	9106      	str	r1, [sp, #24]
 800667c:	a912      	add	r1, sp, #72	; 0x48
 800667e:	9105      	str	r1, [sp, #20]
 8006680:	a911      	add	r1, sp, #68	; 0x44
 8006682:	9103      	str	r1, [sp, #12]
 8006684:	2123      	movs	r1, #35	; 0x23
 8006686:	a808      	add	r0, sp, #32
 8006688:	1809      	adds	r1, r1, r0
 800668a:	6023      	str	r3, [r4, #0]
 800668c:	9301      	str	r3, [sp, #4]
 800668e:	9200      	str	r2, [sp, #0]
 8006690:	002b      	movs	r3, r5
 8006692:	9704      	str	r7, [sp, #16]
 8006694:	9102      	str	r1, [sp, #8]
 8006696:	0032      	movs	r2, r6
 8006698:	9809      	ldr	r0, [sp, #36]	; 0x24
 800669a:	f7ff fd1b 	bl	80060d4 <__cvt>
 800669e:	0005      	movs	r5, r0
 80066a0:	e645      	b.n	800632e <_printf_float+0x122>
 80066a2:	46c0      	nop			; (mov r8, r8)

080066a4 <_printf_common>:
 80066a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80066a6:	0015      	movs	r5, r2
 80066a8:	9301      	str	r3, [sp, #4]
 80066aa:	688a      	ldr	r2, [r1, #8]
 80066ac:	690b      	ldr	r3, [r1, #16]
 80066ae:	9000      	str	r0, [sp, #0]
 80066b0:	000c      	movs	r4, r1
 80066b2:	4293      	cmp	r3, r2
 80066b4:	da00      	bge.n	80066b8 <_printf_common+0x14>
 80066b6:	0013      	movs	r3, r2
 80066b8:	0022      	movs	r2, r4
 80066ba:	602b      	str	r3, [r5, #0]
 80066bc:	3243      	adds	r2, #67	; 0x43
 80066be:	7812      	ldrb	r2, [r2, #0]
 80066c0:	2a00      	cmp	r2, #0
 80066c2:	d001      	beq.n	80066c8 <_printf_common+0x24>
 80066c4:	3301      	adds	r3, #1
 80066c6:	602b      	str	r3, [r5, #0]
 80066c8:	6823      	ldr	r3, [r4, #0]
 80066ca:	069b      	lsls	r3, r3, #26
 80066cc:	d502      	bpl.n	80066d4 <_printf_common+0x30>
 80066ce:	682b      	ldr	r3, [r5, #0]
 80066d0:	3302      	adds	r3, #2
 80066d2:	602b      	str	r3, [r5, #0]
 80066d4:	2706      	movs	r7, #6
 80066d6:	6823      	ldr	r3, [r4, #0]
 80066d8:	401f      	ands	r7, r3
 80066da:	d027      	beq.n	800672c <_printf_common+0x88>
 80066dc:	0023      	movs	r3, r4
 80066de:	3343      	adds	r3, #67	; 0x43
 80066e0:	781b      	ldrb	r3, [r3, #0]
 80066e2:	1e5a      	subs	r2, r3, #1
 80066e4:	4193      	sbcs	r3, r2
 80066e6:	6822      	ldr	r2, [r4, #0]
 80066e8:	0692      	lsls	r2, r2, #26
 80066ea:	d430      	bmi.n	800674e <_printf_common+0xaa>
 80066ec:	0022      	movs	r2, r4
 80066ee:	9901      	ldr	r1, [sp, #4]
 80066f0:	3243      	adds	r2, #67	; 0x43
 80066f2:	9800      	ldr	r0, [sp, #0]
 80066f4:	9e08      	ldr	r6, [sp, #32]
 80066f6:	47b0      	blx	r6
 80066f8:	1c43      	adds	r3, r0, #1
 80066fa:	d025      	beq.n	8006748 <_printf_common+0xa4>
 80066fc:	2306      	movs	r3, #6
 80066fe:	6820      	ldr	r0, [r4, #0]
 8006700:	682a      	ldr	r2, [r5, #0]
 8006702:	68e1      	ldr	r1, [r4, #12]
 8006704:	4003      	ands	r3, r0
 8006706:	2500      	movs	r5, #0
 8006708:	2b04      	cmp	r3, #4
 800670a:	d103      	bne.n	8006714 <_printf_common+0x70>
 800670c:	1a8d      	subs	r5, r1, r2
 800670e:	43eb      	mvns	r3, r5
 8006710:	17db      	asrs	r3, r3, #31
 8006712:	401d      	ands	r5, r3
 8006714:	68a3      	ldr	r3, [r4, #8]
 8006716:	6922      	ldr	r2, [r4, #16]
 8006718:	4293      	cmp	r3, r2
 800671a:	dd01      	ble.n	8006720 <_printf_common+0x7c>
 800671c:	1a9b      	subs	r3, r3, r2
 800671e:	18ed      	adds	r5, r5, r3
 8006720:	2700      	movs	r7, #0
 8006722:	42bd      	cmp	r5, r7
 8006724:	d120      	bne.n	8006768 <_printf_common+0xc4>
 8006726:	2000      	movs	r0, #0
 8006728:	e010      	b.n	800674c <_printf_common+0xa8>
 800672a:	3701      	adds	r7, #1
 800672c:	68e3      	ldr	r3, [r4, #12]
 800672e:	682a      	ldr	r2, [r5, #0]
 8006730:	1a9b      	subs	r3, r3, r2
 8006732:	42bb      	cmp	r3, r7
 8006734:	ddd2      	ble.n	80066dc <_printf_common+0x38>
 8006736:	0022      	movs	r2, r4
 8006738:	2301      	movs	r3, #1
 800673a:	3219      	adds	r2, #25
 800673c:	9901      	ldr	r1, [sp, #4]
 800673e:	9800      	ldr	r0, [sp, #0]
 8006740:	9e08      	ldr	r6, [sp, #32]
 8006742:	47b0      	blx	r6
 8006744:	1c43      	adds	r3, r0, #1
 8006746:	d1f0      	bne.n	800672a <_printf_common+0x86>
 8006748:	2001      	movs	r0, #1
 800674a:	4240      	negs	r0, r0
 800674c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800674e:	2030      	movs	r0, #48	; 0x30
 8006750:	18e1      	adds	r1, r4, r3
 8006752:	3143      	adds	r1, #67	; 0x43
 8006754:	7008      	strb	r0, [r1, #0]
 8006756:	0021      	movs	r1, r4
 8006758:	1c5a      	adds	r2, r3, #1
 800675a:	3145      	adds	r1, #69	; 0x45
 800675c:	7809      	ldrb	r1, [r1, #0]
 800675e:	18a2      	adds	r2, r4, r2
 8006760:	3243      	adds	r2, #67	; 0x43
 8006762:	3302      	adds	r3, #2
 8006764:	7011      	strb	r1, [r2, #0]
 8006766:	e7c1      	b.n	80066ec <_printf_common+0x48>
 8006768:	0022      	movs	r2, r4
 800676a:	2301      	movs	r3, #1
 800676c:	321a      	adds	r2, #26
 800676e:	9901      	ldr	r1, [sp, #4]
 8006770:	9800      	ldr	r0, [sp, #0]
 8006772:	9e08      	ldr	r6, [sp, #32]
 8006774:	47b0      	blx	r6
 8006776:	1c43      	adds	r3, r0, #1
 8006778:	d0e6      	beq.n	8006748 <_printf_common+0xa4>
 800677a:	3701      	adds	r7, #1
 800677c:	e7d1      	b.n	8006722 <_printf_common+0x7e>
	...

08006780 <_printf_i>:
 8006780:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006782:	b089      	sub	sp, #36	; 0x24
 8006784:	9204      	str	r2, [sp, #16]
 8006786:	000a      	movs	r2, r1
 8006788:	3243      	adds	r2, #67	; 0x43
 800678a:	9305      	str	r3, [sp, #20]
 800678c:	9003      	str	r0, [sp, #12]
 800678e:	9202      	str	r2, [sp, #8]
 8006790:	7e0a      	ldrb	r2, [r1, #24]
 8006792:	000c      	movs	r4, r1
 8006794:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006796:	2a6e      	cmp	r2, #110	; 0x6e
 8006798:	d100      	bne.n	800679c <_printf_i+0x1c>
 800679a:	e086      	b.n	80068aa <_printf_i+0x12a>
 800679c:	d81f      	bhi.n	80067de <_printf_i+0x5e>
 800679e:	2a63      	cmp	r2, #99	; 0x63
 80067a0:	d033      	beq.n	800680a <_printf_i+0x8a>
 80067a2:	d808      	bhi.n	80067b6 <_printf_i+0x36>
 80067a4:	2a00      	cmp	r2, #0
 80067a6:	d100      	bne.n	80067aa <_printf_i+0x2a>
 80067a8:	e08c      	b.n	80068c4 <_printf_i+0x144>
 80067aa:	2a58      	cmp	r2, #88	; 0x58
 80067ac:	d04d      	beq.n	800684a <_printf_i+0xca>
 80067ae:	0025      	movs	r5, r4
 80067b0:	3542      	adds	r5, #66	; 0x42
 80067b2:	702a      	strb	r2, [r5, #0]
 80067b4:	e030      	b.n	8006818 <_printf_i+0x98>
 80067b6:	2a64      	cmp	r2, #100	; 0x64
 80067b8:	d001      	beq.n	80067be <_printf_i+0x3e>
 80067ba:	2a69      	cmp	r2, #105	; 0x69
 80067bc:	d1f7      	bne.n	80067ae <_printf_i+0x2e>
 80067be:	6819      	ldr	r1, [r3, #0]
 80067c0:	6825      	ldr	r5, [r4, #0]
 80067c2:	1d0a      	adds	r2, r1, #4
 80067c4:	0628      	lsls	r0, r5, #24
 80067c6:	d529      	bpl.n	800681c <_printf_i+0x9c>
 80067c8:	6808      	ldr	r0, [r1, #0]
 80067ca:	601a      	str	r2, [r3, #0]
 80067cc:	2800      	cmp	r0, #0
 80067ce:	da03      	bge.n	80067d8 <_printf_i+0x58>
 80067d0:	232d      	movs	r3, #45	; 0x2d
 80067d2:	9a02      	ldr	r2, [sp, #8]
 80067d4:	4240      	negs	r0, r0
 80067d6:	7013      	strb	r3, [r2, #0]
 80067d8:	4e6b      	ldr	r6, [pc, #428]	; (8006988 <_printf_i+0x208>)
 80067da:	270a      	movs	r7, #10
 80067dc:	e04f      	b.n	800687e <_printf_i+0xfe>
 80067de:	2a73      	cmp	r2, #115	; 0x73
 80067e0:	d074      	beq.n	80068cc <_printf_i+0x14c>
 80067e2:	d808      	bhi.n	80067f6 <_printf_i+0x76>
 80067e4:	2a6f      	cmp	r2, #111	; 0x6f
 80067e6:	d01f      	beq.n	8006828 <_printf_i+0xa8>
 80067e8:	2a70      	cmp	r2, #112	; 0x70
 80067ea:	d1e0      	bne.n	80067ae <_printf_i+0x2e>
 80067ec:	2220      	movs	r2, #32
 80067ee:	6809      	ldr	r1, [r1, #0]
 80067f0:	430a      	orrs	r2, r1
 80067f2:	6022      	str	r2, [r4, #0]
 80067f4:	e003      	b.n	80067fe <_printf_i+0x7e>
 80067f6:	2a75      	cmp	r2, #117	; 0x75
 80067f8:	d016      	beq.n	8006828 <_printf_i+0xa8>
 80067fa:	2a78      	cmp	r2, #120	; 0x78
 80067fc:	d1d7      	bne.n	80067ae <_printf_i+0x2e>
 80067fe:	0022      	movs	r2, r4
 8006800:	2178      	movs	r1, #120	; 0x78
 8006802:	3245      	adds	r2, #69	; 0x45
 8006804:	7011      	strb	r1, [r2, #0]
 8006806:	4e61      	ldr	r6, [pc, #388]	; (800698c <_printf_i+0x20c>)
 8006808:	e022      	b.n	8006850 <_printf_i+0xd0>
 800680a:	0025      	movs	r5, r4
 800680c:	681a      	ldr	r2, [r3, #0]
 800680e:	3542      	adds	r5, #66	; 0x42
 8006810:	1d11      	adds	r1, r2, #4
 8006812:	6019      	str	r1, [r3, #0]
 8006814:	6813      	ldr	r3, [r2, #0]
 8006816:	702b      	strb	r3, [r5, #0]
 8006818:	2301      	movs	r3, #1
 800681a:	e065      	b.n	80068e8 <_printf_i+0x168>
 800681c:	6808      	ldr	r0, [r1, #0]
 800681e:	601a      	str	r2, [r3, #0]
 8006820:	0669      	lsls	r1, r5, #25
 8006822:	d5d3      	bpl.n	80067cc <_printf_i+0x4c>
 8006824:	b200      	sxth	r0, r0
 8006826:	e7d1      	b.n	80067cc <_printf_i+0x4c>
 8006828:	6819      	ldr	r1, [r3, #0]
 800682a:	6825      	ldr	r5, [r4, #0]
 800682c:	1d08      	adds	r0, r1, #4
 800682e:	6018      	str	r0, [r3, #0]
 8006830:	6808      	ldr	r0, [r1, #0]
 8006832:	062e      	lsls	r6, r5, #24
 8006834:	d505      	bpl.n	8006842 <_printf_i+0xc2>
 8006836:	4e54      	ldr	r6, [pc, #336]	; (8006988 <_printf_i+0x208>)
 8006838:	2708      	movs	r7, #8
 800683a:	2a6f      	cmp	r2, #111	; 0x6f
 800683c:	d01b      	beq.n	8006876 <_printf_i+0xf6>
 800683e:	270a      	movs	r7, #10
 8006840:	e019      	b.n	8006876 <_printf_i+0xf6>
 8006842:	066d      	lsls	r5, r5, #25
 8006844:	d5f7      	bpl.n	8006836 <_printf_i+0xb6>
 8006846:	b280      	uxth	r0, r0
 8006848:	e7f5      	b.n	8006836 <_printf_i+0xb6>
 800684a:	3145      	adds	r1, #69	; 0x45
 800684c:	4e4e      	ldr	r6, [pc, #312]	; (8006988 <_printf_i+0x208>)
 800684e:	700a      	strb	r2, [r1, #0]
 8006850:	6818      	ldr	r0, [r3, #0]
 8006852:	6822      	ldr	r2, [r4, #0]
 8006854:	1d01      	adds	r1, r0, #4
 8006856:	6800      	ldr	r0, [r0, #0]
 8006858:	6019      	str	r1, [r3, #0]
 800685a:	0615      	lsls	r5, r2, #24
 800685c:	d521      	bpl.n	80068a2 <_printf_i+0x122>
 800685e:	07d3      	lsls	r3, r2, #31
 8006860:	d502      	bpl.n	8006868 <_printf_i+0xe8>
 8006862:	2320      	movs	r3, #32
 8006864:	431a      	orrs	r2, r3
 8006866:	6022      	str	r2, [r4, #0]
 8006868:	2710      	movs	r7, #16
 800686a:	2800      	cmp	r0, #0
 800686c:	d103      	bne.n	8006876 <_printf_i+0xf6>
 800686e:	2320      	movs	r3, #32
 8006870:	6822      	ldr	r2, [r4, #0]
 8006872:	439a      	bics	r2, r3
 8006874:	6022      	str	r2, [r4, #0]
 8006876:	0023      	movs	r3, r4
 8006878:	2200      	movs	r2, #0
 800687a:	3343      	adds	r3, #67	; 0x43
 800687c:	701a      	strb	r2, [r3, #0]
 800687e:	6863      	ldr	r3, [r4, #4]
 8006880:	60a3      	str	r3, [r4, #8]
 8006882:	2b00      	cmp	r3, #0
 8006884:	db58      	blt.n	8006938 <_printf_i+0x1b8>
 8006886:	2204      	movs	r2, #4
 8006888:	6821      	ldr	r1, [r4, #0]
 800688a:	4391      	bics	r1, r2
 800688c:	6021      	str	r1, [r4, #0]
 800688e:	2800      	cmp	r0, #0
 8006890:	d154      	bne.n	800693c <_printf_i+0x1bc>
 8006892:	9d02      	ldr	r5, [sp, #8]
 8006894:	2b00      	cmp	r3, #0
 8006896:	d05a      	beq.n	800694e <_printf_i+0x1ce>
 8006898:	0025      	movs	r5, r4
 800689a:	7833      	ldrb	r3, [r6, #0]
 800689c:	3542      	adds	r5, #66	; 0x42
 800689e:	702b      	strb	r3, [r5, #0]
 80068a0:	e055      	b.n	800694e <_printf_i+0x1ce>
 80068a2:	0655      	lsls	r5, r2, #25
 80068a4:	d5db      	bpl.n	800685e <_printf_i+0xde>
 80068a6:	b280      	uxth	r0, r0
 80068a8:	e7d9      	b.n	800685e <_printf_i+0xde>
 80068aa:	681a      	ldr	r2, [r3, #0]
 80068ac:	680d      	ldr	r5, [r1, #0]
 80068ae:	1d10      	adds	r0, r2, #4
 80068b0:	6949      	ldr	r1, [r1, #20]
 80068b2:	6018      	str	r0, [r3, #0]
 80068b4:	6813      	ldr	r3, [r2, #0]
 80068b6:	062e      	lsls	r6, r5, #24
 80068b8:	d501      	bpl.n	80068be <_printf_i+0x13e>
 80068ba:	6019      	str	r1, [r3, #0]
 80068bc:	e002      	b.n	80068c4 <_printf_i+0x144>
 80068be:	066d      	lsls	r5, r5, #25
 80068c0:	d5fb      	bpl.n	80068ba <_printf_i+0x13a>
 80068c2:	8019      	strh	r1, [r3, #0]
 80068c4:	2300      	movs	r3, #0
 80068c6:	9d02      	ldr	r5, [sp, #8]
 80068c8:	6123      	str	r3, [r4, #16]
 80068ca:	e04f      	b.n	800696c <_printf_i+0x1ec>
 80068cc:	681a      	ldr	r2, [r3, #0]
 80068ce:	1d11      	adds	r1, r2, #4
 80068d0:	6019      	str	r1, [r3, #0]
 80068d2:	6815      	ldr	r5, [r2, #0]
 80068d4:	2100      	movs	r1, #0
 80068d6:	6862      	ldr	r2, [r4, #4]
 80068d8:	0028      	movs	r0, r5
 80068da:	f002 fc97 	bl	800920c <memchr>
 80068de:	2800      	cmp	r0, #0
 80068e0:	d001      	beq.n	80068e6 <_printf_i+0x166>
 80068e2:	1b40      	subs	r0, r0, r5
 80068e4:	6060      	str	r0, [r4, #4]
 80068e6:	6863      	ldr	r3, [r4, #4]
 80068e8:	6123      	str	r3, [r4, #16]
 80068ea:	2300      	movs	r3, #0
 80068ec:	9a02      	ldr	r2, [sp, #8]
 80068ee:	7013      	strb	r3, [r2, #0]
 80068f0:	e03c      	b.n	800696c <_printf_i+0x1ec>
 80068f2:	6923      	ldr	r3, [r4, #16]
 80068f4:	002a      	movs	r2, r5
 80068f6:	9904      	ldr	r1, [sp, #16]
 80068f8:	9803      	ldr	r0, [sp, #12]
 80068fa:	9d05      	ldr	r5, [sp, #20]
 80068fc:	47a8      	blx	r5
 80068fe:	1c43      	adds	r3, r0, #1
 8006900:	d03e      	beq.n	8006980 <_printf_i+0x200>
 8006902:	6823      	ldr	r3, [r4, #0]
 8006904:	079b      	lsls	r3, r3, #30
 8006906:	d415      	bmi.n	8006934 <_printf_i+0x1b4>
 8006908:	9b07      	ldr	r3, [sp, #28]
 800690a:	68e0      	ldr	r0, [r4, #12]
 800690c:	4298      	cmp	r0, r3
 800690e:	da39      	bge.n	8006984 <_printf_i+0x204>
 8006910:	0018      	movs	r0, r3
 8006912:	e037      	b.n	8006984 <_printf_i+0x204>
 8006914:	0022      	movs	r2, r4
 8006916:	2301      	movs	r3, #1
 8006918:	3219      	adds	r2, #25
 800691a:	9904      	ldr	r1, [sp, #16]
 800691c:	9803      	ldr	r0, [sp, #12]
 800691e:	9e05      	ldr	r6, [sp, #20]
 8006920:	47b0      	blx	r6
 8006922:	1c43      	adds	r3, r0, #1
 8006924:	d02c      	beq.n	8006980 <_printf_i+0x200>
 8006926:	3501      	adds	r5, #1
 8006928:	68e3      	ldr	r3, [r4, #12]
 800692a:	9a07      	ldr	r2, [sp, #28]
 800692c:	1a9b      	subs	r3, r3, r2
 800692e:	42ab      	cmp	r3, r5
 8006930:	dcf0      	bgt.n	8006914 <_printf_i+0x194>
 8006932:	e7e9      	b.n	8006908 <_printf_i+0x188>
 8006934:	2500      	movs	r5, #0
 8006936:	e7f7      	b.n	8006928 <_printf_i+0x1a8>
 8006938:	2800      	cmp	r0, #0
 800693a:	d0ad      	beq.n	8006898 <_printf_i+0x118>
 800693c:	9d02      	ldr	r5, [sp, #8]
 800693e:	0039      	movs	r1, r7
 8006940:	f7f9 fc8e 	bl	8000260 <__aeabi_uidivmod>
 8006944:	5c73      	ldrb	r3, [r6, r1]
 8006946:	3d01      	subs	r5, #1
 8006948:	702b      	strb	r3, [r5, #0]
 800694a:	2800      	cmp	r0, #0
 800694c:	d1f7      	bne.n	800693e <_printf_i+0x1be>
 800694e:	2f08      	cmp	r7, #8
 8006950:	d109      	bne.n	8006966 <_printf_i+0x1e6>
 8006952:	6823      	ldr	r3, [r4, #0]
 8006954:	07db      	lsls	r3, r3, #31
 8006956:	d506      	bpl.n	8006966 <_printf_i+0x1e6>
 8006958:	6863      	ldr	r3, [r4, #4]
 800695a:	6922      	ldr	r2, [r4, #16]
 800695c:	4293      	cmp	r3, r2
 800695e:	dc02      	bgt.n	8006966 <_printf_i+0x1e6>
 8006960:	2330      	movs	r3, #48	; 0x30
 8006962:	3d01      	subs	r5, #1
 8006964:	702b      	strb	r3, [r5, #0]
 8006966:	9b02      	ldr	r3, [sp, #8]
 8006968:	1b5b      	subs	r3, r3, r5
 800696a:	6123      	str	r3, [r4, #16]
 800696c:	9b05      	ldr	r3, [sp, #20]
 800696e:	aa07      	add	r2, sp, #28
 8006970:	9300      	str	r3, [sp, #0]
 8006972:	0021      	movs	r1, r4
 8006974:	9b04      	ldr	r3, [sp, #16]
 8006976:	9803      	ldr	r0, [sp, #12]
 8006978:	f7ff fe94 	bl	80066a4 <_printf_common>
 800697c:	1c43      	adds	r3, r0, #1
 800697e:	d1b8      	bne.n	80068f2 <_printf_i+0x172>
 8006980:	2001      	movs	r0, #1
 8006982:	4240      	negs	r0, r0
 8006984:	b009      	add	sp, #36	; 0x24
 8006986:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006988:	0800bd84 	.word	0x0800bd84
 800698c:	0800bd95 	.word	0x0800bd95

08006990 <iprintf>:
 8006990:	b40f      	push	{r0, r1, r2, r3}
 8006992:	4b0b      	ldr	r3, [pc, #44]	; (80069c0 <iprintf+0x30>)
 8006994:	b513      	push	{r0, r1, r4, lr}
 8006996:	681c      	ldr	r4, [r3, #0]
 8006998:	2c00      	cmp	r4, #0
 800699a:	d005      	beq.n	80069a8 <iprintf+0x18>
 800699c:	69a3      	ldr	r3, [r4, #24]
 800699e:	2b00      	cmp	r3, #0
 80069a0:	d102      	bne.n	80069a8 <iprintf+0x18>
 80069a2:	0020      	movs	r0, r4
 80069a4:	f002 f9d8 	bl	8008d58 <__sinit>
 80069a8:	ab05      	add	r3, sp, #20
 80069aa:	9a04      	ldr	r2, [sp, #16]
 80069ac:	68a1      	ldr	r1, [r4, #8]
 80069ae:	0020      	movs	r0, r4
 80069b0:	9301      	str	r3, [sp, #4]
 80069b2:	f003 f8bd 	bl	8009b30 <_vfiprintf_r>
 80069b6:	bc16      	pop	{r1, r2, r4}
 80069b8:	bc08      	pop	{r3}
 80069ba:	b004      	add	sp, #16
 80069bc:	4718      	bx	r3
 80069be:	46c0      	nop			; (mov r8, r8)
 80069c0:	2000001c 	.word	0x2000001c

080069c4 <_puts_r>:
 80069c4:	b570      	push	{r4, r5, r6, lr}
 80069c6:	0005      	movs	r5, r0
 80069c8:	000e      	movs	r6, r1
 80069ca:	2800      	cmp	r0, #0
 80069cc:	d004      	beq.n	80069d8 <_puts_r+0x14>
 80069ce:	6983      	ldr	r3, [r0, #24]
 80069d0:	2b00      	cmp	r3, #0
 80069d2:	d101      	bne.n	80069d8 <_puts_r+0x14>
 80069d4:	f002 f9c0 	bl	8008d58 <__sinit>
 80069d8:	69ab      	ldr	r3, [r5, #24]
 80069da:	68ac      	ldr	r4, [r5, #8]
 80069dc:	2b00      	cmp	r3, #0
 80069de:	d102      	bne.n	80069e6 <_puts_r+0x22>
 80069e0:	0028      	movs	r0, r5
 80069e2:	f002 f9b9 	bl	8008d58 <__sinit>
 80069e6:	4b24      	ldr	r3, [pc, #144]	; (8006a78 <_puts_r+0xb4>)
 80069e8:	429c      	cmp	r4, r3
 80069ea:	d10f      	bne.n	8006a0c <_puts_r+0x48>
 80069ec:	686c      	ldr	r4, [r5, #4]
 80069ee:	89a3      	ldrh	r3, [r4, #12]
 80069f0:	071b      	lsls	r3, r3, #28
 80069f2:	d502      	bpl.n	80069fa <_puts_r+0x36>
 80069f4:	6923      	ldr	r3, [r4, #16]
 80069f6:	2b00      	cmp	r3, #0
 80069f8:	d11f      	bne.n	8006a3a <_puts_r+0x76>
 80069fa:	0021      	movs	r1, r4
 80069fc:	0028      	movs	r0, r5
 80069fe:	f001 f9d3 	bl	8007da8 <__swsetup_r>
 8006a02:	2800      	cmp	r0, #0
 8006a04:	d019      	beq.n	8006a3a <_puts_r+0x76>
 8006a06:	2001      	movs	r0, #1
 8006a08:	4240      	negs	r0, r0
 8006a0a:	bd70      	pop	{r4, r5, r6, pc}
 8006a0c:	4b1b      	ldr	r3, [pc, #108]	; (8006a7c <_puts_r+0xb8>)
 8006a0e:	429c      	cmp	r4, r3
 8006a10:	d101      	bne.n	8006a16 <_puts_r+0x52>
 8006a12:	68ac      	ldr	r4, [r5, #8]
 8006a14:	e7eb      	b.n	80069ee <_puts_r+0x2a>
 8006a16:	4b1a      	ldr	r3, [pc, #104]	; (8006a80 <_puts_r+0xbc>)
 8006a18:	429c      	cmp	r4, r3
 8006a1a:	d1e8      	bne.n	80069ee <_puts_r+0x2a>
 8006a1c:	68ec      	ldr	r4, [r5, #12]
 8006a1e:	e7e6      	b.n	80069ee <_puts_r+0x2a>
 8006a20:	3601      	adds	r6, #1
 8006a22:	60a3      	str	r3, [r4, #8]
 8006a24:	2b00      	cmp	r3, #0
 8006a26:	da04      	bge.n	8006a32 <_puts_r+0x6e>
 8006a28:	69a2      	ldr	r2, [r4, #24]
 8006a2a:	429a      	cmp	r2, r3
 8006a2c:	dc16      	bgt.n	8006a5c <_puts_r+0x98>
 8006a2e:	290a      	cmp	r1, #10
 8006a30:	d014      	beq.n	8006a5c <_puts_r+0x98>
 8006a32:	6823      	ldr	r3, [r4, #0]
 8006a34:	1c5a      	adds	r2, r3, #1
 8006a36:	6022      	str	r2, [r4, #0]
 8006a38:	7019      	strb	r1, [r3, #0]
 8006a3a:	68a3      	ldr	r3, [r4, #8]
 8006a3c:	7831      	ldrb	r1, [r6, #0]
 8006a3e:	3b01      	subs	r3, #1
 8006a40:	2900      	cmp	r1, #0
 8006a42:	d1ed      	bne.n	8006a20 <_puts_r+0x5c>
 8006a44:	60a3      	str	r3, [r4, #8]
 8006a46:	2b00      	cmp	r3, #0
 8006a48:	da0f      	bge.n	8006a6a <_puts_r+0xa6>
 8006a4a:	0022      	movs	r2, r4
 8006a4c:	310a      	adds	r1, #10
 8006a4e:	0028      	movs	r0, r5
 8006a50:	f001 f954 	bl	8007cfc <__swbuf_r>
 8006a54:	1c43      	adds	r3, r0, #1
 8006a56:	d0d6      	beq.n	8006a06 <_puts_r+0x42>
 8006a58:	200a      	movs	r0, #10
 8006a5a:	e7d6      	b.n	8006a0a <_puts_r+0x46>
 8006a5c:	0022      	movs	r2, r4
 8006a5e:	0028      	movs	r0, r5
 8006a60:	f001 f94c 	bl	8007cfc <__swbuf_r>
 8006a64:	1c43      	adds	r3, r0, #1
 8006a66:	d1e8      	bne.n	8006a3a <_puts_r+0x76>
 8006a68:	e7cd      	b.n	8006a06 <_puts_r+0x42>
 8006a6a:	200a      	movs	r0, #10
 8006a6c:	6823      	ldr	r3, [r4, #0]
 8006a6e:	1c5a      	adds	r2, r3, #1
 8006a70:	6022      	str	r2, [r4, #0]
 8006a72:	7018      	strb	r0, [r3, #0]
 8006a74:	e7c9      	b.n	8006a0a <_puts_r+0x46>
 8006a76:	46c0      	nop			; (mov r8, r8)
 8006a78:	0800c090 	.word	0x0800c090
 8006a7c:	0800c0b0 	.word	0x0800c0b0
 8006a80:	0800c070 	.word	0x0800c070

08006a84 <puts>:
 8006a84:	b510      	push	{r4, lr}
 8006a86:	4b03      	ldr	r3, [pc, #12]	; (8006a94 <puts+0x10>)
 8006a88:	0001      	movs	r1, r0
 8006a8a:	6818      	ldr	r0, [r3, #0]
 8006a8c:	f7ff ff9a 	bl	80069c4 <_puts_r>
 8006a90:	bd10      	pop	{r4, pc}
 8006a92:	46c0      	nop			; (mov r8, r8)
 8006a94:	2000001c 	.word	0x2000001c

08006a98 <_sbrk_r>:
 8006a98:	2300      	movs	r3, #0
 8006a9a:	b570      	push	{r4, r5, r6, lr}
 8006a9c:	4c06      	ldr	r4, [pc, #24]	; (8006ab8 <_sbrk_r+0x20>)
 8006a9e:	0005      	movs	r5, r0
 8006aa0:	0008      	movs	r0, r1
 8006aa2:	6023      	str	r3, [r4, #0]
 8006aa4:	f7ff f8c4 	bl	8005c30 <_sbrk>
 8006aa8:	1c43      	adds	r3, r0, #1
 8006aaa:	d103      	bne.n	8006ab4 <_sbrk_r+0x1c>
 8006aac:	6823      	ldr	r3, [r4, #0]
 8006aae:	2b00      	cmp	r3, #0
 8006ab0:	d000      	beq.n	8006ab4 <_sbrk_r+0x1c>
 8006ab2:	602b      	str	r3, [r5, #0]
 8006ab4:	bd70      	pop	{r4, r5, r6, pc}
 8006ab6:	46c0      	nop			; (mov r8, r8)
 8006ab8:	20000500 	.word	0x20000500

08006abc <siprintf>:
 8006abc:	b40e      	push	{r1, r2, r3}
 8006abe:	b500      	push	{lr}
 8006ac0:	490b      	ldr	r1, [pc, #44]	; (8006af0 <siprintf+0x34>)
 8006ac2:	b09c      	sub	sp, #112	; 0x70
 8006ac4:	ab1d      	add	r3, sp, #116	; 0x74
 8006ac6:	9002      	str	r0, [sp, #8]
 8006ac8:	9006      	str	r0, [sp, #24]
 8006aca:	9107      	str	r1, [sp, #28]
 8006acc:	9104      	str	r1, [sp, #16]
 8006ace:	4809      	ldr	r0, [pc, #36]	; (8006af4 <siprintf+0x38>)
 8006ad0:	4909      	ldr	r1, [pc, #36]	; (8006af8 <siprintf+0x3c>)
 8006ad2:	cb04      	ldmia	r3!, {r2}
 8006ad4:	9105      	str	r1, [sp, #20]
 8006ad6:	6800      	ldr	r0, [r0, #0]
 8006ad8:	a902      	add	r1, sp, #8
 8006ada:	9301      	str	r3, [sp, #4]
 8006adc:	f002 ff02 	bl	80098e4 <_svfiprintf_r>
 8006ae0:	2300      	movs	r3, #0
 8006ae2:	9a02      	ldr	r2, [sp, #8]
 8006ae4:	7013      	strb	r3, [r2, #0]
 8006ae6:	b01c      	add	sp, #112	; 0x70
 8006ae8:	bc08      	pop	{r3}
 8006aea:	b003      	add	sp, #12
 8006aec:	4718      	bx	r3
 8006aee:	46c0      	nop			; (mov r8, r8)
 8006af0:	7fffffff 	.word	0x7fffffff
 8006af4:	2000001c 	.word	0x2000001c
 8006af8:	ffff0208 	.word	0xffff0208

08006afc <strcat>:
 8006afc:	0002      	movs	r2, r0
 8006afe:	b510      	push	{r4, lr}
 8006b00:	7813      	ldrb	r3, [r2, #0]
 8006b02:	1c54      	adds	r4, r2, #1
 8006b04:	2b00      	cmp	r3, #0
 8006b06:	d105      	bne.n	8006b14 <strcat+0x18>
 8006b08:	5ccc      	ldrb	r4, [r1, r3]
 8006b0a:	54d4      	strb	r4, [r2, r3]
 8006b0c:	3301      	adds	r3, #1
 8006b0e:	2c00      	cmp	r4, #0
 8006b10:	d1fa      	bne.n	8006b08 <strcat+0xc>
 8006b12:	bd10      	pop	{r4, pc}
 8006b14:	0022      	movs	r2, r4
 8006b16:	e7f3      	b.n	8006b00 <strcat+0x4>

08006b18 <iso_year_adjust>:
 8006b18:	22fa      	movs	r2, #250	; 0xfa
 8006b1a:	6943      	ldr	r3, [r0, #20]
 8006b1c:	b570      	push	{r4, r5, r6, lr}
 8006b1e:	00d2      	lsls	r2, r2, #3
 8006b20:	17dc      	asrs	r4, r3, #31
 8006b22:	4014      	ands	r4, r2
 8006b24:	3c64      	subs	r4, #100	; 0x64
 8006b26:	191c      	adds	r4, r3, r4
 8006b28:	0005      	movs	r5, r0
 8006b2a:	07a3      	lsls	r3, r4, #30
 8006b2c:	d106      	bne.n	8006b3c <iso_year_adjust+0x24>
 8006b2e:	2164      	movs	r1, #100	; 0x64
 8006b30:	0020      	movs	r0, r4
 8006b32:	f7f9 fc7f 	bl	8000434 <__aeabi_idivmod>
 8006b36:	2301      	movs	r3, #1
 8006b38:	2900      	cmp	r1, #0
 8006b3a:	d106      	bne.n	8006b4a <iso_year_adjust+0x32>
 8006b3c:	21c8      	movs	r1, #200	; 0xc8
 8006b3e:	0020      	movs	r0, r4
 8006b40:	0049      	lsls	r1, r1, #1
 8006b42:	f7f9 fc77 	bl	8000434 <__aeabi_idivmod>
 8006b46:	424b      	negs	r3, r1
 8006b48:	414b      	adcs	r3, r1
 8006b4a:	69ea      	ldr	r2, [r5, #28]
 8006b4c:	0111      	lsls	r1, r2, #4
 8006b4e:	69aa      	ldr	r2, [r5, #24]
 8006b50:	0052      	lsls	r2, r2, #1
 8006b52:	1889      	adds	r1, r1, r2
 8006b54:	18c9      	adds	r1, r1, r3
 8006b56:	2921      	cmp	r1, #33	; 0x21
 8006b58:	dc0f      	bgt.n	8006b7a <iso_year_adjust+0x62>
 8006b5a:	2920      	cmp	r1, #32
 8006b5c:	da27      	bge.n	8006bae <iso_year_adjust+0x96>
 8006b5e:	290d      	cmp	r1, #13
 8006b60:	dc05      	bgt.n	8006b6e <iso_year_adjust+0x56>
 8006b62:	290a      	cmp	r1, #10
 8006b64:	da23      	bge.n	8006bae <iso_year_adjust+0x96>
 8006b66:	2901      	cmp	r1, #1
 8006b68:	d921      	bls.n	8006bae <iso_year_adjust+0x96>
 8006b6a:	2000      	movs	r0, #0
 8006b6c:	e014      	b.n	8006b98 <iso_year_adjust+0x80>
 8006b6e:	2910      	cmp	r1, #16
 8006b70:	dbfb      	blt.n	8006b6a <iso_year_adjust+0x52>
 8006b72:	2911      	cmp	r1, #17
 8006b74:	dd1b      	ble.n	8006bae <iso_year_adjust+0x96>
 8006b76:	391c      	subs	r1, #28
 8006b78:	e7f5      	b.n	8006b66 <iso_year_adjust+0x4e>
 8006b7a:	4b0e      	ldr	r3, [pc, #56]	; (8006bb4 <iso_year_adjust+0x9c>)
 8006b7c:	4299      	cmp	r1, r3
 8006b7e:	dc0c      	bgt.n	8006b9a <iso_year_adjust+0x82>
 8006b80:	4b0d      	ldr	r3, [pc, #52]	; (8006bb8 <iso_year_adjust+0xa0>)
 8006b82:	4299      	cmp	r1, r3
 8006b84:	da07      	bge.n	8006b96 <iso_year_adjust+0x7e>
 8006b86:	4b0d      	ldr	r3, [pc, #52]	; (8006bbc <iso_year_adjust+0xa4>)
 8006b88:	4299      	cmp	r1, r3
 8006b8a:	d004      	beq.n	8006b96 <iso_year_adjust+0x7e>
 8006b8c:	dbed      	blt.n	8006b6a <iso_year_adjust+0x52>
 8006b8e:	4b0c      	ldr	r3, [pc, #48]	; (8006bc0 <iso_year_adjust+0xa8>)
 8006b90:	18c9      	adds	r1, r1, r3
 8006b92:	2902      	cmp	r1, #2
 8006b94:	d8e9      	bhi.n	8006b6a <iso_year_adjust+0x52>
 8006b96:	2001      	movs	r0, #1
 8006b98:	bd70      	pop	{r4, r5, r6, pc}
 8006b9a:	4b0a      	ldr	r3, [pc, #40]	; (8006bc4 <iso_year_adjust+0xac>)
 8006b9c:	4299      	cmp	r1, r3
 8006b9e:	d0fa      	beq.n	8006b96 <iso_year_adjust+0x7e>
 8006ba0:	4b09      	ldr	r3, [pc, #36]	; (8006bc8 <iso_year_adjust+0xb0>)
 8006ba2:	4299      	cmp	r1, r3
 8006ba4:	d0f7      	beq.n	8006b96 <iso_year_adjust+0x7e>
 8006ba6:	4b09      	ldr	r3, [pc, #36]	; (8006bcc <iso_year_adjust+0xb4>)
 8006ba8:	4299      	cmp	r1, r3
 8006baa:	d1de      	bne.n	8006b6a <iso_year_adjust+0x52>
 8006bac:	e7f3      	b.n	8006b96 <iso_year_adjust+0x7e>
 8006bae:	2001      	movs	r0, #1
 8006bb0:	4240      	negs	r0, r0
 8006bb2:	e7f1      	b.n	8006b98 <iso_year_adjust+0x80>
 8006bb4:	000016c6 	.word	0x000016c6
 8006bb8:	000016c2 	.word	0x000016c2
 8006bbc:	000016a2 	.word	0x000016a2
 8006bc0:	ffffe94e 	.word	0xffffe94e
 8006bc4:	000016d5 	.word	0x000016d5
 8006bc8:	000016d7 	.word	0x000016d7
 8006bcc:	000016d3 	.word	0x000016d3

08006bd0 <__strftime>:
 8006bd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006bd2:	001e      	movs	r6, r3
 8006bd4:	2300      	movs	r3, #0
 8006bd6:	000d      	movs	r5, r1
 8006bd8:	001f      	movs	r7, r3
 8006bda:	b0ab      	sub	sp, #172	; 0xac
 8006bdc:	9003      	str	r0, [sp, #12]
 8006bde:	9308      	str	r3, [sp, #32]
 8006be0:	7813      	ldrb	r3, [r2, #0]
 8006be2:	2b00      	cmp	r3, #0
 8006be4:	d101      	bne.n	8006bea <__strftime+0x1a>
 8006be6:	f000 fcb6 	bl	8007556 <__strftime+0x986>
 8006bea:	2b25      	cmp	r3, #37	; 0x25
 8006bec:	d17f      	bne.n	8006cee <__strftime+0x11e>
 8006bee:	7853      	ldrb	r3, [r2, #1]
 8006bf0:	9304      	str	r3, [sp, #16]
 8006bf2:	2b30      	cmp	r3, #48	; 0x30
 8006bf4:	d100      	bne.n	8006bf8 <__strftime+0x28>
 8006bf6:	e085      	b.n	8006d04 <__strftime+0x134>
 8006bf8:	2b2b      	cmp	r3, #43	; 0x2b
 8006bfa:	d100      	bne.n	8006bfe <__strftime+0x2e>
 8006bfc:	e082      	b.n	8006d04 <__strftime+0x134>
 8006bfe:	1c53      	adds	r3, r2, #1
 8006c00:	9307      	str	r3, [sp, #28]
 8006c02:	2300      	movs	r3, #0
 8006c04:	9304      	str	r3, [sp, #16]
 8006c06:	2200      	movs	r2, #0
 8006c08:	9b07      	ldr	r3, [sp, #28]
 8006c0a:	9206      	str	r2, [sp, #24]
 8006c0c:	781b      	ldrb	r3, [r3, #0]
 8006c0e:	3b31      	subs	r3, #49	; 0x31
 8006c10:	2b08      	cmp	r3, #8
 8006c12:	d807      	bhi.n	8006c24 <__strftime+0x54>
 8006c14:	320a      	adds	r2, #10
 8006c16:	a922      	add	r1, sp, #136	; 0x88
 8006c18:	9807      	ldr	r0, [sp, #28]
 8006c1a:	f000 fe09 	bl	8007830 <strtoul>
 8006c1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006c20:	9006      	str	r0, [sp, #24]
 8006c22:	9307      	str	r3, [sp, #28]
 8006c24:	9b07      	ldr	r3, [sp, #28]
 8006c26:	781b      	ldrb	r3, [r3, #0]
 8006c28:	2b45      	cmp	r3, #69	; 0x45
 8006c2a:	d16e      	bne.n	8006d0a <__strftime+0x13a>
 8006c2c:	9b07      	ldr	r3, [sp, #28]
 8006c2e:	3301      	adds	r3, #1
 8006c30:	9307      	str	r3, [sp, #28]
 8006c32:	9b07      	ldr	r3, [sp, #28]
 8006c34:	781c      	ldrb	r4, [r3, #0]
 8006c36:	0020      	movs	r0, r4
 8006c38:	3825      	subs	r0, #37	; 0x25
 8006c3a:	2855      	cmp	r0, #85	; 0x55
 8006c3c:	d85a      	bhi.n	8006cf4 <__strftime+0x124>
 8006c3e:	f7f9 fa7f 	bl	8000140 <__gnu_thumb1_case_uhi>
 8006c42:	0481      	.short	0x0481
 8006c44:	00590059 	.word	0x00590059
 8006c48:	00590059 	.word	0x00590059
 8006c4c:	00590059 	.word	0x00590059
 8006c50:	00590059 	.word	0x00590059
 8006c54:	00590059 	.word	0x00590059
 8006c58:	00590059 	.word	0x00590059
 8006c5c:	00590059 	.word	0x00590059
 8006c60:	00590059 	.word	0x00590059
 8006c64:	00590059 	.word	0x00590059
 8006c68:	00590059 	.word	0x00590059
 8006c6c:	00590059 	.word	0x00590059
 8006c70:	00590059 	.word	0x00590059
 8006c74:	00590059 	.word	0x00590059
 8006c78:	00880059 	.word	0x00880059
 8006c7c:	00e300b0 	.word	0x00e300b0
 8006c80:	00590132 	.word	0x00590132
 8006c84:	01a8014c 	.word	0x01a8014c
 8006c88:	0253024a 	.word	0x0253024a
 8006c8c:	00590059 	.word	0x00590059
 8006c90:	02730059 	.word	0x02730059
 8006c94:	00590059 	.word	0x00590059
 8006c98:	00590281 	.word	0x00590281
 8006c9c:	035e02b5 	.word	0x035e02b5
 8006ca0:	03820369 	.word	0x03820369
 8006ca4:	03e50390 	.word	0x03e50390
 8006ca8:	03fd00e0 	.word	0x03fd00e0
 8006cac:	00590456 	.word	0x00590456
 8006cb0:	00590059 	.word	0x00590059
 8006cb4:	00590059 	.word	0x00590059
 8006cb8:	006a0059 	.word	0x006a0059
 8006cbc:	00c4009d 	.word	0x00c4009d
 8006cc0:	01200120 	.word	0x01200120
 8006cc4:	01790059 	.word	0x01790059
 8006cc8:	0059009d 	.word	0x0059009d
 8006ccc:	024a0266 	.word	0x024a0266
 8006cd0:	026d0253 	.word	0x026d0253
 8006cd4:	00590278 	.word	0x00590278
 8006cd8:	00590281 	.word	0x00590281
 8006cdc:	02bf00da 	.word	0x02bf00da
 8006ce0:	03730363 	.word	0x03730363
 8006ce4:	03de0059 	.word	0x03de0059
 8006ce8:	03ed00dd 	.word	0x03ed00dd
 8006cec:	0419      	.short	0x0419
 8006cee:	1e69      	subs	r1, r5, #1
 8006cf0:	42b9      	cmp	r1, r7
 8006cf2:	d802      	bhi.n	8006cfa <__strftime+0x12a>
 8006cf4:	2700      	movs	r7, #0
 8006cf6:	f000 fc33 	bl	8007560 <__strftime+0x990>
 8006cfa:	9903      	ldr	r1, [sp, #12]
 8006cfc:	3201      	adds	r2, #1
 8006cfe:	55cb      	strb	r3, [r1, r7]
 8006d00:	3701      	adds	r7, #1
 8006d02:	e76d      	b.n	8006be0 <__strftime+0x10>
 8006d04:	1c93      	adds	r3, r2, #2
 8006d06:	9307      	str	r3, [sp, #28]
 8006d08:	e77d      	b.n	8006c06 <__strftime+0x36>
 8006d0a:	3b4f      	subs	r3, #79	; 0x4f
 8006d0c:	425a      	negs	r2, r3
 8006d0e:	4153      	adcs	r3, r2
 8006d10:	9a07      	ldr	r2, [sp, #28]
 8006d12:	18d3      	adds	r3, r2, r3
 8006d14:	e78c      	b.n	8006c30 <__strftime+0x60>
 8006d16:	69b3      	ldr	r3, [r6, #24]
 8006d18:	4aca      	ldr	r2, [pc, #808]	; (8007044 <__strftime+0x474>)
 8006d1a:	3318      	adds	r3, #24
 8006d1c:	009b      	lsls	r3, r3, #2
 8006d1e:	589c      	ldr	r4, [r3, r2]
 8006d20:	0020      	movs	r0, r4
 8006d22:	f7f9 f9f1 	bl	8000108 <strlen>
 8006d26:	1be4      	subs	r4, r4, r7
 8006d28:	1838      	adds	r0, r7, r0
 8006d2a:	1e6a      	subs	r2, r5, #1
 8006d2c:	42b8      	cmp	r0, r7
 8006d2e:	d109      	bne.n	8006d44 <__strftime+0x174>
 8006d30:	0007      	movs	r7, r0
 8006d32:	9b07      	ldr	r3, [sp, #28]
 8006d34:	781b      	ldrb	r3, [r3, #0]
 8006d36:	2b00      	cmp	r3, #0
 8006d38:	d101      	bne.n	8006d3e <__strftime+0x16e>
 8006d3a:	f000 fc0c 	bl	8007556 <__strftime+0x986>
 8006d3e:	9a07      	ldr	r2, [sp, #28]
 8006d40:	3201      	adds	r2, #1
 8006d42:	e74d      	b.n	8006be0 <__strftime+0x10>
 8006d44:	42ba      	cmp	r2, r7
 8006d46:	d9d5      	bls.n	8006cf4 <__strftime+0x124>
 8006d48:	5de1      	ldrb	r1, [r4, r7]
 8006d4a:	9b03      	ldr	r3, [sp, #12]
 8006d4c:	55d9      	strb	r1, [r3, r7]
 8006d4e:	3701      	adds	r7, #1
 8006d50:	e7ec      	b.n	8006d2c <__strftime+0x15c>
 8006d52:	69b3      	ldr	r3, [r6, #24]
 8006d54:	4abb      	ldr	r2, [pc, #748]	; (8007044 <__strftime+0x474>)
 8006d56:	331e      	adds	r3, #30
 8006d58:	009b      	lsls	r3, r3, #2
 8006d5a:	18d3      	adds	r3, r2, r3
 8006d5c:	685c      	ldr	r4, [r3, #4]
 8006d5e:	0020      	movs	r0, r4
 8006d60:	f7f9 f9d2 	bl	8000108 <strlen>
 8006d64:	1be4      	subs	r4, r4, r7
 8006d66:	1838      	adds	r0, r7, r0
 8006d68:	1e6a      	subs	r2, r5, #1
 8006d6a:	42b8      	cmp	r0, r7
 8006d6c:	d0e0      	beq.n	8006d30 <__strftime+0x160>
 8006d6e:	42ba      	cmp	r2, r7
 8006d70:	d9c0      	bls.n	8006cf4 <__strftime+0x124>
 8006d72:	5de1      	ldrb	r1, [r4, r7]
 8006d74:	9b03      	ldr	r3, [sp, #12]
 8006d76:	55d9      	strb	r1, [r3, r7]
 8006d78:	3701      	adds	r7, #1
 8006d7a:	e7f6      	b.n	8006d6a <__strftime+0x19a>
 8006d7c:	6933      	ldr	r3, [r6, #16]
 8006d7e:	4ab1      	ldr	r2, [pc, #708]	; (8007044 <__strftime+0x474>)
 8006d80:	009b      	lsls	r3, r3, #2
 8006d82:	589c      	ldr	r4, [r3, r2]
 8006d84:	0020      	movs	r0, r4
 8006d86:	f7f9 f9bf 	bl	8000108 <strlen>
 8006d8a:	1be4      	subs	r4, r4, r7
 8006d8c:	1838      	adds	r0, r7, r0
 8006d8e:	1e6a      	subs	r2, r5, #1
 8006d90:	42b8      	cmp	r0, r7
 8006d92:	d0cd      	beq.n	8006d30 <__strftime+0x160>
 8006d94:	42ba      	cmp	r2, r7
 8006d96:	d9ad      	bls.n	8006cf4 <__strftime+0x124>
 8006d98:	5de1      	ldrb	r1, [r4, r7]
 8006d9a:	9b03      	ldr	r3, [sp, #12]
 8006d9c:	55d9      	strb	r1, [r3, r7]
 8006d9e:	3701      	adds	r7, #1
 8006da0:	e7f6      	b.n	8006d90 <__strftime+0x1c0>
 8006da2:	6933      	ldr	r3, [r6, #16]
 8006da4:	4aa7      	ldr	r2, [pc, #668]	; (8007044 <__strftime+0x474>)
 8006da6:	330c      	adds	r3, #12
 8006da8:	009b      	lsls	r3, r3, #2
 8006daa:	589c      	ldr	r4, [r3, r2]
 8006dac:	0020      	movs	r0, r4
 8006dae:	f7f9 f9ab 	bl	8000108 <strlen>
 8006db2:	1be4      	subs	r4, r4, r7
 8006db4:	1838      	adds	r0, r7, r0
 8006db6:	1e6a      	subs	r2, r5, #1
 8006db8:	42b8      	cmp	r0, r7
 8006dba:	d0b9      	beq.n	8006d30 <__strftime+0x160>
 8006dbc:	42ba      	cmp	r2, r7
 8006dbe:	d999      	bls.n	8006cf4 <__strftime+0x124>
 8006dc0:	5de1      	ldrb	r1, [r4, r7]
 8006dc2:	9b03      	ldr	r3, [sp, #12]
 8006dc4:	55d9      	strb	r1, [r3, r7]
 8006dc6:	3701      	adds	r7, #1
 8006dc8:	e7f6      	b.n	8006db8 <__strftime+0x1e8>
 8006dca:	4b9e      	ldr	r3, [pc, #632]	; (8007044 <__strftime+0x474>)
 8006dcc:	33a0      	adds	r3, #160	; 0xa0
 8006dce:	681c      	ldr	r4, [r3, #0]
 8006dd0:	0020      	movs	r0, r4
 8006dd2:	f7f9 f999 	bl	8000108 <strlen>
 8006dd6:	7823      	ldrb	r3, [r4, #0]
 8006dd8:	2b00      	cmp	r3, #0
 8006dda:	d0aa      	beq.n	8006d32 <__strftime+0x162>
 8006ddc:	9b03      	ldr	r3, [sp, #12]
 8006dde:	0022      	movs	r2, r4
 8006de0:	19d8      	adds	r0, r3, r7
 8006de2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8006de4:	1be9      	subs	r1, r5, r7
 8006de6:	9300      	str	r3, [sp, #0]
 8006de8:	0033      	movs	r3, r6
 8006dea:	f7ff fef1 	bl	8006bd0 <__strftime>
 8006dee:	2800      	cmp	r0, #0
 8006df0:	dd80      	ble.n	8006cf4 <__strftime+0x124>
 8006df2:	183f      	adds	r7, r7, r0
 8006df4:	e79d      	b.n	8006d32 <__strftime+0x162>
 8006df6:	4b93      	ldr	r3, [pc, #588]	; (8007044 <__strftime+0x474>)
 8006df8:	33e4      	adds	r3, #228	; 0xe4
 8006dfa:	e7e8      	b.n	8006dce <__strftime+0x1fe>
 8006dfc:	4b91      	ldr	r3, [pc, #580]	; (8007044 <__strftime+0x474>)
 8006dfe:	339c      	adds	r3, #156	; 0x9c
 8006e00:	e7e5      	b.n	8006dce <__strftime+0x1fe>
 8006e02:	4b90      	ldr	r3, [pc, #576]	; (8007044 <__strftime+0x474>)
 8006e04:	3398      	adds	r3, #152	; 0x98
 8006e06:	e7e2      	b.n	8006dce <__strftime+0x1fe>
 8006e08:	6974      	ldr	r4, [r6, #20]
 8006e0a:	4a8f      	ldr	r2, [pc, #572]	; (8007048 <__strftime+0x478>)
 8006e0c:	2301      	movs	r3, #1
 8006e0e:	4294      	cmp	r4, r2
 8006e10:	db00      	blt.n	8006e14 <__strftime+0x244>
 8006e12:	2300      	movs	r3, #0
 8006e14:	b2db      	uxtb	r3, r3
 8006e16:	9309      	str	r3, [sp, #36]	; 0x24
 8006e18:	2c00      	cmp	r4, #0
 8006e1a:	db25      	blt.n	8006e68 <__strftime+0x298>
 8006e1c:	2164      	movs	r1, #100	; 0x64
 8006e1e:	0020      	movs	r0, r4
 8006e20:	f7f9 fa22 	bl	8000268 <__divsi3>
 8006e24:	3013      	adds	r0, #19
 8006e26:	9b04      	ldr	r3, [sp, #16]
 8006e28:	2b00      	cmp	r3, #0
 8006e2a:	d025      	beq.n	8006e78 <__strftime+0x2a8>
 8006e2c:	4a87      	ldr	r2, [pc, #540]	; (800704c <__strftime+0x47c>)
 8006e2e:	2863      	cmp	r0, #99	; 0x63
 8006e30:	dd25      	ble.n	8006e7e <__strftime+0x2ae>
 8006e32:	2b2b      	cmp	r3, #43	; 0x2b
 8006e34:	d123      	bne.n	8006e7e <__strftime+0x2ae>
 8006e36:	4b86      	ldr	r3, [pc, #536]	; (8007050 <__strftime+0x480>)
 8006e38:	9906      	ldr	r1, [sp, #24]
 8006e3a:	2902      	cmp	r1, #2
 8006e3c:	d201      	bcs.n	8006e42 <__strftime+0x272>
 8006e3e:	2102      	movs	r1, #2
 8006e40:	9106      	str	r1, [sp, #24]
 8006e42:	9903      	ldr	r1, [sp, #12]
 8006e44:	468c      	mov	ip, r1
 8006e46:	1be9      	subs	r1, r5, r7
 8006e48:	9104      	str	r1, [sp, #16]
 8006e4a:	497f      	ldr	r1, [pc, #508]	; (8007048 <__strftime+0x478>)
 8006e4c:	44bc      	add	ip, r7
 8006e4e:	428c      	cmp	r4, r1
 8006e50:	da00      	bge.n	8006e54 <__strftime+0x284>
 8006e52:	4b80      	ldr	r3, [pc, #512]	; (8007054 <__strftime+0x484>)
 8006e54:	9001      	str	r0, [sp, #4]
 8006e56:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006e58:	9806      	ldr	r0, [sp, #24]
 8006e5a:	1a41      	subs	r1, r0, r1
 8006e5c:	4660      	mov	r0, ip
 8006e5e:	9100      	str	r1, [sp, #0]
 8006e60:	1be9      	subs	r1, r5, r7
 8006e62:	f002 ff7b 	bl	8009d5c <sniprintf>
 8006e66:	e016      	b.n	8006e96 <__strftime+0x2c6>
 8006e68:	4b7b      	ldr	r3, [pc, #492]	; (8007058 <__strftime+0x488>)
 8006e6a:	18e0      	adds	r0, r4, r3
 8006e6c:	f001 f812 	bl	8007e94 <abs>
 8006e70:	2164      	movs	r1, #100	; 0x64
 8006e72:	f7f9 f9f9 	bl	8000268 <__divsi3>
 8006e76:	e7d6      	b.n	8006e26 <__strftime+0x256>
 8006e78:	4b78      	ldr	r3, [pc, #480]	; (800705c <__strftime+0x48c>)
 8006e7a:	4a79      	ldr	r2, [pc, #484]	; (8007060 <__strftime+0x490>)
 8006e7c:	e7dc      	b.n	8006e38 <__strftime+0x268>
 8006e7e:	4b77      	ldr	r3, [pc, #476]	; (800705c <__strftime+0x48c>)
 8006e80:	e7da      	b.n	8006e38 <__strftime+0x268>
 8006e82:	9b03      	ldr	r3, [sp, #12]
 8006e84:	1be9      	subs	r1, r5, r7
 8006e86:	19d8      	adds	r0, r3, r7
 8006e88:	4a76      	ldr	r2, [pc, #472]	; (8007064 <__strftime+0x494>)
 8006e8a:	2c64      	cmp	r4, #100	; 0x64
 8006e8c:	d100      	bne.n	8006e90 <__strftime+0x2c0>
 8006e8e:	4a76      	ldr	r2, [pc, #472]	; (8007068 <__strftime+0x498>)
 8006e90:	68f3      	ldr	r3, [r6, #12]
 8006e92:	f002 ff63 	bl	8009d5c <sniprintf>
 8006e96:	2800      	cmp	r0, #0
 8006e98:	da00      	bge.n	8006e9c <__strftime+0x2cc>
 8006e9a:	e72b      	b.n	8006cf4 <__strftime+0x124>
 8006e9c:	183f      	adds	r7, r7, r0
 8006e9e:	42bd      	cmp	r5, r7
 8006ea0:	d900      	bls.n	8006ea4 <__strftime+0x2d4>
 8006ea2:	e746      	b.n	8006d32 <__strftime+0x162>
 8006ea4:	e726      	b.n	8006cf4 <__strftime+0x124>
 8006ea6:	9b03      	ldr	r3, [sp, #12]
 8006ea8:	6970      	ldr	r0, [r6, #20]
 8006eaa:	19dc      	adds	r4, r3, r7
 8006eac:	6933      	ldr	r3, [r6, #16]
 8006eae:	3301      	adds	r3, #1
 8006eb0:	9306      	str	r3, [sp, #24]
 8006eb2:	68f3      	ldr	r3, [r6, #12]
 8006eb4:	9304      	str	r3, [sp, #16]
 8006eb6:	2800      	cmp	r0, #0
 8006eb8:	db0a      	blt.n	8006ed0 <__strftime+0x300>
 8006eba:	2164      	movs	r1, #100	; 0x64
 8006ebc:	f7f9 faba 	bl	8000434 <__aeabi_idivmod>
 8006ec0:	9b04      	ldr	r3, [sp, #16]
 8006ec2:	9101      	str	r1, [sp, #4]
 8006ec4:	9300      	str	r3, [sp, #0]
 8006ec6:	4a69      	ldr	r2, [pc, #420]	; (800706c <__strftime+0x49c>)
 8006ec8:	9b06      	ldr	r3, [sp, #24]
 8006eca:	1be9      	subs	r1, r5, r7
 8006ecc:	0020      	movs	r0, r4
 8006ece:	e7c8      	b.n	8006e62 <__strftime+0x292>
 8006ed0:	4b61      	ldr	r3, [pc, #388]	; (8007058 <__strftime+0x488>)
 8006ed2:	18c0      	adds	r0, r0, r3
 8006ed4:	f000 ffde 	bl	8007e94 <abs>
 8006ed8:	e7ef      	b.n	8006eba <__strftime+0x2ea>
 8006eda:	2225      	movs	r2, #37	; 0x25
 8006edc:	ab22      	add	r3, sp, #136	; 0x88
 8006ede:	701a      	strb	r2, [r3, #0]
 8006ee0:	9a04      	ldr	r2, [sp, #16]
 8006ee2:	2a00      	cmp	r2, #0
 8006ee4:	d011      	beq.n	8006f0a <__strftime+0x33a>
 8006ee6:	705a      	strb	r2, [r3, #1]
 8006ee8:	9b06      	ldr	r3, [sp, #24]
 8006eea:	2b06      	cmp	r3, #6
 8006eec:	d21d      	bcs.n	8006f2a <__strftime+0x35a>
 8006eee:	200a      	movs	r0, #10
 8006ef0:	ab20      	add	r3, sp, #128	; 0x80
 8006ef2:	1818      	adds	r0, r3, r0
 8006ef4:	495e      	ldr	r1, [pc, #376]	; (8007070 <__strftime+0x4a0>)
 8006ef6:	f002 ffd9 	bl	8009eac <strcpy>
 8006efa:	9b03      	ldr	r3, [sp, #12]
 8006efc:	1be9      	subs	r1, r5, r7
 8006efe:	19d8      	adds	r0, r3, r7
 8006f00:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8006f02:	aa22      	add	r2, sp, #136	; 0x88
 8006f04:	9300      	str	r3, [sp, #0]
 8006f06:	0033      	movs	r3, r6
 8006f08:	e76f      	b.n	8006dea <__strftime+0x21a>
 8006f0a:	222b      	movs	r2, #43	; 0x2b
 8006f0c:	705a      	strb	r2, [r3, #1]
 8006f0e:	2304      	movs	r3, #4
 8006f10:	200a      	movs	r0, #10
 8006f12:	ac20      	add	r4, sp, #128	; 0x80
 8006f14:	4a57      	ldr	r2, [pc, #348]	; (8007074 <__strftime+0x4a4>)
 8006f16:	211e      	movs	r1, #30
 8006f18:	1900      	adds	r0, r0, r4
 8006f1a:	f002 ff1f 	bl	8009d5c <sniprintf>
 8006f1e:	2800      	cmp	r0, #0
 8006f20:	dde5      	ble.n	8006eee <__strftime+0x31e>
 8006f22:	230a      	movs	r3, #10
 8006f24:	aa20      	add	r2, sp, #128	; 0x80
 8006f26:	189b      	adds	r3, r3, r2
 8006f28:	e7e3      	b.n	8006ef2 <__strftime+0x322>
 8006f2a:	9b06      	ldr	r3, [sp, #24]
 8006f2c:	3b06      	subs	r3, #6
 8006f2e:	2b00      	cmp	r3, #0
 8006f30:	d0dd      	beq.n	8006eee <__strftime+0x31e>
 8006f32:	e7ed      	b.n	8006f10 <__strftime+0x340>
 8006f34:	0030      	movs	r0, r6
 8006f36:	f7ff fdef 	bl	8006b18 <iso_year_adjust>
 8006f3a:	0004      	movs	r4, r0
 8006f3c:	6970      	ldr	r0, [r6, #20]
 8006f3e:	2800      	cmp	r0, #0
 8006f40:	db19      	blt.n	8006f76 <__strftime+0x3a6>
 8006f42:	2164      	movs	r1, #100	; 0x64
 8006f44:	f7f9 fa76 	bl	8000434 <__aeabi_idivmod>
 8006f48:	2c00      	cmp	r4, #0
 8006f4a:	da19      	bge.n	8006f80 <__strftime+0x3b0>
 8006f4c:	4b4a      	ldr	r3, [pc, #296]	; (8007078 <__strftime+0x4a8>)
 8006f4e:	6972      	ldr	r2, [r6, #20]
 8006f50:	429a      	cmp	r2, r3
 8006f52:	da00      	bge.n	8006f56 <__strftime+0x386>
 8006f54:	2401      	movs	r4, #1
 8006f56:	1860      	adds	r0, r4, r1
 8006f58:	2164      	movs	r1, #100	; 0x64
 8006f5a:	f7f9 fa6b 	bl	8000434 <__aeabi_idivmod>
 8006f5e:	3164      	adds	r1, #100	; 0x64
 8006f60:	0008      	movs	r0, r1
 8006f62:	2164      	movs	r1, #100	; 0x64
 8006f64:	f7f9 fa66 	bl	8000434 <__aeabi_idivmod>
 8006f68:	000b      	movs	r3, r1
 8006f6a:	9a03      	ldr	r2, [sp, #12]
 8006f6c:	1bec      	subs	r4, r5, r7
 8006f6e:	19d0      	adds	r0, r2, r7
 8006f70:	4a3d      	ldr	r2, [pc, #244]	; (8007068 <__strftime+0x498>)
 8006f72:	0021      	movs	r1, r4
 8006f74:	e78d      	b.n	8006e92 <__strftime+0x2c2>
 8006f76:	4b38      	ldr	r3, [pc, #224]	; (8007058 <__strftime+0x488>)
 8006f78:	18c0      	adds	r0, r0, r3
 8006f7a:	f000 ff8b 	bl	8007e94 <abs>
 8006f7e:	e7e0      	b.n	8006f42 <__strftime+0x372>
 8006f80:	2c00      	cmp	r4, #0
 8006f82:	d0e8      	beq.n	8006f56 <__strftime+0x386>
 8006f84:	4b30      	ldr	r3, [pc, #192]	; (8007048 <__strftime+0x478>)
 8006f86:	6972      	ldr	r2, [r6, #20]
 8006f88:	429a      	cmp	r2, r3
 8006f8a:	dae4      	bge.n	8006f56 <__strftime+0x386>
 8006f8c:	2401      	movs	r4, #1
 8006f8e:	4264      	negs	r4, r4
 8006f90:	e7e1      	b.n	8006f56 <__strftime+0x386>
 8006f92:	6973      	ldr	r3, [r6, #20]
 8006f94:	930a      	str	r3, [sp, #40]	; 0x28
 8006f96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006f98:	2301      	movs	r3, #1
 8006f9a:	0011      	movs	r1, r2
 8006f9c:	4a2a      	ldr	r2, [pc, #168]	; (8007048 <__strftime+0x478>)
 8006f9e:	4291      	cmp	r1, r2
 8006fa0:	db00      	blt.n	8006fa4 <__strftime+0x3d4>
 8006fa2:	2300      	movs	r3, #0
 8006fa4:	0030      	movs	r0, r6
 8006fa6:	930b      	str	r3, [sp, #44]	; 0x2c
 8006fa8:	f7ff fdb6 	bl	8006b18 <iso_year_adjust>
 8006fac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006fae:	0004      	movs	r4, r0
 8006fb0:	2b00      	cmp	r3, #0
 8006fb2:	db3d      	blt.n	8007030 <__strftime+0x460>
 8006fb4:	2164      	movs	r1, #100	; 0x64
 8006fb6:	0018      	movs	r0, r3
 8006fb8:	f7f9 f956 	bl	8000268 <__divsi3>
 8006fbc:	3013      	adds	r0, #19
 8006fbe:	9009      	str	r0, [sp, #36]	; 0x24
 8006fc0:	6970      	ldr	r0, [r6, #20]
 8006fc2:	2800      	cmp	r0, #0
 8006fc4:	db5c      	blt.n	8007080 <__strftime+0x4b0>
 8006fc6:	2164      	movs	r1, #100	; 0x64
 8006fc8:	f7f9 fa34 	bl	8000434 <__aeabi_idivmod>
 8006fcc:	2c00      	cmp	r4, #0
 8006fce:	da5c      	bge.n	800708a <__strftime+0x4ba>
 8006fd0:	4b29      	ldr	r3, [pc, #164]	; (8007078 <__strftime+0x4a8>)
 8006fd2:	6972      	ldr	r2, [r6, #20]
 8006fd4:	429a      	cmp	r2, r3
 8006fd6:	da01      	bge.n	8006fdc <__strftime+0x40c>
 8006fd8:	2401      	movs	r4, #1
 8006fda:	940b      	str	r4, [sp, #44]	; 0x2c
 8006fdc:	1861      	adds	r1, r4, r1
 8006fde:	1c4b      	adds	r3, r1, #1
 8006fe0:	d161      	bne.n	80070a6 <__strftime+0x4d6>
 8006fe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006fe4:	3164      	adds	r1, #100	; 0x64
 8006fe6:	3b01      	subs	r3, #1
 8006fe8:	9309      	str	r3, [sp, #36]	; 0x24
 8006fea:	2464      	movs	r4, #100	; 0x64
 8006fec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006fee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8006ff0:	435c      	muls	r4, r3
 8006ff2:	ab22      	add	r3, sp, #136	; 0x88
 8006ff4:	1864      	adds	r4, r4, r1
 8006ff6:	2a00      	cmp	r2, #0
 8006ff8:	d05c      	beq.n	80070b4 <__strftime+0x4e4>
 8006ffa:	222d      	movs	r2, #45	; 0x2d
 8006ffc:	701a      	strb	r2, [r3, #0]
 8006ffe:	2309      	movs	r3, #9
 8007000:	aa20      	add	r2, sp, #128	; 0x80
 8007002:	189b      	adds	r3, r3, r2
 8007004:	9a06      	ldr	r2, [sp, #24]
 8007006:	2a00      	cmp	r2, #0
 8007008:	d160      	bne.n	80070cc <__strftime+0x4fc>
 800700a:	2225      	movs	r2, #37	; 0x25
 800700c:	701a      	strb	r2, [r3, #0]
 800700e:	9a04      	ldr	r2, [sp, #16]
 8007010:	1c58      	adds	r0, r3, #1
 8007012:	2a00      	cmp	r2, #0
 8007014:	d002      	beq.n	800701c <__strftime+0x44c>
 8007016:	2230      	movs	r2, #48	; 0x30
 8007018:	1c98      	adds	r0, r3, #2
 800701a:	705a      	strb	r2, [r3, #1]
 800701c:	4917      	ldr	r1, [pc, #92]	; (800707c <__strftime+0x4ac>)
 800701e:	f002 ff45 	bl	8009eac <strcpy>
 8007022:	9b03      	ldr	r3, [sp, #12]
 8007024:	1be9      	subs	r1, r5, r7
 8007026:	19d8      	adds	r0, r3, r7
 8007028:	9400      	str	r4, [sp, #0]
 800702a:	9b06      	ldr	r3, [sp, #24]
 800702c:	aa22      	add	r2, sp, #136	; 0x88
 800702e:	e0c4      	b.n	80071ba <__strftime+0x5ea>
 8007030:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007032:	4a09      	ldr	r2, [pc, #36]	; (8007058 <__strftime+0x488>)
 8007034:	1898      	adds	r0, r3, r2
 8007036:	f000 ff2d 	bl	8007e94 <abs>
 800703a:	2164      	movs	r1, #100	; 0x64
 800703c:	f7f9 f914 	bl	8000268 <__divsi3>
 8007040:	e7bd      	b.n	8006fbe <__strftime+0x3ee>
 8007042:	46c0      	nop			; (mov r8, r8)
 8007044:	0800be00 	.word	0x0800be00
 8007048:	fffff894 	.word	0xfffff894
 800704c:	0800bdad 	.word	0x0800bdad
 8007050:	0800bdb5 	.word	0x0800bdb5
 8007054:	0800c301 	.word	0x0800c301
 8007058:	0000076c 	.word	0x0000076c
 800705c:	0800c1e1 	.word	0x0800c1e1
 8007060:	0800bda6 	.word	0x0800bda6
 8007064:	0800bdb7 	.word	0x0800bdb7
 8007068:	0800bdc5 	.word	0x0800bdc5
 800706c:	0800bdbb 	.word	0x0800bdbb
 8007070:	0800bdce 	.word	0x0800bdce
 8007074:	0800bdca 	.word	0x0800bdca
 8007078:	fffff895 	.word	0xfffff895
 800707c:	0800bdd6 	.word	0x0800bdd6
 8007080:	4bc4      	ldr	r3, [pc, #784]	; (8007394 <__strftime+0x7c4>)
 8007082:	18c0      	adds	r0, r0, r3
 8007084:	f000 ff06 	bl	8007e94 <abs>
 8007088:	e79d      	b.n	8006fc6 <__strftime+0x3f6>
 800708a:	2c00      	cmp	r4, #0
 800708c:	d0a6      	beq.n	8006fdc <__strftime+0x40c>
 800708e:	2300      	movs	r3, #0
 8007090:	930b      	str	r3, [sp, #44]	; 0x2c
 8007092:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007094:	001a      	movs	r2, r3
 8007096:	4bc0      	ldr	r3, [pc, #768]	; (8007398 <__strftime+0x7c8>)
 8007098:	429a      	cmp	r2, r3
 800709a:	da9f      	bge.n	8006fdc <__strftime+0x40c>
 800709c:	2401      	movs	r4, #1
 800709e:	2301      	movs	r3, #1
 80070a0:	4264      	negs	r4, r4
 80070a2:	930b      	str	r3, [sp, #44]	; 0x2c
 80070a4:	e79a      	b.n	8006fdc <__strftime+0x40c>
 80070a6:	2964      	cmp	r1, #100	; 0x64
 80070a8:	d19f      	bne.n	8006fea <__strftime+0x41a>
 80070aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80070ac:	2100      	movs	r1, #0
 80070ae:	3301      	adds	r3, #1
 80070b0:	9309      	str	r3, [sp, #36]	; 0x24
 80070b2:	e79a      	b.n	8006fea <__strftime+0x41a>
 80070b4:	9a04      	ldr	r2, [sp, #16]
 80070b6:	2a2b      	cmp	r2, #43	; 0x2b
 80070b8:	d1a7      	bne.n	800700a <__strftime+0x43a>
 80070ba:	4ab8      	ldr	r2, [pc, #736]	; (800739c <__strftime+0x7cc>)
 80070bc:	4294      	cmp	r4, r2
 80070be:	d9a4      	bls.n	800700a <__strftime+0x43a>
 80070c0:	9a04      	ldr	r2, [sp, #16]
 80070c2:	701a      	strb	r2, [r3, #0]
 80070c4:	9a06      	ldr	r2, [sp, #24]
 80070c6:	2a00      	cmp	r2, #0
 80070c8:	d100      	bne.n	80070cc <__strftime+0x4fc>
 80070ca:	e24c      	b.n	8007566 <__strftime+0x996>
 80070cc:	9b06      	ldr	r3, [sp, #24]
 80070ce:	3b01      	subs	r3, #1
 80070d0:	9306      	str	r3, [sp, #24]
 80070d2:	2309      	movs	r3, #9
 80070d4:	e1bf      	b.n	8007456 <__strftime+0x886>
 80070d6:	9b03      	ldr	r3, [sp, #12]
 80070d8:	1be9      	subs	r1, r5, r7
 80070da:	19d8      	adds	r0, r3, r7
 80070dc:	4ab0      	ldr	r2, [pc, #704]	; (80073a0 <__strftime+0x7d0>)
 80070de:	2c6b      	cmp	r4, #107	; 0x6b
 80070e0:	d100      	bne.n	80070e4 <__strftime+0x514>
 80070e2:	4ab0      	ldr	r2, [pc, #704]	; (80073a4 <__strftime+0x7d4>)
 80070e4:	68b3      	ldr	r3, [r6, #8]
 80070e6:	e6d4      	b.n	8006e92 <__strftime+0x2c2>
 80070e8:	68b0      	ldr	r0, [r6, #8]
 80070ea:	230c      	movs	r3, #12
 80070ec:	2800      	cmp	r0, #0
 80070ee:	d005      	beq.n	80070fc <__strftime+0x52c>
 80070f0:	4298      	cmp	r0, r3
 80070f2:	d003      	beq.n	80070fc <__strftime+0x52c>
 80070f4:	0019      	movs	r1, r3
 80070f6:	f7f9 f99d 	bl	8000434 <__aeabi_idivmod>
 80070fa:	000b      	movs	r3, r1
 80070fc:	9a03      	ldr	r2, [sp, #12]
 80070fe:	1be9      	subs	r1, r5, r7
 8007100:	19d0      	adds	r0, r2, r7
 8007102:	4aa8      	ldr	r2, [pc, #672]	; (80073a4 <__strftime+0x7d4>)
 8007104:	2c49      	cmp	r4, #73	; 0x49
 8007106:	d000      	beq.n	800710a <__strftime+0x53a>
 8007108:	e6c3      	b.n	8006e92 <__strftime+0x2c2>
 800710a:	4aa5      	ldr	r2, [pc, #660]	; (80073a0 <__strftime+0x7d0>)
 800710c:	e6c1      	b.n	8006e92 <__strftime+0x2c2>
 800710e:	9a03      	ldr	r2, [sp, #12]
 8007110:	69f3      	ldr	r3, [r6, #28]
 8007112:	19d0      	adds	r0, r2, r7
 8007114:	3301      	adds	r3, #1
 8007116:	1be9      	subs	r1, r5, r7
 8007118:	4aa3      	ldr	r2, [pc, #652]	; (80073a8 <__strftime+0x7d8>)
 800711a:	e6ba      	b.n	8006e92 <__strftime+0x2c2>
 800711c:	6933      	ldr	r3, [r6, #16]
 800711e:	9a03      	ldr	r2, [sp, #12]
 8007120:	3301      	adds	r3, #1
 8007122:	1be9      	subs	r1, r5, r7
 8007124:	19d0      	adds	r0, r2, r7
 8007126:	e7f0      	b.n	800710a <__strftime+0x53a>
 8007128:	9b03      	ldr	r3, [sp, #12]
 800712a:	1be9      	subs	r1, r5, r7
 800712c:	19d8      	adds	r0, r3, r7
 800712e:	6873      	ldr	r3, [r6, #4]
 8007130:	e7eb      	b.n	800710a <__strftime+0x53a>
 8007132:	1e6b      	subs	r3, r5, #1
 8007134:	42bb      	cmp	r3, r7
 8007136:	d800      	bhi.n	800713a <__strftime+0x56a>
 8007138:	e5dc      	b.n	8006cf4 <__strftime+0x124>
 800713a:	230a      	movs	r3, #10
 800713c:	9a03      	ldr	r2, [sp, #12]
 800713e:	55d3      	strb	r3, [r2, r7]
 8007140:	3701      	adds	r7, #1
 8007142:	e5f6      	b.n	8006d32 <__strftime+0x162>
 8007144:	68b2      	ldr	r2, [r6, #8]
 8007146:	2301      	movs	r3, #1
 8007148:	2a0b      	cmp	r2, #11
 800714a:	dc00      	bgt.n	800714e <__strftime+0x57e>
 800714c:	2300      	movs	r3, #0
 800714e:	4a97      	ldr	r2, [pc, #604]	; (80073ac <__strftime+0x7dc>)
 8007150:	3328      	adds	r3, #40	; 0x28
 8007152:	009b      	lsls	r3, r3, #2
 8007154:	18d3      	adds	r3, r2, r3
 8007156:	685b      	ldr	r3, [r3, #4]
 8007158:	0018      	movs	r0, r3
 800715a:	9304      	str	r3, [sp, #16]
 800715c:	f7f8 ffd4 	bl	8000108 <strlen>
 8007160:	183b      	adds	r3, r7, r0
 8007162:	9309      	str	r3, [sp, #36]	; 0x24
 8007164:	9706      	str	r7, [sp, #24]
 8007166:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007168:	9a06      	ldr	r2, [sp, #24]
 800716a:	4293      	cmp	r3, r2
 800716c:	d101      	bne.n	8007172 <__strftime+0x5a2>
 800716e:	001f      	movs	r7, r3
 8007170:	e5df      	b.n	8006d32 <__strftime+0x162>
 8007172:	9a06      	ldr	r2, [sp, #24]
 8007174:	1e6b      	subs	r3, r5, #1
 8007176:	4293      	cmp	r3, r2
 8007178:	d800      	bhi.n	800717c <__strftime+0x5ac>
 800717a:	e5bb      	b.n	8006cf4 <__strftime+0x124>
 800717c:	9b04      	ldr	r3, [sp, #16]
 800717e:	1bdb      	subs	r3, r3, r7
 8007180:	5c9c      	ldrb	r4, [r3, r2]
 8007182:	9b07      	ldr	r3, [sp, #28]
 8007184:	781b      	ldrb	r3, [r3, #0]
 8007186:	2b50      	cmp	r3, #80	; 0x50
 8007188:	d109      	bne.n	800719e <__strftime+0x5ce>
 800718a:	f001 ffa7 	bl	80090dc <__locale_ctype_ptr>
 800718e:	2203      	movs	r2, #3
 8007190:	1900      	adds	r0, r0, r4
 8007192:	7843      	ldrb	r3, [r0, #1]
 8007194:	4013      	ands	r3, r2
 8007196:	2b01      	cmp	r3, #1
 8007198:	d100      	bne.n	800719c <__strftime+0x5cc>
 800719a:	3420      	adds	r4, #32
 800719c:	b2e4      	uxtb	r4, r4
 800719e:	9a06      	ldr	r2, [sp, #24]
 80071a0:	9b03      	ldr	r3, [sp, #12]
 80071a2:	549c      	strb	r4, [r3, r2]
 80071a4:	0013      	movs	r3, r2
 80071a6:	3301      	adds	r3, #1
 80071a8:	9306      	str	r3, [sp, #24]
 80071aa:	e7dc      	b.n	8007166 <__strftime+0x596>
 80071ac:	9b03      	ldr	r3, [sp, #12]
 80071ae:	4a80      	ldr	r2, [pc, #512]	; (80073b0 <__strftime+0x7e0>)
 80071b0:	19d8      	adds	r0, r3, r7
 80071b2:	6873      	ldr	r3, [r6, #4]
 80071b4:	1be9      	subs	r1, r5, r7
 80071b6:	9300      	str	r3, [sp, #0]
 80071b8:	68b3      	ldr	r3, [r6, #8]
 80071ba:	f002 fdcf 	bl	8009d5c <sniprintf>
 80071be:	e66a      	b.n	8006e96 <__strftime+0x2c6>
 80071c0:	2300      	movs	r3, #0
 80071c2:	9306      	str	r3, [sp, #24]
 80071c4:	6a33      	ldr	r3, [r6, #32]
 80071c6:	2b00      	cmp	r3, #0
 80071c8:	db16      	blt.n	80071f8 <__strftime+0x628>
 80071ca:	f000 fc0f 	bl	80079ec <__tz_lock>
 80071ce:	9b08      	ldr	r3, [sp, #32]
 80071d0:	2b00      	cmp	r3, #0
 80071d2:	d101      	bne.n	80071d8 <__strftime+0x608>
 80071d4:	f000 fc0c 	bl	80079f0 <_tzset_unlocked>
 80071d8:	f001 fea6 	bl	8008f28 <__gettzinfo>
 80071dc:	6a32      	ldr	r2, [r6, #32]
 80071de:	17d3      	asrs	r3, r2, #31
 80071e0:	1a9b      	subs	r3, r3, r2
 80071e2:	2228      	movs	r2, #40	; 0x28
 80071e4:	0fdb      	lsrs	r3, r3, #31
 80071e6:	3301      	adds	r3, #1
 80071e8:	4353      	muls	r3, r2
 80071ea:	581b      	ldr	r3, [r3, r0]
 80071ec:	425b      	negs	r3, r3
 80071ee:	9306      	str	r3, [sp, #24]
 80071f0:	f000 fbfd 	bl	80079ee <__tz_unlock>
 80071f4:	2301      	movs	r3, #1
 80071f6:	9308      	str	r3, [sp, #32]
 80071f8:	2045      	movs	r0, #69	; 0x45
 80071fa:	4240      	negs	r0, r0
 80071fc:	17c1      	asrs	r1, r0, #31
 80071fe:	6974      	ldr	r4, [r6, #20]
 8007200:	17e3      	asrs	r3, r4, #31
 8007202:	940e      	str	r4, [sp, #56]	; 0x38
 8007204:	930f      	str	r3, [sp, #60]	; 0x3c
 8007206:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007208:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800720a:	1812      	adds	r2, r2, r0
 800720c:	414b      	adcs	r3, r1
 800720e:	2103      	movs	r1, #3
 8007210:	17d8      	asrs	r0, r3, #31
 8007212:	4008      	ands	r0, r1
 8007214:	2100      	movs	r1, #0
 8007216:	9010      	str	r0, [sp, #64]	; 0x40
 8007218:	9111      	str	r1, [sp, #68]	; 0x44
 800721a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800721c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800721e:	1812      	adds	r2, r2, r0
 8007220:	414b      	adcs	r3, r1
 8007222:	0799      	lsls	r1, r3, #30
 8007224:	0890      	lsrs	r0, r2, #2
 8007226:	4308      	orrs	r0, r1
 8007228:	900c      	str	r0, [sp, #48]	; 0x30
 800722a:	109b      	asrs	r3, r3, #2
 800722c:	1e60      	subs	r0, r4, #1
 800722e:	2164      	movs	r1, #100	; 0x64
 8007230:	930d      	str	r3, [sp, #52]	; 0x34
 8007232:	f7f9 f819 	bl	8000268 <__divsi3>
 8007236:	17c3      	asrs	r3, r0, #31
 8007238:	9313      	str	r3, [sp, #76]	; 0x4c
 800723a:	9012      	str	r0, [sp, #72]	; 0x48
 800723c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800723e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8007240:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007242:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007244:	1a12      	subs	r2, r2, r0
 8007246:	418b      	sbcs	r3, r1
 8007248:	0020      	movs	r0, r4
 800724a:	21c8      	movs	r1, #200	; 0xc8
 800724c:	302c      	adds	r0, #44	; 0x2c
 800724e:	0049      	lsls	r1, r1, #1
 8007250:	30ff      	adds	r0, #255	; 0xff
 8007252:	9204      	str	r2, [sp, #16]
 8007254:	9305      	str	r3, [sp, #20]
 8007256:	f7f9 f807 	bl	8000268 <__divsi3>
 800725a:	17c3      	asrs	r3, r0, #31
 800725c:	9014      	str	r0, [sp, #80]	; 0x50
 800725e:	9315      	str	r3, [sp, #84]	; 0x54
 8007260:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8007262:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007264:	9804      	ldr	r0, [sp, #16]
 8007266:	9905      	ldr	r1, [sp, #20]
 8007268:	1880      	adds	r0, r0, r2
 800726a:	4159      	adcs	r1, r3
 800726c:	0022      	movs	r2, r4
 800726e:	236e      	movs	r3, #110	; 0x6e
 8007270:	3a46      	subs	r2, #70	; 0x46
 8007272:	33ff      	adds	r3, #255	; 0xff
 8007274:	4353      	muls	r3, r2
 8007276:	9316      	str	r3, [sp, #88]	; 0x58
 8007278:	17db      	asrs	r3, r3, #31
 800727a:	9317      	str	r3, [sp, #92]	; 0x5c
 800727c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800727e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8007280:	18c0      	adds	r0, r0, r3
 8007282:	4161      	adcs	r1, r4
 8007284:	69f3      	ldr	r3, [r6, #28]
 8007286:	2218      	movs	r2, #24
 8007288:	9318      	str	r3, [sp, #96]	; 0x60
 800728a:	17db      	asrs	r3, r3, #31
 800728c:	9319      	str	r3, [sp, #100]	; 0x64
 800728e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007290:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8007292:	18c0      	adds	r0, r0, r3
 8007294:	4161      	adcs	r1, r4
 8007296:	2300      	movs	r3, #0
 8007298:	f7f9 f96e 	bl	8000578 <__aeabi_lmul>
 800729c:	68b3      	ldr	r3, [r6, #8]
 800729e:	223c      	movs	r2, #60	; 0x3c
 80072a0:	931a      	str	r3, [sp, #104]	; 0x68
 80072a2:	17db      	asrs	r3, r3, #31
 80072a4:	931b      	str	r3, [sp, #108]	; 0x6c
 80072a6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80072a8:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 80072aa:	18c0      	adds	r0, r0, r3
 80072ac:	4161      	adcs	r1, r4
 80072ae:	2300      	movs	r3, #0
 80072b0:	f7f9 f962 	bl	8000578 <__aeabi_lmul>
 80072b4:	6873      	ldr	r3, [r6, #4]
 80072b6:	223c      	movs	r2, #60	; 0x3c
 80072b8:	931c      	str	r3, [sp, #112]	; 0x70
 80072ba:	17db      	asrs	r3, r3, #31
 80072bc:	931d      	str	r3, [sp, #116]	; 0x74
 80072be:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80072c0:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 80072c2:	18c0      	adds	r0, r0, r3
 80072c4:	4161      	adcs	r1, r4
 80072c6:	2300      	movs	r3, #0
 80072c8:	f7f9 f956 	bl	8000578 <__aeabi_lmul>
 80072cc:	6833      	ldr	r3, [r6, #0]
 80072ce:	4a39      	ldr	r2, [pc, #228]	; (80073b4 <__strftime+0x7e4>)
 80072d0:	931e      	str	r3, [sp, #120]	; 0x78
 80072d2:	17db      	asrs	r3, r3, #31
 80072d4:	931f      	str	r3, [sp, #124]	; 0x7c
 80072d6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80072d8:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 80072da:	18c0      	adds	r0, r0, r3
 80072dc:	4161      	adcs	r1, r4
 80072de:	9b06      	ldr	r3, [sp, #24]
 80072e0:	9320      	str	r3, [sp, #128]	; 0x80
 80072e2:	17db      	asrs	r3, r3, #31
 80072e4:	9321      	str	r3, [sp, #132]	; 0x84
 80072e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80072e8:	9c21      	ldr	r4, [sp, #132]	; 0x84
 80072ea:	1ac0      	subs	r0, r0, r3
 80072ec:	41a1      	sbcs	r1, r4
 80072ee:	9b03      	ldr	r3, [sp, #12]
 80072f0:	9000      	str	r0, [sp, #0]
 80072f2:	9101      	str	r1, [sp, #4]
 80072f4:	1be9      	subs	r1, r5, r7
 80072f6:	19d8      	adds	r0, r3, r7
 80072f8:	f002 fd30 	bl	8009d5c <sniprintf>
 80072fc:	e5cb      	b.n	8006e96 <__strftime+0x2c6>
 80072fe:	9b03      	ldr	r3, [sp, #12]
 8007300:	1be9      	subs	r1, r5, r7
 8007302:	19d8      	adds	r0, r3, r7
 8007304:	6833      	ldr	r3, [r6, #0]
 8007306:	e700      	b.n	800710a <__strftime+0x53a>
 8007308:	1e6b      	subs	r3, r5, #1
 800730a:	42bb      	cmp	r3, r7
 800730c:	d800      	bhi.n	8007310 <__strftime+0x740>
 800730e:	e4f1      	b.n	8006cf4 <__strftime+0x124>
 8007310:	2309      	movs	r3, #9
 8007312:	e713      	b.n	800713c <__strftime+0x56c>
 8007314:	9b03      	ldr	r3, [sp, #12]
 8007316:	1be9      	subs	r1, r5, r7
 8007318:	19d8      	adds	r0, r3, r7
 800731a:	6833      	ldr	r3, [r6, #0]
 800731c:	4a26      	ldr	r2, [pc, #152]	; (80073b8 <__strftime+0x7e8>)
 800731e:	9301      	str	r3, [sp, #4]
 8007320:	6873      	ldr	r3, [r6, #4]
 8007322:	9300      	str	r3, [sp, #0]
 8007324:	68b3      	ldr	r3, [r6, #8]
 8007326:	e59c      	b.n	8006e62 <__strftime+0x292>
 8007328:	1e6b      	subs	r3, r5, #1
 800732a:	42bb      	cmp	r3, r7
 800732c:	d800      	bhi.n	8007330 <__strftime+0x760>
 800732e:	e4e1      	b.n	8006cf4 <__strftime+0x124>
 8007330:	9a03      	ldr	r2, [sp, #12]
 8007332:	69b3      	ldr	r3, [r6, #24]
 8007334:	19d2      	adds	r2, r2, r7
 8007336:	3701      	adds	r7, #1
 8007338:	2b00      	cmp	r3, #0
 800733a:	d102      	bne.n	8007342 <__strftime+0x772>
 800733c:	3337      	adds	r3, #55	; 0x37
 800733e:	7013      	strb	r3, [r2, #0]
 8007340:	e4f7      	b.n	8006d32 <__strftime+0x162>
 8007342:	3330      	adds	r3, #48	; 0x30
 8007344:	e7fb      	b.n	800733e <__strftime+0x76e>
 8007346:	69f3      	ldr	r3, [r6, #28]
 8007348:	1dd8      	adds	r0, r3, #7
 800734a:	69b3      	ldr	r3, [r6, #24]
 800734c:	1ac0      	subs	r0, r0, r3
 800734e:	2107      	movs	r1, #7
 8007350:	f7f8 ff8a 	bl	8000268 <__divsi3>
 8007354:	9a03      	ldr	r2, [sp, #12]
 8007356:	0003      	movs	r3, r0
 8007358:	19d4      	adds	r4, r2, r7
 800735a:	1be9      	subs	r1, r5, r7
 800735c:	4a10      	ldr	r2, [pc, #64]	; (80073a0 <__strftime+0x7d0>)
 800735e:	0020      	movs	r0, r4
 8007360:	e597      	b.n	8006e92 <__strftime+0x2c2>
 8007362:	0030      	movs	r0, r6
 8007364:	f7ff fbd8 	bl	8006b18 <iso_year_adjust>
 8007368:	69b3      	ldr	r3, [r6, #24]
 800736a:	2106      	movs	r1, #6
 800736c:	2b00      	cmp	r3, #0
 800736e:	d000      	beq.n	8007372 <__strftime+0x7a2>
 8007370:	1e59      	subs	r1, r3, #1
 8007372:	2401      	movs	r4, #1
 8007374:	2800      	cmp	r0, #0
 8007376:	dc07      	bgt.n	8007388 <__strftime+0x7b8>
 8007378:	69f3      	ldr	r3, [r6, #28]
 800737a:	d11f      	bne.n	80073bc <__strftime+0x7ec>
 800737c:	330a      	adds	r3, #10
 800737e:	1a58      	subs	r0, r3, r1
 8007380:	2107      	movs	r1, #7
 8007382:	f7f8 ff71 	bl	8000268 <__divsi3>
 8007386:	0004      	movs	r4, r0
 8007388:	9b03      	ldr	r3, [sp, #12]
 800738a:	1be9      	subs	r1, r5, r7
 800738c:	19d8      	adds	r0, r3, r7
 800738e:	0023      	movs	r3, r4
 8007390:	e6bb      	b.n	800710a <__strftime+0x53a>
 8007392:	46c0      	nop			; (mov r8, r8)
 8007394:	0000076c 	.word	0x0000076c
 8007398:	fffff894 	.word	0xfffff894
 800739c:	0000270f 	.word	0x0000270f
 80073a0:	0800bdc5 	.word	0x0800bdc5
 80073a4:	0800bdb7 	.word	0x0800bdb7
 80073a8:	0800bdda 	.word	0x0800bdda
 80073ac:	0800be00 	.word	0x0800be00
 80073b0:	0800bde9 	.word	0x0800bde9
 80073b4:	0800bddf 	.word	0x0800bddf
 80073b8:	0800bde4 	.word	0x0800bde4
 80073bc:	1acb      	subs	r3, r1, r3
 80073be:	6971      	ldr	r1, [r6, #20]
 80073c0:	9304      	str	r3, [sp, #16]
 80073c2:	43cb      	mvns	r3, r1
 80073c4:	4a6e      	ldr	r2, [pc, #440]	; (8007580 <__strftime+0x9b0>)
 80073c6:	17db      	asrs	r3, r3, #31
 80073c8:	4013      	ands	r3, r2
 80073ca:	4a6e      	ldr	r2, [pc, #440]	; (8007584 <__strftime+0x9b4>)
 80073cc:	189b      	adds	r3, r3, r2
 80073ce:	18cb      	adds	r3, r1, r3
 80073d0:	9306      	str	r3, [sp, #24]
 80073d2:	079b      	lsls	r3, r3, #30
 80073d4:	d105      	bne.n	80073e2 <__strftime+0x812>
 80073d6:	2164      	movs	r1, #100	; 0x64
 80073d8:	9806      	ldr	r0, [sp, #24]
 80073da:	f7f9 f82b 	bl	8000434 <__aeabi_idivmod>
 80073de:	2900      	cmp	r1, #0
 80073e0:	d106      	bne.n	80073f0 <__strftime+0x820>
 80073e2:	21c8      	movs	r1, #200	; 0xc8
 80073e4:	9806      	ldr	r0, [sp, #24]
 80073e6:	0049      	lsls	r1, r1, #1
 80073e8:	f7f9 f824 	bl	8000434 <__aeabi_idivmod>
 80073ec:	424c      	negs	r4, r1
 80073ee:	414c      	adcs	r4, r1
 80073f0:	9b04      	ldr	r3, [sp, #16]
 80073f2:	1b1b      	subs	r3, r3, r4
 80073f4:	2434      	movs	r4, #52	; 0x34
 80073f6:	2b04      	cmp	r3, #4
 80073f8:	dcc6      	bgt.n	8007388 <__strftime+0x7b8>
 80073fa:	3401      	adds	r4, #1
 80073fc:	e7c4      	b.n	8007388 <__strftime+0x7b8>
 80073fe:	1e6b      	subs	r3, r5, #1
 8007400:	42bb      	cmp	r3, r7
 8007402:	d800      	bhi.n	8007406 <__strftime+0x836>
 8007404:	e476      	b.n	8006cf4 <__strftime+0x124>
 8007406:	69b3      	ldr	r3, [r6, #24]
 8007408:	3330      	adds	r3, #48	; 0x30
 800740a:	e697      	b.n	800713c <__strftime+0x56c>
 800740c:	69b2      	ldr	r2, [r6, #24]
 800740e:	2306      	movs	r3, #6
 8007410:	2a00      	cmp	r2, #0
 8007412:	d000      	beq.n	8007416 <__strftime+0x846>
 8007414:	1e53      	subs	r3, r2, #1
 8007416:	69f2      	ldr	r2, [r6, #28]
 8007418:	1dd0      	adds	r0, r2, #7
 800741a:	e797      	b.n	800734c <__strftime+0x77c>
 800741c:	6970      	ldr	r0, [r6, #20]
 800741e:	2800      	cmp	r0, #0
 8007420:	db07      	blt.n	8007432 <__strftime+0x862>
 8007422:	2164      	movs	r1, #100	; 0x64
 8007424:	f7f9 f806 	bl	8000434 <__aeabi_idivmod>
 8007428:	9b03      	ldr	r3, [sp, #12]
 800742a:	1bec      	subs	r4, r5, r7
 800742c:	19d8      	adds	r0, r3, r7
 800742e:	000b      	movs	r3, r1
 8007430:	e59e      	b.n	8006f70 <__strftime+0x3a0>
 8007432:	4b55      	ldr	r3, [pc, #340]	; (8007588 <__strftime+0x9b8>)
 8007434:	18c0      	adds	r0, r0, r3
 8007436:	f000 fd2d 	bl	8007e94 <abs>
 800743a:	e7f2      	b.n	8007422 <__strftime+0x852>
 800743c:	6974      	ldr	r4, [r6, #20]
 800743e:	4a53      	ldr	r2, [pc, #332]	; (800758c <__strftime+0x9bc>)
 8007440:	ab22      	add	r3, sp, #136	; 0x88
 8007442:	4294      	cmp	r4, r2
 8007444:	da0a      	bge.n	800745c <__strftime+0x88c>
 8007446:	212d      	movs	r1, #45	; 0x2d
 8007448:	7019      	strb	r1, [r3, #0]
 800744a:	9b06      	ldr	r3, [sp, #24]
 800744c:	1b14      	subs	r4, r2, r4
 800744e:	2b00      	cmp	r3, #0
 8007450:	d000      	beq.n	8007454 <__strftime+0x884>
 8007452:	e63b      	b.n	80070cc <__strftime+0x4fc>
 8007454:	3309      	adds	r3, #9
 8007456:	aa20      	add	r2, sp, #128	; 0x80
 8007458:	189b      	adds	r3, r3, r2
 800745a:	e5d6      	b.n	800700a <__strftime+0x43a>
 800745c:	4a4a      	ldr	r2, [pc, #296]	; (8007588 <__strftime+0x9b8>)
 800745e:	18a4      	adds	r4, r4, r2
 8007460:	9a04      	ldr	r2, [sp, #16]
 8007462:	2a2b      	cmp	r2, #43	; 0x2b
 8007464:	d000      	beq.n	8007468 <__strftime+0x898>
 8007466:	e5d0      	b.n	800700a <__strftime+0x43a>
 8007468:	4a49      	ldr	r2, [pc, #292]	; (8007590 <__strftime+0x9c0>)
 800746a:	4294      	cmp	r4, r2
 800746c:	d800      	bhi.n	8007470 <__strftime+0x8a0>
 800746e:	e080      	b.n	8007572 <__strftime+0x9a2>
 8007470:	9a04      	ldr	r2, [sp, #16]
 8007472:	e5c3      	b.n	8006ffc <__strftime+0x42c>
 8007474:	6a33      	ldr	r3, [r6, #32]
 8007476:	2b00      	cmp	r3, #0
 8007478:	da00      	bge.n	800747c <__strftime+0x8ac>
 800747a:	e45a      	b.n	8006d32 <__strftime+0x162>
 800747c:	f000 fab6 	bl	80079ec <__tz_lock>
 8007480:	9b08      	ldr	r3, [sp, #32]
 8007482:	2b00      	cmp	r3, #0
 8007484:	d101      	bne.n	800748a <__strftime+0x8ba>
 8007486:	f000 fab3 	bl	80079f0 <_tzset_unlocked>
 800748a:	f001 fd4d 	bl	8008f28 <__gettzinfo>
 800748e:	6a32      	ldr	r2, [r6, #32]
 8007490:	17d3      	asrs	r3, r2, #31
 8007492:	1a9b      	subs	r3, r3, r2
 8007494:	2228      	movs	r2, #40	; 0x28
 8007496:	0fdb      	lsrs	r3, r3, #31
 8007498:	3301      	adds	r3, #1
 800749a:	4353      	muls	r3, r2
 800749c:	581c      	ldr	r4, [r3, r0]
 800749e:	f000 faa6 	bl	80079ee <__tz_unlock>
 80074a2:	4264      	negs	r4, r4
 80074a4:	213c      	movs	r1, #60	; 0x3c
 80074a6:	0020      	movs	r0, r4
 80074a8:	f7f8 fede 	bl	8000268 <__divsi3>
 80074ac:	f001 fe0e 	bl	80090cc <labs>
 80074b0:	21e1      	movs	r1, #225	; 0xe1
 80074b2:	9006      	str	r0, [sp, #24]
 80074b4:	0109      	lsls	r1, r1, #4
 80074b6:	0020      	movs	r0, r4
 80074b8:	f7f8 fed6 	bl	8000268 <__divsi3>
 80074bc:	213c      	movs	r1, #60	; 0x3c
 80074be:	0004      	movs	r4, r0
 80074c0:	9806      	ldr	r0, [sp, #24]
 80074c2:	f7f8 ffb7 	bl	8000434 <__aeabi_idivmod>
 80074c6:	9803      	ldr	r0, [sp, #12]
 80074c8:	9100      	str	r1, [sp, #0]
 80074ca:	0023      	movs	r3, r4
 80074cc:	4a31      	ldr	r2, [pc, #196]	; (8007594 <__strftime+0x9c4>)
 80074ce:	1be9      	subs	r1, r5, r7
 80074d0:	19c0      	adds	r0, r0, r7
 80074d2:	f002 fc43 	bl	8009d5c <sniprintf>
 80074d6:	2800      	cmp	r0, #0
 80074d8:	da01      	bge.n	80074de <__strftime+0x90e>
 80074da:	f7ff fc0b 	bl	8006cf4 <__strftime+0x124>
 80074de:	183f      	adds	r7, r7, r0
 80074e0:	42bd      	cmp	r5, r7
 80074e2:	d801      	bhi.n	80074e8 <__strftime+0x918>
 80074e4:	f7ff fc06 	bl	8006cf4 <__strftime+0x124>
 80074e8:	2301      	movs	r3, #1
 80074ea:	9308      	str	r3, [sp, #32]
 80074ec:	e421      	b.n	8006d32 <__strftime+0x162>
 80074ee:	6a33      	ldr	r3, [r6, #32]
 80074f0:	2b00      	cmp	r3, #0
 80074f2:	da00      	bge.n	80074f6 <__strftime+0x926>
 80074f4:	e41d      	b.n	8006d32 <__strftime+0x162>
 80074f6:	f000 fa79 	bl	80079ec <__tz_lock>
 80074fa:	9b08      	ldr	r3, [sp, #32]
 80074fc:	2b00      	cmp	r3, #0
 80074fe:	d101      	bne.n	8007504 <__strftime+0x934>
 8007500:	f000 fa76 	bl	80079f0 <_tzset_unlocked>
 8007504:	6a32      	ldr	r2, [r6, #32]
 8007506:	17d3      	asrs	r3, r2, #31
 8007508:	1a9b      	subs	r3, r3, r2
 800750a:	0fdb      	lsrs	r3, r3, #31
 800750c:	4a22      	ldr	r2, [pc, #136]	; (8007598 <__strftime+0x9c8>)
 800750e:	009b      	lsls	r3, r3, #2
 8007510:	589b      	ldr	r3, [r3, r2]
 8007512:	0018      	movs	r0, r3
 8007514:	9306      	str	r3, [sp, #24]
 8007516:	f7f8 fdf7 	bl	8000108 <strlen>
 800751a:	9b06      	ldr	r3, [sp, #24]
 800751c:	183c      	adds	r4, r7, r0
 800751e:	1e6a      	subs	r2, r5, #1
 8007520:	1bdb      	subs	r3, r3, r7
 8007522:	42bc      	cmp	r4, r7
 8007524:	d103      	bne.n	800752e <__strftime+0x95e>
 8007526:	f000 fa62 	bl	80079ee <__tz_unlock>
 800752a:	0027      	movs	r7, r4
 800752c:	e7dc      	b.n	80074e8 <__strftime+0x918>
 800752e:	42ba      	cmp	r2, r7
 8007530:	d904      	bls.n	800753c <__strftime+0x96c>
 8007532:	5dd9      	ldrb	r1, [r3, r7]
 8007534:	9803      	ldr	r0, [sp, #12]
 8007536:	55c1      	strb	r1, [r0, r7]
 8007538:	3701      	adds	r7, #1
 800753a:	e7f2      	b.n	8007522 <__strftime+0x952>
 800753c:	f000 fa57 	bl	80079ee <__tz_unlock>
 8007540:	f7ff fbd8 	bl	8006cf4 <__strftime+0x124>
 8007544:	1e6b      	subs	r3, r5, #1
 8007546:	42bb      	cmp	r3, r7
 8007548:	d801      	bhi.n	800754e <__strftime+0x97e>
 800754a:	f7ff fbd3 	bl	8006cf4 <__strftime+0x124>
 800754e:	2225      	movs	r2, #37	; 0x25
 8007550:	9b03      	ldr	r3, [sp, #12]
 8007552:	55da      	strb	r2, [r3, r7]
 8007554:	e5f4      	b.n	8007140 <__strftime+0x570>
 8007556:	2d00      	cmp	r5, #0
 8007558:	d002      	beq.n	8007560 <__strftime+0x990>
 800755a:	2300      	movs	r3, #0
 800755c:	9a03      	ldr	r2, [sp, #12]
 800755e:	55d3      	strb	r3, [r2, r7]
 8007560:	0038      	movs	r0, r7
 8007562:	b02b      	add	sp, #172	; 0xac
 8007564:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007566:	2225      	movs	r2, #37	; 0x25
 8007568:	705a      	strb	r2, [r3, #1]
 800756a:	2309      	movs	r3, #9
 800756c:	aa20      	add	r2, sp, #128	; 0x80
 800756e:	189b      	adds	r3, r3, r2
 8007570:	e551      	b.n	8007016 <__strftime+0x446>
 8007572:	9a06      	ldr	r2, [sp, #24]
 8007574:	2a00      	cmp	r2, #0
 8007576:	d100      	bne.n	800757a <__strftime+0x9aa>
 8007578:	e547      	b.n	800700a <__strftime+0x43a>
 800757a:	2225      	movs	r2, #37	; 0x25
 800757c:	701a      	strb	r2, [r3, #0]
 800757e:	e54a      	b.n	8007016 <__strftime+0x446>
 8007580:	fffff830 	.word	0xfffff830
 8007584:	0000076b 	.word	0x0000076b
 8007588:	0000076c 	.word	0x0000076c
 800758c:	fffff894 	.word	0xfffff894
 8007590:	0000270f 	.word	0x0000270f
 8007594:	0800bdf3 	.word	0x0800bdf3
 8007598:	20000080 	.word	0x20000080

0800759c <strftime>:
 800759c:	b513      	push	{r0, r1, r4, lr}
 800759e:	4c05      	ldr	r4, [pc, #20]	; (80075b4 <strftime+0x18>)
 80075a0:	6824      	ldr	r4, [r4, #0]
 80075a2:	6a24      	ldr	r4, [r4, #32]
 80075a4:	2c00      	cmp	r4, #0
 80075a6:	d100      	bne.n	80075aa <strftime+0xe>
 80075a8:	4c03      	ldr	r4, [pc, #12]	; (80075b8 <strftime+0x1c>)
 80075aa:	9400      	str	r4, [sp, #0]
 80075ac:	f7ff fb10 	bl	8006bd0 <__strftime>
 80075b0:	bd16      	pop	{r1, r2, r4, pc}
 80075b2:	46c0      	nop			; (mov r8, r8)
 80075b4:	2000001c 	.word	0x2000001c
 80075b8:	200000e0 	.word	0x200000e0

080075bc <_strtol_l.isra.0>:
 80075bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80075be:	001f      	movs	r7, r3
 80075c0:	000e      	movs	r6, r1
 80075c2:	b087      	sub	sp, #28
 80075c4:	9005      	str	r0, [sp, #20]
 80075c6:	9101      	str	r1, [sp, #4]
 80075c8:	9202      	str	r2, [sp, #8]
 80075ca:	980c      	ldr	r0, [sp, #48]	; 0x30
 80075cc:	7834      	ldrb	r4, [r6, #0]
 80075ce:	f001 fd81 	bl	80090d4 <__locale_ctype_ptr_l>
 80075d2:	2208      	movs	r2, #8
 80075d4:	1900      	adds	r0, r0, r4
 80075d6:	7843      	ldrb	r3, [r0, #1]
 80075d8:	1c75      	adds	r5, r6, #1
 80075da:	4013      	ands	r3, r2
 80075dc:	d136      	bne.n	800764c <_strtol_l.isra.0+0x90>
 80075de:	2c2d      	cmp	r4, #45	; 0x2d
 80075e0:	d136      	bne.n	8007650 <_strtol_l.isra.0+0x94>
 80075e2:	1cb5      	adds	r5, r6, #2
 80075e4:	7874      	ldrb	r4, [r6, #1]
 80075e6:	2601      	movs	r6, #1
 80075e8:	2f00      	cmp	r7, #0
 80075ea:	d062      	beq.n	80076b2 <_strtol_l.isra.0+0xf6>
 80075ec:	2f10      	cmp	r7, #16
 80075ee:	d109      	bne.n	8007604 <_strtol_l.isra.0+0x48>
 80075f0:	2c30      	cmp	r4, #48	; 0x30
 80075f2:	d107      	bne.n	8007604 <_strtol_l.isra.0+0x48>
 80075f4:	2220      	movs	r2, #32
 80075f6:	782b      	ldrb	r3, [r5, #0]
 80075f8:	4393      	bics	r3, r2
 80075fa:	2b58      	cmp	r3, #88	; 0x58
 80075fc:	d154      	bne.n	80076a8 <_strtol_l.isra.0+0xec>
 80075fe:	2710      	movs	r7, #16
 8007600:	786c      	ldrb	r4, [r5, #1]
 8007602:	3502      	adds	r5, #2
 8007604:	4b2d      	ldr	r3, [pc, #180]	; (80076bc <_strtol_l.isra.0+0x100>)
 8007606:	0039      	movs	r1, r7
 8007608:	18f3      	adds	r3, r6, r3
 800760a:	0018      	movs	r0, r3
 800760c:	9303      	str	r3, [sp, #12]
 800760e:	f7f8 fe27 	bl	8000260 <__aeabi_uidivmod>
 8007612:	9104      	str	r1, [sp, #16]
 8007614:	2101      	movs	r1, #1
 8007616:	2300      	movs	r3, #0
 8007618:	4249      	negs	r1, r1
 800761a:	0002      	movs	r2, r0
 800761c:	468c      	mov	ip, r1
 800761e:	0018      	movs	r0, r3
 8007620:	0021      	movs	r1, r4
 8007622:	3930      	subs	r1, #48	; 0x30
 8007624:	2909      	cmp	r1, #9
 8007626:	d81a      	bhi.n	800765e <_strtol_l.isra.0+0xa2>
 8007628:	000c      	movs	r4, r1
 800762a:	42a7      	cmp	r7, r4
 800762c:	dd23      	ble.n	8007676 <_strtol_l.isra.0+0xba>
 800762e:	1c59      	adds	r1, r3, #1
 8007630:	d009      	beq.n	8007646 <_strtol_l.isra.0+0x8a>
 8007632:	4663      	mov	r3, ip
 8007634:	4282      	cmp	r2, r0
 8007636:	d306      	bcc.n	8007646 <_strtol_l.isra.0+0x8a>
 8007638:	d102      	bne.n	8007640 <_strtol_l.isra.0+0x84>
 800763a:	9904      	ldr	r1, [sp, #16]
 800763c:	42a1      	cmp	r1, r4
 800763e:	db02      	blt.n	8007646 <_strtol_l.isra.0+0x8a>
 8007640:	2301      	movs	r3, #1
 8007642:	4378      	muls	r0, r7
 8007644:	1820      	adds	r0, r4, r0
 8007646:	782c      	ldrb	r4, [r5, #0]
 8007648:	3501      	adds	r5, #1
 800764a:	e7e9      	b.n	8007620 <_strtol_l.isra.0+0x64>
 800764c:	002e      	movs	r6, r5
 800764e:	e7bc      	b.n	80075ca <_strtol_l.isra.0+0xe>
 8007650:	2c2b      	cmp	r4, #43	; 0x2b
 8007652:	d001      	beq.n	8007658 <_strtol_l.isra.0+0x9c>
 8007654:	001e      	movs	r6, r3
 8007656:	e7c7      	b.n	80075e8 <_strtol_l.isra.0+0x2c>
 8007658:	1cb5      	adds	r5, r6, #2
 800765a:	7874      	ldrb	r4, [r6, #1]
 800765c:	e7fa      	b.n	8007654 <_strtol_l.isra.0+0x98>
 800765e:	0021      	movs	r1, r4
 8007660:	3941      	subs	r1, #65	; 0x41
 8007662:	2919      	cmp	r1, #25
 8007664:	d801      	bhi.n	800766a <_strtol_l.isra.0+0xae>
 8007666:	3c37      	subs	r4, #55	; 0x37
 8007668:	e7df      	b.n	800762a <_strtol_l.isra.0+0x6e>
 800766a:	0021      	movs	r1, r4
 800766c:	3961      	subs	r1, #97	; 0x61
 800766e:	2919      	cmp	r1, #25
 8007670:	d801      	bhi.n	8007676 <_strtol_l.isra.0+0xba>
 8007672:	3c57      	subs	r4, #87	; 0x57
 8007674:	e7d9      	b.n	800762a <_strtol_l.isra.0+0x6e>
 8007676:	1c5a      	adds	r2, r3, #1
 8007678:	d108      	bne.n	800768c <_strtol_l.isra.0+0xd0>
 800767a:	9a05      	ldr	r2, [sp, #20]
 800767c:	3323      	adds	r3, #35	; 0x23
 800767e:	6013      	str	r3, [r2, #0]
 8007680:	9b02      	ldr	r3, [sp, #8]
 8007682:	9803      	ldr	r0, [sp, #12]
 8007684:	2b00      	cmp	r3, #0
 8007686:	d109      	bne.n	800769c <_strtol_l.isra.0+0xe0>
 8007688:	b007      	add	sp, #28
 800768a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800768c:	2e00      	cmp	r6, #0
 800768e:	d000      	beq.n	8007692 <_strtol_l.isra.0+0xd6>
 8007690:	4240      	negs	r0, r0
 8007692:	9a02      	ldr	r2, [sp, #8]
 8007694:	2a00      	cmp	r2, #0
 8007696:	d0f7      	beq.n	8007688 <_strtol_l.isra.0+0xcc>
 8007698:	2b00      	cmp	r3, #0
 800769a:	d001      	beq.n	80076a0 <_strtol_l.isra.0+0xe4>
 800769c:	1e6b      	subs	r3, r5, #1
 800769e:	9301      	str	r3, [sp, #4]
 80076a0:	9b02      	ldr	r3, [sp, #8]
 80076a2:	9a01      	ldr	r2, [sp, #4]
 80076a4:	601a      	str	r2, [r3, #0]
 80076a6:	e7ef      	b.n	8007688 <_strtol_l.isra.0+0xcc>
 80076a8:	2430      	movs	r4, #48	; 0x30
 80076aa:	2f00      	cmp	r7, #0
 80076ac:	d1aa      	bne.n	8007604 <_strtol_l.isra.0+0x48>
 80076ae:	2708      	movs	r7, #8
 80076b0:	e7a8      	b.n	8007604 <_strtol_l.isra.0+0x48>
 80076b2:	2c30      	cmp	r4, #48	; 0x30
 80076b4:	d09e      	beq.n	80075f4 <_strtol_l.isra.0+0x38>
 80076b6:	270a      	movs	r7, #10
 80076b8:	e7a4      	b.n	8007604 <_strtol_l.isra.0+0x48>
 80076ba:	46c0      	nop			; (mov r8, r8)
 80076bc:	7fffffff 	.word	0x7fffffff

080076c0 <_strtol_r>:
 80076c0:	b513      	push	{r0, r1, r4, lr}
 80076c2:	4c05      	ldr	r4, [pc, #20]	; (80076d8 <_strtol_r+0x18>)
 80076c4:	6824      	ldr	r4, [r4, #0]
 80076c6:	6a24      	ldr	r4, [r4, #32]
 80076c8:	2c00      	cmp	r4, #0
 80076ca:	d100      	bne.n	80076ce <_strtol_r+0xe>
 80076cc:	4c03      	ldr	r4, [pc, #12]	; (80076dc <_strtol_r+0x1c>)
 80076ce:	9400      	str	r4, [sp, #0]
 80076d0:	f7ff ff74 	bl	80075bc <_strtol_l.isra.0>
 80076d4:	bd16      	pop	{r1, r2, r4, pc}
 80076d6:	46c0      	nop			; (mov r8, r8)
 80076d8:	2000001c 	.word	0x2000001c
 80076dc:	200000e0 	.word	0x200000e0

080076e0 <strtol>:
 80076e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80076e2:	0013      	movs	r3, r2
 80076e4:	4a06      	ldr	r2, [pc, #24]	; (8007700 <strtol+0x20>)
 80076e6:	0005      	movs	r5, r0
 80076e8:	6810      	ldr	r0, [r2, #0]
 80076ea:	6a04      	ldr	r4, [r0, #32]
 80076ec:	2c00      	cmp	r4, #0
 80076ee:	d100      	bne.n	80076f2 <strtol+0x12>
 80076f0:	4c04      	ldr	r4, [pc, #16]	; (8007704 <strtol+0x24>)
 80076f2:	000a      	movs	r2, r1
 80076f4:	9400      	str	r4, [sp, #0]
 80076f6:	0029      	movs	r1, r5
 80076f8:	f7ff ff60 	bl	80075bc <_strtol_l.isra.0>
 80076fc:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 80076fe:	46c0      	nop			; (mov r8, r8)
 8007700:	2000001c 	.word	0x2000001c
 8007704:	200000e0 	.word	0x200000e0

08007708 <_strtoul_l.isra.0>:
 8007708:	b5f0      	push	{r4, r5, r6, r7, lr}
 800770a:	001f      	movs	r7, r3
 800770c:	000e      	movs	r6, r1
 800770e:	b085      	sub	sp, #20
 8007710:	9003      	str	r0, [sp, #12]
 8007712:	9101      	str	r1, [sp, #4]
 8007714:	9202      	str	r2, [sp, #8]
 8007716:	980a      	ldr	r0, [sp, #40]	; 0x28
 8007718:	7834      	ldrb	r4, [r6, #0]
 800771a:	f001 fcdb 	bl	80090d4 <__locale_ctype_ptr_l>
 800771e:	2208      	movs	r2, #8
 8007720:	1900      	adds	r0, r0, r4
 8007722:	7843      	ldrb	r3, [r0, #1]
 8007724:	1c75      	adds	r5, r6, #1
 8007726:	4013      	ands	r3, r2
 8007728:	d138      	bne.n	800779c <_strtoul_l.isra.0+0x94>
 800772a:	2c2d      	cmp	r4, #45	; 0x2d
 800772c:	d138      	bne.n	80077a0 <_strtoul_l.isra.0+0x98>
 800772e:	7874      	ldrb	r4, [r6, #1]
 8007730:	1cb5      	adds	r5, r6, #2
 8007732:	3301      	adds	r3, #1
 8007734:	9300      	str	r3, [sp, #0]
 8007736:	2f00      	cmp	r7, #0
 8007738:	d065      	beq.n	8007806 <_strtoul_l.isra.0+0xfe>
 800773a:	2f10      	cmp	r7, #16
 800773c:	d109      	bne.n	8007752 <_strtoul_l.isra.0+0x4a>
 800773e:	2c30      	cmp	r4, #48	; 0x30
 8007740:	d107      	bne.n	8007752 <_strtoul_l.isra.0+0x4a>
 8007742:	2220      	movs	r2, #32
 8007744:	782b      	ldrb	r3, [r5, #0]
 8007746:	4393      	bics	r3, r2
 8007748:	2b58      	cmp	r3, #88	; 0x58
 800774a:	d157      	bne.n	80077fc <_strtoul_l.isra.0+0xf4>
 800774c:	2710      	movs	r7, #16
 800774e:	786c      	ldrb	r4, [r5, #1]
 8007750:	3502      	adds	r5, #2
 8007752:	2001      	movs	r0, #1
 8007754:	0039      	movs	r1, r7
 8007756:	4240      	negs	r0, r0
 8007758:	f7f8 fcfc 	bl	8000154 <__udivsi3>
 800775c:	0006      	movs	r6, r0
 800775e:	2001      	movs	r0, #1
 8007760:	0039      	movs	r1, r7
 8007762:	4240      	negs	r0, r0
 8007764:	f7f8 fd7c 	bl	8000260 <__aeabi_uidivmod>
 8007768:	2300      	movs	r3, #0
 800776a:	2201      	movs	r2, #1
 800776c:	468c      	mov	ip, r1
 800776e:	0018      	movs	r0, r3
 8007770:	4252      	negs	r2, r2
 8007772:	0021      	movs	r1, r4
 8007774:	3930      	subs	r1, #48	; 0x30
 8007776:	2909      	cmp	r1, #9
 8007778:	d817      	bhi.n	80077aa <_strtoul_l.isra.0+0xa2>
 800777a:	000c      	movs	r4, r1
 800777c:	42a7      	cmp	r7, r4
 800777e:	dd22      	ble.n	80077c6 <_strtoul_l.isra.0+0xbe>
 8007780:	2b00      	cmp	r3, #0
 8007782:	db1e      	blt.n	80077c2 <_strtoul_l.isra.0+0xba>
 8007784:	0013      	movs	r3, r2
 8007786:	4286      	cmp	r6, r0
 8007788:	d305      	bcc.n	8007796 <_strtoul_l.isra.0+0x8e>
 800778a:	d101      	bne.n	8007790 <_strtoul_l.isra.0+0x88>
 800778c:	45a4      	cmp	ip, r4
 800778e:	db02      	blt.n	8007796 <_strtoul_l.isra.0+0x8e>
 8007790:	2301      	movs	r3, #1
 8007792:	4378      	muls	r0, r7
 8007794:	1820      	adds	r0, r4, r0
 8007796:	782c      	ldrb	r4, [r5, #0]
 8007798:	3501      	adds	r5, #1
 800779a:	e7ea      	b.n	8007772 <_strtoul_l.isra.0+0x6a>
 800779c:	002e      	movs	r6, r5
 800779e:	e7ba      	b.n	8007716 <_strtoul_l.isra.0+0xe>
 80077a0:	2c2b      	cmp	r4, #43	; 0x2b
 80077a2:	d1c7      	bne.n	8007734 <_strtoul_l.isra.0+0x2c>
 80077a4:	1cb5      	adds	r5, r6, #2
 80077a6:	7874      	ldrb	r4, [r6, #1]
 80077a8:	e7c4      	b.n	8007734 <_strtoul_l.isra.0+0x2c>
 80077aa:	0021      	movs	r1, r4
 80077ac:	3941      	subs	r1, #65	; 0x41
 80077ae:	2919      	cmp	r1, #25
 80077b0:	d801      	bhi.n	80077b6 <_strtoul_l.isra.0+0xae>
 80077b2:	3c37      	subs	r4, #55	; 0x37
 80077b4:	e7e2      	b.n	800777c <_strtoul_l.isra.0+0x74>
 80077b6:	0021      	movs	r1, r4
 80077b8:	3961      	subs	r1, #97	; 0x61
 80077ba:	2919      	cmp	r1, #25
 80077bc:	d803      	bhi.n	80077c6 <_strtoul_l.isra.0+0xbe>
 80077be:	3c57      	subs	r4, #87	; 0x57
 80077c0:	e7dc      	b.n	800777c <_strtoul_l.isra.0+0x74>
 80077c2:	0013      	movs	r3, r2
 80077c4:	e7e7      	b.n	8007796 <_strtoul_l.isra.0+0x8e>
 80077c6:	2b00      	cmp	r3, #0
 80077c8:	da09      	bge.n	80077de <_strtoul_l.isra.0+0xd6>
 80077ca:	2322      	movs	r3, #34	; 0x22
 80077cc:	2001      	movs	r0, #1
 80077ce:	9a03      	ldr	r2, [sp, #12]
 80077d0:	4240      	negs	r0, r0
 80077d2:	6013      	str	r3, [r2, #0]
 80077d4:	9b02      	ldr	r3, [sp, #8]
 80077d6:	2b00      	cmp	r3, #0
 80077d8:	d10a      	bne.n	80077f0 <_strtoul_l.isra.0+0xe8>
 80077da:	b005      	add	sp, #20
 80077dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80077de:	9a00      	ldr	r2, [sp, #0]
 80077e0:	2a00      	cmp	r2, #0
 80077e2:	d000      	beq.n	80077e6 <_strtoul_l.isra.0+0xde>
 80077e4:	4240      	negs	r0, r0
 80077e6:	9a02      	ldr	r2, [sp, #8]
 80077e8:	2a00      	cmp	r2, #0
 80077ea:	d0f6      	beq.n	80077da <_strtoul_l.isra.0+0xd2>
 80077ec:	2b00      	cmp	r3, #0
 80077ee:	d001      	beq.n	80077f4 <_strtoul_l.isra.0+0xec>
 80077f0:	1e6b      	subs	r3, r5, #1
 80077f2:	9301      	str	r3, [sp, #4]
 80077f4:	9b02      	ldr	r3, [sp, #8]
 80077f6:	9a01      	ldr	r2, [sp, #4]
 80077f8:	601a      	str	r2, [r3, #0]
 80077fa:	e7ee      	b.n	80077da <_strtoul_l.isra.0+0xd2>
 80077fc:	2430      	movs	r4, #48	; 0x30
 80077fe:	2f00      	cmp	r7, #0
 8007800:	d1a7      	bne.n	8007752 <_strtoul_l.isra.0+0x4a>
 8007802:	2708      	movs	r7, #8
 8007804:	e7a5      	b.n	8007752 <_strtoul_l.isra.0+0x4a>
 8007806:	2c30      	cmp	r4, #48	; 0x30
 8007808:	d09b      	beq.n	8007742 <_strtoul_l.isra.0+0x3a>
 800780a:	270a      	movs	r7, #10
 800780c:	e7a1      	b.n	8007752 <_strtoul_l.isra.0+0x4a>
	...

08007810 <_strtoul_r>:
 8007810:	b513      	push	{r0, r1, r4, lr}
 8007812:	4c05      	ldr	r4, [pc, #20]	; (8007828 <_strtoul_r+0x18>)
 8007814:	6824      	ldr	r4, [r4, #0]
 8007816:	6a24      	ldr	r4, [r4, #32]
 8007818:	2c00      	cmp	r4, #0
 800781a:	d100      	bne.n	800781e <_strtoul_r+0xe>
 800781c:	4c03      	ldr	r4, [pc, #12]	; (800782c <_strtoul_r+0x1c>)
 800781e:	9400      	str	r4, [sp, #0]
 8007820:	f7ff ff72 	bl	8007708 <_strtoul_l.isra.0>
 8007824:	bd16      	pop	{r1, r2, r4, pc}
 8007826:	46c0      	nop			; (mov r8, r8)
 8007828:	2000001c 	.word	0x2000001c
 800782c:	200000e0 	.word	0x200000e0

08007830 <strtoul>:
 8007830:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007832:	0013      	movs	r3, r2
 8007834:	4a06      	ldr	r2, [pc, #24]	; (8007850 <strtoul+0x20>)
 8007836:	0005      	movs	r5, r0
 8007838:	6810      	ldr	r0, [r2, #0]
 800783a:	6a04      	ldr	r4, [r0, #32]
 800783c:	2c00      	cmp	r4, #0
 800783e:	d100      	bne.n	8007842 <strtoul+0x12>
 8007840:	4c04      	ldr	r4, [pc, #16]	; (8007854 <strtoul+0x24>)
 8007842:	000a      	movs	r2, r1
 8007844:	9400      	str	r4, [sp, #0]
 8007846:	0029      	movs	r1, r5
 8007848:	f7ff ff5e 	bl	8007708 <_strtoul_l.isra.0>
 800784c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800784e:	46c0      	nop			; (mov r8, r8)
 8007850:	2000001c 	.word	0x2000001c
 8007854:	200000e0 	.word	0x200000e0

08007858 <time>:
 8007858:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800785a:	4b0b      	ldr	r3, [pc, #44]	; (8007888 <time+0x30>)
 800785c:	0004      	movs	r4, r0
 800785e:	2200      	movs	r2, #0
 8007860:	4669      	mov	r1, sp
 8007862:	6818      	ldr	r0, [r3, #0]
 8007864:	f001 fb4e 	bl	8008f04 <_gettimeofday_r>
 8007868:	2800      	cmp	r0, #0
 800786a:	da04      	bge.n	8007876 <time+0x1e>
 800786c:	2201      	movs	r2, #1
 800786e:	4252      	negs	r2, r2
 8007870:	17d3      	asrs	r3, r2, #31
 8007872:	9200      	str	r2, [sp, #0]
 8007874:	9301      	str	r3, [sp, #4]
 8007876:	9800      	ldr	r0, [sp, #0]
 8007878:	9901      	ldr	r1, [sp, #4]
 800787a:	2c00      	cmp	r4, #0
 800787c:	d001      	beq.n	8007882 <time+0x2a>
 800787e:	6020      	str	r0, [r4, #0]
 8007880:	6061      	str	r1, [r4, #4]
 8007882:	b004      	add	sp, #16
 8007884:	bd10      	pop	{r4, pc}
 8007886:	46c0      	nop			; (mov r8, r8)
 8007888:	2000001c 	.word	0x2000001c

0800788c <__tzcalc_limits>:
 800788c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800788e:	b089      	sub	sp, #36	; 0x24
 8007890:	0004      	movs	r4, r0
 8007892:	f001 fb49 	bl	8008f28 <__gettzinfo>
 8007896:	4b4e      	ldr	r3, [pc, #312]	; (80079d0 <__tzcalc_limits+0x144>)
 8007898:	0006      	movs	r6, r0
 800789a:	2000      	movs	r0, #0
 800789c:	429c      	cmp	r4, r3
 800789e:	dd5f      	ble.n	8007960 <__tzcalc_limits+0xd4>
 80078a0:	256e      	movs	r5, #110	; 0x6e
 80078a2:	2164      	movs	r1, #100	; 0x64
 80078a4:	4b4b      	ldr	r3, [pc, #300]	; (80079d4 <__tzcalc_limits+0x148>)
 80078a6:	35ff      	adds	r5, #255	; 0xff
 80078a8:	18e0      	adds	r0, r4, r3
 80078aa:	4345      	muls	r5, r0
 80078ac:	4b4a      	ldr	r3, [pc, #296]	; (80079d8 <__tzcalc_limits+0x14c>)
 80078ae:	6074      	str	r4, [r6, #4]
 80078b0:	18e0      	adds	r0, r4, r3
 80078b2:	4b4a      	ldr	r3, [pc, #296]	; (80079dc <__tzcalc_limits+0x150>)
 80078b4:	1080      	asrs	r0, r0, #2
 80078b6:	182d      	adds	r5, r5, r0
 80078b8:	4249      	negs	r1, r1
 80078ba:	18e0      	adds	r0, r4, r3
 80078bc:	f7f8 fcd4 	bl	8000268 <__divsi3>
 80078c0:	21c8      	movs	r1, #200	; 0xc8
 80078c2:	4b47      	ldr	r3, [pc, #284]	; (80079e0 <__tzcalc_limits+0x154>)
 80078c4:	182d      	adds	r5, r5, r0
 80078c6:	0049      	lsls	r1, r1, #1
 80078c8:	18e0      	adds	r0, r4, r3
 80078ca:	f7f8 fccd 	bl	8000268 <__divsi3>
 80078ce:	2164      	movs	r1, #100	; 0x64
 80078d0:	182b      	adds	r3, r5, r0
 80078d2:	0020      	movs	r0, r4
 80078d4:	9300      	str	r3, [sp, #0]
 80078d6:	f7f8 fdad 	bl	8000434 <__aeabi_idivmod>
 80078da:	9101      	str	r1, [sp, #4]
 80078dc:	21c8      	movs	r1, #200	; 0xc8
 80078de:	0020      	movs	r0, r4
 80078e0:	0049      	lsls	r1, r1, #1
 80078e2:	f7f8 fda7 	bl	8000434 <__aeabi_idivmod>
 80078e6:	000a      	movs	r2, r1
 80078e8:	4253      	negs	r3, r2
 80078ea:	415a      	adcs	r2, r3
 80078ec:	0033      	movs	r3, r6
 80078ee:	3358      	adds	r3, #88	; 0x58
 80078f0:	9307      	str	r3, [sp, #28]
 80078f2:	2303      	movs	r3, #3
 80078f4:	0035      	movs	r5, r6
 80078f6:	401c      	ands	r4, r3
 80078f8:	9102      	str	r1, [sp, #8]
 80078fa:	9204      	str	r2, [sp, #16]
 80078fc:	3508      	adds	r5, #8
 80078fe:	9405      	str	r4, [sp, #20]
 8007900:	782b      	ldrb	r3, [r5, #0]
 8007902:	68ef      	ldr	r7, [r5, #12]
 8007904:	2b4a      	cmp	r3, #74	; 0x4a
 8007906:	d12d      	bne.n	8007964 <__tzcalc_limits+0xd8>
 8007908:	9b00      	ldr	r3, [sp, #0]
 800790a:	19dc      	adds	r4, r3, r7
 800790c:	9b05      	ldr	r3, [sp, #20]
 800790e:	2b00      	cmp	r3, #0
 8007910:	d102      	bne.n	8007918 <__tzcalc_limits+0x8c>
 8007912:	9b01      	ldr	r3, [sp, #4]
 8007914:	2b00      	cmp	r3, #0
 8007916:	d103      	bne.n	8007920 <__tzcalc_limits+0x94>
 8007918:	2100      	movs	r1, #0
 800791a:	9b02      	ldr	r3, [sp, #8]
 800791c:	428b      	cmp	r3, r1
 800791e:	d103      	bne.n	8007928 <__tzcalc_limits+0x9c>
 8007920:	2101      	movs	r1, #1
 8007922:	2f3b      	cmp	r7, #59	; 0x3b
 8007924:	dc00      	bgt.n	8007928 <__tzcalc_limits+0x9c>
 8007926:	2100      	movs	r1, #0
 8007928:	1864      	adds	r4, r4, r1
 800792a:	3c01      	subs	r4, #1
 800792c:	492d      	ldr	r1, [pc, #180]	; (80079e4 <__tzcalc_limits+0x158>)
 800792e:	692b      	ldr	r3, [r5, #16]
 8007930:	434c      	muls	r4, r1
 8007932:	18e4      	adds	r4, r4, r3
 8007934:	6a2b      	ldr	r3, [r5, #32]
 8007936:	18e4      	adds	r4, r4, r3
 8007938:	61ac      	str	r4, [r5, #24]
 800793a:	9b07      	ldr	r3, [sp, #28]
 800793c:	17e4      	asrs	r4, r4, #31
 800793e:	61ec      	str	r4, [r5, #28]
 8007940:	3528      	adds	r5, #40	; 0x28
 8007942:	42ab      	cmp	r3, r5
 8007944:	d1dc      	bne.n	8007900 <__tzcalc_limits+0x74>
 8007946:	6cf1      	ldr	r1, [r6, #76]	; 0x4c
 8007948:	6a72      	ldr	r2, [r6, #36]	; 0x24
 800794a:	2301      	movs	r3, #1
 800794c:	4291      	cmp	r1, r2
 800794e:	dc05      	bgt.n	800795c <__tzcalc_limits+0xd0>
 8007950:	d103      	bne.n	800795a <__tzcalc_limits+0xce>
 8007952:	6cb2      	ldr	r2, [r6, #72]	; 0x48
 8007954:	6a31      	ldr	r1, [r6, #32]
 8007956:	428a      	cmp	r2, r1
 8007958:	d800      	bhi.n	800795c <__tzcalc_limits+0xd0>
 800795a:	2300      	movs	r3, #0
 800795c:	2001      	movs	r0, #1
 800795e:	6033      	str	r3, [r6, #0]
 8007960:	b009      	add	sp, #36	; 0x24
 8007962:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007964:	2b44      	cmp	r3, #68	; 0x44
 8007966:	d102      	bne.n	800796e <__tzcalc_limits+0xe2>
 8007968:	9b00      	ldr	r3, [sp, #0]
 800796a:	19dc      	adds	r4, r3, r7
 800796c:	e7de      	b.n	800792c <__tzcalc_limits+0xa0>
 800796e:	9b05      	ldr	r3, [sp, #20]
 8007970:	9a04      	ldr	r2, [sp, #16]
 8007972:	2b00      	cmp	r3, #0
 8007974:	d103      	bne.n	800797e <__tzcalc_limits+0xf2>
 8007976:	9b01      	ldr	r3, [sp, #4]
 8007978:	2b00      	cmp	r3, #0
 800797a:	d000      	beq.n	800797e <__tzcalc_limits+0xf2>
 800797c:	2201      	movs	r2, #1
 800797e:	2330      	movs	r3, #48	; 0x30
 8007980:	4353      	muls	r3, r2
 8007982:	9306      	str	r3, [sp, #24]
 8007984:	4b18      	ldr	r3, [pc, #96]	; (80079e8 <__tzcalc_limits+0x15c>)
 8007986:	2100      	movs	r1, #0
 8007988:	469c      	mov	ip, r3
 800798a:	6868      	ldr	r0, [r5, #4]
 800798c:	9c00      	ldr	r4, [sp, #0]
 800798e:	9a06      	ldr	r2, [sp, #24]
 8007990:	3101      	adds	r1, #1
 8007992:	008b      	lsls	r3, r1, #2
 8007994:	189b      	adds	r3, r3, r2
 8007996:	4662      	mov	r2, ip
 8007998:	3b04      	subs	r3, #4
 800799a:	58d3      	ldr	r3, [r2, r3]
 800799c:	9303      	str	r3, [sp, #12]
 800799e:	4288      	cmp	r0, r1
 80079a0:	dc10      	bgt.n	80079c4 <__tzcalc_limits+0x138>
 80079a2:	1d20      	adds	r0, r4, #4
 80079a4:	2107      	movs	r1, #7
 80079a6:	f7f8 fd45 	bl	8000434 <__aeabi_idivmod>
 80079aa:	1a79      	subs	r1, r7, r1
 80079ac:	d500      	bpl.n	80079b0 <__tzcalc_limits+0x124>
 80079ae:	3107      	adds	r1, #7
 80079b0:	68ab      	ldr	r3, [r5, #8]
 80079b2:	1e5a      	subs	r2, r3, #1
 80079b4:	2307      	movs	r3, #7
 80079b6:	4353      	muls	r3, r2
 80079b8:	1859      	adds	r1, r3, r1
 80079ba:	9b03      	ldr	r3, [sp, #12]
 80079bc:	4299      	cmp	r1, r3
 80079be:	da04      	bge.n	80079ca <__tzcalc_limits+0x13e>
 80079c0:	1864      	adds	r4, r4, r1
 80079c2:	e7b3      	b.n	800792c <__tzcalc_limits+0xa0>
 80079c4:	9b03      	ldr	r3, [sp, #12]
 80079c6:	18e4      	adds	r4, r4, r3
 80079c8:	e7e1      	b.n	800798e <__tzcalc_limits+0x102>
 80079ca:	3907      	subs	r1, #7
 80079cc:	e7f5      	b.n	80079ba <__tzcalc_limits+0x12e>
 80079ce:	46c0      	nop			; (mov r8, r8)
 80079d0:	000007b1 	.word	0x000007b1
 80079d4:	fffff84e 	.word	0xfffff84e
 80079d8:	fffff84f 	.word	0xfffff84f
 80079dc:	fffff893 	.word	0xfffff893
 80079e0:	fffff9bf 	.word	0xfffff9bf
 80079e4:	00015180 	.word	0x00015180
 80079e8:	0800bd14 	.word	0x0800bd14

080079ec <__tz_lock>:
 80079ec:	4770      	bx	lr

080079ee <__tz_unlock>:
 80079ee:	4770      	bx	lr

080079f0 <_tzset_unlocked>:
 80079f0:	b510      	push	{r4, lr}
 80079f2:	4b02      	ldr	r3, [pc, #8]	; (80079fc <_tzset_unlocked+0xc>)
 80079f4:	6818      	ldr	r0, [r3, #0]
 80079f6:	f000 f803 	bl	8007a00 <_tzset_unlocked_r>
 80079fa:	bd10      	pop	{r4, pc}
 80079fc:	2000001c 	.word	0x2000001c

08007a00 <_tzset_unlocked_r>:
 8007a00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007a02:	b08d      	sub	sp, #52	; 0x34
 8007a04:	0007      	movs	r7, r0
 8007a06:	f001 fa8f 	bl	8008f28 <__gettzinfo>
 8007a0a:	49af      	ldr	r1, [pc, #700]	; (8007cc8 <_tzset_unlocked_r+0x2c8>)
 8007a0c:	0006      	movs	r6, r0
 8007a0e:	0038      	movs	r0, r7
 8007a10:	f001 fa72 	bl	8008ef8 <_getenv_r>
 8007a14:	4dad      	ldr	r5, [pc, #692]	; (8007ccc <_tzset_unlocked_r+0x2cc>)
 8007a16:	1e04      	subs	r4, r0, #0
 8007a18:	d10d      	bne.n	8007a36 <_tzset_unlocked_r+0x36>
 8007a1a:	4bad      	ldr	r3, [pc, #692]	; (8007cd0 <_tzset_unlocked_r+0x2d0>)
 8007a1c:	4aad      	ldr	r2, [pc, #692]	; (8007cd4 <_tzset_unlocked_r+0x2d4>)
 8007a1e:	6018      	str	r0, [r3, #0]
 8007a20:	4bad      	ldr	r3, [pc, #692]	; (8007cd8 <_tzset_unlocked_r+0x2d8>)
 8007a22:	6018      	str	r0, [r3, #0]
 8007a24:	4bad      	ldr	r3, [pc, #692]	; (8007cdc <_tzset_unlocked_r+0x2dc>)
 8007a26:	6828      	ldr	r0, [r5, #0]
 8007a28:	601a      	str	r2, [r3, #0]
 8007a2a:	605a      	str	r2, [r3, #4]
 8007a2c:	f7fe fa98 	bl	8005f60 <free>
 8007a30:	602c      	str	r4, [r5, #0]
 8007a32:	b00d      	add	sp, #52	; 0x34
 8007a34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007a36:	6829      	ldr	r1, [r5, #0]
 8007a38:	2900      	cmp	r1, #0
 8007a3a:	d159      	bne.n	8007af0 <_tzset_unlocked_r+0xf0>
 8007a3c:	6828      	ldr	r0, [r5, #0]
 8007a3e:	f7fe fa8f 	bl	8005f60 <free>
 8007a42:	0020      	movs	r0, r4
 8007a44:	f7f8 fb60 	bl	8000108 <strlen>
 8007a48:	1c41      	adds	r1, r0, #1
 8007a4a:	0038      	movs	r0, r7
 8007a4c:	f7fe fae4 	bl	8006018 <_malloc_r>
 8007a50:	6028      	str	r0, [r5, #0]
 8007a52:	2800      	cmp	r0, #0
 8007a54:	d151      	bne.n	8007afa <_tzset_unlocked_r+0xfa>
 8007a56:	7823      	ldrb	r3, [r4, #0]
 8007a58:	49a1      	ldr	r1, [pc, #644]	; (8007ce0 <_tzset_unlocked_r+0x2e0>)
 8007a5a:	3b3a      	subs	r3, #58	; 0x3a
 8007a5c:	425a      	negs	r2, r3
 8007a5e:	4153      	adcs	r3, r2
 8007a60:	18e4      	adds	r4, r4, r3
 8007a62:	4aa0      	ldr	r2, [pc, #640]	; (8007ce4 <_tzset_unlocked_r+0x2e4>)
 8007a64:	ab0a      	add	r3, sp, #40	; 0x28
 8007a66:	0020      	movs	r0, r4
 8007a68:	f002 f9aa 	bl	8009dc0 <siscanf>
 8007a6c:	2800      	cmp	r0, #0
 8007a6e:	dde0      	ble.n	8007a32 <_tzset_unlocked_r+0x32>
 8007a70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007a72:	18e4      	adds	r4, r4, r3
 8007a74:	7823      	ldrb	r3, [r4, #0]
 8007a76:	2b2d      	cmp	r3, #45	; 0x2d
 8007a78:	d143      	bne.n	8007b02 <_tzset_unlocked_r+0x102>
 8007a7a:	3b2e      	subs	r3, #46	; 0x2e
 8007a7c:	3401      	adds	r4, #1
 8007a7e:	9304      	str	r3, [sp, #16]
 8007a80:	2716      	movs	r7, #22
 8007a82:	ab02      	add	r3, sp, #8
 8007a84:	18ff      	adds	r7, r7, r3
 8007a86:	2300      	movs	r3, #0
 8007a88:	ad08      	add	r5, sp, #32
 8007a8a:	803b      	strh	r3, [r7, #0]
 8007a8c:	802b      	strh	r3, [r5, #0]
 8007a8e:	ab0a      	add	r3, sp, #40	; 0x28
 8007a90:	9303      	str	r3, [sp, #12]
 8007a92:	9502      	str	r5, [sp, #8]
 8007a94:	9301      	str	r3, [sp, #4]
 8007a96:	9700      	str	r7, [sp, #0]
 8007a98:	aa07      	add	r2, sp, #28
 8007a9a:	4993      	ldr	r1, [pc, #588]	; (8007ce8 <_tzset_unlocked_r+0x2e8>)
 8007a9c:	0020      	movs	r0, r4
 8007a9e:	f002 f98f 	bl	8009dc0 <siscanf>
 8007aa2:	2800      	cmp	r0, #0
 8007aa4:	ddc5      	ble.n	8007a32 <_tzset_unlocked_r+0x32>
 8007aa6:	233c      	movs	r3, #60	; 0x3c
 8007aa8:	883a      	ldrh	r2, [r7, #0]
 8007aaa:	4f90      	ldr	r7, [pc, #576]	; (8007cec <_tzset_unlocked_r+0x2ec>)
 8007aac:	4353      	muls	r3, r2
 8007aae:	882a      	ldrh	r2, [r5, #0]
 8007ab0:	4d8a      	ldr	r5, [pc, #552]	; (8007cdc <_tzset_unlocked_r+0x2dc>)
 8007ab2:	189b      	adds	r3, r3, r2
 8007ab4:	aa02      	add	r2, sp, #8
 8007ab6:	8a91      	ldrh	r1, [r2, #20]
 8007ab8:	22e1      	movs	r2, #225	; 0xe1
 8007aba:	0112      	lsls	r2, r2, #4
 8007abc:	434a      	muls	r2, r1
 8007abe:	189b      	adds	r3, r3, r2
 8007ac0:	9a04      	ldr	r2, [sp, #16]
 8007ac2:	4987      	ldr	r1, [pc, #540]	; (8007ce0 <_tzset_unlocked_r+0x2e0>)
 8007ac4:	435a      	muls	r2, r3
 8007ac6:	4b87      	ldr	r3, [pc, #540]	; (8007ce4 <_tzset_unlocked_r+0x2e4>)
 8007ac8:	62b2      	str	r2, [r6, #40]	; 0x28
 8007aca:	602b      	str	r3, [r5, #0]
 8007acc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007ace:	003a      	movs	r2, r7
 8007ad0:	18e4      	adds	r4, r4, r3
 8007ad2:	0020      	movs	r0, r4
 8007ad4:	ab0a      	add	r3, sp, #40	; 0x28
 8007ad6:	f002 f973 	bl	8009dc0 <siscanf>
 8007ada:	2800      	cmp	r0, #0
 8007adc:	dc18      	bgt.n	8007b10 <_tzset_unlocked_r+0x110>
 8007ade:	682b      	ldr	r3, [r5, #0]
 8007ae0:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 8007ae2:	606b      	str	r3, [r5, #4]
 8007ae4:	4b7a      	ldr	r3, [pc, #488]	; (8007cd0 <_tzset_unlocked_r+0x2d0>)
 8007ae6:	601a      	str	r2, [r3, #0]
 8007ae8:	2200      	movs	r2, #0
 8007aea:	4b7b      	ldr	r3, [pc, #492]	; (8007cd8 <_tzset_unlocked_r+0x2d8>)
 8007aec:	601a      	str	r2, [r3, #0]
 8007aee:	e7a0      	b.n	8007a32 <_tzset_unlocked_r+0x32>
 8007af0:	f7f8 fb11 	bl	8000116 <strcmp>
 8007af4:	2800      	cmp	r0, #0
 8007af6:	d09c      	beq.n	8007a32 <_tzset_unlocked_r+0x32>
 8007af8:	e7a0      	b.n	8007a3c <_tzset_unlocked_r+0x3c>
 8007afa:	0021      	movs	r1, r4
 8007afc:	f002 f9d6 	bl	8009eac <strcpy>
 8007b00:	e7a9      	b.n	8007a56 <_tzset_unlocked_r+0x56>
 8007b02:	2201      	movs	r2, #1
 8007b04:	3b2b      	subs	r3, #43	; 0x2b
 8007b06:	9204      	str	r2, [sp, #16]
 8007b08:	425a      	negs	r2, r3
 8007b0a:	4153      	adcs	r3, r2
 8007b0c:	18e4      	adds	r4, r4, r3
 8007b0e:	e7b7      	b.n	8007a80 <_tzset_unlocked_r+0x80>
 8007b10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007b12:	606f      	str	r7, [r5, #4]
 8007b14:	18e4      	adds	r4, r4, r3
 8007b16:	7823      	ldrb	r3, [r4, #0]
 8007b18:	2b2d      	cmp	r3, #45	; 0x2d
 8007b1a:	d000      	beq.n	8007b1e <_tzset_unlocked_r+0x11e>
 8007b1c:	e08d      	b.n	8007c3a <_tzset_unlocked_r+0x23a>
 8007b1e:	3b2e      	subs	r3, #46	; 0x2e
 8007b20:	3401      	adds	r4, #1
 8007b22:	9304      	str	r3, [sp, #16]
 8007b24:	2716      	movs	r7, #22
 8007b26:	2300      	movs	r3, #0
 8007b28:	aa02      	add	r2, sp, #8
 8007b2a:	18bf      	adds	r7, r7, r2
 8007b2c:	ad07      	add	r5, sp, #28
 8007b2e:	8313      	strh	r3, [r2, #24]
 8007b30:	802b      	strh	r3, [r5, #0]
 8007b32:	803b      	strh	r3, [r7, #0]
 8007b34:	aa08      	add	r2, sp, #32
 8007b36:	930a      	str	r3, [sp, #40]	; 0x28
 8007b38:	ab0a      	add	r3, sp, #40	; 0x28
 8007b3a:	9202      	str	r2, [sp, #8]
 8007b3c:	9303      	str	r3, [sp, #12]
 8007b3e:	9301      	str	r3, [sp, #4]
 8007b40:	9700      	str	r7, [sp, #0]
 8007b42:	002a      	movs	r2, r5
 8007b44:	4968      	ldr	r1, [pc, #416]	; (8007ce8 <_tzset_unlocked_r+0x2e8>)
 8007b46:	0020      	movs	r0, r4
 8007b48:	f002 f93a 	bl	8009dc0 <siscanf>
 8007b4c:	2800      	cmp	r0, #0
 8007b4e:	dd00      	ble.n	8007b52 <_tzset_unlocked_r+0x152>
 8007b50:	e07a      	b.n	8007c48 <_tzset_unlocked_r+0x248>
 8007b52:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 8007b54:	4a66      	ldr	r2, [pc, #408]	; (8007cf0 <_tzset_unlocked_r+0x2f0>)
 8007b56:	189b      	adds	r3, r3, r2
 8007b58:	6533      	str	r3, [r6, #80]	; 0x50
 8007b5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007b5c:	0037      	movs	r7, r6
 8007b5e:	18e4      	adds	r4, r4, r3
 8007b60:	2300      	movs	r3, #0
 8007b62:	3708      	adds	r7, #8
 8007b64:	9304      	str	r3, [sp, #16]
 8007b66:	7823      	ldrb	r3, [r4, #0]
 8007b68:	3b2c      	subs	r3, #44	; 0x2c
 8007b6a:	425a      	negs	r2, r3
 8007b6c:	4153      	adcs	r3, r2
 8007b6e:	18e4      	adds	r4, r4, r3
 8007b70:	7825      	ldrb	r5, [r4, #0]
 8007b72:	2d4d      	cmp	r5, #77	; 0x4d
 8007b74:	d000      	beq.n	8007b78 <_tzset_unlocked_r+0x178>
 8007b76:	e078      	b.n	8007c6a <_tzset_unlocked_r+0x26a>
 8007b78:	221e      	movs	r2, #30
 8007b7a:	a902      	add	r1, sp, #8
 8007b7c:	1852      	adds	r2, r2, r1
 8007b7e:	9202      	str	r2, [sp, #8]
 8007b80:	aa09      	add	r2, sp, #36	; 0x24
 8007b82:	9200      	str	r2, [sp, #0]
 8007b84:	221a      	movs	r2, #26
 8007b86:	ab0a      	add	r3, sp, #40	; 0x28
 8007b88:	1852      	adds	r2, r2, r1
 8007b8a:	9303      	str	r3, [sp, #12]
 8007b8c:	9301      	str	r3, [sp, #4]
 8007b8e:	4959      	ldr	r1, [pc, #356]	; (8007cf4 <_tzset_unlocked_r+0x2f4>)
 8007b90:	0020      	movs	r0, r4
 8007b92:	f002 f915 	bl	8009dc0 <siscanf>
 8007b96:	2803      	cmp	r0, #3
 8007b98:	d000      	beq.n	8007b9c <_tzset_unlocked_r+0x19c>
 8007b9a:	e74a      	b.n	8007a32 <_tzset_unlocked_r+0x32>
 8007b9c:	ab02      	add	r3, sp, #8
 8007b9e:	8b59      	ldrh	r1, [r3, #26]
 8007ba0:	1e4b      	subs	r3, r1, #1
 8007ba2:	2b0b      	cmp	r3, #11
 8007ba4:	d900      	bls.n	8007ba8 <_tzset_unlocked_r+0x1a8>
 8007ba6:	e744      	b.n	8007a32 <_tzset_unlocked_r+0x32>
 8007ba8:	ab02      	add	r3, sp, #8
 8007baa:	8b9a      	ldrh	r2, [r3, #28]
 8007bac:	1e53      	subs	r3, r2, #1
 8007bae:	2b04      	cmp	r3, #4
 8007bb0:	d900      	bls.n	8007bb4 <_tzset_unlocked_r+0x1b4>
 8007bb2:	e73e      	b.n	8007a32 <_tzset_unlocked_r+0x32>
 8007bb4:	ab02      	add	r3, sp, #8
 8007bb6:	8bdb      	ldrh	r3, [r3, #30]
 8007bb8:	2b06      	cmp	r3, #6
 8007bba:	d900      	bls.n	8007bbe <_tzset_unlocked_r+0x1be>
 8007bbc:	e739      	b.n	8007a32 <_tzset_unlocked_r+0x32>
 8007bbe:	703d      	strb	r5, [r7, #0]
 8007bc0:	6079      	str	r1, [r7, #4]
 8007bc2:	60ba      	str	r2, [r7, #8]
 8007bc4:	60fb      	str	r3, [r7, #12]
 8007bc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007bc8:	18e5      	adds	r5, r4, r3
 8007bca:	2302      	movs	r3, #2
 8007bcc:	aa07      	add	r2, sp, #28
 8007bce:	8013      	strh	r3, [r2, #0]
 8007bd0:	2300      	movs	r3, #0
 8007bd2:	a902      	add	r1, sp, #8
 8007bd4:	ac08      	add	r4, sp, #32
 8007bd6:	82cb      	strh	r3, [r1, #22]
 8007bd8:	8023      	strh	r3, [r4, #0]
 8007bda:	930a      	str	r3, [sp, #40]	; 0x28
 8007bdc:	782b      	ldrb	r3, [r5, #0]
 8007bde:	2b2f      	cmp	r3, #47	; 0x2f
 8007be0:	d10b      	bne.n	8007bfa <_tzset_unlocked_r+0x1fa>
 8007be2:	2116      	movs	r1, #22
 8007be4:	a802      	add	r0, sp, #8
 8007be6:	1809      	adds	r1, r1, r0
 8007be8:	ab0a      	add	r3, sp, #40	; 0x28
 8007bea:	9100      	str	r1, [sp, #0]
 8007bec:	9303      	str	r3, [sp, #12]
 8007bee:	9402      	str	r4, [sp, #8]
 8007bf0:	9301      	str	r3, [sp, #4]
 8007bf2:	4941      	ldr	r1, [pc, #260]	; (8007cf8 <_tzset_unlocked_r+0x2f8>)
 8007bf4:	0028      	movs	r0, r5
 8007bf6:	f002 f8e3 	bl	8009dc0 <siscanf>
 8007bfa:	ab02      	add	r3, sp, #8
 8007bfc:	8ada      	ldrh	r2, [r3, #22]
 8007bfe:	233c      	movs	r3, #60	; 0x3c
 8007c00:	4353      	muls	r3, r2
 8007c02:	8822      	ldrh	r2, [r4, #0]
 8007c04:	189b      	adds	r3, r3, r2
 8007c06:	aa07      	add	r2, sp, #28
 8007c08:	8811      	ldrh	r1, [r2, #0]
 8007c0a:	22e1      	movs	r2, #225	; 0xe1
 8007c0c:	0112      	lsls	r2, r2, #4
 8007c0e:	434a      	muls	r2, r1
 8007c10:	189b      	adds	r3, r3, r2
 8007c12:	613b      	str	r3, [r7, #16]
 8007c14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007c16:	3728      	adds	r7, #40	; 0x28
 8007c18:	18ec      	adds	r4, r5, r3
 8007c1a:	9b04      	ldr	r3, [sp, #16]
 8007c1c:	2b01      	cmp	r3, #1
 8007c1e:	d122      	bne.n	8007c66 <_tzset_unlocked_r+0x266>
 8007c20:	6870      	ldr	r0, [r6, #4]
 8007c22:	f7ff fe33 	bl	800788c <__tzcalc_limits>
 8007c26:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 8007c28:	4b29      	ldr	r3, [pc, #164]	; (8007cd0 <_tzset_unlocked_r+0x2d0>)
 8007c2a:	601a      	str	r2, [r3, #0]
 8007c2c:	6d33      	ldr	r3, [r6, #80]	; 0x50
 8007c2e:	1a9b      	subs	r3, r3, r2
 8007c30:	1e5a      	subs	r2, r3, #1
 8007c32:	4193      	sbcs	r3, r2
 8007c34:	4a28      	ldr	r2, [pc, #160]	; (8007cd8 <_tzset_unlocked_r+0x2d8>)
 8007c36:	6013      	str	r3, [r2, #0]
 8007c38:	e6fb      	b.n	8007a32 <_tzset_unlocked_r+0x32>
 8007c3a:	2201      	movs	r2, #1
 8007c3c:	3b2b      	subs	r3, #43	; 0x2b
 8007c3e:	9204      	str	r2, [sp, #16]
 8007c40:	425a      	negs	r2, r3
 8007c42:	4153      	adcs	r3, r2
 8007c44:	18e4      	adds	r4, r4, r3
 8007c46:	e76d      	b.n	8007b24 <_tzset_unlocked_r+0x124>
 8007c48:	233c      	movs	r3, #60	; 0x3c
 8007c4a:	883a      	ldrh	r2, [r7, #0]
 8007c4c:	8829      	ldrh	r1, [r5, #0]
 8007c4e:	4353      	muls	r3, r2
 8007c50:	aa02      	add	r2, sp, #8
 8007c52:	8b12      	ldrh	r2, [r2, #24]
 8007c54:	189b      	adds	r3, r3, r2
 8007c56:	22e1      	movs	r2, #225	; 0xe1
 8007c58:	0112      	lsls	r2, r2, #4
 8007c5a:	434a      	muls	r2, r1
 8007c5c:	189b      	adds	r3, r3, r2
 8007c5e:	9a04      	ldr	r2, [sp, #16]
 8007c60:	435a      	muls	r2, r3
 8007c62:	0013      	movs	r3, r2
 8007c64:	e778      	b.n	8007b58 <_tzset_unlocked_r+0x158>
 8007c66:	2301      	movs	r3, #1
 8007c68:	e77c      	b.n	8007b64 <_tzset_unlocked_r+0x164>
 8007c6a:	2344      	movs	r3, #68	; 0x44
 8007c6c:	9305      	str	r3, [sp, #20]
 8007c6e:	2d4a      	cmp	r5, #74	; 0x4a
 8007c70:	d101      	bne.n	8007c76 <_tzset_unlocked_r+0x276>
 8007c72:	3401      	adds	r4, #1
 8007c74:	9505      	str	r5, [sp, #20]
 8007c76:	220a      	movs	r2, #10
 8007c78:	a90b      	add	r1, sp, #44	; 0x2c
 8007c7a:	0020      	movs	r0, r4
 8007c7c:	f7ff fdd8 	bl	8007830 <strtoul>
 8007c80:	231e      	movs	r3, #30
 8007c82:	aa02      	add	r2, sp, #8
 8007c84:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007c86:	189b      	adds	r3, r3, r2
 8007c88:	8018      	strh	r0, [r3, #0]
 8007c8a:	42a5      	cmp	r5, r4
 8007c8c:	d116      	bne.n	8007cbc <_tzset_unlocked_r+0x2bc>
 8007c8e:	9b04      	ldr	r3, [sp, #16]
 8007c90:	2b00      	cmp	r3, #0
 8007c92:	d108      	bne.n	8007ca6 <_tzset_unlocked_r+0x2a6>
 8007c94:	334d      	adds	r3, #77	; 0x4d
 8007c96:	7233      	strb	r3, [r6, #8]
 8007c98:	2303      	movs	r3, #3
 8007c9a:	60f3      	str	r3, [r6, #12]
 8007c9c:	3b01      	subs	r3, #1
 8007c9e:	6133      	str	r3, [r6, #16]
 8007ca0:	9b04      	ldr	r3, [sp, #16]
 8007ca2:	6173      	str	r3, [r6, #20]
 8007ca4:	e791      	b.n	8007bca <_tzset_unlocked_r+0x1ca>
 8007ca6:	0033      	movs	r3, r6
 8007ca8:	224d      	movs	r2, #77	; 0x4d
 8007caa:	3330      	adds	r3, #48	; 0x30
 8007cac:	701a      	strb	r2, [r3, #0]
 8007cae:	230b      	movs	r3, #11
 8007cb0:	6373      	str	r3, [r6, #52]	; 0x34
 8007cb2:	3b0a      	subs	r3, #10
 8007cb4:	63b3      	str	r3, [r6, #56]	; 0x38
 8007cb6:	2300      	movs	r3, #0
 8007cb8:	63f3      	str	r3, [r6, #60]	; 0x3c
 8007cba:	e786      	b.n	8007bca <_tzset_unlocked_r+0x1ca>
 8007cbc:	9b05      	ldr	r3, [sp, #20]
 8007cbe:	b280      	uxth	r0, r0
 8007cc0:	703b      	strb	r3, [r7, #0]
 8007cc2:	60f8      	str	r0, [r7, #12]
 8007cc4:	e781      	b.n	8007bca <_tzset_unlocked_r+0x1ca>
 8007cc6:	46c0      	nop			; (mov r8, r8)
 8007cc8:	0800c027 	.word	0x0800c027
 8007ccc:	20000444 	.word	0x20000444
 8007cd0:	2000044c 	.word	0x2000044c
 8007cd4:	0800c02a 	.word	0x0800c02a
 8007cd8:	20000448 	.word	0x20000448
 8007cdc:	20000080 	.word	0x20000080
 8007ce0:	0800c02e 	.word	0x0800c02e
 8007ce4:	20000437 	.word	0x20000437
 8007ce8:	0800c051 	.word	0x0800c051
 8007cec:	2000042c 	.word	0x2000042c
 8007cf0:	fffff1f0 	.word	0xfffff1f0
 8007cf4:	0800c03d 	.word	0x0800c03d
 8007cf8:	0800c050 	.word	0x0800c050

08007cfc <__swbuf_r>:
 8007cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007cfe:	0005      	movs	r5, r0
 8007d00:	000e      	movs	r6, r1
 8007d02:	0014      	movs	r4, r2
 8007d04:	2800      	cmp	r0, #0
 8007d06:	d004      	beq.n	8007d12 <__swbuf_r+0x16>
 8007d08:	6983      	ldr	r3, [r0, #24]
 8007d0a:	2b00      	cmp	r3, #0
 8007d0c:	d101      	bne.n	8007d12 <__swbuf_r+0x16>
 8007d0e:	f001 f823 	bl	8008d58 <__sinit>
 8007d12:	4b22      	ldr	r3, [pc, #136]	; (8007d9c <__swbuf_r+0xa0>)
 8007d14:	429c      	cmp	r4, r3
 8007d16:	d12d      	bne.n	8007d74 <__swbuf_r+0x78>
 8007d18:	686c      	ldr	r4, [r5, #4]
 8007d1a:	69a3      	ldr	r3, [r4, #24]
 8007d1c:	60a3      	str	r3, [r4, #8]
 8007d1e:	89a3      	ldrh	r3, [r4, #12]
 8007d20:	071b      	lsls	r3, r3, #28
 8007d22:	d531      	bpl.n	8007d88 <__swbuf_r+0x8c>
 8007d24:	6923      	ldr	r3, [r4, #16]
 8007d26:	2b00      	cmp	r3, #0
 8007d28:	d02e      	beq.n	8007d88 <__swbuf_r+0x8c>
 8007d2a:	6823      	ldr	r3, [r4, #0]
 8007d2c:	6922      	ldr	r2, [r4, #16]
 8007d2e:	b2f7      	uxtb	r7, r6
 8007d30:	1a98      	subs	r0, r3, r2
 8007d32:	6963      	ldr	r3, [r4, #20]
 8007d34:	b2f6      	uxtb	r6, r6
 8007d36:	4283      	cmp	r3, r0
 8007d38:	dc05      	bgt.n	8007d46 <__swbuf_r+0x4a>
 8007d3a:	0021      	movs	r1, r4
 8007d3c:	0028      	movs	r0, r5
 8007d3e:	f000 ff9d 	bl	8008c7c <_fflush_r>
 8007d42:	2800      	cmp	r0, #0
 8007d44:	d126      	bne.n	8007d94 <__swbuf_r+0x98>
 8007d46:	68a3      	ldr	r3, [r4, #8]
 8007d48:	3001      	adds	r0, #1
 8007d4a:	3b01      	subs	r3, #1
 8007d4c:	60a3      	str	r3, [r4, #8]
 8007d4e:	6823      	ldr	r3, [r4, #0]
 8007d50:	1c5a      	adds	r2, r3, #1
 8007d52:	6022      	str	r2, [r4, #0]
 8007d54:	701f      	strb	r7, [r3, #0]
 8007d56:	6963      	ldr	r3, [r4, #20]
 8007d58:	4283      	cmp	r3, r0
 8007d5a:	d004      	beq.n	8007d66 <__swbuf_r+0x6a>
 8007d5c:	89a3      	ldrh	r3, [r4, #12]
 8007d5e:	07db      	lsls	r3, r3, #31
 8007d60:	d51a      	bpl.n	8007d98 <__swbuf_r+0x9c>
 8007d62:	2e0a      	cmp	r6, #10
 8007d64:	d118      	bne.n	8007d98 <__swbuf_r+0x9c>
 8007d66:	0021      	movs	r1, r4
 8007d68:	0028      	movs	r0, r5
 8007d6a:	f000 ff87 	bl	8008c7c <_fflush_r>
 8007d6e:	2800      	cmp	r0, #0
 8007d70:	d012      	beq.n	8007d98 <__swbuf_r+0x9c>
 8007d72:	e00f      	b.n	8007d94 <__swbuf_r+0x98>
 8007d74:	4b0a      	ldr	r3, [pc, #40]	; (8007da0 <__swbuf_r+0xa4>)
 8007d76:	429c      	cmp	r4, r3
 8007d78:	d101      	bne.n	8007d7e <__swbuf_r+0x82>
 8007d7a:	68ac      	ldr	r4, [r5, #8]
 8007d7c:	e7cd      	b.n	8007d1a <__swbuf_r+0x1e>
 8007d7e:	4b09      	ldr	r3, [pc, #36]	; (8007da4 <__swbuf_r+0xa8>)
 8007d80:	429c      	cmp	r4, r3
 8007d82:	d1ca      	bne.n	8007d1a <__swbuf_r+0x1e>
 8007d84:	68ec      	ldr	r4, [r5, #12]
 8007d86:	e7c8      	b.n	8007d1a <__swbuf_r+0x1e>
 8007d88:	0021      	movs	r1, r4
 8007d8a:	0028      	movs	r0, r5
 8007d8c:	f000 f80c 	bl	8007da8 <__swsetup_r>
 8007d90:	2800      	cmp	r0, #0
 8007d92:	d0ca      	beq.n	8007d2a <__swbuf_r+0x2e>
 8007d94:	2601      	movs	r6, #1
 8007d96:	4276      	negs	r6, r6
 8007d98:	0030      	movs	r0, r6
 8007d9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007d9c:	0800c090 	.word	0x0800c090
 8007da0:	0800c0b0 	.word	0x0800c0b0
 8007da4:	0800c070 	.word	0x0800c070

08007da8 <__swsetup_r>:
 8007da8:	4b36      	ldr	r3, [pc, #216]	; (8007e84 <__swsetup_r+0xdc>)
 8007daa:	b570      	push	{r4, r5, r6, lr}
 8007dac:	681d      	ldr	r5, [r3, #0]
 8007dae:	0006      	movs	r6, r0
 8007db0:	000c      	movs	r4, r1
 8007db2:	2d00      	cmp	r5, #0
 8007db4:	d005      	beq.n	8007dc2 <__swsetup_r+0x1a>
 8007db6:	69ab      	ldr	r3, [r5, #24]
 8007db8:	2b00      	cmp	r3, #0
 8007dba:	d102      	bne.n	8007dc2 <__swsetup_r+0x1a>
 8007dbc:	0028      	movs	r0, r5
 8007dbe:	f000 ffcb 	bl	8008d58 <__sinit>
 8007dc2:	4b31      	ldr	r3, [pc, #196]	; (8007e88 <__swsetup_r+0xe0>)
 8007dc4:	429c      	cmp	r4, r3
 8007dc6:	d10f      	bne.n	8007de8 <__swsetup_r+0x40>
 8007dc8:	686c      	ldr	r4, [r5, #4]
 8007dca:	230c      	movs	r3, #12
 8007dcc:	5ee2      	ldrsh	r2, [r4, r3]
 8007dce:	b293      	uxth	r3, r2
 8007dd0:	0719      	lsls	r1, r3, #28
 8007dd2:	d42d      	bmi.n	8007e30 <__swsetup_r+0x88>
 8007dd4:	06d9      	lsls	r1, r3, #27
 8007dd6:	d411      	bmi.n	8007dfc <__swsetup_r+0x54>
 8007dd8:	2309      	movs	r3, #9
 8007dda:	2001      	movs	r0, #1
 8007ddc:	6033      	str	r3, [r6, #0]
 8007dde:	3337      	adds	r3, #55	; 0x37
 8007de0:	4313      	orrs	r3, r2
 8007de2:	81a3      	strh	r3, [r4, #12]
 8007de4:	4240      	negs	r0, r0
 8007de6:	bd70      	pop	{r4, r5, r6, pc}
 8007de8:	4b28      	ldr	r3, [pc, #160]	; (8007e8c <__swsetup_r+0xe4>)
 8007dea:	429c      	cmp	r4, r3
 8007dec:	d101      	bne.n	8007df2 <__swsetup_r+0x4a>
 8007dee:	68ac      	ldr	r4, [r5, #8]
 8007df0:	e7eb      	b.n	8007dca <__swsetup_r+0x22>
 8007df2:	4b27      	ldr	r3, [pc, #156]	; (8007e90 <__swsetup_r+0xe8>)
 8007df4:	429c      	cmp	r4, r3
 8007df6:	d1e8      	bne.n	8007dca <__swsetup_r+0x22>
 8007df8:	68ec      	ldr	r4, [r5, #12]
 8007dfa:	e7e6      	b.n	8007dca <__swsetup_r+0x22>
 8007dfc:	075b      	lsls	r3, r3, #29
 8007dfe:	d513      	bpl.n	8007e28 <__swsetup_r+0x80>
 8007e00:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007e02:	2900      	cmp	r1, #0
 8007e04:	d008      	beq.n	8007e18 <__swsetup_r+0x70>
 8007e06:	0023      	movs	r3, r4
 8007e08:	3344      	adds	r3, #68	; 0x44
 8007e0a:	4299      	cmp	r1, r3
 8007e0c:	d002      	beq.n	8007e14 <__swsetup_r+0x6c>
 8007e0e:	0030      	movs	r0, r6
 8007e10:	f7fe f8b8 	bl	8005f84 <_free_r>
 8007e14:	2300      	movs	r3, #0
 8007e16:	6363      	str	r3, [r4, #52]	; 0x34
 8007e18:	2224      	movs	r2, #36	; 0x24
 8007e1a:	89a3      	ldrh	r3, [r4, #12]
 8007e1c:	4393      	bics	r3, r2
 8007e1e:	81a3      	strh	r3, [r4, #12]
 8007e20:	2300      	movs	r3, #0
 8007e22:	6063      	str	r3, [r4, #4]
 8007e24:	6923      	ldr	r3, [r4, #16]
 8007e26:	6023      	str	r3, [r4, #0]
 8007e28:	2308      	movs	r3, #8
 8007e2a:	89a2      	ldrh	r2, [r4, #12]
 8007e2c:	4313      	orrs	r3, r2
 8007e2e:	81a3      	strh	r3, [r4, #12]
 8007e30:	6923      	ldr	r3, [r4, #16]
 8007e32:	2b00      	cmp	r3, #0
 8007e34:	d10b      	bne.n	8007e4e <__swsetup_r+0xa6>
 8007e36:	21a0      	movs	r1, #160	; 0xa0
 8007e38:	2280      	movs	r2, #128	; 0x80
 8007e3a:	89a3      	ldrh	r3, [r4, #12]
 8007e3c:	0089      	lsls	r1, r1, #2
 8007e3e:	0092      	lsls	r2, r2, #2
 8007e40:	400b      	ands	r3, r1
 8007e42:	4293      	cmp	r3, r2
 8007e44:	d003      	beq.n	8007e4e <__swsetup_r+0xa6>
 8007e46:	0021      	movs	r1, r4
 8007e48:	0030      	movs	r0, r6
 8007e4a:	f001 f989 	bl	8009160 <__smakebuf_r>
 8007e4e:	2301      	movs	r3, #1
 8007e50:	89a2      	ldrh	r2, [r4, #12]
 8007e52:	4013      	ands	r3, r2
 8007e54:	d011      	beq.n	8007e7a <__swsetup_r+0xd2>
 8007e56:	2300      	movs	r3, #0
 8007e58:	60a3      	str	r3, [r4, #8]
 8007e5a:	6963      	ldr	r3, [r4, #20]
 8007e5c:	425b      	negs	r3, r3
 8007e5e:	61a3      	str	r3, [r4, #24]
 8007e60:	2000      	movs	r0, #0
 8007e62:	6923      	ldr	r3, [r4, #16]
 8007e64:	4283      	cmp	r3, r0
 8007e66:	d1be      	bne.n	8007de6 <__swsetup_r+0x3e>
 8007e68:	230c      	movs	r3, #12
 8007e6a:	5ee2      	ldrsh	r2, [r4, r3]
 8007e6c:	0613      	lsls	r3, r2, #24
 8007e6e:	d5ba      	bpl.n	8007de6 <__swsetup_r+0x3e>
 8007e70:	2340      	movs	r3, #64	; 0x40
 8007e72:	4313      	orrs	r3, r2
 8007e74:	81a3      	strh	r3, [r4, #12]
 8007e76:	3801      	subs	r0, #1
 8007e78:	e7b5      	b.n	8007de6 <__swsetup_r+0x3e>
 8007e7a:	0792      	lsls	r2, r2, #30
 8007e7c:	d400      	bmi.n	8007e80 <__swsetup_r+0xd8>
 8007e7e:	6963      	ldr	r3, [r4, #20]
 8007e80:	60a3      	str	r3, [r4, #8]
 8007e82:	e7ed      	b.n	8007e60 <__swsetup_r+0xb8>
 8007e84:	2000001c 	.word	0x2000001c
 8007e88:	0800c090 	.word	0x0800c090
 8007e8c:	0800c0b0 	.word	0x0800c0b0
 8007e90:	0800c070 	.word	0x0800c070

08007e94 <abs>:
 8007e94:	17c3      	asrs	r3, r0, #31
 8007e96:	18c0      	adds	r0, r0, r3
 8007e98:	4058      	eors	r0, r3
 8007e9a:	4770      	bx	lr

08007e9c <quorem>:
 8007e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e9e:	6903      	ldr	r3, [r0, #16]
 8007ea0:	690c      	ldr	r4, [r1, #16]
 8007ea2:	b089      	sub	sp, #36	; 0x24
 8007ea4:	0007      	movs	r7, r0
 8007ea6:	9105      	str	r1, [sp, #20]
 8007ea8:	2600      	movs	r6, #0
 8007eaa:	42a3      	cmp	r3, r4
 8007eac:	db65      	blt.n	8007f7a <quorem+0xde>
 8007eae:	000b      	movs	r3, r1
 8007eb0:	3c01      	subs	r4, #1
 8007eb2:	3314      	adds	r3, #20
 8007eb4:	00a5      	lsls	r5, r4, #2
 8007eb6:	9303      	str	r3, [sp, #12]
 8007eb8:	195b      	adds	r3, r3, r5
 8007eba:	9304      	str	r3, [sp, #16]
 8007ebc:	0003      	movs	r3, r0
 8007ebe:	3314      	adds	r3, #20
 8007ec0:	9302      	str	r3, [sp, #8]
 8007ec2:	195d      	adds	r5, r3, r5
 8007ec4:	9b04      	ldr	r3, [sp, #16]
 8007ec6:	6828      	ldr	r0, [r5, #0]
 8007ec8:	681b      	ldr	r3, [r3, #0]
 8007eca:	1c59      	adds	r1, r3, #1
 8007ecc:	9301      	str	r3, [sp, #4]
 8007ece:	f7f8 f941 	bl	8000154 <__udivsi3>
 8007ed2:	9001      	str	r0, [sp, #4]
 8007ed4:	42b0      	cmp	r0, r6
 8007ed6:	d029      	beq.n	8007f2c <quorem+0x90>
 8007ed8:	9b03      	ldr	r3, [sp, #12]
 8007eda:	9802      	ldr	r0, [sp, #8]
 8007edc:	469c      	mov	ip, r3
 8007ede:	9606      	str	r6, [sp, #24]
 8007ee0:	4662      	mov	r2, ip
 8007ee2:	ca08      	ldmia	r2!, {r3}
 8007ee4:	4694      	mov	ip, r2
 8007ee6:	9a01      	ldr	r2, [sp, #4]
 8007ee8:	b299      	uxth	r1, r3
 8007eea:	4351      	muls	r1, r2
 8007eec:	0c1b      	lsrs	r3, r3, #16
 8007eee:	4353      	muls	r3, r2
 8007ef0:	1989      	adds	r1, r1, r6
 8007ef2:	0c0a      	lsrs	r2, r1, #16
 8007ef4:	189b      	adds	r3, r3, r2
 8007ef6:	9307      	str	r3, [sp, #28]
 8007ef8:	0c1e      	lsrs	r6, r3, #16
 8007efa:	6803      	ldr	r3, [r0, #0]
 8007efc:	b289      	uxth	r1, r1
 8007efe:	b29a      	uxth	r2, r3
 8007f00:	9b06      	ldr	r3, [sp, #24]
 8007f02:	18d2      	adds	r2, r2, r3
 8007f04:	6803      	ldr	r3, [r0, #0]
 8007f06:	1a52      	subs	r2, r2, r1
 8007f08:	0c19      	lsrs	r1, r3, #16
 8007f0a:	466b      	mov	r3, sp
 8007f0c:	8b9b      	ldrh	r3, [r3, #28]
 8007f0e:	1acb      	subs	r3, r1, r3
 8007f10:	1411      	asrs	r1, r2, #16
 8007f12:	185b      	adds	r3, r3, r1
 8007f14:	1419      	asrs	r1, r3, #16
 8007f16:	b292      	uxth	r2, r2
 8007f18:	041b      	lsls	r3, r3, #16
 8007f1a:	431a      	orrs	r2, r3
 8007f1c:	9b04      	ldr	r3, [sp, #16]
 8007f1e:	9106      	str	r1, [sp, #24]
 8007f20:	c004      	stmia	r0!, {r2}
 8007f22:	4563      	cmp	r3, ip
 8007f24:	d2dc      	bcs.n	8007ee0 <quorem+0x44>
 8007f26:	682b      	ldr	r3, [r5, #0]
 8007f28:	2b00      	cmp	r3, #0
 8007f2a:	d02d      	beq.n	8007f88 <quorem+0xec>
 8007f2c:	9905      	ldr	r1, [sp, #20]
 8007f2e:	0038      	movs	r0, r7
 8007f30:	f001 fb96 	bl	8009660 <__mcmp>
 8007f34:	2800      	cmp	r0, #0
 8007f36:	db1f      	blt.n	8007f78 <quorem+0xdc>
 8007f38:	2500      	movs	r5, #0
 8007f3a:	9b01      	ldr	r3, [sp, #4]
 8007f3c:	9802      	ldr	r0, [sp, #8]
 8007f3e:	3301      	adds	r3, #1
 8007f40:	9903      	ldr	r1, [sp, #12]
 8007f42:	9301      	str	r3, [sp, #4]
 8007f44:	6802      	ldr	r2, [r0, #0]
 8007f46:	c908      	ldmia	r1!, {r3}
 8007f48:	b292      	uxth	r2, r2
 8007f4a:	1955      	adds	r5, r2, r5
 8007f4c:	b29a      	uxth	r2, r3
 8007f4e:	1aaa      	subs	r2, r5, r2
 8007f50:	6805      	ldr	r5, [r0, #0]
 8007f52:	0c1b      	lsrs	r3, r3, #16
 8007f54:	0c2d      	lsrs	r5, r5, #16
 8007f56:	1aeb      	subs	r3, r5, r3
 8007f58:	1415      	asrs	r5, r2, #16
 8007f5a:	195b      	adds	r3, r3, r5
 8007f5c:	141d      	asrs	r5, r3, #16
 8007f5e:	b292      	uxth	r2, r2
 8007f60:	041b      	lsls	r3, r3, #16
 8007f62:	4313      	orrs	r3, r2
 8007f64:	c008      	stmia	r0!, {r3}
 8007f66:	9b04      	ldr	r3, [sp, #16]
 8007f68:	428b      	cmp	r3, r1
 8007f6a:	d2eb      	bcs.n	8007f44 <quorem+0xa8>
 8007f6c:	9a02      	ldr	r2, [sp, #8]
 8007f6e:	00a3      	lsls	r3, r4, #2
 8007f70:	18d3      	adds	r3, r2, r3
 8007f72:	681a      	ldr	r2, [r3, #0]
 8007f74:	2a00      	cmp	r2, #0
 8007f76:	d011      	beq.n	8007f9c <quorem+0x100>
 8007f78:	9e01      	ldr	r6, [sp, #4]
 8007f7a:	0030      	movs	r0, r6
 8007f7c:	b009      	add	sp, #36	; 0x24
 8007f7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007f80:	682b      	ldr	r3, [r5, #0]
 8007f82:	2b00      	cmp	r3, #0
 8007f84:	d104      	bne.n	8007f90 <quorem+0xf4>
 8007f86:	3c01      	subs	r4, #1
 8007f88:	9b02      	ldr	r3, [sp, #8]
 8007f8a:	3d04      	subs	r5, #4
 8007f8c:	42ab      	cmp	r3, r5
 8007f8e:	d3f7      	bcc.n	8007f80 <quorem+0xe4>
 8007f90:	613c      	str	r4, [r7, #16]
 8007f92:	e7cb      	b.n	8007f2c <quorem+0x90>
 8007f94:	681a      	ldr	r2, [r3, #0]
 8007f96:	2a00      	cmp	r2, #0
 8007f98:	d104      	bne.n	8007fa4 <quorem+0x108>
 8007f9a:	3c01      	subs	r4, #1
 8007f9c:	9a02      	ldr	r2, [sp, #8]
 8007f9e:	3b04      	subs	r3, #4
 8007fa0:	429a      	cmp	r2, r3
 8007fa2:	d3f7      	bcc.n	8007f94 <quorem+0xf8>
 8007fa4:	613c      	str	r4, [r7, #16]
 8007fa6:	e7e7      	b.n	8007f78 <quorem+0xdc>

08007fa8 <_dtoa_r>:
 8007fa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007faa:	0016      	movs	r6, r2
 8007fac:	001f      	movs	r7, r3
 8007fae:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8007fb0:	b09b      	sub	sp, #108	; 0x6c
 8007fb2:	9002      	str	r0, [sp, #8]
 8007fb4:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8007fb6:	9606      	str	r6, [sp, #24]
 8007fb8:	9707      	str	r7, [sp, #28]
 8007fba:	2c00      	cmp	r4, #0
 8007fbc:	d108      	bne.n	8007fd0 <_dtoa_r+0x28>
 8007fbe:	2010      	movs	r0, #16
 8007fc0:	f7fd ffc4 	bl	8005f4c <malloc>
 8007fc4:	9b02      	ldr	r3, [sp, #8]
 8007fc6:	6258      	str	r0, [r3, #36]	; 0x24
 8007fc8:	6044      	str	r4, [r0, #4]
 8007fca:	6084      	str	r4, [r0, #8]
 8007fcc:	6004      	str	r4, [r0, #0]
 8007fce:	60c4      	str	r4, [r0, #12]
 8007fd0:	9b02      	ldr	r3, [sp, #8]
 8007fd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007fd4:	6819      	ldr	r1, [r3, #0]
 8007fd6:	2900      	cmp	r1, #0
 8007fd8:	d00b      	beq.n	8007ff2 <_dtoa_r+0x4a>
 8007fda:	685a      	ldr	r2, [r3, #4]
 8007fdc:	2301      	movs	r3, #1
 8007fde:	4093      	lsls	r3, r2
 8007fe0:	604a      	str	r2, [r1, #4]
 8007fe2:	608b      	str	r3, [r1, #8]
 8007fe4:	9802      	ldr	r0, [sp, #8]
 8007fe6:	f001 f95f 	bl	80092a8 <_Bfree>
 8007fea:	2200      	movs	r2, #0
 8007fec:	9b02      	ldr	r3, [sp, #8]
 8007fee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007ff0:	601a      	str	r2, [r3, #0]
 8007ff2:	2f00      	cmp	r7, #0
 8007ff4:	da20      	bge.n	8008038 <_dtoa_r+0x90>
 8007ff6:	2301      	movs	r3, #1
 8007ff8:	602b      	str	r3, [r5, #0]
 8007ffa:	007b      	lsls	r3, r7, #1
 8007ffc:	085b      	lsrs	r3, r3, #1
 8007ffe:	9307      	str	r3, [sp, #28]
 8008000:	9c07      	ldr	r4, [sp, #28]
 8008002:	4bb2      	ldr	r3, [pc, #712]	; (80082cc <_dtoa_r+0x324>)
 8008004:	0022      	movs	r2, r4
 8008006:	9317      	str	r3, [sp, #92]	; 0x5c
 8008008:	401a      	ands	r2, r3
 800800a:	429a      	cmp	r2, r3
 800800c:	d117      	bne.n	800803e <_dtoa_r+0x96>
 800800e:	4bb0      	ldr	r3, [pc, #704]	; (80082d0 <_dtoa_r+0x328>)
 8008010:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8008012:	6013      	str	r3, [r2, #0]
 8008014:	9b06      	ldr	r3, [sp, #24]
 8008016:	2b00      	cmp	r3, #0
 8008018:	d103      	bne.n	8008022 <_dtoa_r+0x7a>
 800801a:	0324      	lsls	r4, r4, #12
 800801c:	d101      	bne.n	8008022 <_dtoa_r+0x7a>
 800801e:	f000 fd87 	bl	8008b30 <_dtoa_r+0xb88>
 8008022:	4bac      	ldr	r3, [pc, #688]	; (80082d4 <_dtoa_r+0x32c>)
 8008024:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8008026:	9308      	str	r3, [sp, #32]
 8008028:	2a00      	cmp	r2, #0
 800802a:	d002      	beq.n	8008032 <_dtoa_r+0x8a>
 800802c:	4baa      	ldr	r3, [pc, #680]	; (80082d8 <_dtoa_r+0x330>)
 800802e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8008030:	6013      	str	r3, [r2, #0]
 8008032:	9808      	ldr	r0, [sp, #32]
 8008034:	b01b      	add	sp, #108	; 0x6c
 8008036:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008038:	2300      	movs	r3, #0
 800803a:	602b      	str	r3, [r5, #0]
 800803c:	e7e0      	b.n	8008000 <_dtoa_r+0x58>
 800803e:	9e06      	ldr	r6, [sp, #24]
 8008040:	9f07      	ldr	r7, [sp, #28]
 8008042:	2200      	movs	r2, #0
 8008044:	2300      	movs	r3, #0
 8008046:	0030      	movs	r0, r6
 8008048:	0039      	movs	r1, r7
 800804a:	f7f8 fa09 	bl	8000460 <__aeabi_dcmpeq>
 800804e:	1e05      	subs	r5, r0, #0
 8008050:	d00b      	beq.n	800806a <_dtoa_r+0xc2>
 8008052:	2301      	movs	r3, #1
 8008054:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8008056:	6013      	str	r3, [r2, #0]
 8008058:	4ba0      	ldr	r3, [pc, #640]	; (80082dc <_dtoa_r+0x334>)
 800805a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800805c:	9308      	str	r3, [sp, #32]
 800805e:	2a00      	cmp	r2, #0
 8008060:	d0e7      	beq.n	8008032 <_dtoa_r+0x8a>
 8008062:	4a9f      	ldr	r2, [pc, #636]	; (80082e0 <_dtoa_r+0x338>)
 8008064:	9924      	ldr	r1, [sp, #144]	; 0x90
 8008066:	600a      	str	r2, [r1, #0]
 8008068:	e7e3      	b.n	8008032 <_dtoa_r+0x8a>
 800806a:	ab18      	add	r3, sp, #96	; 0x60
 800806c:	9301      	str	r3, [sp, #4]
 800806e:	ab19      	add	r3, sp, #100	; 0x64
 8008070:	9300      	str	r3, [sp, #0]
 8008072:	0032      	movs	r2, r6
 8008074:	003b      	movs	r3, r7
 8008076:	9802      	ldr	r0, [sp, #8]
 8008078:	f001 fb70 	bl	800975c <__d2b>
 800807c:	0063      	lsls	r3, r4, #1
 800807e:	9003      	str	r0, [sp, #12]
 8008080:	0d5b      	lsrs	r3, r3, #21
 8008082:	d074      	beq.n	800816e <_dtoa_r+0x1c6>
 8008084:	033a      	lsls	r2, r7, #12
 8008086:	4c97      	ldr	r4, [pc, #604]	; (80082e4 <_dtoa_r+0x33c>)
 8008088:	0b12      	lsrs	r2, r2, #12
 800808a:	4314      	orrs	r4, r2
 800808c:	0021      	movs	r1, r4
 800808e:	4a96      	ldr	r2, [pc, #600]	; (80082e8 <_dtoa_r+0x340>)
 8008090:	0030      	movs	r0, r6
 8008092:	9516      	str	r5, [sp, #88]	; 0x58
 8008094:	189e      	adds	r6, r3, r2
 8008096:	2200      	movs	r2, #0
 8008098:	4b94      	ldr	r3, [pc, #592]	; (80082ec <_dtoa_r+0x344>)
 800809a:	f7fa fb11 	bl	80026c0 <__aeabi_dsub>
 800809e:	4a94      	ldr	r2, [pc, #592]	; (80082f0 <_dtoa_r+0x348>)
 80080a0:	4b94      	ldr	r3, [pc, #592]	; (80082f4 <_dtoa_r+0x34c>)
 80080a2:	f7fa f89b 	bl	80021dc <__aeabi_dmul>
 80080a6:	4a94      	ldr	r2, [pc, #592]	; (80082f8 <_dtoa_r+0x350>)
 80080a8:	4b94      	ldr	r3, [pc, #592]	; (80082fc <_dtoa_r+0x354>)
 80080aa:	f7f9 f971 	bl	8001390 <__aeabi_dadd>
 80080ae:	0004      	movs	r4, r0
 80080b0:	0030      	movs	r0, r6
 80080b2:	000d      	movs	r5, r1
 80080b4:	f7fa fe9e 	bl	8002df4 <__aeabi_i2d>
 80080b8:	4a91      	ldr	r2, [pc, #580]	; (8008300 <_dtoa_r+0x358>)
 80080ba:	4b92      	ldr	r3, [pc, #584]	; (8008304 <_dtoa_r+0x35c>)
 80080bc:	f7fa f88e 	bl	80021dc <__aeabi_dmul>
 80080c0:	0002      	movs	r2, r0
 80080c2:	000b      	movs	r3, r1
 80080c4:	0020      	movs	r0, r4
 80080c6:	0029      	movs	r1, r5
 80080c8:	f7f9 f962 	bl	8001390 <__aeabi_dadd>
 80080cc:	0004      	movs	r4, r0
 80080ce:	000d      	movs	r5, r1
 80080d0:	f7fa fe5a 	bl	8002d88 <__aeabi_d2iz>
 80080d4:	2200      	movs	r2, #0
 80080d6:	0007      	movs	r7, r0
 80080d8:	2300      	movs	r3, #0
 80080da:	0020      	movs	r0, r4
 80080dc:	0029      	movs	r1, r5
 80080de:	f7f8 f9c5 	bl	800046c <__aeabi_dcmplt>
 80080e2:	2800      	cmp	r0, #0
 80080e4:	d009      	beq.n	80080fa <_dtoa_r+0x152>
 80080e6:	0038      	movs	r0, r7
 80080e8:	f7fa fe84 	bl	8002df4 <__aeabi_i2d>
 80080ec:	002b      	movs	r3, r5
 80080ee:	0022      	movs	r2, r4
 80080f0:	f7f8 f9b6 	bl	8000460 <__aeabi_dcmpeq>
 80080f4:	4243      	negs	r3, r0
 80080f6:	4158      	adcs	r0, r3
 80080f8:	1a3f      	subs	r7, r7, r0
 80080fa:	2301      	movs	r3, #1
 80080fc:	9314      	str	r3, [sp, #80]	; 0x50
 80080fe:	2f16      	cmp	r7, #22
 8008100:	d80d      	bhi.n	800811e <_dtoa_r+0x176>
 8008102:	4981      	ldr	r1, [pc, #516]	; (8008308 <_dtoa_r+0x360>)
 8008104:	00fb      	lsls	r3, r7, #3
 8008106:	18c9      	adds	r1, r1, r3
 8008108:	6808      	ldr	r0, [r1, #0]
 800810a:	6849      	ldr	r1, [r1, #4]
 800810c:	9a06      	ldr	r2, [sp, #24]
 800810e:	9b07      	ldr	r3, [sp, #28]
 8008110:	f7f8 f9c0 	bl	8000494 <__aeabi_dcmpgt>
 8008114:	2800      	cmp	r0, #0
 8008116:	d046      	beq.n	80081a6 <_dtoa_r+0x1fe>
 8008118:	2300      	movs	r3, #0
 800811a:	3f01      	subs	r7, #1
 800811c:	9314      	str	r3, [sp, #80]	; 0x50
 800811e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8008120:	1b9e      	subs	r6, r3, r6
 8008122:	2300      	movs	r3, #0
 8008124:	930a      	str	r3, [sp, #40]	; 0x28
 8008126:	0033      	movs	r3, r6
 8008128:	3b01      	subs	r3, #1
 800812a:	930b      	str	r3, [sp, #44]	; 0x2c
 800812c:	d504      	bpl.n	8008138 <_dtoa_r+0x190>
 800812e:	2301      	movs	r3, #1
 8008130:	1b9b      	subs	r3, r3, r6
 8008132:	930a      	str	r3, [sp, #40]	; 0x28
 8008134:	2300      	movs	r3, #0
 8008136:	930b      	str	r3, [sp, #44]	; 0x2c
 8008138:	2f00      	cmp	r7, #0
 800813a:	db36      	blt.n	80081aa <_dtoa_r+0x202>
 800813c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800813e:	9711      	str	r7, [sp, #68]	; 0x44
 8008140:	19db      	adds	r3, r3, r7
 8008142:	930b      	str	r3, [sp, #44]	; 0x2c
 8008144:	2300      	movs	r3, #0
 8008146:	9304      	str	r3, [sp, #16]
 8008148:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800814a:	2401      	movs	r4, #1
 800814c:	2b09      	cmp	r3, #9
 800814e:	d900      	bls.n	8008152 <_dtoa_r+0x1aa>
 8008150:	e084      	b.n	800825c <_dtoa_r+0x2b4>
 8008152:	2b05      	cmp	r3, #5
 8008154:	dd02      	ble.n	800815c <_dtoa_r+0x1b4>
 8008156:	2400      	movs	r4, #0
 8008158:	3b04      	subs	r3, #4
 800815a:	9320      	str	r3, [sp, #128]	; 0x80
 800815c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800815e:	1e98      	subs	r0, r3, #2
 8008160:	2803      	cmp	r0, #3
 8008162:	d900      	bls.n	8008166 <_dtoa_r+0x1be>
 8008164:	e084      	b.n	8008270 <_dtoa_r+0x2c8>
 8008166:	f7f7 ffe1 	bl	800012c <__gnu_thumb1_case_uqi>
 800816a:	7775      	.short	0x7775
 800816c:	6a28      	.short	0x6a28
 800816e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8008170:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8008172:	189e      	adds	r6, r3, r2
 8008174:	4b65      	ldr	r3, [pc, #404]	; (800830c <_dtoa_r+0x364>)
 8008176:	18f2      	adds	r2, r6, r3
 8008178:	2a20      	cmp	r2, #32
 800817a:	dd0f      	ble.n	800819c <_dtoa_r+0x1f4>
 800817c:	2340      	movs	r3, #64	; 0x40
 800817e:	1a9b      	subs	r3, r3, r2
 8008180:	409c      	lsls	r4, r3
 8008182:	4b63      	ldr	r3, [pc, #396]	; (8008310 <_dtoa_r+0x368>)
 8008184:	9806      	ldr	r0, [sp, #24]
 8008186:	18f3      	adds	r3, r6, r3
 8008188:	40d8      	lsrs	r0, r3
 800818a:	4320      	orrs	r0, r4
 800818c:	f7fa fe6c 	bl	8002e68 <__aeabi_ui2d>
 8008190:	2301      	movs	r3, #1
 8008192:	4c60      	ldr	r4, [pc, #384]	; (8008314 <_dtoa_r+0x36c>)
 8008194:	3e01      	subs	r6, #1
 8008196:	1909      	adds	r1, r1, r4
 8008198:	9316      	str	r3, [sp, #88]	; 0x58
 800819a:	e77c      	b.n	8008096 <_dtoa_r+0xee>
 800819c:	2320      	movs	r3, #32
 800819e:	9806      	ldr	r0, [sp, #24]
 80081a0:	1a9b      	subs	r3, r3, r2
 80081a2:	4098      	lsls	r0, r3
 80081a4:	e7f2      	b.n	800818c <_dtoa_r+0x1e4>
 80081a6:	9014      	str	r0, [sp, #80]	; 0x50
 80081a8:	e7b9      	b.n	800811e <_dtoa_r+0x176>
 80081aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80081ac:	1bdb      	subs	r3, r3, r7
 80081ae:	930a      	str	r3, [sp, #40]	; 0x28
 80081b0:	427b      	negs	r3, r7
 80081b2:	9304      	str	r3, [sp, #16]
 80081b4:	2300      	movs	r3, #0
 80081b6:	9311      	str	r3, [sp, #68]	; 0x44
 80081b8:	e7c6      	b.n	8008148 <_dtoa_r+0x1a0>
 80081ba:	2301      	movs	r3, #1
 80081bc:	930d      	str	r3, [sp, #52]	; 0x34
 80081be:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80081c0:	2b00      	cmp	r3, #0
 80081c2:	dd59      	ble.n	8008278 <_dtoa_r+0x2d0>
 80081c4:	930c      	str	r3, [sp, #48]	; 0x30
 80081c6:	9309      	str	r3, [sp, #36]	; 0x24
 80081c8:	9a02      	ldr	r2, [sp, #8]
 80081ca:	6a55      	ldr	r5, [r2, #36]	; 0x24
 80081cc:	2200      	movs	r2, #0
 80081ce:	606a      	str	r2, [r5, #4]
 80081d0:	3204      	adds	r2, #4
 80081d2:	0010      	movs	r0, r2
 80081d4:	3014      	adds	r0, #20
 80081d6:	6869      	ldr	r1, [r5, #4]
 80081d8:	4298      	cmp	r0, r3
 80081da:	d952      	bls.n	8008282 <_dtoa_r+0x2da>
 80081dc:	9802      	ldr	r0, [sp, #8]
 80081de:	f001 f82b 	bl	8009238 <_Balloc>
 80081e2:	9b02      	ldr	r3, [sp, #8]
 80081e4:	6028      	str	r0, [r5, #0]
 80081e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80081e8:	681b      	ldr	r3, [r3, #0]
 80081ea:	9308      	str	r3, [sp, #32]
 80081ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80081ee:	2b0e      	cmp	r3, #14
 80081f0:	d900      	bls.n	80081f4 <_dtoa_r+0x24c>
 80081f2:	e10a      	b.n	800840a <_dtoa_r+0x462>
 80081f4:	2c00      	cmp	r4, #0
 80081f6:	d100      	bne.n	80081fa <_dtoa_r+0x252>
 80081f8:	e107      	b.n	800840a <_dtoa_r+0x462>
 80081fa:	9b06      	ldr	r3, [sp, #24]
 80081fc:	9c07      	ldr	r4, [sp, #28]
 80081fe:	9312      	str	r3, [sp, #72]	; 0x48
 8008200:	9413      	str	r4, [sp, #76]	; 0x4c
 8008202:	2f00      	cmp	r7, #0
 8008204:	dc00      	bgt.n	8008208 <_dtoa_r+0x260>
 8008206:	e089      	b.n	800831c <_dtoa_r+0x374>
 8008208:	210f      	movs	r1, #15
 800820a:	003a      	movs	r2, r7
 800820c:	4b3e      	ldr	r3, [pc, #248]	; (8008308 <_dtoa_r+0x360>)
 800820e:	400a      	ands	r2, r1
 8008210:	00d2      	lsls	r2, r2, #3
 8008212:	189b      	adds	r3, r3, r2
 8008214:	681d      	ldr	r5, [r3, #0]
 8008216:	685e      	ldr	r6, [r3, #4]
 8008218:	2302      	movs	r3, #2
 800821a:	113c      	asrs	r4, r7, #4
 800821c:	930e      	str	r3, [sp, #56]	; 0x38
 800821e:	06e3      	lsls	r3, r4, #27
 8008220:	d50b      	bpl.n	800823a <_dtoa_r+0x292>
 8008222:	4b3d      	ldr	r3, [pc, #244]	; (8008318 <_dtoa_r+0x370>)
 8008224:	400c      	ands	r4, r1
 8008226:	6a1a      	ldr	r2, [r3, #32]
 8008228:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800822a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800822c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800822e:	f7f9 fbcb 	bl	80019c8 <__aeabi_ddiv>
 8008232:	2303      	movs	r3, #3
 8008234:	9006      	str	r0, [sp, #24]
 8008236:	9107      	str	r1, [sp, #28]
 8008238:	930e      	str	r3, [sp, #56]	; 0x38
 800823a:	2300      	movs	r3, #0
 800823c:	e03a      	b.n	80082b4 <_dtoa_r+0x30c>
 800823e:	2301      	movs	r3, #1
 8008240:	930d      	str	r3, [sp, #52]	; 0x34
 8008242:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008244:	18fb      	adds	r3, r7, r3
 8008246:	930c      	str	r3, [sp, #48]	; 0x30
 8008248:	3301      	adds	r3, #1
 800824a:	9309      	str	r3, [sp, #36]	; 0x24
 800824c:	2b00      	cmp	r3, #0
 800824e:	dcbb      	bgt.n	80081c8 <_dtoa_r+0x220>
 8008250:	2301      	movs	r3, #1
 8008252:	e7b9      	b.n	80081c8 <_dtoa_r+0x220>
 8008254:	2300      	movs	r3, #0
 8008256:	e7b1      	b.n	80081bc <_dtoa_r+0x214>
 8008258:	2300      	movs	r3, #0
 800825a:	e7f1      	b.n	8008240 <_dtoa_r+0x298>
 800825c:	2300      	movs	r3, #0
 800825e:	940d      	str	r4, [sp, #52]	; 0x34
 8008260:	9320      	str	r3, [sp, #128]	; 0x80
 8008262:	3b01      	subs	r3, #1
 8008264:	2200      	movs	r2, #0
 8008266:	930c      	str	r3, [sp, #48]	; 0x30
 8008268:	9309      	str	r3, [sp, #36]	; 0x24
 800826a:	3313      	adds	r3, #19
 800826c:	9221      	str	r2, [sp, #132]	; 0x84
 800826e:	e7ab      	b.n	80081c8 <_dtoa_r+0x220>
 8008270:	2301      	movs	r3, #1
 8008272:	930d      	str	r3, [sp, #52]	; 0x34
 8008274:	3b02      	subs	r3, #2
 8008276:	e7f5      	b.n	8008264 <_dtoa_r+0x2bc>
 8008278:	2301      	movs	r3, #1
 800827a:	930c      	str	r3, [sp, #48]	; 0x30
 800827c:	9309      	str	r3, [sp, #36]	; 0x24
 800827e:	001a      	movs	r2, r3
 8008280:	e7f4      	b.n	800826c <_dtoa_r+0x2c4>
 8008282:	3101      	adds	r1, #1
 8008284:	6069      	str	r1, [r5, #4]
 8008286:	0052      	lsls	r2, r2, #1
 8008288:	e7a3      	b.n	80081d2 <_dtoa_r+0x22a>
 800828a:	2301      	movs	r3, #1
 800828c:	421c      	tst	r4, r3
 800828e:	d00e      	beq.n	80082ae <_dtoa_r+0x306>
 8008290:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008292:	4a21      	ldr	r2, [pc, #132]	; (8008318 <_dtoa_r+0x370>)
 8008294:	3301      	adds	r3, #1
 8008296:	930e      	str	r3, [sp, #56]	; 0x38
 8008298:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800829a:	0028      	movs	r0, r5
 800829c:	00db      	lsls	r3, r3, #3
 800829e:	189b      	adds	r3, r3, r2
 80082a0:	0031      	movs	r1, r6
 80082a2:	681a      	ldr	r2, [r3, #0]
 80082a4:	685b      	ldr	r3, [r3, #4]
 80082a6:	f7f9 ff99 	bl	80021dc <__aeabi_dmul>
 80082aa:	0005      	movs	r5, r0
 80082ac:	000e      	movs	r6, r1
 80082ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80082b0:	1064      	asrs	r4, r4, #1
 80082b2:	3301      	adds	r3, #1
 80082b4:	9310      	str	r3, [sp, #64]	; 0x40
 80082b6:	2c00      	cmp	r4, #0
 80082b8:	d1e7      	bne.n	800828a <_dtoa_r+0x2e2>
 80082ba:	9806      	ldr	r0, [sp, #24]
 80082bc:	9907      	ldr	r1, [sp, #28]
 80082be:	002a      	movs	r2, r5
 80082c0:	0033      	movs	r3, r6
 80082c2:	f7f9 fb81 	bl	80019c8 <__aeabi_ddiv>
 80082c6:	9006      	str	r0, [sp, #24]
 80082c8:	9107      	str	r1, [sp, #28]
 80082ca:	e042      	b.n	8008352 <_dtoa_r+0x3aa>
 80082cc:	7ff00000 	.word	0x7ff00000
 80082d0:	0000270f 	.word	0x0000270f
 80082d4:	0800c06c 	.word	0x0800c06c
 80082d8:	0800c06f 	.word	0x0800c06f
 80082dc:	0800c304 	.word	0x0800c304
 80082e0:	0800c305 	.word	0x0800c305
 80082e4:	3ff00000 	.word	0x3ff00000
 80082e8:	fffffc01 	.word	0xfffffc01
 80082ec:	3ff80000 	.word	0x3ff80000
 80082f0:	636f4361 	.word	0x636f4361
 80082f4:	3fd287a7 	.word	0x3fd287a7
 80082f8:	8b60c8b3 	.word	0x8b60c8b3
 80082fc:	3fc68a28 	.word	0x3fc68a28
 8008300:	509f79fb 	.word	0x509f79fb
 8008304:	3fd34413 	.word	0x3fd34413
 8008308:	0800c108 	.word	0x0800c108
 800830c:	00000432 	.word	0x00000432
 8008310:	00000412 	.word	0x00000412
 8008314:	fe100000 	.word	0xfe100000
 8008318:	0800c0e0 	.word	0x0800c0e0
 800831c:	2302      	movs	r3, #2
 800831e:	930e      	str	r3, [sp, #56]	; 0x38
 8008320:	2f00      	cmp	r7, #0
 8008322:	d016      	beq.n	8008352 <_dtoa_r+0x3aa>
 8008324:	9812      	ldr	r0, [sp, #72]	; 0x48
 8008326:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8008328:	427c      	negs	r4, r7
 800832a:	330d      	adds	r3, #13
 800832c:	4023      	ands	r3, r4
 800832e:	4ace      	ldr	r2, [pc, #824]	; (8008668 <_dtoa_r+0x6c0>)
 8008330:	00db      	lsls	r3, r3, #3
 8008332:	18d3      	adds	r3, r2, r3
 8008334:	681a      	ldr	r2, [r3, #0]
 8008336:	685b      	ldr	r3, [r3, #4]
 8008338:	f7f9 ff50 	bl	80021dc <__aeabi_dmul>
 800833c:	2300      	movs	r3, #0
 800833e:	2601      	movs	r6, #1
 8008340:	001d      	movs	r5, r3
 8008342:	9006      	str	r0, [sp, #24]
 8008344:	9107      	str	r1, [sp, #28]
 8008346:	1124      	asrs	r4, r4, #4
 8008348:	2c00      	cmp	r4, #0
 800834a:	d000      	beq.n	800834e <_dtoa_r+0x3a6>
 800834c:	e08c      	b.n	8008468 <_dtoa_r+0x4c0>
 800834e:	2b00      	cmp	r3, #0
 8008350:	d1b9      	bne.n	80082c6 <_dtoa_r+0x31e>
 8008352:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8008354:	2b00      	cmp	r3, #0
 8008356:	d100      	bne.n	800835a <_dtoa_r+0x3b2>
 8008358:	e096      	b.n	8008488 <_dtoa_r+0x4e0>
 800835a:	9c06      	ldr	r4, [sp, #24]
 800835c:	9d07      	ldr	r5, [sp, #28]
 800835e:	2200      	movs	r2, #0
 8008360:	4bc2      	ldr	r3, [pc, #776]	; (800866c <_dtoa_r+0x6c4>)
 8008362:	0020      	movs	r0, r4
 8008364:	0029      	movs	r1, r5
 8008366:	f7f8 f881 	bl	800046c <__aeabi_dcmplt>
 800836a:	2800      	cmp	r0, #0
 800836c:	d100      	bne.n	8008370 <_dtoa_r+0x3c8>
 800836e:	e08b      	b.n	8008488 <_dtoa_r+0x4e0>
 8008370:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008372:	2b00      	cmp	r3, #0
 8008374:	d100      	bne.n	8008378 <_dtoa_r+0x3d0>
 8008376:	e087      	b.n	8008488 <_dtoa_r+0x4e0>
 8008378:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800837a:	2b00      	cmp	r3, #0
 800837c:	dd41      	ble.n	8008402 <_dtoa_r+0x45a>
 800837e:	4bbc      	ldr	r3, [pc, #752]	; (8008670 <_dtoa_r+0x6c8>)
 8008380:	2200      	movs	r2, #0
 8008382:	0020      	movs	r0, r4
 8008384:	0029      	movs	r1, r5
 8008386:	f7f9 ff29 	bl	80021dc <__aeabi_dmul>
 800838a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800838c:	9006      	str	r0, [sp, #24]
 800838e:	9107      	str	r1, [sp, #28]
 8008390:	3301      	adds	r3, #1
 8008392:	930e      	str	r3, [sp, #56]	; 0x38
 8008394:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008396:	1e7e      	subs	r6, r7, #1
 8008398:	980e      	ldr	r0, [sp, #56]	; 0x38
 800839a:	9310      	str	r3, [sp, #64]	; 0x40
 800839c:	f7fa fd2a 	bl	8002df4 <__aeabi_i2d>
 80083a0:	9a06      	ldr	r2, [sp, #24]
 80083a2:	9b07      	ldr	r3, [sp, #28]
 80083a4:	f7f9 ff1a 	bl	80021dc <__aeabi_dmul>
 80083a8:	2200      	movs	r2, #0
 80083aa:	4bb2      	ldr	r3, [pc, #712]	; (8008674 <_dtoa_r+0x6cc>)
 80083ac:	f7f8 fff0 	bl	8001390 <__aeabi_dadd>
 80083b0:	4ab1      	ldr	r2, [pc, #708]	; (8008678 <_dtoa_r+0x6d0>)
 80083b2:	900e      	str	r0, [sp, #56]	; 0x38
 80083b4:	910f      	str	r1, [sp, #60]	; 0x3c
 80083b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80083b8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80083ba:	4694      	mov	ip, r2
 80083bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80083be:	4463      	add	r3, ip
 80083c0:	9315      	str	r3, [sp, #84]	; 0x54
 80083c2:	001d      	movs	r5, r3
 80083c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80083c6:	2b00      	cmp	r3, #0
 80083c8:	d161      	bne.n	800848e <_dtoa_r+0x4e6>
 80083ca:	9806      	ldr	r0, [sp, #24]
 80083cc:	9907      	ldr	r1, [sp, #28]
 80083ce:	2200      	movs	r2, #0
 80083d0:	4baa      	ldr	r3, [pc, #680]	; (800867c <_dtoa_r+0x6d4>)
 80083d2:	f7fa f975 	bl	80026c0 <__aeabi_dsub>
 80083d6:	0022      	movs	r2, r4
 80083d8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80083da:	9006      	str	r0, [sp, #24]
 80083dc:	9107      	str	r1, [sp, #28]
 80083de:	f7f8 f859 	bl	8000494 <__aeabi_dcmpgt>
 80083e2:	2800      	cmp	r0, #0
 80083e4:	d000      	beq.n	80083e8 <_dtoa_r+0x440>
 80083e6:	e2a8      	b.n	800893a <_dtoa_r+0x992>
 80083e8:	48a5      	ldr	r0, [pc, #660]	; (8008680 <_dtoa_r+0x6d8>)
 80083ea:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80083ec:	4684      	mov	ip, r0
 80083ee:	4461      	add	r1, ip
 80083f0:	000b      	movs	r3, r1
 80083f2:	9806      	ldr	r0, [sp, #24]
 80083f4:	9907      	ldr	r1, [sp, #28]
 80083f6:	0022      	movs	r2, r4
 80083f8:	f7f8 f838 	bl	800046c <__aeabi_dcmplt>
 80083fc:	2800      	cmp	r0, #0
 80083fe:	d000      	beq.n	8008402 <_dtoa_r+0x45a>
 8008400:	e295      	b.n	800892e <_dtoa_r+0x986>
 8008402:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008404:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8008406:	9306      	str	r3, [sp, #24]
 8008408:	9407      	str	r4, [sp, #28]
 800840a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800840c:	2b00      	cmp	r3, #0
 800840e:	da00      	bge.n	8008412 <_dtoa_r+0x46a>
 8008410:	e15c      	b.n	80086cc <_dtoa_r+0x724>
 8008412:	2f0e      	cmp	r7, #14
 8008414:	dd00      	ble.n	8008418 <_dtoa_r+0x470>
 8008416:	e159      	b.n	80086cc <_dtoa_r+0x724>
 8008418:	4b93      	ldr	r3, [pc, #588]	; (8008668 <_dtoa_r+0x6c0>)
 800841a:	00fa      	lsls	r2, r7, #3
 800841c:	189b      	adds	r3, r3, r2
 800841e:	685c      	ldr	r4, [r3, #4]
 8008420:	681b      	ldr	r3, [r3, #0]
 8008422:	9304      	str	r3, [sp, #16]
 8008424:	9405      	str	r4, [sp, #20]
 8008426:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008428:	2b00      	cmp	r3, #0
 800842a:	db00      	blt.n	800842e <_dtoa_r+0x486>
 800842c:	e0d8      	b.n	80085e0 <_dtoa_r+0x638>
 800842e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008430:	2b00      	cmp	r3, #0
 8008432:	dd00      	ble.n	8008436 <_dtoa_r+0x48e>
 8008434:	e0d4      	b.n	80085e0 <_dtoa_r+0x638>
 8008436:	d000      	beq.n	800843a <_dtoa_r+0x492>
 8008438:	e27d      	b.n	8008936 <_dtoa_r+0x98e>
 800843a:	9804      	ldr	r0, [sp, #16]
 800843c:	9905      	ldr	r1, [sp, #20]
 800843e:	2200      	movs	r2, #0
 8008440:	4b8e      	ldr	r3, [pc, #568]	; (800867c <_dtoa_r+0x6d4>)
 8008442:	f7f9 fecb 	bl	80021dc <__aeabi_dmul>
 8008446:	9a06      	ldr	r2, [sp, #24]
 8008448:	9b07      	ldr	r3, [sp, #28]
 800844a:	f7f8 f82d 	bl	80004a8 <__aeabi_dcmpge>
 800844e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008450:	9304      	str	r3, [sp, #16]
 8008452:	001e      	movs	r6, r3
 8008454:	2800      	cmp	r0, #0
 8008456:	d000      	beq.n	800845a <_dtoa_r+0x4b2>
 8008458:	e24f      	b.n	80088fa <_dtoa_r+0x952>
 800845a:	9b08      	ldr	r3, [sp, #32]
 800845c:	9a08      	ldr	r2, [sp, #32]
 800845e:	1c5d      	adds	r5, r3, #1
 8008460:	2331      	movs	r3, #49	; 0x31
 8008462:	3701      	adds	r7, #1
 8008464:	7013      	strb	r3, [r2, #0]
 8008466:	e24b      	b.n	8008900 <_dtoa_r+0x958>
 8008468:	4234      	tst	r4, r6
 800846a:	d00a      	beq.n	8008482 <_dtoa_r+0x4da>
 800846c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800846e:	4a85      	ldr	r2, [pc, #532]	; (8008684 <_dtoa_r+0x6dc>)
 8008470:	3301      	adds	r3, #1
 8008472:	930e      	str	r3, [sp, #56]	; 0x38
 8008474:	00eb      	lsls	r3, r5, #3
 8008476:	189b      	adds	r3, r3, r2
 8008478:	681a      	ldr	r2, [r3, #0]
 800847a:	685b      	ldr	r3, [r3, #4]
 800847c:	f7f9 feae 	bl	80021dc <__aeabi_dmul>
 8008480:	0033      	movs	r3, r6
 8008482:	1064      	asrs	r4, r4, #1
 8008484:	3501      	adds	r5, #1
 8008486:	e75f      	b.n	8008348 <_dtoa_r+0x3a0>
 8008488:	003e      	movs	r6, r7
 800848a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800848c:	e784      	b.n	8008398 <_dtoa_r+0x3f0>
 800848e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008490:	990d      	ldr	r1, [sp, #52]	; 0x34
 8008492:	1e5a      	subs	r2, r3, #1
 8008494:	4b74      	ldr	r3, [pc, #464]	; (8008668 <_dtoa_r+0x6c0>)
 8008496:	00d2      	lsls	r2, r2, #3
 8008498:	189b      	adds	r3, r3, r2
 800849a:	681a      	ldr	r2, [r3, #0]
 800849c:	685b      	ldr	r3, [r3, #4]
 800849e:	2900      	cmp	r1, #0
 80084a0:	d049      	beq.n	8008536 <_dtoa_r+0x58e>
 80084a2:	2000      	movs	r0, #0
 80084a4:	4978      	ldr	r1, [pc, #480]	; (8008688 <_dtoa_r+0x6e0>)
 80084a6:	f7f9 fa8f 	bl	80019c8 <__aeabi_ddiv>
 80084aa:	002b      	movs	r3, r5
 80084ac:	0022      	movs	r2, r4
 80084ae:	f7fa f907 	bl	80026c0 <__aeabi_dsub>
 80084b2:	9b08      	ldr	r3, [sp, #32]
 80084b4:	900e      	str	r0, [sp, #56]	; 0x38
 80084b6:	910f      	str	r1, [sp, #60]	; 0x3c
 80084b8:	9315      	str	r3, [sp, #84]	; 0x54
 80084ba:	9806      	ldr	r0, [sp, #24]
 80084bc:	9907      	ldr	r1, [sp, #28]
 80084be:	f7fa fc63 	bl	8002d88 <__aeabi_d2iz>
 80084c2:	0004      	movs	r4, r0
 80084c4:	f7fa fc96 	bl	8002df4 <__aeabi_i2d>
 80084c8:	0002      	movs	r2, r0
 80084ca:	000b      	movs	r3, r1
 80084cc:	9806      	ldr	r0, [sp, #24]
 80084ce:	9907      	ldr	r1, [sp, #28]
 80084d0:	f7fa f8f6 	bl	80026c0 <__aeabi_dsub>
 80084d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80084d6:	3430      	adds	r4, #48	; 0x30
 80084d8:	1c5d      	adds	r5, r3, #1
 80084da:	701c      	strb	r4, [r3, #0]
 80084dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80084de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80084e0:	9006      	str	r0, [sp, #24]
 80084e2:	9107      	str	r1, [sp, #28]
 80084e4:	f7f7 ffc2 	bl	800046c <__aeabi_dcmplt>
 80084e8:	2800      	cmp	r0, #0
 80084ea:	d16c      	bne.n	80085c6 <_dtoa_r+0x61e>
 80084ec:	9a06      	ldr	r2, [sp, #24]
 80084ee:	9b07      	ldr	r3, [sp, #28]
 80084f0:	2000      	movs	r0, #0
 80084f2:	495e      	ldr	r1, [pc, #376]	; (800866c <_dtoa_r+0x6c4>)
 80084f4:	f7fa f8e4 	bl	80026c0 <__aeabi_dsub>
 80084f8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80084fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80084fc:	f7f7 ffb6 	bl	800046c <__aeabi_dcmplt>
 8008500:	2800      	cmp	r0, #0
 8008502:	d000      	beq.n	8008506 <_dtoa_r+0x55e>
 8008504:	e0c3      	b.n	800868e <_dtoa_r+0x6e6>
 8008506:	9b08      	ldr	r3, [sp, #32]
 8008508:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800850a:	1aeb      	subs	r3, r5, r3
 800850c:	429a      	cmp	r2, r3
 800850e:	dc00      	bgt.n	8008512 <_dtoa_r+0x56a>
 8008510:	e777      	b.n	8008402 <_dtoa_r+0x45a>
 8008512:	980e      	ldr	r0, [sp, #56]	; 0x38
 8008514:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008516:	2200      	movs	r2, #0
 8008518:	4b55      	ldr	r3, [pc, #340]	; (8008670 <_dtoa_r+0x6c8>)
 800851a:	f7f9 fe5f 	bl	80021dc <__aeabi_dmul>
 800851e:	2200      	movs	r2, #0
 8008520:	900e      	str	r0, [sp, #56]	; 0x38
 8008522:	910f      	str	r1, [sp, #60]	; 0x3c
 8008524:	9806      	ldr	r0, [sp, #24]
 8008526:	9907      	ldr	r1, [sp, #28]
 8008528:	4b51      	ldr	r3, [pc, #324]	; (8008670 <_dtoa_r+0x6c8>)
 800852a:	f7f9 fe57 	bl	80021dc <__aeabi_dmul>
 800852e:	9515      	str	r5, [sp, #84]	; 0x54
 8008530:	9006      	str	r0, [sp, #24]
 8008532:	9107      	str	r1, [sp, #28]
 8008534:	e7c1      	b.n	80084ba <_dtoa_r+0x512>
 8008536:	0020      	movs	r0, r4
 8008538:	0029      	movs	r1, r5
 800853a:	f7f9 fe4f 	bl	80021dc <__aeabi_dmul>
 800853e:	9c08      	ldr	r4, [sp, #32]
 8008540:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008542:	0023      	movs	r3, r4
 8008544:	4694      	mov	ip, r2
 8008546:	900e      	str	r0, [sp, #56]	; 0x38
 8008548:	910f      	str	r1, [sp, #60]	; 0x3c
 800854a:	4463      	add	r3, ip
 800854c:	9315      	str	r3, [sp, #84]	; 0x54
 800854e:	9806      	ldr	r0, [sp, #24]
 8008550:	9907      	ldr	r1, [sp, #28]
 8008552:	f7fa fc19 	bl	8002d88 <__aeabi_d2iz>
 8008556:	0005      	movs	r5, r0
 8008558:	f7fa fc4c 	bl	8002df4 <__aeabi_i2d>
 800855c:	000b      	movs	r3, r1
 800855e:	0002      	movs	r2, r0
 8008560:	9806      	ldr	r0, [sp, #24]
 8008562:	9907      	ldr	r1, [sp, #28]
 8008564:	f7fa f8ac 	bl	80026c0 <__aeabi_dsub>
 8008568:	3530      	adds	r5, #48	; 0x30
 800856a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800856c:	7025      	strb	r5, [r4, #0]
 800856e:	3401      	adds	r4, #1
 8008570:	9006      	str	r0, [sp, #24]
 8008572:	9107      	str	r1, [sp, #28]
 8008574:	42a3      	cmp	r3, r4
 8008576:	d12a      	bne.n	80085ce <_dtoa_r+0x626>
 8008578:	980e      	ldr	r0, [sp, #56]	; 0x38
 800857a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800857c:	9a08      	ldr	r2, [sp, #32]
 800857e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008580:	4694      	mov	ip, r2
 8008582:	4463      	add	r3, ip
 8008584:	2200      	movs	r2, #0
 8008586:	001d      	movs	r5, r3
 8008588:	4b3f      	ldr	r3, [pc, #252]	; (8008688 <_dtoa_r+0x6e0>)
 800858a:	f7f8 ff01 	bl	8001390 <__aeabi_dadd>
 800858e:	0002      	movs	r2, r0
 8008590:	000b      	movs	r3, r1
 8008592:	9806      	ldr	r0, [sp, #24]
 8008594:	9907      	ldr	r1, [sp, #28]
 8008596:	f7f7 ff7d 	bl	8000494 <__aeabi_dcmpgt>
 800859a:	2800      	cmp	r0, #0
 800859c:	d000      	beq.n	80085a0 <_dtoa_r+0x5f8>
 800859e:	e076      	b.n	800868e <_dtoa_r+0x6e6>
 80085a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80085a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80085a4:	2000      	movs	r0, #0
 80085a6:	4938      	ldr	r1, [pc, #224]	; (8008688 <_dtoa_r+0x6e0>)
 80085a8:	f7fa f88a 	bl	80026c0 <__aeabi_dsub>
 80085ac:	0002      	movs	r2, r0
 80085ae:	000b      	movs	r3, r1
 80085b0:	9806      	ldr	r0, [sp, #24]
 80085b2:	9907      	ldr	r1, [sp, #28]
 80085b4:	f7f7 ff5a 	bl	800046c <__aeabi_dcmplt>
 80085b8:	2800      	cmp	r0, #0
 80085ba:	d100      	bne.n	80085be <_dtoa_r+0x616>
 80085bc:	e721      	b.n	8008402 <_dtoa_r+0x45a>
 80085be:	1e6b      	subs	r3, r5, #1
 80085c0:	781a      	ldrb	r2, [r3, #0]
 80085c2:	2a30      	cmp	r2, #48	; 0x30
 80085c4:	d001      	beq.n	80085ca <_dtoa_r+0x622>
 80085c6:	0037      	movs	r7, r6
 80085c8:	e03f      	b.n	800864a <_dtoa_r+0x6a2>
 80085ca:	001d      	movs	r5, r3
 80085cc:	e7f7      	b.n	80085be <_dtoa_r+0x616>
 80085ce:	9806      	ldr	r0, [sp, #24]
 80085d0:	9907      	ldr	r1, [sp, #28]
 80085d2:	2200      	movs	r2, #0
 80085d4:	4b26      	ldr	r3, [pc, #152]	; (8008670 <_dtoa_r+0x6c8>)
 80085d6:	f7f9 fe01 	bl	80021dc <__aeabi_dmul>
 80085da:	9006      	str	r0, [sp, #24]
 80085dc:	9107      	str	r1, [sp, #28]
 80085de:	e7b6      	b.n	800854e <_dtoa_r+0x5a6>
 80085e0:	9e08      	ldr	r6, [sp, #32]
 80085e2:	9a04      	ldr	r2, [sp, #16]
 80085e4:	9b05      	ldr	r3, [sp, #20]
 80085e6:	9806      	ldr	r0, [sp, #24]
 80085e8:	9907      	ldr	r1, [sp, #28]
 80085ea:	f7f9 f9ed 	bl	80019c8 <__aeabi_ddiv>
 80085ee:	f7fa fbcb 	bl	8002d88 <__aeabi_d2iz>
 80085f2:	0004      	movs	r4, r0
 80085f4:	f7fa fbfe 	bl	8002df4 <__aeabi_i2d>
 80085f8:	9a04      	ldr	r2, [sp, #16]
 80085fa:	9b05      	ldr	r3, [sp, #20]
 80085fc:	f7f9 fdee 	bl	80021dc <__aeabi_dmul>
 8008600:	0002      	movs	r2, r0
 8008602:	000b      	movs	r3, r1
 8008604:	9806      	ldr	r0, [sp, #24]
 8008606:	9907      	ldr	r1, [sp, #28]
 8008608:	f7fa f85a 	bl	80026c0 <__aeabi_dsub>
 800860c:	0023      	movs	r3, r4
 800860e:	3330      	adds	r3, #48	; 0x30
 8008610:	7033      	strb	r3, [r6, #0]
 8008612:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008614:	9b08      	ldr	r3, [sp, #32]
 8008616:	1c75      	adds	r5, r6, #1
 8008618:	1aeb      	subs	r3, r5, r3
 800861a:	429a      	cmp	r2, r3
 800861c:	d148      	bne.n	80086b0 <_dtoa_r+0x708>
 800861e:	0002      	movs	r2, r0
 8008620:	000b      	movs	r3, r1
 8008622:	f7f8 feb5 	bl	8001390 <__aeabi_dadd>
 8008626:	9a04      	ldr	r2, [sp, #16]
 8008628:	9b05      	ldr	r3, [sp, #20]
 800862a:	9006      	str	r0, [sp, #24]
 800862c:	9107      	str	r1, [sp, #28]
 800862e:	f7f7 ff31 	bl	8000494 <__aeabi_dcmpgt>
 8008632:	2800      	cmp	r0, #0
 8008634:	d12a      	bne.n	800868c <_dtoa_r+0x6e4>
 8008636:	9a04      	ldr	r2, [sp, #16]
 8008638:	9b05      	ldr	r3, [sp, #20]
 800863a:	9806      	ldr	r0, [sp, #24]
 800863c:	9907      	ldr	r1, [sp, #28]
 800863e:	f7f7 ff0f 	bl	8000460 <__aeabi_dcmpeq>
 8008642:	2800      	cmp	r0, #0
 8008644:	d001      	beq.n	800864a <_dtoa_r+0x6a2>
 8008646:	07e3      	lsls	r3, r4, #31
 8008648:	d420      	bmi.n	800868c <_dtoa_r+0x6e4>
 800864a:	9903      	ldr	r1, [sp, #12]
 800864c:	9802      	ldr	r0, [sp, #8]
 800864e:	f000 fe2b 	bl	80092a8 <_Bfree>
 8008652:	2300      	movs	r3, #0
 8008654:	702b      	strb	r3, [r5, #0]
 8008656:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008658:	3701      	adds	r7, #1
 800865a:	601f      	str	r7, [r3, #0]
 800865c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800865e:	2b00      	cmp	r3, #0
 8008660:	d100      	bne.n	8008664 <_dtoa_r+0x6bc>
 8008662:	e4e6      	b.n	8008032 <_dtoa_r+0x8a>
 8008664:	601d      	str	r5, [r3, #0]
 8008666:	e4e4      	b.n	8008032 <_dtoa_r+0x8a>
 8008668:	0800c108 	.word	0x0800c108
 800866c:	3ff00000 	.word	0x3ff00000
 8008670:	40240000 	.word	0x40240000
 8008674:	401c0000 	.word	0x401c0000
 8008678:	fcc00000 	.word	0xfcc00000
 800867c:	40140000 	.word	0x40140000
 8008680:	7cc00000 	.word	0x7cc00000
 8008684:	0800c0e0 	.word	0x0800c0e0
 8008688:	3fe00000 	.word	0x3fe00000
 800868c:	003e      	movs	r6, r7
 800868e:	1e6b      	subs	r3, r5, #1
 8008690:	781a      	ldrb	r2, [r3, #0]
 8008692:	2a39      	cmp	r2, #57	; 0x39
 8008694:	d106      	bne.n	80086a4 <_dtoa_r+0x6fc>
 8008696:	9a08      	ldr	r2, [sp, #32]
 8008698:	429a      	cmp	r2, r3
 800869a:	d107      	bne.n	80086ac <_dtoa_r+0x704>
 800869c:	2330      	movs	r3, #48	; 0x30
 800869e:	7013      	strb	r3, [r2, #0]
 80086a0:	0013      	movs	r3, r2
 80086a2:	3601      	adds	r6, #1
 80086a4:	781a      	ldrb	r2, [r3, #0]
 80086a6:	3201      	adds	r2, #1
 80086a8:	701a      	strb	r2, [r3, #0]
 80086aa:	e78c      	b.n	80085c6 <_dtoa_r+0x61e>
 80086ac:	001d      	movs	r5, r3
 80086ae:	e7ee      	b.n	800868e <_dtoa_r+0x6e6>
 80086b0:	2200      	movs	r2, #0
 80086b2:	4ba4      	ldr	r3, [pc, #656]	; (8008944 <_dtoa_r+0x99c>)
 80086b4:	f7f9 fd92 	bl	80021dc <__aeabi_dmul>
 80086b8:	2200      	movs	r2, #0
 80086ba:	2300      	movs	r3, #0
 80086bc:	9006      	str	r0, [sp, #24]
 80086be:	9107      	str	r1, [sp, #28]
 80086c0:	002e      	movs	r6, r5
 80086c2:	f7f7 fecd 	bl	8000460 <__aeabi_dcmpeq>
 80086c6:	2800      	cmp	r0, #0
 80086c8:	d08b      	beq.n	80085e2 <_dtoa_r+0x63a>
 80086ca:	e7be      	b.n	800864a <_dtoa_r+0x6a2>
 80086cc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80086ce:	2a00      	cmp	r2, #0
 80086d0:	d100      	bne.n	80086d4 <_dtoa_r+0x72c>
 80086d2:	e0da      	b.n	800888a <_dtoa_r+0x8e2>
 80086d4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80086d6:	2a01      	cmp	r2, #1
 80086d8:	dd00      	ble.n	80086dc <_dtoa_r+0x734>
 80086da:	e0bd      	b.n	8008858 <_dtoa_r+0x8b0>
 80086dc:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80086de:	2a00      	cmp	r2, #0
 80086e0:	d100      	bne.n	80086e4 <_dtoa_r+0x73c>
 80086e2:	e0b5      	b.n	8008850 <_dtoa_r+0x8a8>
 80086e4:	4a98      	ldr	r2, [pc, #608]	; (8008948 <_dtoa_r+0x9a0>)
 80086e6:	189b      	adds	r3, r3, r2
 80086e8:	9d04      	ldr	r5, [sp, #16]
 80086ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80086ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80086ee:	2101      	movs	r1, #1
 80086f0:	18d2      	adds	r2, r2, r3
 80086f2:	920a      	str	r2, [sp, #40]	; 0x28
 80086f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80086f6:	9802      	ldr	r0, [sp, #8]
 80086f8:	18d3      	adds	r3, r2, r3
 80086fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80086fc:	f000 fe74 	bl	80093e8 <__i2b>
 8008700:	0006      	movs	r6, r0
 8008702:	2c00      	cmp	r4, #0
 8008704:	dd0e      	ble.n	8008724 <_dtoa_r+0x77c>
 8008706:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008708:	2b00      	cmp	r3, #0
 800870a:	dd0b      	ble.n	8008724 <_dtoa_r+0x77c>
 800870c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800870e:	0023      	movs	r3, r4
 8008710:	4294      	cmp	r4, r2
 8008712:	dd00      	ble.n	8008716 <_dtoa_r+0x76e>
 8008714:	0013      	movs	r3, r2
 8008716:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008718:	1ae4      	subs	r4, r4, r3
 800871a:	1ad2      	subs	r2, r2, r3
 800871c:	920a      	str	r2, [sp, #40]	; 0x28
 800871e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8008720:	1ad3      	subs	r3, r2, r3
 8008722:	930b      	str	r3, [sp, #44]	; 0x2c
 8008724:	9b04      	ldr	r3, [sp, #16]
 8008726:	2b00      	cmp	r3, #0
 8008728:	d01f      	beq.n	800876a <_dtoa_r+0x7c2>
 800872a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800872c:	2b00      	cmp	r3, #0
 800872e:	d100      	bne.n	8008732 <_dtoa_r+0x78a>
 8008730:	e0af      	b.n	8008892 <_dtoa_r+0x8ea>
 8008732:	2d00      	cmp	r5, #0
 8008734:	d011      	beq.n	800875a <_dtoa_r+0x7b2>
 8008736:	0031      	movs	r1, r6
 8008738:	002a      	movs	r2, r5
 800873a:	9802      	ldr	r0, [sp, #8]
 800873c:	f000 feec 	bl	8009518 <__pow5mult>
 8008740:	9a03      	ldr	r2, [sp, #12]
 8008742:	0001      	movs	r1, r0
 8008744:	0006      	movs	r6, r0
 8008746:	9802      	ldr	r0, [sp, #8]
 8008748:	f000 fe57 	bl	80093fa <__multiply>
 800874c:	9903      	ldr	r1, [sp, #12]
 800874e:	9010      	str	r0, [sp, #64]	; 0x40
 8008750:	9802      	ldr	r0, [sp, #8]
 8008752:	f000 fda9 	bl	80092a8 <_Bfree>
 8008756:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008758:	9303      	str	r3, [sp, #12]
 800875a:	9b04      	ldr	r3, [sp, #16]
 800875c:	1b5a      	subs	r2, r3, r5
 800875e:	d004      	beq.n	800876a <_dtoa_r+0x7c2>
 8008760:	9903      	ldr	r1, [sp, #12]
 8008762:	9802      	ldr	r0, [sp, #8]
 8008764:	f000 fed8 	bl	8009518 <__pow5mult>
 8008768:	9003      	str	r0, [sp, #12]
 800876a:	2101      	movs	r1, #1
 800876c:	9802      	ldr	r0, [sp, #8]
 800876e:	f000 fe3b 	bl	80093e8 <__i2b>
 8008772:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008774:	9004      	str	r0, [sp, #16]
 8008776:	2b00      	cmp	r3, #0
 8008778:	d100      	bne.n	800877c <_dtoa_r+0x7d4>
 800877a:	e1e3      	b.n	8008b44 <_dtoa_r+0xb9c>
 800877c:	001a      	movs	r2, r3
 800877e:	0001      	movs	r1, r0
 8008780:	9802      	ldr	r0, [sp, #8]
 8008782:	f000 fec9 	bl	8009518 <__pow5mult>
 8008786:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008788:	9004      	str	r0, [sp, #16]
 800878a:	2b01      	cmp	r3, #1
 800878c:	dd00      	ble.n	8008790 <_dtoa_r+0x7e8>
 800878e:	e082      	b.n	8008896 <_dtoa_r+0x8ee>
 8008790:	2500      	movs	r5, #0
 8008792:	9b06      	ldr	r3, [sp, #24]
 8008794:	42ab      	cmp	r3, r5
 8008796:	d10e      	bne.n	80087b6 <_dtoa_r+0x80e>
 8008798:	9b07      	ldr	r3, [sp, #28]
 800879a:	031b      	lsls	r3, r3, #12
 800879c:	42ab      	cmp	r3, r5
 800879e:	d10a      	bne.n	80087b6 <_dtoa_r+0x80e>
 80087a0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80087a2:	9a07      	ldr	r2, [sp, #28]
 80087a4:	4213      	tst	r3, r2
 80087a6:	d006      	beq.n	80087b6 <_dtoa_r+0x80e>
 80087a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80087aa:	3501      	adds	r5, #1
 80087ac:	3301      	adds	r3, #1
 80087ae:	930a      	str	r3, [sp, #40]	; 0x28
 80087b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80087b2:	3301      	adds	r3, #1
 80087b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80087b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80087b8:	2001      	movs	r0, #1
 80087ba:	2b00      	cmp	r3, #0
 80087bc:	d16c      	bne.n	8008898 <_dtoa_r+0x8f0>
 80087be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80087c0:	1818      	adds	r0, r3, r0
 80087c2:	231f      	movs	r3, #31
 80087c4:	4018      	ands	r0, r3
 80087c6:	d07e      	beq.n	80088c6 <_dtoa_r+0x91e>
 80087c8:	3301      	adds	r3, #1
 80087ca:	1a1b      	subs	r3, r3, r0
 80087cc:	2b04      	cmp	r3, #4
 80087ce:	dd70      	ble.n	80088b2 <_dtoa_r+0x90a>
 80087d0:	231c      	movs	r3, #28
 80087d2:	1a18      	subs	r0, r3, r0
 80087d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80087d6:	1824      	adds	r4, r4, r0
 80087d8:	181b      	adds	r3, r3, r0
 80087da:	930a      	str	r3, [sp, #40]	; 0x28
 80087dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80087de:	181b      	adds	r3, r3, r0
 80087e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80087e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80087e4:	2b00      	cmp	r3, #0
 80087e6:	dd05      	ble.n	80087f4 <_dtoa_r+0x84c>
 80087e8:	001a      	movs	r2, r3
 80087ea:	9903      	ldr	r1, [sp, #12]
 80087ec:	9802      	ldr	r0, [sp, #8]
 80087ee:	f000 fee5 	bl	80095bc <__lshift>
 80087f2:	9003      	str	r0, [sp, #12]
 80087f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80087f6:	2b00      	cmp	r3, #0
 80087f8:	dd05      	ble.n	8008806 <_dtoa_r+0x85e>
 80087fa:	001a      	movs	r2, r3
 80087fc:	9904      	ldr	r1, [sp, #16]
 80087fe:	9802      	ldr	r0, [sp, #8]
 8008800:	f000 fedc 	bl	80095bc <__lshift>
 8008804:	9004      	str	r0, [sp, #16]
 8008806:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8008808:	2b00      	cmp	r3, #0
 800880a:	d05e      	beq.n	80088ca <_dtoa_r+0x922>
 800880c:	9904      	ldr	r1, [sp, #16]
 800880e:	9803      	ldr	r0, [sp, #12]
 8008810:	f000 ff26 	bl	8009660 <__mcmp>
 8008814:	2800      	cmp	r0, #0
 8008816:	da58      	bge.n	80088ca <_dtoa_r+0x922>
 8008818:	2300      	movs	r3, #0
 800881a:	220a      	movs	r2, #10
 800881c:	9903      	ldr	r1, [sp, #12]
 800881e:	9802      	ldr	r0, [sp, #8]
 8008820:	f000 fd5b 	bl	80092da <__multadd>
 8008824:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008826:	3f01      	subs	r7, #1
 8008828:	9003      	str	r0, [sp, #12]
 800882a:	2b00      	cmp	r3, #0
 800882c:	d100      	bne.n	8008830 <_dtoa_r+0x888>
 800882e:	e190      	b.n	8008b52 <_dtoa_r+0xbaa>
 8008830:	2300      	movs	r3, #0
 8008832:	0031      	movs	r1, r6
 8008834:	220a      	movs	r2, #10
 8008836:	9802      	ldr	r0, [sp, #8]
 8008838:	f000 fd4f 	bl	80092da <__multadd>
 800883c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800883e:	0006      	movs	r6, r0
 8008840:	2b00      	cmp	r3, #0
 8008842:	dd00      	ble.n	8008846 <_dtoa_r+0x89e>
 8008844:	e088      	b.n	8008958 <_dtoa_r+0x9b0>
 8008846:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008848:	2b02      	cmp	r3, #2
 800884a:	dc00      	bgt.n	800884e <_dtoa_r+0x8a6>
 800884c:	e084      	b.n	8008958 <_dtoa_r+0x9b0>
 800884e:	e044      	b.n	80088da <_dtoa_r+0x932>
 8008850:	2336      	movs	r3, #54	; 0x36
 8008852:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008854:	1a9b      	subs	r3, r3, r2
 8008856:	e747      	b.n	80086e8 <_dtoa_r+0x740>
 8008858:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800885a:	1e5d      	subs	r5, r3, #1
 800885c:	9b04      	ldr	r3, [sp, #16]
 800885e:	42ab      	cmp	r3, r5
 8008860:	db08      	blt.n	8008874 <_dtoa_r+0x8cc>
 8008862:	1b5d      	subs	r5, r3, r5
 8008864:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008866:	2b00      	cmp	r3, #0
 8008868:	da0c      	bge.n	8008884 <_dtoa_r+0x8dc>
 800886a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800886c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800886e:	1a9c      	subs	r4, r3, r2
 8008870:	2300      	movs	r3, #0
 8008872:	e73b      	b.n	80086ec <_dtoa_r+0x744>
 8008874:	9b04      	ldr	r3, [sp, #16]
 8008876:	9504      	str	r5, [sp, #16]
 8008878:	1aea      	subs	r2, r5, r3
 800887a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800887c:	2500      	movs	r5, #0
 800887e:	189b      	adds	r3, r3, r2
 8008880:	9311      	str	r3, [sp, #68]	; 0x44
 8008882:	e7ef      	b.n	8008864 <_dtoa_r+0x8bc>
 8008884:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8008886:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008888:	e730      	b.n	80086ec <_dtoa_r+0x744>
 800888a:	9d04      	ldr	r5, [sp, #16]
 800888c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800888e:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8008890:	e737      	b.n	8008702 <_dtoa_r+0x75a>
 8008892:	9a04      	ldr	r2, [sp, #16]
 8008894:	e764      	b.n	8008760 <_dtoa_r+0x7b8>
 8008896:	2500      	movs	r5, #0
 8008898:	9b04      	ldr	r3, [sp, #16]
 800889a:	9a04      	ldr	r2, [sp, #16]
 800889c:	691b      	ldr	r3, [r3, #16]
 800889e:	9310      	str	r3, [sp, #64]	; 0x40
 80088a0:	3303      	adds	r3, #3
 80088a2:	009b      	lsls	r3, r3, #2
 80088a4:	18d3      	adds	r3, r2, r3
 80088a6:	6858      	ldr	r0, [r3, #4]
 80088a8:	f000 fd55 	bl	8009356 <__hi0bits>
 80088ac:	2320      	movs	r3, #32
 80088ae:	1a18      	subs	r0, r3, r0
 80088b0:	e785      	b.n	80087be <_dtoa_r+0x816>
 80088b2:	2b04      	cmp	r3, #4
 80088b4:	d095      	beq.n	80087e2 <_dtoa_r+0x83a>
 80088b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80088b8:	331c      	adds	r3, #28
 80088ba:	18d2      	adds	r2, r2, r3
 80088bc:	920a      	str	r2, [sp, #40]	; 0x28
 80088be:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80088c0:	18e4      	adds	r4, r4, r3
 80088c2:	18d3      	adds	r3, r2, r3
 80088c4:	e78c      	b.n	80087e0 <_dtoa_r+0x838>
 80088c6:	0003      	movs	r3, r0
 80088c8:	e7f5      	b.n	80088b6 <_dtoa_r+0x90e>
 80088ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80088cc:	2b00      	cmp	r3, #0
 80088ce:	dc3d      	bgt.n	800894c <_dtoa_r+0x9a4>
 80088d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80088d2:	2b02      	cmp	r3, #2
 80088d4:	dd3a      	ble.n	800894c <_dtoa_r+0x9a4>
 80088d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80088d8:	930c      	str	r3, [sp, #48]	; 0x30
 80088da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80088dc:	2b00      	cmp	r3, #0
 80088de:	d10c      	bne.n	80088fa <_dtoa_r+0x952>
 80088e0:	9904      	ldr	r1, [sp, #16]
 80088e2:	2205      	movs	r2, #5
 80088e4:	9802      	ldr	r0, [sp, #8]
 80088e6:	f000 fcf8 	bl	80092da <__multadd>
 80088ea:	9004      	str	r0, [sp, #16]
 80088ec:	0001      	movs	r1, r0
 80088ee:	9803      	ldr	r0, [sp, #12]
 80088f0:	f000 feb6 	bl	8009660 <__mcmp>
 80088f4:	2800      	cmp	r0, #0
 80088f6:	dd00      	ble.n	80088fa <_dtoa_r+0x952>
 80088f8:	e5af      	b.n	800845a <_dtoa_r+0x4b2>
 80088fa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80088fc:	9d08      	ldr	r5, [sp, #32]
 80088fe:	43df      	mvns	r7, r3
 8008900:	2300      	movs	r3, #0
 8008902:	9309      	str	r3, [sp, #36]	; 0x24
 8008904:	9904      	ldr	r1, [sp, #16]
 8008906:	9802      	ldr	r0, [sp, #8]
 8008908:	f000 fcce 	bl	80092a8 <_Bfree>
 800890c:	2e00      	cmp	r6, #0
 800890e:	d100      	bne.n	8008912 <_dtoa_r+0x96a>
 8008910:	e69b      	b.n	800864a <_dtoa_r+0x6a2>
 8008912:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008914:	2b00      	cmp	r3, #0
 8008916:	d005      	beq.n	8008924 <_dtoa_r+0x97c>
 8008918:	42b3      	cmp	r3, r6
 800891a:	d003      	beq.n	8008924 <_dtoa_r+0x97c>
 800891c:	0019      	movs	r1, r3
 800891e:	9802      	ldr	r0, [sp, #8]
 8008920:	f000 fcc2 	bl	80092a8 <_Bfree>
 8008924:	0031      	movs	r1, r6
 8008926:	9802      	ldr	r0, [sp, #8]
 8008928:	f000 fcbe 	bl	80092a8 <_Bfree>
 800892c:	e68d      	b.n	800864a <_dtoa_r+0x6a2>
 800892e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008930:	9304      	str	r3, [sp, #16]
 8008932:	001e      	movs	r6, r3
 8008934:	e7e1      	b.n	80088fa <_dtoa_r+0x952>
 8008936:	2300      	movs	r3, #0
 8008938:	e7fa      	b.n	8008930 <_dtoa_r+0x988>
 800893a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800893c:	0037      	movs	r7, r6
 800893e:	9304      	str	r3, [sp, #16]
 8008940:	001e      	movs	r6, r3
 8008942:	e58a      	b.n	800845a <_dtoa_r+0x4b2>
 8008944:	40240000 	.word	0x40240000
 8008948:	00000433 	.word	0x00000433
 800894c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800894e:	2b00      	cmp	r3, #0
 8008950:	d100      	bne.n	8008954 <_dtoa_r+0x9ac>
 8008952:	e0b2      	b.n	8008aba <_dtoa_r+0xb12>
 8008954:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008956:	930c      	str	r3, [sp, #48]	; 0x30
 8008958:	2c00      	cmp	r4, #0
 800895a:	dd05      	ble.n	8008968 <_dtoa_r+0x9c0>
 800895c:	0031      	movs	r1, r6
 800895e:	0022      	movs	r2, r4
 8008960:	9802      	ldr	r0, [sp, #8]
 8008962:	f000 fe2b 	bl	80095bc <__lshift>
 8008966:	0006      	movs	r6, r0
 8008968:	0030      	movs	r0, r6
 800896a:	2d00      	cmp	r5, #0
 800896c:	d011      	beq.n	8008992 <_dtoa_r+0x9ea>
 800896e:	6871      	ldr	r1, [r6, #4]
 8008970:	9802      	ldr	r0, [sp, #8]
 8008972:	f000 fc61 	bl	8009238 <_Balloc>
 8008976:	0031      	movs	r1, r6
 8008978:	0004      	movs	r4, r0
 800897a:	6933      	ldr	r3, [r6, #16]
 800897c:	310c      	adds	r1, #12
 800897e:	1c9a      	adds	r2, r3, #2
 8008980:	0092      	lsls	r2, r2, #2
 8008982:	300c      	adds	r0, #12
 8008984:	f000 fc4d 	bl	8009222 <memcpy>
 8008988:	2201      	movs	r2, #1
 800898a:	0021      	movs	r1, r4
 800898c:	9802      	ldr	r0, [sp, #8]
 800898e:	f000 fe15 	bl	80095bc <__lshift>
 8008992:	9609      	str	r6, [sp, #36]	; 0x24
 8008994:	0006      	movs	r6, r0
 8008996:	9b08      	ldr	r3, [sp, #32]
 8008998:	930a      	str	r3, [sp, #40]	; 0x28
 800899a:	9904      	ldr	r1, [sp, #16]
 800899c:	9803      	ldr	r0, [sp, #12]
 800899e:	f7ff fa7d 	bl	8007e9c <quorem>
 80089a2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80089a4:	900d      	str	r0, [sp, #52]	; 0x34
 80089a6:	0004      	movs	r4, r0
 80089a8:	9803      	ldr	r0, [sp, #12]
 80089aa:	f000 fe59 	bl	8009660 <__mcmp>
 80089ae:	0032      	movs	r2, r6
 80089b0:	9010      	str	r0, [sp, #64]	; 0x40
 80089b2:	9904      	ldr	r1, [sp, #16]
 80089b4:	9802      	ldr	r0, [sp, #8]
 80089b6:	f000 fe6d 	bl	8009694 <__mdiff>
 80089ba:	2301      	movs	r3, #1
 80089bc:	930b      	str	r3, [sp, #44]	; 0x2c
 80089be:	68c3      	ldr	r3, [r0, #12]
 80089c0:	3430      	adds	r4, #48	; 0x30
 80089c2:	0005      	movs	r5, r0
 80089c4:	2b00      	cmp	r3, #0
 80089c6:	d104      	bne.n	80089d2 <_dtoa_r+0xa2a>
 80089c8:	0001      	movs	r1, r0
 80089ca:	9803      	ldr	r0, [sp, #12]
 80089cc:	f000 fe48 	bl	8009660 <__mcmp>
 80089d0:	900b      	str	r0, [sp, #44]	; 0x2c
 80089d2:	0029      	movs	r1, r5
 80089d4:	9802      	ldr	r0, [sp, #8]
 80089d6:	f000 fc67 	bl	80092a8 <_Bfree>
 80089da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80089dc:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80089de:	4313      	orrs	r3, r2
 80089e0:	d10e      	bne.n	8008a00 <_dtoa_r+0xa58>
 80089e2:	9a06      	ldr	r2, [sp, #24]
 80089e4:	3301      	adds	r3, #1
 80089e6:	4213      	tst	r3, r2
 80089e8:	d10a      	bne.n	8008a00 <_dtoa_r+0xa58>
 80089ea:	2c39      	cmp	r4, #57	; 0x39
 80089ec:	d026      	beq.n	8008a3c <_dtoa_r+0xa94>
 80089ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80089f0:	2b00      	cmp	r3, #0
 80089f2:	dd01      	ble.n	80089f8 <_dtoa_r+0xa50>
 80089f4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80089f6:	3431      	adds	r4, #49	; 0x31
 80089f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80089fa:	1c5d      	adds	r5, r3, #1
 80089fc:	701c      	strb	r4, [r3, #0]
 80089fe:	e781      	b.n	8008904 <_dtoa_r+0x95c>
 8008a00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008a02:	2b00      	cmp	r3, #0
 8008a04:	db07      	blt.n	8008a16 <_dtoa_r+0xa6e>
 8008a06:	001d      	movs	r5, r3
 8008a08:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008a0a:	431d      	orrs	r5, r3
 8008a0c:	d122      	bne.n	8008a54 <_dtoa_r+0xaac>
 8008a0e:	2301      	movs	r3, #1
 8008a10:	9a06      	ldr	r2, [sp, #24]
 8008a12:	4213      	tst	r3, r2
 8008a14:	d11e      	bne.n	8008a54 <_dtoa_r+0xaac>
 8008a16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008a18:	2b00      	cmp	r3, #0
 8008a1a:	dded      	ble.n	80089f8 <_dtoa_r+0xa50>
 8008a1c:	9903      	ldr	r1, [sp, #12]
 8008a1e:	2201      	movs	r2, #1
 8008a20:	9802      	ldr	r0, [sp, #8]
 8008a22:	f000 fdcb 	bl	80095bc <__lshift>
 8008a26:	9904      	ldr	r1, [sp, #16]
 8008a28:	9003      	str	r0, [sp, #12]
 8008a2a:	f000 fe19 	bl	8009660 <__mcmp>
 8008a2e:	2800      	cmp	r0, #0
 8008a30:	dc02      	bgt.n	8008a38 <_dtoa_r+0xa90>
 8008a32:	d1e1      	bne.n	80089f8 <_dtoa_r+0xa50>
 8008a34:	07e3      	lsls	r3, r4, #31
 8008a36:	d5df      	bpl.n	80089f8 <_dtoa_r+0xa50>
 8008a38:	2c39      	cmp	r4, #57	; 0x39
 8008a3a:	d1db      	bne.n	80089f4 <_dtoa_r+0xa4c>
 8008a3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008a3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008a40:	1c5d      	adds	r5, r3, #1
 8008a42:	2339      	movs	r3, #57	; 0x39
 8008a44:	7013      	strb	r3, [r2, #0]
 8008a46:	1e6b      	subs	r3, r5, #1
 8008a48:	781a      	ldrb	r2, [r3, #0]
 8008a4a:	2a39      	cmp	r2, #57	; 0x39
 8008a4c:	d067      	beq.n	8008b1e <_dtoa_r+0xb76>
 8008a4e:	3201      	adds	r2, #1
 8008a50:	701a      	strb	r2, [r3, #0]
 8008a52:	e757      	b.n	8008904 <_dtoa_r+0x95c>
 8008a54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008a56:	1c5d      	adds	r5, r3, #1
 8008a58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008a5a:	2b00      	cmp	r3, #0
 8008a5c:	dd04      	ble.n	8008a68 <_dtoa_r+0xac0>
 8008a5e:	2c39      	cmp	r4, #57	; 0x39
 8008a60:	d0ec      	beq.n	8008a3c <_dtoa_r+0xa94>
 8008a62:	3401      	adds	r4, #1
 8008a64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008a66:	e7c9      	b.n	80089fc <_dtoa_r+0xa54>
 8008a68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008a6a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008a6c:	701c      	strb	r4, [r3, #0]
 8008a6e:	9b08      	ldr	r3, [sp, #32]
 8008a70:	1aeb      	subs	r3, r5, r3
 8008a72:	4293      	cmp	r3, r2
 8008a74:	d03e      	beq.n	8008af4 <_dtoa_r+0xb4c>
 8008a76:	2300      	movs	r3, #0
 8008a78:	220a      	movs	r2, #10
 8008a7a:	9903      	ldr	r1, [sp, #12]
 8008a7c:	9802      	ldr	r0, [sp, #8]
 8008a7e:	f000 fc2c 	bl	80092da <__multadd>
 8008a82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008a84:	9003      	str	r0, [sp, #12]
 8008a86:	42b3      	cmp	r3, r6
 8008a88:	d109      	bne.n	8008a9e <_dtoa_r+0xaf6>
 8008a8a:	2300      	movs	r3, #0
 8008a8c:	220a      	movs	r2, #10
 8008a8e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008a90:	9802      	ldr	r0, [sp, #8]
 8008a92:	f000 fc22 	bl	80092da <__multadd>
 8008a96:	9009      	str	r0, [sp, #36]	; 0x24
 8008a98:	0006      	movs	r6, r0
 8008a9a:	950a      	str	r5, [sp, #40]	; 0x28
 8008a9c:	e77d      	b.n	800899a <_dtoa_r+0x9f2>
 8008a9e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008aa0:	2300      	movs	r3, #0
 8008aa2:	220a      	movs	r2, #10
 8008aa4:	9802      	ldr	r0, [sp, #8]
 8008aa6:	f000 fc18 	bl	80092da <__multadd>
 8008aaa:	2300      	movs	r3, #0
 8008aac:	9009      	str	r0, [sp, #36]	; 0x24
 8008aae:	220a      	movs	r2, #10
 8008ab0:	0031      	movs	r1, r6
 8008ab2:	9802      	ldr	r0, [sp, #8]
 8008ab4:	f000 fc11 	bl	80092da <__multadd>
 8008ab8:	e7ee      	b.n	8008a98 <_dtoa_r+0xaf0>
 8008aba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008abc:	930c      	str	r3, [sp, #48]	; 0x30
 8008abe:	9b08      	ldr	r3, [sp, #32]
 8008ac0:	9306      	str	r3, [sp, #24]
 8008ac2:	9904      	ldr	r1, [sp, #16]
 8008ac4:	9803      	ldr	r0, [sp, #12]
 8008ac6:	f7ff f9e9 	bl	8007e9c <quorem>
 8008aca:	9b06      	ldr	r3, [sp, #24]
 8008acc:	3030      	adds	r0, #48	; 0x30
 8008ace:	1c5d      	adds	r5, r3, #1
 8008ad0:	7018      	strb	r0, [r3, #0]
 8008ad2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008ad4:	9b08      	ldr	r3, [sp, #32]
 8008ad6:	0004      	movs	r4, r0
 8008ad8:	1aeb      	subs	r3, r5, r3
 8008ada:	429a      	cmp	r2, r3
 8008adc:	dd08      	ble.n	8008af0 <_dtoa_r+0xb48>
 8008ade:	2300      	movs	r3, #0
 8008ae0:	220a      	movs	r2, #10
 8008ae2:	9903      	ldr	r1, [sp, #12]
 8008ae4:	9802      	ldr	r0, [sp, #8]
 8008ae6:	f000 fbf8 	bl	80092da <__multadd>
 8008aea:	9506      	str	r5, [sp, #24]
 8008aec:	9003      	str	r0, [sp, #12]
 8008aee:	e7e8      	b.n	8008ac2 <_dtoa_r+0xb1a>
 8008af0:	2300      	movs	r3, #0
 8008af2:	9309      	str	r3, [sp, #36]	; 0x24
 8008af4:	9903      	ldr	r1, [sp, #12]
 8008af6:	2201      	movs	r2, #1
 8008af8:	9802      	ldr	r0, [sp, #8]
 8008afa:	f000 fd5f 	bl	80095bc <__lshift>
 8008afe:	9904      	ldr	r1, [sp, #16]
 8008b00:	9003      	str	r0, [sp, #12]
 8008b02:	f000 fdad 	bl	8009660 <__mcmp>
 8008b06:	2800      	cmp	r0, #0
 8008b08:	dc9d      	bgt.n	8008a46 <_dtoa_r+0xa9e>
 8008b0a:	d101      	bne.n	8008b10 <_dtoa_r+0xb68>
 8008b0c:	07e3      	lsls	r3, r4, #31
 8008b0e:	d49a      	bmi.n	8008a46 <_dtoa_r+0xa9e>
 8008b10:	1e6b      	subs	r3, r5, #1
 8008b12:	781a      	ldrb	r2, [r3, #0]
 8008b14:	2a30      	cmp	r2, #48	; 0x30
 8008b16:	d000      	beq.n	8008b1a <_dtoa_r+0xb72>
 8008b18:	e6f4      	b.n	8008904 <_dtoa_r+0x95c>
 8008b1a:	001d      	movs	r5, r3
 8008b1c:	e7f8      	b.n	8008b10 <_dtoa_r+0xb68>
 8008b1e:	9a08      	ldr	r2, [sp, #32]
 8008b20:	429a      	cmp	r2, r3
 8008b22:	d103      	bne.n	8008b2c <_dtoa_r+0xb84>
 8008b24:	2331      	movs	r3, #49	; 0x31
 8008b26:	3701      	adds	r7, #1
 8008b28:	7013      	strb	r3, [r2, #0]
 8008b2a:	e6eb      	b.n	8008904 <_dtoa_r+0x95c>
 8008b2c:	001d      	movs	r5, r3
 8008b2e:	e78a      	b.n	8008a46 <_dtoa_r+0xa9e>
 8008b30:	4b0b      	ldr	r3, [pc, #44]	; (8008b60 <_dtoa_r+0xbb8>)
 8008b32:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8008b34:	9308      	str	r3, [sp, #32]
 8008b36:	4b0b      	ldr	r3, [pc, #44]	; (8008b64 <_dtoa_r+0xbbc>)
 8008b38:	2a00      	cmp	r2, #0
 8008b3a:	d001      	beq.n	8008b40 <_dtoa_r+0xb98>
 8008b3c:	f7ff fa77 	bl	800802e <_dtoa_r+0x86>
 8008b40:	f7ff fa77 	bl	8008032 <_dtoa_r+0x8a>
 8008b44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008b46:	2b01      	cmp	r3, #1
 8008b48:	dc00      	bgt.n	8008b4c <_dtoa_r+0xba4>
 8008b4a:	e621      	b.n	8008790 <_dtoa_r+0x7e8>
 8008b4c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8008b4e:	2001      	movs	r0, #1
 8008b50:	e635      	b.n	80087be <_dtoa_r+0x816>
 8008b52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008b54:	2b00      	cmp	r3, #0
 8008b56:	dcb2      	bgt.n	8008abe <_dtoa_r+0xb16>
 8008b58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008b5a:	2b02      	cmp	r3, #2
 8008b5c:	ddaf      	ble.n	8008abe <_dtoa_r+0xb16>
 8008b5e:	e6bc      	b.n	80088da <_dtoa_r+0x932>
 8008b60:	0800c063 	.word	0x0800c063
 8008b64:	0800c06b 	.word	0x0800c06b

08008b68 <__sflush_r>:
 8008b68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008b6a:	898a      	ldrh	r2, [r1, #12]
 8008b6c:	0005      	movs	r5, r0
 8008b6e:	000c      	movs	r4, r1
 8008b70:	0713      	lsls	r3, r2, #28
 8008b72:	d460      	bmi.n	8008c36 <__sflush_r+0xce>
 8008b74:	684b      	ldr	r3, [r1, #4]
 8008b76:	2b00      	cmp	r3, #0
 8008b78:	dc04      	bgt.n	8008b84 <__sflush_r+0x1c>
 8008b7a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8008b7c:	2b00      	cmp	r3, #0
 8008b7e:	dc01      	bgt.n	8008b84 <__sflush_r+0x1c>
 8008b80:	2000      	movs	r0, #0
 8008b82:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008b84:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8008b86:	2f00      	cmp	r7, #0
 8008b88:	d0fa      	beq.n	8008b80 <__sflush_r+0x18>
 8008b8a:	2300      	movs	r3, #0
 8008b8c:	682e      	ldr	r6, [r5, #0]
 8008b8e:	602b      	str	r3, [r5, #0]
 8008b90:	2380      	movs	r3, #128	; 0x80
 8008b92:	015b      	lsls	r3, r3, #5
 8008b94:	6a21      	ldr	r1, [r4, #32]
 8008b96:	401a      	ands	r2, r3
 8008b98:	d034      	beq.n	8008c04 <__sflush_r+0x9c>
 8008b9a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008b9c:	89a3      	ldrh	r3, [r4, #12]
 8008b9e:	075b      	lsls	r3, r3, #29
 8008ba0:	d506      	bpl.n	8008bb0 <__sflush_r+0x48>
 8008ba2:	6863      	ldr	r3, [r4, #4]
 8008ba4:	1ac0      	subs	r0, r0, r3
 8008ba6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008ba8:	2b00      	cmp	r3, #0
 8008baa:	d001      	beq.n	8008bb0 <__sflush_r+0x48>
 8008bac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008bae:	1ac0      	subs	r0, r0, r3
 8008bb0:	0002      	movs	r2, r0
 8008bb2:	6a21      	ldr	r1, [r4, #32]
 8008bb4:	2300      	movs	r3, #0
 8008bb6:	0028      	movs	r0, r5
 8008bb8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8008bba:	47b8      	blx	r7
 8008bbc:	89a1      	ldrh	r1, [r4, #12]
 8008bbe:	1c43      	adds	r3, r0, #1
 8008bc0:	d106      	bne.n	8008bd0 <__sflush_r+0x68>
 8008bc2:	682b      	ldr	r3, [r5, #0]
 8008bc4:	2b1d      	cmp	r3, #29
 8008bc6:	d830      	bhi.n	8008c2a <__sflush_r+0xc2>
 8008bc8:	4a2b      	ldr	r2, [pc, #172]	; (8008c78 <__sflush_r+0x110>)
 8008bca:	40da      	lsrs	r2, r3
 8008bcc:	07d3      	lsls	r3, r2, #31
 8008bce:	d52c      	bpl.n	8008c2a <__sflush_r+0xc2>
 8008bd0:	2300      	movs	r3, #0
 8008bd2:	6063      	str	r3, [r4, #4]
 8008bd4:	6923      	ldr	r3, [r4, #16]
 8008bd6:	6023      	str	r3, [r4, #0]
 8008bd8:	04cb      	lsls	r3, r1, #19
 8008bda:	d505      	bpl.n	8008be8 <__sflush_r+0x80>
 8008bdc:	1c43      	adds	r3, r0, #1
 8008bde:	d102      	bne.n	8008be6 <__sflush_r+0x7e>
 8008be0:	682b      	ldr	r3, [r5, #0]
 8008be2:	2b00      	cmp	r3, #0
 8008be4:	d100      	bne.n	8008be8 <__sflush_r+0x80>
 8008be6:	6560      	str	r0, [r4, #84]	; 0x54
 8008be8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008bea:	602e      	str	r6, [r5, #0]
 8008bec:	2900      	cmp	r1, #0
 8008bee:	d0c7      	beq.n	8008b80 <__sflush_r+0x18>
 8008bf0:	0023      	movs	r3, r4
 8008bf2:	3344      	adds	r3, #68	; 0x44
 8008bf4:	4299      	cmp	r1, r3
 8008bf6:	d002      	beq.n	8008bfe <__sflush_r+0x96>
 8008bf8:	0028      	movs	r0, r5
 8008bfa:	f7fd f9c3 	bl	8005f84 <_free_r>
 8008bfe:	2000      	movs	r0, #0
 8008c00:	6360      	str	r0, [r4, #52]	; 0x34
 8008c02:	e7be      	b.n	8008b82 <__sflush_r+0x1a>
 8008c04:	2301      	movs	r3, #1
 8008c06:	0028      	movs	r0, r5
 8008c08:	47b8      	blx	r7
 8008c0a:	1c43      	adds	r3, r0, #1
 8008c0c:	d1c6      	bne.n	8008b9c <__sflush_r+0x34>
 8008c0e:	682b      	ldr	r3, [r5, #0]
 8008c10:	2b00      	cmp	r3, #0
 8008c12:	d0c3      	beq.n	8008b9c <__sflush_r+0x34>
 8008c14:	2b1d      	cmp	r3, #29
 8008c16:	d001      	beq.n	8008c1c <__sflush_r+0xb4>
 8008c18:	2b16      	cmp	r3, #22
 8008c1a:	d101      	bne.n	8008c20 <__sflush_r+0xb8>
 8008c1c:	602e      	str	r6, [r5, #0]
 8008c1e:	e7af      	b.n	8008b80 <__sflush_r+0x18>
 8008c20:	2340      	movs	r3, #64	; 0x40
 8008c22:	89a2      	ldrh	r2, [r4, #12]
 8008c24:	4313      	orrs	r3, r2
 8008c26:	81a3      	strh	r3, [r4, #12]
 8008c28:	e7ab      	b.n	8008b82 <__sflush_r+0x1a>
 8008c2a:	2340      	movs	r3, #64	; 0x40
 8008c2c:	430b      	orrs	r3, r1
 8008c2e:	2001      	movs	r0, #1
 8008c30:	81a3      	strh	r3, [r4, #12]
 8008c32:	4240      	negs	r0, r0
 8008c34:	e7a5      	b.n	8008b82 <__sflush_r+0x1a>
 8008c36:	690f      	ldr	r7, [r1, #16]
 8008c38:	2f00      	cmp	r7, #0
 8008c3a:	d0a1      	beq.n	8008b80 <__sflush_r+0x18>
 8008c3c:	680b      	ldr	r3, [r1, #0]
 8008c3e:	600f      	str	r7, [r1, #0]
 8008c40:	1bdb      	subs	r3, r3, r7
 8008c42:	9301      	str	r3, [sp, #4]
 8008c44:	2300      	movs	r3, #0
 8008c46:	0792      	lsls	r2, r2, #30
 8008c48:	d100      	bne.n	8008c4c <__sflush_r+0xe4>
 8008c4a:	694b      	ldr	r3, [r1, #20]
 8008c4c:	60a3      	str	r3, [r4, #8]
 8008c4e:	9b01      	ldr	r3, [sp, #4]
 8008c50:	2b00      	cmp	r3, #0
 8008c52:	dc00      	bgt.n	8008c56 <__sflush_r+0xee>
 8008c54:	e794      	b.n	8008b80 <__sflush_r+0x18>
 8008c56:	9b01      	ldr	r3, [sp, #4]
 8008c58:	003a      	movs	r2, r7
 8008c5a:	6a21      	ldr	r1, [r4, #32]
 8008c5c:	0028      	movs	r0, r5
 8008c5e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8008c60:	47b0      	blx	r6
 8008c62:	2800      	cmp	r0, #0
 8008c64:	dc03      	bgt.n	8008c6e <__sflush_r+0x106>
 8008c66:	2340      	movs	r3, #64	; 0x40
 8008c68:	89a2      	ldrh	r2, [r4, #12]
 8008c6a:	4313      	orrs	r3, r2
 8008c6c:	e7df      	b.n	8008c2e <__sflush_r+0xc6>
 8008c6e:	9b01      	ldr	r3, [sp, #4]
 8008c70:	183f      	adds	r7, r7, r0
 8008c72:	1a1b      	subs	r3, r3, r0
 8008c74:	9301      	str	r3, [sp, #4]
 8008c76:	e7ea      	b.n	8008c4e <__sflush_r+0xe6>
 8008c78:	20400001 	.word	0x20400001

08008c7c <_fflush_r>:
 8008c7c:	690b      	ldr	r3, [r1, #16]
 8008c7e:	b570      	push	{r4, r5, r6, lr}
 8008c80:	0005      	movs	r5, r0
 8008c82:	000c      	movs	r4, r1
 8008c84:	2b00      	cmp	r3, #0
 8008c86:	d101      	bne.n	8008c8c <_fflush_r+0x10>
 8008c88:	2000      	movs	r0, #0
 8008c8a:	bd70      	pop	{r4, r5, r6, pc}
 8008c8c:	2800      	cmp	r0, #0
 8008c8e:	d004      	beq.n	8008c9a <_fflush_r+0x1e>
 8008c90:	6983      	ldr	r3, [r0, #24]
 8008c92:	2b00      	cmp	r3, #0
 8008c94:	d101      	bne.n	8008c9a <_fflush_r+0x1e>
 8008c96:	f000 f85f 	bl	8008d58 <__sinit>
 8008c9a:	4b0b      	ldr	r3, [pc, #44]	; (8008cc8 <_fflush_r+0x4c>)
 8008c9c:	429c      	cmp	r4, r3
 8008c9e:	d109      	bne.n	8008cb4 <_fflush_r+0x38>
 8008ca0:	686c      	ldr	r4, [r5, #4]
 8008ca2:	220c      	movs	r2, #12
 8008ca4:	5ea3      	ldrsh	r3, [r4, r2]
 8008ca6:	2b00      	cmp	r3, #0
 8008ca8:	d0ee      	beq.n	8008c88 <_fflush_r+0xc>
 8008caa:	0021      	movs	r1, r4
 8008cac:	0028      	movs	r0, r5
 8008cae:	f7ff ff5b 	bl	8008b68 <__sflush_r>
 8008cb2:	e7ea      	b.n	8008c8a <_fflush_r+0xe>
 8008cb4:	4b05      	ldr	r3, [pc, #20]	; (8008ccc <_fflush_r+0x50>)
 8008cb6:	429c      	cmp	r4, r3
 8008cb8:	d101      	bne.n	8008cbe <_fflush_r+0x42>
 8008cba:	68ac      	ldr	r4, [r5, #8]
 8008cbc:	e7f1      	b.n	8008ca2 <_fflush_r+0x26>
 8008cbe:	4b04      	ldr	r3, [pc, #16]	; (8008cd0 <_fflush_r+0x54>)
 8008cc0:	429c      	cmp	r4, r3
 8008cc2:	d1ee      	bne.n	8008ca2 <_fflush_r+0x26>
 8008cc4:	68ec      	ldr	r4, [r5, #12]
 8008cc6:	e7ec      	b.n	8008ca2 <_fflush_r+0x26>
 8008cc8:	0800c090 	.word	0x0800c090
 8008ccc:	0800c0b0 	.word	0x0800c0b0
 8008cd0:	0800c070 	.word	0x0800c070

08008cd4 <std>:
 8008cd4:	2300      	movs	r3, #0
 8008cd6:	b510      	push	{r4, lr}
 8008cd8:	0004      	movs	r4, r0
 8008cda:	6003      	str	r3, [r0, #0]
 8008cdc:	6043      	str	r3, [r0, #4]
 8008cde:	6083      	str	r3, [r0, #8]
 8008ce0:	8181      	strh	r1, [r0, #12]
 8008ce2:	6643      	str	r3, [r0, #100]	; 0x64
 8008ce4:	81c2      	strh	r2, [r0, #14]
 8008ce6:	6103      	str	r3, [r0, #16]
 8008ce8:	6143      	str	r3, [r0, #20]
 8008cea:	6183      	str	r3, [r0, #24]
 8008cec:	0019      	movs	r1, r3
 8008cee:	2208      	movs	r2, #8
 8008cf0:	305c      	adds	r0, #92	; 0x5c
 8008cf2:	f7fd f93f 	bl	8005f74 <memset>
 8008cf6:	4b05      	ldr	r3, [pc, #20]	; (8008d0c <std+0x38>)
 8008cf8:	6224      	str	r4, [r4, #32]
 8008cfa:	6263      	str	r3, [r4, #36]	; 0x24
 8008cfc:	4b04      	ldr	r3, [pc, #16]	; (8008d10 <std+0x3c>)
 8008cfe:	62a3      	str	r3, [r4, #40]	; 0x28
 8008d00:	4b04      	ldr	r3, [pc, #16]	; (8008d14 <std+0x40>)
 8008d02:	62e3      	str	r3, [r4, #44]	; 0x2c
 8008d04:	4b04      	ldr	r3, [pc, #16]	; (8008d18 <std+0x44>)
 8008d06:	6323      	str	r3, [r4, #48]	; 0x30
 8008d08:	bd10      	pop	{r4, pc}
 8008d0a:	46c0      	nop			; (mov r8, r8)
 8008d0c:	08009e11 	.word	0x08009e11
 8008d10:	08009e3d 	.word	0x08009e3d
 8008d14:	08009e75 	.word	0x08009e75
 8008d18:	08009ea1 	.word	0x08009ea1

08008d1c <_cleanup_r>:
 8008d1c:	b510      	push	{r4, lr}
 8008d1e:	4902      	ldr	r1, [pc, #8]	; (8008d28 <_cleanup_r+0xc>)
 8008d20:	f000 f88c 	bl	8008e3c <_fwalk_reent>
 8008d24:	bd10      	pop	{r4, pc}
 8008d26:	46c0      	nop			; (mov r8, r8)
 8008d28:	08008c7d 	.word	0x08008c7d

08008d2c <__sfmoreglue>:
 8008d2c:	b570      	push	{r4, r5, r6, lr}
 8008d2e:	2568      	movs	r5, #104	; 0x68
 8008d30:	1e4a      	subs	r2, r1, #1
 8008d32:	4355      	muls	r5, r2
 8008d34:	000e      	movs	r6, r1
 8008d36:	0029      	movs	r1, r5
 8008d38:	3174      	adds	r1, #116	; 0x74
 8008d3a:	f7fd f96d 	bl	8006018 <_malloc_r>
 8008d3e:	1e04      	subs	r4, r0, #0
 8008d40:	d008      	beq.n	8008d54 <__sfmoreglue+0x28>
 8008d42:	2100      	movs	r1, #0
 8008d44:	002a      	movs	r2, r5
 8008d46:	6001      	str	r1, [r0, #0]
 8008d48:	6046      	str	r6, [r0, #4]
 8008d4a:	300c      	adds	r0, #12
 8008d4c:	60a0      	str	r0, [r4, #8]
 8008d4e:	3268      	adds	r2, #104	; 0x68
 8008d50:	f7fd f910 	bl	8005f74 <memset>
 8008d54:	0020      	movs	r0, r4
 8008d56:	bd70      	pop	{r4, r5, r6, pc}

08008d58 <__sinit>:
 8008d58:	6983      	ldr	r3, [r0, #24]
 8008d5a:	b513      	push	{r0, r1, r4, lr}
 8008d5c:	0004      	movs	r4, r0
 8008d5e:	2b00      	cmp	r3, #0
 8008d60:	d128      	bne.n	8008db4 <__sinit+0x5c>
 8008d62:	6483      	str	r3, [r0, #72]	; 0x48
 8008d64:	64c3      	str	r3, [r0, #76]	; 0x4c
 8008d66:	6503      	str	r3, [r0, #80]	; 0x50
 8008d68:	4b13      	ldr	r3, [pc, #76]	; (8008db8 <__sinit+0x60>)
 8008d6a:	4a14      	ldr	r2, [pc, #80]	; (8008dbc <__sinit+0x64>)
 8008d6c:	681b      	ldr	r3, [r3, #0]
 8008d6e:	6282      	str	r2, [r0, #40]	; 0x28
 8008d70:	9301      	str	r3, [sp, #4]
 8008d72:	4298      	cmp	r0, r3
 8008d74:	d101      	bne.n	8008d7a <__sinit+0x22>
 8008d76:	2301      	movs	r3, #1
 8008d78:	6183      	str	r3, [r0, #24]
 8008d7a:	0020      	movs	r0, r4
 8008d7c:	f000 f820 	bl	8008dc0 <__sfp>
 8008d80:	6060      	str	r0, [r4, #4]
 8008d82:	0020      	movs	r0, r4
 8008d84:	f000 f81c 	bl	8008dc0 <__sfp>
 8008d88:	60a0      	str	r0, [r4, #8]
 8008d8a:	0020      	movs	r0, r4
 8008d8c:	f000 f818 	bl	8008dc0 <__sfp>
 8008d90:	2200      	movs	r2, #0
 8008d92:	60e0      	str	r0, [r4, #12]
 8008d94:	2104      	movs	r1, #4
 8008d96:	6860      	ldr	r0, [r4, #4]
 8008d98:	f7ff ff9c 	bl	8008cd4 <std>
 8008d9c:	2201      	movs	r2, #1
 8008d9e:	2109      	movs	r1, #9
 8008da0:	68a0      	ldr	r0, [r4, #8]
 8008da2:	f7ff ff97 	bl	8008cd4 <std>
 8008da6:	2202      	movs	r2, #2
 8008da8:	2112      	movs	r1, #18
 8008daa:	68e0      	ldr	r0, [r4, #12]
 8008dac:	f7ff ff92 	bl	8008cd4 <std>
 8008db0:	2301      	movs	r3, #1
 8008db2:	61a3      	str	r3, [r4, #24]
 8008db4:	bd13      	pop	{r0, r1, r4, pc}
 8008db6:	46c0      	nop			; (mov r8, r8)
 8008db8:	0800bd10 	.word	0x0800bd10
 8008dbc:	08008d1d 	.word	0x08008d1d

08008dc0 <__sfp>:
 8008dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008dc2:	4b1c      	ldr	r3, [pc, #112]	; (8008e34 <__sfp+0x74>)
 8008dc4:	0007      	movs	r7, r0
 8008dc6:	681e      	ldr	r6, [r3, #0]
 8008dc8:	69b3      	ldr	r3, [r6, #24]
 8008dca:	2b00      	cmp	r3, #0
 8008dcc:	d102      	bne.n	8008dd4 <__sfp+0x14>
 8008dce:	0030      	movs	r0, r6
 8008dd0:	f7ff ffc2 	bl	8008d58 <__sinit>
 8008dd4:	3648      	adds	r6, #72	; 0x48
 8008dd6:	68b4      	ldr	r4, [r6, #8]
 8008dd8:	6873      	ldr	r3, [r6, #4]
 8008dda:	3b01      	subs	r3, #1
 8008ddc:	d504      	bpl.n	8008de8 <__sfp+0x28>
 8008dde:	6833      	ldr	r3, [r6, #0]
 8008de0:	2b00      	cmp	r3, #0
 8008de2:	d007      	beq.n	8008df4 <__sfp+0x34>
 8008de4:	6836      	ldr	r6, [r6, #0]
 8008de6:	e7f6      	b.n	8008dd6 <__sfp+0x16>
 8008de8:	220c      	movs	r2, #12
 8008dea:	5ea5      	ldrsh	r5, [r4, r2]
 8008dec:	2d00      	cmp	r5, #0
 8008dee:	d00d      	beq.n	8008e0c <__sfp+0x4c>
 8008df0:	3468      	adds	r4, #104	; 0x68
 8008df2:	e7f2      	b.n	8008dda <__sfp+0x1a>
 8008df4:	2104      	movs	r1, #4
 8008df6:	0038      	movs	r0, r7
 8008df8:	f7ff ff98 	bl	8008d2c <__sfmoreglue>
 8008dfc:	6030      	str	r0, [r6, #0]
 8008dfe:	2800      	cmp	r0, #0
 8008e00:	d1f0      	bne.n	8008de4 <__sfp+0x24>
 8008e02:	230c      	movs	r3, #12
 8008e04:	0004      	movs	r4, r0
 8008e06:	603b      	str	r3, [r7, #0]
 8008e08:	0020      	movs	r0, r4
 8008e0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008e0c:	0020      	movs	r0, r4
 8008e0e:	4b0a      	ldr	r3, [pc, #40]	; (8008e38 <__sfp+0x78>)
 8008e10:	6665      	str	r5, [r4, #100]	; 0x64
 8008e12:	6025      	str	r5, [r4, #0]
 8008e14:	6065      	str	r5, [r4, #4]
 8008e16:	60a5      	str	r5, [r4, #8]
 8008e18:	60e3      	str	r3, [r4, #12]
 8008e1a:	6125      	str	r5, [r4, #16]
 8008e1c:	6165      	str	r5, [r4, #20]
 8008e1e:	61a5      	str	r5, [r4, #24]
 8008e20:	2208      	movs	r2, #8
 8008e22:	0029      	movs	r1, r5
 8008e24:	305c      	adds	r0, #92	; 0x5c
 8008e26:	f7fd f8a5 	bl	8005f74 <memset>
 8008e2a:	6365      	str	r5, [r4, #52]	; 0x34
 8008e2c:	63a5      	str	r5, [r4, #56]	; 0x38
 8008e2e:	64a5      	str	r5, [r4, #72]	; 0x48
 8008e30:	64e5      	str	r5, [r4, #76]	; 0x4c
 8008e32:	e7e9      	b.n	8008e08 <__sfp+0x48>
 8008e34:	0800bd10 	.word	0x0800bd10
 8008e38:	ffff0001 	.word	0xffff0001

08008e3c <_fwalk_reent>:
 8008e3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008e3e:	0004      	movs	r4, r0
 8008e40:	0007      	movs	r7, r0
 8008e42:	2600      	movs	r6, #0
 8008e44:	9101      	str	r1, [sp, #4]
 8008e46:	3448      	adds	r4, #72	; 0x48
 8008e48:	2c00      	cmp	r4, #0
 8008e4a:	d101      	bne.n	8008e50 <_fwalk_reent+0x14>
 8008e4c:	0030      	movs	r0, r6
 8008e4e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008e50:	6863      	ldr	r3, [r4, #4]
 8008e52:	68a5      	ldr	r5, [r4, #8]
 8008e54:	9300      	str	r3, [sp, #0]
 8008e56:	9b00      	ldr	r3, [sp, #0]
 8008e58:	3b01      	subs	r3, #1
 8008e5a:	9300      	str	r3, [sp, #0]
 8008e5c:	d501      	bpl.n	8008e62 <_fwalk_reent+0x26>
 8008e5e:	6824      	ldr	r4, [r4, #0]
 8008e60:	e7f2      	b.n	8008e48 <_fwalk_reent+0xc>
 8008e62:	89ab      	ldrh	r3, [r5, #12]
 8008e64:	2b01      	cmp	r3, #1
 8008e66:	d908      	bls.n	8008e7a <_fwalk_reent+0x3e>
 8008e68:	220e      	movs	r2, #14
 8008e6a:	5eab      	ldrsh	r3, [r5, r2]
 8008e6c:	3301      	adds	r3, #1
 8008e6e:	d004      	beq.n	8008e7a <_fwalk_reent+0x3e>
 8008e70:	0029      	movs	r1, r5
 8008e72:	0038      	movs	r0, r7
 8008e74:	9b01      	ldr	r3, [sp, #4]
 8008e76:	4798      	blx	r3
 8008e78:	4306      	orrs	r6, r0
 8008e7a:	3568      	adds	r5, #104	; 0x68
 8008e7c:	e7eb      	b.n	8008e56 <_fwalk_reent+0x1a>
	...

08008e80 <_findenv_r>:
 8008e80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e82:	000e      	movs	r6, r1
 8008e84:	b085      	sub	sp, #20
 8008e86:	0007      	movs	r7, r0
 8008e88:	9203      	str	r2, [sp, #12]
 8008e8a:	f001 f85b 	bl	8009f44 <__env_lock>
 8008e8e:	4c19      	ldr	r4, [pc, #100]	; (8008ef4 <_findenv_r+0x74>)
 8008e90:	0033      	movs	r3, r6
 8008e92:	6825      	ldr	r5, [r4, #0]
 8008e94:	2d00      	cmp	r5, #0
 8008e96:	d106      	bne.n	8008ea6 <_findenv_r+0x26>
 8008e98:	0038      	movs	r0, r7
 8008e9a:	f001 f854 	bl	8009f46 <__env_unlock>
 8008e9e:	2000      	movs	r0, #0
 8008ea0:	b005      	add	sp, #20
 8008ea2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ea4:	3301      	adds	r3, #1
 8008ea6:	781a      	ldrb	r2, [r3, #0]
 8008ea8:	2a00      	cmp	r2, #0
 8008eaa:	d01f      	beq.n	8008eec <_findenv_r+0x6c>
 8008eac:	2a3d      	cmp	r2, #61	; 0x3d
 8008eae:	d1f9      	bne.n	8008ea4 <_findenv_r+0x24>
 8008eb0:	e7f2      	b.n	8008e98 <_findenv_r+0x18>
 8008eb2:	3504      	adds	r5, #4
 8008eb4:	6828      	ldr	r0, [r5, #0]
 8008eb6:	2800      	cmp	r0, #0
 8008eb8:	d0ee      	beq.n	8008e98 <_findenv_r+0x18>
 8008eba:	9a01      	ldr	r2, [sp, #4]
 8008ebc:	0031      	movs	r1, r6
 8008ebe:	f000 fffd 	bl	8009ebc <strncmp>
 8008ec2:	2800      	cmp	r0, #0
 8008ec4:	d1f5      	bne.n	8008eb2 <_findenv_r+0x32>
 8008ec6:	9a01      	ldr	r2, [sp, #4]
 8008ec8:	682b      	ldr	r3, [r5, #0]
 8008eca:	4694      	mov	ip, r2
 8008ecc:	4463      	add	r3, ip
 8008ece:	9302      	str	r3, [sp, #8]
 8008ed0:	781b      	ldrb	r3, [r3, #0]
 8008ed2:	2b3d      	cmp	r3, #61	; 0x3d
 8008ed4:	d1ed      	bne.n	8008eb2 <_findenv_r+0x32>
 8008ed6:	6823      	ldr	r3, [r4, #0]
 8008ed8:	0038      	movs	r0, r7
 8008eda:	1aed      	subs	r5, r5, r3
 8008edc:	9b03      	ldr	r3, [sp, #12]
 8008ede:	10ad      	asrs	r5, r5, #2
 8008ee0:	601d      	str	r5, [r3, #0]
 8008ee2:	f001 f830 	bl	8009f46 <__env_unlock>
 8008ee6:	9802      	ldr	r0, [sp, #8]
 8008ee8:	3001      	adds	r0, #1
 8008eea:	e7d9      	b.n	8008ea0 <_findenv_r+0x20>
 8008eec:	1b9b      	subs	r3, r3, r6
 8008eee:	9301      	str	r3, [sp, #4]
 8008ef0:	e7e0      	b.n	8008eb4 <_findenv_r+0x34>
 8008ef2:	46c0      	nop			; (mov r8, r8)
 8008ef4:	2000024c 	.word	0x2000024c

08008ef8 <_getenv_r>:
 8008ef8:	b507      	push	{r0, r1, r2, lr}
 8008efa:	aa01      	add	r2, sp, #4
 8008efc:	f7ff ffc0 	bl	8008e80 <_findenv_r>
 8008f00:	bd0e      	pop	{r1, r2, r3, pc}
	...

08008f04 <_gettimeofday_r>:
 8008f04:	2300      	movs	r3, #0
 8008f06:	b570      	push	{r4, r5, r6, lr}
 8008f08:	4c06      	ldr	r4, [pc, #24]	; (8008f24 <_gettimeofday_r+0x20>)
 8008f0a:	0005      	movs	r5, r0
 8008f0c:	0008      	movs	r0, r1
 8008f0e:	0011      	movs	r1, r2
 8008f10:	6023      	str	r3, [r4, #0]
 8008f12:	f001 fec9 	bl	800aca8 <_gettimeofday>
 8008f16:	1c43      	adds	r3, r0, #1
 8008f18:	d103      	bne.n	8008f22 <_gettimeofday_r+0x1e>
 8008f1a:	6823      	ldr	r3, [r4, #0]
 8008f1c:	2b00      	cmp	r3, #0
 8008f1e:	d000      	beq.n	8008f22 <_gettimeofday_r+0x1e>
 8008f20:	602b      	str	r3, [r5, #0]
 8008f22:	bd70      	pop	{r4, r5, r6, pc}
 8008f24:	20000500 	.word	0x20000500

08008f28 <__gettzinfo>:
 8008f28:	4800      	ldr	r0, [pc, #0]	; (8008f2c <__gettzinfo+0x4>)
 8008f2a:	4770      	bx	lr
 8008f2c:	20000088 	.word	0x20000088

08008f30 <gmtime_r>:
 8008f30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f32:	6806      	ldr	r6, [r0, #0]
 8008f34:	6847      	ldr	r7, [r0, #4]
 8008f36:	b085      	sub	sp, #20
 8008f38:	4a59      	ldr	r2, [pc, #356]	; (80090a0 <gmtime_r+0x170>)
 8008f3a:	2300      	movs	r3, #0
 8008f3c:	0030      	movs	r0, r6
 8008f3e:	000c      	movs	r4, r1
 8008f40:	0039      	movs	r1, r7
 8008f42:	f7f7 faf5 	bl	8000530 <__aeabi_ldivmod>
 8008f46:	4a57      	ldr	r2, [pc, #348]	; (80090a4 <gmtime_r+0x174>)
 8008f48:	9001      	str	r0, [sp, #4]
 8008f4a:	1885      	adds	r5, r0, r2
 8008f4c:	2300      	movs	r3, #0
 8008f4e:	0030      	movs	r0, r6
 8008f50:	4a53      	ldr	r2, [pc, #332]	; (80090a0 <gmtime_r+0x170>)
 8008f52:	0039      	movs	r1, r7
 8008f54:	f7f7 faec 	bl	8000530 <__aeabi_ldivmod>
 8008f58:	1e16      	subs	r6, r2, #0
 8008f5a:	da06      	bge.n	8008f6a <gmtime_r+0x3a>
 8008f5c:	4a52      	ldr	r2, [pc, #328]	; (80090a8 <gmtime_r+0x178>)
 8008f5e:	4b50      	ldr	r3, [pc, #320]	; (80090a0 <gmtime_r+0x170>)
 8008f60:	4694      	mov	ip, r2
 8008f62:	18f6      	adds	r6, r6, r3
 8008f64:	9b01      	ldr	r3, [sp, #4]
 8008f66:	4463      	add	r3, ip
 8008f68:	001d      	movs	r5, r3
 8008f6a:	21e1      	movs	r1, #225	; 0xe1
 8008f6c:	0030      	movs	r0, r6
 8008f6e:	0109      	lsls	r1, r1, #4
 8008f70:	f7f7 f97a 	bl	8000268 <__divsi3>
 8008f74:	21e1      	movs	r1, #225	; 0xe1
 8008f76:	60a0      	str	r0, [r4, #8]
 8008f78:	0109      	lsls	r1, r1, #4
 8008f7a:	0030      	movs	r0, r6
 8008f7c:	f7f7 fa5a 	bl	8000434 <__aeabi_idivmod>
 8008f80:	000e      	movs	r6, r1
 8008f82:	213c      	movs	r1, #60	; 0x3c
 8008f84:	0030      	movs	r0, r6
 8008f86:	f7f7 f96f 	bl	8000268 <__divsi3>
 8008f8a:	213c      	movs	r1, #60	; 0x3c
 8008f8c:	6060      	str	r0, [r4, #4]
 8008f8e:	0030      	movs	r0, r6
 8008f90:	f7f7 fa50 	bl	8000434 <__aeabi_idivmod>
 8008f94:	1ce8      	adds	r0, r5, #3
 8008f96:	6021      	str	r1, [r4, #0]
 8008f98:	2107      	movs	r1, #7
 8008f9a:	f7f7 fa4b 	bl	8000434 <__aeabi_idivmod>
 8008f9e:	2900      	cmp	r1, #0
 8008fa0:	da00      	bge.n	8008fa4 <gmtime_r+0x74>
 8008fa2:	3107      	adds	r1, #7
 8008fa4:	61a1      	str	r1, [r4, #24]
 8008fa6:	1e28      	subs	r0, r5, #0
 8008fa8:	4940      	ldr	r1, [pc, #256]	; (80090ac <gmtime_r+0x17c>)
 8008faa:	da01      	bge.n	8008fb0 <gmtime_r+0x80>
 8008fac:	4b40      	ldr	r3, [pc, #256]	; (80090b0 <gmtime_r+0x180>)
 8008fae:	18e8      	adds	r0, r5, r3
 8008fb0:	f7f7 f95a 	bl	8000268 <__divsi3>
 8008fb4:	0007      	movs	r7, r0
 8008fb6:	483f      	ldr	r0, [pc, #252]	; (80090b4 <gmtime_r+0x184>)
 8008fb8:	493f      	ldr	r1, [pc, #252]	; (80090b8 <gmtime_r+0x188>)
 8008fba:	4378      	muls	r0, r7
 8008fbc:	1945      	adds	r5, r0, r5
 8008fbe:	0028      	movs	r0, r5
 8008fc0:	f7f7 f8c8 	bl	8000154 <__udivsi3>
 8008fc4:	493d      	ldr	r1, [pc, #244]	; (80090bc <gmtime_r+0x18c>)
 8008fc6:	1946      	adds	r6, r0, r5
 8008fc8:	0028      	movs	r0, r5
 8008fca:	f7f7 f8c3 	bl	8000154 <__udivsi3>
 8008fce:	493c      	ldr	r1, [pc, #240]	; (80090c0 <gmtime_r+0x190>)
 8008fd0:	1a36      	subs	r6, r6, r0
 8008fd2:	0028      	movs	r0, r5
 8008fd4:	f7f7 f8be 	bl	8000154 <__udivsi3>
 8008fd8:	216e      	movs	r1, #110	; 0x6e
 8008fda:	1a36      	subs	r6, r6, r0
 8008fdc:	31ff      	adds	r1, #255	; 0xff
 8008fde:	0030      	movs	r0, r6
 8008fe0:	f7f7 f8b8 	bl	8000154 <__udivsi3>
 8008fe4:	4937      	ldr	r1, [pc, #220]	; (80090c4 <gmtime_r+0x194>)
 8008fe6:	9001      	str	r0, [sp, #4]
 8008fe8:	0030      	movs	r0, r6
 8008fea:	f7f7 f8b3 	bl	8000154 <__udivsi3>
 8008fee:	4933      	ldr	r1, [pc, #204]	; (80090bc <gmtime_r+0x18c>)
 8008ff0:	1945      	adds	r5, r0, r5
 8008ff2:	0030      	movs	r0, r6
 8008ff4:	f7f7 f8ae 	bl	8000154 <__udivsi3>
 8008ff8:	216e      	movs	r1, #110	; 0x6e
 8008ffa:	9b01      	ldr	r3, [sp, #4]
 8008ffc:	31ff      	adds	r1, #255	; 0xff
 8008ffe:	4359      	muls	r1, r3
 8009000:	1a2d      	subs	r5, r5, r0
 8009002:	1a6b      	subs	r3, r5, r1
 8009004:	2605      	movs	r6, #5
 8009006:	0018      	movs	r0, r3
 8009008:	4370      	muls	r0, r6
 800900a:	2199      	movs	r1, #153	; 0x99
 800900c:	3002      	adds	r0, #2
 800900e:	9302      	str	r3, [sp, #8]
 8009010:	f7f7 f8a0 	bl	8000154 <__udivsi3>
 8009014:	0005      	movs	r5, r0
 8009016:	2099      	movs	r0, #153	; 0x99
 8009018:	4368      	muls	r0, r5
 800901a:	9b02      	ldr	r3, [sp, #8]
 800901c:	0031      	movs	r1, r6
 800901e:	3301      	adds	r3, #1
 8009020:	3002      	adds	r0, #2
 8009022:	9303      	str	r3, [sp, #12]
 8009024:	f7f7 f896 	bl	8000154 <__udivsi3>
 8009028:	9b03      	ldr	r3, [sp, #12]
 800902a:	3e03      	subs	r6, #3
 800902c:	1a1b      	subs	r3, r3, r0
 800902e:	9303      	str	r3, [sp, #12]
 8009030:	2d09      	cmp	r5, #9
 8009032:	d900      	bls.n	8009036 <gmtime_r+0x106>
 8009034:	3e0c      	subs	r6, #12
 8009036:	23c8      	movs	r3, #200	; 0xc8
 8009038:	005b      	lsls	r3, r3, #1
 800903a:	435f      	muls	r7, r3
 800903c:	9b01      	ldr	r3, [sp, #4]
 800903e:	1976      	adds	r6, r6, r5
 8009040:	18ff      	adds	r7, r7, r3
 8009042:	2501      	movs	r5, #1
 8009044:	2300      	movs	r3, #0
 8009046:	42b5      	cmp	r5, r6
 8009048:	415b      	adcs	r3, r3
 800904a:	18ff      	adds	r7, r7, r3
 800904c:	2332      	movs	r3, #50	; 0x32
 800904e:	9a02      	ldr	r2, [sp, #8]
 8009050:	33ff      	adds	r3, #255	; 0xff
 8009052:	429a      	cmp	r2, r3
 8009054:	d90e      	bls.n	8009074 <gmtime_r+0x144>
 8009056:	0015      	movs	r5, r2
 8009058:	3d33      	subs	r5, #51	; 0x33
 800905a:	3dff      	subs	r5, #255	; 0xff
 800905c:	4b1a      	ldr	r3, [pc, #104]	; (80090c8 <gmtime_r+0x198>)
 800905e:	0020      	movs	r0, r4
 8009060:	18ff      	adds	r7, r7, r3
 8009062:	9b03      	ldr	r3, [sp, #12]
 8009064:	61e5      	str	r5, [r4, #28]
 8009066:	60e3      	str	r3, [r4, #12]
 8009068:	2300      	movs	r3, #0
 800906a:	6167      	str	r7, [r4, #20]
 800906c:	6126      	str	r6, [r4, #16]
 800906e:	6223      	str	r3, [r4, #32]
 8009070:	b005      	add	sp, #20
 8009072:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009074:	9b01      	ldr	r3, [sp, #4]
 8009076:	079b      	lsls	r3, r3, #30
 8009078:	d106      	bne.n	8009088 <gmtime_r+0x158>
 800907a:	2164      	movs	r1, #100	; 0x64
 800907c:	9801      	ldr	r0, [sp, #4]
 800907e:	f7f7 f8ef 	bl	8000260 <__aeabi_uidivmod>
 8009082:	0028      	movs	r0, r5
 8009084:	2900      	cmp	r1, #0
 8009086:	d106      	bne.n	8009096 <gmtime_r+0x166>
 8009088:	21c8      	movs	r1, #200	; 0xc8
 800908a:	9801      	ldr	r0, [sp, #4]
 800908c:	0049      	lsls	r1, r1, #1
 800908e:	f7f7 f8e7 	bl	8000260 <__aeabi_uidivmod>
 8009092:	4248      	negs	r0, r1
 8009094:	4148      	adcs	r0, r1
 8009096:	9d02      	ldr	r5, [sp, #8]
 8009098:	353b      	adds	r5, #59	; 0x3b
 800909a:	182d      	adds	r5, r5, r0
 800909c:	e7de      	b.n	800905c <gmtime_r+0x12c>
 800909e:	46c0      	nop			; (mov r8, r8)
 80090a0:	00015180 	.word	0x00015180
 80090a4:	000afa6c 	.word	0x000afa6c
 80090a8:	000afa6b 	.word	0x000afa6b
 80090ac:	00023ab1 	.word	0x00023ab1
 80090b0:	fffdc550 	.word	0xfffdc550
 80090b4:	fffdc54f 	.word	0xfffdc54f
 80090b8:	00008eac 	.word	0x00008eac
 80090bc:	000005b4 	.word	0x000005b4
 80090c0:	00023ab0 	.word	0x00023ab0
 80090c4:	00008e94 	.word	0x00008e94
 80090c8:	fffff894 	.word	0xfffff894

080090cc <labs>:
 80090cc:	17c3      	asrs	r3, r0, #31
 80090ce:	18c0      	adds	r0, r0, r3
 80090d0:	4058      	eors	r0, r3
 80090d2:	4770      	bx	lr

080090d4 <__locale_ctype_ptr_l>:
 80090d4:	30ec      	adds	r0, #236	; 0xec
 80090d6:	6800      	ldr	r0, [r0, #0]
 80090d8:	4770      	bx	lr
	...

080090dc <__locale_ctype_ptr>:
 80090dc:	4b04      	ldr	r3, [pc, #16]	; (80090f0 <__locale_ctype_ptr+0x14>)
 80090de:	681b      	ldr	r3, [r3, #0]
 80090e0:	6a1b      	ldr	r3, [r3, #32]
 80090e2:	2b00      	cmp	r3, #0
 80090e4:	d100      	bne.n	80090e8 <__locale_ctype_ptr+0xc>
 80090e6:	4b03      	ldr	r3, [pc, #12]	; (80090f4 <__locale_ctype_ptr+0x18>)
 80090e8:	33ec      	adds	r3, #236	; 0xec
 80090ea:	6818      	ldr	r0, [r3, #0]
 80090ec:	4770      	bx	lr
 80090ee:	46c0      	nop			; (mov r8, r8)
 80090f0:	2000001c 	.word	0x2000001c
 80090f4:	200000e0 	.word	0x200000e0

080090f8 <_localeconv_r>:
 80090f8:	4b03      	ldr	r3, [pc, #12]	; (8009108 <_localeconv_r+0x10>)
 80090fa:	681b      	ldr	r3, [r3, #0]
 80090fc:	6a18      	ldr	r0, [r3, #32]
 80090fe:	2800      	cmp	r0, #0
 8009100:	d100      	bne.n	8009104 <_localeconv_r+0xc>
 8009102:	4802      	ldr	r0, [pc, #8]	; (800910c <_localeconv_r+0x14>)
 8009104:	30f0      	adds	r0, #240	; 0xf0
 8009106:	4770      	bx	lr
 8009108:	2000001c 	.word	0x2000001c
 800910c:	200000e0 	.word	0x200000e0

08009110 <__swhatbuf_r>:
 8009110:	b570      	push	{r4, r5, r6, lr}
 8009112:	000e      	movs	r6, r1
 8009114:	001d      	movs	r5, r3
 8009116:	230e      	movs	r3, #14
 8009118:	5ec9      	ldrsh	r1, [r1, r3]
 800911a:	b096      	sub	sp, #88	; 0x58
 800911c:	0014      	movs	r4, r2
 800911e:	2900      	cmp	r1, #0
 8009120:	da07      	bge.n	8009132 <__swhatbuf_r+0x22>
 8009122:	2300      	movs	r3, #0
 8009124:	602b      	str	r3, [r5, #0]
 8009126:	89b3      	ldrh	r3, [r6, #12]
 8009128:	061b      	lsls	r3, r3, #24
 800912a:	d411      	bmi.n	8009150 <__swhatbuf_r+0x40>
 800912c:	2380      	movs	r3, #128	; 0x80
 800912e:	00db      	lsls	r3, r3, #3
 8009130:	e00f      	b.n	8009152 <__swhatbuf_r+0x42>
 8009132:	466a      	mov	r2, sp
 8009134:	f000 ff08 	bl	8009f48 <_fstat_r>
 8009138:	2800      	cmp	r0, #0
 800913a:	dbf2      	blt.n	8009122 <__swhatbuf_r+0x12>
 800913c:	22f0      	movs	r2, #240	; 0xf0
 800913e:	9b01      	ldr	r3, [sp, #4]
 8009140:	0212      	lsls	r2, r2, #8
 8009142:	4013      	ands	r3, r2
 8009144:	4a05      	ldr	r2, [pc, #20]	; (800915c <__swhatbuf_r+0x4c>)
 8009146:	189b      	adds	r3, r3, r2
 8009148:	425a      	negs	r2, r3
 800914a:	4153      	adcs	r3, r2
 800914c:	602b      	str	r3, [r5, #0]
 800914e:	e7ed      	b.n	800912c <__swhatbuf_r+0x1c>
 8009150:	2340      	movs	r3, #64	; 0x40
 8009152:	2000      	movs	r0, #0
 8009154:	6023      	str	r3, [r4, #0]
 8009156:	b016      	add	sp, #88	; 0x58
 8009158:	bd70      	pop	{r4, r5, r6, pc}
 800915a:	46c0      	nop			; (mov r8, r8)
 800915c:	ffffe000 	.word	0xffffe000

08009160 <__smakebuf_r>:
 8009160:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009162:	2602      	movs	r6, #2
 8009164:	898b      	ldrh	r3, [r1, #12]
 8009166:	0005      	movs	r5, r0
 8009168:	000c      	movs	r4, r1
 800916a:	4233      	tst	r3, r6
 800916c:	d006      	beq.n	800917c <__smakebuf_r+0x1c>
 800916e:	0023      	movs	r3, r4
 8009170:	3347      	adds	r3, #71	; 0x47
 8009172:	6023      	str	r3, [r4, #0]
 8009174:	6123      	str	r3, [r4, #16]
 8009176:	2301      	movs	r3, #1
 8009178:	6163      	str	r3, [r4, #20]
 800917a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800917c:	ab01      	add	r3, sp, #4
 800917e:	466a      	mov	r2, sp
 8009180:	f7ff ffc6 	bl	8009110 <__swhatbuf_r>
 8009184:	9900      	ldr	r1, [sp, #0]
 8009186:	0007      	movs	r7, r0
 8009188:	0028      	movs	r0, r5
 800918a:	f7fc ff45 	bl	8006018 <_malloc_r>
 800918e:	2800      	cmp	r0, #0
 8009190:	d108      	bne.n	80091a4 <__smakebuf_r+0x44>
 8009192:	220c      	movs	r2, #12
 8009194:	5ea3      	ldrsh	r3, [r4, r2]
 8009196:	059a      	lsls	r2, r3, #22
 8009198:	d4ef      	bmi.n	800917a <__smakebuf_r+0x1a>
 800919a:	2203      	movs	r2, #3
 800919c:	4393      	bics	r3, r2
 800919e:	431e      	orrs	r6, r3
 80091a0:	81a6      	strh	r6, [r4, #12]
 80091a2:	e7e4      	b.n	800916e <__smakebuf_r+0xe>
 80091a4:	4b0f      	ldr	r3, [pc, #60]	; (80091e4 <__smakebuf_r+0x84>)
 80091a6:	62ab      	str	r3, [r5, #40]	; 0x28
 80091a8:	2380      	movs	r3, #128	; 0x80
 80091aa:	89a2      	ldrh	r2, [r4, #12]
 80091ac:	6020      	str	r0, [r4, #0]
 80091ae:	4313      	orrs	r3, r2
 80091b0:	81a3      	strh	r3, [r4, #12]
 80091b2:	9b00      	ldr	r3, [sp, #0]
 80091b4:	6120      	str	r0, [r4, #16]
 80091b6:	6163      	str	r3, [r4, #20]
 80091b8:	9b01      	ldr	r3, [sp, #4]
 80091ba:	2b00      	cmp	r3, #0
 80091bc:	d00d      	beq.n	80091da <__smakebuf_r+0x7a>
 80091be:	230e      	movs	r3, #14
 80091c0:	5ee1      	ldrsh	r1, [r4, r3]
 80091c2:	0028      	movs	r0, r5
 80091c4:	f000 fed2 	bl	8009f6c <_isatty_r>
 80091c8:	2800      	cmp	r0, #0
 80091ca:	d006      	beq.n	80091da <__smakebuf_r+0x7a>
 80091cc:	2203      	movs	r2, #3
 80091ce:	89a3      	ldrh	r3, [r4, #12]
 80091d0:	4393      	bics	r3, r2
 80091d2:	001a      	movs	r2, r3
 80091d4:	2301      	movs	r3, #1
 80091d6:	4313      	orrs	r3, r2
 80091d8:	81a3      	strh	r3, [r4, #12]
 80091da:	89a0      	ldrh	r0, [r4, #12]
 80091dc:	4338      	orrs	r0, r7
 80091de:	81a0      	strh	r0, [r4, #12]
 80091e0:	e7cb      	b.n	800917a <__smakebuf_r+0x1a>
 80091e2:	46c0      	nop			; (mov r8, r8)
 80091e4:	08008d1d 	.word	0x08008d1d

080091e8 <__ascii_mbtowc>:
 80091e8:	b082      	sub	sp, #8
 80091ea:	2900      	cmp	r1, #0
 80091ec:	d100      	bne.n	80091f0 <__ascii_mbtowc+0x8>
 80091ee:	a901      	add	r1, sp, #4
 80091f0:	1e10      	subs	r0, r2, #0
 80091f2:	d006      	beq.n	8009202 <__ascii_mbtowc+0x1a>
 80091f4:	2b00      	cmp	r3, #0
 80091f6:	d006      	beq.n	8009206 <__ascii_mbtowc+0x1e>
 80091f8:	7813      	ldrb	r3, [r2, #0]
 80091fa:	600b      	str	r3, [r1, #0]
 80091fc:	7810      	ldrb	r0, [r2, #0]
 80091fe:	1e43      	subs	r3, r0, #1
 8009200:	4198      	sbcs	r0, r3
 8009202:	b002      	add	sp, #8
 8009204:	4770      	bx	lr
 8009206:	2002      	movs	r0, #2
 8009208:	4240      	negs	r0, r0
 800920a:	e7fa      	b.n	8009202 <__ascii_mbtowc+0x1a>

0800920c <memchr>:
 800920c:	b2c9      	uxtb	r1, r1
 800920e:	1882      	adds	r2, r0, r2
 8009210:	4290      	cmp	r0, r2
 8009212:	d101      	bne.n	8009218 <memchr+0xc>
 8009214:	2000      	movs	r0, #0
 8009216:	4770      	bx	lr
 8009218:	7803      	ldrb	r3, [r0, #0]
 800921a:	428b      	cmp	r3, r1
 800921c:	d0fb      	beq.n	8009216 <memchr+0xa>
 800921e:	3001      	adds	r0, #1
 8009220:	e7f6      	b.n	8009210 <memchr+0x4>

08009222 <memcpy>:
 8009222:	2300      	movs	r3, #0
 8009224:	b510      	push	{r4, lr}
 8009226:	429a      	cmp	r2, r3
 8009228:	d100      	bne.n	800922c <memcpy+0xa>
 800922a:	bd10      	pop	{r4, pc}
 800922c:	5ccc      	ldrb	r4, [r1, r3]
 800922e:	54c4      	strb	r4, [r0, r3]
 8009230:	3301      	adds	r3, #1
 8009232:	e7f8      	b.n	8009226 <memcpy+0x4>

08009234 <__malloc_lock>:
 8009234:	4770      	bx	lr

08009236 <__malloc_unlock>:
 8009236:	4770      	bx	lr

08009238 <_Balloc>:
 8009238:	b570      	push	{r4, r5, r6, lr}
 800923a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800923c:	0004      	movs	r4, r0
 800923e:	000d      	movs	r5, r1
 8009240:	2e00      	cmp	r6, #0
 8009242:	d107      	bne.n	8009254 <_Balloc+0x1c>
 8009244:	2010      	movs	r0, #16
 8009246:	f7fc fe81 	bl	8005f4c <malloc>
 800924a:	6260      	str	r0, [r4, #36]	; 0x24
 800924c:	6046      	str	r6, [r0, #4]
 800924e:	6086      	str	r6, [r0, #8]
 8009250:	6006      	str	r6, [r0, #0]
 8009252:	60c6      	str	r6, [r0, #12]
 8009254:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8009256:	68f3      	ldr	r3, [r6, #12]
 8009258:	2b00      	cmp	r3, #0
 800925a:	d013      	beq.n	8009284 <_Balloc+0x4c>
 800925c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800925e:	00aa      	lsls	r2, r5, #2
 8009260:	68db      	ldr	r3, [r3, #12]
 8009262:	189b      	adds	r3, r3, r2
 8009264:	6818      	ldr	r0, [r3, #0]
 8009266:	2800      	cmp	r0, #0
 8009268:	d118      	bne.n	800929c <_Balloc+0x64>
 800926a:	2101      	movs	r1, #1
 800926c:	000e      	movs	r6, r1
 800926e:	40ae      	lsls	r6, r5
 8009270:	1d72      	adds	r2, r6, #5
 8009272:	0092      	lsls	r2, r2, #2
 8009274:	0020      	movs	r0, r4
 8009276:	f000 fac5 	bl	8009804 <_calloc_r>
 800927a:	2800      	cmp	r0, #0
 800927c:	d00c      	beq.n	8009298 <_Balloc+0x60>
 800927e:	6045      	str	r5, [r0, #4]
 8009280:	6086      	str	r6, [r0, #8]
 8009282:	e00d      	b.n	80092a0 <_Balloc+0x68>
 8009284:	2221      	movs	r2, #33	; 0x21
 8009286:	2104      	movs	r1, #4
 8009288:	0020      	movs	r0, r4
 800928a:	f000 fabb 	bl	8009804 <_calloc_r>
 800928e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009290:	60f0      	str	r0, [r6, #12]
 8009292:	68db      	ldr	r3, [r3, #12]
 8009294:	2b00      	cmp	r3, #0
 8009296:	d1e1      	bne.n	800925c <_Balloc+0x24>
 8009298:	2000      	movs	r0, #0
 800929a:	bd70      	pop	{r4, r5, r6, pc}
 800929c:	6802      	ldr	r2, [r0, #0]
 800929e:	601a      	str	r2, [r3, #0]
 80092a0:	2300      	movs	r3, #0
 80092a2:	6103      	str	r3, [r0, #16]
 80092a4:	60c3      	str	r3, [r0, #12]
 80092a6:	e7f8      	b.n	800929a <_Balloc+0x62>

080092a8 <_Bfree>:
 80092a8:	b570      	push	{r4, r5, r6, lr}
 80092aa:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80092ac:	0006      	movs	r6, r0
 80092ae:	000d      	movs	r5, r1
 80092b0:	2c00      	cmp	r4, #0
 80092b2:	d107      	bne.n	80092c4 <_Bfree+0x1c>
 80092b4:	2010      	movs	r0, #16
 80092b6:	f7fc fe49 	bl	8005f4c <malloc>
 80092ba:	6270      	str	r0, [r6, #36]	; 0x24
 80092bc:	6044      	str	r4, [r0, #4]
 80092be:	6084      	str	r4, [r0, #8]
 80092c0:	6004      	str	r4, [r0, #0]
 80092c2:	60c4      	str	r4, [r0, #12]
 80092c4:	2d00      	cmp	r5, #0
 80092c6:	d007      	beq.n	80092d8 <_Bfree+0x30>
 80092c8:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80092ca:	686a      	ldr	r2, [r5, #4]
 80092cc:	68db      	ldr	r3, [r3, #12]
 80092ce:	0092      	lsls	r2, r2, #2
 80092d0:	189b      	adds	r3, r3, r2
 80092d2:	681a      	ldr	r2, [r3, #0]
 80092d4:	602a      	str	r2, [r5, #0]
 80092d6:	601d      	str	r5, [r3, #0]
 80092d8:	bd70      	pop	{r4, r5, r6, pc}

080092da <__multadd>:
 80092da:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80092dc:	001e      	movs	r6, r3
 80092de:	2314      	movs	r3, #20
 80092e0:	469c      	mov	ip, r3
 80092e2:	0007      	movs	r7, r0
 80092e4:	000c      	movs	r4, r1
 80092e6:	2000      	movs	r0, #0
 80092e8:	690d      	ldr	r5, [r1, #16]
 80092ea:	448c      	add	ip, r1
 80092ec:	4663      	mov	r3, ip
 80092ee:	681b      	ldr	r3, [r3, #0]
 80092f0:	3001      	adds	r0, #1
 80092f2:	b299      	uxth	r1, r3
 80092f4:	4663      	mov	r3, ip
 80092f6:	681b      	ldr	r3, [r3, #0]
 80092f8:	4351      	muls	r1, r2
 80092fa:	0c1b      	lsrs	r3, r3, #16
 80092fc:	4353      	muls	r3, r2
 80092fe:	1989      	adds	r1, r1, r6
 8009300:	0c0e      	lsrs	r6, r1, #16
 8009302:	199b      	adds	r3, r3, r6
 8009304:	b289      	uxth	r1, r1
 8009306:	0c1e      	lsrs	r6, r3, #16
 8009308:	041b      	lsls	r3, r3, #16
 800930a:	185b      	adds	r3, r3, r1
 800930c:	4661      	mov	r1, ip
 800930e:	c108      	stmia	r1!, {r3}
 8009310:	468c      	mov	ip, r1
 8009312:	4285      	cmp	r5, r0
 8009314:	dcea      	bgt.n	80092ec <__multadd+0x12>
 8009316:	2e00      	cmp	r6, #0
 8009318:	d01b      	beq.n	8009352 <__multadd+0x78>
 800931a:	68a3      	ldr	r3, [r4, #8]
 800931c:	42ab      	cmp	r3, r5
 800931e:	dc12      	bgt.n	8009346 <__multadd+0x6c>
 8009320:	6863      	ldr	r3, [r4, #4]
 8009322:	0038      	movs	r0, r7
 8009324:	1c59      	adds	r1, r3, #1
 8009326:	f7ff ff87 	bl	8009238 <_Balloc>
 800932a:	0021      	movs	r1, r4
 800932c:	6923      	ldr	r3, [r4, #16]
 800932e:	9001      	str	r0, [sp, #4]
 8009330:	1c9a      	adds	r2, r3, #2
 8009332:	0092      	lsls	r2, r2, #2
 8009334:	310c      	adds	r1, #12
 8009336:	300c      	adds	r0, #12
 8009338:	f7ff ff73 	bl	8009222 <memcpy>
 800933c:	0021      	movs	r1, r4
 800933e:	0038      	movs	r0, r7
 8009340:	f7ff ffb2 	bl	80092a8 <_Bfree>
 8009344:	9c01      	ldr	r4, [sp, #4]
 8009346:	1d2b      	adds	r3, r5, #4
 8009348:	009b      	lsls	r3, r3, #2
 800934a:	18e3      	adds	r3, r4, r3
 800934c:	3501      	adds	r5, #1
 800934e:	605e      	str	r6, [r3, #4]
 8009350:	6125      	str	r5, [r4, #16]
 8009352:	0020      	movs	r0, r4
 8009354:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08009356 <__hi0bits>:
 8009356:	0003      	movs	r3, r0
 8009358:	0c02      	lsrs	r2, r0, #16
 800935a:	2000      	movs	r0, #0
 800935c:	4282      	cmp	r2, r0
 800935e:	d101      	bne.n	8009364 <__hi0bits+0xe>
 8009360:	041b      	lsls	r3, r3, #16
 8009362:	3010      	adds	r0, #16
 8009364:	0e1a      	lsrs	r2, r3, #24
 8009366:	d101      	bne.n	800936c <__hi0bits+0x16>
 8009368:	3008      	adds	r0, #8
 800936a:	021b      	lsls	r3, r3, #8
 800936c:	0f1a      	lsrs	r2, r3, #28
 800936e:	d101      	bne.n	8009374 <__hi0bits+0x1e>
 8009370:	3004      	adds	r0, #4
 8009372:	011b      	lsls	r3, r3, #4
 8009374:	0f9a      	lsrs	r2, r3, #30
 8009376:	d101      	bne.n	800937c <__hi0bits+0x26>
 8009378:	3002      	adds	r0, #2
 800937a:	009b      	lsls	r3, r3, #2
 800937c:	2b00      	cmp	r3, #0
 800937e:	db03      	blt.n	8009388 <__hi0bits+0x32>
 8009380:	3001      	adds	r0, #1
 8009382:	005b      	lsls	r3, r3, #1
 8009384:	d400      	bmi.n	8009388 <__hi0bits+0x32>
 8009386:	2020      	movs	r0, #32
 8009388:	4770      	bx	lr

0800938a <__lo0bits>:
 800938a:	2207      	movs	r2, #7
 800938c:	6803      	ldr	r3, [r0, #0]
 800938e:	b510      	push	{r4, lr}
 8009390:	0001      	movs	r1, r0
 8009392:	401a      	ands	r2, r3
 8009394:	d00d      	beq.n	80093b2 <__lo0bits+0x28>
 8009396:	2401      	movs	r4, #1
 8009398:	2000      	movs	r0, #0
 800939a:	4223      	tst	r3, r4
 800939c:	d105      	bne.n	80093aa <__lo0bits+0x20>
 800939e:	3002      	adds	r0, #2
 80093a0:	4203      	tst	r3, r0
 80093a2:	d003      	beq.n	80093ac <__lo0bits+0x22>
 80093a4:	40e3      	lsrs	r3, r4
 80093a6:	0020      	movs	r0, r4
 80093a8:	600b      	str	r3, [r1, #0]
 80093aa:	bd10      	pop	{r4, pc}
 80093ac:	089b      	lsrs	r3, r3, #2
 80093ae:	600b      	str	r3, [r1, #0]
 80093b0:	e7fb      	b.n	80093aa <__lo0bits+0x20>
 80093b2:	b29c      	uxth	r4, r3
 80093b4:	0010      	movs	r0, r2
 80093b6:	2c00      	cmp	r4, #0
 80093b8:	d101      	bne.n	80093be <__lo0bits+0x34>
 80093ba:	2010      	movs	r0, #16
 80093bc:	0c1b      	lsrs	r3, r3, #16
 80093be:	b2da      	uxtb	r2, r3
 80093c0:	2a00      	cmp	r2, #0
 80093c2:	d101      	bne.n	80093c8 <__lo0bits+0x3e>
 80093c4:	3008      	adds	r0, #8
 80093c6:	0a1b      	lsrs	r3, r3, #8
 80093c8:	071a      	lsls	r2, r3, #28
 80093ca:	d101      	bne.n	80093d0 <__lo0bits+0x46>
 80093cc:	3004      	adds	r0, #4
 80093ce:	091b      	lsrs	r3, r3, #4
 80093d0:	079a      	lsls	r2, r3, #30
 80093d2:	d101      	bne.n	80093d8 <__lo0bits+0x4e>
 80093d4:	3002      	adds	r0, #2
 80093d6:	089b      	lsrs	r3, r3, #2
 80093d8:	07da      	lsls	r2, r3, #31
 80093da:	d4e8      	bmi.n	80093ae <__lo0bits+0x24>
 80093dc:	085b      	lsrs	r3, r3, #1
 80093de:	d001      	beq.n	80093e4 <__lo0bits+0x5a>
 80093e0:	3001      	adds	r0, #1
 80093e2:	e7e4      	b.n	80093ae <__lo0bits+0x24>
 80093e4:	2020      	movs	r0, #32
 80093e6:	e7e0      	b.n	80093aa <__lo0bits+0x20>

080093e8 <__i2b>:
 80093e8:	b510      	push	{r4, lr}
 80093ea:	000c      	movs	r4, r1
 80093ec:	2101      	movs	r1, #1
 80093ee:	f7ff ff23 	bl	8009238 <_Balloc>
 80093f2:	2301      	movs	r3, #1
 80093f4:	6144      	str	r4, [r0, #20]
 80093f6:	6103      	str	r3, [r0, #16]
 80093f8:	bd10      	pop	{r4, pc}

080093fa <__multiply>:
 80093fa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80093fc:	690b      	ldr	r3, [r1, #16]
 80093fe:	0014      	movs	r4, r2
 8009400:	6912      	ldr	r2, [r2, #16]
 8009402:	b089      	sub	sp, #36	; 0x24
 8009404:	000d      	movs	r5, r1
 8009406:	4293      	cmp	r3, r2
 8009408:	da01      	bge.n	800940e <__multiply+0x14>
 800940a:	0025      	movs	r5, r4
 800940c:	000c      	movs	r4, r1
 800940e:	692f      	ldr	r7, [r5, #16]
 8009410:	6926      	ldr	r6, [r4, #16]
 8009412:	6869      	ldr	r1, [r5, #4]
 8009414:	19bb      	adds	r3, r7, r6
 8009416:	9302      	str	r3, [sp, #8]
 8009418:	68ab      	ldr	r3, [r5, #8]
 800941a:	19ba      	adds	r2, r7, r6
 800941c:	4293      	cmp	r3, r2
 800941e:	da00      	bge.n	8009422 <__multiply+0x28>
 8009420:	3101      	adds	r1, #1
 8009422:	f7ff ff09 	bl	8009238 <_Balloc>
 8009426:	0002      	movs	r2, r0
 8009428:	19bb      	adds	r3, r7, r6
 800942a:	3214      	adds	r2, #20
 800942c:	009b      	lsls	r3, r3, #2
 800942e:	18d3      	adds	r3, r2, r3
 8009430:	469c      	mov	ip, r3
 8009432:	2100      	movs	r1, #0
 8009434:	0013      	movs	r3, r2
 8009436:	9004      	str	r0, [sp, #16]
 8009438:	4563      	cmp	r3, ip
 800943a:	d31d      	bcc.n	8009478 <__multiply+0x7e>
 800943c:	3514      	adds	r5, #20
 800943e:	00bf      	lsls	r7, r7, #2
 8009440:	19eb      	adds	r3, r5, r7
 8009442:	3414      	adds	r4, #20
 8009444:	00b6      	lsls	r6, r6, #2
 8009446:	9305      	str	r3, [sp, #20]
 8009448:	19a3      	adds	r3, r4, r6
 800944a:	9503      	str	r5, [sp, #12]
 800944c:	9401      	str	r4, [sp, #4]
 800944e:	9307      	str	r3, [sp, #28]
 8009450:	9b07      	ldr	r3, [sp, #28]
 8009452:	9901      	ldr	r1, [sp, #4]
 8009454:	4299      	cmp	r1, r3
 8009456:	d311      	bcc.n	800947c <__multiply+0x82>
 8009458:	9b02      	ldr	r3, [sp, #8]
 800945a:	2b00      	cmp	r3, #0
 800945c:	dd06      	ble.n	800946c <__multiply+0x72>
 800945e:	2304      	movs	r3, #4
 8009460:	425b      	negs	r3, r3
 8009462:	449c      	add	ip, r3
 8009464:	4663      	mov	r3, ip
 8009466:	681b      	ldr	r3, [r3, #0]
 8009468:	2b00      	cmp	r3, #0
 800946a:	d051      	beq.n	8009510 <__multiply+0x116>
 800946c:	9b04      	ldr	r3, [sp, #16]
 800946e:	9a02      	ldr	r2, [sp, #8]
 8009470:	0018      	movs	r0, r3
 8009472:	611a      	str	r2, [r3, #16]
 8009474:	b009      	add	sp, #36	; 0x24
 8009476:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009478:	c302      	stmia	r3!, {r1}
 800947a:	e7dd      	b.n	8009438 <__multiply+0x3e>
 800947c:	9b01      	ldr	r3, [sp, #4]
 800947e:	681b      	ldr	r3, [r3, #0]
 8009480:	b298      	uxth	r0, r3
 8009482:	2800      	cmp	r0, #0
 8009484:	d01c      	beq.n	80094c0 <__multiply+0xc6>
 8009486:	0015      	movs	r5, r2
 8009488:	2600      	movs	r6, #0
 800948a:	9f03      	ldr	r7, [sp, #12]
 800948c:	cf02      	ldmia	r7!, {r1}
 800948e:	682c      	ldr	r4, [r5, #0]
 8009490:	b28b      	uxth	r3, r1
 8009492:	4343      	muls	r3, r0
 8009494:	0c09      	lsrs	r1, r1, #16
 8009496:	4341      	muls	r1, r0
 8009498:	b2a4      	uxth	r4, r4
 800949a:	191b      	adds	r3, r3, r4
 800949c:	199b      	adds	r3, r3, r6
 800949e:	000e      	movs	r6, r1
 80094a0:	6829      	ldr	r1, [r5, #0]
 80094a2:	9506      	str	r5, [sp, #24]
 80094a4:	0c09      	lsrs	r1, r1, #16
 80094a6:	1871      	adds	r1, r6, r1
 80094a8:	0c1e      	lsrs	r6, r3, #16
 80094aa:	1989      	adds	r1, r1, r6
 80094ac:	0c0e      	lsrs	r6, r1, #16
 80094ae:	b29b      	uxth	r3, r3
 80094b0:	0409      	lsls	r1, r1, #16
 80094b2:	430b      	orrs	r3, r1
 80094b4:	c508      	stmia	r5!, {r3}
 80094b6:	9b05      	ldr	r3, [sp, #20]
 80094b8:	42bb      	cmp	r3, r7
 80094ba:	d8e7      	bhi.n	800948c <__multiply+0x92>
 80094bc:	9b06      	ldr	r3, [sp, #24]
 80094be:	605e      	str	r6, [r3, #4]
 80094c0:	9b01      	ldr	r3, [sp, #4]
 80094c2:	681b      	ldr	r3, [r3, #0]
 80094c4:	0c1d      	lsrs	r5, r3, #16
 80094c6:	d01e      	beq.n	8009506 <__multiply+0x10c>
 80094c8:	0010      	movs	r0, r2
 80094ca:	2700      	movs	r7, #0
 80094cc:	6813      	ldr	r3, [r2, #0]
 80094ce:	9e03      	ldr	r6, [sp, #12]
 80094d0:	6831      	ldr	r1, [r6, #0]
 80094d2:	6804      	ldr	r4, [r0, #0]
 80094d4:	b289      	uxth	r1, r1
 80094d6:	4369      	muls	r1, r5
 80094d8:	0c24      	lsrs	r4, r4, #16
 80094da:	1909      	adds	r1, r1, r4
 80094dc:	19c9      	adds	r1, r1, r7
 80094de:	040f      	lsls	r7, r1, #16
 80094e0:	b29b      	uxth	r3, r3
 80094e2:	433b      	orrs	r3, r7
 80094e4:	6003      	str	r3, [r0, #0]
 80094e6:	ce80      	ldmia	r6!, {r7}
 80094e8:	6843      	ldr	r3, [r0, #4]
 80094ea:	0c3f      	lsrs	r7, r7, #16
 80094ec:	436f      	muls	r7, r5
 80094ee:	b29b      	uxth	r3, r3
 80094f0:	18fb      	adds	r3, r7, r3
 80094f2:	0c09      	lsrs	r1, r1, #16
 80094f4:	185b      	adds	r3, r3, r1
 80094f6:	9905      	ldr	r1, [sp, #20]
 80094f8:	9006      	str	r0, [sp, #24]
 80094fa:	0c1f      	lsrs	r7, r3, #16
 80094fc:	3004      	adds	r0, #4
 80094fe:	42b1      	cmp	r1, r6
 8009500:	d8e6      	bhi.n	80094d0 <__multiply+0xd6>
 8009502:	9906      	ldr	r1, [sp, #24]
 8009504:	604b      	str	r3, [r1, #4]
 8009506:	9b01      	ldr	r3, [sp, #4]
 8009508:	3204      	adds	r2, #4
 800950a:	3304      	adds	r3, #4
 800950c:	9301      	str	r3, [sp, #4]
 800950e:	e79f      	b.n	8009450 <__multiply+0x56>
 8009510:	9b02      	ldr	r3, [sp, #8]
 8009512:	3b01      	subs	r3, #1
 8009514:	9302      	str	r3, [sp, #8]
 8009516:	e79f      	b.n	8009458 <__multiply+0x5e>

08009518 <__pow5mult>:
 8009518:	2303      	movs	r3, #3
 800951a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800951c:	4013      	ands	r3, r2
 800951e:	0005      	movs	r5, r0
 8009520:	000e      	movs	r6, r1
 8009522:	0014      	movs	r4, r2
 8009524:	2b00      	cmp	r3, #0
 8009526:	d008      	beq.n	800953a <__pow5mult+0x22>
 8009528:	4922      	ldr	r1, [pc, #136]	; (80095b4 <__pow5mult+0x9c>)
 800952a:	3b01      	subs	r3, #1
 800952c:	009a      	lsls	r2, r3, #2
 800952e:	5852      	ldr	r2, [r2, r1]
 8009530:	2300      	movs	r3, #0
 8009532:	0031      	movs	r1, r6
 8009534:	f7ff fed1 	bl	80092da <__multadd>
 8009538:	0006      	movs	r6, r0
 800953a:	10a3      	asrs	r3, r4, #2
 800953c:	9301      	str	r3, [sp, #4]
 800953e:	d036      	beq.n	80095ae <__pow5mult+0x96>
 8009540:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8009542:	2c00      	cmp	r4, #0
 8009544:	d107      	bne.n	8009556 <__pow5mult+0x3e>
 8009546:	2010      	movs	r0, #16
 8009548:	f7fc fd00 	bl	8005f4c <malloc>
 800954c:	6268      	str	r0, [r5, #36]	; 0x24
 800954e:	6044      	str	r4, [r0, #4]
 8009550:	6084      	str	r4, [r0, #8]
 8009552:	6004      	str	r4, [r0, #0]
 8009554:	60c4      	str	r4, [r0, #12]
 8009556:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 8009558:	68bc      	ldr	r4, [r7, #8]
 800955a:	2c00      	cmp	r4, #0
 800955c:	d107      	bne.n	800956e <__pow5mult+0x56>
 800955e:	4916      	ldr	r1, [pc, #88]	; (80095b8 <__pow5mult+0xa0>)
 8009560:	0028      	movs	r0, r5
 8009562:	f7ff ff41 	bl	80093e8 <__i2b>
 8009566:	2300      	movs	r3, #0
 8009568:	0004      	movs	r4, r0
 800956a:	60b8      	str	r0, [r7, #8]
 800956c:	6003      	str	r3, [r0, #0]
 800956e:	2201      	movs	r2, #1
 8009570:	9b01      	ldr	r3, [sp, #4]
 8009572:	4213      	tst	r3, r2
 8009574:	d00a      	beq.n	800958c <__pow5mult+0x74>
 8009576:	0031      	movs	r1, r6
 8009578:	0022      	movs	r2, r4
 800957a:	0028      	movs	r0, r5
 800957c:	f7ff ff3d 	bl	80093fa <__multiply>
 8009580:	0007      	movs	r7, r0
 8009582:	0031      	movs	r1, r6
 8009584:	0028      	movs	r0, r5
 8009586:	f7ff fe8f 	bl	80092a8 <_Bfree>
 800958a:	003e      	movs	r6, r7
 800958c:	9b01      	ldr	r3, [sp, #4]
 800958e:	105b      	asrs	r3, r3, #1
 8009590:	9301      	str	r3, [sp, #4]
 8009592:	d00c      	beq.n	80095ae <__pow5mult+0x96>
 8009594:	6820      	ldr	r0, [r4, #0]
 8009596:	2800      	cmp	r0, #0
 8009598:	d107      	bne.n	80095aa <__pow5mult+0x92>
 800959a:	0022      	movs	r2, r4
 800959c:	0021      	movs	r1, r4
 800959e:	0028      	movs	r0, r5
 80095a0:	f7ff ff2b 	bl	80093fa <__multiply>
 80095a4:	2300      	movs	r3, #0
 80095a6:	6020      	str	r0, [r4, #0]
 80095a8:	6003      	str	r3, [r0, #0]
 80095aa:	0004      	movs	r4, r0
 80095ac:	e7df      	b.n	800956e <__pow5mult+0x56>
 80095ae:	0030      	movs	r0, r6
 80095b0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80095b2:	46c0      	nop			; (mov r8, r8)
 80095b4:	0800c1d0 	.word	0x0800c1d0
 80095b8:	00000271 	.word	0x00000271

080095bc <__lshift>:
 80095bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80095be:	000d      	movs	r5, r1
 80095c0:	0017      	movs	r7, r2
 80095c2:	692b      	ldr	r3, [r5, #16]
 80095c4:	1154      	asrs	r4, r2, #5
 80095c6:	b085      	sub	sp, #20
 80095c8:	18e3      	adds	r3, r4, r3
 80095ca:	9301      	str	r3, [sp, #4]
 80095cc:	3301      	adds	r3, #1
 80095ce:	9300      	str	r3, [sp, #0]
 80095d0:	6849      	ldr	r1, [r1, #4]
 80095d2:	68ab      	ldr	r3, [r5, #8]
 80095d4:	9002      	str	r0, [sp, #8]
 80095d6:	9a00      	ldr	r2, [sp, #0]
 80095d8:	4293      	cmp	r3, r2
 80095da:	db35      	blt.n	8009648 <__lshift+0x8c>
 80095dc:	9802      	ldr	r0, [sp, #8]
 80095de:	f7ff fe2b 	bl	8009238 <_Balloc>
 80095e2:	2300      	movs	r3, #0
 80095e4:	0002      	movs	r2, r0
 80095e6:	0006      	movs	r6, r0
 80095e8:	0019      	movs	r1, r3
 80095ea:	3214      	adds	r2, #20
 80095ec:	42a3      	cmp	r3, r4
 80095ee:	db2e      	blt.n	800964e <__lshift+0x92>
 80095f0:	43e3      	mvns	r3, r4
 80095f2:	17db      	asrs	r3, r3, #31
 80095f4:	401c      	ands	r4, r3
 80095f6:	002b      	movs	r3, r5
 80095f8:	00a4      	lsls	r4, r4, #2
 80095fa:	1914      	adds	r4, r2, r4
 80095fc:	692a      	ldr	r2, [r5, #16]
 80095fe:	3314      	adds	r3, #20
 8009600:	0092      	lsls	r2, r2, #2
 8009602:	189a      	adds	r2, r3, r2
 8009604:	4694      	mov	ip, r2
 8009606:	221f      	movs	r2, #31
 8009608:	4017      	ands	r7, r2
 800960a:	d024      	beq.n	8009656 <__lshift+0x9a>
 800960c:	3201      	adds	r2, #1
 800960e:	1bd2      	subs	r2, r2, r7
 8009610:	9203      	str	r2, [sp, #12]
 8009612:	2200      	movs	r2, #0
 8009614:	6819      	ldr	r1, [r3, #0]
 8009616:	0020      	movs	r0, r4
 8009618:	40b9      	lsls	r1, r7
 800961a:	430a      	orrs	r2, r1
 800961c:	c404      	stmia	r4!, {r2}
 800961e:	cb04      	ldmia	r3!, {r2}
 8009620:	9903      	ldr	r1, [sp, #12]
 8009622:	40ca      	lsrs	r2, r1
 8009624:	459c      	cmp	ip, r3
 8009626:	d8f5      	bhi.n	8009614 <__lshift+0x58>
 8009628:	6042      	str	r2, [r0, #4]
 800962a:	2a00      	cmp	r2, #0
 800962c:	d002      	beq.n	8009634 <__lshift+0x78>
 800962e:	9b01      	ldr	r3, [sp, #4]
 8009630:	3302      	adds	r3, #2
 8009632:	9300      	str	r3, [sp, #0]
 8009634:	9b00      	ldr	r3, [sp, #0]
 8009636:	9802      	ldr	r0, [sp, #8]
 8009638:	3b01      	subs	r3, #1
 800963a:	6133      	str	r3, [r6, #16]
 800963c:	0029      	movs	r1, r5
 800963e:	f7ff fe33 	bl	80092a8 <_Bfree>
 8009642:	0030      	movs	r0, r6
 8009644:	b005      	add	sp, #20
 8009646:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009648:	3101      	adds	r1, #1
 800964a:	005b      	lsls	r3, r3, #1
 800964c:	e7c3      	b.n	80095d6 <__lshift+0x1a>
 800964e:	0098      	lsls	r0, r3, #2
 8009650:	5011      	str	r1, [r2, r0]
 8009652:	3301      	adds	r3, #1
 8009654:	e7ca      	b.n	80095ec <__lshift+0x30>
 8009656:	cb04      	ldmia	r3!, {r2}
 8009658:	c404      	stmia	r4!, {r2}
 800965a:	459c      	cmp	ip, r3
 800965c:	d8fb      	bhi.n	8009656 <__lshift+0x9a>
 800965e:	e7e9      	b.n	8009634 <__lshift+0x78>

08009660 <__mcmp>:
 8009660:	690a      	ldr	r2, [r1, #16]
 8009662:	6903      	ldr	r3, [r0, #16]
 8009664:	b530      	push	{r4, r5, lr}
 8009666:	1a9b      	subs	r3, r3, r2
 8009668:	d10d      	bne.n	8009686 <__mcmp+0x26>
 800966a:	0092      	lsls	r2, r2, #2
 800966c:	3014      	adds	r0, #20
 800966e:	3114      	adds	r1, #20
 8009670:	1884      	adds	r4, r0, r2
 8009672:	1889      	adds	r1, r1, r2
 8009674:	3c04      	subs	r4, #4
 8009676:	3904      	subs	r1, #4
 8009678:	6825      	ldr	r5, [r4, #0]
 800967a:	680a      	ldr	r2, [r1, #0]
 800967c:	4295      	cmp	r5, r2
 800967e:	d004      	beq.n	800968a <__mcmp+0x2a>
 8009680:	2301      	movs	r3, #1
 8009682:	4295      	cmp	r5, r2
 8009684:	d304      	bcc.n	8009690 <__mcmp+0x30>
 8009686:	0018      	movs	r0, r3
 8009688:	bd30      	pop	{r4, r5, pc}
 800968a:	42a0      	cmp	r0, r4
 800968c:	d3f2      	bcc.n	8009674 <__mcmp+0x14>
 800968e:	e7fa      	b.n	8009686 <__mcmp+0x26>
 8009690:	425b      	negs	r3, r3
 8009692:	e7f8      	b.n	8009686 <__mcmp+0x26>

08009694 <__mdiff>:
 8009694:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009696:	000d      	movs	r5, r1
 8009698:	b085      	sub	sp, #20
 800969a:	0007      	movs	r7, r0
 800969c:	0011      	movs	r1, r2
 800969e:	0028      	movs	r0, r5
 80096a0:	0014      	movs	r4, r2
 80096a2:	f7ff ffdd 	bl	8009660 <__mcmp>
 80096a6:	1e06      	subs	r6, r0, #0
 80096a8:	d108      	bne.n	80096bc <__mdiff+0x28>
 80096aa:	0001      	movs	r1, r0
 80096ac:	0038      	movs	r0, r7
 80096ae:	f7ff fdc3 	bl	8009238 <_Balloc>
 80096b2:	2301      	movs	r3, #1
 80096b4:	6146      	str	r6, [r0, #20]
 80096b6:	6103      	str	r3, [r0, #16]
 80096b8:	b005      	add	sp, #20
 80096ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80096bc:	2301      	movs	r3, #1
 80096be:	9301      	str	r3, [sp, #4]
 80096c0:	2800      	cmp	r0, #0
 80096c2:	db04      	blt.n	80096ce <__mdiff+0x3a>
 80096c4:	0023      	movs	r3, r4
 80096c6:	002c      	movs	r4, r5
 80096c8:	001d      	movs	r5, r3
 80096ca:	2300      	movs	r3, #0
 80096cc:	9301      	str	r3, [sp, #4]
 80096ce:	6861      	ldr	r1, [r4, #4]
 80096d0:	0038      	movs	r0, r7
 80096d2:	f7ff fdb1 	bl	8009238 <_Balloc>
 80096d6:	002f      	movs	r7, r5
 80096d8:	2200      	movs	r2, #0
 80096da:	9b01      	ldr	r3, [sp, #4]
 80096dc:	6926      	ldr	r6, [r4, #16]
 80096de:	60c3      	str	r3, [r0, #12]
 80096e0:	3414      	adds	r4, #20
 80096e2:	00b3      	lsls	r3, r6, #2
 80096e4:	18e3      	adds	r3, r4, r3
 80096e6:	9302      	str	r3, [sp, #8]
 80096e8:	692b      	ldr	r3, [r5, #16]
 80096ea:	3714      	adds	r7, #20
 80096ec:	009b      	lsls	r3, r3, #2
 80096ee:	18fb      	adds	r3, r7, r3
 80096f0:	9303      	str	r3, [sp, #12]
 80096f2:	0003      	movs	r3, r0
 80096f4:	4694      	mov	ip, r2
 80096f6:	3314      	adds	r3, #20
 80096f8:	cc20      	ldmia	r4!, {r5}
 80096fa:	cf04      	ldmia	r7!, {r2}
 80096fc:	9201      	str	r2, [sp, #4]
 80096fe:	b2aa      	uxth	r2, r5
 8009700:	4494      	add	ip, r2
 8009702:	466a      	mov	r2, sp
 8009704:	4661      	mov	r1, ip
 8009706:	8892      	ldrh	r2, [r2, #4]
 8009708:	0c2d      	lsrs	r5, r5, #16
 800970a:	1a8a      	subs	r2, r1, r2
 800970c:	9901      	ldr	r1, [sp, #4]
 800970e:	0c09      	lsrs	r1, r1, #16
 8009710:	1a69      	subs	r1, r5, r1
 8009712:	1415      	asrs	r5, r2, #16
 8009714:	1949      	adds	r1, r1, r5
 8009716:	140d      	asrs	r5, r1, #16
 8009718:	b292      	uxth	r2, r2
 800971a:	0409      	lsls	r1, r1, #16
 800971c:	430a      	orrs	r2, r1
 800971e:	601a      	str	r2, [r3, #0]
 8009720:	9a03      	ldr	r2, [sp, #12]
 8009722:	46ac      	mov	ip, r5
 8009724:	3304      	adds	r3, #4
 8009726:	42ba      	cmp	r2, r7
 8009728:	d8e6      	bhi.n	80096f8 <__mdiff+0x64>
 800972a:	9902      	ldr	r1, [sp, #8]
 800972c:	001a      	movs	r2, r3
 800972e:	428c      	cmp	r4, r1
 8009730:	d305      	bcc.n	800973e <__mdiff+0xaa>
 8009732:	3a04      	subs	r2, #4
 8009734:	6813      	ldr	r3, [r2, #0]
 8009736:	2b00      	cmp	r3, #0
 8009738:	d00e      	beq.n	8009758 <__mdiff+0xc4>
 800973a:	6106      	str	r6, [r0, #16]
 800973c:	e7bc      	b.n	80096b8 <__mdiff+0x24>
 800973e:	cc04      	ldmia	r4!, {r2}
 8009740:	b291      	uxth	r1, r2
 8009742:	4461      	add	r1, ip
 8009744:	140d      	asrs	r5, r1, #16
 8009746:	0c12      	lsrs	r2, r2, #16
 8009748:	1952      	adds	r2, r2, r5
 800974a:	1415      	asrs	r5, r2, #16
 800974c:	b289      	uxth	r1, r1
 800974e:	0412      	lsls	r2, r2, #16
 8009750:	430a      	orrs	r2, r1
 8009752:	46ac      	mov	ip, r5
 8009754:	c304      	stmia	r3!, {r2}
 8009756:	e7e8      	b.n	800972a <__mdiff+0x96>
 8009758:	3e01      	subs	r6, #1
 800975a:	e7ea      	b.n	8009732 <__mdiff+0x9e>

0800975c <__d2b>:
 800975c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800975e:	001d      	movs	r5, r3
 8009760:	2101      	movs	r1, #1
 8009762:	0014      	movs	r4, r2
 8009764:	9f08      	ldr	r7, [sp, #32]
 8009766:	f7ff fd67 	bl	8009238 <_Balloc>
 800976a:	032b      	lsls	r3, r5, #12
 800976c:	006d      	lsls	r5, r5, #1
 800976e:	0006      	movs	r6, r0
 8009770:	0b1b      	lsrs	r3, r3, #12
 8009772:	0d6d      	lsrs	r5, r5, #21
 8009774:	d124      	bne.n	80097c0 <__d2b+0x64>
 8009776:	9301      	str	r3, [sp, #4]
 8009778:	2c00      	cmp	r4, #0
 800977a:	d027      	beq.n	80097cc <__d2b+0x70>
 800977c:	4668      	mov	r0, sp
 800977e:	9400      	str	r4, [sp, #0]
 8009780:	f7ff fe03 	bl	800938a <__lo0bits>
 8009784:	9c00      	ldr	r4, [sp, #0]
 8009786:	2800      	cmp	r0, #0
 8009788:	d01e      	beq.n	80097c8 <__d2b+0x6c>
 800978a:	9b01      	ldr	r3, [sp, #4]
 800978c:	2120      	movs	r1, #32
 800978e:	001a      	movs	r2, r3
 8009790:	1a09      	subs	r1, r1, r0
 8009792:	408a      	lsls	r2, r1
 8009794:	40c3      	lsrs	r3, r0
 8009796:	4322      	orrs	r2, r4
 8009798:	6172      	str	r2, [r6, #20]
 800979a:	9301      	str	r3, [sp, #4]
 800979c:	9c01      	ldr	r4, [sp, #4]
 800979e:	61b4      	str	r4, [r6, #24]
 80097a0:	1e63      	subs	r3, r4, #1
 80097a2:	419c      	sbcs	r4, r3
 80097a4:	3401      	adds	r4, #1
 80097a6:	6134      	str	r4, [r6, #16]
 80097a8:	2d00      	cmp	r5, #0
 80097aa:	d018      	beq.n	80097de <__d2b+0x82>
 80097ac:	4b12      	ldr	r3, [pc, #72]	; (80097f8 <__d2b+0x9c>)
 80097ae:	18ed      	adds	r5, r5, r3
 80097b0:	2335      	movs	r3, #53	; 0x35
 80097b2:	182d      	adds	r5, r5, r0
 80097b4:	603d      	str	r5, [r7, #0]
 80097b6:	1a18      	subs	r0, r3, r0
 80097b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097ba:	6018      	str	r0, [r3, #0]
 80097bc:	0030      	movs	r0, r6
 80097be:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80097c0:	2280      	movs	r2, #128	; 0x80
 80097c2:	0352      	lsls	r2, r2, #13
 80097c4:	4313      	orrs	r3, r2
 80097c6:	e7d6      	b.n	8009776 <__d2b+0x1a>
 80097c8:	6174      	str	r4, [r6, #20]
 80097ca:	e7e7      	b.n	800979c <__d2b+0x40>
 80097cc:	a801      	add	r0, sp, #4
 80097ce:	f7ff fddc 	bl	800938a <__lo0bits>
 80097d2:	2401      	movs	r4, #1
 80097d4:	9b01      	ldr	r3, [sp, #4]
 80097d6:	6134      	str	r4, [r6, #16]
 80097d8:	6173      	str	r3, [r6, #20]
 80097da:	3020      	adds	r0, #32
 80097dc:	e7e4      	b.n	80097a8 <__d2b+0x4c>
 80097de:	4b07      	ldr	r3, [pc, #28]	; (80097fc <__d2b+0xa0>)
 80097e0:	18c0      	adds	r0, r0, r3
 80097e2:	4b07      	ldr	r3, [pc, #28]	; (8009800 <__d2b+0xa4>)
 80097e4:	6038      	str	r0, [r7, #0]
 80097e6:	18e3      	adds	r3, r4, r3
 80097e8:	009b      	lsls	r3, r3, #2
 80097ea:	18f3      	adds	r3, r6, r3
 80097ec:	6958      	ldr	r0, [r3, #20]
 80097ee:	f7ff fdb2 	bl	8009356 <__hi0bits>
 80097f2:	0164      	lsls	r4, r4, #5
 80097f4:	1a20      	subs	r0, r4, r0
 80097f6:	e7df      	b.n	80097b8 <__d2b+0x5c>
 80097f8:	fffffbcd 	.word	0xfffffbcd
 80097fc:	fffffbce 	.word	0xfffffbce
 8009800:	3fffffff 	.word	0x3fffffff

08009804 <_calloc_r>:
 8009804:	434a      	muls	r2, r1
 8009806:	b570      	push	{r4, r5, r6, lr}
 8009808:	0011      	movs	r1, r2
 800980a:	0014      	movs	r4, r2
 800980c:	f7fc fc04 	bl	8006018 <_malloc_r>
 8009810:	1e05      	subs	r5, r0, #0
 8009812:	d003      	beq.n	800981c <_calloc_r+0x18>
 8009814:	0022      	movs	r2, r4
 8009816:	2100      	movs	r1, #0
 8009818:	f7fc fbac 	bl	8005f74 <memset>
 800981c:	0028      	movs	r0, r5
 800981e:	bd70      	pop	{r4, r5, r6, pc}

08009820 <__ssputs_r>:
 8009820:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009822:	688e      	ldr	r6, [r1, #8]
 8009824:	b085      	sub	sp, #20
 8009826:	0007      	movs	r7, r0
 8009828:	000c      	movs	r4, r1
 800982a:	9203      	str	r2, [sp, #12]
 800982c:	9301      	str	r3, [sp, #4]
 800982e:	429e      	cmp	r6, r3
 8009830:	d83c      	bhi.n	80098ac <__ssputs_r+0x8c>
 8009832:	2390      	movs	r3, #144	; 0x90
 8009834:	898a      	ldrh	r2, [r1, #12]
 8009836:	00db      	lsls	r3, r3, #3
 8009838:	421a      	tst	r2, r3
 800983a:	d034      	beq.n	80098a6 <__ssputs_r+0x86>
 800983c:	2503      	movs	r5, #3
 800983e:	6909      	ldr	r1, [r1, #16]
 8009840:	6823      	ldr	r3, [r4, #0]
 8009842:	1a5b      	subs	r3, r3, r1
 8009844:	9302      	str	r3, [sp, #8]
 8009846:	6963      	ldr	r3, [r4, #20]
 8009848:	9802      	ldr	r0, [sp, #8]
 800984a:	435d      	muls	r5, r3
 800984c:	0feb      	lsrs	r3, r5, #31
 800984e:	195d      	adds	r5, r3, r5
 8009850:	9b01      	ldr	r3, [sp, #4]
 8009852:	106d      	asrs	r5, r5, #1
 8009854:	3301      	adds	r3, #1
 8009856:	181b      	adds	r3, r3, r0
 8009858:	42ab      	cmp	r3, r5
 800985a:	d900      	bls.n	800985e <__ssputs_r+0x3e>
 800985c:	001d      	movs	r5, r3
 800985e:	0553      	lsls	r3, r2, #21
 8009860:	d532      	bpl.n	80098c8 <__ssputs_r+0xa8>
 8009862:	0029      	movs	r1, r5
 8009864:	0038      	movs	r0, r7
 8009866:	f7fc fbd7 	bl	8006018 <_malloc_r>
 800986a:	1e06      	subs	r6, r0, #0
 800986c:	d109      	bne.n	8009882 <__ssputs_r+0x62>
 800986e:	230c      	movs	r3, #12
 8009870:	603b      	str	r3, [r7, #0]
 8009872:	2340      	movs	r3, #64	; 0x40
 8009874:	2001      	movs	r0, #1
 8009876:	89a2      	ldrh	r2, [r4, #12]
 8009878:	4240      	negs	r0, r0
 800987a:	4313      	orrs	r3, r2
 800987c:	81a3      	strh	r3, [r4, #12]
 800987e:	b005      	add	sp, #20
 8009880:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009882:	9a02      	ldr	r2, [sp, #8]
 8009884:	6921      	ldr	r1, [r4, #16]
 8009886:	f7ff fccc 	bl	8009222 <memcpy>
 800988a:	89a3      	ldrh	r3, [r4, #12]
 800988c:	4a14      	ldr	r2, [pc, #80]	; (80098e0 <__ssputs_r+0xc0>)
 800988e:	401a      	ands	r2, r3
 8009890:	2380      	movs	r3, #128	; 0x80
 8009892:	4313      	orrs	r3, r2
 8009894:	81a3      	strh	r3, [r4, #12]
 8009896:	9b02      	ldr	r3, [sp, #8]
 8009898:	6126      	str	r6, [r4, #16]
 800989a:	18f6      	adds	r6, r6, r3
 800989c:	6026      	str	r6, [r4, #0]
 800989e:	6165      	str	r5, [r4, #20]
 80098a0:	9e01      	ldr	r6, [sp, #4]
 80098a2:	1aed      	subs	r5, r5, r3
 80098a4:	60a5      	str	r5, [r4, #8]
 80098a6:	9b01      	ldr	r3, [sp, #4]
 80098a8:	429e      	cmp	r6, r3
 80098aa:	d900      	bls.n	80098ae <__ssputs_r+0x8e>
 80098ac:	9e01      	ldr	r6, [sp, #4]
 80098ae:	0032      	movs	r2, r6
 80098b0:	9903      	ldr	r1, [sp, #12]
 80098b2:	6820      	ldr	r0, [r4, #0]
 80098b4:	f000 fb80 	bl	8009fb8 <memmove>
 80098b8:	68a3      	ldr	r3, [r4, #8]
 80098ba:	2000      	movs	r0, #0
 80098bc:	1b9b      	subs	r3, r3, r6
 80098be:	60a3      	str	r3, [r4, #8]
 80098c0:	6823      	ldr	r3, [r4, #0]
 80098c2:	199e      	adds	r6, r3, r6
 80098c4:	6026      	str	r6, [r4, #0]
 80098c6:	e7da      	b.n	800987e <__ssputs_r+0x5e>
 80098c8:	002a      	movs	r2, r5
 80098ca:	0038      	movs	r0, r7
 80098cc:	f000 fb87 	bl	8009fde <_realloc_r>
 80098d0:	1e06      	subs	r6, r0, #0
 80098d2:	d1e0      	bne.n	8009896 <__ssputs_r+0x76>
 80098d4:	6921      	ldr	r1, [r4, #16]
 80098d6:	0038      	movs	r0, r7
 80098d8:	f7fc fb54 	bl	8005f84 <_free_r>
 80098dc:	e7c7      	b.n	800986e <__ssputs_r+0x4e>
 80098de:	46c0      	nop			; (mov r8, r8)
 80098e0:	fffffb7f 	.word	0xfffffb7f

080098e4 <_svfiprintf_r>:
 80098e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80098e6:	b0a1      	sub	sp, #132	; 0x84
 80098e8:	9003      	str	r0, [sp, #12]
 80098ea:	001d      	movs	r5, r3
 80098ec:	898b      	ldrh	r3, [r1, #12]
 80098ee:	000f      	movs	r7, r1
 80098f0:	0016      	movs	r6, r2
 80098f2:	061b      	lsls	r3, r3, #24
 80098f4:	d511      	bpl.n	800991a <_svfiprintf_r+0x36>
 80098f6:	690b      	ldr	r3, [r1, #16]
 80098f8:	2b00      	cmp	r3, #0
 80098fa:	d10e      	bne.n	800991a <_svfiprintf_r+0x36>
 80098fc:	2140      	movs	r1, #64	; 0x40
 80098fe:	f7fc fb8b 	bl	8006018 <_malloc_r>
 8009902:	6038      	str	r0, [r7, #0]
 8009904:	6138      	str	r0, [r7, #16]
 8009906:	2800      	cmp	r0, #0
 8009908:	d105      	bne.n	8009916 <_svfiprintf_r+0x32>
 800990a:	230c      	movs	r3, #12
 800990c:	9a03      	ldr	r2, [sp, #12]
 800990e:	3801      	subs	r0, #1
 8009910:	6013      	str	r3, [r2, #0]
 8009912:	b021      	add	sp, #132	; 0x84
 8009914:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009916:	2340      	movs	r3, #64	; 0x40
 8009918:	617b      	str	r3, [r7, #20]
 800991a:	2300      	movs	r3, #0
 800991c:	ac08      	add	r4, sp, #32
 800991e:	6163      	str	r3, [r4, #20]
 8009920:	3320      	adds	r3, #32
 8009922:	7663      	strb	r3, [r4, #25]
 8009924:	3310      	adds	r3, #16
 8009926:	76a3      	strb	r3, [r4, #26]
 8009928:	9507      	str	r5, [sp, #28]
 800992a:	0035      	movs	r5, r6
 800992c:	782b      	ldrb	r3, [r5, #0]
 800992e:	2b00      	cmp	r3, #0
 8009930:	d001      	beq.n	8009936 <_svfiprintf_r+0x52>
 8009932:	2b25      	cmp	r3, #37	; 0x25
 8009934:	d146      	bne.n	80099c4 <_svfiprintf_r+0xe0>
 8009936:	1bab      	subs	r3, r5, r6
 8009938:	9305      	str	r3, [sp, #20]
 800993a:	d00c      	beq.n	8009956 <_svfiprintf_r+0x72>
 800993c:	0032      	movs	r2, r6
 800993e:	0039      	movs	r1, r7
 8009940:	9803      	ldr	r0, [sp, #12]
 8009942:	f7ff ff6d 	bl	8009820 <__ssputs_r>
 8009946:	1c43      	adds	r3, r0, #1
 8009948:	d100      	bne.n	800994c <_svfiprintf_r+0x68>
 800994a:	e0ae      	b.n	8009aaa <_svfiprintf_r+0x1c6>
 800994c:	6962      	ldr	r2, [r4, #20]
 800994e:	9b05      	ldr	r3, [sp, #20]
 8009950:	4694      	mov	ip, r2
 8009952:	4463      	add	r3, ip
 8009954:	6163      	str	r3, [r4, #20]
 8009956:	782b      	ldrb	r3, [r5, #0]
 8009958:	2b00      	cmp	r3, #0
 800995a:	d100      	bne.n	800995e <_svfiprintf_r+0x7a>
 800995c:	e0a5      	b.n	8009aaa <_svfiprintf_r+0x1c6>
 800995e:	2201      	movs	r2, #1
 8009960:	2300      	movs	r3, #0
 8009962:	4252      	negs	r2, r2
 8009964:	6062      	str	r2, [r4, #4]
 8009966:	a904      	add	r1, sp, #16
 8009968:	3254      	adds	r2, #84	; 0x54
 800996a:	1852      	adds	r2, r2, r1
 800996c:	1c6e      	adds	r6, r5, #1
 800996e:	6023      	str	r3, [r4, #0]
 8009970:	60e3      	str	r3, [r4, #12]
 8009972:	60a3      	str	r3, [r4, #8]
 8009974:	7013      	strb	r3, [r2, #0]
 8009976:	65a3      	str	r3, [r4, #88]	; 0x58
 8009978:	7831      	ldrb	r1, [r6, #0]
 800997a:	2205      	movs	r2, #5
 800997c:	4853      	ldr	r0, [pc, #332]	; (8009acc <_svfiprintf_r+0x1e8>)
 800997e:	f7ff fc45 	bl	800920c <memchr>
 8009982:	1c75      	adds	r5, r6, #1
 8009984:	2800      	cmp	r0, #0
 8009986:	d11f      	bne.n	80099c8 <_svfiprintf_r+0xe4>
 8009988:	6822      	ldr	r2, [r4, #0]
 800998a:	06d3      	lsls	r3, r2, #27
 800998c:	d504      	bpl.n	8009998 <_svfiprintf_r+0xb4>
 800998e:	2353      	movs	r3, #83	; 0x53
 8009990:	a904      	add	r1, sp, #16
 8009992:	185b      	adds	r3, r3, r1
 8009994:	2120      	movs	r1, #32
 8009996:	7019      	strb	r1, [r3, #0]
 8009998:	0713      	lsls	r3, r2, #28
 800999a:	d504      	bpl.n	80099a6 <_svfiprintf_r+0xc2>
 800999c:	2353      	movs	r3, #83	; 0x53
 800999e:	a904      	add	r1, sp, #16
 80099a0:	185b      	adds	r3, r3, r1
 80099a2:	212b      	movs	r1, #43	; 0x2b
 80099a4:	7019      	strb	r1, [r3, #0]
 80099a6:	7833      	ldrb	r3, [r6, #0]
 80099a8:	2b2a      	cmp	r3, #42	; 0x2a
 80099aa:	d016      	beq.n	80099da <_svfiprintf_r+0xf6>
 80099ac:	0035      	movs	r5, r6
 80099ae:	2100      	movs	r1, #0
 80099b0:	200a      	movs	r0, #10
 80099b2:	68e3      	ldr	r3, [r4, #12]
 80099b4:	782a      	ldrb	r2, [r5, #0]
 80099b6:	1c6e      	adds	r6, r5, #1
 80099b8:	3a30      	subs	r2, #48	; 0x30
 80099ba:	2a09      	cmp	r2, #9
 80099bc:	d94e      	bls.n	8009a5c <_svfiprintf_r+0x178>
 80099be:	2900      	cmp	r1, #0
 80099c0:	d018      	beq.n	80099f4 <_svfiprintf_r+0x110>
 80099c2:	e010      	b.n	80099e6 <_svfiprintf_r+0x102>
 80099c4:	3501      	adds	r5, #1
 80099c6:	e7b1      	b.n	800992c <_svfiprintf_r+0x48>
 80099c8:	4b40      	ldr	r3, [pc, #256]	; (8009acc <_svfiprintf_r+0x1e8>)
 80099ca:	6822      	ldr	r2, [r4, #0]
 80099cc:	1ac0      	subs	r0, r0, r3
 80099ce:	2301      	movs	r3, #1
 80099d0:	4083      	lsls	r3, r0
 80099d2:	4313      	orrs	r3, r2
 80099d4:	6023      	str	r3, [r4, #0]
 80099d6:	002e      	movs	r6, r5
 80099d8:	e7ce      	b.n	8009978 <_svfiprintf_r+0x94>
 80099da:	9b07      	ldr	r3, [sp, #28]
 80099dc:	1d19      	adds	r1, r3, #4
 80099de:	681b      	ldr	r3, [r3, #0]
 80099e0:	9107      	str	r1, [sp, #28]
 80099e2:	2b00      	cmp	r3, #0
 80099e4:	db01      	blt.n	80099ea <_svfiprintf_r+0x106>
 80099e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80099e8:	e004      	b.n	80099f4 <_svfiprintf_r+0x110>
 80099ea:	425b      	negs	r3, r3
 80099ec:	60e3      	str	r3, [r4, #12]
 80099ee:	2302      	movs	r3, #2
 80099f0:	4313      	orrs	r3, r2
 80099f2:	6023      	str	r3, [r4, #0]
 80099f4:	782b      	ldrb	r3, [r5, #0]
 80099f6:	2b2e      	cmp	r3, #46	; 0x2e
 80099f8:	d10a      	bne.n	8009a10 <_svfiprintf_r+0x12c>
 80099fa:	786b      	ldrb	r3, [r5, #1]
 80099fc:	2b2a      	cmp	r3, #42	; 0x2a
 80099fe:	d135      	bne.n	8009a6c <_svfiprintf_r+0x188>
 8009a00:	9b07      	ldr	r3, [sp, #28]
 8009a02:	3502      	adds	r5, #2
 8009a04:	1d1a      	adds	r2, r3, #4
 8009a06:	681b      	ldr	r3, [r3, #0]
 8009a08:	9207      	str	r2, [sp, #28]
 8009a0a:	2b00      	cmp	r3, #0
 8009a0c:	db2b      	blt.n	8009a66 <_svfiprintf_r+0x182>
 8009a0e:	9309      	str	r3, [sp, #36]	; 0x24
 8009a10:	4e2f      	ldr	r6, [pc, #188]	; (8009ad0 <_svfiprintf_r+0x1ec>)
 8009a12:	7829      	ldrb	r1, [r5, #0]
 8009a14:	2203      	movs	r2, #3
 8009a16:	0030      	movs	r0, r6
 8009a18:	f7ff fbf8 	bl	800920c <memchr>
 8009a1c:	2800      	cmp	r0, #0
 8009a1e:	d006      	beq.n	8009a2e <_svfiprintf_r+0x14a>
 8009a20:	2340      	movs	r3, #64	; 0x40
 8009a22:	1b80      	subs	r0, r0, r6
 8009a24:	4083      	lsls	r3, r0
 8009a26:	6822      	ldr	r2, [r4, #0]
 8009a28:	3501      	adds	r5, #1
 8009a2a:	4313      	orrs	r3, r2
 8009a2c:	6023      	str	r3, [r4, #0]
 8009a2e:	7829      	ldrb	r1, [r5, #0]
 8009a30:	2206      	movs	r2, #6
 8009a32:	4828      	ldr	r0, [pc, #160]	; (8009ad4 <_svfiprintf_r+0x1f0>)
 8009a34:	1c6e      	adds	r6, r5, #1
 8009a36:	7621      	strb	r1, [r4, #24]
 8009a38:	f7ff fbe8 	bl	800920c <memchr>
 8009a3c:	2800      	cmp	r0, #0
 8009a3e:	d03c      	beq.n	8009aba <_svfiprintf_r+0x1d6>
 8009a40:	4b25      	ldr	r3, [pc, #148]	; (8009ad8 <_svfiprintf_r+0x1f4>)
 8009a42:	2b00      	cmp	r3, #0
 8009a44:	d125      	bne.n	8009a92 <_svfiprintf_r+0x1ae>
 8009a46:	2207      	movs	r2, #7
 8009a48:	9b07      	ldr	r3, [sp, #28]
 8009a4a:	3307      	adds	r3, #7
 8009a4c:	4393      	bics	r3, r2
 8009a4e:	3308      	adds	r3, #8
 8009a50:	9307      	str	r3, [sp, #28]
 8009a52:	6963      	ldr	r3, [r4, #20]
 8009a54:	9a04      	ldr	r2, [sp, #16]
 8009a56:	189b      	adds	r3, r3, r2
 8009a58:	6163      	str	r3, [r4, #20]
 8009a5a:	e766      	b.n	800992a <_svfiprintf_r+0x46>
 8009a5c:	4343      	muls	r3, r0
 8009a5e:	2101      	movs	r1, #1
 8009a60:	189b      	adds	r3, r3, r2
 8009a62:	0035      	movs	r5, r6
 8009a64:	e7a6      	b.n	80099b4 <_svfiprintf_r+0xd0>
 8009a66:	2301      	movs	r3, #1
 8009a68:	425b      	negs	r3, r3
 8009a6a:	e7d0      	b.n	8009a0e <_svfiprintf_r+0x12a>
 8009a6c:	2300      	movs	r3, #0
 8009a6e:	200a      	movs	r0, #10
 8009a70:	001a      	movs	r2, r3
 8009a72:	3501      	adds	r5, #1
 8009a74:	6063      	str	r3, [r4, #4]
 8009a76:	7829      	ldrb	r1, [r5, #0]
 8009a78:	1c6e      	adds	r6, r5, #1
 8009a7a:	3930      	subs	r1, #48	; 0x30
 8009a7c:	2909      	cmp	r1, #9
 8009a7e:	d903      	bls.n	8009a88 <_svfiprintf_r+0x1a4>
 8009a80:	2b00      	cmp	r3, #0
 8009a82:	d0c5      	beq.n	8009a10 <_svfiprintf_r+0x12c>
 8009a84:	9209      	str	r2, [sp, #36]	; 0x24
 8009a86:	e7c3      	b.n	8009a10 <_svfiprintf_r+0x12c>
 8009a88:	4342      	muls	r2, r0
 8009a8a:	2301      	movs	r3, #1
 8009a8c:	1852      	adds	r2, r2, r1
 8009a8e:	0035      	movs	r5, r6
 8009a90:	e7f1      	b.n	8009a76 <_svfiprintf_r+0x192>
 8009a92:	ab07      	add	r3, sp, #28
 8009a94:	9300      	str	r3, [sp, #0]
 8009a96:	003a      	movs	r2, r7
 8009a98:	4b10      	ldr	r3, [pc, #64]	; (8009adc <_svfiprintf_r+0x1f8>)
 8009a9a:	0021      	movs	r1, r4
 8009a9c:	9803      	ldr	r0, [sp, #12]
 8009a9e:	f7fc fbb5 	bl	800620c <_printf_float>
 8009aa2:	9004      	str	r0, [sp, #16]
 8009aa4:	9b04      	ldr	r3, [sp, #16]
 8009aa6:	3301      	adds	r3, #1
 8009aa8:	d1d3      	bne.n	8009a52 <_svfiprintf_r+0x16e>
 8009aaa:	89bb      	ldrh	r3, [r7, #12]
 8009aac:	980d      	ldr	r0, [sp, #52]	; 0x34
 8009aae:	065b      	lsls	r3, r3, #25
 8009ab0:	d400      	bmi.n	8009ab4 <_svfiprintf_r+0x1d0>
 8009ab2:	e72e      	b.n	8009912 <_svfiprintf_r+0x2e>
 8009ab4:	2001      	movs	r0, #1
 8009ab6:	4240      	negs	r0, r0
 8009ab8:	e72b      	b.n	8009912 <_svfiprintf_r+0x2e>
 8009aba:	ab07      	add	r3, sp, #28
 8009abc:	9300      	str	r3, [sp, #0]
 8009abe:	003a      	movs	r2, r7
 8009ac0:	4b06      	ldr	r3, [pc, #24]	; (8009adc <_svfiprintf_r+0x1f8>)
 8009ac2:	0021      	movs	r1, r4
 8009ac4:	9803      	ldr	r0, [sp, #12]
 8009ac6:	f7fc fe5b 	bl	8006780 <_printf_i>
 8009aca:	e7ea      	b.n	8009aa2 <_svfiprintf_r+0x1be>
 8009acc:	0800c1dc 	.word	0x0800c1dc
 8009ad0:	0800c1e2 	.word	0x0800c1e2
 8009ad4:	0800c1e6 	.word	0x0800c1e6
 8009ad8:	0800620d 	.word	0x0800620d
 8009adc:	08009821 	.word	0x08009821

08009ae0 <__sfputc_r>:
 8009ae0:	6893      	ldr	r3, [r2, #8]
 8009ae2:	b510      	push	{r4, lr}
 8009ae4:	3b01      	subs	r3, #1
 8009ae6:	6093      	str	r3, [r2, #8]
 8009ae8:	2b00      	cmp	r3, #0
 8009aea:	da04      	bge.n	8009af6 <__sfputc_r+0x16>
 8009aec:	6994      	ldr	r4, [r2, #24]
 8009aee:	42a3      	cmp	r3, r4
 8009af0:	db07      	blt.n	8009b02 <__sfputc_r+0x22>
 8009af2:	290a      	cmp	r1, #10
 8009af4:	d005      	beq.n	8009b02 <__sfputc_r+0x22>
 8009af6:	6813      	ldr	r3, [r2, #0]
 8009af8:	1c58      	adds	r0, r3, #1
 8009afa:	6010      	str	r0, [r2, #0]
 8009afc:	7019      	strb	r1, [r3, #0]
 8009afe:	0008      	movs	r0, r1
 8009b00:	bd10      	pop	{r4, pc}
 8009b02:	f7fe f8fb 	bl	8007cfc <__swbuf_r>
 8009b06:	0001      	movs	r1, r0
 8009b08:	e7f9      	b.n	8009afe <__sfputc_r+0x1e>

08009b0a <__sfputs_r>:
 8009b0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009b0c:	0006      	movs	r6, r0
 8009b0e:	000f      	movs	r7, r1
 8009b10:	0014      	movs	r4, r2
 8009b12:	18d5      	adds	r5, r2, r3
 8009b14:	42ac      	cmp	r4, r5
 8009b16:	d101      	bne.n	8009b1c <__sfputs_r+0x12>
 8009b18:	2000      	movs	r0, #0
 8009b1a:	e007      	b.n	8009b2c <__sfputs_r+0x22>
 8009b1c:	7821      	ldrb	r1, [r4, #0]
 8009b1e:	003a      	movs	r2, r7
 8009b20:	0030      	movs	r0, r6
 8009b22:	f7ff ffdd 	bl	8009ae0 <__sfputc_r>
 8009b26:	3401      	adds	r4, #1
 8009b28:	1c43      	adds	r3, r0, #1
 8009b2a:	d1f3      	bne.n	8009b14 <__sfputs_r+0xa>
 8009b2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08009b30 <_vfiprintf_r>:
 8009b30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009b32:	b0a1      	sub	sp, #132	; 0x84
 8009b34:	9003      	str	r0, [sp, #12]
 8009b36:	000f      	movs	r7, r1
 8009b38:	0016      	movs	r6, r2
 8009b3a:	001d      	movs	r5, r3
 8009b3c:	2800      	cmp	r0, #0
 8009b3e:	d005      	beq.n	8009b4c <_vfiprintf_r+0x1c>
 8009b40:	6983      	ldr	r3, [r0, #24]
 8009b42:	9305      	str	r3, [sp, #20]
 8009b44:	2b00      	cmp	r3, #0
 8009b46:	d101      	bne.n	8009b4c <_vfiprintf_r+0x1c>
 8009b48:	f7ff f906 	bl	8008d58 <__sinit>
 8009b4c:	4b7b      	ldr	r3, [pc, #492]	; (8009d3c <_vfiprintf_r+0x20c>)
 8009b4e:	429f      	cmp	r7, r3
 8009b50:	d15c      	bne.n	8009c0c <_vfiprintf_r+0xdc>
 8009b52:	9b03      	ldr	r3, [sp, #12]
 8009b54:	685f      	ldr	r7, [r3, #4]
 8009b56:	89bb      	ldrh	r3, [r7, #12]
 8009b58:	071b      	lsls	r3, r3, #28
 8009b5a:	d563      	bpl.n	8009c24 <_vfiprintf_r+0xf4>
 8009b5c:	693b      	ldr	r3, [r7, #16]
 8009b5e:	2b00      	cmp	r3, #0
 8009b60:	d060      	beq.n	8009c24 <_vfiprintf_r+0xf4>
 8009b62:	2300      	movs	r3, #0
 8009b64:	ac08      	add	r4, sp, #32
 8009b66:	6163      	str	r3, [r4, #20]
 8009b68:	3320      	adds	r3, #32
 8009b6a:	7663      	strb	r3, [r4, #25]
 8009b6c:	3310      	adds	r3, #16
 8009b6e:	76a3      	strb	r3, [r4, #26]
 8009b70:	9507      	str	r5, [sp, #28]
 8009b72:	0035      	movs	r5, r6
 8009b74:	782b      	ldrb	r3, [r5, #0]
 8009b76:	2b00      	cmp	r3, #0
 8009b78:	d001      	beq.n	8009b7e <_vfiprintf_r+0x4e>
 8009b7a:	2b25      	cmp	r3, #37	; 0x25
 8009b7c:	d15c      	bne.n	8009c38 <_vfiprintf_r+0x108>
 8009b7e:	1bab      	subs	r3, r5, r6
 8009b80:	9305      	str	r3, [sp, #20]
 8009b82:	d00c      	beq.n	8009b9e <_vfiprintf_r+0x6e>
 8009b84:	0032      	movs	r2, r6
 8009b86:	0039      	movs	r1, r7
 8009b88:	9803      	ldr	r0, [sp, #12]
 8009b8a:	f7ff ffbe 	bl	8009b0a <__sfputs_r>
 8009b8e:	1c43      	adds	r3, r0, #1
 8009b90:	d100      	bne.n	8009b94 <_vfiprintf_r+0x64>
 8009b92:	e0c4      	b.n	8009d1e <_vfiprintf_r+0x1ee>
 8009b94:	6962      	ldr	r2, [r4, #20]
 8009b96:	9b05      	ldr	r3, [sp, #20]
 8009b98:	4694      	mov	ip, r2
 8009b9a:	4463      	add	r3, ip
 8009b9c:	6163      	str	r3, [r4, #20]
 8009b9e:	782b      	ldrb	r3, [r5, #0]
 8009ba0:	2b00      	cmp	r3, #0
 8009ba2:	d100      	bne.n	8009ba6 <_vfiprintf_r+0x76>
 8009ba4:	e0bb      	b.n	8009d1e <_vfiprintf_r+0x1ee>
 8009ba6:	2201      	movs	r2, #1
 8009ba8:	2300      	movs	r3, #0
 8009baa:	4252      	negs	r2, r2
 8009bac:	6062      	str	r2, [r4, #4]
 8009bae:	a904      	add	r1, sp, #16
 8009bb0:	3254      	adds	r2, #84	; 0x54
 8009bb2:	1852      	adds	r2, r2, r1
 8009bb4:	1c6e      	adds	r6, r5, #1
 8009bb6:	6023      	str	r3, [r4, #0]
 8009bb8:	60e3      	str	r3, [r4, #12]
 8009bba:	60a3      	str	r3, [r4, #8]
 8009bbc:	7013      	strb	r3, [r2, #0]
 8009bbe:	65a3      	str	r3, [r4, #88]	; 0x58
 8009bc0:	7831      	ldrb	r1, [r6, #0]
 8009bc2:	2205      	movs	r2, #5
 8009bc4:	485e      	ldr	r0, [pc, #376]	; (8009d40 <_vfiprintf_r+0x210>)
 8009bc6:	f7ff fb21 	bl	800920c <memchr>
 8009bca:	1c75      	adds	r5, r6, #1
 8009bcc:	2800      	cmp	r0, #0
 8009bce:	d135      	bne.n	8009c3c <_vfiprintf_r+0x10c>
 8009bd0:	6822      	ldr	r2, [r4, #0]
 8009bd2:	06d3      	lsls	r3, r2, #27
 8009bd4:	d504      	bpl.n	8009be0 <_vfiprintf_r+0xb0>
 8009bd6:	2353      	movs	r3, #83	; 0x53
 8009bd8:	a904      	add	r1, sp, #16
 8009bda:	185b      	adds	r3, r3, r1
 8009bdc:	2120      	movs	r1, #32
 8009bde:	7019      	strb	r1, [r3, #0]
 8009be0:	0713      	lsls	r3, r2, #28
 8009be2:	d504      	bpl.n	8009bee <_vfiprintf_r+0xbe>
 8009be4:	2353      	movs	r3, #83	; 0x53
 8009be6:	a904      	add	r1, sp, #16
 8009be8:	185b      	adds	r3, r3, r1
 8009bea:	212b      	movs	r1, #43	; 0x2b
 8009bec:	7019      	strb	r1, [r3, #0]
 8009bee:	7833      	ldrb	r3, [r6, #0]
 8009bf0:	2b2a      	cmp	r3, #42	; 0x2a
 8009bf2:	d02c      	beq.n	8009c4e <_vfiprintf_r+0x11e>
 8009bf4:	0035      	movs	r5, r6
 8009bf6:	2100      	movs	r1, #0
 8009bf8:	200a      	movs	r0, #10
 8009bfa:	68e3      	ldr	r3, [r4, #12]
 8009bfc:	782a      	ldrb	r2, [r5, #0]
 8009bfe:	1c6e      	adds	r6, r5, #1
 8009c00:	3a30      	subs	r2, #48	; 0x30
 8009c02:	2a09      	cmp	r2, #9
 8009c04:	d964      	bls.n	8009cd0 <_vfiprintf_r+0x1a0>
 8009c06:	2900      	cmp	r1, #0
 8009c08:	d02e      	beq.n	8009c68 <_vfiprintf_r+0x138>
 8009c0a:	e026      	b.n	8009c5a <_vfiprintf_r+0x12a>
 8009c0c:	4b4d      	ldr	r3, [pc, #308]	; (8009d44 <_vfiprintf_r+0x214>)
 8009c0e:	429f      	cmp	r7, r3
 8009c10:	d102      	bne.n	8009c18 <_vfiprintf_r+0xe8>
 8009c12:	9b03      	ldr	r3, [sp, #12]
 8009c14:	689f      	ldr	r7, [r3, #8]
 8009c16:	e79e      	b.n	8009b56 <_vfiprintf_r+0x26>
 8009c18:	4b4b      	ldr	r3, [pc, #300]	; (8009d48 <_vfiprintf_r+0x218>)
 8009c1a:	429f      	cmp	r7, r3
 8009c1c:	d19b      	bne.n	8009b56 <_vfiprintf_r+0x26>
 8009c1e:	9b03      	ldr	r3, [sp, #12]
 8009c20:	68df      	ldr	r7, [r3, #12]
 8009c22:	e798      	b.n	8009b56 <_vfiprintf_r+0x26>
 8009c24:	0039      	movs	r1, r7
 8009c26:	9803      	ldr	r0, [sp, #12]
 8009c28:	f7fe f8be 	bl	8007da8 <__swsetup_r>
 8009c2c:	2800      	cmp	r0, #0
 8009c2e:	d098      	beq.n	8009b62 <_vfiprintf_r+0x32>
 8009c30:	2001      	movs	r0, #1
 8009c32:	4240      	negs	r0, r0
 8009c34:	b021      	add	sp, #132	; 0x84
 8009c36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009c38:	3501      	adds	r5, #1
 8009c3a:	e79b      	b.n	8009b74 <_vfiprintf_r+0x44>
 8009c3c:	4b40      	ldr	r3, [pc, #256]	; (8009d40 <_vfiprintf_r+0x210>)
 8009c3e:	6822      	ldr	r2, [r4, #0]
 8009c40:	1ac0      	subs	r0, r0, r3
 8009c42:	2301      	movs	r3, #1
 8009c44:	4083      	lsls	r3, r0
 8009c46:	4313      	orrs	r3, r2
 8009c48:	6023      	str	r3, [r4, #0]
 8009c4a:	002e      	movs	r6, r5
 8009c4c:	e7b8      	b.n	8009bc0 <_vfiprintf_r+0x90>
 8009c4e:	9b07      	ldr	r3, [sp, #28]
 8009c50:	1d19      	adds	r1, r3, #4
 8009c52:	681b      	ldr	r3, [r3, #0]
 8009c54:	9107      	str	r1, [sp, #28]
 8009c56:	2b00      	cmp	r3, #0
 8009c58:	db01      	blt.n	8009c5e <_vfiprintf_r+0x12e>
 8009c5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8009c5c:	e004      	b.n	8009c68 <_vfiprintf_r+0x138>
 8009c5e:	425b      	negs	r3, r3
 8009c60:	60e3      	str	r3, [r4, #12]
 8009c62:	2302      	movs	r3, #2
 8009c64:	4313      	orrs	r3, r2
 8009c66:	6023      	str	r3, [r4, #0]
 8009c68:	782b      	ldrb	r3, [r5, #0]
 8009c6a:	2b2e      	cmp	r3, #46	; 0x2e
 8009c6c:	d10a      	bne.n	8009c84 <_vfiprintf_r+0x154>
 8009c6e:	786b      	ldrb	r3, [r5, #1]
 8009c70:	2b2a      	cmp	r3, #42	; 0x2a
 8009c72:	d135      	bne.n	8009ce0 <_vfiprintf_r+0x1b0>
 8009c74:	9b07      	ldr	r3, [sp, #28]
 8009c76:	3502      	adds	r5, #2
 8009c78:	1d1a      	adds	r2, r3, #4
 8009c7a:	681b      	ldr	r3, [r3, #0]
 8009c7c:	9207      	str	r2, [sp, #28]
 8009c7e:	2b00      	cmp	r3, #0
 8009c80:	db2b      	blt.n	8009cda <_vfiprintf_r+0x1aa>
 8009c82:	9309      	str	r3, [sp, #36]	; 0x24
 8009c84:	4e31      	ldr	r6, [pc, #196]	; (8009d4c <_vfiprintf_r+0x21c>)
 8009c86:	7829      	ldrb	r1, [r5, #0]
 8009c88:	2203      	movs	r2, #3
 8009c8a:	0030      	movs	r0, r6
 8009c8c:	f7ff fabe 	bl	800920c <memchr>
 8009c90:	2800      	cmp	r0, #0
 8009c92:	d006      	beq.n	8009ca2 <_vfiprintf_r+0x172>
 8009c94:	2340      	movs	r3, #64	; 0x40
 8009c96:	1b80      	subs	r0, r0, r6
 8009c98:	4083      	lsls	r3, r0
 8009c9a:	6822      	ldr	r2, [r4, #0]
 8009c9c:	3501      	adds	r5, #1
 8009c9e:	4313      	orrs	r3, r2
 8009ca0:	6023      	str	r3, [r4, #0]
 8009ca2:	7829      	ldrb	r1, [r5, #0]
 8009ca4:	2206      	movs	r2, #6
 8009ca6:	482a      	ldr	r0, [pc, #168]	; (8009d50 <_vfiprintf_r+0x220>)
 8009ca8:	1c6e      	adds	r6, r5, #1
 8009caa:	7621      	strb	r1, [r4, #24]
 8009cac:	f7ff faae 	bl	800920c <memchr>
 8009cb0:	2800      	cmp	r0, #0
 8009cb2:	d03a      	beq.n	8009d2a <_vfiprintf_r+0x1fa>
 8009cb4:	4b27      	ldr	r3, [pc, #156]	; (8009d54 <_vfiprintf_r+0x224>)
 8009cb6:	2b00      	cmp	r3, #0
 8009cb8:	d125      	bne.n	8009d06 <_vfiprintf_r+0x1d6>
 8009cba:	2207      	movs	r2, #7
 8009cbc:	9b07      	ldr	r3, [sp, #28]
 8009cbe:	3307      	adds	r3, #7
 8009cc0:	4393      	bics	r3, r2
 8009cc2:	3308      	adds	r3, #8
 8009cc4:	9307      	str	r3, [sp, #28]
 8009cc6:	6963      	ldr	r3, [r4, #20]
 8009cc8:	9a04      	ldr	r2, [sp, #16]
 8009cca:	189b      	adds	r3, r3, r2
 8009ccc:	6163      	str	r3, [r4, #20]
 8009cce:	e750      	b.n	8009b72 <_vfiprintf_r+0x42>
 8009cd0:	4343      	muls	r3, r0
 8009cd2:	2101      	movs	r1, #1
 8009cd4:	189b      	adds	r3, r3, r2
 8009cd6:	0035      	movs	r5, r6
 8009cd8:	e790      	b.n	8009bfc <_vfiprintf_r+0xcc>
 8009cda:	2301      	movs	r3, #1
 8009cdc:	425b      	negs	r3, r3
 8009cde:	e7d0      	b.n	8009c82 <_vfiprintf_r+0x152>
 8009ce0:	2300      	movs	r3, #0
 8009ce2:	200a      	movs	r0, #10
 8009ce4:	001a      	movs	r2, r3
 8009ce6:	3501      	adds	r5, #1
 8009ce8:	6063      	str	r3, [r4, #4]
 8009cea:	7829      	ldrb	r1, [r5, #0]
 8009cec:	1c6e      	adds	r6, r5, #1
 8009cee:	3930      	subs	r1, #48	; 0x30
 8009cf0:	2909      	cmp	r1, #9
 8009cf2:	d903      	bls.n	8009cfc <_vfiprintf_r+0x1cc>
 8009cf4:	2b00      	cmp	r3, #0
 8009cf6:	d0c5      	beq.n	8009c84 <_vfiprintf_r+0x154>
 8009cf8:	9209      	str	r2, [sp, #36]	; 0x24
 8009cfa:	e7c3      	b.n	8009c84 <_vfiprintf_r+0x154>
 8009cfc:	4342      	muls	r2, r0
 8009cfe:	2301      	movs	r3, #1
 8009d00:	1852      	adds	r2, r2, r1
 8009d02:	0035      	movs	r5, r6
 8009d04:	e7f1      	b.n	8009cea <_vfiprintf_r+0x1ba>
 8009d06:	ab07      	add	r3, sp, #28
 8009d08:	9300      	str	r3, [sp, #0]
 8009d0a:	003a      	movs	r2, r7
 8009d0c:	4b12      	ldr	r3, [pc, #72]	; (8009d58 <_vfiprintf_r+0x228>)
 8009d0e:	0021      	movs	r1, r4
 8009d10:	9803      	ldr	r0, [sp, #12]
 8009d12:	f7fc fa7b 	bl	800620c <_printf_float>
 8009d16:	9004      	str	r0, [sp, #16]
 8009d18:	9b04      	ldr	r3, [sp, #16]
 8009d1a:	3301      	adds	r3, #1
 8009d1c:	d1d3      	bne.n	8009cc6 <_vfiprintf_r+0x196>
 8009d1e:	89bb      	ldrh	r3, [r7, #12]
 8009d20:	065b      	lsls	r3, r3, #25
 8009d22:	d500      	bpl.n	8009d26 <_vfiprintf_r+0x1f6>
 8009d24:	e784      	b.n	8009c30 <_vfiprintf_r+0x100>
 8009d26:	980d      	ldr	r0, [sp, #52]	; 0x34
 8009d28:	e784      	b.n	8009c34 <_vfiprintf_r+0x104>
 8009d2a:	ab07      	add	r3, sp, #28
 8009d2c:	9300      	str	r3, [sp, #0]
 8009d2e:	003a      	movs	r2, r7
 8009d30:	4b09      	ldr	r3, [pc, #36]	; (8009d58 <_vfiprintf_r+0x228>)
 8009d32:	0021      	movs	r1, r4
 8009d34:	9803      	ldr	r0, [sp, #12]
 8009d36:	f7fc fd23 	bl	8006780 <_printf_i>
 8009d3a:	e7ec      	b.n	8009d16 <_vfiprintf_r+0x1e6>
 8009d3c:	0800c090 	.word	0x0800c090
 8009d40:	0800c1dc 	.word	0x0800c1dc
 8009d44:	0800c0b0 	.word	0x0800c0b0
 8009d48:	0800c070 	.word	0x0800c070
 8009d4c:	0800c1e2 	.word	0x0800c1e2
 8009d50:	0800c1e6 	.word	0x0800c1e6
 8009d54:	0800620d 	.word	0x0800620d
 8009d58:	08009b0b 	.word	0x08009b0b

08009d5c <sniprintf>:
 8009d5c:	b40c      	push	{r2, r3}
 8009d5e:	b530      	push	{r4, r5, lr}
 8009d60:	4b16      	ldr	r3, [pc, #88]	; (8009dbc <sniprintf+0x60>)
 8009d62:	b09d      	sub	sp, #116	; 0x74
 8009d64:	1e0c      	subs	r4, r1, #0
 8009d66:	681d      	ldr	r5, [r3, #0]
 8009d68:	da08      	bge.n	8009d7c <sniprintf+0x20>
 8009d6a:	238b      	movs	r3, #139	; 0x8b
 8009d6c:	2001      	movs	r0, #1
 8009d6e:	602b      	str	r3, [r5, #0]
 8009d70:	4240      	negs	r0, r0
 8009d72:	b01d      	add	sp, #116	; 0x74
 8009d74:	bc30      	pop	{r4, r5}
 8009d76:	bc08      	pop	{r3}
 8009d78:	b002      	add	sp, #8
 8009d7a:	4718      	bx	r3
 8009d7c:	2382      	movs	r3, #130	; 0x82
 8009d7e:	a902      	add	r1, sp, #8
 8009d80:	009b      	lsls	r3, r3, #2
 8009d82:	818b      	strh	r3, [r1, #12]
 8009d84:	2300      	movs	r3, #0
 8009d86:	9002      	str	r0, [sp, #8]
 8009d88:	6108      	str	r0, [r1, #16]
 8009d8a:	429c      	cmp	r4, r3
 8009d8c:	d000      	beq.n	8009d90 <sniprintf+0x34>
 8009d8e:	1e63      	subs	r3, r4, #1
 8009d90:	608b      	str	r3, [r1, #8]
 8009d92:	614b      	str	r3, [r1, #20]
 8009d94:	2301      	movs	r3, #1
 8009d96:	425b      	negs	r3, r3
 8009d98:	81cb      	strh	r3, [r1, #14]
 8009d9a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8009d9c:	ab21      	add	r3, sp, #132	; 0x84
 8009d9e:	0028      	movs	r0, r5
 8009da0:	9301      	str	r3, [sp, #4]
 8009da2:	f7ff fd9f 	bl	80098e4 <_svfiprintf_r>
 8009da6:	1c43      	adds	r3, r0, #1
 8009da8:	da01      	bge.n	8009dae <sniprintf+0x52>
 8009daa:	238b      	movs	r3, #139	; 0x8b
 8009dac:	602b      	str	r3, [r5, #0]
 8009dae:	2c00      	cmp	r4, #0
 8009db0:	d0df      	beq.n	8009d72 <sniprintf+0x16>
 8009db2:	2300      	movs	r3, #0
 8009db4:	9a02      	ldr	r2, [sp, #8]
 8009db6:	7013      	strb	r3, [r2, #0]
 8009db8:	e7db      	b.n	8009d72 <sniprintf+0x16>
 8009dba:	46c0      	nop			; (mov r8, r8)
 8009dbc:	2000001c 	.word	0x2000001c

08009dc0 <siscanf>:
 8009dc0:	b40e      	push	{r1, r2, r3}
 8009dc2:	2381      	movs	r3, #129	; 0x81
 8009dc4:	b570      	push	{r4, r5, r6, lr}
 8009dc6:	b09d      	sub	sp, #116	; 0x74
 8009dc8:	ac02      	add	r4, sp, #8
 8009dca:	ad21      	add	r5, sp, #132	; 0x84
 8009dcc:	009b      	lsls	r3, r3, #2
 8009dce:	cd40      	ldmia	r5!, {r6}
 8009dd0:	81a3      	strh	r3, [r4, #12]
 8009dd2:	9002      	str	r0, [sp, #8]
 8009dd4:	9006      	str	r0, [sp, #24]
 8009dd6:	f7f6 f997 	bl	8000108 <strlen>
 8009dda:	4b0b      	ldr	r3, [pc, #44]	; (8009e08 <siscanf+0x48>)
 8009ddc:	6060      	str	r0, [r4, #4]
 8009dde:	6263      	str	r3, [r4, #36]	; 0x24
 8009de0:	2300      	movs	r3, #0
 8009de2:	6160      	str	r0, [r4, #20]
 8009de4:	4809      	ldr	r0, [pc, #36]	; (8009e0c <siscanf+0x4c>)
 8009de6:	6363      	str	r3, [r4, #52]	; 0x34
 8009de8:	64a3      	str	r3, [r4, #72]	; 0x48
 8009dea:	3b01      	subs	r3, #1
 8009dec:	81e3      	strh	r3, [r4, #14]
 8009dee:	0032      	movs	r2, r6
 8009df0:	002b      	movs	r3, r5
 8009df2:	0021      	movs	r1, r4
 8009df4:	6800      	ldr	r0, [r0, #0]
 8009df6:	9501      	str	r5, [sp, #4]
 8009df8:	f000 f972 	bl	800a0e0 <__ssvfiscanf_r>
 8009dfc:	b01d      	add	sp, #116	; 0x74
 8009dfe:	bc70      	pop	{r4, r5, r6}
 8009e00:	bc08      	pop	{r3}
 8009e02:	b003      	add	sp, #12
 8009e04:	4718      	bx	r3
 8009e06:	46c0      	nop			; (mov r8, r8)
 8009e08:	08009e39 	.word	0x08009e39
 8009e0c:	2000001c 	.word	0x2000001c

08009e10 <__sread>:
 8009e10:	b570      	push	{r4, r5, r6, lr}
 8009e12:	000c      	movs	r4, r1
 8009e14:	250e      	movs	r5, #14
 8009e16:	5f49      	ldrsh	r1, [r1, r5]
 8009e18:	f000 fc38 	bl	800a68c <_read_r>
 8009e1c:	2800      	cmp	r0, #0
 8009e1e:	db03      	blt.n	8009e28 <__sread+0x18>
 8009e20:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8009e22:	181b      	adds	r3, r3, r0
 8009e24:	6563      	str	r3, [r4, #84]	; 0x54
 8009e26:	bd70      	pop	{r4, r5, r6, pc}
 8009e28:	89a3      	ldrh	r3, [r4, #12]
 8009e2a:	4a02      	ldr	r2, [pc, #8]	; (8009e34 <__sread+0x24>)
 8009e2c:	4013      	ands	r3, r2
 8009e2e:	81a3      	strh	r3, [r4, #12]
 8009e30:	e7f9      	b.n	8009e26 <__sread+0x16>
 8009e32:	46c0      	nop			; (mov r8, r8)
 8009e34:	ffffefff 	.word	0xffffefff

08009e38 <__seofread>:
 8009e38:	2000      	movs	r0, #0
 8009e3a:	4770      	bx	lr

08009e3c <__swrite>:
 8009e3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009e3e:	001f      	movs	r7, r3
 8009e40:	898b      	ldrh	r3, [r1, #12]
 8009e42:	0005      	movs	r5, r0
 8009e44:	000c      	movs	r4, r1
 8009e46:	0016      	movs	r6, r2
 8009e48:	05db      	lsls	r3, r3, #23
 8009e4a:	d505      	bpl.n	8009e58 <__swrite+0x1c>
 8009e4c:	230e      	movs	r3, #14
 8009e4e:	5ec9      	ldrsh	r1, [r1, r3]
 8009e50:	2200      	movs	r2, #0
 8009e52:	2302      	movs	r3, #2
 8009e54:	f000 f89c 	bl	8009f90 <_lseek_r>
 8009e58:	89a3      	ldrh	r3, [r4, #12]
 8009e5a:	4a05      	ldr	r2, [pc, #20]	; (8009e70 <__swrite+0x34>)
 8009e5c:	0028      	movs	r0, r5
 8009e5e:	4013      	ands	r3, r2
 8009e60:	81a3      	strh	r3, [r4, #12]
 8009e62:	0032      	movs	r2, r6
 8009e64:	230e      	movs	r3, #14
 8009e66:	5ee1      	ldrsh	r1, [r4, r3]
 8009e68:	003b      	movs	r3, r7
 8009e6a:	f000 f845 	bl	8009ef8 <_write_r>
 8009e6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009e70:	ffffefff 	.word	0xffffefff

08009e74 <__sseek>:
 8009e74:	b570      	push	{r4, r5, r6, lr}
 8009e76:	000c      	movs	r4, r1
 8009e78:	250e      	movs	r5, #14
 8009e7a:	5f49      	ldrsh	r1, [r1, r5]
 8009e7c:	f000 f888 	bl	8009f90 <_lseek_r>
 8009e80:	89a3      	ldrh	r3, [r4, #12]
 8009e82:	1c42      	adds	r2, r0, #1
 8009e84:	d103      	bne.n	8009e8e <__sseek+0x1a>
 8009e86:	4a05      	ldr	r2, [pc, #20]	; (8009e9c <__sseek+0x28>)
 8009e88:	4013      	ands	r3, r2
 8009e8a:	81a3      	strh	r3, [r4, #12]
 8009e8c:	bd70      	pop	{r4, r5, r6, pc}
 8009e8e:	2280      	movs	r2, #128	; 0x80
 8009e90:	0152      	lsls	r2, r2, #5
 8009e92:	4313      	orrs	r3, r2
 8009e94:	81a3      	strh	r3, [r4, #12]
 8009e96:	6560      	str	r0, [r4, #84]	; 0x54
 8009e98:	e7f8      	b.n	8009e8c <__sseek+0x18>
 8009e9a:	46c0      	nop			; (mov r8, r8)
 8009e9c:	ffffefff 	.word	0xffffefff

08009ea0 <__sclose>:
 8009ea0:	b510      	push	{r4, lr}
 8009ea2:	230e      	movs	r3, #14
 8009ea4:	5ec9      	ldrsh	r1, [r1, r3]
 8009ea6:	f000 f83b 	bl	8009f20 <_close_r>
 8009eaa:	bd10      	pop	{r4, pc}

08009eac <strcpy>:
 8009eac:	0003      	movs	r3, r0
 8009eae:	780a      	ldrb	r2, [r1, #0]
 8009eb0:	3101      	adds	r1, #1
 8009eb2:	701a      	strb	r2, [r3, #0]
 8009eb4:	3301      	adds	r3, #1
 8009eb6:	2a00      	cmp	r2, #0
 8009eb8:	d1f9      	bne.n	8009eae <strcpy+0x2>
 8009eba:	4770      	bx	lr

08009ebc <strncmp>:
 8009ebc:	2300      	movs	r3, #0
 8009ebe:	b530      	push	{r4, r5, lr}
 8009ec0:	429a      	cmp	r2, r3
 8009ec2:	d00a      	beq.n	8009eda <strncmp+0x1e>
 8009ec4:	3a01      	subs	r2, #1
 8009ec6:	5cc4      	ldrb	r4, [r0, r3]
 8009ec8:	5ccd      	ldrb	r5, [r1, r3]
 8009eca:	42ac      	cmp	r4, r5
 8009ecc:	d104      	bne.n	8009ed8 <strncmp+0x1c>
 8009ece:	4293      	cmp	r3, r2
 8009ed0:	d002      	beq.n	8009ed8 <strncmp+0x1c>
 8009ed2:	3301      	adds	r3, #1
 8009ed4:	2c00      	cmp	r4, #0
 8009ed6:	d1f6      	bne.n	8009ec6 <strncmp+0xa>
 8009ed8:	1b63      	subs	r3, r4, r5
 8009eda:	0018      	movs	r0, r3
 8009edc:	bd30      	pop	{r4, r5, pc}

08009ede <__ascii_wctomb>:
 8009ede:	1e0b      	subs	r3, r1, #0
 8009ee0:	d004      	beq.n	8009eec <__ascii_wctomb+0xe>
 8009ee2:	2aff      	cmp	r2, #255	; 0xff
 8009ee4:	d904      	bls.n	8009ef0 <__ascii_wctomb+0x12>
 8009ee6:	238a      	movs	r3, #138	; 0x8a
 8009ee8:	6003      	str	r3, [r0, #0]
 8009eea:	3b8b      	subs	r3, #139	; 0x8b
 8009eec:	0018      	movs	r0, r3
 8009eee:	4770      	bx	lr
 8009ef0:	700a      	strb	r2, [r1, #0]
 8009ef2:	2301      	movs	r3, #1
 8009ef4:	e7fa      	b.n	8009eec <__ascii_wctomb+0xe>
	...

08009ef8 <_write_r>:
 8009ef8:	b570      	push	{r4, r5, r6, lr}
 8009efa:	0005      	movs	r5, r0
 8009efc:	0008      	movs	r0, r1
 8009efe:	0011      	movs	r1, r2
 8009f00:	2200      	movs	r2, #0
 8009f02:	4c06      	ldr	r4, [pc, #24]	; (8009f1c <_write_r+0x24>)
 8009f04:	6022      	str	r2, [r4, #0]
 8009f06:	001a      	movs	r2, r3
 8009f08:	f000 fcfb 	bl	800a902 <_write>
 8009f0c:	1c43      	adds	r3, r0, #1
 8009f0e:	d103      	bne.n	8009f18 <_write_r+0x20>
 8009f10:	6823      	ldr	r3, [r4, #0]
 8009f12:	2b00      	cmp	r3, #0
 8009f14:	d000      	beq.n	8009f18 <_write_r+0x20>
 8009f16:	602b      	str	r3, [r5, #0]
 8009f18:	bd70      	pop	{r4, r5, r6, pc}
 8009f1a:	46c0      	nop			; (mov r8, r8)
 8009f1c:	20000500 	.word	0x20000500

08009f20 <_close_r>:
 8009f20:	2300      	movs	r3, #0
 8009f22:	b570      	push	{r4, r5, r6, lr}
 8009f24:	4c06      	ldr	r4, [pc, #24]	; (8009f40 <_close_r+0x20>)
 8009f26:	0005      	movs	r5, r0
 8009f28:	0008      	movs	r0, r1
 8009f2a:	6023      	str	r3, [r4, #0]
 8009f2c:	f000 fd14 	bl	800a958 <_close>
 8009f30:	1c43      	adds	r3, r0, #1
 8009f32:	d103      	bne.n	8009f3c <_close_r+0x1c>
 8009f34:	6823      	ldr	r3, [r4, #0]
 8009f36:	2b00      	cmp	r3, #0
 8009f38:	d000      	beq.n	8009f3c <_close_r+0x1c>
 8009f3a:	602b      	str	r3, [r5, #0]
 8009f3c:	bd70      	pop	{r4, r5, r6, pc}
 8009f3e:	46c0      	nop			; (mov r8, r8)
 8009f40:	20000500 	.word	0x20000500

08009f44 <__env_lock>:
 8009f44:	4770      	bx	lr

08009f46 <__env_unlock>:
 8009f46:	4770      	bx	lr

08009f48 <_fstat_r>:
 8009f48:	2300      	movs	r3, #0
 8009f4a:	b570      	push	{r4, r5, r6, lr}
 8009f4c:	4c06      	ldr	r4, [pc, #24]	; (8009f68 <_fstat_r+0x20>)
 8009f4e:	0005      	movs	r5, r0
 8009f50:	0008      	movs	r0, r1
 8009f52:	0011      	movs	r1, r2
 8009f54:	6023      	str	r3, [r4, #0]
 8009f56:	f000 fd47 	bl	800a9e8 <_fstat>
 8009f5a:	1c43      	adds	r3, r0, #1
 8009f5c:	d103      	bne.n	8009f66 <_fstat_r+0x1e>
 8009f5e:	6823      	ldr	r3, [r4, #0]
 8009f60:	2b00      	cmp	r3, #0
 8009f62:	d000      	beq.n	8009f66 <_fstat_r+0x1e>
 8009f64:	602b      	str	r3, [r5, #0]
 8009f66:	bd70      	pop	{r4, r5, r6, pc}
 8009f68:	20000500 	.word	0x20000500

08009f6c <_isatty_r>:
 8009f6c:	2300      	movs	r3, #0
 8009f6e:	b570      	push	{r4, r5, r6, lr}
 8009f70:	4c06      	ldr	r4, [pc, #24]	; (8009f8c <_isatty_r+0x20>)
 8009f72:	0005      	movs	r5, r0
 8009f74:	0008      	movs	r0, r1
 8009f76:	6023      	str	r3, [r4, #0]
 8009f78:	f000 feac 	bl	800acd4 <_isatty>
 8009f7c:	1c43      	adds	r3, r0, #1
 8009f7e:	d103      	bne.n	8009f88 <_isatty_r+0x1c>
 8009f80:	6823      	ldr	r3, [r4, #0]
 8009f82:	2b00      	cmp	r3, #0
 8009f84:	d000      	beq.n	8009f88 <_isatty_r+0x1c>
 8009f86:	602b      	str	r3, [r5, #0]
 8009f88:	bd70      	pop	{r4, r5, r6, pc}
 8009f8a:	46c0      	nop			; (mov r8, r8)
 8009f8c:	20000500 	.word	0x20000500

08009f90 <_lseek_r>:
 8009f90:	b570      	push	{r4, r5, r6, lr}
 8009f92:	0005      	movs	r5, r0
 8009f94:	0008      	movs	r0, r1
 8009f96:	0011      	movs	r1, r2
 8009f98:	2200      	movs	r2, #0
 8009f9a:	4c06      	ldr	r4, [pc, #24]	; (8009fb4 <_lseek_r+0x24>)
 8009f9c:	6022      	str	r2, [r4, #0]
 8009f9e:	001a      	movs	r2, r3
 8009fa0:	f000 fc9b 	bl	800a8da <_lseek>
 8009fa4:	1c43      	adds	r3, r0, #1
 8009fa6:	d103      	bne.n	8009fb0 <_lseek_r+0x20>
 8009fa8:	6823      	ldr	r3, [r4, #0]
 8009faa:	2b00      	cmp	r3, #0
 8009fac:	d000      	beq.n	8009fb0 <_lseek_r+0x20>
 8009fae:	602b      	str	r3, [r5, #0]
 8009fb0:	bd70      	pop	{r4, r5, r6, pc}
 8009fb2:	46c0      	nop			; (mov r8, r8)
 8009fb4:	20000500 	.word	0x20000500

08009fb8 <memmove>:
 8009fb8:	b510      	push	{r4, lr}
 8009fba:	4288      	cmp	r0, r1
 8009fbc:	d902      	bls.n	8009fc4 <memmove+0xc>
 8009fbe:	188b      	adds	r3, r1, r2
 8009fc0:	4298      	cmp	r0, r3
 8009fc2:	d303      	bcc.n	8009fcc <memmove+0x14>
 8009fc4:	2300      	movs	r3, #0
 8009fc6:	e007      	b.n	8009fd8 <memmove+0x20>
 8009fc8:	5c8b      	ldrb	r3, [r1, r2]
 8009fca:	5483      	strb	r3, [r0, r2]
 8009fcc:	3a01      	subs	r2, #1
 8009fce:	d2fb      	bcs.n	8009fc8 <memmove+0x10>
 8009fd0:	bd10      	pop	{r4, pc}
 8009fd2:	5ccc      	ldrb	r4, [r1, r3]
 8009fd4:	54c4      	strb	r4, [r0, r3]
 8009fd6:	3301      	adds	r3, #1
 8009fd8:	429a      	cmp	r2, r3
 8009fda:	d1fa      	bne.n	8009fd2 <memmove+0x1a>
 8009fdc:	e7f8      	b.n	8009fd0 <memmove+0x18>

08009fde <_realloc_r>:
 8009fde:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009fe0:	0007      	movs	r7, r0
 8009fe2:	000d      	movs	r5, r1
 8009fe4:	0016      	movs	r6, r2
 8009fe6:	2900      	cmp	r1, #0
 8009fe8:	d105      	bne.n	8009ff6 <_realloc_r+0x18>
 8009fea:	0011      	movs	r1, r2
 8009fec:	f7fc f814 	bl	8006018 <_malloc_r>
 8009ff0:	0004      	movs	r4, r0
 8009ff2:	0020      	movs	r0, r4
 8009ff4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009ff6:	2a00      	cmp	r2, #0
 8009ff8:	d103      	bne.n	800a002 <_realloc_r+0x24>
 8009ffa:	f7fb ffc3 	bl	8005f84 <_free_r>
 8009ffe:	0034      	movs	r4, r6
 800a000:	e7f7      	b.n	8009ff2 <_realloc_r+0x14>
 800a002:	f000 fbc5 	bl	800a790 <_malloc_usable_size_r>
 800a006:	002c      	movs	r4, r5
 800a008:	42b0      	cmp	r0, r6
 800a00a:	d2f2      	bcs.n	8009ff2 <_realloc_r+0x14>
 800a00c:	0031      	movs	r1, r6
 800a00e:	0038      	movs	r0, r7
 800a010:	f7fc f802 	bl	8006018 <_malloc_r>
 800a014:	1e04      	subs	r4, r0, #0
 800a016:	d0ec      	beq.n	8009ff2 <_realloc_r+0x14>
 800a018:	0029      	movs	r1, r5
 800a01a:	0032      	movs	r2, r6
 800a01c:	f7ff f901 	bl	8009222 <memcpy>
 800a020:	0029      	movs	r1, r5
 800a022:	0038      	movs	r0, r7
 800a024:	f7fb ffae 	bl	8005f84 <_free_r>
 800a028:	e7e3      	b.n	8009ff2 <_realloc_r+0x14>

0800a02a <_sungetc_r>:
 800a02a:	b570      	push	{r4, r5, r6, lr}
 800a02c:	0014      	movs	r4, r2
 800a02e:	1c4b      	adds	r3, r1, #1
 800a030:	d103      	bne.n	800a03a <_sungetc_r+0x10>
 800a032:	2501      	movs	r5, #1
 800a034:	426d      	negs	r5, r5
 800a036:	0028      	movs	r0, r5
 800a038:	bd70      	pop	{r4, r5, r6, pc}
 800a03a:	8993      	ldrh	r3, [r2, #12]
 800a03c:	2220      	movs	r2, #32
 800a03e:	4393      	bics	r3, r2
 800a040:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a042:	81a3      	strh	r3, [r4, #12]
 800a044:	b2ce      	uxtb	r6, r1
 800a046:	b2cd      	uxtb	r5, r1
 800a048:	6863      	ldr	r3, [r4, #4]
 800a04a:	2a00      	cmp	r2, #0
 800a04c:	d010      	beq.n	800a070 <_sungetc_r+0x46>
 800a04e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a050:	429a      	cmp	r2, r3
 800a052:	dd07      	ble.n	800a064 <_sungetc_r+0x3a>
 800a054:	6823      	ldr	r3, [r4, #0]
 800a056:	3b01      	subs	r3, #1
 800a058:	6023      	str	r3, [r4, #0]
 800a05a:	701e      	strb	r6, [r3, #0]
 800a05c:	6863      	ldr	r3, [r4, #4]
 800a05e:	3301      	adds	r3, #1
 800a060:	6063      	str	r3, [r4, #4]
 800a062:	e7e8      	b.n	800a036 <_sungetc_r+0xc>
 800a064:	0021      	movs	r1, r4
 800a066:	f000 fb55 	bl	800a714 <__submore>
 800a06a:	2800      	cmp	r0, #0
 800a06c:	d0f2      	beq.n	800a054 <_sungetc_r+0x2a>
 800a06e:	e7e0      	b.n	800a032 <_sungetc_r+0x8>
 800a070:	6921      	ldr	r1, [r4, #16]
 800a072:	6822      	ldr	r2, [r4, #0]
 800a074:	2900      	cmp	r1, #0
 800a076:	d007      	beq.n	800a088 <_sungetc_r+0x5e>
 800a078:	4291      	cmp	r1, r2
 800a07a:	d205      	bcs.n	800a088 <_sungetc_r+0x5e>
 800a07c:	1e51      	subs	r1, r2, #1
 800a07e:	7808      	ldrb	r0, [r1, #0]
 800a080:	42a8      	cmp	r0, r5
 800a082:	d101      	bne.n	800a088 <_sungetc_r+0x5e>
 800a084:	6021      	str	r1, [r4, #0]
 800a086:	e7ea      	b.n	800a05e <_sungetc_r+0x34>
 800a088:	6423      	str	r3, [r4, #64]	; 0x40
 800a08a:	0023      	movs	r3, r4
 800a08c:	3344      	adds	r3, #68	; 0x44
 800a08e:	6363      	str	r3, [r4, #52]	; 0x34
 800a090:	2303      	movs	r3, #3
 800a092:	63a3      	str	r3, [r4, #56]	; 0x38
 800a094:	0023      	movs	r3, r4
 800a096:	3346      	adds	r3, #70	; 0x46
 800a098:	63e2      	str	r2, [r4, #60]	; 0x3c
 800a09a:	701e      	strb	r6, [r3, #0]
 800a09c:	6023      	str	r3, [r4, #0]
 800a09e:	2301      	movs	r3, #1
 800a0a0:	e7de      	b.n	800a060 <_sungetc_r+0x36>

0800a0a2 <__ssrefill_r>:
 800a0a2:	b510      	push	{r4, lr}
 800a0a4:	000c      	movs	r4, r1
 800a0a6:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800a0a8:	2900      	cmp	r1, #0
 800a0aa:	d00e      	beq.n	800a0ca <__ssrefill_r+0x28>
 800a0ac:	0023      	movs	r3, r4
 800a0ae:	3344      	adds	r3, #68	; 0x44
 800a0b0:	4299      	cmp	r1, r3
 800a0b2:	d001      	beq.n	800a0b8 <__ssrefill_r+0x16>
 800a0b4:	f7fb ff66 	bl	8005f84 <_free_r>
 800a0b8:	2000      	movs	r0, #0
 800a0ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a0bc:	6360      	str	r0, [r4, #52]	; 0x34
 800a0be:	6063      	str	r3, [r4, #4]
 800a0c0:	4283      	cmp	r3, r0
 800a0c2:	d002      	beq.n	800a0ca <__ssrefill_r+0x28>
 800a0c4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a0c6:	6023      	str	r3, [r4, #0]
 800a0c8:	bd10      	pop	{r4, pc}
 800a0ca:	6923      	ldr	r3, [r4, #16]
 800a0cc:	2001      	movs	r0, #1
 800a0ce:	6023      	str	r3, [r4, #0]
 800a0d0:	2300      	movs	r3, #0
 800a0d2:	89a2      	ldrh	r2, [r4, #12]
 800a0d4:	6063      	str	r3, [r4, #4]
 800a0d6:	3320      	adds	r3, #32
 800a0d8:	4313      	orrs	r3, r2
 800a0da:	81a3      	strh	r3, [r4, #12]
 800a0dc:	4240      	negs	r0, r0
 800a0de:	e7f3      	b.n	800a0c8 <__ssrefill_r+0x26>

0800a0e0 <__ssvfiscanf_r>:
 800a0e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a0e2:	0017      	movs	r7, r2
 800a0e4:	2200      	movs	r2, #0
 800a0e6:	4cb0      	ldr	r4, [pc, #704]	; (800a3a8 <__ssvfiscanf_r+0x2c8>)
 800a0e8:	25c0      	movs	r5, #192	; 0xc0
 800a0ea:	44a5      	add	sp, r4
 800a0ec:	9248      	str	r2, [sp, #288]	; 0x120
 800a0ee:	9249      	str	r2, [sp, #292]	; 0x124
 800a0f0:	aa05      	add	r2, sp, #20
 800a0f2:	924a      	str	r2, [sp, #296]	; 0x128
 800a0f4:	22be      	movs	r2, #190	; 0xbe
 800a0f6:	000c      	movs	r4, r1
 800a0f8:	49ac      	ldr	r1, [pc, #688]	; (800a3ac <__ssvfiscanf_r+0x2cc>)
 800a0fa:	9000      	str	r0, [sp, #0]
 800a0fc:	0052      	lsls	r2, r2, #1
 800a0fe:	a845      	add	r0, sp, #276	; 0x114
 800a100:	5081      	str	r1, [r0, r2]
 800a102:	49ab      	ldr	r1, [pc, #684]	; (800a3b0 <__ssvfiscanf_r+0x2d0>)
 800a104:	006d      	lsls	r5, r5, #1
 800a106:	5141      	str	r1, [r0, r5]
 800a108:	9304      	str	r3, [sp, #16]
 800a10a:	783b      	ldrb	r3, [r7, #0]
 800a10c:	2b00      	cmp	r3, #0
 800a10e:	d100      	bne.n	800a112 <__ssvfiscanf_r+0x32>
 800a110:	e148      	b.n	800a3a4 <__ssvfiscanf_r+0x2c4>
 800a112:	f7fe ffe3 	bl	80090dc <__locale_ctype_ptr>
 800a116:	2208      	movs	r2, #8
 800a118:	783b      	ldrb	r3, [r7, #0]
 800a11a:	1c7e      	adds	r6, r7, #1
 800a11c:	18c0      	adds	r0, r0, r3
 800a11e:	9301      	str	r3, [sp, #4]
 800a120:	7843      	ldrb	r3, [r0, #1]
 800a122:	4013      	ands	r3, r2
 800a124:	d020      	beq.n	800a168 <__ssvfiscanf_r+0x88>
 800a126:	6863      	ldr	r3, [r4, #4]
 800a128:	2b00      	cmp	r3, #0
 800a12a:	dd14      	ble.n	800a156 <__ssvfiscanf_r+0x76>
 800a12c:	f7fe ffd6 	bl	80090dc <__locale_ctype_ptr>
 800a130:	2108      	movs	r1, #8
 800a132:	6823      	ldr	r3, [r4, #0]
 800a134:	781a      	ldrb	r2, [r3, #0]
 800a136:	1880      	adds	r0, r0, r2
 800a138:	7842      	ldrb	r2, [r0, #1]
 800a13a:	420a      	tst	r2, r1
 800a13c:	d101      	bne.n	800a142 <__ssvfiscanf_r+0x62>
 800a13e:	0037      	movs	r7, r6
 800a140:	e7e3      	b.n	800a10a <__ssvfiscanf_r+0x2a>
 800a142:	9a49      	ldr	r2, [sp, #292]	; 0x124
 800a144:	3301      	adds	r3, #1
 800a146:	9201      	str	r2, [sp, #4]
 800a148:	3201      	adds	r2, #1
 800a14a:	9249      	str	r2, [sp, #292]	; 0x124
 800a14c:	6862      	ldr	r2, [r4, #4]
 800a14e:	6023      	str	r3, [r4, #0]
 800a150:	3a01      	subs	r2, #1
 800a152:	6062      	str	r2, [r4, #4]
 800a154:	e7e7      	b.n	800a126 <__ssvfiscanf_r+0x46>
 800a156:	ab45      	add	r3, sp, #276	; 0x114
 800a158:	595b      	ldr	r3, [r3, r5]
 800a15a:	0021      	movs	r1, r4
 800a15c:	9800      	ldr	r0, [sp, #0]
 800a15e:	9301      	str	r3, [sp, #4]
 800a160:	4798      	blx	r3
 800a162:	2800      	cmp	r0, #0
 800a164:	d0e2      	beq.n	800a12c <__ssvfiscanf_r+0x4c>
 800a166:	e7ea      	b.n	800a13e <__ssvfiscanf_r+0x5e>
 800a168:	9a01      	ldr	r2, [sp, #4]
 800a16a:	2a25      	cmp	r2, #37	; 0x25
 800a16c:	d16d      	bne.n	800a24a <__ssvfiscanf_r+0x16a>
 800a16e:	9347      	str	r3, [sp, #284]	; 0x11c
 800a170:	9345      	str	r3, [sp, #276]	; 0x114
 800a172:	787b      	ldrb	r3, [r7, #1]
 800a174:	2b2a      	cmp	r3, #42	; 0x2a
 800a176:	d102      	bne.n	800a17e <__ssvfiscanf_r+0x9e>
 800a178:	3b1a      	subs	r3, #26
 800a17a:	9345      	str	r3, [sp, #276]	; 0x114
 800a17c:	1cbe      	adds	r6, r7, #2
 800a17e:	0037      	movs	r7, r6
 800a180:	220a      	movs	r2, #10
 800a182:	7839      	ldrb	r1, [r7, #0]
 800a184:	1c7b      	adds	r3, r7, #1
 800a186:	9302      	str	r3, [sp, #8]
 800a188:	000b      	movs	r3, r1
 800a18a:	3b30      	subs	r3, #48	; 0x30
 800a18c:	2b09      	cmp	r3, #9
 800a18e:	d924      	bls.n	800a1da <__ssvfiscanf_r+0xfa>
 800a190:	4e88      	ldr	r6, [pc, #544]	; (800a3b4 <__ssvfiscanf_r+0x2d4>)
 800a192:	2203      	movs	r2, #3
 800a194:	0030      	movs	r0, r6
 800a196:	f7ff f839 	bl	800920c <memchr>
 800a19a:	2800      	cmp	r0, #0
 800a19c:	d007      	beq.n	800a1ae <__ssvfiscanf_r+0xce>
 800a19e:	2301      	movs	r3, #1
 800a1a0:	1b80      	subs	r0, r0, r6
 800a1a2:	4083      	lsls	r3, r0
 800a1a4:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800a1a6:	9f02      	ldr	r7, [sp, #8]
 800a1a8:	4313      	orrs	r3, r2
 800a1aa:	9203      	str	r2, [sp, #12]
 800a1ac:	9345      	str	r3, [sp, #276]	; 0x114
 800a1ae:	783b      	ldrb	r3, [r7, #0]
 800a1b0:	1c7e      	adds	r6, r7, #1
 800a1b2:	2b67      	cmp	r3, #103	; 0x67
 800a1b4:	d835      	bhi.n	800a222 <__ssvfiscanf_r+0x142>
 800a1b6:	2b65      	cmp	r3, #101	; 0x65
 800a1b8:	d300      	bcc.n	800a1bc <__ssvfiscanf_r+0xdc>
 800a1ba:	e0b8      	b.n	800a32e <__ssvfiscanf_r+0x24e>
 800a1bc:	2b47      	cmp	r3, #71	; 0x47
 800a1be:	d814      	bhi.n	800a1ea <__ssvfiscanf_r+0x10a>
 800a1c0:	2b45      	cmp	r3, #69	; 0x45
 800a1c2:	d300      	bcc.n	800a1c6 <__ssvfiscanf_r+0xe6>
 800a1c4:	e0b3      	b.n	800a32e <__ssvfiscanf_r+0x24e>
 800a1c6:	2b00      	cmp	r3, #0
 800a1c8:	d100      	bne.n	800a1cc <__ssvfiscanf_r+0xec>
 800a1ca:	e0e8      	b.n	800a39e <__ssvfiscanf_r+0x2be>
 800a1cc:	2b25      	cmp	r3, #37	; 0x25
 800a1ce:	d03c      	beq.n	800a24a <__ssvfiscanf_r+0x16a>
 800a1d0:	2303      	movs	r3, #3
 800a1d2:	934b      	str	r3, [sp, #300]	; 0x12c
 800a1d4:	3307      	adds	r3, #7
 800a1d6:	9346      	str	r3, [sp, #280]	; 0x118
 800a1d8:	e066      	b.n	800a2a8 <__ssvfiscanf_r+0x1c8>
 800a1da:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 800a1dc:	9f02      	ldr	r7, [sp, #8]
 800a1de:	9303      	str	r3, [sp, #12]
 800a1e0:	4353      	muls	r3, r2
 800a1e2:	3b30      	subs	r3, #48	; 0x30
 800a1e4:	1859      	adds	r1, r3, r1
 800a1e6:	9147      	str	r1, [sp, #284]	; 0x11c
 800a1e8:	e7cb      	b.n	800a182 <__ssvfiscanf_r+0xa2>
 800a1ea:	2b5b      	cmp	r3, #91	; 0x5b
 800a1ec:	d100      	bne.n	800a1f0 <__ssvfiscanf_r+0x110>
 800a1ee:	e07a      	b.n	800a2e6 <__ssvfiscanf_r+0x206>
 800a1f0:	d810      	bhi.n	800a214 <__ssvfiscanf_r+0x134>
 800a1f2:	2b58      	cmp	r3, #88	; 0x58
 800a1f4:	d1ec      	bne.n	800a1d0 <__ssvfiscanf_r+0xf0>
 800a1f6:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800a1f8:	9201      	str	r2, [sp, #4]
 800a1fa:	2280      	movs	r2, #128	; 0x80
 800a1fc:	9901      	ldr	r1, [sp, #4]
 800a1fe:	0092      	lsls	r2, r2, #2
 800a200:	430a      	orrs	r2, r1
 800a202:	9245      	str	r2, [sp, #276]	; 0x114
 800a204:	2210      	movs	r2, #16
 800a206:	9246      	str	r2, [sp, #280]	; 0x118
 800a208:	226e      	movs	r2, #110	; 0x6e
 800a20a:	429a      	cmp	r2, r3
 800a20c:	419b      	sbcs	r3, r3
 800a20e:	425b      	negs	r3, r3
 800a210:	3303      	adds	r3, #3
 800a212:	e048      	b.n	800a2a6 <__ssvfiscanf_r+0x1c6>
 800a214:	2b63      	cmp	r3, #99	; 0x63
 800a216:	d100      	bne.n	800a21a <__ssvfiscanf_r+0x13a>
 800a218:	e072      	b.n	800a300 <__ssvfiscanf_r+0x220>
 800a21a:	2b64      	cmp	r3, #100	; 0x64
 800a21c:	d1d8      	bne.n	800a1d0 <__ssvfiscanf_r+0xf0>
 800a21e:	220a      	movs	r2, #10
 800a220:	e7f1      	b.n	800a206 <__ssvfiscanf_r+0x126>
 800a222:	2b70      	cmp	r3, #112	; 0x70
 800a224:	d035      	beq.n	800a292 <__ssvfiscanf_r+0x1b2>
 800a226:	d808      	bhi.n	800a23a <__ssvfiscanf_r+0x15a>
 800a228:	2b6e      	cmp	r3, #110	; 0x6e
 800a22a:	d100      	bne.n	800a22e <__ssvfiscanf_r+0x14e>
 800a22c:	e070      	b.n	800a310 <__ssvfiscanf_r+0x230>
 800a22e:	d837      	bhi.n	800a2a0 <__ssvfiscanf_r+0x1c0>
 800a230:	2b69      	cmp	r3, #105	; 0x69
 800a232:	d1cd      	bne.n	800a1d0 <__ssvfiscanf_r+0xf0>
 800a234:	2300      	movs	r3, #0
 800a236:	9346      	str	r3, [sp, #280]	; 0x118
 800a238:	e7ea      	b.n	800a210 <__ssvfiscanf_r+0x130>
 800a23a:	2b75      	cmp	r3, #117	; 0x75
 800a23c:	d0ef      	beq.n	800a21e <__ssvfiscanf_r+0x13e>
 800a23e:	2b78      	cmp	r3, #120	; 0x78
 800a240:	d0d9      	beq.n	800a1f6 <__ssvfiscanf_r+0x116>
 800a242:	2b73      	cmp	r3, #115	; 0x73
 800a244:	d1c4      	bne.n	800a1d0 <__ssvfiscanf_r+0xf0>
 800a246:	2302      	movs	r3, #2
 800a248:	e02d      	b.n	800a2a6 <__ssvfiscanf_r+0x1c6>
 800a24a:	6863      	ldr	r3, [r4, #4]
 800a24c:	2b00      	cmp	r3, #0
 800a24e:	dd0f      	ble.n	800a270 <__ssvfiscanf_r+0x190>
 800a250:	6823      	ldr	r3, [r4, #0]
 800a252:	9901      	ldr	r1, [sp, #4]
 800a254:	781a      	ldrb	r2, [r3, #0]
 800a256:	428a      	cmp	r2, r1
 800a258:	d000      	beq.n	800a25c <__ssvfiscanf_r+0x17c>
 800a25a:	e0a3      	b.n	800a3a4 <__ssvfiscanf_r+0x2c4>
 800a25c:	3301      	adds	r3, #1
 800a25e:	6862      	ldr	r2, [r4, #4]
 800a260:	6023      	str	r3, [r4, #0]
 800a262:	9b49      	ldr	r3, [sp, #292]	; 0x124
 800a264:	3a01      	subs	r2, #1
 800a266:	9301      	str	r3, [sp, #4]
 800a268:	3301      	adds	r3, #1
 800a26a:	6062      	str	r2, [r4, #4]
 800a26c:	9349      	str	r3, [sp, #292]	; 0x124
 800a26e:	e766      	b.n	800a13e <__ssvfiscanf_r+0x5e>
 800a270:	ab45      	add	r3, sp, #276	; 0x114
 800a272:	595b      	ldr	r3, [r3, r5]
 800a274:	0021      	movs	r1, r4
 800a276:	9800      	ldr	r0, [sp, #0]
 800a278:	9302      	str	r3, [sp, #8]
 800a27a:	4798      	blx	r3
 800a27c:	2800      	cmp	r0, #0
 800a27e:	d0e7      	beq.n	800a250 <__ssvfiscanf_r+0x170>
 800a280:	9848      	ldr	r0, [sp, #288]	; 0x120
 800a282:	2800      	cmp	r0, #0
 800a284:	d000      	beq.n	800a288 <__ssvfiscanf_r+0x1a8>
 800a286:	e086      	b.n	800a396 <__ssvfiscanf_r+0x2b6>
 800a288:	3801      	subs	r0, #1
 800a28a:	23a7      	movs	r3, #167	; 0xa7
 800a28c:	009b      	lsls	r3, r3, #2
 800a28e:	449d      	add	sp, r3
 800a290:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a292:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800a294:	9201      	str	r2, [sp, #4]
 800a296:	2220      	movs	r2, #32
 800a298:	9901      	ldr	r1, [sp, #4]
 800a29a:	430a      	orrs	r2, r1
 800a29c:	9245      	str	r2, [sp, #276]	; 0x114
 800a29e:	e7aa      	b.n	800a1f6 <__ssvfiscanf_r+0x116>
 800a2a0:	2308      	movs	r3, #8
 800a2a2:	9346      	str	r3, [sp, #280]	; 0x118
 800a2a4:	3b04      	subs	r3, #4
 800a2a6:	934b      	str	r3, [sp, #300]	; 0x12c
 800a2a8:	6863      	ldr	r3, [r4, #4]
 800a2aa:	2b00      	cmp	r3, #0
 800a2ac:	dd41      	ble.n	800a332 <__ssvfiscanf_r+0x252>
 800a2ae:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800a2b0:	9301      	str	r3, [sp, #4]
 800a2b2:	065b      	lsls	r3, r3, #25
 800a2b4:	d408      	bmi.n	800a2c8 <__ssvfiscanf_r+0x1e8>
 800a2b6:	f7fe ff11 	bl	80090dc <__locale_ctype_ptr>
 800a2ba:	2108      	movs	r1, #8
 800a2bc:	6823      	ldr	r3, [r4, #0]
 800a2be:	781a      	ldrb	r2, [r3, #0]
 800a2c0:	1880      	adds	r0, r0, r2
 800a2c2:	7842      	ldrb	r2, [r0, #1]
 800a2c4:	420a      	tst	r2, r1
 800a2c6:	d13d      	bne.n	800a344 <__ssvfiscanf_r+0x264>
 800a2c8:	9b4b      	ldr	r3, [sp, #300]	; 0x12c
 800a2ca:	2b02      	cmp	r3, #2
 800a2cc:	dc4f      	bgt.n	800a36e <__ssvfiscanf_r+0x28e>
 800a2ce:	ab04      	add	r3, sp, #16
 800a2d0:	0022      	movs	r2, r4
 800a2d2:	a945      	add	r1, sp, #276	; 0x114
 800a2d4:	9800      	ldr	r0, [sp, #0]
 800a2d6:	f000 f871 	bl	800a3bc <_scanf_chars>
 800a2da:	2801      	cmp	r0, #1
 800a2dc:	d062      	beq.n	800a3a4 <__ssvfiscanf_r+0x2c4>
 800a2de:	2802      	cmp	r0, #2
 800a2e0:	d000      	beq.n	800a2e4 <__ssvfiscanf_r+0x204>
 800a2e2:	e72c      	b.n	800a13e <__ssvfiscanf_r+0x5e>
 800a2e4:	e7cc      	b.n	800a280 <__ssvfiscanf_r+0x1a0>
 800a2e6:	0031      	movs	r1, r6
 800a2e8:	a805      	add	r0, sp, #20
 800a2ea:	f000 f9e3 	bl	800a6b4 <__sccl>
 800a2ee:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800a2f0:	0006      	movs	r6, r0
 800a2f2:	9301      	str	r3, [sp, #4]
 800a2f4:	2340      	movs	r3, #64	; 0x40
 800a2f6:	9a01      	ldr	r2, [sp, #4]
 800a2f8:	4313      	orrs	r3, r2
 800a2fa:	9345      	str	r3, [sp, #276]	; 0x114
 800a2fc:	2301      	movs	r3, #1
 800a2fe:	e7d2      	b.n	800a2a6 <__ssvfiscanf_r+0x1c6>
 800a300:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800a302:	9301      	str	r3, [sp, #4]
 800a304:	2340      	movs	r3, #64	; 0x40
 800a306:	9a01      	ldr	r2, [sp, #4]
 800a308:	4313      	orrs	r3, r2
 800a30a:	9345      	str	r3, [sp, #276]	; 0x114
 800a30c:	2300      	movs	r3, #0
 800a30e:	e7ca      	b.n	800a2a6 <__ssvfiscanf_r+0x1c6>
 800a310:	9845      	ldr	r0, [sp, #276]	; 0x114
 800a312:	06c3      	lsls	r3, r0, #27
 800a314:	d500      	bpl.n	800a318 <__ssvfiscanf_r+0x238>
 800a316:	e712      	b.n	800a13e <__ssvfiscanf_r+0x5e>
 800a318:	9b04      	ldr	r3, [sp, #16]
 800a31a:	9a49      	ldr	r2, [sp, #292]	; 0x124
 800a31c:	1d19      	adds	r1, r3, #4
 800a31e:	9104      	str	r1, [sp, #16]
 800a320:	681b      	ldr	r3, [r3, #0]
 800a322:	07c7      	lsls	r7, r0, #31
 800a324:	d501      	bpl.n	800a32a <__ssvfiscanf_r+0x24a>
 800a326:	801a      	strh	r2, [r3, #0]
 800a328:	e709      	b.n	800a13e <__ssvfiscanf_r+0x5e>
 800a32a:	601a      	str	r2, [r3, #0]
 800a32c:	e707      	b.n	800a13e <__ssvfiscanf_r+0x5e>
 800a32e:	2305      	movs	r3, #5
 800a330:	e7b9      	b.n	800a2a6 <__ssvfiscanf_r+0x1c6>
 800a332:	ab45      	add	r3, sp, #276	; 0x114
 800a334:	595b      	ldr	r3, [r3, r5]
 800a336:	0021      	movs	r1, r4
 800a338:	9800      	ldr	r0, [sp, #0]
 800a33a:	9301      	str	r3, [sp, #4]
 800a33c:	4798      	blx	r3
 800a33e:	2800      	cmp	r0, #0
 800a340:	d0b5      	beq.n	800a2ae <__ssvfiscanf_r+0x1ce>
 800a342:	e79d      	b.n	800a280 <__ssvfiscanf_r+0x1a0>
 800a344:	9a49      	ldr	r2, [sp, #292]	; 0x124
 800a346:	9201      	str	r2, [sp, #4]
 800a348:	3201      	adds	r2, #1
 800a34a:	9249      	str	r2, [sp, #292]	; 0x124
 800a34c:	6862      	ldr	r2, [r4, #4]
 800a34e:	3a01      	subs	r2, #1
 800a350:	6062      	str	r2, [r4, #4]
 800a352:	2a00      	cmp	r2, #0
 800a354:	dd02      	ble.n	800a35c <__ssvfiscanf_r+0x27c>
 800a356:	3301      	adds	r3, #1
 800a358:	6023      	str	r3, [r4, #0]
 800a35a:	e7ac      	b.n	800a2b6 <__ssvfiscanf_r+0x1d6>
 800a35c:	ab45      	add	r3, sp, #276	; 0x114
 800a35e:	595b      	ldr	r3, [r3, r5]
 800a360:	0021      	movs	r1, r4
 800a362:	9800      	ldr	r0, [sp, #0]
 800a364:	9301      	str	r3, [sp, #4]
 800a366:	4798      	blx	r3
 800a368:	2800      	cmp	r0, #0
 800a36a:	d0a4      	beq.n	800a2b6 <__ssvfiscanf_r+0x1d6>
 800a36c:	e788      	b.n	800a280 <__ssvfiscanf_r+0x1a0>
 800a36e:	2b04      	cmp	r3, #4
 800a370:	dc06      	bgt.n	800a380 <__ssvfiscanf_r+0x2a0>
 800a372:	ab04      	add	r3, sp, #16
 800a374:	0022      	movs	r2, r4
 800a376:	a945      	add	r1, sp, #276	; 0x114
 800a378:	9800      	ldr	r0, [sp, #0]
 800a37a:	f000 f885 	bl	800a488 <_scanf_i>
 800a37e:	e7ac      	b.n	800a2da <__ssvfiscanf_r+0x1fa>
 800a380:	4b0d      	ldr	r3, [pc, #52]	; (800a3b8 <__ssvfiscanf_r+0x2d8>)
 800a382:	2b00      	cmp	r3, #0
 800a384:	d100      	bne.n	800a388 <__ssvfiscanf_r+0x2a8>
 800a386:	e6da      	b.n	800a13e <__ssvfiscanf_r+0x5e>
 800a388:	ab04      	add	r3, sp, #16
 800a38a:	0022      	movs	r2, r4
 800a38c:	a945      	add	r1, sp, #276	; 0x114
 800a38e:	9800      	ldr	r0, [sp, #0]
 800a390:	e000      	b.n	800a394 <__ssvfiscanf_r+0x2b4>
 800a392:	bf00      	nop
 800a394:	e7a1      	b.n	800a2da <__ssvfiscanf_r+0x1fa>
 800a396:	89a3      	ldrh	r3, [r4, #12]
 800a398:	065b      	lsls	r3, r3, #25
 800a39a:	d400      	bmi.n	800a39e <__ssvfiscanf_r+0x2be>
 800a39c:	e775      	b.n	800a28a <__ssvfiscanf_r+0x1aa>
 800a39e:	2001      	movs	r0, #1
 800a3a0:	4240      	negs	r0, r0
 800a3a2:	e772      	b.n	800a28a <__ssvfiscanf_r+0x1aa>
 800a3a4:	9848      	ldr	r0, [sp, #288]	; 0x120
 800a3a6:	e770      	b.n	800a28a <__ssvfiscanf_r+0x1aa>
 800a3a8:	fffffd64 	.word	0xfffffd64
 800a3ac:	0800a02b 	.word	0x0800a02b
 800a3b0:	0800a0a3 	.word	0x0800a0a3
 800a3b4:	0800c1e2 	.word	0x0800c1e2
 800a3b8:	00000000 	.word	0x00000000

0800a3bc <_scanf_chars>:
 800a3bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a3be:	0015      	movs	r5, r2
 800a3c0:	688a      	ldr	r2, [r1, #8]
 800a3c2:	9001      	str	r0, [sp, #4]
 800a3c4:	000c      	movs	r4, r1
 800a3c6:	2a00      	cmp	r2, #0
 800a3c8:	d104      	bne.n	800a3d4 <_scanf_chars+0x18>
 800a3ca:	698a      	ldr	r2, [r1, #24]
 800a3cc:	2a00      	cmp	r2, #0
 800a3ce:	d117      	bne.n	800a400 <_scanf_chars+0x44>
 800a3d0:	3201      	adds	r2, #1
 800a3d2:	60a2      	str	r2, [r4, #8]
 800a3d4:	6822      	ldr	r2, [r4, #0]
 800a3d6:	06d2      	lsls	r2, r2, #27
 800a3d8:	d403      	bmi.n	800a3e2 <_scanf_chars+0x26>
 800a3da:	681a      	ldr	r2, [r3, #0]
 800a3dc:	1d11      	adds	r1, r2, #4
 800a3de:	6019      	str	r1, [r3, #0]
 800a3e0:	6817      	ldr	r7, [r2, #0]
 800a3e2:	2600      	movs	r6, #0
 800a3e4:	69a3      	ldr	r3, [r4, #24]
 800a3e6:	2b00      	cmp	r3, #0
 800a3e8:	d01f      	beq.n	800a42a <_scanf_chars+0x6e>
 800a3ea:	2b01      	cmp	r3, #1
 800a3ec:	d10b      	bne.n	800a406 <_scanf_chars+0x4a>
 800a3ee:	682b      	ldr	r3, [r5, #0]
 800a3f0:	6962      	ldr	r2, [r4, #20]
 800a3f2:	781b      	ldrb	r3, [r3, #0]
 800a3f4:	5cd3      	ldrb	r3, [r2, r3]
 800a3f6:	2b00      	cmp	r3, #0
 800a3f8:	d117      	bne.n	800a42a <_scanf_chars+0x6e>
 800a3fa:	2e00      	cmp	r6, #0
 800a3fc:	d133      	bne.n	800a466 <_scanf_chars+0xaa>
 800a3fe:	e009      	b.n	800a414 <_scanf_chars+0x58>
 800a400:	2201      	movs	r2, #1
 800a402:	4252      	negs	r2, r2
 800a404:	e7e5      	b.n	800a3d2 <_scanf_chars+0x16>
 800a406:	2b02      	cmp	r3, #2
 800a408:	d006      	beq.n	800a418 <_scanf_chars+0x5c>
 800a40a:	2e00      	cmp	r6, #0
 800a40c:	d12b      	bne.n	800a466 <_scanf_chars+0xaa>
 800a40e:	69a3      	ldr	r3, [r4, #24]
 800a410:	2b01      	cmp	r3, #1
 800a412:	d128      	bne.n	800a466 <_scanf_chars+0xaa>
 800a414:	2001      	movs	r0, #1
 800a416:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800a418:	f7fe fe60 	bl	80090dc <__locale_ctype_ptr>
 800a41c:	2208      	movs	r2, #8
 800a41e:	682b      	ldr	r3, [r5, #0]
 800a420:	781b      	ldrb	r3, [r3, #0]
 800a422:	18c0      	adds	r0, r0, r3
 800a424:	7843      	ldrb	r3, [r0, #1]
 800a426:	4213      	tst	r3, r2
 800a428:	d1ef      	bne.n	800a40a <_scanf_chars+0x4e>
 800a42a:	2210      	movs	r2, #16
 800a42c:	6823      	ldr	r3, [r4, #0]
 800a42e:	3601      	adds	r6, #1
 800a430:	4213      	tst	r3, r2
 800a432:	d103      	bne.n	800a43c <_scanf_chars+0x80>
 800a434:	682b      	ldr	r3, [r5, #0]
 800a436:	781b      	ldrb	r3, [r3, #0]
 800a438:	703b      	strb	r3, [r7, #0]
 800a43a:	3701      	adds	r7, #1
 800a43c:	682a      	ldr	r2, [r5, #0]
 800a43e:	686b      	ldr	r3, [r5, #4]
 800a440:	3201      	adds	r2, #1
 800a442:	602a      	str	r2, [r5, #0]
 800a444:	68a2      	ldr	r2, [r4, #8]
 800a446:	3b01      	subs	r3, #1
 800a448:	3a01      	subs	r2, #1
 800a44a:	606b      	str	r3, [r5, #4]
 800a44c:	60a2      	str	r2, [r4, #8]
 800a44e:	2a00      	cmp	r2, #0
 800a450:	d009      	beq.n	800a466 <_scanf_chars+0xaa>
 800a452:	2b00      	cmp	r3, #0
 800a454:	dcc6      	bgt.n	800a3e4 <_scanf_chars+0x28>
 800a456:	23c0      	movs	r3, #192	; 0xc0
 800a458:	005b      	lsls	r3, r3, #1
 800a45a:	58e3      	ldr	r3, [r4, r3]
 800a45c:	0029      	movs	r1, r5
 800a45e:	9801      	ldr	r0, [sp, #4]
 800a460:	4798      	blx	r3
 800a462:	2800      	cmp	r0, #0
 800a464:	d0be      	beq.n	800a3e4 <_scanf_chars+0x28>
 800a466:	2310      	movs	r3, #16
 800a468:	6822      	ldr	r2, [r4, #0]
 800a46a:	4013      	ands	r3, r2
 800a46c:	d106      	bne.n	800a47c <_scanf_chars+0xc0>
 800a46e:	68e2      	ldr	r2, [r4, #12]
 800a470:	3201      	adds	r2, #1
 800a472:	60e2      	str	r2, [r4, #12]
 800a474:	69a2      	ldr	r2, [r4, #24]
 800a476:	2a00      	cmp	r2, #0
 800a478:	d000      	beq.n	800a47c <_scanf_chars+0xc0>
 800a47a:	703b      	strb	r3, [r7, #0]
 800a47c:	6923      	ldr	r3, [r4, #16]
 800a47e:	2000      	movs	r0, #0
 800a480:	199e      	adds	r6, r3, r6
 800a482:	6126      	str	r6, [r4, #16]
 800a484:	e7c7      	b.n	800a416 <_scanf_chars+0x5a>
	...

0800a488 <_scanf_i>:
 800a488:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a48a:	000c      	movs	r4, r1
 800a48c:	b08b      	sub	sp, #44	; 0x2c
 800a48e:	9302      	str	r3, [sp, #8]
 800a490:	4b78      	ldr	r3, [pc, #480]	; (800a674 <_scanf_i+0x1ec>)
 800a492:	9004      	str	r0, [sp, #16]
 800a494:	0016      	movs	r6, r2
 800a496:	aa07      	add	r2, sp, #28
 800a498:	cb23      	ldmia	r3!, {r0, r1, r5}
 800a49a:	c223      	stmia	r2!, {r0, r1, r5}
 800a49c:	4b76      	ldr	r3, [pc, #472]	; (800a678 <_scanf_i+0x1f0>)
 800a49e:	9305      	str	r3, [sp, #20]
 800a4a0:	69a3      	ldr	r3, [r4, #24]
 800a4a2:	2b03      	cmp	r3, #3
 800a4a4:	d101      	bne.n	800a4aa <_scanf_i+0x22>
 800a4a6:	4b75      	ldr	r3, [pc, #468]	; (800a67c <_scanf_i+0x1f4>)
 800a4a8:	9305      	str	r3, [sp, #20]
 800a4aa:	22ae      	movs	r2, #174	; 0xae
 800a4ac:	2000      	movs	r0, #0
 800a4ae:	68a3      	ldr	r3, [r4, #8]
 800a4b0:	0052      	lsls	r2, r2, #1
 800a4b2:	1e59      	subs	r1, r3, #1
 800a4b4:	9003      	str	r0, [sp, #12]
 800a4b6:	4291      	cmp	r1, r2
 800a4b8:	d905      	bls.n	800a4c6 <_scanf_i+0x3e>
 800a4ba:	3b5e      	subs	r3, #94	; 0x5e
 800a4bc:	3bff      	subs	r3, #255	; 0xff
 800a4be:	9303      	str	r3, [sp, #12]
 800a4c0:	235e      	movs	r3, #94	; 0x5e
 800a4c2:	33ff      	adds	r3, #255	; 0xff
 800a4c4:	60a3      	str	r3, [r4, #8]
 800a4c6:	0023      	movs	r3, r4
 800a4c8:	331c      	adds	r3, #28
 800a4ca:	9301      	str	r3, [sp, #4]
 800a4cc:	23d0      	movs	r3, #208	; 0xd0
 800a4ce:	2700      	movs	r7, #0
 800a4d0:	6822      	ldr	r2, [r4, #0]
 800a4d2:	011b      	lsls	r3, r3, #4
 800a4d4:	4313      	orrs	r3, r2
 800a4d6:	6023      	str	r3, [r4, #0]
 800a4d8:	9b01      	ldr	r3, [sp, #4]
 800a4da:	9300      	str	r3, [sp, #0]
 800a4dc:	6833      	ldr	r3, [r6, #0]
 800a4de:	a807      	add	r0, sp, #28
 800a4e0:	7819      	ldrb	r1, [r3, #0]
 800a4e2:	00bb      	lsls	r3, r7, #2
 800a4e4:	2202      	movs	r2, #2
 800a4e6:	5818      	ldr	r0, [r3, r0]
 800a4e8:	f7fe fe90 	bl	800920c <memchr>
 800a4ec:	2800      	cmp	r0, #0
 800a4ee:	d02b      	beq.n	800a548 <_scanf_i+0xc0>
 800a4f0:	2f01      	cmp	r7, #1
 800a4f2:	d162      	bne.n	800a5ba <_scanf_i+0x132>
 800a4f4:	6863      	ldr	r3, [r4, #4]
 800a4f6:	2b00      	cmp	r3, #0
 800a4f8:	d106      	bne.n	800a508 <_scanf_i+0x80>
 800a4fa:	3308      	adds	r3, #8
 800a4fc:	6822      	ldr	r2, [r4, #0]
 800a4fe:	6063      	str	r3, [r4, #4]
 800a500:	33f9      	adds	r3, #249	; 0xf9
 800a502:	33ff      	adds	r3, #255	; 0xff
 800a504:	4313      	orrs	r3, r2
 800a506:	6023      	str	r3, [r4, #0]
 800a508:	4b5d      	ldr	r3, [pc, #372]	; (800a680 <_scanf_i+0x1f8>)
 800a50a:	6822      	ldr	r2, [r4, #0]
 800a50c:	4013      	ands	r3, r2
 800a50e:	6023      	str	r3, [r4, #0]
 800a510:	68a3      	ldr	r3, [r4, #8]
 800a512:	1e5a      	subs	r2, r3, #1
 800a514:	60a2      	str	r2, [r4, #8]
 800a516:	2b00      	cmp	r3, #0
 800a518:	d016      	beq.n	800a548 <_scanf_i+0xc0>
 800a51a:	6833      	ldr	r3, [r6, #0]
 800a51c:	1c5a      	adds	r2, r3, #1
 800a51e:	6032      	str	r2, [r6, #0]
 800a520:	781b      	ldrb	r3, [r3, #0]
 800a522:	9a00      	ldr	r2, [sp, #0]
 800a524:	7013      	strb	r3, [r2, #0]
 800a526:	6873      	ldr	r3, [r6, #4]
 800a528:	1c55      	adds	r5, r2, #1
 800a52a:	3b01      	subs	r3, #1
 800a52c:	6073      	str	r3, [r6, #4]
 800a52e:	2b00      	cmp	r3, #0
 800a530:	dc09      	bgt.n	800a546 <_scanf_i+0xbe>
 800a532:	23c0      	movs	r3, #192	; 0xc0
 800a534:	005b      	lsls	r3, r3, #1
 800a536:	58e3      	ldr	r3, [r4, r3]
 800a538:	0031      	movs	r1, r6
 800a53a:	9804      	ldr	r0, [sp, #16]
 800a53c:	9300      	str	r3, [sp, #0]
 800a53e:	4798      	blx	r3
 800a540:	2800      	cmp	r0, #0
 800a542:	d000      	beq.n	800a546 <_scanf_i+0xbe>
 800a544:	e080      	b.n	800a648 <_scanf_i+0x1c0>
 800a546:	9500      	str	r5, [sp, #0]
 800a548:	3701      	adds	r7, #1
 800a54a:	2f03      	cmp	r7, #3
 800a54c:	d1c6      	bne.n	800a4dc <_scanf_i+0x54>
 800a54e:	6863      	ldr	r3, [r4, #4]
 800a550:	2b00      	cmp	r3, #0
 800a552:	d101      	bne.n	800a558 <_scanf_i+0xd0>
 800a554:	330a      	adds	r3, #10
 800a556:	6063      	str	r3, [r4, #4]
 800a558:	2110      	movs	r1, #16
 800a55a:	2700      	movs	r7, #0
 800a55c:	6863      	ldr	r3, [r4, #4]
 800a55e:	6960      	ldr	r0, [r4, #20]
 800a560:	1ac9      	subs	r1, r1, r3
 800a562:	4b48      	ldr	r3, [pc, #288]	; (800a684 <_scanf_i+0x1fc>)
 800a564:	18c9      	adds	r1, r1, r3
 800a566:	f000 f8a5 	bl	800a6b4 <__sccl>
 800a56a:	9d00      	ldr	r5, [sp, #0]
 800a56c:	68a3      	ldr	r3, [r4, #8]
 800a56e:	6822      	ldr	r2, [r4, #0]
 800a570:	9300      	str	r3, [sp, #0]
 800a572:	2b00      	cmp	r3, #0
 800a574:	d041      	beq.n	800a5fa <_scanf_i+0x172>
 800a576:	6831      	ldr	r1, [r6, #0]
 800a578:	6963      	ldr	r3, [r4, #20]
 800a57a:	7808      	ldrb	r0, [r1, #0]
 800a57c:	5c1b      	ldrb	r3, [r3, r0]
 800a57e:	2b00      	cmp	r3, #0
 800a580:	d03b      	beq.n	800a5fa <_scanf_i+0x172>
 800a582:	2830      	cmp	r0, #48	; 0x30
 800a584:	d129      	bne.n	800a5da <_scanf_i+0x152>
 800a586:	2380      	movs	r3, #128	; 0x80
 800a588:	011b      	lsls	r3, r3, #4
 800a58a:	421a      	tst	r2, r3
 800a58c:	d025      	beq.n	800a5da <_scanf_i+0x152>
 800a58e:	9b03      	ldr	r3, [sp, #12]
 800a590:	3701      	adds	r7, #1
 800a592:	2b00      	cmp	r3, #0
 800a594:	d005      	beq.n	800a5a2 <_scanf_i+0x11a>
 800a596:	001a      	movs	r2, r3
 800a598:	9b00      	ldr	r3, [sp, #0]
 800a59a:	3a01      	subs	r2, #1
 800a59c:	3301      	adds	r3, #1
 800a59e:	9203      	str	r2, [sp, #12]
 800a5a0:	60a3      	str	r3, [r4, #8]
 800a5a2:	6873      	ldr	r3, [r6, #4]
 800a5a4:	3b01      	subs	r3, #1
 800a5a6:	6073      	str	r3, [r6, #4]
 800a5a8:	2b00      	cmp	r3, #0
 800a5aa:	dd1d      	ble.n	800a5e8 <_scanf_i+0x160>
 800a5ac:	6833      	ldr	r3, [r6, #0]
 800a5ae:	3301      	adds	r3, #1
 800a5b0:	6033      	str	r3, [r6, #0]
 800a5b2:	68a3      	ldr	r3, [r4, #8]
 800a5b4:	3b01      	subs	r3, #1
 800a5b6:	60a3      	str	r3, [r4, #8]
 800a5b8:	e7d8      	b.n	800a56c <_scanf_i+0xe4>
 800a5ba:	2f02      	cmp	r7, #2
 800a5bc:	d1a8      	bne.n	800a510 <_scanf_i+0x88>
 800a5be:	21c0      	movs	r1, #192	; 0xc0
 800a5c0:	2380      	movs	r3, #128	; 0x80
 800a5c2:	6822      	ldr	r2, [r4, #0]
 800a5c4:	00c9      	lsls	r1, r1, #3
 800a5c6:	4011      	ands	r1, r2
 800a5c8:	009b      	lsls	r3, r3, #2
 800a5ca:	4299      	cmp	r1, r3
 800a5cc:	d1bf      	bne.n	800a54e <_scanf_i+0xc6>
 800a5ce:	3bf1      	subs	r3, #241	; 0xf1
 800a5d0:	3bff      	subs	r3, #255	; 0xff
 800a5d2:	6063      	str	r3, [r4, #4]
 800a5d4:	33f0      	adds	r3, #240	; 0xf0
 800a5d6:	4313      	orrs	r3, r2
 800a5d8:	e799      	b.n	800a50e <_scanf_i+0x86>
 800a5da:	4b2b      	ldr	r3, [pc, #172]	; (800a688 <_scanf_i+0x200>)
 800a5dc:	4013      	ands	r3, r2
 800a5de:	6023      	str	r3, [r4, #0]
 800a5e0:	780b      	ldrb	r3, [r1, #0]
 800a5e2:	702b      	strb	r3, [r5, #0]
 800a5e4:	3501      	adds	r5, #1
 800a5e6:	e7dc      	b.n	800a5a2 <_scanf_i+0x11a>
 800a5e8:	23c0      	movs	r3, #192	; 0xc0
 800a5ea:	005b      	lsls	r3, r3, #1
 800a5ec:	58e3      	ldr	r3, [r4, r3]
 800a5ee:	0031      	movs	r1, r6
 800a5f0:	9804      	ldr	r0, [sp, #16]
 800a5f2:	9300      	str	r3, [sp, #0]
 800a5f4:	4798      	blx	r3
 800a5f6:	2800      	cmp	r0, #0
 800a5f8:	d0db      	beq.n	800a5b2 <_scanf_i+0x12a>
 800a5fa:	6823      	ldr	r3, [r4, #0]
 800a5fc:	05db      	lsls	r3, r3, #23
 800a5fe:	d50e      	bpl.n	800a61e <_scanf_i+0x196>
 800a600:	9b01      	ldr	r3, [sp, #4]
 800a602:	429d      	cmp	r5, r3
 800a604:	d907      	bls.n	800a616 <_scanf_i+0x18e>
 800a606:	23be      	movs	r3, #190	; 0xbe
 800a608:	3d01      	subs	r5, #1
 800a60a:	005b      	lsls	r3, r3, #1
 800a60c:	7829      	ldrb	r1, [r5, #0]
 800a60e:	58e3      	ldr	r3, [r4, r3]
 800a610:	0032      	movs	r2, r6
 800a612:	9804      	ldr	r0, [sp, #16]
 800a614:	4798      	blx	r3
 800a616:	9b01      	ldr	r3, [sp, #4]
 800a618:	2001      	movs	r0, #1
 800a61a:	429d      	cmp	r5, r3
 800a61c:	d027      	beq.n	800a66e <_scanf_i+0x1e6>
 800a61e:	2210      	movs	r2, #16
 800a620:	6823      	ldr	r3, [r4, #0]
 800a622:	401a      	ands	r2, r3
 800a624:	d11c      	bne.n	800a660 <_scanf_i+0x1d8>
 800a626:	702a      	strb	r2, [r5, #0]
 800a628:	6863      	ldr	r3, [r4, #4]
 800a62a:	9901      	ldr	r1, [sp, #4]
 800a62c:	9804      	ldr	r0, [sp, #16]
 800a62e:	9e05      	ldr	r6, [sp, #20]
 800a630:	47b0      	blx	r6
 800a632:	9b02      	ldr	r3, [sp, #8]
 800a634:	6821      	ldr	r1, [r4, #0]
 800a636:	681b      	ldr	r3, [r3, #0]
 800a638:	068a      	lsls	r2, r1, #26
 800a63a:	d507      	bpl.n	800a64c <_scanf_i+0x1c4>
 800a63c:	1d1a      	adds	r2, r3, #4
 800a63e:	9902      	ldr	r1, [sp, #8]
 800a640:	600a      	str	r2, [r1, #0]
 800a642:	681b      	ldr	r3, [r3, #0]
 800a644:	6018      	str	r0, [r3, #0]
 800a646:	e008      	b.n	800a65a <_scanf_i+0x1d2>
 800a648:	2700      	movs	r7, #0
 800a64a:	e7d6      	b.n	800a5fa <_scanf_i+0x172>
 800a64c:	1d1a      	adds	r2, r3, #4
 800a64e:	07ce      	lsls	r6, r1, #31
 800a650:	d5f5      	bpl.n	800a63e <_scanf_i+0x1b6>
 800a652:	9902      	ldr	r1, [sp, #8]
 800a654:	600a      	str	r2, [r1, #0]
 800a656:	681b      	ldr	r3, [r3, #0]
 800a658:	8018      	strh	r0, [r3, #0]
 800a65a:	68e3      	ldr	r3, [r4, #12]
 800a65c:	3301      	adds	r3, #1
 800a65e:	60e3      	str	r3, [r4, #12]
 800a660:	2000      	movs	r0, #0
 800a662:	9b01      	ldr	r3, [sp, #4]
 800a664:	1aed      	subs	r5, r5, r3
 800a666:	6923      	ldr	r3, [r4, #16]
 800a668:	19ef      	adds	r7, r5, r7
 800a66a:	19df      	adds	r7, r3, r7
 800a66c:	6127      	str	r7, [r4, #16]
 800a66e:	b00b      	add	sp, #44	; 0x2c
 800a670:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a672:	46c0      	nop			; (mov r8, r8)
 800a674:	0800bba8 	.word	0x0800bba8
 800a678:	08007811 	.word	0x08007811
 800a67c:	080076c1 	.word	0x080076c1
 800a680:	fffffaff 	.word	0xfffffaff
 800a684:	0800c2ee 	.word	0x0800c2ee
 800a688:	fffff6ff 	.word	0xfffff6ff

0800a68c <_read_r>:
 800a68c:	b570      	push	{r4, r5, r6, lr}
 800a68e:	0005      	movs	r5, r0
 800a690:	0008      	movs	r0, r1
 800a692:	0011      	movs	r1, r2
 800a694:	2200      	movs	r2, #0
 800a696:	4c06      	ldr	r4, [pc, #24]	; (800a6b0 <_read_r+0x24>)
 800a698:	6022      	str	r2, [r4, #0]
 800a69a:	001a      	movs	r2, r3
 800a69c:	f000 f8c8 	bl	800a830 <_read>
 800a6a0:	1c43      	adds	r3, r0, #1
 800a6a2:	d103      	bne.n	800a6ac <_read_r+0x20>
 800a6a4:	6823      	ldr	r3, [r4, #0]
 800a6a6:	2b00      	cmp	r3, #0
 800a6a8:	d000      	beq.n	800a6ac <_read_r+0x20>
 800a6aa:	602b      	str	r3, [r5, #0]
 800a6ac:	bd70      	pop	{r4, r5, r6, pc}
 800a6ae:	46c0      	nop			; (mov r8, r8)
 800a6b0:	20000500 	.word	0x20000500

0800a6b4 <__sccl>:
 800a6b4:	b570      	push	{r4, r5, r6, lr}
 800a6b6:	780b      	ldrb	r3, [r1, #0]
 800a6b8:	0005      	movs	r5, r0
 800a6ba:	2b5e      	cmp	r3, #94	; 0x5e
 800a6bc:	d018      	beq.n	800a6f0 <__sccl+0x3c>
 800a6be:	1c4a      	adds	r2, r1, #1
 800a6c0:	2100      	movs	r1, #0
 800a6c2:	0028      	movs	r0, r5
 800a6c4:	1c6c      	adds	r4, r5, #1
 800a6c6:	34ff      	adds	r4, #255	; 0xff
 800a6c8:	7001      	strb	r1, [r0, #0]
 800a6ca:	3001      	adds	r0, #1
 800a6cc:	42a0      	cmp	r0, r4
 800a6ce:	d1fb      	bne.n	800a6c8 <__sccl+0x14>
 800a6d0:	1e50      	subs	r0, r2, #1
 800a6d2:	2b00      	cmp	r3, #0
 800a6d4:	d00b      	beq.n	800a6ee <__sccl+0x3a>
 800a6d6:	2001      	movs	r0, #1
 800a6d8:	4041      	eors	r1, r0
 800a6da:	54e9      	strb	r1, [r5, r3]
 800a6dc:	7814      	ldrb	r4, [r2, #0]
 800a6de:	1c50      	adds	r0, r2, #1
 800a6e0:	2c2d      	cmp	r4, #45	; 0x2d
 800a6e2:	d00c      	beq.n	800a6fe <__sccl+0x4a>
 800a6e4:	2c5d      	cmp	r4, #93	; 0x5d
 800a6e6:	d002      	beq.n	800a6ee <__sccl+0x3a>
 800a6e8:	2c00      	cmp	r4, #0
 800a6ea:	d105      	bne.n	800a6f8 <__sccl+0x44>
 800a6ec:	0010      	movs	r0, r2
 800a6ee:	bd70      	pop	{r4, r5, r6, pc}
 800a6f0:	1c8a      	adds	r2, r1, #2
 800a6f2:	784b      	ldrb	r3, [r1, #1]
 800a6f4:	2101      	movs	r1, #1
 800a6f6:	e7e4      	b.n	800a6c2 <__sccl+0xe>
 800a6f8:	0023      	movs	r3, r4
 800a6fa:	0002      	movs	r2, r0
 800a6fc:	e7ed      	b.n	800a6da <__sccl+0x26>
 800a6fe:	7856      	ldrb	r6, [r2, #1]
 800a700:	2e5d      	cmp	r6, #93	; 0x5d
 800a702:	d0f9      	beq.n	800a6f8 <__sccl+0x44>
 800a704:	42b3      	cmp	r3, r6
 800a706:	dcf7      	bgt.n	800a6f8 <__sccl+0x44>
 800a708:	3202      	adds	r2, #2
 800a70a:	3301      	adds	r3, #1
 800a70c:	54e9      	strb	r1, [r5, r3]
 800a70e:	429e      	cmp	r6, r3
 800a710:	dcfb      	bgt.n	800a70a <__sccl+0x56>
 800a712:	e7e3      	b.n	800a6dc <__sccl+0x28>

0800a714 <__submore>:
 800a714:	000b      	movs	r3, r1
 800a716:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a718:	6b4d      	ldr	r5, [r1, #52]	; 0x34
 800a71a:	3344      	adds	r3, #68	; 0x44
 800a71c:	000c      	movs	r4, r1
 800a71e:	429d      	cmp	r5, r3
 800a720:	d11c      	bne.n	800a75c <__submore+0x48>
 800a722:	2680      	movs	r6, #128	; 0x80
 800a724:	00f6      	lsls	r6, r6, #3
 800a726:	0031      	movs	r1, r6
 800a728:	f7fb fc76 	bl	8006018 <_malloc_r>
 800a72c:	2800      	cmp	r0, #0
 800a72e:	d102      	bne.n	800a736 <__submore+0x22>
 800a730:	2001      	movs	r0, #1
 800a732:	4240      	negs	r0, r0
 800a734:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800a736:	0023      	movs	r3, r4
 800a738:	6360      	str	r0, [r4, #52]	; 0x34
 800a73a:	63a6      	str	r6, [r4, #56]	; 0x38
 800a73c:	3346      	adds	r3, #70	; 0x46
 800a73e:	781a      	ldrb	r2, [r3, #0]
 800a740:	4b10      	ldr	r3, [pc, #64]	; (800a784 <__submore+0x70>)
 800a742:	54c2      	strb	r2, [r0, r3]
 800a744:	0023      	movs	r3, r4
 800a746:	3345      	adds	r3, #69	; 0x45
 800a748:	781a      	ldrb	r2, [r3, #0]
 800a74a:	4b0f      	ldr	r3, [pc, #60]	; (800a788 <__submore+0x74>)
 800a74c:	54c2      	strb	r2, [r0, r3]
 800a74e:	782a      	ldrb	r2, [r5, #0]
 800a750:	4b0e      	ldr	r3, [pc, #56]	; (800a78c <__submore+0x78>)
 800a752:	54c2      	strb	r2, [r0, r3]
 800a754:	18c0      	adds	r0, r0, r3
 800a756:	6020      	str	r0, [r4, #0]
 800a758:	2000      	movs	r0, #0
 800a75a:	e7eb      	b.n	800a734 <__submore+0x20>
 800a75c:	6b8e      	ldr	r6, [r1, #56]	; 0x38
 800a75e:	0029      	movs	r1, r5
 800a760:	0073      	lsls	r3, r6, #1
 800a762:	001a      	movs	r2, r3
 800a764:	9301      	str	r3, [sp, #4]
 800a766:	f7ff fc3a 	bl	8009fde <_realloc_r>
 800a76a:	1e05      	subs	r5, r0, #0
 800a76c:	d0e0      	beq.n	800a730 <__submore+0x1c>
 800a76e:	1987      	adds	r7, r0, r6
 800a770:	0001      	movs	r1, r0
 800a772:	0032      	movs	r2, r6
 800a774:	0038      	movs	r0, r7
 800a776:	f7fe fd54 	bl	8009222 <memcpy>
 800a77a:	9b01      	ldr	r3, [sp, #4]
 800a77c:	6027      	str	r7, [r4, #0]
 800a77e:	6365      	str	r5, [r4, #52]	; 0x34
 800a780:	63a3      	str	r3, [r4, #56]	; 0x38
 800a782:	e7e9      	b.n	800a758 <__submore+0x44>
 800a784:	000003ff 	.word	0x000003ff
 800a788:	000003fe 	.word	0x000003fe
 800a78c:	000003fd 	.word	0x000003fd

0800a790 <_malloc_usable_size_r>:
 800a790:	1f0b      	subs	r3, r1, #4
 800a792:	681b      	ldr	r3, [r3, #0]
 800a794:	1f18      	subs	r0, r3, #4
 800a796:	2b00      	cmp	r3, #0
 800a798:	da01      	bge.n	800a79e <_malloc_usable_size_r+0xe>
 800a79a:	580b      	ldr	r3, [r1, r0]
 800a79c:	18c0      	adds	r0, r0, r3
 800a79e:	4770      	bx	lr

0800a7a0 <findslot>:
 800a7a0:	4b0a      	ldr	r3, [pc, #40]	; (800a7cc <findslot+0x2c>)
 800a7a2:	b510      	push	{r4, lr}
 800a7a4:	0004      	movs	r4, r0
 800a7a6:	6818      	ldr	r0, [r3, #0]
 800a7a8:	2800      	cmp	r0, #0
 800a7aa:	d004      	beq.n	800a7b6 <findslot+0x16>
 800a7ac:	6983      	ldr	r3, [r0, #24]
 800a7ae:	2b00      	cmp	r3, #0
 800a7b0:	d101      	bne.n	800a7b6 <findslot+0x16>
 800a7b2:	f7fe fad1 	bl	8008d58 <__sinit>
 800a7b6:	2000      	movs	r0, #0
 800a7b8:	2c13      	cmp	r4, #19
 800a7ba:	d805      	bhi.n	800a7c8 <findslot+0x28>
 800a7bc:	4b04      	ldr	r3, [pc, #16]	; (800a7d0 <findslot+0x30>)
 800a7be:	00e4      	lsls	r4, r4, #3
 800a7c0:	58e2      	ldr	r2, [r4, r3]
 800a7c2:	3201      	adds	r2, #1
 800a7c4:	d000      	beq.n	800a7c8 <findslot+0x28>
 800a7c6:	18e0      	adds	r0, r4, r3
 800a7c8:	bd10      	pop	{r4, pc}
 800a7ca:	46c0      	nop			; (mov r8, r8)
 800a7cc:	2000001c 	.word	0x2000001c
 800a7d0:	20000460 	.word	0x20000460

0800a7d4 <checkerror>:
 800a7d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a7d6:	0005      	movs	r5, r0
 800a7d8:	1c43      	adds	r3, r0, #1
 800a7da:	d109      	bne.n	800a7f0 <checkerror+0x1c>
 800a7dc:	f7fb fa84 	bl	8005ce8 <__errno>
 800a7e0:	2413      	movs	r4, #19
 800a7e2:	0006      	movs	r6, r0
 800a7e4:	2700      	movs	r7, #0
 800a7e6:	1c20      	adds	r0, r4, #0
 800a7e8:	1c39      	adds	r1, r7, #0
 800a7ea:	beab      	bkpt	0x00ab
 800a7ec:	1c04      	adds	r4, r0, #0
 800a7ee:	6034      	str	r4, [r6, #0]
 800a7f0:	0028      	movs	r0, r5
 800a7f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a7f4 <error>:
 800a7f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a7f6:	0005      	movs	r5, r0
 800a7f8:	f7fb fa76 	bl	8005ce8 <__errno>
 800a7fc:	2413      	movs	r4, #19
 800a7fe:	0006      	movs	r6, r0
 800a800:	2700      	movs	r7, #0
 800a802:	1c20      	adds	r0, r4, #0
 800a804:	1c39      	adds	r1, r7, #0
 800a806:	beab      	bkpt	0x00ab
 800a808:	1c04      	adds	r4, r0, #0
 800a80a:	0028      	movs	r0, r5
 800a80c:	6034      	str	r4, [r6, #0]
 800a80e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a810 <_swiread>:
 800a810:	b530      	push	{r4, r5, lr}
 800a812:	b085      	sub	sp, #20
 800a814:	ad01      	add	r5, sp, #4
 800a816:	9001      	str	r0, [sp, #4]
 800a818:	9102      	str	r1, [sp, #8]
 800a81a:	9203      	str	r2, [sp, #12]
 800a81c:	2406      	movs	r4, #6
 800a81e:	1c20      	adds	r0, r4, #0
 800a820:	1c29      	adds	r1, r5, #0
 800a822:	beab      	bkpt	0x00ab
 800a824:	1c04      	adds	r4, r0, #0
 800a826:	0020      	movs	r0, r4
 800a828:	f7ff ffd4 	bl	800a7d4 <checkerror>
 800a82c:	b005      	add	sp, #20
 800a82e:	bd30      	pop	{r4, r5, pc}

0800a830 <_read>:
 800a830:	b570      	push	{r4, r5, r6, lr}
 800a832:	000e      	movs	r6, r1
 800a834:	0015      	movs	r5, r2
 800a836:	f7ff ffb3 	bl	800a7a0 <findslot>
 800a83a:	1e04      	subs	r4, r0, #0
 800a83c:	d106      	bne.n	800a84c <_read+0x1c>
 800a83e:	f7fb fa53 	bl	8005ce8 <__errno>
 800a842:	2309      	movs	r3, #9
 800a844:	6003      	str	r3, [r0, #0]
 800a846:	2001      	movs	r0, #1
 800a848:	4240      	negs	r0, r0
 800a84a:	bd70      	pop	{r4, r5, r6, pc}
 800a84c:	002a      	movs	r2, r5
 800a84e:	0031      	movs	r1, r6
 800a850:	6800      	ldr	r0, [r0, #0]
 800a852:	f7ff ffdd 	bl	800a810 <_swiread>
 800a856:	1c43      	adds	r3, r0, #1
 800a858:	d0f7      	beq.n	800a84a <_read+0x1a>
 800a85a:	6863      	ldr	r3, [r4, #4]
 800a85c:	1a28      	subs	r0, r5, r0
 800a85e:	181b      	adds	r3, r3, r0
 800a860:	6063      	str	r3, [r4, #4]
 800a862:	e7f2      	b.n	800a84a <_read+0x1a>

0800a864 <_swilseek>:
 800a864:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a866:	000c      	movs	r4, r1
 800a868:	0016      	movs	r6, r2
 800a86a:	f7ff ff99 	bl	800a7a0 <findslot>
 800a86e:	1e05      	subs	r5, r0, #0
 800a870:	d107      	bne.n	800a882 <_swilseek+0x1e>
 800a872:	f7fb fa39 	bl	8005ce8 <__errno>
 800a876:	2309      	movs	r3, #9
 800a878:	6003      	str	r3, [r0, #0]
 800a87a:	2401      	movs	r4, #1
 800a87c:	4264      	negs	r4, r4
 800a87e:	0020      	movs	r0, r4
 800a880:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800a882:	2e02      	cmp	r6, #2
 800a884:	d903      	bls.n	800a88e <_swilseek+0x2a>
 800a886:	f7fb fa2f 	bl	8005ce8 <__errno>
 800a88a:	2316      	movs	r3, #22
 800a88c:	e7f4      	b.n	800a878 <_swilseek+0x14>
 800a88e:	2e01      	cmp	r6, #1
 800a890:	d112      	bne.n	800a8b8 <_swilseek+0x54>
 800a892:	6843      	ldr	r3, [r0, #4]
 800a894:	18e4      	adds	r4, r4, r3
 800a896:	d4f6      	bmi.n	800a886 <_swilseek+0x22>
 800a898:	466f      	mov	r7, sp
 800a89a:	682b      	ldr	r3, [r5, #0]
 800a89c:	260a      	movs	r6, #10
 800a89e:	9300      	str	r3, [sp, #0]
 800a8a0:	607c      	str	r4, [r7, #4]
 800a8a2:	1c30      	adds	r0, r6, #0
 800a8a4:	1c39      	adds	r1, r7, #0
 800a8a6:	beab      	bkpt	0x00ab
 800a8a8:	1c06      	adds	r6, r0, #0
 800a8aa:	0030      	movs	r0, r6
 800a8ac:	f7ff ff92 	bl	800a7d4 <checkerror>
 800a8b0:	2800      	cmp	r0, #0
 800a8b2:	dbe2      	blt.n	800a87a <_swilseek+0x16>
 800a8b4:	606c      	str	r4, [r5, #4]
 800a8b6:	e7e2      	b.n	800a87e <_swilseek+0x1a>
 800a8b8:	2e02      	cmp	r6, #2
 800a8ba:	d1ed      	bne.n	800a898 <_swilseek+0x34>
 800a8bc:	6803      	ldr	r3, [r0, #0]
 800a8be:	466f      	mov	r7, sp
 800a8c0:	9300      	str	r3, [sp, #0]
 800a8c2:	360a      	adds	r6, #10
 800a8c4:	1c30      	adds	r0, r6, #0
 800a8c6:	1c39      	adds	r1, r7, #0
 800a8c8:	beab      	bkpt	0x00ab
 800a8ca:	1c06      	adds	r6, r0, #0
 800a8cc:	0030      	movs	r0, r6
 800a8ce:	f7ff ff81 	bl	800a7d4 <checkerror>
 800a8d2:	1824      	adds	r4, r4, r0
 800a8d4:	1c43      	adds	r3, r0, #1
 800a8d6:	d1df      	bne.n	800a898 <_swilseek+0x34>
 800a8d8:	e7cf      	b.n	800a87a <_swilseek+0x16>

0800a8da <_lseek>:
 800a8da:	b510      	push	{r4, lr}
 800a8dc:	f7ff ffc2 	bl	800a864 <_swilseek>
 800a8e0:	bd10      	pop	{r4, pc}

0800a8e2 <_swiwrite>:
 800a8e2:	b530      	push	{r4, r5, lr}
 800a8e4:	b085      	sub	sp, #20
 800a8e6:	ad01      	add	r5, sp, #4
 800a8e8:	9001      	str	r0, [sp, #4]
 800a8ea:	9102      	str	r1, [sp, #8]
 800a8ec:	9203      	str	r2, [sp, #12]
 800a8ee:	2405      	movs	r4, #5
 800a8f0:	1c20      	adds	r0, r4, #0
 800a8f2:	1c29      	adds	r1, r5, #0
 800a8f4:	beab      	bkpt	0x00ab
 800a8f6:	1c04      	adds	r4, r0, #0
 800a8f8:	0020      	movs	r0, r4
 800a8fa:	f7ff ff6b 	bl	800a7d4 <checkerror>
 800a8fe:	b005      	add	sp, #20
 800a900:	bd30      	pop	{r4, r5, pc}

0800a902 <_write>:
 800a902:	b570      	push	{r4, r5, r6, lr}
 800a904:	000e      	movs	r6, r1
 800a906:	0015      	movs	r5, r2
 800a908:	f7ff ff4a 	bl	800a7a0 <findslot>
 800a90c:	1e04      	subs	r4, r0, #0
 800a90e:	d106      	bne.n	800a91e <_write+0x1c>
 800a910:	f7fb f9ea 	bl	8005ce8 <__errno>
 800a914:	2309      	movs	r3, #9
 800a916:	6003      	str	r3, [r0, #0]
 800a918:	2001      	movs	r0, #1
 800a91a:	4240      	negs	r0, r0
 800a91c:	e00f      	b.n	800a93e <_write+0x3c>
 800a91e:	002a      	movs	r2, r5
 800a920:	0031      	movs	r1, r6
 800a922:	6800      	ldr	r0, [r0, #0]
 800a924:	f7ff ffdd 	bl	800a8e2 <_swiwrite>
 800a928:	1e02      	subs	r2, r0, #0
 800a92a:	dbf5      	blt.n	800a918 <_write+0x16>
 800a92c:	6863      	ldr	r3, [r4, #4]
 800a92e:	1a28      	subs	r0, r5, r0
 800a930:	1819      	adds	r1, r3, r0
 800a932:	6061      	str	r1, [r4, #4]
 800a934:	42aa      	cmp	r2, r5
 800a936:	d102      	bne.n	800a93e <_write+0x3c>
 800a938:	2000      	movs	r0, #0
 800a93a:	f7ff ff5b 	bl	800a7f4 <error>
 800a93e:	bd70      	pop	{r4, r5, r6, pc}

0800a940 <_swiclose>:
 800a940:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a942:	2402      	movs	r4, #2
 800a944:	9001      	str	r0, [sp, #4]
 800a946:	ad01      	add	r5, sp, #4
 800a948:	1c20      	adds	r0, r4, #0
 800a94a:	1c29      	adds	r1, r5, #0
 800a94c:	beab      	bkpt	0x00ab
 800a94e:	1c04      	adds	r4, r0, #0
 800a950:	0020      	movs	r0, r4
 800a952:	f7ff ff3f 	bl	800a7d4 <checkerror>
 800a956:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800a958 <_close>:
 800a958:	b570      	push	{r4, r5, r6, lr}
 800a95a:	0005      	movs	r5, r0
 800a95c:	f7ff ff20 	bl	800a7a0 <findslot>
 800a960:	1e04      	subs	r4, r0, #0
 800a962:	d106      	bne.n	800a972 <_close+0x1a>
 800a964:	f7fb f9c0 	bl	8005ce8 <__errno>
 800a968:	2309      	movs	r3, #9
 800a96a:	6003      	str	r3, [r0, #0]
 800a96c:	2001      	movs	r0, #1
 800a96e:	4240      	negs	r0, r0
 800a970:	bd70      	pop	{r4, r5, r6, pc}
 800a972:	3d01      	subs	r5, #1
 800a974:	2d01      	cmp	r5, #1
 800a976:	d809      	bhi.n	800a98c <_close+0x34>
 800a978:	4b09      	ldr	r3, [pc, #36]	; (800a9a0 <_close+0x48>)
 800a97a:	689a      	ldr	r2, [r3, #8]
 800a97c:	691b      	ldr	r3, [r3, #16]
 800a97e:	429a      	cmp	r2, r3
 800a980:	d104      	bne.n	800a98c <_close+0x34>
 800a982:	2301      	movs	r3, #1
 800a984:	425b      	negs	r3, r3
 800a986:	6003      	str	r3, [r0, #0]
 800a988:	2000      	movs	r0, #0
 800a98a:	e7f1      	b.n	800a970 <_close+0x18>
 800a98c:	6820      	ldr	r0, [r4, #0]
 800a98e:	f7ff ffd7 	bl	800a940 <_swiclose>
 800a992:	2800      	cmp	r0, #0
 800a994:	d1ec      	bne.n	800a970 <_close+0x18>
 800a996:	2301      	movs	r3, #1
 800a998:	425b      	negs	r3, r3
 800a99a:	6023      	str	r3, [r4, #0]
 800a99c:	e7e8      	b.n	800a970 <_close+0x18>
 800a99e:	46c0      	nop			; (mov r8, r8)
 800a9a0:	20000460 	.word	0x20000460

0800a9a4 <_swistat>:
 800a9a4:	b570      	push	{r4, r5, r6, lr}
 800a9a6:	000c      	movs	r4, r1
 800a9a8:	f7ff fefa 	bl	800a7a0 <findslot>
 800a9ac:	1e06      	subs	r6, r0, #0
 800a9ae:	d106      	bne.n	800a9be <_swistat+0x1a>
 800a9b0:	f7fb f99a 	bl	8005ce8 <__errno>
 800a9b4:	2309      	movs	r3, #9
 800a9b6:	6003      	str	r3, [r0, #0]
 800a9b8:	2001      	movs	r0, #1
 800a9ba:	4240      	negs	r0, r0
 800a9bc:	bd70      	pop	{r4, r5, r6, pc}
 800a9be:	2380      	movs	r3, #128	; 0x80
 800a9c0:	6862      	ldr	r2, [r4, #4]
 800a9c2:	019b      	lsls	r3, r3, #6
 800a9c4:	4313      	orrs	r3, r2
 800a9c6:	6063      	str	r3, [r4, #4]
 800a9c8:	2380      	movs	r3, #128	; 0x80
 800a9ca:	00db      	lsls	r3, r3, #3
 800a9cc:	6463      	str	r3, [r4, #68]	; 0x44
 800a9ce:	250c      	movs	r5, #12
 800a9d0:	1c28      	adds	r0, r5, #0
 800a9d2:	1c31      	adds	r1, r6, #0
 800a9d4:	beab      	bkpt	0x00ab
 800a9d6:	1c05      	adds	r5, r0, #0
 800a9d8:	0028      	movs	r0, r5
 800a9da:	f7ff fefb 	bl	800a7d4 <checkerror>
 800a9de:	1c43      	adds	r3, r0, #1
 800a9e0:	d0ec      	beq.n	800a9bc <_swistat+0x18>
 800a9e2:	6120      	str	r0, [r4, #16]
 800a9e4:	2000      	movs	r0, #0
 800a9e6:	e7e9      	b.n	800a9bc <_swistat+0x18>

0800a9e8 <_fstat>:
 800a9e8:	b570      	push	{r4, r5, r6, lr}
 800a9ea:	000c      	movs	r4, r1
 800a9ec:	0005      	movs	r5, r0
 800a9ee:	2258      	movs	r2, #88	; 0x58
 800a9f0:	2100      	movs	r1, #0
 800a9f2:	0020      	movs	r0, r4
 800a9f4:	f7fb fabe 	bl	8005f74 <memset>
 800a9f8:	0028      	movs	r0, r5
 800a9fa:	0021      	movs	r1, r4
 800a9fc:	f7ff ffd2 	bl	800a9a4 <_swistat>
 800aa00:	bd70      	pop	{r4, r5, r6, pc}

0800aa02 <_stat>:
 800aa02:	b570      	push	{r4, r5, r6, lr}
 800aa04:	000d      	movs	r5, r1
 800aa06:	0004      	movs	r4, r0
 800aa08:	2258      	movs	r2, #88	; 0x58
 800aa0a:	2100      	movs	r1, #0
 800aa0c:	0028      	movs	r0, r5
 800aa0e:	f7fb fab1 	bl	8005f74 <memset>
 800aa12:	0020      	movs	r0, r4
 800aa14:	2100      	movs	r1, #0
 800aa16:	f000 f813 	bl	800aa40 <_swiopen>
 800aa1a:	0004      	movs	r4, r0
 800aa1c:	1c43      	adds	r3, r0, #1
 800aa1e:	d00c      	beq.n	800aa3a <_stat+0x38>
 800aa20:	2381      	movs	r3, #129	; 0x81
 800aa22:	686a      	ldr	r2, [r5, #4]
 800aa24:	021b      	lsls	r3, r3, #8
 800aa26:	4313      	orrs	r3, r2
 800aa28:	606b      	str	r3, [r5, #4]
 800aa2a:	0029      	movs	r1, r5
 800aa2c:	f7ff ffba 	bl	800a9a4 <_swistat>
 800aa30:	0005      	movs	r5, r0
 800aa32:	0020      	movs	r0, r4
 800aa34:	f7ff ff90 	bl	800a958 <_close>
 800aa38:	002c      	movs	r4, r5
 800aa3a:	0020      	movs	r0, r4
 800aa3c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800aa40 <_swiopen>:
 800aa40:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa42:	000d      	movs	r5, r1
 800aa44:	2700      	movs	r7, #0
 800aa46:	b099      	sub	sp, #100	; 0x64
 800aa48:	9000      	str	r0, [sp, #0]
 800aa4a:	00fb      	lsls	r3, r7, #3
 800aa4c:	9301      	str	r3, [sp, #4]
 800aa4e:	4b29      	ldr	r3, [pc, #164]	; (800aaf4 <_swiopen+0xb4>)
 800aa50:	00fa      	lsls	r2, r7, #3
 800aa52:	589c      	ldr	r4, [r3, r2]
 800aa54:	1c63      	adds	r3, r4, #1
 800aa56:	d038      	beq.n	800aaca <_swiopen+0x8a>
 800aa58:	3701      	adds	r7, #1
 800aa5a:	2f14      	cmp	r7, #20
 800aa5c:	d1f5      	bne.n	800aa4a <_swiopen+0xa>
 800aa5e:	f7fb f943 	bl	8005ce8 <__errno>
 800aa62:	2401      	movs	r4, #1
 800aa64:	2318      	movs	r3, #24
 800aa66:	4264      	negs	r4, r4
 800aa68:	6003      	str	r3, [r0, #0]
 800aa6a:	e03f      	b.n	800aaec <_swiopen+0xac>
 800aa6c:	2302      	movs	r3, #2
 800aa6e:	03ec      	lsls	r4, r5, #15
 800aa70:	0fe4      	lsrs	r4, r4, #31
 800aa72:	421d      	tst	r5, r3
 800aa74:	d000      	beq.n	800aa78 <_swiopen+0x38>
 800aa76:	431c      	orrs	r4, r3
 800aa78:	4b1f      	ldr	r3, [pc, #124]	; (800aaf8 <_swiopen+0xb8>)
 800aa7a:	421d      	tst	r5, r3
 800aa7c:	d001      	beq.n	800aa82 <_swiopen+0x42>
 800aa7e:	2304      	movs	r3, #4
 800aa80:	431c      	orrs	r4, r3
 800aa82:	2308      	movs	r3, #8
 800aa84:	421d      	tst	r5, r3
 800aa86:	d002      	beq.n	800aa8e <_swiopen+0x4e>
 800aa88:	2204      	movs	r2, #4
 800aa8a:	4394      	bics	r4, r2
 800aa8c:	431c      	orrs	r4, r3
 800aa8e:	9b00      	ldr	r3, [sp, #0]
 800aa90:	0018      	movs	r0, r3
 800aa92:	9302      	str	r3, [sp, #8]
 800aa94:	f7f5 fb38 	bl	8000108 <strlen>
 800aa98:	6074      	str	r4, [r6, #4]
 800aa9a:	60b0      	str	r0, [r6, #8]
 800aa9c:	2401      	movs	r4, #1
 800aa9e:	1c20      	adds	r0, r4, #0
 800aaa0:	1c31      	adds	r1, r6, #0
 800aaa2:	beab      	bkpt	0x00ab
 800aaa4:	1c06      	adds	r6, r0, #0
 800aaa6:	2e00      	cmp	r6, #0
 800aaa8:	db0a      	blt.n	800aac0 <_swiopen+0x80>
 800aaaa:	4b12      	ldr	r3, [pc, #72]	; (800aaf4 <_swiopen+0xb4>)
 800aaac:	00fa      	lsls	r2, r7, #3
 800aaae:	509e      	str	r6, [r3, r2]
 800aab0:	0013      	movs	r3, r2
 800aab2:	4a10      	ldr	r2, [pc, #64]	; (800aaf4 <_swiopen+0xb4>)
 800aab4:	003c      	movs	r4, r7
 800aab6:	4694      	mov	ip, r2
 800aab8:	2200      	movs	r2, #0
 800aaba:	4463      	add	r3, ip
 800aabc:	605a      	str	r2, [r3, #4]
 800aabe:	e015      	b.n	800aaec <_swiopen+0xac>
 800aac0:	0030      	movs	r0, r6
 800aac2:	f7ff fe97 	bl	800a7f4 <error>
 800aac6:	0004      	movs	r4, r0
 800aac8:	e010      	b.n	800aaec <_swiopen+0xac>
 800aaca:	23a0      	movs	r3, #160	; 0xa0
 800aacc:	002a      	movs	r2, r5
 800aace:	011b      	lsls	r3, r3, #4
 800aad0:	401a      	ands	r2, r3
 800aad2:	ae02      	add	r6, sp, #8
 800aad4:	429a      	cmp	r2, r3
 800aad6:	d1c9      	bne.n	800aa6c <_swiopen+0x2c>
 800aad8:	0031      	movs	r1, r6
 800aada:	9800      	ldr	r0, [sp, #0]
 800aadc:	f7ff ff91 	bl	800aa02 <_stat>
 800aae0:	1c43      	adds	r3, r0, #1
 800aae2:	d0c3      	beq.n	800aa6c <_swiopen+0x2c>
 800aae4:	f7fb f900 	bl	8005ce8 <__errno>
 800aae8:	2311      	movs	r3, #17
 800aaea:	6003      	str	r3, [r0, #0]
 800aaec:	0020      	movs	r0, r4
 800aaee:	b019      	add	sp, #100	; 0x64
 800aaf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aaf2:	46c0      	nop			; (mov r8, r8)
 800aaf4:	20000460 	.word	0x20000460
 800aaf8:	00000601 	.word	0x00000601

0800aafc <_get_semihosting_exts>:
 800aafc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aafe:	b085      	sub	sp, #20
 800ab00:	9000      	str	r0, [sp, #0]
 800ab02:	9101      	str	r1, [sp, #4]
 800ab04:	4827      	ldr	r0, [pc, #156]	; (800aba4 <_get_semihosting_exts+0xa8>)
 800ab06:	2100      	movs	r1, #0
 800ab08:	0015      	movs	r5, r2
 800ab0a:	f7ff ff99 	bl	800aa40 <_swiopen>
 800ab0e:	0004      	movs	r4, r0
 800ab10:	002a      	movs	r2, r5
 800ab12:	2100      	movs	r1, #0
 800ab14:	9800      	ldr	r0, [sp, #0]
 800ab16:	f7fb fa2d 	bl	8005f74 <memset>
 800ab1a:	1c63      	adds	r3, r4, #1
 800ab1c:	d015      	beq.n	800ab4a <_get_semihosting_exts+0x4e>
 800ab1e:	0020      	movs	r0, r4
 800ab20:	f7ff fe3e 	bl	800a7a0 <findslot>
 800ab24:	260c      	movs	r6, #12
 800ab26:	0007      	movs	r7, r0
 800ab28:	1c30      	adds	r0, r6, #0
 800ab2a:	1c39      	adds	r1, r7, #0
 800ab2c:	beab      	bkpt	0x00ab
 800ab2e:	1c06      	adds	r6, r0, #0
 800ab30:	0030      	movs	r0, r6
 800ab32:	f7ff fe4f 	bl	800a7d4 <checkerror>
 800ab36:	2803      	cmp	r0, #3
 800ab38:	dd02      	ble.n	800ab40 <_get_semihosting_exts+0x44>
 800ab3a:	3803      	subs	r0, #3
 800ab3c:	42a8      	cmp	r0, r5
 800ab3e:	dc07      	bgt.n	800ab50 <_get_semihosting_exts+0x54>
 800ab40:	0020      	movs	r0, r4
 800ab42:	2401      	movs	r4, #1
 800ab44:	f7ff ff08 	bl	800a958 <_close>
 800ab48:	4264      	negs	r4, r4
 800ab4a:	0020      	movs	r0, r4
 800ab4c:	b005      	add	sp, #20
 800ab4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab50:	ae03      	add	r6, sp, #12
 800ab52:	2204      	movs	r2, #4
 800ab54:	0031      	movs	r1, r6
 800ab56:	0020      	movs	r0, r4
 800ab58:	f7ff fe6a 	bl	800a830 <_read>
 800ab5c:	2803      	cmp	r0, #3
 800ab5e:	ddef      	ble.n	800ab40 <_get_semihosting_exts+0x44>
 800ab60:	7833      	ldrb	r3, [r6, #0]
 800ab62:	2b53      	cmp	r3, #83	; 0x53
 800ab64:	d1ec      	bne.n	800ab40 <_get_semihosting_exts+0x44>
 800ab66:	7873      	ldrb	r3, [r6, #1]
 800ab68:	2b48      	cmp	r3, #72	; 0x48
 800ab6a:	d1e9      	bne.n	800ab40 <_get_semihosting_exts+0x44>
 800ab6c:	78b3      	ldrb	r3, [r6, #2]
 800ab6e:	2b46      	cmp	r3, #70	; 0x46
 800ab70:	d1e6      	bne.n	800ab40 <_get_semihosting_exts+0x44>
 800ab72:	78f3      	ldrb	r3, [r6, #3]
 800ab74:	2b42      	cmp	r3, #66	; 0x42
 800ab76:	d1e3      	bne.n	800ab40 <_get_semihosting_exts+0x44>
 800ab78:	2201      	movs	r2, #1
 800ab7a:	9901      	ldr	r1, [sp, #4]
 800ab7c:	0020      	movs	r0, r4
 800ab7e:	f7ff fe71 	bl	800a864 <_swilseek>
 800ab82:	2800      	cmp	r0, #0
 800ab84:	dbdc      	blt.n	800ab40 <_get_semihosting_exts+0x44>
 800ab86:	002a      	movs	r2, r5
 800ab88:	9900      	ldr	r1, [sp, #0]
 800ab8a:	0020      	movs	r0, r4
 800ab8c:	f7ff fe50 	bl	800a830 <_read>
 800ab90:	0005      	movs	r5, r0
 800ab92:	0020      	movs	r0, r4
 800ab94:	f7ff fee0 	bl	800a958 <_close>
 800ab98:	0028      	movs	r0, r5
 800ab9a:	f7ff fe1b 	bl	800a7d4 <checkerror>
 800ab9e:	0004      	movs	r4, r0
 800aba0:	e7d3      	b.n	800ab4a <_get_semihosting_exts+0x4e>
 800aba2:	46c0      	nop			; (mov r8, r8)
 800aba4:	0800c309 	.word	0x0800c309

0800aba8 <initialise_semihosting_exts>:
 800aba8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800abaa:	2401      	movs	r4, #1
 800abac:	2100      	movs	r1, #0
 800abae:	4e09      	ldr	r6, [pc, #36]	; (800abd4 <initialise_semihosting_exts+0x2c>)
 800abb0:	4d09      	ldr	r5, [pc, #36]	; (800abd8 <initialise_semihosting_exts+0x30>)
 800abb2:	af01      	add	r7, sp, #4
 800abb4:	0022      	movs	r2, r4
 800abb6:	0038      	movs	r0, r7
 800abb8:	6031      	str	r1, [r6, #0]
 800abba:	602c      	str	r4, [r5, #0]
 800abbc:	f7ff ff9e 	bl	800aafc <_get_semihosting_exts>
 800abc0:	2800      	cmp	r0, #0
 800abc2:	dd05      	ble.n	800abd0 <initialise_semihosting_exts+0x28>
 800abc4:	2202      	movs	r2, #2
 800abc6:	783b      	ldrb	r3, [r7, #0]
 800abc8:	401c      	ands	r4, r3
 800abca:	4013      	ands	r3, r2
 800abcc:	6034      	str	r4, [r6, #0]
 800abce:	602b      	str	r3, [r5, #0]
 800abd0:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800abd2:	46c0      	nop			; (mov r8, r8)
 800abd4:	20000250 	.word	0x20000250
 800abd8:	20000254 	.word	0x20000254

0800abdc <_has_ext_stdout_stderr>:
 800abdc:	b510      	push	{r4, lr}
 800abde:	4c04      	ldr	r4, [pc, #16]	; (800abf0 <_has_ext_stdout_stderr+0x14>)
 800abe0:	6823      	ldr	r3, [r4, #0]
 800abe2:	2b00      	cmp	r3, #0
 800abe4:	da01      	bge.n	800abea <_has_ext_stdout_stderr+0xe>
 800abe6:	f7ff ffdf 	bl	800aba8 <initialise_semihosting_exts>
 800abea:	6820      	ldr	r0, [r4, #0]
 800abec:	bd10      	pop	{r4, pc}
 800abee:	46c0      	nop			; (mov r8, r8)
 800abf0:	20000254 	.word	0x20000254

0800abf4 <initialise_monitor_handles>:
 800abf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800abf6:	4b27      	ldr	r3, [pc, #156]	; (800ac94 <initialise_monitor_handles+0xa0>)
 800abf8:	b085      	sub	sp, #20
 800abfa:	9301      	str	r3, [sp, #4]
 800abfc:	2500      	movs	r5, #0
 800abfe:	2303      	movs	r3, #3
 800ac00:	ac01      	add	r4, sp, #4
 800ac02:	60a3      	str	r3, [r4, #8]
 800ac04:	2701      	movs	r7, #1
 800ac06:	6065      	str	r5, [r4, #4]
 800ac08:	1c38      	adds	r0, r7, #0
 800ac0a:	1c21      	adds	r1, r4, #0
 800ac0c:	beab      	bkpt	0x00ab
 800ac0e:	1c07      	adds	r7, r0, #0
 800ac10:	2101      	movs	r1, #1
 800ac12:	4b21      	ldr	r3, [pc, #132]	; (800ac98 <initialise_monitor_handles+0xa4>)
 800ac14:	4249      	negs	r1, r1
 800ac16:	601f      	str	r7, [r3, #0]
 800ac18:	002b      	movs	r3, r5
 800ac1a:	4d20      	ldr	r5, [pc, #128]	; (800ac9c <initialise_monitor_handles+0xa8>)
 800ac1c:	00da      	lsls	r2, r3, #3
 800ac1e:	3301      	adds	r3, #1
 800ac20:	50a9      	str	r1, [r5, r2]
 800ac22:	2b14      	cmp	r3, #20
 800ac24:	d1fa      	bne.n	800ac1c <initialise_monitor_handles+0x28>
 800ac26:	f7ff ffd9 	bl	800abdc <_has_ext_stdout_stderr>
 800ac2a:	2800      	cmp	r0, #0
 800ac2c:	d018      	beq.n	800ac60 <initialise_monitor_handles+0x6c>
 800ac2e:	4b19      	ldr	r3, [pc, #100]	; (800ac94 <initialise_monitor_handles+0xa0>)
 800ac30:	2701      	movs	r7, #1
 800ac32:	9301      	str	r3, [sp, #4]
 800ac34:	2303      	movs	r3, #3
 800ac36:	60a3      	str	r3, [r4, #8]
 800ac38:	3301      	adds	r3, #1
 800ac3a:	6063      	str	r3, [r4, #4]
 800ac3c:	1c38      	adds	r0, r7, #0
 800ac3e:	1c21      	adds	r1, r4, #0
 800ac40:	beab      	bkpt	0x00ab
 800ac42:	1c06      	adds	r6, r0, #0
 800ac44:	4b16      	ldr	r3, [pc, #88]	; (800aca0 <initialise_monitor_handles+0xac>)
 800ac46:	4a13      	ldr	r2, [pc, #76]	; (800ac94 <initialise_monitor_handles+0xa0>)
 800ac48:	601e      	str	r6, [r3, #0]
 800ac4a:	2303      	movs	r3, #3
 800ac4c:	9201      	str	r2, [sp, #4]
 800ac4e:	60a3      	str	r3, [r4, #8]
 800ac50:	3305      	adds	r3, #5
 800ac52:	6063      	str	r3, [r4, #4]
 800ac54:	1c38      	adds	r0, r7, #0
 800ac56:	1c21      	adds	r1, r4, #0
 800ac58:	beab      	bkpt	0x00ab
 800ac5a:	1c04      	adds	r4, r0, #0
 800ac5c:	4b11      	ldr	r3, [pc, #68]	; (800aca4 <initialise_monitor_handles+0xb0>)
 800ac5e:	601c      	str	r4, [r3, #0]
 800ac60:	4f10      	ldr	r7, [pc, #64]	; (800aca4 <initialise_monitor_handles+0xb0>)
 800ac62:	683b      	ldr	r3, [r7, #0]
 800ac64:	3301      	adds	r3, #1
 800ac66:	d102      	bne.n	800ac6e <initialise_monitor_handles+0x7a>
 800ac68:	4b0d      	ldr	r3, [pc, #52]	; (800aca0 <initialise_monitor_handles+0xac>)
 800ac6a:	681b      	ldr	r3, [r3, #0]
 800ac6c:	603b      	str	r3, [r7, #0]
 800ac6e:	2400      	movs	r4, #0
 800ac70:	4b09      	ldr	r3, [pc, #36]	; (800ac98 <initialise_monitor_handles+0xa4>)
 800ac72:	606c      	str	r4, [r5, #4]
 800ac74:	681b      	ldr	r3, [r3, #0]
 800ac76:	602b      	str	r3, [r5, #0]
 800ac78:	f7ff ffb0 	bl	800abdc <_has_ext_stdout_stderr>
 800ac7c:	42a0      	cmp	r0, r4
 800ac7e:	d006      	beq.n	800ac8e <initialise_monitor_handles+0x9a>
 800ac80:	4b07      	ldr	r3, [pc, #28]	; (800aca0 <initialise_monitor_handles+0xac>)
 800ac82:	60ec      	str	r4, [r5, #12]
 800ac84:	681b      	ldr	r3, [r3, #0]
 800ac86:	616c      	str	r4, [r5, #20]
 800ac88:	60ab      	str	r3, [r5, #8]
 800ac8a:	683b      	ldr	r3, [r7, #0]
 800ac8c:	612b      	str	r3, [r5, #16]
 800ac8e:	b005      	add	sp, #20
 800ac90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac92:	46c0      	nop			; (mov r8, r8)
 800ac94:	0800c31f 	.word	0x0800c31f
 800ac98:	20000458 	.word	0x20000458
 800ac9c:	20000460 	.word	0x20000460
 800aca0:	2000045c 	.word	0x2000045c
 800aca4:	20000454 	.word	0x20000454

0800aca8 <_gettimeofday>:
 800aca8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800acaa:	0005      	movs	r5, r0
 800acac:	000e      	movs	r6, r1
 800acae:	2800      	cmp	r0, #0
 800acb0:	d009      	beq.n	800acc6 <_gettimeofday+0x1e>
 800acb2:	2700      	movs	r7, #0
 800acb4:	2411      	movs	r4, #17
 800acb6:	1c20      	adds	r0, r4, #0
 800acb8:	1c39      	adds	r1, r7, #0
 800acba:	beab      	bkpt	0x00ab
 800acbc:	1c04      	adds	r4, r0, #0
 800acbe:	602c      	str	r4, [r5, #0]
 800acc0:	17e4      	asrs	r4, r4, #31
 800acc2:	606c      	str	r4, [r5, #4]
 800acc4:	60af      	str	r7, [r5, #8]
 800acc6:	2e00      	cmp	r6, #0
 800acc8:	d002      	beq.n	800acd0 <_gettimeofday+0x28>
 800acca:	2300      	movs	r3, #0
 800accc:	6033      	str	r3, [r6, #0]
 800acce:	6073      	str	r3, [r6, #4]
 800acd0:	2000      	movs	r0, #0
 800acd2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800acd4 <_isatty>:
 800acd4:	b570      	push	{r4, r5, r6, lr}
 800acd6:	f7ff fd63 	bl	800a7a0 <findslot>
 800acda:	2509      	movs	r5, #9
 800acdc:	1e04      	subs	r4, r0, #0
 800acde:	d104      	bne.n	800acea <_isatty+0x16>
 800ace0:	f7fb f802 	bl	8005ce8 <__errno>
 800ace4:	6005      	str	r5, [r0, #0]
 800ace6:	0020      	movs	r0, r4
 800ace8:	bd70      	pop	{r4, r5, r6, pc}
 800acea:	1c28      	adds	r0, r5, #0
 800acec:	1c21      	adds	r1, r4, #0
 800acee:	beab      	bkpt	0x00ab
 800acf0:	1c04      	adds	r4, r0, #0
 800acf2:	0020      	movs	r0, r4
 800acf4:	2c01      	cmp	r4, #1
 800acf6:	d0f7      	beq.n	800ace8 <_isatty+0x14>
 800acf8:	f7fa fff6 	bl	8005ce8 <__errno>
 800acfc:	2400      	movs	r4, #0
 800acfe:	0006      	movs	r6, r0
 800ad00:	2513      	movs	r5, #19
 800ad02:	1c28      	adds	r0, r5, #0
 800ad04:	1c21      	adds	r1, r4, #0
 800ad06:	beab      	bkpt	0x00ab
 800ad08:	1c05      	adds	r5, r0, #0
 800ad0a:	6035      	str	r5, [r6, #0]
 800ad0c:	e7eb      	b.n	800ace6 <_isatty+0x12>
	...

0800ad10 <floorf>:
 800ad10:	b570      	push	{r4, r5, r6, lr}
 800ad12:	0045      	lsls	r5, r0, #1
 800ad14:	086e      	lsrs	r6, r5, #1
 800ad16:	0e2d      	lsrs	r5, r5, #24
 800ad18:	3d7f      	subs	r5, #127	; 0x7f
 800ad1a:	0004      	movs	r4, r0
 800ad1c:	2d16      	cmp	r5, #22
 800ad1e:	dc24      	bgt.n	800ad6a <floorf+0x5a>
 800ad20:	2d00      	cmp	r5, #0
 800ad22:	da0e      	bge.n	800ad42 <floorf+0x32>
 800ad24:	4915      	ldr	r1, [pc, #84]	; (800ad7c <floorf+0x6c>)
 800ad26:	f7f5 fc8b 	bl	8000640 <__aeabi_fadd>
 800ad2a:	2100      	movs	r1, #0
 800ad2c:	f7f5 fbec 	bl	8000508 <__aeabi_fcmpgt>
 800ad30:	2800      	cmp	r0, #0
 800ad32:	d004      	beq.n	800ad3e <floorf+0x2e>
 800ad34:	2c00      	cmp	r4, #0
 800ad36:	da1f      	bge.n	800ad78 <floorf+0x68>
 800ad38:	2e00      	cmp	r6, #0
 800ad3a:	d000      	beq.n	800ad3e <floorf+0x2e>
 800ad3c:	4c10      	ldr	r4, [pc, #64]	; (800ad80 <floorf+0x70>)
 800ad3e:	1c20      	adds	r0, r4, #0
 800ad40:	e019      	b.n	800ad76 <floorf+0x66>
 800ad42:	4e10      	ldr	r6, [pc, #64]	; (800ad84 <floorf+0x74>)
 800ad44:	412e      	asrs	r6, r5
 800ad46:	4206      	tst	r6, r0
 800ad48:	d015      	beq.n	800ad76 <floorf+0x66>
 800ad4a:	490c      	ldr	r1, [pc, #48]	; (800ad7c <floorf+0x6c>)
 800ad4c:	f7f5 fc78 	bl	8000640 <__aeabi_fadd>
 800ad50:	2100      	movs	r1, #0
 800ad52:	f7f5 fbd9 	bl	8000508 <__aeabi_fcmpgt>
 800ad56:	2800      	cmp	r0, #0
 800ad58:	d0f1      	beq.n	800ad3e <floorf+0x2e>
 800ad5a:	2c00      	cmp	r4, #0
 800ad5c:	da03      	bge.n	800ad66 <floorf+0x56>
 800ad5e:	2380      	movs	r3, #128	; 0x80
 800ad60:	041b      	lsls	r3, r3, #16
 800ad62:	412b      	asrs	r3, r5
 800ad64:	18e4      	adds	r4, r4, r3
 800ad66:	43b4      	bics	r4, r6
 800ad68:	e7e9      	b.n	800ad3e <floorf+0x2e>
 800ad6a:	4b07      	ldr	r3, [pc, #28]	; (800ad88 <floorf+0x78>)
 800ad6c:	429e      	cmp	r6, r3
 800ad6e:	d902      	bls.n	800ad76 <floorf+0x66>
 800ad70:	1c01      	adds	r1, r0, #0
 800ad72:	f7f5 fc65 	bl	8000640 <__aeabi_fadd>
 800ad76:	bd70      	pop	{r4, r5, r6, pc}
 800ad78:	2400      	movs	r4, #0
 800ad7a:	e7e0      	b.n	800ad3e <floorf+0x2e>
 800ad7c:	7149f2ca 	.word	0x7149f2ca
 800ad80:	bf800000 	.word	0xbf800000
 800ad84:	007fffff 	.word	0x007fffff
 800ad88:	7f7fffff 	.word	0x7f7fffff

0800ad8c <_init>:
 800ad8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad8e:	46c0      	nop			; (mov r8, r8)
 800ad90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ad92:	bc08      	pop	{r3}
 800ad94:	469e      	mov	lr, r3
 800ad96:	4770      	bx	lr

0800ad98 <_fini>:
 800ad98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad9a:	46c0      	nop			; (mov r8, r8)
 800ad9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ad9e:	bc08      	pop	{r3}
 800ada0:	469e      	mov	lr, r3
 800ada2:	4770      	bx	lr
